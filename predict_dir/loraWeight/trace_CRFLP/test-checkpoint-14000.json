[
    {
        "user_id": "u865373042",
        "problem_id": "p02553",
        "submission1_id": "s756253659",
        "crp_content": "\n a,b,c,d = map(int,input().split(' '))\n-ans1 = a*c\n-ans2 = a*c\n-ans3 = b*c\n-ans4 = b*d\n \n print(max(ans1,ans2,ans3,ans4))\n",
        "origin_generated_text": "\n```\n a,b,c,d = map(int,input().split(' '))\n-ans1 = a*c\n-ans2 = a*c\n-ans3 = b*c\n-ans4 = b*d\n \n print(max(ans1,ans2,ans3,ans4))\n```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s698544930",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     updated = True\n     while updated:\n         updated = False\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             updated = updated or (u != Unreachs[i][-1])\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while True:\n             k = bisect(Unreachs[a], b) - 1\n             if k < 0:\n                 ans += 1\n                 break\n             ans += 2 ** k\n             a = Unreachs[a][k]\n         print(ans)\n     return 0\n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     updated = True\n     while updated:\n         updated = False\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             updated = updated or (u != Unreachs[i][-1])\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while True:\n             k = bisect(Unreachs[a], b) - 1\n             if k < 0:\n                 ans += 1\n                 break\n             ans += 2 ** k\n             a = Unreachs[a][k]\n         print(ans)\n     return 0\n \n main()\n```\n "
    },
    {
        "user_id": "u625963200",
        "problem_id": "p03477",
        "submission1_id": "s169321676",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n a,b,c,d=map(str,input().split())\n \n l=a+b\n r=c+d\n if l==r:\n   print('Balanced')\n elif l>r:\n-  print('Right')\n else:\n-  print('Left')\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n a,b,c,d=map(str,input().split())\n \n l=a+b\n r=c+d\n if l==r:\n   print('Balanced')\n elif l>r:\n-  print('Right')\n else:\n-  print('Left')\n```\n "
    },
    {
        "user_id": "u556610039",
        "problem_id": "p03998",
        "submission1_id": "s658643409",
        "crp_content": "\n a = input()\n b = input()\n c = input()\n countlist = [1, 0, 0]\n list = [\"a\", \"b\", \"c\"]\n turn = 0\n value = \"\"\n-for x in range(len(a) + len(b) + len(c)):\n-    \n-    if countlist[0] > len(a) or countlist[1] > len(b) or countlist[2] > len(c): break\n     if turn == 0: value = a[countlist[turn] - 1]\n     elif turn == 1: value = b[countlist[turn] - 1]\n     elif turn == 2: value = c[countlist[turn] - 1]\n         \n     turn = list.index(value)\n     countlist[turn] += 1\n-    print(countlist)\n \n if countlist[0] > len(a): print(\"A\")\n elif countlist[1] > len(b): print(\"B\")\n elif countlist[2] > len(c): print(\"C\")\n \n",
        "origin_generated_text": "\n```\n a = input()\n b = input()\n c = input()\n countlist = [1, 0, 0]\n list = [\"a\", \"b\", \"c\"]\n turn = 0\n value = \"\"\n-for x in range(len(a) + len(b) + len(c)):\n-    \n-    if countlist[0] > len(a) or countlist[1] > len(b) or countlist[2] > len(c): break\n     if turn == 0: value = a[countlist[turn] - 1]\n     elif turn == 1: value = b[countlist[turn] - 1]\n     elif turn == 2: value = c[countlist[turn] - 1]\n         \n     turn = list.index(value)\n     countlist[turn] += 1\n-    print(countlist)\n \n if countlist[0] > len(a): print(\"A\")\n elif countlist[1] > len(b): print(\"B\")\n elif countlist[2] > len(c): print(\"C\")\n \n```\n "
    },
    {
        "user_id": "u145145077",
        "problem_id": "p03103",
        "submission1_id": "s736214835",
        "crp_content": "\n n,m=map(int,input().split())\n ab=[list(map(int,input().split())) for i in range(n)]\n \n ab_sorted = sorted(ab, key=lambda x:(x[0], -x[1]))\n-print(ab_sorted)\n \n num = 0\n amount_of_money = 0\n for i in range(n):\n   buy = min(ab_sorted[i][1], m-num)\n   num += buy\n   amount_of_money += ab_sorted[i][0] * buy\n     \n   if num >= m:\n     print(amount_of_money)\n \n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n ab=[list(map(int,input().split())) for i in range(n)]\n \n ab_sorted = sorted(ab, key=lambda x:(x[0], -x[1]))\n-print(ab_sorted)\n \n num = 0\n amount_of_money = 0\n for i in range(n):\n   buy = min(ab_sorted[i][1], m-num)\n   num += buy\n   amount_of_money += ab_sorted[i][0] * buy\n     \n   if num >= m:\n     print(amount_of_money)\n \n```\n "
    },
    {
        "user_id": "u131634965",
        "problem_id": "p03416",
        "submission1_id": "s186318127",
        "crp_content": "\n a,b=map(int,input().split())\n count=0\n for i in range(a,b+1):\n     i=str(i)\n-    if i[:2]==i[4:]:\n         count+=1\n print(count)\n",
        "origin_generated_text": "\n```\n a,b=map(int,input().split())\n count=0\n for i in range(a,b+1):\n     i=str(i)\n-    if i[:2]==i[4:]:\n         count+=1\n print(count)\n```\n "
    },
    {
        "user_id": "u658987783",
        "problem_id": "p02887",
        "submission1_id": "s936914101",
        "crp_content": "\n n=int(input())\n s=input()\n \n count=0\n-for i in range(1,n-1):\n   if s[i-1]==s[i]:\n     count=count+1\n print(count)\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=input()\n \n count=0\n-for i in range(1,n-1):\n   if s[i-1]==s[i]:\n     count=count+1\n print(count)\n```\n "
    },
    {
        "user_id": "u719873358",
        "problem_id": "p02553",
        "submission1_id": "s566470120",
        "crp_content": "\n a, b, c, d = [int(x) for x in input().split()]\n-print(max(a*c,b*d,a*b,b*c)) \n \n",
        "origin_generated_text": "\n```\n a, b, c, d = [int(x) for x in input().split()]\n-print(max(a*c,b*d,a*b,b*c)) \n \n```\n "
    },
    {
        "user_id": "u264265458",
        "problem_id": "p03264",
        "submission1_id": "s567739781",
        "crp_content": "\n import math\n a=int(input())\n if a%2==0:\n-  print(int(a*a/4))\n else:\n-  print(math.ceil(a)*math.floor(a))\n",
        "origin_generated_text": "\n```\n import math\n a=int(input())\n if a%2==0:\n-  print(int(a*a/4))\n else:\n-  print(math.ceil(a)*math.floor(a))\n```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p02963",
        "submission1_id": "s695896139",
        "crp_content": "\n import sys\n input=sys.stdin.readline\n \n s=int(input())\n \n \n \n \n-if s<=10**9:\n-    print(0,0,1,0,0,s)\n-    exit()\n-\n-y=s\n-x=s%(10**9)\n-\n-print(0,0,10**9,1,x,y)\n-\n-\n \n",
        "origin_generated_text": "\n```\n import sys\n input=sys.stdin.readline\n \n s=int(input())\n \n \n \n \n-if s<=10**9:\n-    print(0,0,1,0,0,s)\n-    exit()\n-\n-y=s\n-x=s%(10**9)\n-\n-print(0,0,10**9,1,x,y)\n-\n-\n \n```\n "
    },
    {
        "user_id": "u834168862",
        "problem_id": "p02917",
        "submission1_id": "s373054515",
        "crp_content": "\n n = int(input())\n b_list = [int(i) for i in input().split()]\n a_list = [0] * n\n-before_val = 0\n for i in range(n-1):\n     target = b_list[i]\n-    if a_list[i] == before_val:\n-        a_list[i], a_list[i+1] = b_list[i], b_list[i]\n-    else:\n-        a_list[i+1] = b_list[i]\n print(sum(a_list))\n",
        "origin_generated_text": "\n```\n n = int(input())\n b_list = [int(i) for i in input().split()]\n a_list = [0] * n\n-before_val = 0\n for i in range(n-1):\n     target = b_list[i]\n-    if a_list[i] == before_val:\n-        a_list[i], a_list[i+1] = b_list[i], b_list[i]\n-    else:\n-        a_list[i+1] = b_list[i]\n print(sum(a_list))\n```\n "
    },
    {
        "user_id": "u337802798",
        "problem_id": "p02633",
        "submission1_id": "s831108651",
        "crp_content": "\n def gcd(a,b):\n   if b == 0:return a\n   return gcd(b,a%b)\n \n a = int(input())\n-print(360/gcd(360,a))\n",
        "origin_generated_text": "\n```\n def gcd(a,b):\n   if b == 0:return a\n   return gcd(b,a%b)\n \n a = int(input())\n-print(360/gcd(360,a))\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03677",
        "submission1_id": "s446592218",
        "crp_content": "\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n a = [b-1 for b in a]\n imos = [0 for _ in range(m+1)]\n base = 0\n for i in range(n-1):\n \tx, y = a[i], a[i+1]\n \tz, w = (x+2)%m, (y+1)%m\n \tif w == 0:\n \t\tw = m\n \tif z < w:\n \t\timos[z] += 1\n \t\timos[w] -= w-z+1\n \t\tif w < m:\n \t\t\timos[w+1] += w-z\n \telse:\n \t\timos[z] += 1\n \t\timos[m] -= m-z+1\n \t\timos[0] += 1\n \t\tbase += m-z\n \t\timos[w] -= m+w-z+1\n \t\tif w < m:\n \t\t\timos[w+1] += m+w-z\n \n \n for i in range(m):\n \timos[i+1] += imos[i]\n imos[0] += base\n for i in range(m):\n \timos[i+1] += imos[i]\n res = max(imos[:m])\n ans = 0\n for i in range(n-1):\n \tif a[i+1] > a[i]:\n \t\tans += a[i+1] - a[i]\n \telse:\n \t\tans += a[i+1] + m - a[i]\n \n ans -= res\n print(ans)\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n a = [b-1 for b in a]\n imos = [0 for _ in range(m+1)]\n base = 0\n for i in range(n-1):\n \tx, y = a[i], a[i+1]\n \tz, w = (x+2)%m, (y+1)%m\n \tif w == 0:\n \t\tw = m\n \tif z < w:\n \t\timos[z] += 1\n \t\timos[w] -= w-z+1\n \t\tif w < m:\n \t\t\timos[w+1] += w-z\n \telse:\n \t\timos[z] += 1\n \t\timos[m] -= m-z+1\n \t\timos[0] += 1\n \t\tbase += m-z\n \t\timos[w] -= m+w-z+1\n \t\tif w < m:\n \t\t\timos[w+1] += m+w-z\n \n \n for i in range(m):\n \timos[i+1] += imos[i]\n imos[0] += base\n for i in range(m):\n \timos[i+1] += imos[i]\n res = max(imos[:m])\n ans = 0\n for i in range(n-1):\n \tif a[i+1] > a[i]:\n \t\tans += a[i+1] - a[i]\n \telse:\n \t\tans += a[i+1] + m - a[i]\n \n ans -= res\n print(ans)\n```\n "
    },
    {
        "user_id": "u591016708",
        "problem_id": "p03479",
        "submission1_id": "s454264038",
        "crp_content": "\n def solve(X, Y):\n-    tmp = X\n     ans = 0\n-    while tmp < Y:\n         ans += 1\n         tmp *= 2\n     return ans\n \n def main():\n     X, Y = map(int, input().split())\n     ans = solve(X, Y)\n     print(ans)\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n def solve(X, Y):\n-    tmp = X\n     ans = 0\n-    while tmp < Y:\n         ans += 1\n         tmp *= 2\n     return ans\n \n def main():\n     X, Y = map(int, input().split())\n     ans = solve(X, Y)\n     print(ans)\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u636311816",
        "problem_id": "p03326",
        "submission1_id": "s502606845",
        "crp_content": "\n import copy\n n,m = map(int,input().split())\n \n \n scores = list()\n for i in range(n):\n     score = list(map(int,input().split()))\n     scores.append(score)\n \n smax=None\n for x in range(2):\n     scores_=copy.deepcopy(scores)\n     \n     for i in range(n):\n         scores_[i][0] = pow(-1,x)*scores[i][0]\n     for y in range(2):\n         for i in range(n):\n             scores_[i][1] = pow(-1,x)*scores[i][1]\n         for z in range(2):\n             for i in range(n):\n                 scores_[i][2] = pow(-1,x)*scores[i][2]\n         \n             sumlist=list()\n             for i in range(n):\n                 sumlist.append(sum(scores_[i]))\n             sumlist.sort()\n             tmp=0\n             \n             for eat in range(m):\n                 tmp+=sumlist[-1]\n                 sumlist.pop()\n             if smax==None or tmp>smax:\n                 smax=tmp\n print(smax)\n",
        "origin_generated_text": "\n```\n import copy\n n,m = map(int,input().split())\n \n \n scores = list()\n for i in range(n):\n     score = list(map(int,input().split()))\n     scores.append(score)\n \n smax=None\n for x in range(2):\n     scores_=copy.deepcopy(scores)\n     \n     for i in range(n):\n         scores_[i][0] = pow(-1,x)*scores[i][0]\n     for y in range(2):\n         for i in range(n):\n             scores_[i][1] = pow(-1,x)*scores[i][1]\n         for z in range(2):\n             for i in range(n):\n                 scores_[i][2] = pow(-1,x)*scores[i][2]\n         \n             sumlist=list()\n             for i in range(n):\n                 sumlist.append(sum(scores_[i]))\n             sumlist.sort()\n             tmp=0\n             \n             for eat in range(m):\n                 tmp+=sumlist[-1]\n                 sumlist.pop()\n             if smax==None or tmp>smax:\n                 smax=tmp\n print(smax)\n```\n "
    },
    {
        "user_id": "u309039873",
        "problem_id": "p02580",
        "submission1_id": "s295803083",
        "crp_content": "\n import sys\n HK,WK,M = map(int, input().split())\n W = [0] * (WK + 1)\n H = [0] * (HK + 1)\n HW = {}\n \n \n for i in range(M):\n     h, w = map(int, input().split())\n \n     H[h] += 1\n     W[w] += 1\n \n     HW[(h,w)] = 1\n \n answer = 0\n HMAX = max(H)\n WMAX = max(W)\n \n HEMAX = H.count(HMAX)\n WEMAX = W.count(WMAX)\n if HEMAX * WEMAX > M:\n     print(HMAX + WMAX)\n     sys.exit(0)\n \n HMAXES = [i for i, _ in enumerate(H) if _ == HMAX]\n WMAXES = [i for i, _ in enumerate(W) if _ == WMAX]\n \n \n answer = HMAX + WMAX\n for h in HMAXES:\n     for w in WMAXES:\n         if (h,w) in HW:\n             print(answer)\n             sys.exit(0)\n-print(answer-1)\n",
        "origin_generated_text": "\n```\n import sys\n HK,WK,M = map(int, input().split())\n W = [0] * (WK + 1)\n H = [0] * (HK + 1)\n HW = {}\n \n \n for i in range(M):\n     h, w = map(int, input().split())\n \n     H[h] += 1\n     W[w] += 1\n \n     HW[(h,w)] = 1\n \n answer = 0\n HMAX = max(H)\n WMAX = max(W)\n \n HEMAX = H.count(HMAX)\n WEMAX = W.count(WMAX)\n if HEMAX * WEMAX > M:\n     print(HMAX + WMAX)\n     sys.exit(0)\n \n HMAXES = [i for i, _ in enumerate(H) if _ == HMAX]\n WMAXES = [i for i, _ in enumerate(W) if _ == WMAX]\n \n \n answer = HMAX + WMAX\n for h in HMAXES:\n     for w in WMAXES:\n         if (h,w) in HW:\n             print(answer)\n             sys.exit(0)\n-print(answer-1)\n```\n "
    },
    {
        "user_id": "u393253137",
        "problem_id": "p03041",
        "submission1_id": "s314743347",
        "crp_content": "\n n,k=map(int,input().split())\n s=input()\n-print(s.replace(s[k-1],s[k-1].lower()))\n",
        "origin_generated_text": "\n```\n n,k=map(int,input().split())\n s=input()\n-print(s.replace(s[k-1],s[k-1].lower()))\n```\n "
    },
    {
        "user_id": "u846150137",
        "problem_id": "p03303",
        "submission1_id": "s706762158",
        "crp_content": "\n a=input().strip()\n-print(a[::3])\n",
        "origin_generated_text": "\n```\n a=input().strip()\n-print(a[::3])\n```\n "
    },
    {
        "user_id": "u954170646",
        "problem_id": "p02625",
        "submission1_id": "s672544659",
        "crp_content": "\n n, m = map(int, input().split())\n-a,M,d=1,10**9+7,[1]*(n+1)\n for i in range(n):\n   d[i+1]=((m-n+1)*d[i]+i*d[i-1])%M\n-  a=a*(m-1)%M\n print(a*d[-1]%M)\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n-a,M,d=1,10**9+7,[1]*(n+1)\n for i in range(n):\n   d[i+1]=((m-n+1)*d[i]+i*d[i-1])%M\n-  a=a*(m-1)%M\n print(a*d[-1]%M)\n```\n "
    },
    {
        "user_id": "u025287757",
        "problem_id": "p02642",
        "submission1_id": "s434393350",
        "crp_content": "\n inf =  1000005\n def main():\n   N =  int(input())\n   a = list(map(int, input().split()))\n   a.sort()\n   detect = [0] *inf\n   for i in range(N):\n     detect[a[i]] += 1\n     if detect[a[i]] >= 2:\n       continue\n     j = 2\n-    while (a[i]*j < inf):\n       if detect[a[i]*j] >= 2:\n         break\n       else:\n         detect[a[i]*j] += 2\n         j+=1\n   ans = 0\n   for i in range(N):\n     if detect[a[i]] == 1:\n       ans += 1\n   print(ans)\n   \n if __name__ == \"__main__\":\n   main()\n",
        "origin_generated_text": "\n```\n inf =  1000005\n def main():\n   N =  int(input())\n   a = list(map(int, input().split()))\n   a.sort()\n   detect = [0] *inf\n   for i in range(N):\n     detect[a[i]] += 1\n     if detect[a[i]] >= 2:\n       continue\n     j = 2\n-    while (a[i]*j < inf):\n       if detect[a[i]*j] >= 2:\n         break\n       else:\n         detect[a[i]*j] += 2\n         j+=1\n   ans = 0\n   for i in range(N):\n     if detect[a[i]] == 1:\n       ans += 1\n   print(ans)\n   \n if __name__ == \"__main__\":\n   main()\n```\n "
    },
    {
        "user_id": "u865067466",
        "problem_id": "p03079",
        "submission1_id": "s395698137",
        "crp_content": "\n A, B, C = map(int, input().split(' '))\n \n-if A**2 + B**2 == C**2:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n A, B, C = map(int, input().split(' '))\n \n-if A**2 + B**2 == C**2:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u442855260",
        "problem_id": "p02730",
        "submission1_id": "s027941396",
        "crp_content": "\n S=input()\n N=len(S)\n i=0\n \n if((N-1)/2%2==1):\n     while (i<((N-1)/2-1)/2):\n-        print(S[i],S[int((N-1)/2-i-1)],S[int((N-1)/2+1+i)],S[int(N-1-i)])\n         if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n             i+=1\n         else:\n             break;\n     if(i==int((N-1)/2-1)/2):\n         print('Yes')\n     else:\n         print('No')\n     \n else:\n     while (i<=(N-1)/4):\n-        print(S[i],S[int((N-1)/2-i-1)],S[int((N-1)/2+1+i)],S[int(N-1-i)])\n         if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==[int(N-1-i)]) ):\n             i+=1\n         else:\n             break;\n     if(i==(N-1)/4):\n         print('Yes')\n     else:\n         print('No')\n",
        "origin_generated_text": "\n```\n S=input()\n N=len(S)\n i=0\n \n if((N-1)/2%2==1):\n     while (i<((N-1)/2-1)/2):\n-        print(S[i],S[int((N-1)/2-i-1)],S[int((N-1)/2+1+i)],S[int(N-1-i)])\n         if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n             i+=1\n         else:\n             break;\n     if(i==int((N-1)/2-1)/2):\n         print('Yes')\n     else:\n         print('No')\n     \n else:\n     while (i<=(N-1)/4):\n-        print(S[i],S[int((N-1)/2-i-1)],S[int((N-1)/2+1+i)],S[int(N-1-i)])\n         if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==[int(N-1-i)]) ):\n             i+=1\n         else:\n             break;\n     if(i==(N-1)/4):\n         print('Yes')\n     else:\n         print('No')\n```\n "
    },
    {
        "user_id": "u995062424",
        "problem_id": "p03992",
        "submission1_id": "s840033928",
        "crp_content": "\n s=input()\n-print(s[:4]+' '+s[5:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4]+' '+s[5:])\n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03546",
        "submission1_id": "s847534940",
        "crp_content": "\n from collections import defaultdict\n from collections import deque\n h, w = map(int, input().split())\n c = []\n for i in range(10):\n   s = list(map(int, input().split()))\n   c.append(s)\n \n a = []\n for i in range(h):\n   b = list(map(int, input().split()))\n   a.append(b)\n \n \n d = c\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n-      d[i][j] = min(d[i][k]+d[k][j], d[i][j])\n \n ans = 0\n \n for i in range(h):\n   for j in range(w):\n     if a[i][j] == -1:\n       continue\n     x = a[i][j]\n     ans += d[x][1]\n print (ans)\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n from collections import deque\n h, w = map(int, input().split())\n c = []\n for i in range(10):\n   s = list(map(int, input().split()))\n   c.append(s)\n \n a = []\n for i in range(h):\n   b = list(map(int, input().split()))\n   a.append(b)\n \n \n d = c\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n-      d[i][j] = min(d[i][k]+d[k][j], d[i][j])\n \n ans = 0\n \n for i in range(h):\n   for j in range(w):\n     if a[i][j] == -1:\n       continue\n     x = a[i][j]\n     ans += d[x][1]\n print (ans)\n```\n "
    },
    {
        "user_id": "u733337827",
        "problem_id": "p03998",
        "submission1_id": "s599836234",
        "crp_content": "\n Sa = list(input())\n Sb = list(input())\n Sc = list(input())\n l = [len(Sa), len(Sb), len(Sc)]\n s = [Sa, Sb, Sc]\n p = 0\n while True:\n     l[p] -= 1\n     if l[p] <= 0:\n         print(\"ABC\"[p])\n         break\n     else:\n-        p = \"abc\".find(s[p][l[p] - len(s[p]) + 1])\n",
        "origin_generated_text": "\n```\n Sa = list(input())\n Sb = list(input())\n Sc = list(input())\n l = [len(Sa), len(Sb), len(Sc)]\n s = [Sa, Sb, Sc]\n p = 0\n while True:\n     l[p] -= 1\n     if l[p] <= 0:\n         print(\"ABC\"[p])\n         break\n     else:\n-        p = \"abc\".find(s[p][l[p] - len(s[p]) + 1])\n```\n "
    },
    {
        "user_id": "u702582248",
        "problem_id": "p03080",
        "submission1_id": "s698120255",
        "crp_content": "\n n=int(input())\n s=input()\n \n-if n - len([i for i in s if i == 'R']) > 0:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=input()\n \n-if n - len([i for i in s if i == 'R']) > 0:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u724687935",
        "problem_id": "p03039",
        "submission1_id": "s524515759",
        "crp_content": "\n MOD = 10 ** 9 + 7\n \n \n def prepare(n):\n     global MOD\n     modFacts = [0] * (n + 1)\n     modFacts[0] = 1\n     for i in range(n):\n         modFacts[i + 1] = (modFacts[i] * (i + 1)) % MOD\n \n     invs = [1] * (n + 1)\n     invs[n] = pow(modFacts[n], MOD - 2, MOD)\n     for i in range(n, 1, -1):\n         invs[i - 1] = (invs[i] * i) % MOD\n \n     return modFacts, invs\n \n \n def modCombi(n, r):\n     global MOD\n     return (modFacts[n] * invs[n - r] * invs[r]) % MOD\n \n \n N, M, K = map(int, input().split())\n modFacts, invs = prepare(N * M)\n var = modCombi(N * M - 2, K - 2)\n \n ans = 0\n if N < M:\n     N, M = M, N\n L = [0] * (N + 1)\n for i in range(1, N + 1):\n     L[i] = L[i - 1] + i\n for x in range(1, N + 1):\n     Sx = (M * (L[N - x] + L[x - 1])) % MOD\n     Sy = (N * (L[M - x] + L[x - 1])) % MOD\n     ans += ((Sx + Sy) * M) % MOD\n \n print((ans * invs[2] * var) % MOD)\n \n \n",
        "origin_generated_text": "\n```\n MOD = 10 ** 9 + 7\n \n \n def prepare(n):\n     global MOD\n     modFacts = [0] * (n + 1)\n     modFacts[0] = 1\n     for i in range(n):\n         modFacts[i + 1] = (modFacts[i] * (i + 1)) % MOD\n \n     invs = [1] * (n + 1)\n     invs[n] = pow(modFacts[n], MOD - 2, MOD)\n     for i in range(n, 1, -1):\n         invs[i - 1] = (invs[i] * i) % MOD\n \n     return modFacts, invs\n \n \n def modCombi(n, r):\n     global MOD\n     return (modFacts[n] * invs[n - r] * invs[r]) % MOD\n \n \n N, M, K = map(int, input().split())\n modFacts, invs = prepare(N * M)\n var = modCombi(N * M - 2, K - 2)\n \n ans = 0\n if N < M:\n     N, M = M, N\n L = [0] * (N + 1)\n for i in range(1, N + 1):\n     L[i] = L[i - 1] + i\n for x in range(1, N + 1):\n     Sx = (M * (L[N - x] + L[x - 1])) % MOD\n     Sy = (N * (L[M - x] + L[x - 1])) % MOD\n     ans += ((Sx + Sy) * M) % MOD\n \n print((ans * invs[2] * var) % MOD)\n \n \n```\n "
    },
    {
        "user_id": "u531599639",
        "problem_id": "p02640",
        "submission1_id": "s657574563",
        "crp_content": "\n x,y = map(int, input().split())\n ans=0\n for i in range(x):\n-  if (y-i*2)/2<=x:\n     ans=1\n if ans:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n x,y = map(int, input().split())\n ans=0\n for i in range(x):\n-  if (y-i*2)/2<=x:\n     ans=1\n if ans:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u723711163",
        "problem_id": "p03752",
        "submission1_id": "s511720319",
        "crp_content": "\n N,K = map(int,input().split())\n A = list(map(int,input().split()))\n \n res = float('inf')\n \n for i in range(1<<N):\n   a = A[::]\n   paint = 0\n   cur = None\n   add = 0\n   for j in range(N):\n     if (i>>j)&1:\n       paint += 1\n       h = a[j]\n       if cur is None:\n         if j>0 and a[j-1]>=h:\n           break\n         else:\n           cur = h\n       else:\n         min_h = max(cur, a[j-1])\n         if h < min_h:\n           add += (min_h+1) - h\n           cur = min_h + 1\n           a[j] = cur\n \n   if paint == K:\n     res = min(res, add)\n \n print(res)\n \n",
        "origin_generated_text": "\n```\n N,K = map(int,input().split())\n A = list(map(int,input().split()))\n \n res = float('inf')\n \n for i in range(1<<N):\n   a = A[::]\n   paint = 0\n   cur = None\n   add = 0\n   for j in range(N):\n     if (i>>j)&1:\n       paint += 1\n       h = a[j]\n       if cur is None:\n         if j>0 and a[j-1]>=h:\n           break\n         else:\n           cur = h\n       else:\n         min_h = max(cur, a[j-1])\n         if h < min_h:\n           add += (min_h+1) - h\n           cur = min_h + 1\n           a[j] = cur\n \n   if paint == K:\n     res = min(res, add)\n \n print(res)\n \n```\n "
    },
    {
        "user_id": "u073709667",
        "problem_id": "p02385",
        "submission1_id": "s347124527",
        "crp_content": "\n def N():\n     num=Dice[0]\n     Dice[0]=Dice[1]\n     Dice[1]=Dice[5]\n     Dice[5]=Dice[4]\n     Dice[4]=num\n def E():\n     num=Dice[0]\n     Dice[0]=Dice[3]\n     Dice[3]=Dice[5]\n     Dice[5]=Dice[2]\n     Dice[2]=num\n def W():\n     num=Dice[0]\n     Dice[0]=Dice[2]\n     Dice[2]=Dice[5]\n     Dice[5]=Dice[3]\n     Dice[3]=num\n def S():\n     num=Dice[0]\n     Dice[0]=Dice[4]\n     Dice[4]=Dice[5]\n     Dice[5]=Dice[1]\n     Dice[1]=num\n Dice=[int(i) for i in input().split()]\n Dice2=[int(i) for i in input().split()]\n-if (Dice[0] in Dice2)==False:\n     print('No')\n else:\n     count=0\n     for j in range(6):\n         if count%2==0:\n             N()\n         else:\n             W()\n         count+=1\n         for i in range(4):\n             N()\n             W()\n             S()\n             if Dice==Dice2:\n                 break\n     if Dice==Dice2:\n         print('Yes')\n     else:\n         print('No')\n",
        "origin_generated_text": "\n```\n def N():\n     num=Dice[0]\n     Dice[0]=Dice[1]\n     Dice[1]=Dice[5]\n     Dice[5]=Dice[4]\n     Dice[4]=num\n def E():\n     num=Dice[0]\n     Dice[0]=Dice[3]\n     Dice[3]=Dice[5]\n     Dice[5]=Dice[2]\n     Dice[2]=num\n def W():\n     num=Dice[0]\n     Dice[0]=Dice[2]\n     Dice[2]=Dice[5]\n     Dice[5]=Dice[3]\n     Dice[3]=num\n def S():\n     num=Dice[0]\n     Dice[0]=Dice[4]\n     Dice[4]=Dice[5]\n     Dice[5]=Dice[1]\n     Dice[1]=num\n Dice=[int(i) for i in input().split()]\n Dice2=[int(i) for i in input().split()]\n-if (Dice[0] in Dice2)==False:\n     print('No')\n else:\n     count=0\n     for j in range(6):\n         if count%2==0:\n             N()\n         else:\n             W()\n         count+=1\n         for i in range(4):\n             N()\n             W()\n             S()\n             if Dice==Dice2:\n                 break\n     if Dice==Dice2:\n         print('Yes')\n     else:\n         print('No')\n```\n "
    },
    {
        "user_id": "u530646758",
        "problem_id": "p02887",
        "submission1_id": "s019045363",
        "crp_content": "\n N = int(input())\n S = str(input())\n fusion = []\n for i in range(N-1):\n     if S[i+1] != S[i]:\n         fusion +=(S[i])\n fusion +=S[N-1]\n-print(fusion)\n print(len(fusion))\n",
        "origin_generated_text": "\n```\n N = int(input())\n S = str(input())\n fusion = []\n for i in range(N-1):\n     if S[i+1] != S[i]:\n         fusion +=(S[i])\n fusion +=S[N-1]\n-print(fusion)\n print(len(fusion))\n```\n "
    },
    {
        "user_id": "u627147604",
        "problem_id": "p03416",
        "submission1_id": "s229289554",
        "crp_content": "\n def is_palindromic(n):\n     if str(n) == str(n)[::-1]:\n-        True\n     else:\n-        False\n \n A,B = map(int, input().split())\n-for i in range(A, B):\n     if is_palindromic(i):\n-        print(i)\n",
        "origin_generated_text": "\n```\n def is_palindromic(n):\n     if str(n) == str(n)[::-1]:\n-        True\n     else:\n-        False\n \n A,B = map(int, input().split())\n-for i in range(A, B):\n     if is_palindromic(i):\n-        print(i)\n```\n "
    },
    {
        "user_id": "u183256664",
        "problem_id": "p02887",
        "submission1_id": "s827332777",
        "crp_content": "\n N = int(input())\n S = input()\n tmp = ''\n count = 0\n for s in S:\n     if s == tmp:\n         count += 1\n-    tmp = s\n print(count)\n",
        "origin_generated_text": "\n```\n N = int(input())\n S = input()\n tmp = ''\n count = 0\n for s in S:\n     if s == tmp:\n         count += 1\n-    tmp = s\n print(count)\n```\n "
    },
    {
        "user_id": "u085186789",
        "problem_id": "p03303",
        "submission1_id": "s079510776",
        "crp_content": "\n S = input()\n w = int(input())\n for i in range(len(S)):\n-  if (i + 1) % w == 1:\n     print(S[i], end = \"\")\n",
        "origin_generated_text": "\n```\n S = input()\n w = int(input())\n for i in range(len(S)):\n-  if (i + 1) % w == 1:\n     print(S[i], end = \"\")\n```\n "
    },
    {
        "user_id": "u464205401",
        "problem_id": "p02959",
        "submission1_id": "s994674789",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n cnt=0\n for i in range(n):\n   if a[i]>=b[i]:\n     cnt+=b[i]\n   else:\n     if a[i+1]-(b[i]-a[i])>=0:\n       cnt+=b[i]\n       a[i+1]=a[i+1]-(b[i]-a[i])\n     else:\n       cnt+=a[i]+a[i+1]\n print(cnt)\n       \n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n cnt=0\n for i in range(n):\n   if a[i]>=b[i]:\n     cnt+=b[i]\n   else:\n     if a[i+1]-(b[i]-a[i])>=0:\n       cnt+=b[i]\n       a[i+1]=a[i+1]-(b[i]-a[i])\n     else:\n       cnt+=a[i]+a[i+1]\n print(cnt)\n       \n```\n "
    },
    {
        "user_id": "u392319141",
        "problem_id": "p03296",
        "submission1_id": "s205767815",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n \n ans = 0\n-for i in range(1, N - 1):\n     if A[i - 1] == A[i]:\n         ans += 1\n         A[i] = max(A[i - 1], A[i + 1]) + 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n \n ans = 0\n-for i in range(1, N - 1):\n     if A[i - 1] == A[i]:\n         ans += 1\n         A[i] = max(A[i - 1], A[i + 1]) + 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u797127558",
        "problem_id": "p03206",
        "submission1_id": "s951704579",
        "crp_content": "\n a=int(input())\n-print(\"Christmas\",\"Eve\"*3)\n",
        "origin_generated_text": "\n```\n a=int(input())\n-print(\"Christmas\",\"Eve\"*3)\n```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03796",
        "submission1_id": "s113138591",
        "crp_content": "\n mod=1000000007\n \n def P(x):\n     ans=1\n     for i in range(x):\n         ans=ans*(i+1)%mod\n     \n     return(ans)\n \n n=int(input())\n \n-print(n)\n",
        "origin_generated_text": "\n```\n mod=1000000007\n \n def P(x):\n     ans=1\n     for i in range(x):\n         ans=ans*(i+1)%mod\n     \n     return(ans)\n \n n=int(input())\n \n-print(n)\n```\n "
    },
    {
        "user_id": "u343454379",
        "problem_id": "p03734",
        "submission1_id": "s419095534",
        "crp_content": "\n import bisect\n N,W=map(int,input().split())\n wv=[list(map(int,input().split())) for _ in range(N)]\n w1=wv[0][0]\n \n-Wlist=[0]+[j*(w1+i) for j in range(1,N+1) for i in range(3*j+1)]\n-Wlist=sorted(set(Wlist))\n-LW=len(Wlist)\n dp=[[0]*LW for _ in range(N+1)]\n \n \n for i in range(1,N+1):\n   w,v=wv[i-1]\n   for j in range(LW):\n     if w<=Wlist[j]:      \n       ind=bisect.bisect_right(Wlist,Wlist[j]-w)-1\n       dp[i][j]=max(dp[i-1][j],dp[i-1][ind]+v)\n     else:\n       dp[i][j]=dp[i-1][j]\n \n-ind=bisect.bisect_right(Wlist,W)-1\n print(dp[N][ind])\n",
        "origin_generated_text": "\n```\n import bisect\n N,W=map(int,input().split())\n wv=[list(map(int,input().split())) for _ in range(N)]\n w1=wv[0][0]\n \n-Wlist=[0]+[j*(w1+i) for j in range(1,N+1) for i in range(3*j+1)]\n-Wlist=sorted(set(Wlist))\n-LW=len(Wlist)\n dp=[[0]*LW for _ in range(N+1)]\n \n \n for i in range(1,N+1):\n   w,v=wv[i-1]\n   for j in range(LW):\n     if w<=Wlist[j]:      \n       ind=bisect.bisect_right(Wlist,Wlist[j]-w)-1\n       dp[i][j]=max(dp[i-1][j],dp[i-1][ind]+v)\n     else:\n       dp[i][j]=dp[i-1][j]\n \n-ind=bisect.bisect_right(Wlist,W)-1\n print(dp[N][ind])\n```\n "
    },
    {
        "user_id": "u119714109",
        "problem_id": "p03326",
        "submission1_id": "s972054209",
        "crp_content": "\n import sys\n \n stdin = sys.stdin\n \n ni = lambda: int(ns())\n na = lambda: list(map(int, stdin.readline().split()))\n ns = lambda: stdin.readline()\n \n n, m = na()\n \n zs = []\n for i in range(n):\n     zs.append(na())\n \n-ans = 0\n-for u in (-1, 1):\n-    for v in (-1, 1):\n-        for w in (-1, 1):\n-            vs = []\n-            for z in zs:\n-                vs.append(z[0]*u+z[1]*v+z[2]*w)\n-            vs.sort()\n-            ans = max(ans, sum(vs[-m:]))\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n \n stdin = sys.stdin\n \n ni = lambda: int(ns())\n na = lambda: list(map(int, stdin.readline().split()))\n ns = lambda: stdin.readline()\n \n n, m = na()\n \n zs = []\n for i in range(n):\n     zs.append(na())\n \n-ans = 0\n-for u in (-1, 1):\n-    for v in (-1, 1):\n-        for w in (-1, 1):\n-            vs = []\n-            for z in zs:\n-                vs.append(z[0]*u+z[1]*v+z[2]*w)\n-            vs.sort()\n-            ans = max(ans, sum(vs[-m:]))\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p03296",
        "submission1_id": "s445967406",
        "crp_content": "\n from sys import stdin\n \n \n def get(l, r):\n     for i in range(1, 10001):\n         if i != l and i != r:\n             return i\n     assert False, 'damepo'\n \n \n def main():\n     N = int(stdin.readline().rstrip())\n     a = [int(x) for x in stdin.readline().rstrip().split()]\n     l = a[0]\n     count = 0\n     for i, x in enumerate(a[1:-1]):\n         idx = i + 1\n         l = a[idx - 1]\n         r = a[idx + 1]\n-        if l != x != r:\n-            pass\n-        elif (idx + 3) < len(a):\n-            if x == r == a[idx + 2] and x != a[idx + 3]:\n-                continue\n-        elif (idx + 2) < len(a):\n-            if x == r == a[idx + 2]:\n-                continue\n         x = get(l, r)\n         count += 1\n         a[idx] = x\n     \n     print(count)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n from sys import stdin\n \n \n def get(l, r):\n     for i in range(1, 10001):\n         if i != l and i != r:\n             return i\n     assert False, 'damepo'\n \n \n def main():\n     N = int(stdin.readline().rstrip())\n     a = [int(x) for x in stdin.readline().rstrip().split()]\n     l = a[0]\n     count = 0\n     for i, x in enumerate(a[1:-1]):\n         idx = i + 1\n         l = a[idx - 1]\n         r = a[idx + 1]\n-        if l != x != r:\n-            pass\n-        elif (idx + 3) < len(a):\n-            if x == r == a[idx + 2] and x != a[idx + 3]:\n-                continue\n-        elif (idx + 2) < len(a):\n-            if x == r == a[idx + 2]:\n-                continue\n         x = get(l, r)\n         count += 1\n         a[idx] = x\n     \n     print(count)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u200785298",
        "problem_id": "p03096",
        "submission1_id": "s213854701",
        "crp_content": "\n \n import sys\n \n MOD = 1000000007  \n \n def solve(N, C):\n     last = [-1] * (N + 1)\n     pairs = []\n     for i, c in enumerate(C):\n         try:\n             prev = last[c - 1]\n         except:\n             if c > N:\n                 return\n             else:\n                 raise Exception()\n         if prev >= 0 and prev < i - 1:\n             pairs.append((prev, i))\n         last[c - 1] = i\n-    print(0)\n     return\n     pairs.sort()\n     count = [0] * N\n     count[0] = 1\n     idx = 0\n     for i in range(N):\n         if i > 0:\n             count[i] += count[i - 1]\n             count[i] %= MOD\n         while idx < len(pairs) and pairs[idx][0] == i:\n             count[pairs[idx][1]] += count[i]\n             count[pairs[idx][1]] %= MOD\n             idx += 1\n     print(count[N - 1])\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     C = [ int(next(tokens)) for _ in range(N) ]  \n     solve(N, C)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n \n MOD = 1000000007  \n \n def solve(N, C):\n     last = [-1] * (N + 1)\n     pairs = []\n     for i, c in enumerate(C):\n         try:\n             prev = last[c - 1]\n         except:\n             if c > N:\n                 return\n             else:\n                 raise Exception()\n         if prev >= 0 and prev < i - 1:\n             pairs.append((prev, i))\n         last[c - 1] = i\n-    print(0)\n     return\n     pairs.sort()\n     count = [0] * N\n     count[0] = 1\n     idx = 0\n     for i in range(N):\n         if i > 0:\n             count[i] += count[i - 1]\n             count[i] %= MOD\n         while idx < len(pairs) and pairs[idx][0] == i:\n             count[pairs[idx][1]] += count[i]\n             count[pairs[idx][1]] %= MOD\n             idx += 1\n     print(count[N - 1])\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     C = [ int(next(tokens)) for _ in range(N) ]  \n     solve(N, C)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u597456301",
        "problem_id": "p02917",
        "submission1_id": "s216038409",
        "crp_content": "\n \n n=int(input())\n b=input()\n \n b=b.split()\n \n b=list(map(int,b))\n a=list()\n a.append(b[0])\n a.append(b[0])\n for i in range(1,len(b)-1):\n     \n     \n     a.append(min(b[i],b[i+1]))\n if(n>2):\n     a.append(max(b[len(b)-1],a[len(a)-1]))\n sum=0 \n for i in range(len(a)):\n     sum+=a[i]\n print(sum)\n \n",
        "origin_generated_text": "\n```\n \n n=int(input())\n b=input()\n \n b=b.split()\n \n b=list(map(int,b))\n a=list()\n a.append(b[0])\n a.append(b[0])\n for i in range(1,len(b)-1):\n     \n     \n     a.append(min(b[i],b[i+1]))\n if(n>2):\n     a.append(max(b[len(b)-1],a[len(a)-1]))\n sum=0 \n for i in range(len(a)):\n     sum+=a[i]\n print(sum)\n \n```\n "
    },
    {
        "user_id": "u546968095",
        "problem_id": "p02407",
        "submission1_id": "s037718921",
        "crp_content": "\n input()\n A = input().split()\n-print(A[::-1])\n \n",
        "origin_generated_text": "\n```\n input()\n A = input().split()\n-print(A[::-1])\n \n```\n "
    },
    {
        "user_id": "u716611746",
        "problem_id": "p03041",
        "submission1_id": "s858323890",
        "crp_content": "\n import sys\n \n \n def main():\n \n     N, K = [int(x) for x in sys.stdin.readline().rstrip().split()]\n     S = list(sys.stdin.readline().rstrip())\n \n     S_new = []\n     for i, s in enumerate(S):\n         if i + 1 == K:\n             s = s.lower()\n         S_new.append(s)\n \n-    print(S_new)\n \n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n import sys\n \n \n def main():\n \n     N, K = [int(x) for x in sys.stdin.readline().rstrip().split()]\n     S = list(sys.stdin.readline().rstrip())\n \n     S_new = []\n     for i, s in enumerate(S):\n         if i + 1 == K:\n             s = s.lower()\n         S_new.append(s)\n \n-    print(S_new)\n \n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u401487574",
        "problem_id": "p03613",
        "submission1_id": "s399541319",
        "crp_content": "\n ma = lambda :map(int,input().split())\n lma = lambda :list(map(int,input().split()))\n ni = lambda:int(input())\n yn = lambda fl:print(\"Yes\") if fl else print(\"No\")\n import collections\n import math\n import itertools\n import heapq as hq\n n = ni()\n A = lma()\n-l = max(A)\n cnts = [0 for i in range(l+2)]\n for a in A:\n     cnts[a]+=1\n     cnts[a-1] +=1\n     cnts[a+1] +=1\n print(max(cnts))\n \n",
        "origin_generated_text": "\n```\n ma = lambda :map(int,input().split())\n lma = lambda :list(map(int,input().split()))\n ni = lambda:int(input())\n yn = lambda fl:print(\"Yes\") if fl else print(\"No\")\n import collections\n import math\n import itertools\n import heapq as hq\n n = ni()\n A = lma()\n-l = max(A)\n cnts = [0 for i in range(l+2)]\n for a in A:\n     cnts[a]+=1\n     cnts[a-1] +=1\n     cnts[a+1] +=1\n print(max(cnts))\n \n```\n "
    },
    {
        "user_id": "u150984829",
        "problem_id": "p02243",
        "submission1_id": "s529914353",
        "crp_content": "\n from heapq import*\n n=int(input())\n A=[[]for _ in[0]*n]\n for _ in[0]*n:\n  e=list(map(int,input().split()))\n  for i in range(e[1]):k=2*-~i;A[e[0]]+=[(e[k],e[k+1])]\n H=[[0,0]]\n d=[0]+[1e6]*n\n c=[1]*n\n while H:\n  f=heappop(H)\n- print(f)\n  u=f[1]\n  c[u]=0\n  if d[u]>=f[0]:\n   for s in A[u]:\n    v=s[0]\n    if c[v]and d[v]>d[u]+s[1]:\n     d[v]=d[u]+s[1]\n     heappush(H,[d[v],v])\n for i in range(n):print(i,d[i])\n \n",
        "origin_generated_text": "\n```\n from heapq import*\n n=int(input())\n A=[[]for _ in[0]*n]\n for _ in[0]*n:\n  e=list(map(int,input().split()))\n  for i in range(e[1]):k=2*-~i;A[e[0]]+=[(e[k],e[k+1])]\n H=[[0,0]]\n d=[0]+[1e6]*n\n c=[1]*n\n while H:\n  f=heappop(H)\n- print(f)\n  u=f[1]\n  c[u]=0\n  if d[u]>=f[0]:\n   for s in A[u]:\n    v=s[0]\n    if c[v]and d[v]>d[u]+s[1]:\n     d[v]=d[u]+s[1]\n     heappush(H,[d[v],v])\n for i in range(n):print(i,d[i])\n \n```\n "
    },
    {
        "user_id": "u508486691",
        "problem_id": "p03008",
        "submission1_id": "s817165127",
        "crp_content": "\n import sys\n import math\n from collections import defaultdict\n \n sys.setrecursionlimit(10**7)\n def input():\n     return sys.stdin.readline()[:-1]\n \n mod = 10**9 + 7\n \n def I(): return int(input())\n def II(): return map(int, input().split())\n def III(): return list(map(int, input().split()))\n def Line(N,num):\n     if N<=0:\n         return [[] for _ in range(num)]\n     elif num==1:\n         return [I() for _ in range(N)]\n     else:\n         read_all = [tuple(II()) for _ in range(N)]\n         return map(list, zip(*read_all))\n \n \n \n N = I()\n A = III()\n B = III()\n \n \n dp = [0]*(N+1)\n for i in range(N+1):\n     for j in range(3):\n         if i-A[j]>=0:\n             dp[i] = max(dp[i-A[j]]+B[j],dp[i])\n for i in range(N+1):\n     dp[i] = N-i+dp[i]\n \n \n count = max(dp)\n dp = [0]*(count+1)\n for i in range(count+1):\n     for j in range(3):\n         if i-B[j]>=0:\n             dp[i] = max(dp[i-B[j]]+A[j],dp[i])\n for i in range(N+1):\n     dp[i] = count-i+dp[i]\n \n print(max(dp))\n",
        "origin_generated_text": "\n```\n import sys\n import math\n from collections import defaultdict\n \n sys.setrecursionlimit(10**7)\n def input():\n     return sys.stdin.readline()[:-1]\n \n mod = 10**9 + 7\n \n def I(): return int(input())\n def II(): return map(int, input().split())\n def III(): return list(map(int, input().split()))\n def Line(N,num):\n     if N<=0:\n         return [[] for _ in range(num)]\n     elif num==1:\n         return [I() for _ in range(N)]\n     else:\n         read_all = [tuple(II()) for _ in range(N)]\n         return map(list, zip(*read_all))\n \n \n \n N = I()\n A = III()\n B = III()\n \n \n dp = [0]*(N+1)\n for i in range(N+1):\n     for j in range(3):\n         if i-A[j]>=0:\n             dp[i] = max(dp[i-A[j]]+B[j],dp[i])\n for i in range(N+1):\n     dp[i] = N-i+dp[i]\n \n \n count = max(dp)\n dp = [0]*(count+1)\n for i in range(count+1):\n     for j in range(3):\n         if i-B[j]>=0:\n             dp[i] = max(dp[i-B[j]]+A[j],dp[i])\n for i in range(N+1):\n     dp[i] = count-i+dp[i]\n \n print(max(dp))\n```\n "
    },
    {
        "user_id": "u312025627",
        "problem_id": "p03729",
        "submission1_id": "s171821827",
        "crp_content": "\n a, b, c = (i for i in input().split())\n-print(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"No\")\n",
        "origin_generated_text": "\n```\n a, b, c = (i for i in input().split())\n-print(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"No\")\n```\n "
    },
    {
        "user_id": "u210440747",
        "problem_id": "p03054",
        "submission1_id": "s101002671",
        "crp_content": "\n \n \n \n def main():\n   L, R, U, D = 0, 1, 2, 3\n   h, w, n = map(int, input().split())\n   sr, sc = map(int, input().split())\n   ls = input().strip()[::-1]\n   lt = input().strip()[::-1]\n   r = [0, w-1, 0, h-1]\n   \n   def f(d, x):\n     if d=='L':\n       r[L] = (min(max(0, r[L]-x), w-1) )\n     if d=='R':\n       r[R] = (min(max(0, r[R]+x), w-1) )\n     if d=='U':\n       r[U] = (min(max(0, r[U]-x), h-1) )\n     if d=='D':\n       r[D] = (min(max(0, r[D]+x), h-1) )\n       \n   def check():\n     if r[L] >= r[R]:\n       return False\n     if r[U] >= r[D]:\n       return False\n     return True\n   \n   f(ls[0], 1)\n   for s, t in zip(ls[1:], lt[1:]):\n     f(t, -1)\n     f(s, 1)\n     if check():\n       print('NO')\n       return\n   print('YES')\n \n if __name__=='__main__':\n   main()\n \n \n",
        "origin_generated_text": "\n```\n \n \n \n def main():\n   L, R, U, D = 0, 1, 2, 3\n   h, w, n = map(int, input().split())\n   sr, sc = map(int, input().split())\n   ls = input().strip()[::-1]\n   lt = input().strip()[::-1]\n   r = [0, w-1, 0, h-1]\n   \n   def f(d, x):\n     if d=='L':\n       r[L] = (min(max(0, r[L]-x), w-1) )\n     if d=='R':\n       r[R] = (min(max(0, r[R]+x), w-1) )\n     if d=='U':\n       r[U] = (min(max(0, r[U]-x), h-1) )\n     if d=='D':\n       r[D] = (min(max(0, r[D]+x), h-1) )\n       \n   def check():\n     if r[L] >= r[R]:\n       return False\n     if r[U] >= r[D]:\n       return False\n     return True\n   \n   f(ls[0], 1)\n   for s, t in zip(ls[1:], lt[1:]):\n     f(t, -1)\n     f(s, 1)\n     if check():\n       print('NO')\n       return\n   print('YES')\n \n if __name__=='__main__':\n   main()\n \n \n```\n "
    },
    {
        "user_id": "u780475861",
        "problem_id": "p03475",
        "submission1_id": "s631227566",
        "crp_content": "\n import sys\n sys.setrecursionlimit(100000)\n \n n = int(input())\n lst = []\n for _ in range(n - 1):\n   lst.append([int(i) for i in input().split()])\n \n \n time_list = []\n \n def time_cost(i, now, lst):\n   if i == n - 1:\n     return now\n   if now >= lst[i][1]:\n-    now += now % lst[i][2] + lst[i][0]\n   else:\n     now = lst[i][1] + lst[i][0]\n   return time_cost(i+1, now, lst)\n \n for i in range(n):\n   print(time_cost(i, 0, lst))\n \n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(100000)\n \n n = int(input())\n lst = []\n for _ in range(n - 1):\n   lst.append([int(i) for i in input().split()])\n \n \n time_list = []\n \n def time_cost(i, now, lst):\n   if i == n - 1:\n     return now\n   if now >= lst[i][1]:\n-    now += now % lst[i][2] + lst[i][0]\n   else:\n     now = lst[i][1] + lst[i][0]\n   return time_cost(i+1, now, lst)\n \n for i in range(n):\n   print(time_cost(i, 0, lst))\n \n```\n "
    },
    {
        "user_id": "u311636831",
        "problem_id": "p03998",
        "submission1_id": "s068872313",
        "crp_content": "\n A=input()\n B=input()\n C=input()\n \n i=0\n j=0\n k=0\n c=0\n while(True):\n     if(c==0):\n         if(A[i]==\"a\"):\n             i+=1\n             c=0\n         elif(A[i]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n \n     elif(c==1):\n         if(B[j]==\"a\"):\n             i+=1\n             c=0\n         elif(B[j]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n     else:\n         if(C[k]==\"a\"):\n             i+=1\n             c=0\n         elif(C[k]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n     if(i==(len(A))):\n         print(\"A\")\n         exit()\n     if(j==(len(B))):\n         print(\"B\")\n         exit()\n     if(k==(len(C))):\n         print(\"C\")\n         exit()\n",
        "origin_generated_text": "\n```\n A=input()\n B=input()\n C=input()\n \n i=0\n j=0\n k=0\n c=0\n while(True):\n     if(c==0):\n         if(A[i]==\"a\"):\n             i+=1\n             c=0\n         elif(A[i]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n \n     elif(c==1):\n         if(B[j]==\"a\"):\n             i+=1\n             c=0\n         elif(B[j]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n     else:\n         if(C[k]==\"a\"):\n             i+=1\n             c=0\n         elif(C[k]==\"b\"):\n             j+=1\n             c=1\n         else:\n             k+=1\n             c=2\n     if(i==(len(A))):\n         print(\"A\")\n         exit()\n     if(j==(len(B))):\n         print(\"B\")\n         exit()\n     if(k==(len(C))):\n         print(\"C\")\n         exit()\n```\n "
    },
    {
        "user_id": "u332793228",
        "problem_id": "p03206",
        "submission1_id": "s437951803",
        "crp_content": "\n-print(\"Chrismas\"+\" Eve\"*(25-int(input())))\n",
        "origin_generated_text": "\n```\n-print(\"Chrismas\"+\" Eve\"*(25-int(input())))\n```\n "
    },
    {
        "user_id": "u572144347",
        "problem_id": "p03734",
        "submission1_id": "s546487923",
        "crp_content": "\n N,W=map(int,input().split())\n wv=[ tuple([int(j) for j in input().split()]) for _ in range(N) ]\n w1=wv[0][0]\n-w2=w1+1\n-w3=w1+2 \n-w4=w1+3\n \n wv=sorted(wv,key=lambda x:x[1],reverse=True)\n wv=sorted(wv)\n wvv = list(map(lambda x:x[1], wv))\n \n \n inf = float(\"inf\")\n ans=0\n from collections import defaultdict\n counter = defaultdict(int)\n \n for i in range(N):\n     w,v = wv[i]\n     counter[w] += 1\n \n from bisect import bisect_left as bll\n \n for e1 in range(0, counter[w1]+1):\n   for e2 in range(0, counter[w2]+1):\n     for e3 in range(0,counter[w3]+1):\n       for e4 in range(0, counter[w4]+1):\n           tmp=0\n \n           if w1*e1 + w2*e2 + w3*e3 + w4*e4 > W:\n               continue\n \n           i1=bll(wv, (w1,-inf))\n           i2=bll(wv, (w2,-inf))\n           i3=bll(wv, (w3,-inf))\n           i4=bll(wv, (w4,-inf))\n \n           tmp= tmp \\\n              +sum(wvv[i1:i1+e1])  \\\n              +sum(wvv[i2:i2+e2])  \\\n              +sum(wvv[i3:i3+e3])  \\\n              +sum(wvv[i4:i4+e4])\n \n           ans=max(ans,tmp)\n       \n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n N,W=map(int,input().split())\n wv=[ tuple([int(j) for j in input().split()]) for _ in range(N) ]\n w1=wv[0][0]\n-w2=w1+1\n-w3=w1+2 \n-w4=w1+3\n \n wv=sorted(wv,key=lambda x:x[1],reverse=True)\n wv=sorted(wv)\n wvv = list(map(lambda x:x[1], wv))\n \n \n inf = float(\"inf\")\n ans=0\n from collections import defaultdict\n counter = defaultdict(int)\n \n for i in range(N):\n     w,v = wv[i]\n     counter[w] += 1\n \n from bisect import bisect_left as bll\n \n for e1 in range(0, counter[w1]+1):\n   for e2 in range(0, counter[w2]+1):\n     for e3 in range(0,counter[w3]+1):\n       for e4 in range(0, counter[w4]+1):\n           tmp=0\n \n           if w1*e1 + w2*e2 + w3*e3 + w4*e4 > W:\n               continue\n \n           i1=bll(wv, (w1,-inf))\n           i2=bll(wv, (w2,-inf))\n           i3=bll(wv, (w3,-inf))\n           i4=bll(wv, (w4,-inf))\n \n           tmp= tmp \\\n              +sum(wvv[i1:i1+e1])  \\\n              +sum(wvv[i2:i2+e2])  \\\n              +sum(wvv[i3:i3+e3])  \\\n              +sum(wvv[i4:i4+e4])\n \n           ans=max(ans,tmp)\n       \n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s482927256",
        "crp_content": "\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n-  if cou > 0 and lis[i] == \"g\":\n     cou -= 1\n     ans += 1\n   else:\n     cou += 1\n     if lis[i] == \"p\":\n       ans -= 1\n print(max(ans,0))\n",
        "origin_generated_text": "\n```\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n-  if cou > 0 and lis[i] == \"g\":\n     cou -= 1\n     ans += 1\n   else:\n     cou += 1\n     if lis[i] == \"p\":\n       ans -= 1\n print(max(ans,0))\n```\n "
    },
    {
        "user_id": "u197078193",
        "problem_id": "p02959",
        "submission1_id": "s517429160",
        "crp_content": "\n N = int(input())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n ans = 0\n for i in range(N):\n-    print(i)\n     if A[i] > B[i]:\n         ans += B[i]\n         A[i] -= B[i]\n         B[i] -= B[i]\n     else:\n         ans += A[i]\n         B[i] -= A[i]\n         A[i] -= A[i]\n     if A[i+1] > B[i]:\n         ans += B[i]\n         A[i+1] -= B[i]\n         B[i] -= B[i]\n     else:\n         ans += A[i+1]\n         B[i] -= A[i+1]\n         A[i+1] -= A[i+1]\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n ans = 0\n for i in range(N):\n-    print(i)\n     if A[i] > B[i]:\n         ans += B[i]\n         A[i] -= B[i]\n         B[i] -= B[i]\n     else:\n         ans += A[i]\n         B[i] -= A[i]\n         A[i] -= A[i]\n     if A[i+1] > B[i]:\n         ans += B[i]\n         A[i+1] -= B[i]\n         B[i] -= B[i]\n     else:\n         ans += A[i+1]\n         B[i] -= A[i+1]\n         A[i+1] -= A[i+1]\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u313452574",
        "problem_id": "p03729",
        "submission1_id": "s856640919",
        "crp_content": "\n A , B , C = input().split()\n \n-if A == B and B == C:\n     print(\"YES\")\n \n else:\n     print(\"NO\")\n",
        "origin_generated_text": "\n```\n A , B , C = input().split()\n \n-if A == B and B == C:\n     print(\"YES\")\n \n else:\n     print(\"NO\")\n```\n "
    },
    {
        "user_id": "u838869282",
        "problem_id": "p02880",
        "submission1_id": "s766715710",
        "crp_content": "\n a=int(input())\n-for i in range(1,10):\n   if a%i==0:\n     print('Yes')\n     break\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n a=int(input())\n-for i in range(1,10):\n   if a%i==0:\n     print('Yes')\n     break\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p03965",
        "submission1_id": "s493659686",
        "crp_content": "\n import sys,collections as cl,bisect as bs\n sys.setrecursionlimit(100000)\n input = sys.stdin.readline\n mod = 10**9+7\n Max = sys.maxsize\n def l(): \n     return list(map(int,input().split()))\n def m(): \n     return map(int,input().split())\n def onem(): \n     return int(input())\n def s(x): \n     a = []\n     if len(x) == 0:\n         return []\n     aa = x[0]\n     su = 1\n     for i in range(len(x)-1):\n         if aa != x[i+1]:\n             a.append([aa,su])\n             aa = x[i+1]\n             su = 1\n         else:\n             su += 1\n     a.append([aa,su])\n     return a\n def jo(x): \n     return \" \".join(map(str,x))\n def max2(x): \n     return max(map(max,x))\n def In(x,a): \n     k = bs.bisect_left(a,x)\n     if k != len(a) and a[k] ==  x:\n         return True\n     else:\n         return False\n \n def pow_k(x, n):\n     ans = 1\n     while n:\n         if n % 2:\n             ans *= x\n         x *= x\n         n >>= 1\n     return ans\n \n \n \n s = input()[:-1]\n \n ja = [[0,0] for i in range(len(s)+1)]\n \n for i in range(len(s)):\n     if s[i] == \"g\":\n         ja[i+1][0] = ja[i][0] + 1\n         ja[i+1][1] = ja[i][1]\n     else:\n         ja[i+1][0] = ja[i][0]\n         ja[i+1][1] = ja[i][1] + 1\n \n co = 0\n \n for i in range(len(s)-1,-1,-1):\n     if s[i] == \"g\":\n         if ja[i][0] - ja[i][1] - co > 0:\n             co += 1\n         \n     \n \n print(co)\n \n \n",
        "origin_generated_text": "\n```\n import sys,collections as cl,bisect as bs\n sys.setrecursionlimit(100000)\n input = sys.stdin.readline\n mod = 10**9+7\n Max = sys.maxsize\n def l(): \n     return list(map(int,input().split()))\n def m(): \n     return map(int,input().split())\n def onem(): \n     return int(input())\n def s(x): \n     a = []\n     if len(x) == 0:\n         return []\n     aa = x[0]\n     su = 1\n     for i in range(len(x)-1):\n         if aa != x[i+1]:\n             a.append([aa,su])\n             aa = x[i+1]\n             su = 1\n         else:\n             su += 1\n     a.append([aa,su])\n     return a\n def jo(x): \n     return \" \".join(map(str,x))\n def max2(x): \n     return max(map(max,x))\n def In(x,a): \n     k = bs.bisect_left(a,x)\n     if k != len(a) and a[k] ==  x:\n         return True\n     else:\n         return False\n \n def pow_k(x, n):\n     ans = 1\n     while n:\n         if n % 2:\n             ans *= x\n         x *= x\n         n >>= 1\n     return ans\n \n \n \n s = input()[:-1]\n \n ja = [[0,0] for i in range(len(s)+1)]\n \n for i in range(len(s)):\n     if s[i] == \"g\":\n         ja[i+1][0] = ja[i][0] + 1\n         ja[i+1][1] = ja[i][1]\n     else:\n         ja[i+1][0] = ja[i][0]\n         ja[i+1][1] = ja[i][1] + 1\n \n co = 0\n \n for i in range(len(s)-1,-1,-1):\n     if s[i] == \"g\":\n         if ja[i][0] - ja[i][1] - co > 0:\n             co += 1\n         \n     \n \n print(co)\n \n \n```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p02912",
        "submission1_id": "s826672032",
        "crp_content": "\n from sys import stdin\n from bisect import insort\n \n \n def main():\n     N, M = [int(x) for x in stdin.readline().rstrip().split()]\n     As = [int(x) for x in stdin.readline().rstrip().split()]\n     As.sort()\n     for _ in range(M):\n-        x = As[-1] / 2\n         insort(As, x)\n         del As[-1]\n     sum_ = 0\n     for x in As:\n         sum_ += x\n     print(sum_)\n \n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n from sys import stdin\n from bisect import insort\n \n \n def main():\n     N, M = [int(x) for x in stdin.readline().rstrip().split()]\n     As = [int(x) for x in stdin.readline().rstrip().split()]\n     As.sort()\n     for _ in range(M):\n-        x = As[-1] / 2\n         insort(As, x)\n         del As[-1]\n     sum_ = 0\n     for x in As:\n         sum_ += x\n     print(sum_)\n \n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s365938545",
        "crp_content": "\n \n \n k = int(input())\n-k = 100\n-count = 0\n ans = []\n-minN = 10**15\n \n-for i in reversed(range(5)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i*3\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(num == \"379999\"):\n-            print(\"tes\")\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n \n-print(len(ans[0]),len(ans))\n \n-for i in list(reversed(ans))[:k]:\n-    print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n-k = 100\n-count = 0\n ans = []\n-minN = 10**15\n \n-for i in reversed(range(5)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i*3\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(num == \"379999\"):\n-            print(\"tes\")\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n \n-print(len(ans[0]),len(ans))\n \n-for i in list(reversed(ans))[:k]:\n-    print(i)\n```\n "
    },
    {
        "user_id": "u201082459",
        "problem_id": "p03272",
        "submission1_id": "s974658603",
        "crp_content": "\n a,b = map(int,input().split())\n-print((a - 1) * (b - 1))\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n-print((a - 1) * (b - 1))\n```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02854",
        "submission1_id": "s184619545",
        "crp_content": "\n n = int(input())\n li = list(map(int,input().split()))\n s = sum(li)\n sum_li = []\n for i,l in enumerate(li):\n     if i == 0:\n         sum_li.append(l)\n         continue\n     sum_li.append(sum_li[-1]+l)\n all_li = []\n for ss in sum_li:\n     \n     all_li.append(abs(s-ss))\n-print(min(all_li))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n li = list(map(int,input().split()))\n s = sum(li)\n sum_li = []\n for i,l in enumerate(li):\n     if i == 0:\n         sum_li.append(l)\n         continue\n     sum_li.append(sum_li[-1]+l)\n all_li = []\n for ss in sum_li:\n     \n     all_li.append(abs(s-ss))\n-print(min(all_li))\n \n```\n "
    },
    {
        "user_id": "u663014688",
        "problem_id": "p03023",
        "submission1_id": "s220042959",
        "crp_content": "\n n = int(input())\n \n-print((n-1)*180)\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n-print((n-1)*180)\n```\n "
    },
    {
        "user_id": "u695079172",
        "problem_id": "p03796",
        "submission1_id": "s347141236",
        "crp_content": "\n n = int(input())\n temp = 1\n      \n for i in range(1,n+1):\n   temp = temp * i\n-  temp = temp % (10**10)\n      \n-print(temp % (10 ** 9 + 7))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n temp = 1\n      \n for i in range(1,n+1):\n   temp = temp * i\n-  temp = temp % (10**10)\n      \n-print(temp % (10 ** 9 + 7))\n \n```\n "
    },
    {
        "user_id": "u837811962",
        "problem_id": "p02469",
        "submission1_id": "s261624434",
        "crp_content": "\n def GCD(x,y):\n     r = x%y\n     if r == 0:\n         return y\n     else:\n         return GCD(y,r)\n \n \n n = int(input())\n list1 = list(map(int,input().split()))\n result = list1[0]\n for i in list1[1:]:\n-    result = result*i/GCD(i,result)\n \n-print(result)\n",
        "origin_generated_text": "\n```\n def GCD(x,y):\n     r = x%y\n     if r == 0:\n         return y\n     else:\n         return GCD(y,r)\n \n \n n = int(input())\n list1 = list(map(int,input().split()))\n result = list1[0]\n for i in list1[1:]:\n-    result = result*i/GCD(i,result)\n \n-print(result)\n```\n "
    },
    {
        "user_id": "u683391968",
        "problem_id": "p02742",
        "submission1_id": "s482116495",
        "crp_content": "\n value = input().split()\n rows = int(value[0])\n colmuns = int(value[1])\n OddColNum = colmuns \n EvenColNum = OddColNum\n if (colmuns % 2) != 0:\n   OddColNum = OddColNum + 1\n \n OddRowCount = rows \n EvenRowCount = rows \n if (OddRowCount % 2) != 0:\n   OddRowCount = OddRowCount + 1\n \n-counts = OddRowCount * OddColNum + EvenColNum + EvenRowCount\n   \n print(counts)\n     \n",
        "origin_generated_text": "\n```\n value = input().split()\n rows = int(value[0])\n colmuns = int(value[1])\n OddColNum = colmuns \n EvenColNum = OddColNum\n if (colmuns % 2) != 0:\n   OddColNum = OddColNum + 1\n \n OddRowCount = rows \n EvenRowCount = rows \n if (OddRowCount % 2) != 0:\n   OddRowCount = OddRowCount + 1\n \n-counts = OddRowCount * OddColNum + EvenColNum + EvenRowCount\n   \n print(counts)\n     \n```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p03480",
        "submission1_id": "s279526645",
        "crp_content": "\n S = input()\n N = len(S)\n ans = 10 ** 6\n-for k in range(N - 1):\n     if S[k] != S[k + 1]:\n         ans = min(ans, max(k + 1, N - k - 1))\n         \n if ans != 0:\n     print(ans)\n else:\n     print(N)\n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n ans = 10 ** 6\n-for k in range(N - 1):\n     if S[k] != S[k + 1]:\n         ans = min(ans, max(k + 1, N - k - 1))\n         \n if ans != 0:\n     print(ans)\n else:\n     print(N)\n```\n "
    },
    {
        "user_id": "u382423941",
        "problem_id": "p02954",
        "submission1_id": "s891300542",
        "crp_content": "\n s = input()\n n = len(s)\n \n def solve(s, c1, c2):\n     res = [0] * (n)\n     odd = 0\n     even = 0\n     for i in range(n):\n         if s[i] == c1:\n             if i % 2 == 1:\n                 odd += 1\n             else:\n                 even += 1\n         if s[i] == c2:\n             if i % 2 == 1:\n                 res[i] += odd\n                 res[i-1] += even\n             else:\n                 res[i] += even\n                 res[i-1] += odd\n             odd, even = 0, 0\n     return res\n \n A = solve(s, 'R', 'L')\n B = solve(s[::-1], 'L', 'R')[::-1]\n ans = [a+b for a, b in zip(A,B)]\n-print(ans)\n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n \n def solve(s, c1, c2):\n     res = [0] * (n)\n     odd = 0\n     even = 0\n     for i in range(n):\n         if s[i] == c1:\n             if i % 2 == 1:\n                 odd += 1\n             else:\n                 even += 1\n         if s[i] == c2:\n             if i % 2 == 1:\n                 res[i] += odd\n                 res[i-1] += even\n             else:\n                 res[i] += even\n                 res[i-1] += odd\n             odd, even = 0, 0\n     return res\n \n A = solve(s, 'R', 'L')\n B = solve(s[::-1], 'L', 'R')[::-1]\n ans = [a+b for a, b in zip(A,B)]\n-print(ans)\n```\n "
    },
    {
        "user_id": "u699699071",
        "problem_id": "p03479",
        "submission1_id": "s023614447",
        "crp_content": "\n X,Y=map(int,input().split())\n result=0\n while X<=Y :\n-    print(X)\n     X*=2\n     result+=1\n print(result)\n",
        "origin_generated_text": "\n```\n X,Y=map(int,input().split())\n result=0\n while X<=Y :\n-    print(X)\n     X*=2\n     result+=1\n print(result)\n```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02633",
        "submission1_id": "s056242420",
        "crp_content": "\n x=int(input(\"\"))\n import math\n-a=math.gcd(360,x)\n-print(int(360*x/a/a))\n",
        "origin_generated_text": "\n```\n x=int(input(\"\"))\n import math\n-a=math.gcd(360,x)\n-print(int(360*x/a/a))\n```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03568",
        "submission1_id": "s155477142",
        "crp_content": "\n n=int(input())\n s=input().split()\n x=1\n for i in s:\n  if(int(i)%2==0):\n   x*=2\n-print(2**n-x)\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=input().split()\n x=1\n for i in s:\n  if(int(i)%2==0):\n   x*=2\n-print(2**n-x)\n```\n "
    },
    {
        "user_id": "u471684875",
        "problem_id": "p03041",
        "submission1_id": "s123809757",
        "crp_content": "\n n,k=map(int,input().split())\n s=str(input())\n \n \n-print(s.replace(s[k-1],s[k-1].lower()))\n",
        "origin_generated_text": "\n```\n n,k=map(int,input().split())\n s=str(input())\n \n \n-print(s.replace(s[k-1],s[k-1].lower()))\n```\n "
    },
    {
        "user_id": "u568576853",
        "problem_id": "p03546",
        "submission1_id": "s732554837",
        "crp_content": "\n h,w=map(int,input().split())\n wlist=[[0]*10 for _  in range(10)]\n for i in range(10):\n     b=list(map(int,input().split()))\n     for j in range(10):\n         wlist[i][j]=b[j]\n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             wlist[i][k]=min(wlist[i][k],wlist[i][j]+wlist[j][k])\n ans=0\n for _ in range(h):\n     t=list(map(int,input().split()))\n     for i in t:\n         if i==-1 or i==1:\n             continue\n         else:\n-            ans+=wlist[i][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n wlist=[[0]*10 for _  in range(10)]\n for i in range(10):\n     b=list(map(int,input().split()))\n     for j in range(10):\n         wlist[i][j]=b[j]\n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             wlist[i][k]=min(wlist[i][k],wlist[i][j]+wlist[j][k])\n ans=0\n for _ in range(h):\n     t=list(map(int,input().split()))\n     for i in t:\n         if i==-1 or i==1:\n             continue\n         else:\n-            ans+=wlist[i][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u542645301",
        "problem_id": "p00006",
        "submission1_id": "s607480231",
        "crp_content": "\n-print(input()[::-3])\n",
        "origin_generated_text": "\n```\n-print(input()[::-3])\n```\n "
    },
    {
        "user_id": "u374802266",
        "problem_id": "p03563",
        "submission1_id": "s626516618",
        "crp_content": "\n-print(-2*int(input())+int(input()))\n-\n",
        "origin_generated_text": "\n```\n-print(-2*int(input())+int(input()))\n-\n```\n "
    },
    {
        "user_id": "u246661425",
        "problem_id": "p03943",
        "submission1_id": "s060875300",
        "crp_content": "\n a, b, c = map(int, input().split())\n if a + b == c or a + c ==b or b + c == a:\n-  print(\"YES\")\n else:\n-  print(\"NO\")\n",
        "origin_generated_text": "\n```\n a, b, c = map(int, input().split())\n if a + b == c or a + c ==b or b + c == a:\n-  print(\"YES\")\n else:\n-  print(\"NO\")\n```\n "
    },
    {
        "user_id": "u614181788",
        "problem_id": "p02580",
        "submission1_id": "s944788569",
        "crp_content": "\n h,w,m = map(int,input().split())\n H = [0]*(h+1)\n W = [0]*(w+1)\n s = set([])\n for i in range(m):\n     a,b = map(int,input().split())\n     s.add((a,b))\n \n     H[a] += 1\n     W[b] += 1\n \n x = [0]*(h+1)\n y = [0]*(w+1)\n     \n for i in range(h+1):\n     x[i] = [i,H[i]]\n for i in range(w+1):\n     y[i] = [i,W[i]]\n \n x.sort(key= lambda val : val[1],reverse=True)\n y.sort(key= lambda val : val[1],reverse=True)\n \n ma = x[0][1]\n mb = y[0][1]\n i,j = 0,0\n sw = 0\n while 1:\n     if (x[i][0],y[j][0]) in s:\n         pass\n     else:\n         sw = 1\n         break\n     if x[i][1] + y[j][1] != ma+mb:\n         break\n     \n     if x[i+1][1] != ma:\n         j += 1\n         i = 0\n     else:\n         i += 1\n print(ma+mb+sw-1)\n \n",
        "origin_generated_text": "\n```\n h,w,m = map(int,input().split())\n H = [0]*(h+1)\n W = [0]*(w+1)\n s = set([])\n for i in range(m):\n     a,b = map(int,input().split())\n     s.add((a,b))\n \n     H[a] += 1\n     W[b] += 1\n \n x = [0]*(h+1)\n y = [0]*(w+1)\n     \n for i in range(h+1):\n     x[i] = [i,H[i]]\n for i in range(w+1):\n     y[i] = [i,W[i]]\n \n x.sort(key= lambda val : val[1],reverse=True)\n y.sort(key= lambda val : val[1],reverse=True)\n \n ma = x[0][1]\n mb = y[0][1]\n i,j = 0,0\n sw = 0\n while 1:\n     if (x[i][0],y[j][0]) in s:\n         pass\n     else:\n         sw = 1\n         break\n     if x[i][1] + y[j][1] != ma+mb:\n         break\n     \n     if x[i+1][1] != ma:\n         j += 1\n         i = 0\n     else:\n         i += 1\n print(ma+mb+sw-1)\n \n```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02954",
        "submission1_id": "s193103473",
        "crp_content": "\n from collections import Counter\n \n S=input()\n n=len(S)\n dp=[[0]*n for _ in range(20)]\n \n for i,s in enumerate(S):\n     dp[0][i]=i-1 if s =='L' else i+1\n \n for k in range(19):\n     for i in range(n):\n         dp[k+1][i]=dp[k][dp[k][i]]\n \n C=Counter(dp[-1])\n-print(dp[-1])\n-print(C)\n print(*[C[i] for i in range(n)])\n",
        "origin_generated_text": "\n```\n from collections import Counter\n \n S=input()\n n=len(S)\n dp=[[0]*n for _ in range(20)]\n \n for i,s in enumerate(S):\n     dp[0][i]=i-1 if s =='L' else i+1\n \n for k in range(19):\n     for i in range(n):\n         dp[k+1][i]=dp[k][dp[k][i]]\n \n C=Counter(dp[-1])\n-print(dp[-1])\n-print(C)\n print(*[C[i] for i in range(n)])\n```\n "
    },
    {
        "user_id": "u051928503",
        "problem_id": "p02625",
        "submission1_id": "s637817224",
        "crp_content": "\n def makefac(n):\n     global faclist\n     faclist = [1, 1]\n     for i in range(2, n + 1):\n         faclist.append(faclist[-1] * i % MOD)\n     return None\n def mcomb(n, r):\n     return faclist[n] * pow(faclist[r], MOD - 2, MOD) * pow(faclist[n-r], -1) % MOD\n def mperm(n, r):\n     return faclist[n] * pow(faclist[n-r], MOD - 2, MOD)\n \n N, M = map(int, input().split())\n MOD = 10 ** 9 + 7\n makefac(M)\n ans = mperm(M, N)\n for k in range(1, N + 1):\n     ans += ((-1)**k * mcomb(N, k) * mperm(M - k, N - k)) % MOD\n ans = ans * mperm(M, N) % MOD\n-print(ans)\n \n \n",
        "origin_generated_text": "\n```\n def makefac(n):\n     global faclist\n     faclist = [1, 1]\n     for i in range(2, n + 1):\n         faclist.append(faclist[-1] * i % MOD)\n     return None\n def mcomb(n, r):\n     return faclist[n] * pow(faclist[r], MOD - 2, MOD) * pow(faclist[n-r], -1) % MOD\n def mperm(n, r):\n     return faclist[n] * pow(faclist[n-r], MOD - 2, MOD)\n \n N, M = map(int, input().split())\n MOD = 10 ** 9 + 7\n makefac(M)\n ans = mperm(M, N)\n for k in range(1, N + 1):\n     ans += ((-1)**k * mcomb(N, k) * mperm(M - k, N - k)) % MOD\n ans = ans * mperm(M, N) % MOD\n-print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u044220565",
        "problem_id": "p02746",
        "submission1_id": "s407158667",
        "crp_content": "\n \n import math\n Q = int(input())\n A = [list(map(int, input().split())) for _ in range(Q)]\n \n \n \n def measure(A):\n     a,b,c,d = A\n     if abs(a-c) < abs(b-d):\n         s1, s2 = min([a,c]), max([a,c])\n         l1, l2 = min([b,d]), max([b,d])\n     else:\n         l1, l2 = min([a,c]), max([a,c])\n         s1, s2 = min([b,d]), max([b,d])\n     min_K = int(math.log(s2-s1+1, 3) + 1)\n     max_K = int(math.log(l2-l1+1, 3) + 1)\n     for k in list(range(min_K, max_K+1))[::-1]:\n         v = 3 ** k\n         _l = 3 ** (k-1) + 1\n         _h = (3 ** (k-1)) * 2\n         c1 = s1\n         c2 = (s1 % v <= _h) & (_l <= s1 % v)\n         c3 = (s2 % v <= _h) & (_l <= s2 % v)\n         if c1 & c2 & c3:\n             val1 = (s1 % v - _l + 1) + (s2 % v - _l + 1) + (l2 - l1)\n             val2 = (_h - s1 % v + 1) + (_h - s2 % v + 1) + (l2 - l1)\n             print(min([val1, val2]))\n             return None\n     print(l2-l1+s2-s1)\n \n if __name__ == '__main__':\n     for val in A:\n         measure(val)\n",
        "origin_generated_text": "\n```\n \n import math\n Q = int(input())\n A = [list(map(int, input().split())) for _ in range(Q)]\n \n \n \n def measure(A):\n     a,b,c,d = A\n     if abs(a-c) < abs(b-d):\n         s1, s2 = min([a,c]), max([a,c])\n         l1, l2 = min([b,d]), max([b,d])\n     else:\n         l1, l2 = min([a,c]), max([a,c])\n         s1, s2 = min([b,d]), max([b,d])\n     min_K = int(math.log(s2-s1+1, 3) + 1)\n     max_K = int(math.log(l2-l1+1, 3) + 1)\n     for k in list(range(min_K, max_K+1))[::-1]:\n         v = 3 ** k\n         _l = 3 ** (k-1) + 1\n         _h = (3 ** (k-1)) * 2\n         c1 = s1\n         c2 = (s1 % v <= _h) & (_l <= s1 % v)\n         c3 = (s2 % v <= _h) & (_l <= s2 % v)\n         if c1 & c2 & c3:\n             val1 = (s1 % v - _l + 1) + (s2 % v - _l + 1) + (l2 - l1)\n             val2 = (_h - s1 % v + 1) + (_h - s2 % v + 1) + (l2 - l1)\n             print(min([val1, val2]))\n             return None\n     print(l2-l1+s2-s1)\n \n if __name__ == '__main__':\n     for val in A:\n         measure(val)\n```\n "
    },
    {
        "user_id": "u414458988",
        "problem_id": "p03992",
        "submission1_id": "s806562459",
        "crp_content": "\n s=input()\n-print(s[:4],'',s[4:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4],'',s[4:])\n```\n "
    },
    {
        "user_id": "u589886885",
        "problem_id": "p02385",
        "submission1_id": "s797374878",
        "crp_content": "\n class Dice():\n \n     def __init__(self, label):\n         self.label = label\n \n     def north(self):\n         self.change([2, 6, 3, 4, 1, 5])\n \n     def west(self):\n         self.change([3, 2, 6, 1, 5, 4])\n \n     def east(self):\n         self.change([4, 2, 1, 6, 5, 3])\n \n     def south(self):\n         self.change([5, 1, 3, 4, 6, 2])\n \n     def change(self, convert):\n         num = []\n         for i in range(6):\n             num.append(self.label[convert[i] - 1])\n         self.label = num\n \n \n def main():\n     f = [int(x) for x in input().split()]\n     s = [int(x) for x in input().split()]\n     dice = Dice(f)\n     labels = []\n     for i in range(4):\n         dice.north()\n         labels.append(dice.label)\n     for i in range(3):\n         dice.west()\n         if i != 1:\n             labels.append(dice.label)\n     if s in labels:\n         print('Yes')\n     else:\n         print('No')\n \n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n class Dice():\n \n     def __init__(self, label):\n         self.label = label\n \n     def north(self):\n         self.change([2, 6, 3, 4, 1, 5])\n \n     def west(self):\n         self.change([3, 2, 6, 1, 5, 4])\n \n     def east(self):\n         self.change([4, 2, 1, 6, 5, 3])\n \n     def south(self):\n         self.change([5, 1, 3, 4, 6, 2])\n \n     def change(self, convert):\n         num = []\n         for i in range(6):\n             num.append(self.label[convert[i] - 1])\n         self.label = num\n \n \n def main():\n     f = [int(x) for x in input().split()]\n     s = [int(x) for x in input().split()]\n     dice = Dice(f)\n     labels = []\n     for i in range(4):\n         dice.north()\n         labels.append(dice.label)\n     for i in range(3):\n         dice.west()\n         if i != 1:\n             labels.append(dice.label)\n     if s in labels:\n         print('Yes')\n     else:\n         print('No')\n \n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u778720350",
        "problem_id": "p03998",
        "submission1_id": "s383212962",
        "crp_content": "\n a = input()\n b = input()\n c = input()\n \n-cards = {'a': a, 'b': b, 'c': c}\n turn = 'a'\n \n while True:\n     if len(cards[turn]) == 0:\n         print(turn)\n         break\n     draw = cards[turn][0]\n     cards[turn] = cards[turn][1:]\n     turn = draw\n \n",
        "origin_generated_text": "\n```\n a = input()\n b = input()\n c = input()\n \n-cards = {'a': a, 'b': b, 'c': c}\n turn = 'a'\n \n while True:\n     if len(cards[turn]) == 0:\n         print(turn)\n         break\n     draw = cards[turn][0]\n     cards[turn] = cards[turn][1:]\n     turn = draw\n \n```\n "
    },
    {
        "user_id": "u666221014",
        "problem_id": "p02407",
        "submission1_id": "s647521891",
        "crp_content": "\n-print(\" \".join(reversed(input().split())))\n",
        "origin_generated_text": "\n```\n-print(\" \".join(reversed(input().split())))\n```\n "
    },
    {
        "user_id": "u136086822",
        "problem_id": "p02642",
        "submission1_id": "s909577456",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n MAX = int(1e6) + 10\n sieve = [0] * int(MAX)\n for i in a:\n     sieve[i] += 1\n ans = 0\n for idx, val in enumerate(sieve):\n     if val == 0:\n         continue\n     if val > 1:\n         sieve[idx] = 0\n         continue\n     ans += 1\n-    for i in range(idx * 2, MAX, idx):\n         sieve[i] = 0\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n MAX = int(1e6) + 10\n sieve = [0] * int(MAX)\n for i in a:\n     sieve[i] += 1\n ans = 0\n for idx, val in enumerate(sieve):\n     if val == 0:\n         continue\n     if val > 1:\n         sieve[idx] = 0\n         continue\n     ans += 1\n-    for i in range(idx * 2, MAX, idx):\n         sieve[i] = 0\n print(ans)\n```\n "
    },
    {
        "user_id": "u175426149",
        "problem_id": "p03274",
        "submission1_id": "s162465095",
        "crp_content": "\n N, K = map(int, input().split())\n \n X = list(map(int, input().split()))\n \n \n def calc_time(X):\n     x_max = X[-1]\n     x_min = X[0]\n \n     if x_max * x_min >= 0:\n         if abs(x_max) > abs(x_min):\n             return x_max\n         else:\n             return abs(x_min)\n     else:\n         return x_max - x_min + min(abs(x_max), abs(x_min))\n \n def calc_start_and_goal_position(index):\n     if index - K >= 0:\n         start_index = index - K\n     else:\n         start_index = 0\n     \n     if N > index + K:\n         goal_index = index\n     else:\n         goal_index = N - K + 1\n     \n     return start_index, goal_index\n \n if __name__ == \"__main__\":\n     index = -1\n     for i, x in enumerate(X):\n         if x >= 0:\n             index = i \n-    if index == -1:\n-        index = i\n     \n     start_index, goal_index = calc_start_and_goal_position(index)\n \n     time_min = float('inf')\n     for i in range(start_index, goal_index):\n         time = calc_time(X[i:i+K])\n         if time < time_min:\n             time_min = time\n \n     print(time_min)\n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n \n X = list(map(int, input().split()))\n \n \n def calc_time(X):\n     x_max = X[-1]\n     x_min = X[0]\n \n     if x_max * x_min >= 0:\n         if abs(x_max) > abs(x_min):\n             return x_max\n         else:\n             return abs(x_min)\n     else:\n         return x_max - x_min + min(abs(x_max), abs(x_min))\n \n def calc_start_and_goal_position(index):\n     if index - K >= 0:\n         start_index = index - K\n     else:\n         start_index = 0\n     \n     if N > index + K:\n         goal_index = index\n     else:\n         goal_index = N - K + 1\n     \n     return start_index, goal_index\n \n if __name__ == \"__main__\":\n     index = -1\n     for i, x in enumerate(X):\n         if x >= 0:\n             index = i \n-    if index == -1:\n-        index = i\n     \n     start_index, goal_index = calc_start_and_goal_position(index)\n \n     time_min = float('inf')\n     for i in range(start_index, goal_index):\n         time = calc_time(X[i:i+K])\n         if time < time_min:\n             time_min = time\n \n     print(time_min)\n```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p03103",
        "submission1_id": "s839803871",
        "crp_content": "\n \n import sys\n \n import heapq\n import re\n import bisect\n import random\n import math\n import itertools\n from collections import defaultdict, deque\n from copy import deepcopy\n from decimal import *\n \n a, b = map(int, input().split())\n d = defaultdict(int)\n array = []\n for i in range(a):\n     x, y = map(int, input().split())\n     d[x] = y\n     array.append(x)\n array.sort()\n \n \n count = 0\n for i in array:\n     if b <= d[i]:\n         count += max(b, 0) * i\n         break\n     else:\n         t = d[i]\n         b -= t\n         count += t * i\n print(count)\n",
        "origin_generated_text": "\n```\n \n import sys\n \n import heapq\n import re\n import bisect\n import random\n import math\n import itertools\n from collections import defaultdict, deque\n from copy import deepcopy\n from decimal import *\n \n a, b = map(int, input().split())\n d = defaultdict(int)\n array = []\n for i in range(a):\n     x, y = map(int, input().split())\n     d[x] = y\n     array.append(x)\n array.sort()\n \n \n count = 0\n for i in array:\n     if b <= d[i]:\n         count += max(b, 0) * i\n         break\n     else:\n         t = d[i]\n         b -= t\n         count += t * i\n print(count)\n```\n "
    },
    {
        "user_id": "u922952729",
        "problem_id": "p02699",
        "submission1_id": "s950544554",
        "crp_content": "\n S,W=[int(i) for i in input().split(\" \")]\n if W>=S:\n-    print(\"unsage\")\n else:\n     print(\"safe\")\n",
        "origin_generated_text": "\n```\n S,W=[int(i) for i in input().split(\" \")]\n if W>=S:\n-    print(\"unsage\")\n else:\n     print(\"safe\")\n```\n "
    },
    {
        "user_id": "u770293614",
        "problem_id": "p02553",
        "submission1_id": "s762983715",
        "crp_content": "\n a,b,c,d=map(int,input().split(\" \"))\n-p=max(a*c,b*c,a*c,a*d)\n print(p)\n \n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int,input().split(\" \"))\n-p=max(a*c,b*c,a*c,a*d)\n print(p)\n \n```\n "
    },
    {
        "user_id": "u659753499",
        "problem_id": "p03326",
        "submission1_id": "s351183166",
        "crp_content": "\n N,M=map(int,input().split())\n cakes=[]\n for i in range(N):\n   x,y,z=map(int,input().split())\n   cakes.append([x,y,z])\n-score=[0]*8\n-score[0]=sum(sorted(map(lambda c: c[0]+c[1]+c[2], cakes))[-M:])\n-score[1]=sum(sorted(map(lambda c: c[0]+c[1]-c[2], cakes))[-M:])\n-score[2]=sum(sorted(map(lambda c: c[0]-c[1]+c[2], cakes))[-M:])\n-score[3]=sum(sorted(map(lambda c: c[0]-c[1]-c[2], cakes))[-M:])\n-score[4]=sum(sorted(map(lambda c:-c[0]+c[1]+c[2], cakes))[-M:])\n-score[5]=sum(sorted(map(lambda c:-c[0]+c[1]-c[2], cakes))[-M:])\n-score[6]=sum(sorted(map(lambda c:-c[0]-c[1]+c[2], cakes))[-M:])\n-score[7]=sum(sorted(map(lambda c:-c[0]-c[1]-c[2], cakes))[-M:])\n-print(max(score))\n \n",
        "origin_generated_text": "\n```\n N,M=map(int,input().split())\n cakes=[]\n for i in range(N):\n   x,y,z=map(int,input().split())\n   cakes.append([x,y,z])\n-score=[0]*8\n-score[0]=sum(sorted(map(lambda c: c[0]+c[1]+c[2], cakes))[-M:])\n-score[1]=sum(sorted(map(lambda c: c[0]+c[1]-c[2], cakes))[-M:])\n-score[2]=sum(sorted(map(lambda c: c[0]-c[1]+c[2], cakes))[-M:])\n-score[3]=sum(sorted(map(lambda c: c[0]-c[1]-c[2], cakes))[-M:])\n-score[4]=sum(sorted(map(lambda c:-c[0]+c[1]+c[2], cakes))[-M:])\n-score[5]=sum(sorted(map(lambda c:-c[0]+c[1]-c[2], cakes))[-M:])\n-score[6]=sum(sorted(map(lambda c:-c[0]-c[1]+c[2], cakes))[-M:])\n-score[7]=sum(sorted(map(lambda c:-c[0]-c[1]-c[2], cakes))[-M:])\n-print(max(score))\n \n```\n "
    },
    {
        "user_id": "u658905620",
        "problem_id": "p02633",
        "submission1_id": "s817415968",
        "crp_content": "\n X=int(input())\n K=0\n a=0\n while True:\n   a+=X\n   K+=1\n-  if K%360==0:\n     break\n print(K)\n",
        "origin_generated_text": "\n```\n X=int(input())\n K=0\n a=0\n while True:\n   a+=X\n   K+=1\n-  if K%360==0:\n     break\n print(K)\n```\n "
    },
    {
        "user_id": "u763291354",
        "problem_id": "p02742",
        "submission1_id": "s059169568",
        "crp_content": "\n hw = list(map(int, input().split()))\n \n if hw[0] % 2 == 0 and hw[1] % 2 == 0:\n     count = hw[0] * hw[1] \n elif hw[0] % 2 != 0 and hw[1] % 2 == 0:\n     count = (hw[0] + 1) * hw[1] \n elif hw[0] % 2 == 0 and hw[1] % 2 != 0:\n     count = (hw[1] + 1) * hw[0] \n else:\n     count = (hw[0] + 1) * (hw[1] + 1) \n print(count)\n \n",
        "origin_generated_text": "\n```\n hw = list(map(int, input().split()))\n \n if hw[0] % 2 == 0 and hw[1] % 2 == 0:\n     count = hw[0] * hw[1] \n elif hw[0] % 2 != 0 and hw[1] % 2 == 0:\n     count = (hw[0] + 1) * hw[1] \n elif hw[0] % 2 == 0 and hw[1] % 2 != 0:\n     count = (hw[1] + 1) * hw[0] \n else:\n     count = (hw[0] + 1) * (hw[1] + 1) \n print(count)\n \n```\n "
    },
    {
        "user_id": "u777923818",
        "problem_id": "p03716",
        "submission1_id": "s435237666",
        "crp_content": "\n \n def inpl(): return tuple(map(int, input().split()))\n from bisect import bisect_left, insort\n N = int(input())\n A = inpl()\n \n before = sorted(A[:N])\n middle = sorted(A[N:-N])\n after = sorted(A[-N:])\n \n S_before = [sum(before)]\n S_after = [sum(after)]\n \n for m in middle:\n     if before[0] < m:\n         S_before.append(S_before[-1] + m - before[0])\n         insort(before, m)\n         before = before[1:]\n     else:\n         S_before.append(S_before[-1])\n \n for m in middle[::-1]:\n     if after[-1] > m:\n         S_after.append(S_after[-1] - m + after[-1])\n         insort(after, m)\n         after = after[:-1]\n     else:\n         S_after.append(S_after[-1])    \n \n-print(max([b-a for b, a in zip(S_before, S_after[::-1])])) \n \n",
        "origin_generated_text": "\n```\n \n def inpl(): return tuple(map(int, input().split()))\n from bisect import bisect_left, insort\n N = int(input())\n A = inpl()\n \n before = sorted(A[:N])\n middle = sorted(A[N:-N])\n after = sorted(A[-N:])\n \n S_before = [sum(before)]\n S_after = [sum(after)]\n \n for m in middle:\n     if before[0] < m:\n         S_before.append(S_before[-1] + m - before[0])\n         insort(before, m)\n         before = before[1:]\n     else:\n         S_before.append(S_before[-1])\n \n for m in middle[::-1]:\n     if after[-1] > m:\n         S_after.append(S_after[-1] - m + after[-1])\n         insort(after, m)\n         after = after[:-1]\n     else:\n         S_after.append(S_after[-1])    \n \n-print(max([b-a for b, a in zip(S_before, S_after[::-1])])) \n \n```\n "
    },
    {
        "user_id": "u017415492",
        "problem_id": "p03625",
        "submission1_id": "s993952455",
        "crp_content": "\n from collections import Counter\n n=int(input())\n a=list(map(int,input().split()))\n x1=0\n x2=0\n count=Counter(a)\n for i in count:\n   if count[i]>=2:\n     if x1<=i:\n       x2=x1\n       x1=i\n     if x1>i and x2<=i:\n       x2=i\n print(x1*x2)\n     \n",
        "origin_generated_text": "\n```\n from collections import Counter\n n=int(input())\n a=list(map(int,input().split()))\n x1=0\n x2=0\n count=Counter(a)\n for i in count:\n   if count[i]>=2:\n     if x1<=i:\n       x2=x1\n       x1=i\n     if x1>i and x2<=i:\n       x2=i\n print(x1*x2)\n     \n```\n "
    },
    {
        "user_id": "u591287669",
        "problem_id": "p03972",
        "submission1_id": "s095217309",
        "crp_content": "\n w,h = map(int,input().split())\n arr=[]\n for i in range(w):\n     arr.append( (int(input()),'p') )\n for i in range(h):\n     arr.append( (int(input()),'q') )\n arr.sort()\n-print(arr)\n ans=0\n for a in arr:\n     if a[1]=='p':\n         ans+=a[0]*(h+1)\n         w-=1\n     else:\n         ans+=a[0]*(w+1)\n         h-=1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n w,h = map(int,input().split())\n arr=[]\n for i in range(w):\n     arr.append( (int(input()),'p') )\n for i in range(h):\n     arr.append( (int(input()),'q') )\n arr.sort()\n-print(arr)\n ans=0\n for a in arr:\n     if a[1]=='p':\n         ans+=a[0]*(h+1)\n         w-=1\n     else:\n         ans+=a[0]*(w+1)\n         h-=1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p02950",
        "submission1_id": "s462868094",
        "crp_content": "\n p = int(input())\n a = list(map(int, input().split()))\n MOD = p\n \n P = p\n fact = [0] * P\n fact[0] = 1\n for i in range(1, P):\n     fact[i] = fact[i - 1] * i\n     fact[i] %= MOD\n \n rfact = [0] * P\n rfact[P - 1] = pow(fact[P - 1], MOD - 2, MOD)\n for i in range(P - 2, -1, -1):\n     rfact[i] = rfact[i + 1] * (i + 1)\n     rfact[i] %= MOD\n \n \n def comb(n, k):\n     return fact[n] * rfact[n - k] * rfact[k] % MOD\n \n \n b = [0] * p\n for i in range(p):\n     if a[i]:\n         b[0] += 1\n         b[0] %= MOD\n         s = 1\n         for j in range(p):\n             b[j] -= comb(p - 1, j) * s\n             b[j] %= MOD\n             s *= -i\n             s %= MOD\n \n print(*b)\n",
        "origin_generated_text": "\n```\n p = int(input())\n a = list(map(int, input().split()))\n MOD = p\n \n P = p\n fact = [0] * P\n fact[0] = 1\n for i in range(1, P):\n     fact[i] = fact[i - 1] * i\n     fact[i] %= MOD\n \n rfact = [0] * P\n rfact[P - 1] = pow(fact[P - 1], MOD - 2, MOD)\n for i in range(P - 2, -1, -1):\n     rfact[i] = rfact[i + 1] * (i + 1)\n     rfact[i] %= MOD\n \n \n def comb(n, k):\n     return fact[n] * rfact[n - k] * rfact[k] % MOD\n \n \n b = [0] * p\n for i in range(p):\n     if a[i]:\n         b[0] += 1\n         b[0] %= MOD\n         s = 1\n         for j in range(p):\n             b[j] -= comb(p - 1, j) * s\n             b[j] %= MOD\n             s *= -i\n             s %= MOD\n \n print(*b)\n```\n "
    },
    {
        "user_id": "u628538573",
        "problem_id": "p03296",
        "submission1_id": "s342930021",
        "crp_content": "\n n = int(input())\n a = input().split()\n count = 0\n for i in range(n - 1):\n \tif a[i] == a[i + 1]:\n \t\tif i + 1 < n - 2:\n \t\t\tif a[i] != 1 and a[i + 2] != 1:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 2 and a[i + 2] != 2:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 3 and a[i + 2] != 3:\n \t\t\t\ta[i + 1] = 3\n \t\t\t\tcount += 1\n \n \t\tif i == n - 2:\n \t\t\tif a[i] == 1:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telse:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \n print(count)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = input().split()\n count = 0\n for i in range(n - 1):\n \tif a[i] == a[i + 1]:\n \t\tif i + 1 < n - 2:\n \t\t\tif a[i] != 1 and a[i + 2] != 1:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 2 and a[i + 2] != 2:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 3 and a[i + 2] != 3:\n \t\t\t\ta[i + 1] = 3\n \t\t\t\tcount += 1\n \n \t\tif i == n - 2:\n \t\t\tif a[i] == 1:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telse:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s655410722",
        "crp_content": "\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k] and j + 1 <= 300:\n                     dp[i + 1][j + 1][k] = max(dp[i + 1][j + 1][k],\n                                               dp[i][j][k - w] + v)\n                 else:\n                     dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n             else:\n                 dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k] and j + 1 <= 300:\n                     dp[i + 1][j + 1][k] = max(dp[i + 1][j + 1][k],\n                                               dp[i][j][k - w] + v)\n                 else:\n                     dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n             else:\n                 dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s505491395",
        "crp_content": "\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = (ra-rb) ** 2\n \n     if d1 <= d2:\n         if dr >= d1:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = (ra-rb) ** 2\n \n     if d1 <= d2:\n         if dr >= d1:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03952",
        "submission1_id": "s003476739",
        "crp_content": "\n N,x=map(int,input().split())\n if x==1 or x==2*N-1:\n-    print(-1)\n     exit()\n if N==2:\n     print('Yes')\n     print(*[1,2,3],sep='\\n')\n     exit()\n s=set(range(1,2*N))\n s.remove(x)\n ans=[0]*(2*N-1)\n ans[N-1]=x\n min1=min(s)\n max1=max(s)\n s.remove(min1);s.remove(max1)\n if x==2*N-2:\n     min2=min(s)\n     s.remove(min2)\n     ans[N-2]=min1;ans[N]=max1;ans[N+1]=min2\n else:\n     max2=max(s)\n     s.remove(max2)\n     ans[N-2]=max1;ans[N]=min1;ans[N+1]=max2\n li=list(s)\n for i in range(2*N-1):\n     if ans[i]==0:\n         ans[i]=li.pop()\n print(\"Yes\")\n print(*ans,sep='\\n')\n",
        "origin_generated_text": "\n```\n N,x=map(int,input().split())\n if x==1 or x==2*N-1:\n-    print(-1)\n     exit()\n if N==2:\n     print('Yes')\n     print(*[1,2,3],sep='\\n')\n     exit()\n s=set(range(1,2*N))\n s.remove(x)\n ans=[0]*(2*N-1)\n ans[N-1]=x\n min1=min(s)\n max1=max(s)\n s.remove(min1);s.remove(max1)\n if x==2*N-2:\n     min2=min(s)\n     s.remove(min2)\n     ans[N-2]=min1;ans[N]=max1;ans[N+1]=min2\n else:\n     max2=max(s)\n     s.remove(max2)\n     ans[N-2]=max1;ans[N]=min1;ans[N+1]=max2\n li=list(s)\n for i in range(2*N-1):\n     if ans[i]==0:\n         ans[i]=li.pop()\n print(\"Yes\")\n print(*ans,sep='\\n')\n```\n "
    },
    {
        "user_id": "u557642273",
        "problem_id": "p02767",
        "submission1_id": "s426054177",
        "crp_content": "\n def physical_strength(x,p):\n   return pow((x - p), 2)\n \n \n \n if __name__ == '__main__':\n   num_resident = input()\n   x_list = [int(a) for a in input().split()]\n   min_x = min(x_list)\n   max_x = max(x_list)\n   \n-  fin_ps = pow(max_x, 2)\n   for i in range(min_x, max_x + 1):\n     sum_ps = 0\n     for x in x_list:\n       sum_ps += physical_strength(x, i)\n     if(sum_ps < fin_ps):\n       fin_ps = sum_ps\n   \n   print(fin_ps)\n \n",
        "origin_generated_text": "\n```\n def physical_strength(x,p):\n   return pow((x - p), 2)\n \n \n \n if __name__ == '__main__':\n   num_resident = input()\n   x_list = [int(a) for a in input().split()]\n   min_x = min(x_list)\n   max_x = max(x_list)\n   \n-  fin_ps = pow(max_x, 2)\n   for i in range(min_x, max_x + 1):\n     sum_ps = 0\n     for x in x_list:\n       sum_ps += physical_strength(x, i)\n     if(sum_ps < fin_ps):\n       fin_ps = sum_ps\n   \n   print(fin_ps)\n \n```\n "
    },
    {
        "user_id": "u826331398",
        "problem_id": "p02880",
        "submission1_id": "s001622303",
        "crp_content": "\n import itertools\n \n \n def read():\n     N = int(input())\n \n     return N,\n \n \n def solve(N, ):\n-    for i in range(9):\n-        a = i + 1\n-\n-        b = N / a\n-\n-        if b in [1,2,3,4,5,6,7,8,9]:\n-            continue\n-        if a * b == N:\n-            return \"Yes\"\n-        else:\n-            return \"No\"\n \n \n if __name__ == '__main__':\n     input = read()\n     print(solve(*input))\n",
        "origin_generated_text": "\n```\n import itertools\n \n \n def read():\n     N = int(input())\n \n     return N,\n \n \n def solve(N, ):\n-    for i in range(9):\n-        a = i + 1\n-\n-        b = N / a\n-\n-        if b in [1,2,3,4,5,6,7,8,9]:\n-            continue\n-        if a * b == N:\n-            return \"Yes\"\n-        else:\n-            return \"No\"\n \n \n if __name__ == '__main__':\n     input = read()\n     print(solve(*input))\n```\n "
    },
    {
        "user_id": "u692453235",
        "problem_id": "p02959",
        "submission1_id": "s470649740",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n count = 0\n ad = 0\n \n for i in range(N):\n   if A[i] <= B[i] + ad:\n     count += A[i]\n     ad = max(0, B[i] + ad - A[i])\n     \n   else:\n     count += B[i] + ad\n     ad = 0\n     \n \n-count += min(A[N], ad)     \n \n print(count)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n count = 0\n ad = 0\n \n for i in range(N):\n   if A[i] <= B[i] + ad:\n     count += A[i]\n     ad = max(0, B[i] + ad - A[i])\n     \n   else:\n     count += B[i] + ad\n     ad = 0\n     \n \n-count += min(A[N], ad)     \n \n print(count)\n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s292708701",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-ta = a + []\n res = pow(10, 10)\n bs = pow(10, 10)\n-for x in sorted(set(a)):\n-  t = [[]]\n-  for i in range(N):\n-    if ta[i] == bs:\n-      if t[-1] != []:\n-        t.append([])\n-    else: t[-1].append(a[i])\n-  tt = []\n-  for i in range(len(t)):\n-    t[i].sort()\n-    for j in range(len(t[i]) - K + 1):\n-      if t[i][j] != bs:\n-        tt.append(t[i][j])\n-  if len(tt) < Q: break\n-  tt.sort()\n-  res = min(res, tt[Q - 1] - tt[0])\n-  \n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          ta[j] = bs\n-\n print(res)\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-ta = a + []\n res = pow(10, 10)\n bs = pow(10, 10)\n-for x in sorted(set(a)):\n-  t = [[]]\n-  for i in range(N):\n-    if ta[i] == bs:\n-      if t[-1] != []:\n-        t.append([])\n-    else: t[-1].append(a[i])\n-  tt = []\n-  for i in range(len(t)):\n-    t[i].sort()\n-    for j in range(len(t[i]) - K + 1):\n-      if t[i][j] != bs:\n-        tt.append(t[i][j])\n-  if len(tt) < Q: break\n-  tt.sort()\n-  res = min(res, tt[Q - 1] - tt[0])\n-  \n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          ta[j] = bs\n-\n print(res)\n \n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03054",
        "submission1_id": "s406345178",
        "crp_content": "\n from sys import exit\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n ul = 1\n dl = H\n rl = W\n ll = 1\n for s, t in zip(S[1::][::-1], T[::-1]):\n     if t == 'U':\n         dl = min(H, dl+1)\n     elif t == 'D':\n         ul = max(1, ul-1)\n     elif t == 'L':\n         rl = min(W, rl+1)\n     else:\n         ll = max(1, ll-1)\n     if s == 'U':\n         ul += 1\n     elif s == 'D':\n         dl -= 1\n     elif s == 'L':\n         ll += 1\n     else:\n         rl -= 1\n     if ul > dl or ll > rl or ul == H + 1 or dl == 0 or ll == W + 1 or rl == 0:\n         print('NO')\n         exit()\n s = S[0]\n if s == 'U':\n     ul += 1\n elif s == 'D':\n     dl -= 1\n elif s == 'L':\n     ll += 1\n else:\n     rl -= 1\n \n-if ul <= sr <= dl and ll <= sc <= rl:\n     print('YES')\n else:\n     print('NO')\n",
        "origin_generated_text": "\n```\n from sys import exit\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n ul = 1\n dl = H\n rl = W\n ll = 1\n for s, t in zip(S[1::][::-1], T[::-1]):\n     if t == 'U':\n         dl = min(H, dl+1)\n     elif t == 'D':\n         ul = max(1, ul-1)\n     elif t == 'L':\n         rl = min(W, rl+1)\n     else:\n         ll = max(1, ll-1)\n     if s == 'U':\n         ul += 1\n     elif s == 'D':\n         dl -= 1\n     elif s == 'L':\n         ll += 1\n     else:\n         rl -= 1\n     if ul > dl or ll > rl or ul == H + 1 or dl == 0 or ll == W + 1 or rl == 0:\n         print('NO')\n         exit()\n s = S[0]\n if s == 'U':\n     ul += 1\n elif s == 'D':\n     dl -= 1\n elif s == 'L':\n     ll += 1\n else:\n     rl -= 1\n \n-if ul <= sr <= dl and ll <= sc <= rl:\n     print('YES')\n else:\n     print('NO')\n```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s904263739",
        "crp_content": "\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(6)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n \n-    if x==[0]*l or x==[1]*l:\n         c+=1\n \n     print(c%1000000007)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(6)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n \n-    if x==[0]*l or x==[1]*l:\n         c+=1\n \n     print(c%1000000007)\n \n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s111677964",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             a = P[j][a]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n \n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             a = P[j][a]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n \n```\n "
    },
    {
        "user_id": "u730769327",
        "problem_id": "p03796",
        "submission1_id": "s003080448",
        "crp_content": "\n n=int(input())\n sum=1\n for i in range(n):\n-  sum*=i\n   sum=sum%(10**9+7)\n   \n print(sum)\n",
        "origin_generated_text": "\n```\n n=int(input())\n sum=1\n for i in range(n):\n-  sum*=i\n   sum=sum%(10**9+7)\n   \n print(sum)\n```\n "
    },
    {
        "user_id": "u284563808",
        "problem_id": "p03992",
        "submission1_id": "s164395746",
        "crp_content": "\n s=input()\n-print(s[:4]+'_'+s[4:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4]+'_'+s[4:])\n```\n "
    },
    {
        "user_id": "u557171945",
        "problem_id": "p03087",
        "submission1_id": "s888404935",
        "crp_content": "\n n,q = map(int,input().split())\n S = input()\n tb = [0 for i in range(n)]\n for i in range(n):\n     if i==0 or S[i]!='C':\n         tb[i] = tb[i-1]\n         continue\n-    print(S[i])\n     if S[i-1]=='A':\n         tb[i] = tb[i-1]+1\n for i in range(q):\n     l,r = map(int,input().split())\n     print(tb[r-1]-tb[l-1])\n \n",
        "origin_generated_text": "\n```\n n,q = map(int,input().split())\n S = input()\n tb = [0 for i in range(n)]\n for i in range(n):\n     if i==0 or S[i]!='C':\n         tb[i] = tb[i-1]\n         continue\n-    print(S[i])\n     if S[i-1]=='A':\n         tb[i] = tb[i-1]+1\n for i in range(q):\n     l,r = map(int,input().split())\n     print(tb[r-1]-tb[l-1])\n \n```\n "
    },
    {
        "user_id": "u538632589",
        "problem_id": "p03087",
        "submission1_id": "s684832909",
        "crp_content": "\n n, q = [int(i) for i in input().split()]\n s = input()\n l_list = []\n r_list = []\n for i in range(q):\n     l, r = [int(i) for i in input().split()]\n     l_list.append(l)\n     r_list.append(r)\n \n ac_map = [0 for i in range(n+1)]\n for i in range(1, n+1):\n     if s[i-1:i+1] == \"AC\":\n         ac_map[i] = ac_map[i-1] +1\n     else:\n         ac_map[i] = ac_map[i-1]\n-print(ac_map)\n for i in range(q):\n     ans = ac_map[r_list[i]-1] - ac_map[l_list[i]-1]\n     print(ans)\n",
        "origin_generated_text": "\n```\n n, q = [int(i) for i in input().split()]\n s = input()\n l_list = []\n r_list = []\n for i in range(q):\n     l, r = [int(i) for i in input().split()]\n     l_list.append(l)\n     r_list.append(r)\n \n ac_map = [0 for i in range(n+1)]\n for i in range(1, n+1):\n     if s[i-1:i+1] == \"AC\":\n         ac_map[i] = ac_map[i-1] +1\n     else:\n         ac_map[i] = ac_map[i-1]\n-print(ac_map)\n for i in range(q):\n     ans = ac_map[r_list[i]-1] - ac_map[l_list[i]-1]\n     print(ans)\n```\n "
    },
    {
        "user_id": "u797798686",
        "problem_id": "p02642",
        "submission1_id": "s494287652",
        "crp_content": "\n from sys import stdin\n data = stdin.readlines()\n \n n = int(data[0].split()[0])\n a = [int(s) for s in data[1].split()]\n a = sorted(a)\n \n max = a[-1]\n-print(max)\n \n l = [0]*(max+1)\n \n for i in a:\n     l[i] += 1\n     if l[i] == 1:\n         for j in range(i*2,max+1,i):\n             l[j] = 2\n print(l.count(1))\n",
        "origin_generated_text": "\n```\n from sys import stdin\n data = stdin.readlines()\n \n n = int(data[0].split()[0])\n a = [int(s) for s in data[1].split()]\n a = sorted(a)\n \n max = a[-1]\n-print(max)\n \n l = [0]*(max+1)\n \n for i in a:\n     l[i] += 1\n     if l[i] == 1:\n         for j in range(i*2,max+1,i):\n             l[j] = 2\n print(l.count(1))\n```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p02919",
        "submission1_id": "s395818034",
        "crp_content": "\n def main():\n     class unionfind():\n         \n         def __init__(self,size):\n             self.size=size\n             self.tree=[i for i in range(self.size)]\n         \n         \n         def root(self,index):\n             temp_list=[]\n             temp=self.tree[index]\n             while index!=temp:\n                 temp_list.append(index)\n                 index=temp\n                 temp=self.tree[index]\n             for i in temp_list:\n                 self.tree[i]=index\n             return index\n         \n         \n         def unite_r(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             if r1<r2:\n                 self.tree[r1]=r2\n             else:\n                 self.tree[r2]=r1\n \n         def unite_l(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             if r1>r2:\n                 self.tree[r1]=r2\n             else:\n                 self.tree[r2]=r1\n \n         \n         def same(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             return r1==r2\n  \n  \n     n=int(input())\n     a=list(map(int,input().split()))\n     d=[0]*n\n     for i,j in enumerate(a):\n         d[j-1]=i+2\n     vis=[False]*(n+4)\n     u_r=unionfind(n+4)\n     u_l=unionfind(n+4)\n     ans=0\n     for j,i in enumerate(d[:-1]):\n         vis[i]=True\n         if vis[i+1]==True:\n             u_r.unite_r(i,i+1)\n             k1=u_r.root(i+1)+1\n         else:\n             k1=i+1\n         if vis[k1+1]==True:\n             cnt1=u_r.root(k1+1)+1\n         else:\n             cnt1=k1+1\n         cnt1=min(cnt1,n+2)\n         if vis[i-1]==True:\n             u_l.unite_l(i,i-1)\n             k2=u_r.root(i-1)-1\n         else:\n             k2=i-1\n         if vis[k2-1]==True:\n             cnt2=u_r.root(k2-1)-1\n         else:\n             cnt2=k2-1\n         cnt2=max(cnt2,1)\n         ans+=((k2-cnt2)*(k1-i)+(cnt1-k1)*(i-k2))*(j+1)\n     print(ans)\n main()\n",
        "origin_generated_text": "\n```\n def main():\n     class unionfind():\n         \n         def __init__(self,size):\n             self.size=size\n             self.tree=[i for i in range(self.size)]\n         \n         \n         def root(self,index):\n             temp_list=[]\n             temp=self.tree[index]\n             while index!=temp:\n                 temp_list.append(index)\n                 index=temp\n                 temp=self.tree[index]\n             for i in temp_list:\n                 self.tree[i]=index\n             return index\n         \n         \n         def unite_r(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             if r1<r2:\n                 self.tree[r1]=r2\n             else:\n                 self.tree[r2]=r1\n \n         def unite_l(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             if r1>r2:\n                 self.tree[r1]=r2\n             else:\n                 self.tree[r2]=r1\n \n         \n         def same(self,index1,index2):\n             r1=self.root(index1)\n             r2=self.root(index2)\n             return r1==r2\n  \n  \n     n=int(input())\n     a=list(map(int,input().split()))\n     d=[0]*n\n     for i,j in enumerate(a):\n         d[j-1]=i+2\n     vis=[False]*(n+4)\n     u_r=unionfind(n+4)\n     u_l=unionfind(n+4)\n     ans=0\n     for j,i in enumerate(d[:-1]):\n         vis[i]=True\n         if vis[i+1]==True:\n             u_r.unite_r(i,i+1)\n             k1=u_r.root(i+1)+1\n         else:\n             k1=i+1\n         if vis[k1+1]==True:\n             cnt1=u_r.root(k1+1)+1\n         else:\n             cnt1=k1+1\n         cnt1=min(cnt1,n+2)\n         if vis[i-1]==True:\n             u_l.unite_l(i,i-1)\n             k2=u_r.root(i-1)-1\n         else:\n             k2=i-1\n         if vis[k2-1]==True:\n             cnt2=u_r.root(k2-1)-1\n         else:\n             cnt2=k2-1\n         cnt2=max(cnt2,1)\n         ans+=((k2-cnt2)*(k1-i)+(cnt1-k1)*(i-k2))*(j+1)\n     print(ans)\n main()\n```\n "
    },
    {
        "user_id": "u467307100",
        "problem_id": "p03102",
        "submission1_id": "s319271473",
        "crp_content": "\n n ,m, c = map(int, input().split())\n B = list(map(int, input().split()))\n A = [list(map(int,input().split())) for i in range(n)] \n     \n \n count = 0\n for i in A:\n   numberSum = c\n   for a, b in zip(i, B):\n     numberSum += (a * b)  \n-    if numberSum > 0:\n       count += 1\n print(count)\n   \n",
        "origin_generated_text": "\n```\n n ,m, c = map(int, input().split())\n B = list(map(int, input().split()))\n A = [list(map(int,input().split())) for i in range(n)] \n     \n \n count = 0\n for i in A:\n   numberSum = c\n   for a, b in zip(i, B):\n     numberSum += (a * b)  \n-    if numberSum > 0:\n       count += 1\n print(count)\n   \n```\n "
    },
    {
        "user_id": "u432805419",
        "problem_id": "p03729",
        "submission1_id": "s765819899",
        "crp_content": "\n a,b,c = input().split()\n-if a[-1] == b[-1] and b[-1] == c[-1]:\n   print(\"YES\")\n else:\n   print(\"NO\")\n",
        "origin_generated_text": "\n```\n a,b,c = input().split()\n-if a[-1] == b[-1] and b[-1] == c[-1]:\n   print(\"YES\")\n else:\n   print(\"NO\")\n```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s388372414",
        "crp_content": "\n N, K = map(int, input().split())\n m = 1e9+7\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] += dp[i][j][k] % m\n       dp[i+1][j][k+2*j] += dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] += 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] += j*j * dp[i][j][k] % m\n print(int(dp[N][0][K]))\n \n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n m = 1e9+7\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] += dp[i][j][k] % m\n       dp[i+1][j][k+2*j] += dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] += 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] += j*j * dp[i][j][k] % m\n print(int(dp[N][0][K]))\n \n```\n "
    },
    {
        "user_id": "u901122076",
        "problem_id": "p03106",
        "submission1_id": "s525617759",
        "crp_content": "\n A, B, K = map(int, input().split())\n \n max_num = max(A, B)\n count = 0\n \n for i in range(max_num, 0, -1):\n     if A % i == 0 and B % i == 0:\n         count += 1\n         if count == K:\n             break\n \n",
        "origin_generated_text": "\n```\n A, B, K = map(int, input().split())\n \n max_num = max(A, B)\n count = 0\n \n for i in range(max_num, 0, -1):\n     if A % i == 0 and B % i == 0:\n         count += 1\n         if count == K:\n             break\n \n```\n "
    },
    {
        "user_id": "u826263061",
        "problem_id": "p03714",
        "submission1_id": "s513917148",
        "crp_content": "\n import heapq\n n = int(input())\n a = list(map(int, input().split()))\n \n a1 = a[:n]\n ax = a[n:2*n]\n a2 = list(map(lambda x: -x, a[2*n:]))\n-print('a2', a2)\n \n sum_a1 = sum(a1)\n fdif1 = [sum_a1]\n heapq.heapify(a1)\n for i in range(n):\n     p = heapq.heappushpop(a1,ax[i])\n     fdif1.append(fdif1[-1]+ax[i]-p)\n     \n sum_a2 = sum(a2)\n fdif2 = [sum_a2]\n heapq.heapify(a2)\n-print('a2', a2)\n for i in range(n):\n     p = heapq.heappushpop(a2,-ax[-1-i])\n     fdif2.append(fdif2[-1]-ax[-1-i]-p)\n fdif2.reverse()\n \n fdif = [fdif1[i]+fdif2[i] for i in range(n)]\n print(max(fdif))\n",
        "origin_generated_text": "\n```\n import heapq\n n = int(input())\n a = list(map(int, input().split()))\n \n a1 = a[:n]\n ax = a[n:2*n]\n a2 = list(map(lambda x: -x, a[2*n:]))\n-print('a2', a2)\n \n sum_a1 = sum(a1)\n fdif1 = [sum_a1]\n heapq.heapify(a1)\n for i in range(n):\n     p = heapq.heappushpop(a1,ax[i])\n     fdif1.append(fdif1[-1]+ax[i]-p)\n     \n sum_a2 = sum(a2)\n fdif2 = [sum_a2]\n heapq.heapify(a2)\n-print('a2', a2)\n for i in range(n):\n     p = heapq.heappushpop(a2,-ax[-1-i])\n     fdif2.append(fdif2[-1]-ax[-1-i]-p)\n fdif2.reverse()\n \n fdif = [fdif1[i]+fdif2[i] for i in range(n)]\n print(max(fdif))\n```\n "
    },
    {
        "user_id": "u543954314",
        "problem_id": "p03959",
        "submission1_id": "s664450284",
        "crp_content": "\n n = int(input())\n mount = [0]*n\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n mount[0] = a[0]\n mount[-1] = b[-1]\n pat = 1\n mod = 10**9+7\n for i in range(1,n):\n   if a[i] > a[i-1]:\n     if mount[i] != 0 and mount[i] != a[i]:\n       print(0)\n       exit()\n     else:\n       mount[i] = a[i]\n   if b[n-i-1] > b[n-i]:\n     if mount[n-i-1] != 0 and mount[n-i-1] != b[n-i-1]:\n       print(0)\n       exit()\n     else:\n       mount[n-i-1] = b[n-i-1]\n for i in range(n):\n   if mount[i] == 0:\n     dx = 1\n     while mount[i+dx] == 0:\n       dx += 1\n     this = min(mount[i-1],mount[i+dx])\n     pat = pat*(this**dx)%mod\n     for j in range(dx):\n       mount[i+j] = this\n a2 = [0]*n\n b2 = [0]*n\n a2[0] = mount[0]\n b2[-1] = mount[-1]\n for i in range(1,n):\n   a[i] = max(mount[i],a[i-1])\n   b[n-i-1] = max(mount[n-i-1],b[n-i])\n-if a != a2 or b != b2:\n   print(0)\n else:\n   print(pat)\n",
        "origin_generated_text": "\n```\n n = int(input())\n mount = [0]*n\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n mount[0] = a[0]\n mount[-1] = b[-1]\n pat = 1\n mod = 10**9+7\n for i in range(1,n):\n   if a[i] > a[i-1]:\n     if mount[i] != 0 and mount[i] != a[i]:\n       print(0)\n       exit()\n     else:\n       mount[i] = a[i]\n   if b[n-i-1] > b[n-i]:\n     if mount[n-i-1] != 0 and mount[n-i-1] != b[n-i-1]:\n       print(0)\n       exit()\n     else:\n       mount[n-i-1] = b[n-i-1]\n for i in range(n):\n   if mount[i] == 0:\n     dx = 1\n     while mount[i+dx] == 0:\n       dx += 1\n     this = min(mount[i-1],mount[i+dx])\n     pat = pat*(this**dx)%mod\n     for j in range(dx):\n       mount[i+j] = this\n a2 = [0]*n\n b2 = [0]*n\n a2[0] = mount[0]\n b2[-1] = mount[-1]\n for i in range(1,n):\n   a[i] = max(mount[i],a[i-1])\n   b[n-i-1] = max(mount[n-i-1],b[n-i])\n-if a != a2 or b != b2:\n   print(0)\n else:\n   print(pat)\n```\n "
    },
    {
        "user_id": "u121921603",
        "problem_id": "p03480",
        "submission1_id": "s648139217",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n S=input().strip()\n-t=10**6\n for i in range(1,len(S)):\n     if S[i-1]!=S[i]:\n         t=min(t,max(i,len(S)-i))\n-if t==0:\n-    print(len(S))\n-else:\n-    print(t)\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n S=input().strip()\n-t=10**6\n for i in range(1,len(S)):\n     if S[i-1]!=S[i]:\n         t=min(t,max(i,len(S)-i))\n-if t==0:\n-    print(len(S))\n-else:\n-    print(t)\n \n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s164191480",
        "crp_content": "\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(12)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n             \n for i in list(reversed(ans))[:k]:\n     print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(12)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n             \n for i in list(reversed(ans))[:k]:\n     print(i)\n```\n "
    },
    {
        "user_id": "u210440747",
        "problem_id": "p03054",
        "submission1_id": "s568595675",
        "crp_content": "\n \n \n \n def main():\n   L, R, U, D = 0, 1, 2, 3\n   h, w, n = map(int, input().split())\n   sr, sc = map(int, input().split())\n   ls = input().strip()[::-1]\n   lt = input().strip()[::-1]\n-  r = [0, w-1, 0, h-1]\n   \n   def f(d, x):\n     if d=='L':\n       r[L] = (min(max(0, r[L]-x), w-1) )\n     if d=='R':\n       r[R] = (min(max(0, r[R]+x), w-1) )\n     if d=='U':\n       r[U] = (min(max(0, r[U]-x), h-1) )\n     if d=='D':\n       r[D] = (min(max(0, r[D]+x), h-1) )\n       \n   def check():\n-    if r[L] >= r[R]:\n-      return False\n-    if r[U] >= r[D]:\n-      return False\n     return True\n   \n   f(ls[0], 1)\n   for s, t in zip(ls[1:], lt[1:]):\n     f(s, 1)\n     f(t, -1)\n     if check():\n       print('NO')\n       return\n   print('YES')\n     \n     \n     \n \n if __name__=='__main__':\n   main()\n \n \n",
        "origin_generated_text": "\n```\n \n \n \n def main():\n   L, R, U, D = 0, 1, 2, 3\n   h, w, n = map(int, input().split())\n   sr, sc = map(int, input().split())\n   ls = input().strip()[::-1]\n   lt = input().strip()[::-1]\n-  r = [0, w-1, 0, h-1]\n   \n   def f(d, x):\n     if d=='L':\n       r[L] = (min(max(0, r[L]-x), w-1) )\n     if d=='R':\n       r[R] = (min(max(0, r[R]+x), w-1) )\n     if d=='U':\n       r[U] = (min(max(0, r[U]-x), h-1) )\n     if d=='D':\n       r[D] = (min(max(0, r[D]+x), h-1) )\n       \n   def check():\n-    if r[L] >= r[R]:\n-      return False\n-    if r[U] >= r[D]:\n-      return False\n     return True\n   \n   f(ls[0], 1)\n   for s, t in zip(ls[1:], lt[1:]):\n     f(s, 1)\n     f(t, -1)\n     if check():\n       print('NO')\n       return\n   print('YES')\n     \n     \n     \n \n if __name__=='__main__':\n   main()\n \n \n```\n "
    },
    {
        "user_id": "u135360096",
        "problem_id": "p02699",
        "submission1_id": "s985978979",
        "crp_content": "\n s,w = map(int, input().split())\n \n-print(\"safe\" if w<s else \"unself\")\n",
        "origin_generated_text": "\n```\n s,w = map(int, input().split())\n \n-print(\"safe\" if w<s else \"unself\")\n```\n "
    },
    {
        "user_id": "u777148280",
        "problem_id": "p03023",
        "submission1_id": "s093064929",
        "crp_content": "\n \n n = int(input())\n-count = 180 - int(360 / n)\n print(count * n)\n \n",
        "origin_generated_text": "\n```\n \n n = int(input())\n-count = 180 - int(360 / n)\n print(count * n)\n \n```\n "
    },
    {
        "user_id": "u579875569",
        "problem_id": "p03734",
        "submission1_id": "s927270180",
        "crp_content": "\n N, W = list(map(int, input().split()))\n \n values = [[] for i in range(4)]\n \n w0, v0 = list(map(int, input().split()))\n values[0].append(v0)\n \n for i in range(N-1):\n     w, v = list(map(int, input().split()))\n     values[w-w0].append(v)\n \n for i in range(4):\n     values[i].sort()\n     for j in range(len(values[i])-1):\n         values[i][j+1] = values[i][j] + values[i][j+1]\n     values[i].append(0)\n \n res = 0\n \n for i1 in range(len(values[0])+1):\n     for i2 in range(len(values[1])+1):\n         for i3 in range(len(values[2])+1):\n             for i4 in range(len(values[3])+1):\n                 if(w0*i1 + (w0+1)*i2 + (w0+2)*i3 + (w0+3)*i4 <= W):\n                     res = max(res, values[0][i1-1] + values[1][i2-1] + values[2][i3-1] + values[3][i4-1])\n \n print(res)\n",
        "origin_generated_text": "\n```\n N, W = list(map(int, input().split()))\n \n values = [[] for i in range(4)]\n \n w0, v0 = list(map(int, input().split()))\n values[0].append(v0)\n \n for i in range(N-1):\n     w, v = list(map(int, input().split()))\n     values[w-w0].append(v)\n \n for i in range(4):\n     values[i].sort()\n     for j in range(len(values[i])-1):\n         values[i][j+1] = values[i][j] + values[i][j+1]\n     values[i].append(0)\n \n res = 0\n \n for i1 in range(len(values[0])+1):\n     for i2 in range(len(values[1])+1):\n         for i3 in range(len(values[2])+1):\n             for i4 in range(len(values[3])+1):\n                 if(w0*i1 + (w0+1)*i2 + (w0+2)*i3 + (w0+3)*i4 <= W):\n                     res = max(res, values[0][i1-1] + values[1][i2-1] + values[2][i3-1] + values[3][i4-1])\n \n print(res)\n```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03477",
        "submission1_id": "s386249722",
        "crp_content": "\n A,B,C,D = map(int,input().split())\n \n r=A+B\n l=C+D\n \n if r>l:\n-    print(\"Right\")\n-elif l>r:\n     print(\"Left\")\n else:\n     print(\"Balanced\")\n",
        "origin_generated_text": "\n```\n A,B,C,D = map(int,input().split())\n \n r=A+B\n l=C+D\n \n if r>l:\n-    print(\"Right\")\n-elif l>r:\n     print(\"Left\")\n else:\n     print(\"Balanced\")\n```\n "
    },
    {
        "user_id": "u362104929",
        "problem_id": "p02385",
        "submission1_id": "s948747161",
        "crp_content": "\n class Dice:\n     def __init__(self):\n         self.state =[1, 2, 3, 4, 5, 6]\n \n     def setState(self, li):  \n         self.state = li\n \n     def move(self, str_direction):\n         if str_direction == \"N\":\n             self.state = [self.state[1], self.state[5],self.state[2],\n                           self.state[3], self.state[0], self.state[4]]\n         if str_direction == \"W\":\n             self.state = [self.state[2], self.state[1], self.state[5],\n                           self.state[0], self.state[4], self.state[3]]\n         if str_direction == \"E\":\n             self.state = [self.state[3], self.state[1], self.state[0],\n                           self.state[5], self.state[4], self.state[2]]\n         if str_direction == \"S\":\n             self.state = [self.state[4], self.state[0], self.state[2],\n                           self.state[3], self.state[5], self.state[1]]\n \n     def rotate(self):\n         self.state = [self.state[0], self.state[2], self.state[1],\n                       self.state[4], self.state[3], self.state[5]]\n \n     def sameDice1(self, dice1):\n         set1 = list()\n         for _ in range(4):\n             set1.append({self.state[0], self.state[1], self.state[2]})\n             set1.append({self.state[4], self.state[5], self.state[3]})\n             self.move(\"N\")\n         d1 = {dice1.state[0], dice1.state[1], dice1.state[2]}\n         d2 = {dice1.state[4], dice1.state[5], dice1.state[3]}\n         if d1 in set1 or d2 in set1:\n             return \"Yes\"\n         return \"No\"\n \n \n def main():\n     myd1, myd2 = Dice(), Dice()\n     myd1.setState(list(map(int, input().split())))\n     myd2.setState(list(map(int, input().split())))\n     print(myd1.sameDice1(myd2))\n     return\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n class Dice:\n     def __init__(self):\n         self.state =[1, 2, 3, 4, 5, 6]\n \n     def setState(self, li):  \n         self.state = li\n \n     def move(self, str_direction):\n         if str_direction == \"N\":\n             self.state = [self.state[1], self.state[5],self.state[2],\n                           self.state[3], self.state[0], self.state[4]]\n         if str_direction == \"W\":\n             self.state = [self.state[2], self.state[1], self.state[5],\n                           self.state[0], self.state[4], self.state[3]]\n         if str_direction == \"E\":\n             self.state = [self.state[3], self.state[1], self.state[0],\n                           self.state[5], self.state[4], self.state[2]]\n         if str_direction == \"S\":\n             self.state = [self.state[4], self.state[0], self.state[2],\n                           self.state[3], self.state[5], self.state[1]]\n \n     def rotate(self):\n         self.state = [self.state[0], self.state[2], self.state[1],\n                       self.state[4], self.state[3], self.state[5]]\n \n     def sameDice1(self, dice1):\n         set1 = list()\n         for _ in range(4):\n             set1.append({self.state[0], self.state[1], self.state[2]})\n             set1.append({self.state[4], self.state[5], self.state[3]})\n             self.move(\"N\")\n         d1 = {dice1.state[0], dice1.state[1], dice1.state[2]}\n         d2 = {dice1.state[4], dice1.state[5], dice1.state[3]}\n         if d1 in set1 or d2 in set1:\n             return \"Yes\"\n         return \"No\"\n \n \n def main():\n     myd1, myd2 = Dice(), Dice()\n     myd1.setState(list(map(int, input().split())))\n     myd2.setState(list(map(int, input().split())))\n     print(myd1.sameDice1(myd2))\n     return\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u915066452",
        "problem_id": "p02887",
        "submission1_id": "s272127715",
        "crp_content": "\n N=int(input())\n S=input()\n d=[]\n for i in range(N):\n-    if i==1:\n         d.append(S[i])\n     elif S[i]!=S[i-1]:\n         d.append(S[i])\n print(len(d))\n",
        "origin_generated_text": "\n```\n N=int(input())\n S=input()\n d=[]\n for i in range(N):\n-    if i==1:\n         d.append(S[i])\n     elif S[i]!=S[i-1]:\n         d.append(S[i])\n print(len(d))\n```\n "
    },
    {
        "user_id": "u436484848",
        "problem_id": "p03959",
        "submission1_id": "s460653834",
        "crp_content": "\n def read():\n \treturn [int(i) for i in input().split(\" \")]\n N = int(input())\n T = read()\n A = read()\n t = [(i != j, i) for i, j in zip(T, [None] + T)]\n a = [(i != j, i) for i, j in zip(A, (A + [None])[1:])]\n P = 1\n for p, q in zip(t, a):\n \tif(p[0]):\n \t\tif(q[0]):\n \t\t\tif(p[1] != q[1]):\n \t\t\t\tprint(0)\n \t\t\t\texit()\n \t\telif(q[1] < p[1]):\n \t\t\tprint(0)\n \t\t\texit()\n \telif(q[0]):\n \t\tif(p[1] < q[1]):\n \t\t\tprint(0)\n \t\t\texit()\n \telse:\n-\t\tP *= min(p[1], q[1]) % (10 ** 9 + 7)\n print(P)\n \n",
        "origin_generated_text": "\n```\n def read():\n \treturn [int(i) for i in input().split(\" \")]\n N = int(input())\n T = read()\n A = read()\n t = [(i != j, i) for i, j in zip(T, [None] + T)]\n a = [(i != j, i) for i, j in zip(A, (A + [None])[1:])]\n P = 1\n for p, q in zip(t, a):\n \tif(p[0]):\n \t\tif(q[0]):\n \t\t\tif(p[1] != q[1]):\n \t\t\t\tprint(0)\n \t\t\t\texit()\n \t\telif(q[1] < p[1]):\n \t\t\tprint(0)\n \t\t\texit()\n \telif(q[0]):\n \t\tif(p[1] < q[1]):\n \t\t\tprint(0)\n \t\t\texit()\n \telse:\n-\t\tP *= min(p[1], q[1]) % (10 ** 9 + 7)\n print(P)\n \n```\n "
    },
    {
        "user_id": "u853728588",
        "problem_id": "p02699",
        "submission1_id": "s264941587",
        "crp_content": "\n s, w = map(int, input().split())\n \n-if  w > s:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n s, w = map(int, input().split())\n \n-if  w > s:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u384793271",
        "problem_id": "p03416",
        "submission1_id": "s180994182",
        "crp_content": "\n a, b = map(int, input().split())\n \n ans = 0\n for i in range(a, b+1):\n-    if str(i)[:2] == str(i)[3:]:\n         ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n \n ans = 0\n for i in range(a, b+1):\n-    if str(i)[:2] == str(i)[3:]:\n         ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u552746936",
        "problem_id": "p03479",
        "submission1_id": "s590824918",
        "crp_content": "\n x, y = map(int, input().split())\n \n ans = 0\n \n-while x < y:\n     x *= 2\n     ans += 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n \n ans = 0\n \n-while x < y:\n     x *= 2\n     ans += 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u890751161",
        "problem_id": "p02633",
        "submission1_id": "s707407101",
        "crp_content": "\n X=int(input())\n i=1\n while True:\n-  X=X*i\n   if X%360==0:\n     print(i)\n     break\n   i+=1\n",
        "origin_generated_text": "\n```\n X=int(input())\n i=1\n while True:\n-  X=X*i\n   if X%360==0:\n     print(i)\n     break\n   i+=1\n```\n "
    },
    {
        "user_id": "u798768533",
        "problem_id": "p02917",
        "submission1_id": "s492346875",
        "crp_content": "\n N=int(input())\n B=[10**6]\n B.extend([int(b) for b in input().split()])\n B.append(10**6)\n-print(N, B)\n \n A=[None]*N\n for i in range(N):\n   A[i] = min(B[i], B[i+1])\n   \n print(sum(A))\n",
        "origin_generated_text": "\n```\n N=int(input())\n B=[10**6]\n B.extend([int(b) for b in input().split()])\n B.append(10**6)\n-print(N, B)\n \n A=[None]*N\n for i in range(N):\n   A[i] = min(B[i], B[i+1])\n   \n print(sum(A))\n```\n "
    },
    {
        "user_id": "u690536347",
        "problem_id": "p03573",
        "submission1_id": "s497469417",
        "crp_content": "\n l=list(map(int,input().split()))\n-if l[0]!=l[1]:\n   print(l[0])\n else:\n   print(l[2])\n",
        "origin_generated_text": "\n```\n l=list(map(int,input().split()))\n-if l[0]!=l[1]:\n   print(l[0])\n else:\n   print(l[2])\n```\n "
    },
    {
        "user_id": "u631521893",
        "problem_id": "p02553",
        "submission1_id": "s777989555",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n-print(max([a*c, a*d, b*d, b*d]))\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n-print(max([a*c, a*d, b*d, b*d]))\n```\n "
    },
    {
        "user_id": "u193025715",
        "problem_id": "p00026",
        "submission1_id": "s692785629",
        "crp_content": "\n \n \n paper = [0 for i in range(100)]\n white_points = None\n deep_points = None\n \n def small(x, y):\n     p = [[x, y]]\n     for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n         p.append([x + i, y + j])\n     return p\n \n def middle(x, y):\n     p = small(x, y)\n     for i, j in zip([1, -1] * 2, [1, 1, -1, -1]):\n         p.append([x + i, y + j])\n     return p\n \n def big(x, y):\n     p = middle(x, y)\n     for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n         p.append([x + i, y + j])\n     return p\n \n while True:\n     try:\n         x, y, size = map(int, input().split(','))\n     except:\n         print(paper.count(0))\n         print(max(paper))\n         break\n \n     if size == 1:\n         bp = small(x, y)\n     elif size == 2:\n         bp = middle(x, y)\n     elif size == 3:\n         bp = big(x, y)\n     for p in bp:\n-        if not 0 <= p[0] * 10 + p[1] <= 99: continue\n         paper[p[0] * 10 + p[1]] += 1\n",
        "origin_generated_text": "\n```\n \n \n paper = [0 for i in range(100)]\n white_points = None\n deep_points = None\n \n def small(x, y):\n     p = [[x, y]]\n     for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n         p.append([x + i, y + j])\n     return p\n \n def middle(x, y):\n     p = small(x, y)\n     for i, j in zip([1, -1] * 2, [1, 1, -1, -1]):\n         p.append([x + i, y + j])\n     return p\n \n def big(x, y):\n     p = middle(x, y)\n     for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n         p.append([x + i, y + j])\n     return p\n \n while True:\n     try:\n         x, y, size = map(int, input().split(','))\n     except:\n         print(paper.count(0))\n         print(max(paper))\n         break\n \n     if size == 1:\n         bp = small(x, y)\n     elif size == 2:\n         bp = middle(x, y)\n     elif size == 3:\n         bp = big(x, y)\n     for p in bp:\n-        if not 0 <= p[0] * 10 + p[1] <= 99: continue\n         paper[p[0] * 10 + p[1]] += 1\n```\n "
    },
    {
        "user_id": "u911537358",
        "problem_id": "p02954",
        "submission1_id": "s958250947",
        "crp_content": "\n \n \n import sys\n \n class DGatheringChildren:\n     def solve(self):\n         s = input()\n         n = len(s)\n         i = 0\n         last = 0\n         ans = [0] * n\n         while i < n - 1:\n             if s[i] == 'R' and s[i + 1] == 'L':\n                 ans[i + 1] += 1\n                 for j in range(last, i + 1):\n                     if (i - j) % 2 == 0:\n                         ans[i] += 1\n                     else:\n                         ans[i + 1] += 1\n                 k = i + 2\n                 while k < n and s[k] == 'L':\n                     if (k - i) % 2 == 0:\n                         ans[i] += 1\n                     else:\n                         ans[i + 1] += 1\n                     k += 1\n \n                 last = k\n                 i += 1\n \n             i += 1\n \n         print(*ans)\n \n solver = DGatheringChildren()\n input = sys.stdin.readline\n \n solver.solve()\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n \n class DGatheringChildren:\n     def solve(self):\n         s = input()\n         n = len(s)\n         i = 0\n         last = 0\n         ans = [0] * n\n         while i < n - 1:\n             if s[i] == 'R' and s[i + 1] == 'L':\n                 ans[i + 1] += 1\n                 for j in range(last, i + 1):\n                     if (i - j) % 2 == 0:\n                         ans[i] += 1\n                     else:\n                         ans[i + 1] += 1\n                 k = i + 2\n                 while k < n and s[k] == 'L':\n                     if (k - i) % 2 == 0:\n                         ans[i] += 1\n                     else:\n                         ans[i + 1] += 1\n                     k += 1\n \n                 last = k\n                 i += 1\n \n             i += 1\n \n         print(*ans)\n \n solver = DGatheringChildren()\n input = sys.stdin.readline\n \n solver.solve()\n \n```\n "
    },
    {
        "user_id": "u867848444",
        "problem_id": "p02625",
        "submission1_id": "s767625303",
        "crp_content": "\n \n def pre_c(n, mod):\n     f = [0] * (n + 1)\n     g = [0] * (n + 1)\n     for i in range(n + 1):\n         if i == 0:\n             f[i] = 1\n             g[i] = 1\n         else:\n             f[i] = (f[i - 1] * i) % mod\n             g[i] = pow(f[i], mod - 2, mod)\n \n     return f, g\n \n n, m = map(int,input().split())\n mod = 10 ** 9 + 7\n \n f, g = pre_c(m, mod)\n temp1 = f[m] * g[m - n] * g[n] % mod\n-temp2 = f[n - 1]\n ans = temp1 * (temp2%mod)\n print(ans%mod)\n",
        "origin_generated_text": "\n```\n \n def pre_c(n, mod):\n     f = [0] * (n + 1)\n     g = [0] * (n + 1)\n     for i in range(n + 1):\n         if i == 0:\n             f[i] = 1\n             g[i] = 1\n         else:\n             f[i] = (f[i - 1] * i) % mod\n             g[i] = pow(f[i], mod - 2, mod)\n \n     return f, g\n \n n, m = map(int,input().split())\n mod = 10 ** 9 + 7\n \n f, g = pre_c(m, mod)\n temp1 = f[m] * g[m - n] * g[n] % mod\n-temp2 = f[n - 1]\n ans = temp1 * (temp2%mod)\n print(ans%mod)\n```\n "
    },
    {
        "user_id": "u340010271",
        "problem_id": "p03296",
        "submission1_id": "s450929218",
        "crp_content": "\n N=int(input())\n a=list(map(int,input().split()))\n ans=0\n for i in range(N-1):\n     if a[i]==a[i+1]:\n         ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n N=int(input())\n a=list(map(int,input().split()))\n ans=0\n for i in range(N-1):\n     if a[i]==a[i+1]:\n         ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u336721073",
        "problem_id": "p03023",
        "submission1_id": "s682777517",
        "crp_content": "\n N=int(input())\n-print((N-2)*360)\n",
        "origin_generated_text": "\n```\n N=int(input())\n-print((N-2)*360)\n```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p03096",
        "submission1_id": "s490290894",
        "crp_content": "\n n=int(input())\n cc=[int(input()) for _ in range(n)]\n \n \n c=[cc[0]]\n for i in range(1,n):\n     if cc[i]!=cc[i-1]:\n         c.append(cc[i])\n \n n=len(c)\n \n right_index=[-1]*n\n tmp_right_index=[-1]*(max(c)+1)\n \n for i in range(n):\n     if tmp_right_index[c[i]]==-1:\n         tmp_right_index[c[i]]=i\n     else:\n         right_index[i]=tmp_right_index[c[i]]\n         tmp_right_index[c[i]]=i\n \n dp=[0]*n\n mod=10**9+7\n-print(0,c)\n for i in range(n):\n     if i==0:\n         dp[i]=1\n     else:\n         if right_index[i]==-1:\n             dp[i]+=dp[i-1]%mod\n         else:\n             dp[i]+=dp[i-1]+dp[right_index[i]]%mod\n \n print(dp[-1]%mod)\n \n \n \n \n \n \n \n     \n \n \n",
        "origin_generated_text": "\n```\n n=int(input())\n cc=[int(input()) for _ in range(n)]\n \n \n c=[cc[0]]\n for i in range(1,n):\n     if cc[i]!=cc[i-1]:\n         c.append(cc[i])\n \n n=len(c)\n \n right_index=[-1]*n\n tmp_right_index=[-1]*(max(c)+1)\n \n for i in range(n):\n     if tmp_right_index[c[i]]==-1:\n         tmp_right_index[c[i]]=i\n     else:\n         right_index[i]=tmp_right_index[c[i]]\n         tmp_right_index[c[i]]=i\n \n dp=[0]*n\n mod=10**9+7\n-print(0,c)\n for i in range(n):\n     if i==0:\n         dp[i]=1\n     else:\n         if right_index[i]==-1:\n             dp[i]+=dp[i-1]%mod\n         else:\n             dp[i]+=dp[i-1]+dp[right_index[i]]%mod\n \n print(dp[-1]%mod)\n \n \n \n \n \n \n \n     \n \n \n```\n "
    },
    {
        "user_id": "u275704180",
        "problem_id": "p02718",
        "submission1_id": "s213301268",
        "crp_content": "\n N,M = map(int,input().split())\n arr = list(map(int,input().split()))\n \n res = 0\n for i in range(N):\n-    if i < (1/(4*M)*sum(arr)):\n         res = res\n     else:\n         res += 1\n if res >= M:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N,M = map(int,input().split())\n arr = list(map(int,input().split()))\n \n res = 0\n for i in range(N):\n-    if i < (1/(4*M)*sum(arr)):\n         res = res\n     else:\n         res += 1\n if res >= M:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u715114989",
        "problem_id": "p03943",
        "submission1_id": "s692124568",
        "crp_content": "\n a,b,c = map(int,input().split())\n \n if a+b == c or a+c == b or b+c ==a:\n-  print(\"yes\")\n else:\n-  print(\"no\")\n   \n",
        "origin_generated_text": "\n```\n a,b,c = map(int,input().split())\n \n if a+b == c or a+c == b or b+c ==a:\n-  print(\"yes\")\n else:\n-  print(\"no\")\n   \n```\n "
    },
    {
        "user_id": "u485566817",
        "problem_id": "p03729",
        "submission1_id": "s505988982",
        "crp_content": "\n a, b, c = map(str, input().split())\n-print(\"Yes\" if a[-1] == b[0] and b[-1] == c[0] else \"No\")\n",
        "origin_generated_text": "\n```\n a, b, c = map(str, input().split())\n-print(\"Yes\" if a[-1] == b[0] and b[-1] == c[0] else \"No\")\n```\n "
    },
    {
        "user_id": "u545368057",
        "problem_id": "p03734",
        "submission1_id": "s188607031",
        "crp_content": "\n N,W = map(int, input().split())\n ws = []\n vs = []\n for i in range(N):\n     w,v = map(int, input().split())\n     ws.append(w)\n     vs.append(v)\n ws_m = [w-ws[0] for w in ws]\n \n \n dp = [[[-1]*(3*N+10) for i in range(N+1)] for j in range(N+1)]\n dp[0][0][0] = 0\n for i,(w,v)  in enumerate(zip(ws_m,vs)):\n     for n in range(i+1):\n         for j in range(3*N):\n             dp[i+1][n][j] = max(dp[i+1][n][j], dp[i][n][j])\n             if dp[i][n][j] == -1: continue\n             if j + n*ws[0] + w <= W:\n                 dp[i+1][n+1][j+w] = max(dp[i][n][j+w], dp[i][n][j] + v)\n ans= 0\n for i,As in enumerate(dp[N]):\n     w = W - i*ws[0]\n     if w > 0:\n-        ans = max(ans,max(As[:w+1]))\n print(ans)    \n \n",
        "origin_generated_text": "\n```\n N,W = map(int, input().split())\n ws = []\n vs = []\n for i in range(N):\n     w,v = map(int, input().split())\n     ws.append(w)\n     vs.append(v)\n ws_m = [w-ws[0] for w in ws]\n \n \n dp = [[[-1]*(3*N+10) for i in range(N+1)] for j in range(N+1)]\n dp[0][0][0] = 0\n for i,(w,v)  in enumerate(zip(ws_m,vs)):\n     for n in range(i+1):\n         for j in range(3*N):\n             dp[i+1][n][j] = max(dp[i+1][n][j], dp[i][n][j])\n             if dp[i][n][j] == -1: continue\n             if j + n*ws[0] + w <= W:\n                 dp[i+1][n+1][j+w] = max(dp[i][n][j+w], dp[i][n][j] + v)\n ans= 0\n for i,As in enumerate(dp[N]):\n     w = W - i*ws[0]\n     if w > 0:\n-        ans = max(ans,max(As[:w+1]))\n print(ans)    \n \n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p02640",
        "submission1_id": "s090434195",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n X, Y = map(int, input().split())\n-for i in range(101):\n   j = X - i\n   if i * 2 + j * 4 == Y:\n     print(\"Yes\")\n     exit(0)\n print(\"No\")\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n X, Y = map(int, input().split())\n-for i in range(101):\n   j = X - i\n   if i * 2 + j * 4 == Y:\n     print(\"Yes\")\n     exit(0)\n print(\"No\")\n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s238208352",
        "crp_content": "\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n-    drop(1,1,1)\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n-    drop(1,1,1)\n \n \n```\n "
    },
    {
        "user_id": "u701318346",
        "problem_id": "p03970",
        "submission1_id": "s248377239",
        "crp_content": "\n S = input()\n A = 'C0DEFESTIVAL2O16'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == A[i]:\n     ans += 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n A = 'C0DEFESTIVAL2O16'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == A[i]:\n     ans += 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u699089116",
        "problem_id": "p03477",
        "submission1_id": "s920372011",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n \n left = a + b\n right = c + d\n \n if left == right:\n   print(\"Balanced\")\n elif left > right:\n   print(\"Left\")\n else:\n-  print(\"Rigtht\")\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n \n left = a + b\n right = c + d\n \n if left == right:\n   print(\"Balanced\")\n elif left > right:\n   print(\"Left\")\n else:\n-  print(\"Rigtht\")\n```\n "
    },
    {
        "user_id": "u335295553",
        "problem_id": "p03326",
        "submission1_id": "s683431180",
        "crp_content": "\n N, M = map(int, input().split())\n xyz = [list(map(int, input().split())) for i in range(N)]\n tmp = [[0]*N for i in range(8)]\n \n for n, _ in enumerate(xyz):\n     x,y,z = _\n     tmp[0][n] = x+y+z\n     tmp[1][n] = x+y-z\n     tmp[2][n] = x-y+z\n     tmp[3][n] = x-y-z\n     tmp[4][n] = -x+y+z\n     tmp[5][n] = -x+y-z\n     tmp[6][n] = -x-y+z\n     tmp[7][n] = -x-y-z\n \n result = [0]*8\n for i in range(8):\n-    print(sorted(tmp[i]))\n     result[i] = sum(sorted(tmp[i])[-M:])\n \n print(max(result))\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n xyz = [list(map(int, input().split())) for i in range(N)]\n tmp = [[0]*N for i in range(8)]\n \n for n, _ in enumerate(xyz):\n     x,y,z = _\n     tmp[0][n] = x+y+z\n     tmp[1][n] = x+y-z\n     tmp[2][n] = x-y+z\n     tmp[3][n] = x-y-z\n     tmp[4][n] = -x+y+z\n     tmp[5][n] = -x+y-z\n     tmp[6][n] = -x-y+z\n     tmp[7][n] = -x-y-z\n \n result = [0]*8\n for i in range(8):\n-    print(sorted(tmp[i]))\n     result[i] = sum(sorted(tmp[i])[-M:])\n \n print(max(result))\n```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p02580",
        "submission1_id": "s918237454",
        "crp_content": "\n \n from collections import defaultdict\n \n H, W, M = map(int, input().split())\n X = [list(map(int, input().split())) for _ in range(M)]\n \n ctr_h = defaultdict(list)\n ctr_w = defaultdict(list)\n \n for h, w in X:\n     ctr_h[h].append((h, w))\n     ctr_w[w].append((h, w))\n \n val_h = sorted(ctr_h.items(), key=lambda x: -len(x[1]))\n val_w = sorted(ctr_w.items(), key=lambda x: -len(x[1]))\n \n max_h = len(val_h[0][1])\n max_w = len(val_w[0][1])\n \n-if (len(val_h) > 1 and len(val_h[1][1]) == max_h\n-        and len(val_w) > 1 and len(val_w[1][1]) == max_w):\n-    print(max_h + max_w)\n-else:\n-    h = val_h[0][0]\n-    w = val_w[0][0]\n-    for u, v in X:\n-        if u == h and v == w:\n-            print(max_h + max_w - 1)\n-            break\n-    else:\n-        print(max_h + max_w)\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict\n \n H, W, M = map(int, input().split())\n X = [list(map(int, input().split())) for _ in range(M)]\n \n ctr_h = defaultdict(list)\n ctr_w = defaultdict(list)\n \n for h, w in X:\n     ctr_h[h].append((h, w))\n     ctr_w[w].append((h, w))\n \n val_h = sorted(ctr_h.items(), key=lambda x: -len(x[1]))\n val_w = sorted(ctr_w.items(), key=lambda x: -len(x[1]))\n \n max_h = len(val_h[0][1])\n max_w = len(val_w[0][1])\n \n-if (len(val_h) > 1 and len(val_h[1][1]) == max_h\n-        and len(val_w) > 1 and len(val_w[1][1]) == max_w):\n-    print(max_h + max_w)\n-else:\n-    h = val_h[0][0]\n-    w = val_w[0][0]\n-    for u, v in X:\n-        if u == h and v == w:\n-            print(max_h + max_w - 1)\n-            break\n-    else:\n-        print(max_h + max_w)\n \n```\n "
    },
    {
        "user_id": "u017810624",
        "problem_id": "p03303",
        "submission1_id": "s323006744",
        "crp_content": "\n s=input()\n w=int(input())\n a=[]\n for i in range(len(s)):\n-  if (i+1)%w==1:a.append(s[i])\n print(''.join(a))\n",
        "origin_generated_text": "\n```\n s=input()\n w=int(input())\n a=[]\n for i in range(len(s)):\n-  if (i+1)%w==1:a.append(s[i])\n print(''.join(a))\n```\n "
    },
    {
        "user_id": "u285497176",
        "problem_id": "p02730",
        "submission1_id": "s256705340",
        "crp_content": "\n def main():\n     s = input()\n     s1 = s[:int((len(s)-1)/2)]\n-    s2 = s[int((len(s)+3)/2-1):]\n     rs1 = s1[::-1]\n     rs2 = s2[::-1]\n \n     if s1 == rs1 and s2 == rs2:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     \n     return\n     \n main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     s = input()\n     s1 = s[:int((len(s)-1)/2)]\n-    s2 = s[int((len(s)+3)/2-1):]\n     rs1 = s1[::-1]\n     rs2 = s2[::-1]\n \n     if s1 == rs1 and s2 == rs2:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     \n     return\n     \n main()\n \n```\n "
    },
    {
        "user_id": "u256901785",
        "problem_id": "p03206",
        "submission1_id": "s300815748",
        "crp_content": "\n n = int(input())\n-print('Chrismas ', end='')\n-for i in range(0,25-n):\n     print('Eve ',end='')\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n-print('Chrismas ', end='')\n-for i in range(0,25-n):\n     print('Eve ',end='')\n \n```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03992",
        "submission1_id": "s214357355",
        "crp_content": "\n s=input()\n-print(s[:4]+' '+s[5:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4]+' '+s[5:])\n```\n "
    },
    {
        "user_id": "u036531287",
        "problem_id": "p02887",
        "submission1_id": "s143467708",
        "crp_content": "\n a = int(input().split()[0])\n b = list(map(str, input().split()[0]))\n k = 0\n s = 1\n \n \n while k<len(b) -1:\n  t = b[k]\n  u = b[k+1]\n  \n  if not t == u:\n   s = s + 1\n-  print(s)\n  k = k + 1\n print(s)\n",
        "origin_generated_text": "\n```\n a = int(input().split()[0])\n b = list(map(str, input().split()[0]))\n k = 0\n s = 1\n \n \n while k<len(b) -1:\n  t = b[k]\n  u = b[k+1]\n  \n  if not t == u:\n   s = s + 1\n-  print(s)\n  k = k + 1\n print(s)\n```\n "
    },
    {
        "user_id": "u278670845",
        "problem_id": "p03477",
        "submission1_id": "s648565644",
        "crp_content": "\n a,b,c,d = map(int, input().split())\n-if a+b < c+d:\n   print(\"Left\")\n elif a+b == c+d:\n   print(\"Balanced\")\n else:\n   print(\"Right\")\n",
        "origin_generated_text": "\n```\n a,b,c,d = map(int, input().split())\n-if a+b < c+d:\n   print(\"Left\")\n elif a+b == c+d:\n   print(\"Balanced\")\n else:\n   print(\"Right\")\n```\n "
    },
    {
        "user_id": "u391731808",
        "problem_id": "p03970",
        "submission1_id": "s020690795",
        "crp_content": "\n S=input()\n-print(sum(s==\"CODEFESTIVAL2016\"[i] for i,s in enumerate(S)))\n",
        "origin_generated_text": "\n```\n S=input()\n-print(sum(s==\"CODEFESTIVAL2016\"[i] for i,s in enumerate(S)))\n```\n "
    },
    {
        "user_id": "u368796742",
        "problem_id": "p02665",
        "submission1_id": "s285868944",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n ans = 0\n \n l = [0]*(n+1)\n l[-1] = a[-1]\n for i in range(n-1,-1,-1):\n     l[i] += l[i+1]+a[i]\n \n if a[0] == 1:\n     if n > 0:\n         print(-1)\n         exit()\n     else:\n         print(1)\n         exit()\n b = 2\n ans = 1\n for i in range(1,n+1):\n     if b*2 < a[i]:\n         print(-1)\n         exit()\n     else:\n         if i == n:\n             ans += a[-1]\n         else:\n             b = (b-a[i])*2\n             ans += min(b,l[i+1])\n \n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n ans = 0\n \n l = [0]*(n+1)\n l[-1] = a[-1]\n for i in range(n-1,-1,-1):\n     l[i] += l[i+1]+a[i]\n \n if a[0] == 1:\n     if n > 0:\n         print(-1)\n         exit()\n     else:\n         print(1)\n         exit()\n b = 2\n ans = 1\n for i in range(1,n+1):\n     if b*2 < a[i]:\n         print(-1)\n         exit()\n     else:\n         if i == n:\n             ans += a[-1]\n         else:\n             b = (b-a[i])*2\n             ans += min(b,l[i+1])\n \n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u992910889",
        "problem_id": "p03573",
        "submission1_id": "s297210170",
        "crp_content": "\n S=list(map(int,input().split()))\n-for i in range(2):\n     if S.count(S[i])==1:\n         print(S[i])\n",
        "origin_generated_text": "\n```\n S=list(map(int,input().split()))\n-for i in range(2):\n     if S.count(S[i])==1:\n         print(S[i])\n```\n "
    },
    {
        "user_id": "u076245995",
        "problem_id": "p02665",
        "submission1_id": "s539980600",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n s = [0] * (N + 2)\n for i in range(N + 1):\n     s[i + 1] = s[i] + A[i]\n node, leaf = 1, 1\n for d in range(1, N + 1):\n     if leaf < A[d]:\n         print(-1)\n         break\n-    leaf = min((leaf - A[d - 1]) * 2, s[N + 1] - s[d])\n-    if leaf < A[d]:\n-        print(-1)\n-        break\n     node += leaf\n else:\n     print(node)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n s = [0] * (N + 2)\n for i in range(N + 1):\n     s[i + 1] = s[i] + A[i]\n node, leaf = 1, 1\n for d in range(1, N + 1):\n     if leaf < A[d]:\n         print(-1)\n         break\n-    leaf = min((leaf - A[d - 1]) * 2, s[N + 1] - s[d])\n-    if leaf < A[d]:\n-        print(-1)\n-        break\n     node += leaf\n else:\n     print(node)\n```\n "
    },
    {
        "user_id": "u185405877",
        "problem_id": "p02718",
        "submission1_id": "s232388254",
        "crp_content": "\n x,y= list(map(int, input().split()))\n i = list(map(int, input().split()))\n i.sort(reverse=True)\n k=sum(i)\n flag=0\n for j in range(y):\n-    if i[j]>=k/(4*(j+1)):\n         flag+=1\n-if flag>y:\n     print(\"No\")\n else:\n     print(\"Yes\")\n  \n",
        "origin_generated_text": "\n```\n x,y= list(map(int, input().split()))\n i = list(map(int, input().split()))\n i.sort(reverse=True)\n k=sum(i)\n flag=0\n for j in range(y):\n-    if i[j]>=k/(4*(j+1)):\n         flag+=1\n-if flag>y:\n     print(\"No\")\n else:\n     print(\"Yes\")\n  \n```\n "
    },
    {
        "user_id": "u726285999",
        "problem_id": "p02556",
        "submission1_id": "s143148485",
        "crp_content": "\n import sys\n \n \n def main():\n     N = int(sys.stdin.readline().rstrip())\n \n     X = [None] * N\n     Y = [None] * N \n     Z = [None] * N\n \n     for i in range(N):\n         x, y = map(int, sys.stdin.readline().rstrip().split())\n         X[i] = x\n         Y[i] = y\n     \n     X_min = min(X)\n     Y_min = min(Y)\n \n     for i in range(N):\n         X[i] = X[i] - X_min\n         Y[i] = Y[i] - Y_min\n-        Z[i] = X[i] + Y[i]\n \n-    print(max(Z) - min(Z))\n \n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n \n \n def main():\n     N = int(sys.stdin.readline().rstrip())\n \n     X = [None] * N\n     Y = [None] * N \n     Z = [None] * N\n \n     for i in range(N):\n         x, y = map(int, sys.stdin.readline().rstrip().split())\n         X[i] = x\n         Y[i] = y\n     \n     X_min = min(X)\n     Y_min = min(Y)\n \n     for i in range(N):\n         X[i] = X[i] - X_min\n         Y[i] = Y[i] - Y_min\n-        Z[i] = X[i] + Y[i]\n \n-    print(max(Z) - min(Z))\n \n \n main()\n```\n "
    },
    {
        "user_id": "u949338836",
        "problem_id": "p02385",
        "submission1_id": "s019287191",
        "crp_content": "\n \n \n \n class Dice:\n     def __init__(self, ary):\n         self.top, self.south, self.east, self.west, self.north, self.bottom = ary\n \n     def roll_n(self):\n         self.top, self.north, self.bottom, self.south = self.south, self.top, self.north, self.bottom\n \n     def roll_e(self):\n         self.top, self.east, self.bottom, self.west = self.west, self.top, self.east, self.bottom\n \n     def twist(self):\n         self.north, self.east, self.south, self.west = self.west, self.north, self.east, self.south\n \n     def isEqual(self, dice):\n         if self.top == dice.top and self.south == dice.south and self.east == dice.east and self.west == dice.west and self.north == dice.north and self.bottom == dice.bottom:\n             return True\n         else:\n             return False\n \n dice1 = Dice(map(int,input().split()))\n dice2 = Dice(map(int,input().split()))\n \n flag = False\n \n for i in range(6):\n     if i%2 == 0:\n         dice1.roll_n()\n     else:\n         dice1.roll_e()\n \n     for j in range(4):\n         if dice1.isEqual(dice2):\n             flag = True\n         else:\n-            dice1.twist\n \n     if flag:\n         break\n \n if flag:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n \n \n \n class Dice:\n     def __init__(self, ary):\n         self.top, self.south, self.east, self.west, self.north, self.bottom = ary\n \n     def roll_n(self):\n         self.top, self.north, self.bottom, self.south = self.south, self.top, self.north, self.bottom\n \n     def roll_e(self):\n         self.top, self.east, self.bottom, self.west = self.west, self.top, self.east, self.bottom\n \n     def twist(self):\n         self.north, self.east, self.south, self.west = self.west, self.north, self.east, self.south\n \n     def isEqual(self, dice):\n         if self.top == dice.top and self.south == dice.south and self.east == dice.east and self.west == dice.west and self.north == dice.north and self.bottom == dice.bottom:\n             return True\n         else:\n             return False\n \n dice1 = Dice(map(int,input().split()))\n dice2 = Dice(map(int,input().split()))\n \n flag = False\n \n for i in range(6):\n     if i%2 == 0:\n         dice1.roll_n()\n     else:\n         dice1.roll_e()\n \n     for j in range(4):\n         if dice1.isEqual(dice2):\n             flag = True\n         else:\n-            dice1.twist\n \n     if flag:\n         break\n \n if flag:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03008",
        "submission1_id": "s424250824",
        "crp_content": "\n n = int(input())\n g1,s1,b1 = map(int,input().split())\n g2,s2,b2 = map(int,input().split())\n def trade(n,g1,s1,b1,g2,s2,b2):\n   tradelist = []\n   for x,y in (g1,g2),(s1,s2),(b1,b2):\n     if x < y:\n       tradelist.append((x,y))\n   if not tradelist:\n     return n\n   dp = [0]*(n+1)\n   for w,v in tradelist:\n     for i in range(n+1-w):\n       dp[i+w] = max(dp[i+w],dp[i]+v)\n   return dp[n]\n \n ans1 = trade(n,g1,s1,b1,g2,s2,b2)\n ans2 = trade(ans1,g2,s2,b2,g1,s1,b1)\n print(ans2)\n",
        "origin_generated_text": "\n```\n n = int(input())\n g1,s1,b1 = map(int,input().split())\n g2,s2,b2 = map(int,input().split())\n def trade(n,g1,s1,b1,g2,s2,b2):\n   tradelist = []\n   for x,y in (g1,g2),(s1,s2),(b1,b2):\n     if x < y:\n       tradelist.append((x,y))\n   if not tradelist:\n     return n\n   dp = [0]*(n+1)\n   for w,v in tradelist:\n     for i in range(n+1-w):\n       dp[i+w] = max(dp[i+w],dp[i]+v)\n   return dp[n]\n \n ans1 = trade(n,g1,s1,b1,g2,s2,b2)\n ans2 = trade(ans1,g2,s2,b2,g1,s1,b1)\n print(ans2)\n```\n "
    },
    {
        "user_id": "u477320129",
        "problem_id": "p03734",
        "submission1_id": "s167233001",
        "crp_content": "\n \n import sys\n \n \n def solve(N: int, W: int, w: \"List[int]\", v: \"List[int]\"):\n     from itertools import product\n     base_w = w[0]\n     v_list = [[] for _ in range(4)]\n     for ww, vv in zip(w, v):\n         v_list[ww-base_w].append(vv)\n     v_list = [sorted(vv) for vv in v_list]\n     acc_v = [[0] * (N+1) for _ in range(4)]\n     for i, vv in enumerate(v_list):\n         for j, vvv in enumerate(vv):\n             acc_v[i][j+1] = acc_v[i][j] + vvv\n     ans = 0\n     for i, j, k, l in product(range(N+1), repeat=4):\n         if i * base_w + j * (base_w + 1) + k * (base_w + 2)+ l * (base_w + 3) > W:\n             continue\n         ans = max(ans, acc_v[0][i] + acc_v[1][j] + acc_v[2][k] + acc_v[3][l])\n     return ans\n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     W = int(next(tokens))  \n     w = [int()] * (N)  \n     v = [int()] * (N)  \n     for i in range(N):\n         w[i] = int(next(tokens))\n         v[i] = int(next(tokens))\n     print(solve(N, W, w, v))\n \n def test():\n     import doctest\n     doctest.testmod()\n \n if __name__ == '__main__':\n     \n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n \n \n def solve(N: int, W: int, w: \"List[int]\", v: \"List[int]\"):\n     from itertools import product\n     base_w = w[0]\n     v_list = [[] for _ in range(4)]\n     for ww, vv in zip(w, v):\n         v_list[ww-base_w].append(vv)\n     v_list = [sorted(vv) for vv in v_list]\n     acc_v = [[0] * (N+1) for _ in range(4)]\n     for i, vv in enumerate(v_list):\n         for j, vvv in enumerate(vv):\n             acc_v[i][j+1] = acc_v[i][j] + vvv\n     ans = 0\n     for i, j, k, l in product(range(N+1), repeat=4):\n         if i * base_w + j * (base_w + 1) + k * (base_w + 2)+ l * (base_w + 3) > W:\n             continue\n         ans = max(ans, acc_v[0][i] + acc_v[1][j] + acc_v[2][k] + acc_v[3][l])\n     return ans\n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     W = int(next(tokens))  \n     w = [int()] * (N)  \n     v = [int()] * (N)  \n     for i in range(N):\n         w[i] = int(next(tokens))\n         v[i] = int(next(tokens))\n     print(solve(N, W, w, v))\n \n def test():\n     import doctest\n     doctest.testmod()\n \n if __name__ == '__main__':\n     \n     main()\n \n```\n "
    },
    {
        "user_id": "u322229918",
        "problem_id": "p02912",
        "submission1_id": "s077943978",
        "crp_content": "\n N, M = map(int, input().split())\n mvals = list(map(lambda x: -int(x), input().split()))\n \n import heapq\n heapq.heapify(mvals)\n \n for _ in range(M):\n     price = heapq.heappop(mvals)\n-    heapq.heappush(mvals, price / 2)\n \n res = -int(sum(mvals))\n print(res)\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n mvals = list(map(lambda x: -int(x), input().split()))\n \n import heapq\n heapq.heapify(mvals)\n \n for _ in range(M):\n     price = heapq.heappop(mvals)\n-    heapq.heappush(mvals, price / 2)\n \n res = -int(sum(mvals))\n print(res)\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s013563536",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent:\n                 cnt = 0\n                 f = True\n     if f:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent:\n                 cnt = 0\n                 f = True\n     if f:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u617718239",
        "problem_id": "p02727",
        "submission1_id": "s649197768",
        "crp_content": "\n x, y, a, b, c = map(int, input().split())\n arrayP = list(input().split())\n arrayQ = list(input().split())\n arrayR = list(input().split())\n arrayP.sort(reverse=True)\n arrayQ.sort(reverse=True)\n arrayR.sort(reverse=True)\n arrayAns = []\n for i in range(x):\n     arrayAns.append(int(arrayP[i]))\n for i in range(y):\n     arrayAns.append(int(arrayQ[i]))\n arrayAns.sort()\n for i in range(len(arrayR)):\n-    if arrayAns[0] <= int(arrayR[i]):\n         arrayAns[0] = int(arrayR[i])\n         arrayAns.sort()\n print(sum(arrayAns))\n",
        "origin_generated_text": "\n```\n x, y, a, b, c = map(int, input().split())\n arrayP = list(input().split())\n arrayQ = list(input().split())\n arrayR = list(input().split())\n arrayP.sort(reverse=True)\n arrayQ.sort(reverse=True)\n arrayR.sort(reverse=True)\n arrayAns = []\n for i in range(x):\n     arrayAns.append(int(arrayP[i]))\n for i in range(y):\n     arrayAns.append(int(arrayQ[i]))\n arrayAns.sort()\n for i in range(len(arrayR)):\n-    if arrayAns[0] <= int(arrayR[i]):\n         arrayAns[0] = int(arrayR[i])\n         arrayAns.sort()\n print(sum(arrayAns))\n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s247145139",
        "crp_content": "\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < abs(br - ar):\n-        if ar > br:\n             print(2)\n         else:\n             print(-2)\n-    elif d <= ar + br:\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < abs(br - ar):\n-        if ar > br:\n             print(2)\n         else:\n             print(-2)\n-    elif d <= ar + br:\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p03106",
        "submission1_id": "s909109023",
        "crp_content": "\n a,b,c= input().split()\n x,y,z=(int(a),int(b),int(c))\n ans_list =[]\n-for i in range(min(x,y)):\n-    \n-    if x % (i+1) == 0 and y % (i+1) == 0:\n-        ans_list.append(i+1)\n-        print(ans_list)\n print(ans_list[len(ans_list)-z])\n",
        "origin_generated_text": "\n```\n a,b,c= input().split()\n x,y,z=(int(a),int(b),int(c))\n ans_list =[]\n-for i in range(min(x,y)):\n-    \n-    if x % (i+1) == 0 and y % (i+1) == 0:\n-        ans_list.append(i+1)\n-        print(ans_list)\n print(ans_list[len(ans_list)-z])\n```\n "
    },
    {
        "user_id": "u300637346",
        "problem_id": "p03970",
        "submission1_id": "s007636163",
        "crp_content": "\n s=list(input())\n t=list('CODEFESTIVAL2016')\n count=0\n for k in range(16):\n-    if s[k] == t[k]:\n         count += 1\n print(count)\n \n \n",
        "origin_generated_text": "\n```\n s=list(input())\n t=list('CODEFESTIVAL2016')\n count=0\n for k in range(16):\n-    if s[k] == t[k]:\n         count += 1\n print(count)\n \n \n```\n "
    },
    {
        "user_id": "u038408819",
        "problem_id": "p03716",
        "submission1_id": "s458349180",
        "crp_content": "\n N = int(input())\n a = list(map(int, input().split()))\n \n import heapq\n que1 = []\n heapq.heapify(que1)\n S = [0] * (2*N + 1)\n for i in range(N):\n     S[i + 1] = S[i] + a[i]\n     \n     heapq.heappush(que1, a[i])\n que2 = []\n heapq.heapify(que2)\n T = [0] * (2*N + 1)\n for i in range(N):\n     T[i + 1] = T[i] + a[3*N - i - 1]\n     \n     heapq.heappush(que2, -a[3*N - i - 1])\n \n for i in range(N, 2*N):\n     mi = heapq.heappop(que1)\n-    print(mi)\n     if a[i] > mi:\n         S[i + 1] = S[i] - mi + a[i]\n         \n         heapq.heappush(que1, a[i])\n     else:\n         S[i + 1] = S[i]\n         heapq.heappush(que1, mi)\n for i in range(N, 2*N):\n     ma = heapq.heappop(que2) * -1\n-    print(ma)\n     if a[3*N - i - 1] < ma:\n         T[i + 1] = T[i] - ma + a[3*N - i - 1]\n         \n         \n         heapq.heappush(que2, -a[3*N - i - 1])\n     else:\n         T[i + 1] = T[i]\n         heapq.heappush(que2, -ma)\n \n res = -float('Inf')\n for i in range(N, 2*N):\n     res = max(res, S[i] - T[3*N - i])\n print(res)\n",
        "origin_generated_text": "\n```\n N = int(input())\n a = list(map(int, input().split()))\n \n import heapq\n que1 = []\n heapq.heapify(que1)\n S = [0] * (2*N + 1)\n for i in range(N):\n     S[i + 1] = S[i] + a[i]\n     \n     heapq.heappush(que1, a[i])\n que2 = []\n heapq.heapify(que2)\n T = [0] * (2*N + 1)\n for i in range(N):\n     T[i + 1] = T[i] + a[3*N - i - 1]\n     \n     heapq.heappush(que2, -a[3*N - i - 1])\n \n for i in range(N, 2*N):\n     mi = heapq.heappop(que1)\n-    print(mi)\n     if a[i] > mi:\n         S[i + 1] = S[i] - mi + a[i]\n         \n         heapq.heappush(que1, a[i])\n     else:\n         S[i + 1] = S[i]\n         heapq.heappush(que1, mi)\n for i in range(N, 2*N):\n     ma = heapq.heappop(que2) * -1\n-    print(ma)\n     if a[3*N - i - 1] < ma:\n         T[i + 1] = T[i] - ma + a[3*N - i - 1]\n         \n         \n         heapq.heappush(que2, -a[3*N - i - 1])\n     else:\n         T[i + 1] = T[i]\n         heapq.heappush(que2, -ma)\n \n res = -float('Inf')\n for i in range(N, 2*N):\n     res = max(res, S[i] - T[3*N - i])\n print(res)\n```\n "
    },
    {
        "user_id": "u771710924",
        "problem_id": "p02633",
        "submission1_id": "s376609535",
        "crp_content": "\n \n \n \n \n \n \n \n def main():\n     x = int(input())\n-    ans = 360 \n-    print(ans)\n     return\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n \n \n def main():\n     x = int(input())\n-    ans = 360 \n-    print(ans)\n     return\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u558242240",
        "problem_id": "p02954",
        "submission1_id": "s097028769",
        "crp_content": "\n s = input()\n n = len(s)\n rl = 0\n lr = 0\n count = [0, 0]\n ans = [0] * n\n prev = s[0]\n for i in range(n):\n     if s[i] != prev:\n         if s[i] == 'L':\n             rl = i\n             ans[rl - 1] += count[0]\n             ans[rl] += count[1]\n             count = [0, 0]\n-            print(ans)\n         if s[i] == 'R':\n             lr = i\n             ans[rl] += count[0]\n             ans[rl - 1] += count[1]\n             count = [0, 0]\n-            print(ans)\n     if s[i] == 'L':\n         count[(i - rl) % 2] += 1\n     if s[i] == 'R':\n         count[(i - lr) % 2] += 1\n     prev = s[i]\n-    print(count)\n ans[rl] += count[0]\n ans[rl - 1] += count[1]\n \n-print(ans)\n print(' '.join(map(lambda x: str(x), ans)))\n \n \n \n \n \n \n \n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n rl = 0\n lr = 0\n count = [0, 0]\n ans = [0] * n\n prev = s[0]\n for i in range(n):\n     if s[i] != prev:\n         if s[i] == 'L':\n             rl = i\n             ans[rl - 1] += count[0]\n             ans[rl] += count[1]\n             count = [0, 0]\n-            print(ans)\n         if s[i] == 'R':\n             lr = i\n             ans[rl] += count[0]\n             ans[rl - 1] += count[1]\n             count = [0, 0]\n-            print(ans)\n     if s[i] == 'L':\n         count[(i - rl) % 2] += 1\n     if s[i] == 'R':\n         count[(i - lr) % 2] += 1\n     prev = s[i]\n-    print(count)\n ans[rl] += count[0]\n ans[rl - 1] += count[1]\n \n-print(ans)\n print(' '.join(map(lambda x: str(x), ans)))\n \n \n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u358919705",
        "problem_id": "p00026",
        "submission1_id": "s163690300",
        "crp_content": "\n a = [[0] * 14 for _ in range(14)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     x += 2\n     y += 2\n     for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n         a[x + d[0]][y + d[1]] += 1\n     if s >= 2:\n         for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n             a[x + d[0]][y + d[1]] += 1\n     if s == 3:\n         for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n             a[x + d[0]][y + d[1]] += 1\n print(sum(a[i][2:12].count(0) for i in range(2, 12)))\n print(max(max(a[i]) for i in range(14)))\n-print(a)\n",
        "origin_generated_text": "\n```\n a = [[0] * 14 for _ in range(14)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     x += 2\n     y += 2\n     for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n         a[x + d[0]][y + d[1]] += 1\n     if s >= 2:\n         for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n             a[x + d[0]][y + d[1]] += 1\n     if s == 3:\n         for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n             a[x + d[0]][y + d[1]] += 1\n print(sum(a[i][2:12].count(0) for i in range(2, 12)))\n print(max(max(a[i]) for i in range(14)))\n-print(a)\n```\n "
    },
    {
        "user_id": "u488934106",
        "problem_id": "p03563",
        "submission1_id": "s919203045",
        "crp_content": "\n def newrating(r , g):\n \n     return (r + g) / 2\n \n def main():\n     r = int(input())\n     g = int(input())\n-    print(newrating(r , g))\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n def newrating(r , g):\n \n     return (r + g) / 2\n \n def main():\n     r = int(input())\n     g = int(input())\n-    print(newrating(r , g))\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03714",
        "submission1_id": "s142152285",
        "crp_content": "\n def examD():\n     N = I()\n     a = LI()\n     a_b = list(map(lambda x: x*(-1), a))\n     R = a[:N]; B = a_b[2*N:]\n     heapq.heapify(R)\n     heapq.heapify(B)\n     ansC =[]\n     curR = [sum(R)]; curB = [-sum(B)]\n     for i in range(N):\n         heapq.heappush(R, a[N+i])\n         cur = curR[-1] - heapq.heappop(R) + a[N+i]\n         curR.append(cur)\n     for i in range(N):\n         heapq.heappush(B, a_b[2*N-1-i])\n         cur =curB[-1] - heapq.heappop(B)*(-1) - a_b[2*N-1-i]\n         curB.append(cur)\n     for i in range(N):\n         ansC.append(curR[i]-curB[-1-i])\n     ans = max(ansC)\n     print(ans)\n \n \n \n \n import sys\n import copy\n import bisect\n import heapq\n from collections import Counter,defaultdict,deque\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n def LS(): return sys.stdin.readline().split()\n def S(): return sys.stdin.readline().strip()\n mod = 10**9 + 7\n inf = float('inf')\n \n examD()\n \n",
        "origin_generated_text": "\n```\n def examD():\n     N = I()\n     a = LI()\n     a_b = list(map(lambda x: x*(-1), a))\n     R = a[:N]; B = a_b[2*N:]\n     heapq.heapify(R)\n     heapq.heapify(B)\n     ansC =[]\n     curR = [sum(R)]; curB = [-sum(B)]\n     for i in range(N):\n         heapq.heappush(R, a[N+i])\n         cur = curR[-1] - heapq.heappop(R) + a[N+i]\n         curR.append(cur)\n     for i in range(N):\n         heapq.heappush(B, a_b[2*N-1-i])\n         cur =curB[-1] - heapq.heappop(B)*(-1) - a_b[2*N-1-i]\n         curB.append(cur)\n     for i in range(N):\n         ansC.append(curR[i]-curB[-1-i])\n     ans = max(ansC)\n     print(ans)\n \n \n \n \n import sys\n import copy\n import bisect\n import heapq\n from collections import Counter,defaultdict,deque\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n def LS(): return sys.stdin.readline().split()\n def S(): return sys.stdin.readline().strip()\n mod = 10**9 + 7\n inf = float('inf')\n \n examD()\n \n```\n "
    },
    {
        "user_id": "u033602950",
        "problem_id": "p03103",
        "submission1_id": "s111334685",
        "crp_content": "\n N,M = map(int,input().split())\n li={}\n for i in range(N):\n \ta,b = map(int,input().split())\n \tli[a]=b\n li=sorted(li.items())\n m_sum=0\n for k,v in li:\n-\tif v<M:\n \t\tM-=v\n \t\tm_sum+=k*v\n \telse:\n \t\tm_sum+=k*M\n \t\tbreak\n print(m_sum)\n \n",
        "origin_generated_text": "\n```\n N,M = map(int,input().split())\n li={}\n for i in range(N):\n \ta,b = map(int,input().split())\n \tli[a]=b\n li=sorted(li.items())\n m_sum=0\n for k,v in li:\n-\tif v<M:\n \t\tM-=v\n \t\tm_sum+=k*v\n \telse:\n \t\tm_sum+=k*M\n \t\tbreak\n print(m_sum)\n \n```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03087",
        "submission1_id": "s085060749",
        "crp_content": "\n N, Q = map(int, input().split())\n S = input()\n AClst = [] \n \n for i in range(N-1):\n   if S[i:i+2]==\"AC\":\n     AClst.append(1)\n   else:\n     AClst.append(0)\n AClst.append(0)\n \n for q in range(Q):\n   l, r = map(int, input().split())\n-  print(AClst[l:r].count(1))\n",
        "origin_generated_text": "\n```\n N, Q = map(int, input().split())\n S = input()\n AClst = [] \n \n for i in range(N-1):\n   if S[i:i+2]==\"AC\":\n     AClst.append(1)\n   else:\n     AClst.append(0)\n AClst.append(0)\n \n for q in range(Q):\n   l, r = map(int, input().split())\n-  print(AClst[l:r].count(1))\n```\n "
    },
    {
        "user_id": "u242757684",
        "problem_id": "p02625",
        "submission1_id": "s572418098",
        "crp_content": "\n MOD = 10 ** 9 + 7\n N,M = map(int,input().split())\n ans1 = 1\n for i in range(N):\n     ans1 *= M - i\n     ans1 %= MOD\n ans2 = [1,M-1]\n for i in range(2,N+1):\n-    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\n print(ans1 * ans2[N] % MOD)\n",
        "origin_generated_text": "\n```\n MOD = 10 ** 9 + 7\n N,M = map(int,input().split())\n ans1 = 1\n for i in range(N):\n     ans1 *= M - i\n     ans1 %= MOD\n ans2 = [1,M-1]\n for i in range(2,N+1):\n-    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\n print(ans1 * ans2[N] % MOD)\n```\n "
    },
    {
        "user_id": "u368074441",
        "problem_id": "p02886",
        "submission1_id": "s401839933",
        "crp_content": "\n n = int(input())\n d = list(map(int, input().split()))\n \n-print(n)\n i = 0\n j = 0\n p = 0\n \n while i < n - 1:\n     while j < n - 1:\n         p += d[i] * d[j + 1]\n         j = j + 1 \n     i = i + 1\n     j = i\n print(p)\n",
        "origin_generated_text": "\n```\n n = int(input())\n d = list(map(int, input().split()))\n \n-print(n)\n i = 0\n j = 0\n p = 0\n \n while i < n - 1:\n     while j < n - 1:\n         p += d[i] * d[j + 1]\n         j = j + 1 \n     i = i + 1\n     j = i\n print(p)\n```\n "
    },
    {
        "user_id": "u604607346",
        "problem_id": "p03479",
        "submission1_id": "s155378572",
        "crp_content": "\n x, y = map(int, input().split())\n  \n num = 1\n-while x < y:\n     x *= 2\n     num += 1\n  \n print(num)\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n  \n num = 1\n-while x < y:\n     x *= 2\n     num += 1\n  \n print(num)\n```\n "
    },
    {
        "user_id": "u138781768",
        "problem_id": "p03080",
        "submission1_id": "s816314761",
        "crp_content": "\n N = int(input())\n s = input()\n-n1 = N / 2\n s1 = s.count(\"R\")\n if s1 >= n1:\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n N = int(input())\n s = input()\n-n1 = N / 2\n s1 = s.count(\"R\")\n if s1 >= n1:\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u535659144",
        "problem_id": "p03041",
        "submission1_id": "s096364623",
        "crp_content": "\n a,b=map(int,input().split())\n s=input()\n-print(s.replace(s[b-1],s[b-1].lower()))\n",
        "origin_generated_text": "\n```\n a,b=map(int,input().split())\n s=input()\n-print(s.replace(s[b-1],s[b-1].lower()))\n```\n "
    },
    {
        "user_id": "u633450100",
        "problem_id": "p02886",
        "submission1_id": "s113352882",
        "crp_content": "\n N = int(input())\n d = [int(i) for i in input().split()]\n sum = 0\n \n for i in range(N):\n   for j in range(N):\n-    if i != j:\n       sum += d[i] * d[j]\n \n print(sum)\n",
        "origin_generated_text": "\n```\n N = int(input())\n d = [int(i) for i in input().split()]\n sum = 0\n \n for i in range(N):\n   for j in range(N):\n-    if i != j:\n       sum += d[i] * d[j]\n \n print(sum)\n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s923113448",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n-for i in range(n):\n-    j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n-    for j in range(n):\n-        par[i+1][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n         if par[i][x] < y:\n             k += 1<<i\n             x = par[i][x]\n         elif i == 0 and par[i][x] >= y:\n             k += 1<<i\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     ans.append(hoge(a, b))\n \n print(*ans, sep=\"\\n\")\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n-for i in range(n):\n-    j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n-    for j in range(n):\n-        par[i+1][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n         if par[i][x] < y:\n             k += 1<<i\n             x = par[i][x]\n         elif i == 0 and par[i][x] >= y:\n             k += 1<<i\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     ans.append(hoge(a, b))\n \n print(*ans, sep=\"\\n\")\n```\n "
    },
    {
        "user_id": "u602252807",
        "problem_id": "p02854",
        "submission1_id": "s947374469",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n  \n s = sum(a)\n  \n left = 0\n right = s\n for i in range(n-1):\n     left += a[i]\n     right -= a[i]\n     if left >= s/2:\n         right = s - left\n         break\n \n-if left == s/2:\n     print(0)\n else:\n     print(abs(left-right))\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n  \n s = sum(a)\n  \n left = 0\n right = s\n for i in range(n-1):\n     left += a[i]\n     right -= a[i]\n     if left >= s/2:\n         right = s - left\n         break\n \n-if left == s/2:\n     print(0)\n else:\n     print(abs(left-right))\n```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p02727",
        "submission1_id": "s116566468",
        "crp_content": "\n \n import sys\n import math\n import string\n import collections\n import fractions\n import random\n from operator import itemgetter\n import itertools\n from collections import deque\n import copy\n import heapq\n import bisect\n \n MOD = 10 ** 9 + 7\n INF = 10 ** 18\n input = lambda: sys.stdin.readline().strip()\n \n sys.setrecursionlimit(10 ** 8)\n \n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort()\n \n ans = sum(p[0:X]) + sum(q[0:Y])\n \n for i in range(C):\n-    if p[-1] <= q[-1] < r[-1] and A > 0:\n         ans += r.pop(-1)\n         ans -= p.pop(-1)\n         A -= 1\n-    elif q[-1] <= p[-1] < r[-1] and B > 0:\n         ans += r.pop(-1)\n         ans -= q.pop(-1)\n         B -= 1\n-    elif q[-1] < r[-1] and B > 0:\n         ans += r.pop(-1)\n         ans -= q.pop(-1)\n         B -= 1\n-    elif p[-1] < r[-1] and A > 0:\n         ans += r.pop(-1)\n         ans -= p.pop(-1)\n         A -= 1\n     else:\n         break\n print(ans)\n",
        "origin_generated_text": "\n```\n \n import sys\n import math\n import string\n import collections\n import fractions\n import random\n from operator import itemgetter\n import itertools\n from collections import deque\n import copy\n import heapq\n import bisect\n \n MOD = 10 ** 9 + 7\n INF = 10 ** 18\n input = lambda: sys.stdin.readline().strip()\n \n sys.setrecursionlimit(10 ** 8)\n \n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort()\n \n ans = sum(p[0:X]) + sum(q[0:Y])\n \n for i in range(C):\n-    if p[-1] <= q[-1] < r[-1] and A > 0:\n         ans += r.pop(-1)\n         ans -= p.pop(-1)\n         A -= 1\n-    elif q[-1] <= p[-1] < r[-1] and B > 0:\n         ans += r.pop(-1)\n         ans -= q.pop(-1)\n         B -= 1\n-    elif q[-1] < r[-1] and B > 0:\n         ans += r.pop(-1)\n         ans -= q.pop(-1)\n         B -= 1\n-    elif p[-1] < r[-1] and A > 0:\n         ans += r.pop(-1)\n         ans -= p.pop(-1)\n         A -= 1\n     else:\n         break\n print(ans)\n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03626",
        "submission1_id": "s295504884",
        "crp_content": "\n N = int(input())\n s1 = input()\n s2 = input()\n \n MOD = int(1e9) + 7\n \n tate = \"tate\"\n yoko = \"yoko\"\n \n i = 0\n ans = 0\n pre = \"\"\n if s1[i] == s2[i]:\n     ans = 3\n     i += 1\n     pre = tate\n else:\n     ans = 6\n     i += 2\n     pre = yoko\n \n while i < N:\n     if s1[i] == s2[i]:\n         if pre == tate:\n             ans *= 2\n             ans %= MOD\n             i += 1\n         else:\n             ans *= 1\n             ans %= MOD\n             i += 2\n         pre = tate\n     else:\n         if pre == tate:\n             ans *= 2\n             ans %= MOD\n             i += 1\n         else:\n             ans *= 2\n             ans %= MOD\n             i += 2\n         pre = yoko\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n s1 = input()\n s2 = input()\n \n MOD = int(1e9) + 7\n \n tate = \"tate\"\n yoko = \"yoko\"\n \n i = 0\n ans = 0\n pre = \"\"\n if s1[i] == s2[i]:\n     ans = 3\n     i += 1\n     pre = tate\n else:\n     ans = 6\n     i += 2\n     pre = yoko\n \n while i < N:\n     if s1[i] == s2[i]:\n         if pre == tate:\n             ans *= 2\n             ans %= MOD\n             i += 1\n         else:\n             ans *= 1\n             ans %= MOD\n             i += 2\n         pre = tate\n     else:\n         if pre == tate:\n             ans *= 2\n             ans %= MOD\n             i += 1\n         else:\n             ans *= 2\n             ans %= MOD\n             i += 2\n         pre = yoko\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u910295650",
        "problem_id": "p03102",
        "submission1_id": "s276721873",
        "crp_content": "\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n A=[]\n ans=0\n a=0\n for i in range(N):\n     A.append([int(j) for j in input().split()])\n for i in range(N):\n     for j in range(M):\n          a+=A[i][j]*B[j]\n-    if a+C==0:\n         ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n A=[]\n ans=0\n a=0\n for i in range(N):\n     A.append([int(j) for j in input().split()])\n for i in range(N):\n     for j in range(M):\n          a+=A[i][j]*B[j]\n-    if a+C==0:\n         ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u175111751",
        "problem_id": "p02385",
        "submission1_id": "s517739076",
        "crp_content": "\n import sys\n class Dice:\n     def __init__(self, f):\n         self.f = f[:]\n \n     def roll(self, s):\n         for f in s:\n             n = self.f[:]\n             if f == 'E':\n                 t = n[0]\n                 n[0] = n[3]\n                 n[3] = n[5]\n                 n[5] = n[2]\n                 n[2] = t\n             elif f == 'W':\n                 t = n[0]\n                 n[0] = n[2]\n                 n[2] = n[5]\n                 n[5] = n[3]\n                 n[3] = t\n             elif f == 'N':\n                 t = n[0]\n                 n[0] = n[1]\n                 n[1] = n[5]\n                 n[5] = n[4]\n                 n[4] = t\n             else:\n                 t = n[0]\n                 n[0] = n[4]\n                 n[4] = n[5]\n                 n[5] = n[1]\n                 n[1] = t\n             self.f = n\n \n     def to_top(self, index):\n         if index == 1:\n             self.roll('N')\n         elif index == 2:\n             self.roll('W')\n         elif index == 3:\n             self.roll('E')\n         elif index == 4:\n             self.roll('S')\n         elif index == 5:\n             self.roll('NN')\n         return self\n \n     def side_roll(self):\n         t  = self.f[1]\n         self.f[1] = self.f[2]\n         self.f[2] = self.f[4]\n         self.f[4] = self.f[3]\n         self.f[3] = t\n         return self\n \n     def all_face(self):\n         faces = []\n         for i in range(0,6):\n             t = Dice(self.f[:])\n             faces.append(t.to_top(i).f)\n             for j in range(3):\n                 faces.append(t.side_roll().f)\n         return faces\n \n d1, d2 = (Dice(list(input().split())) for _ in range(2))\n fs = d1.all_face()\n-print('Yes' if d2.f in fs else 'No')\n",
        "origin_generated_text": "\n```\n import sys\n class Dice:\n     def __init__(self, f):\n         self.f = f[:]\n \n     def roll(self, s):\n         for f in s:\n             n = self.f[:]\n             if f == 'E':\n                 t = n[0]\n                 n[0] = n[3]\n                 n[3] = n[5]\n                 n[5] = n[2]\n                 n[2] = t\n             elif f == 'W':\n                 t = n[0]\n                 n[0] = n[2]\n                 n[2] = n[5]\n                 n[5] = n[3]\n                 n[3] = t\n             elif f == 'N':\n                 t = n[0]\n                 n[0] = n[1]\n                 n[1] = n[5]\n                 n[5] = n[4]\n                 n[4] = t\n             else:\n                 t = n[0]\n                 n[0] = n[4]\n                 n[4] = n[5]\n                 n[5] = n[1]\n                 n[1] = t\n             self.f = n\n \n     def to_top(self, index):\n         if index == 1:\n             self.roll('N')\n         elif index == 2:\n             self.roll('W')\n         elif index == 3:\n             self.roll('E')\n         elif index == 4:\n             self.roll('S')\n         elif index == 5:\n             self.roll('NN')\n         return self\n \n     def side_roll(self):\n         t  = self.f[1]\n         self.f[1] = self.f[2]\n         self.f[2] = self.f[4]\n         self.f[4] = self.f[3]\n         self.f[3] = t\n         return self\n \n     def all_face(self):\n         faces = []\n         for i in range(0,6):\n             t = Dice(self.f[:])\n             faces.append(t.to_top(i).f)\n             for j in range(3):\n                 faces.append(t.side_roll().f)\n         return faces\n \n d1, d2 = (Dice(list(input().split())) for _ in range(2))\n fs = d1.all_face()\n-print('Yes' if d2.f in fs else 'No')\n```\n "
    },
    {
        "user_id": "u685244071",
        "problem_id": "p03992",
        "submission1_id": "s334820153",
        "crp_content": "\n s = input()\n \n a = s[0:4]\n-b = s[4:-1]\n \n print('{} {}'.format(a, b))\n \n",
        "origin_generated_text": "\n```\n s = input()\n \n a = s[0:4]\n-b = s[4:-1]\n \n print('{} {}'.format(a, b))\n \n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03714",
        "submission1_id": "s946978997",
        "crp_content": "\n import heapq\n n = int(input())\n a = list(map(int,input().split()))\n \n left_seq = sorted(a[0:n])\n right_seq =  sorted(a[2*n:3*n])\n left_sum = [0]*(n+1)\n right_sum = [0]*(n+1)\n left_sum[0] =  sum(left_seq) \n right_sum[n] =  sum(right_seq) \n \n \n for i in range(n):\n   if left_seq[0]<a[n+i]:\n     left_sum[i+1] = left_sum[i]-left_seq[0]+a[n+i]\n     heapq.heappushpop(left_seq, a[n+i])\n   else:\n     left_sum[i+1] = left_sum[i]\n   \n   \n \n for i in range(n)[::-1]:\n   if right_seq[-1]>a[n+i]:\n     right_sum[i] = right_sum[i+1]-right_seq[-1]+a[n+i]\n     del right_seq[-1]\n     heapq.heappush(right_seq, a[n+i])\n   else:\n     right_sum[i] = right_sum[i+1]\n   \n \n ans = -float(\"inf\")\n for i in range(n+1):\n   ans = max(ans,left_sum[i]-right_sum[i])\n print(ans)\n \n",
        "origin_generated_text": "\n```\n import heapq\n n = int(input())\n a = list(map(int,input().split()))\n \n left_seq = sorted(a[0:n])\n right_seq =  sorted(a[2*n:3*n])\n left_sum = [0]*(n+1)\n right_sum = [0]*(n+1)\n left_sum[0] =  sum(left_seq) \n right_sum[n] =  sum(right_seq) \n \n \n for i in range(n):\n   if left_seq[0]<a[n+i]:\n     left_sum[i+1] = left_sum[i]-left_seq[0]+a[n+i]\n     heapq.heappushpop(left_seq, a[n+i])\n   else:\n     left_sum[i+1] = left_sum[i]\n   \n   \n \n for i in range(n)[::-1]:\n   if right_seq[-1]>a[n+i]:\n     right_sum[i] = right_sum[i+1]-right_seq[-1]+a[n+i]\n     del right_seq[-1]\n     heapq.heappush(right_seq, a[n+i])\n   else:\n     right_sum[i] = right_sum[i+1]\n   \n \n ans = -float(\"inf\")\n for i in range(n+1):\n   ans = max(ans,left_sum[i]-right_sum[i])\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u026788530",
        "problem_id": "p03796",
        "submission1_id": "s084155396",
        "crp_content": "\n n=int(input())\n ans=1\n for i in range(n):\n   ans*=(i+1)\n-  ans%=1000000007\n",
        "origin_generated_text": "\n```\n n=int(input())\n ans=1\n for i in range(n):\n   ans*=(i+1)\n-  ans%=1000000007\n```\n "
    },
    {
        "user_id": "u014912346",
        "problem_id": "p03303",
        "submission1_id": "s452419862",
        "crp_content": "\n def main():\n     s_i = input()\n     n_i = int(input())\n     ans = \"\"\n     while True:\n         if len(s_i) < n_i:\n             if n_i == 1:\n                 break\n             else:\n                 if s_i == \"\":\n                     break\n                 else:\n-                    ans += s_i[0]\n                     break\n         else:\n             ans += s_i[:n_i][0]\n             s_i = s_i[n_i:]\n             print(ans)\n \n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n def main():\n     s_i = input()\n     n_i = int(input())\n     ans = \"\"\n     while True:\n         if len(s_i) < n_i:\n             if n_i == 1:\n                 break\n             else:\n                 if s_i == \"\":\n                     break\n                 else:\n-                    ans += s_i[0]\n                     break\n         else:\n             ans += s_i[:n_i][0]\n             s_i = s_i[n_i:]\n             print(ans)\n \n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u785578220",
        "problem_id": "p03943",
        "submission1_id": "s955553210",
        "crp_content": "\n l= list(map(int, input().split()))\n l.sort()\n-if l[0] == l[1] + l[2]:\n     print(\"Yes\")\n else:print(\"No\")\n",
        "origin_generated_text": "\n```\n l= list(map(int, input().split()))\n l.sort()\n-if l[0] == l[1] + l[2]:\n     print(\"Yes\")\n else:print(\"No\")\n```\n "
    },
    {
        "user_id": "u698771758",
        "problem_id": "p03103",
        "submission1_id": "s360286480",
        "crp_content": "\n a,b=map(int,input().split())\n e=[]\n for i in range(a):\n     c,d=map(int, input().split())\n     e+=[[c,d]]\n e.sort()\n-print(e)\n a=i=j=0\n while i < b:\n     a+=(e[j][0]*e[j][1])\n     i+=e[j][1]\n     j+=1\n print(a-((i-b)*e[j-1][0]))\n",
        "origin_generated_text": "\n```\n a,b=map(int,input().split())\n e=[]\n for i in range(a):\n     c,d=map(int, input().split())\n     e+=[[c,d]]\n e.sort()\n-print(e)\n a=i=j=0\n while i < b:\n     a+=(e[j][0]*e[j][1])\n     i+=e[j][1]\n     j+=1\n print(a-((i-b)*e[j-1][0]))\n```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p02742",
        "submission1_id": "s547467310",
        "crp_content": "\n import math\n h,w = map(int,(input().split()))\n-h = math.floor(h)\n-w = math.floor(w)\n-sum = h * w\n \n if h == 1:\n     print(\"1\")\n elif h % 2 == 0:\n-    result = math.floor(sum /2)\n     print(result)\n else:\n-    result = math.floor(sum /2 + 1)\n     print(result)\n",
        "origin_generated_text": "\n```\n import math\n h,w = map(int,(input().split()))\n-h = math.floor(h)\n-w = math.floor(w)\n-sum = h * w\n \n if h == 1:\n     print(\"1\")\n elif h % 2 == 0:\n-    result = math.floor(sum /2)\n     print(result)\n else:\n-    result = math.floor(sum /2 + 1)\n     print(result)\n```\n "
    },
    {
        "user_id": "u131984977",
        "problem_id": "p02385",
        "submission1_id": "s931017909",
        "crp_content": "\n class Dice:\n     def __init__(self, data):\n         self.data = data\n     \n     def __eq__(self, value):\n         for a in range(6):\n             self.moveTopTo(self.getSortedList()[a])\n             value.moveTopTo(value.getSortedList()[a])\n             for b in range(4):\n-                print(self.data, value.data)\n                 if self.data == value.data:\n                     return True\n                 else:\n                     value.move('R')\n         return False\n \n     def move(self, direction):\n         if direction == 'E':\n             self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                 self.data[3], self.data[5], self.data[2], self.data[0]\n         elif direction == 'N':\n             self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                 self.data[1], self.data[0], self.data[4], self.data[5]\n         elif direction == 'S':\n             self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                 self.data[4], self.data[0], self.data[1], self.data[5]\n         elif direction == 'W':\n             self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                 self.data[2], self.data[5], self.data[3], self.data[0]\n         elif direction == 'R':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[3], self.data[1], self.data[2], self.data[4]\n         elif direction == 'L':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[2], self.data[4], self.data[3], self.data[1]\n \n     def moveTopTo(self, target):\n         for a in range(4):\n             if self.data[0] == target:\n                 break\n             self.move('W')\n         if self.data[4] == target:\n             self.move('S')\n         elif self.data[1] == target:\n             self.move('N')\n     \n     def moveFrontTo(self, target):\n         for a in range(4):\n             if self.data[1] == target:\n                 break\n             self.move('R')\n \n     def getTop(self):\n         return self.data[0]\n     \n     def getRight(self):\n         return self.data[2]\n \n     def getSortedList(self):\n         tmp = self.data[:]\n         tmp.sort()\n         return tmp\n \n \n a = Dice(input().split())\n b = Dice(input().split())\n if a == b:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n class Dice:\n     def __init__(self, data):\n         self.data = data\n     \n     def __eq__(self, value):\n         for a in range(6):\n             self.moveTopTo(self.getSortedList()[a])\n             value.moveTopTo(value.getSortedList()[a])\n             for b in range(4):\n-                print(self.data, value.data)\n                 if self.data == value.data:\n                     return True\n                 else:\n                     value.move('R')\n         return False\n \n     def move(self, direction):\n         if direction == 'E':\n             self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                 self.data[3], self.data[5], self.data[2], self.data[0]\n         elif direction == 'N':\n             self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                 self.data[1], self.data[0], self.data[4], self.data[5]\n         elif direction == 'S':\n             self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                 self.data[4], self.data[0], self.data[1], self.data[5]\n         elif direction == 'W':\n             self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                 self.data[2], self.data[5], self.data[3], self.data[0]\n         elif direction == 'R':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[3], self.data[1], self.data[2], self.data[4]\n         elif direction == 'L':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[2], self.data[4], self.data[3], self.data[1]\n \n     def moveTopTo(self, target):\n         for a in range(4):\n             if self.data[0] == target:\n                 break\n             self.move('W')\n         if self.data[4] == target:\n             self.move('S')\n         elif self.data[1] == target:\n             self.move('N')\n     \n     def moveFrontTo(self, target):\n         for a in range(4):\n             if self.data[1] == target:\n                 break\n             self.move('R')\n \n     def getTop(self):\n         return self.data[0]\n     \n     def getRight(self):\n         return self.data[2]\n \n     def getSortedList(self):\n         tmp = self.data[:]\n         tmp.sort()\n         return tmp\n \n \n a = Dice(input().split())\n b = Dice(input().split())\n if a == b:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p03041",
        "submission1_id": "s389420737",
        "crp_content": "\n p,q = input().split()\n q_ = int(q) -1 \n n = input()\n-x = n.replace(n[q_], n[q_].lower(), 1)\n print(x)\n",
        "origin_generated_text": "\n```\n p,q = input().split()\n q_ = int(q) -1 \n n = input()\n-x = n.replace(n[q_], n[q_].lower(), 1)\n print(x)\n```\n "
    },
    {
        "user_id": "u780565479",
        "problem_id": "p03752",
        "submission1_id": "s141174877",
        "crp_content": "\n n,k = map(int,input().split())\n a = [int(x) for x in input().split()]\n _min = 1145141919810\n for i in range(2**(n-1)):\n     ctr = 0\n     val = 0\n     flag = 0\n     h_max = a[0]\n     for j in range(n-1):\n         if (i>>j)&1:\n             ctr+=1\n             h_max = h_max+1 if h_max>=a[j+1] else a[j+1]\n             val+=h_max-a[j+1]\n             if ctr>=k-1:\n                 flag=1\n                 break\n-    if val<_min and flag and h_max<=10**9:\n         _min = val\n print(_min)\n",
        "origin_generated_text": "\n```\n n,k = map(int,input().split())\n a = [int(x) for x in input().split()]\n _min = 1145141919810\n for i in range(2**(n-1)):\n     ctr = 0\n     val = 0\n     flag = 0\n     h_max = a[0]\n     for j in range(n-1):\n         if (i>>j)&1:\n             ctr+=1\n             h_max = h_max+1 if h_max>=a[j+1] else a[j+1]\n             val+=h_max-a[j+1]\n             if ctr>=k-1:\n                 flag=1\n                 break\n-    if val<_min and flag and h_max<=10**9:\n         _min = val\n print(_min)\n```\n "
    },
    {
        "user_id": "u544034775",
        "problem_id": "p02917",
        "submission1_id": "s674018087",
        "crp_content": "\n n = int(input())\n b = [int(i) for i in input().split()] \n \n l = [b[0], b[0]]\n if n>=3:\n-  for i in range(1, len(b)-1):\n       test =  b[i+1] - b[i]\n       if test>=0:\n           l.append(b[i])\n       else:\n           l.append(b[i+1])\n   l.append(b[-1])\n   print(sum(l))\n else:\n   print(b[0]*2)\n",
        "origin_generated_text": "\n```\n n = int(input())\n b = [int(i) for i in input().split()] \n \n l = [b[0], b[0]]\n if n>=3:\n-  for i in range(1, len(b)-1):\n       test =  b[i+1] - b[i]\n       if test>=0:\n           l.append(b[i])\n       else:\n           l.append(b[i+1])\n   l.append(b[-1])\n   print(sum(l))\n else:\n   print(b[0]*2)\n```\n "
    },
    {
        "user_id": "u722875240",
        "problem_id": "p02699",
        "submission1_id": "s092131370",
        "crp_content": "\n a, b = map(int, input().split())\n-print(\"Yes\" if a <= b else \"No\")\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n-print(\"Yes\" if a <= b else \"No\")\n```\n "
    },
    {
        "user_id": "u186426563",
        "problem_id": "p04019",
        "submission1_id": "s569253180",
        "crp_content": "\n s = input()\n-print('Yes' if('W' in s == 'E' in s and 'S' in s == 'N' in s) else 'No')\n",
        "origin_generated_text": "\n```\n s = input()\n-print('Yes' if('W' in s == 'E' in s and 'S' in s == 'N' in s) else 'No')\n```\n "
    },
    {
        "user_id": "u581603131",
        "problem_id": "p03998",
        "submission1_id": "s471409352",
        "crp_content": "\n SA, SB, SC = [input() for i in range(3)]\n SA = SA + '0'\n SB = SB + '0'\n SC = SC + '0'\n \n card = SA[0]\n SA = SA[1:]\n \n-for i in range(1):\n     if SA == '0' and card == 'a':\n         print('A')\n         break\n     elif SB == '0' and card == 'b':\n         print('B')\n         break\n     elif SC == '0' and card == 'c':\n         print('C')\n         break\n     \n     if card == 'a':\n         card = SA[0]\n         SA = SA[1:]\n     elif card == 'b':\n         card = SB[0]\n         SB = SB[1:]\n     elif card == 'c':\n         card = SC[0]\n         SC = SC[1:]\n",
        "origin_generated_text": "\n```\n SA, SB, SC = [input() for i in range(3)]\n SA = SA + '0'\n SB = SB + '0'\n SC = SC + '0'\n \n card = SA[0]\n SA = SA[1:]\n \n-for i in range(1):\n     if SA == '0' and card == 'a':\n         print('A')\n         break\n     elif SB == '0' and card == 'b':\n         print('B')\n         break\n     elif SC == '0' and card == 'c':\n         print('C')\n         break\n     \n     if card == 'a':\n         card = SA[0]\n         SA = SA[1:]\n     elif card == 'b':\n         card = SB[0]\n         SB = SB[1:]\n     elif card == 'c':\n         card = SC[0]\n         SC = SC[1:]\n```\n "
    },
    {
        "user_id": "u727787724",
        "problem_id": "p03303",
        "submission1_id": "s358521323",
        "crp_content": "\n s=list(input())\n w=int(input())\n x=[]\n y=''\n ans=''\n count=[]\n for i in range(len(s)):\n     y+=s[i]\n     if len(list(y))==w:\n         x.append(y)\n         y=''\n     if i==len(s)-1:\n         x.append(y)\n for j in range(len(x)-1):\n     count=list(x[j])\n     ans+=count[0]\n print(ans)\n \n",
        "origin_generated_text": "\n```\n s=list(input())\n w=int(input())\n x=[]\n y=''\n ans=''\n count=[]\n for i in range(len(s)):\n     y+=s[i]\n     if len(list(y))==w:\n         x.append(y)\n         y=''\n     if i==len(s)-1:\n         x.append(y)\n for j in range(len(x)-1):\n     count=list(x[j])\n     ans+=count[0]\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u634079249",
        "problem_id": "p03563",
        "submission1_id": "s527906073",
        "crp_content": "\n import sys\n import os\n \n \n def main():\n     if os.getenv(\"LOCAL\"):\n         sys.stdin = open(\"input.txt\", \"r\")\n \n     R = float(sys.stdin.readline().rstrip())\n     G = float(sys.stdin.readline().rstrip())\n-    print(R+(G-R)*2)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n import sys\n import os\n \n \n def main():\n     if os.getenv(\"LOCAL\"):\n         sys.stdin = open(\"input.txt\", \"r\")\n \n     R = float(sys.stdin.readline().rstrip())\n     G = float(sys.stdin.readline().rstrip())\n-    print(R+(G-R)*2)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u076245995",
        "problem_id": "p02665",
        "submission1_id": "s883166910",
        "crp_content": "\n N = int(input())\n A_leaf = list(map(int, input().split()))\n s = [0]*(N+2)\n for i in range(1, N+2):\n     s[i] = s[i-1] + A_leaf[i-1]\n node = [1]*(N+1)\n for i in range(1, N+1):\n-    node[i] = min(node[i-1] - A_leaf[i-1], (s[N+1]-s[i]) / 2)*2\n-    if node[i] <= 0:\n         print(-1)\n         break\n else:\n     print(int(sum(node)))\n",
        "origin_generated_text": "\n```\n N = int(input())\n A_leaf = list(map(int, input().split()))\n s = [0]*(N+2)\n for i in range(1, N+2):\n     s[i] = s[i-1] + A_leaf[i-1]\n node = [1]*(N+1)\n for i in range(1, N+1):\n-    node[i] = min(node[i-1] - A_leaf[i-1], (s[N+1]-s[i]) / 2)*2\n-    if node[i] <= 0:\n         print(-1)\n         break\n else:\n     print(int(sum(node)))\n```\n "
    },
    {
        "user_id": "u190405389",
        "problem_id": "p03972",
        "submission1_id": "s571004823",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10**7)\n \n readline = sys.stdin.buffer.readline\n def readstr():return readline().rstrip().decode()\n def readstrs():return list(readline().decode().split())\n def readint():return int(readline())\n def readints():return list(map(int,readline().split()))\n def printrows(x):print('\\n'.join(map(str,x)))\n def printline(x):print(' '.join(map(str,x)))\n \n import heapq\n \n \n w,h =readints()\n p = [readint() for i in range(w)]\n q = [readint() for i in range(h)]\n \n heapq.heapify(p)\n heapq.heapify(q)\n \n edge = 0\n cost = 0\n used = [0,0]\n \n while edge < (h+1)*(w+1)-1:\n-    print(edge,cost)\n     if p and q:\n         if p[0]<q[0]:\n             flag = 1\n         else:\n             flag = 0\n     elif p:\n         flag = 1\n     else:\n         flag = 0\n     if flag:\n         x = heapq.heappop(p)\n         edge += h+1-used[1]\n         cost += x * (h+1-used[1])\n         used[0] += 1\n     else:\n         x = heapq.heappop(q)\n         edge += w+1-used[0]\n         cost += x * (w+1-used[0])\n         used[1] += 1\n \n print(cost)\n \n \n \n \n \n \n \n \n \n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10**7)\n \n readline = sys.stdin.buffer.readline\n def readstr():return readline().rstrip().decode()\n def readstrs():return list(readline().decode().split())\n def readint():return int(readline())\n def readints():return list(map(int,readline().split()))\n def printrows(x):print('\\n'.join(map(str,x)))\n def printline(x):print(' '.join(map(str,x)))\n \n import heapq\n \n \n w,h =readints()\n p = [readint() for i in range(w)]\n q = [readint() for i in range(h)]\n \n heapq.heapify(p)\n heapq.heapify(q)\n \n edge = 0\n cost = 0\n used = [0,0]\n \n while edge < (h+1)*(w+1)-1:\n-    print(edge,cost)\n     if p and q:\n         if p[0]<q[0]:\n             flag = 1\n         else:\n             flag = 0\n     elif p:\n         flag = 1\n     else:\n         flag = 0\n     if flag:\n         x = heapq.heappop(p)\n         edge += h+1-used[1]\n         cost += x * (h+1-used[1])\n         used[0] += 1\n     else:\n         x = heapq.heappop(q)\n         edge += w+1-used[0]\n         cost += x * (w+1-used[0])\n         used[1] += 1\n \n print(cost)\n \n \n \n \n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03965",
        "submission1_id": "s972391285",
        "crp_content": "\n s = input()\n \n p_count = 0\n g_count = 0\n win = 0\n \n for i in list(s):\n \n-    if i == \"g\" and p_count <= g_count - 1:\n         p_count += 1\n         win += 1\n     elif i == \"g\":\n         g_count += 1\n     else:\n         p_count += 1\n \n print(win)\n \n",
        "origin_generated_text": "\n```\n s = input()\n \n p_count = 0\n g_count = 0\n win = 0\n \n for i in list(s):\n \n-    if i == \"g\" and p_count <= g_count - 1:\n         p_count += 1\n         win += 1\n     elif i == \"g\":\n         g_count += 1\n     else:\n         p_count += 1\n \n print(win)\n \n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s205590050",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n-for i in range(n-1):\n-    j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n     for j in range(n):\n-        par[i][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n-        if 0 <= par[i][x] <= y:\n             k += 1<<i\n-            x = par[i][x]\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     ans.append(hoge(a, b))\n \n print(*ans, sep=\"\\n\")\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n-for i in range(n-1):\n-    j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n     for j in range(n):\n-        par[i][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n-        if 0 <= par[i][x] <= y:\n             k += 1<<i\n-            x = par[i][x]\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     ans.append(hoge(a, b))\n \n print(*ans, sep=\"\\n\")\n```\n "
    },
    {
        "user_id": "u567380442",
        "problem_id": "p02297",
        "submission1_id": "s145029572",
        "crp_content": "\n from sys import stdin\n readline = stdin.readline\n \n \n def dot(a, b):\n     return a.real * b.real + a.imag * b.imag\n \n \n def triangle(a, b, c):\n     v1, v2 = b - a, c - a\n     s = abs(v1) ** 2 * abs(v2) ** 2 - dot(v1, v2) ** 2\n-    return s ** 0.5 * 0.5\n \n \n def polygon(p):\n-    return sum(triangle(p[0], pi, pj) for pi, pj in zip(p[1:], p[2:]))\n \n \n n = int(readline())\n p = [map(int, readline().split()) for _ in range(n)]\n p = [x + y * 1j for x, y in p]\n print('{:.1f}'.format(polygon(p)))\n",
        "origin_generated_text": "\n```\n from sys import stdin\n readline = stdin.readline\n \n \n def dot(a, b):\n     return a.real * b.real + a.imag * b.imag\n \n \n def triangle(a, b, c):\n     v1, v2 = b - a, c - a\n     s = abs(v1) ** 2 * abs(v2) ** 2 - dot(v1, v2) ** 2\n-    return s ** 0.5 * 0.5\n \n \n def polygon(p):\n-    return sum(triangle(p[0], pi, pj) for pi, pj in zip(p[1:], p[2:]))\n \n \n n = int(readline())\n p = [map(int, readline().split()) for _ in range(n)]\n p = [x + y * 1j for x, y in p]\n print('{:.1f}'.format(polygon(p)))\n```\n "
    },
    {
        "user_id": "u888337853",
        "problem_id": "p03096",
        "submission1_id": "s371004440",
        "crp_content": "\n import sys\n import math\n import collections\n import bisect\n import copy\n \n \n \n sys.setrecursionlimit(10 ** 9)\n INF = 10 ** 16\n MOD = 10 ** 9 + 7\n \n \n ni = lambda: int(sys.stdin.readline())\n ns = lambda: map(int, sys.stdin.readline().split())\n na = lambda: list(map(int, sys.stdin.readline().split()))\n na1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().split()))\n \n \n \n \n \n def main():\n     n = ni()\n     idxlist = [[] for _ in range(2 * 10 ** 5 + 1)]\n     d = []\n     dp = [INF for _ in range(n + 1)]\n     dp[0] = 1\n \n     for i in range(n):\n         di = ni()\n         di -= 1\n         if i > 0:\n             if d[-1] == di:\n                 d.append(-1)\n                 continue\n         d.append(di)\n         idxlist[di].append(i)\n \n     for i, di in enumerate(d):\n         \n         dp[i + 1] = dp[i]\n         if di == -1:\n             continue\n-        bidx = bisect.bisect_left(idxlist[di], i)\n-        if bidx - 1 >= 0:\n-            dp[i + 1] += dp[idxlist[di][bidx - 1] + 1]\n-            dp[i + 1] %= MOD\n \n     print(dp[n])\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n import sys\n import math\n import collections\n import bisect\n import copy\n \n \n \n sys.setrecursionlimit(10 ** 9)\n INF = 10 ** 16\n MOD = 10 ** 9 + 7\n \n \n ni = lambda: int(sys.stdin.readline())\n ns = lambda: map(int, sys.stdin.readline().split())\n na = lambda: list(map(int, sys.stdin.readline().split()))\n na1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().split()))\n \n \n \n \n \n def main():\n     n = ni()\n     idxlist = [[] for _ in range(2 * 10 ** 5 + 1)]\n     d = []\n     dp = [INF for _ in range(n + 1)]\n     dp[0] = 1\n \n     for i in range(n):\n         di = ni()\n         di -= 1\n         if i > 0:\n             if d[-1] == di:\n                 d.append(-1)\n                 continue\n         d.append(di)\n         idxlist[di].append(i)\n \n     for i, di in enumerate(d):\n         \n         dp[i + 1] = dp[i]\n         if di == -1:\n             continue\n-        bidx = bisect.bisect_left(idxlist[di], i)\n-        if bidx - 1 >= 0:\n-            dp[i + 1] += dp[idxlist[di][bidx - 1] + 1]\n-            dp[i + 1] %= MOD\n \n     print(dp[n])\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u476604182",
        "problem_id": "p03480",
        "submission1_id": "s747904425",
        "crp_content": "\n S = input()\n j = 0\n m = S[0]\n ls = []\n for i in range(len(S)):\n   if m!=S[i]:\n     ls += [i-j]\n     j = i\n     m = S[i]\n ls += [len(S)-j]\n if len(ls)<3:\n   print(max(ls))\n else:\n   ans = 0\n   for i in range(0,len(ls)-2):\n-    m = min(ls[i]+ls[i+1],ls[i+1]+ls[i+2])\n     ans = max(ans,m)\n   print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n j = 0\n m = S[0]\n ls = []\n for i in range(len(S)):\n   if m!=S[i]:\n     ls += [i-j]\n     j = i\n     m = S[i]\n ls += [len(S)-j]\n if len(ls)<3:\n   print(max(ls))\n else:\n   ans = 0\n   for i in range(0,len(ls)-2):\n-    m = min(ls[i]+ls[i+1],ls[i+1]+ls[i+2])\n     ans = max(ans,m)\n   print(ans)\n```\n "
    },
    {
        "user_id": "u788856752",
        "problem_id": "p03563",
        "submission1_id": "s577567845",
        "crp_content": "\n R = float(input())\n G = float(input())\n \n-print(2 * G - R)\n \n",
        "origin_generated_text": "\n```\n R = float(input())\n G = float(input())\n \n-print(2 * G - R)\n \n```\n "
    },
    {
        "user_id": "u529518602",
        "problem_id": "p02917",
        "submission1_id": "s199773165",
        "crp_content": "\n N = int(input())\n B = list(map(int, input().split()))\n A = []\n \n A.append(B[0])\n \n-for i in range(N-2):\n-    A.append(min(B[i], B[i+1]))\n-\n-A.append(max(B[N-3], B[N-2]))\n \n print(sum(A))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int, input().split()))\n A = []\n \n A.append(B[0])\n \n-for i in range(N-2):\n-    A.append(min(B[i], B[i+1]))\n-\n-A.append(max(B[N-3], B[N-2]))\n \n print(sum(A))\n \n```\n "
    },
    {
        "user_id": "u789132058",
        "problem_id": "p02880",
        "submission1_id": "s366902199",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n-n=(int(x) for x in input().split())\n-l=[x*y for x in range(1,10) for y in range(1,10)]\n if n not in l:\n     print(\"No\")\n else :\n     print(\"Yes\")\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n-n=(int(x) for x in input().split())\n-l=[x*y for x in range(1,10) for y in range(1,10)]\n if n not in l:\n     print(\"No\")\n else :\n     print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s291819532",
        "crp_content": "\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(9)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n-    if x==[0]*l:\n-        c+=3\n-    if x==[1]*l:\n-        c+=3\n \n     print(c%1000000007)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(9)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n-    if x==[0]*l:\n-        c+=3\n-    if x==[1]*l:\n-        c+=3\n \n     print(c%1000000007)\n \n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s224234368",
        "crp_content": "\n s = input()\n t = input()\n \n \n def pattern(inputv):\n     if not inputv:\n         return inputv\n \n     nxt = [0]*len(inputv)\n     for i in range(1, len(nxt)):\n         k = nxt[i - 1]\n         while True:\n             if inputv[i] == inputv[k]:\n                 nxt[i] = k + 1\n                 break\n             elif k == 0:\n                 nxt[i] = 0\n                 break\n             else:\n                 k = nxt[k - 1]\n \n     smallPieceLen = len(inputv) - nxt[-1]\n     if len(inputv) % smallPieceLen != 0:\n         return inputv\n \n     return inputv[0:smallPieceLen]\n \n if pattern(s) == pattern(t):\n     print(-1)\n     exit()\n \n s = s + s\n cnt = 0\n ans = []\n \n j = 0\n i = 0\n li = []\n flag = True\n while i< len(s):\n     \n     if s[i] == t[j]:\n         flag = True\n         if j == len(t) - 1:\n             cnt += 1\n             j = 0\n             i += 1\n         else:\n             j += 1\n             i += 1\n     else:\n         if cnt != 0:\n             ans.append(cnt)\n         cnt = 0\n         j = 0\n         if flag:\n             i += 1\n             flag = False\n         else:\n             flag = True\n             continue\n if cnt != 0:\n     ans.append(cnt)\n     cnt = 0\n \n ans.append(0)\n print(max(ans))\n",
        "origin_generated_text": "\n```\n s = input()\n t = input()\n \n \n def pattern(inputv):\n     if not inputv:\n         return inputv\n \n     nxt = [0]*len(inputv)\n     for i in range(1, len(nxt)):\n         k = nxt[i - 1]\n         while True:\n             if inputv[i] == inputv[k]:\n                 nxt[i] = k + 1\n                 break\n             elif k == 0:\n                 nxt[i] = 0\n                 break\n             else:\n                 k = nxt[k - 1]\n \n     smallPieceLen = len(inputv) - nxt[-1]\n     if len(inputv) % smallPieceLen != 0:\n         return inputv\n \n     return inputv[0:smallPieceLen]\n \n if pattern(s) == pattern(t):\n     print(-1)\n     exit()\n \n s = s + s\n cnt = 0\n ans = []\n \n j = 0\n i = 0\n li = []\n flag = True\n while i< len(s):\n     \n     if s[i] == t[j]:\n         flag = True\n         if j == len(t) - 1:\n             cnt += 1\n             j = 0\n             i += 1\n         else:\n             j += 1\n             i += 1\n     else:\n         if cnt != 0:\n             ans.append(cnt)\n         cnt = 0\n         j = 0\n         if flag:\n             i += 1\n             flag = False\n         else:\n             flag = True\n             continue\n if cnt != 0:\n     ans.append(cnt)\n     cnt = 0\n \n ans.append(0)\n print(max(ans))\n```\n "
    },
    {
        "user_id": "u740767776",
        "problem_id": "p03573",
        "submission1_id": "s980487369",
        "crp_content": "\n s = list(input().split())\n if s[0] == s[1]:\n   print(int(s[2]))\n elif s[1] == s[2]:\n   print(int(s[0]))\n else:\n-  print(int(s[0]))\n-  \n-  \n",
        "origin_generated_text": "\n```\n s = list(input().split())\n if s[0] == s[1]:\n   print(int(s[2]))\n elif s[1] == s[2]:\n   print(int(s[0]))\n else:\n-  print(int(s[0]))\n-  \n-  \n```\n "
    },
    {
        "user_id": "u411302151",
        "problem_id": "p02767",
        "submission1_id": "s437066355",
        "crp_content": "\n N = int(input())\n l = map(int, input().split())\n \n-mean = int(sum(l)/N)\n \n stamina = 0\n \n for p in l:\n \tstamina += (p - mean)**2\n     \n print(stamina)\n",
        "origin_generated_text": "\n```\n N = int(input())\n l = map(int, input().split())\n \n-mean = int(sum(l)/N)\n \n stamina = 0\n \n for p in l:\n \tstamina += (p - mean)**2\n     \n print(stamina)\n```\n "
    },
    {
        "user_id": "u375500286",
        "problem_id": "p03625",
        "submission1_id": "s696635497",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n a.sort(reverse=True)\n ans=[]\n for i in range(n-1):\n     if a[i]==a[i+1]:\n         ans.append(a[i])\n         i=i+2\n-if len(ans) >= 2:\n-    print(ans[0]*ans[1])    \n else:\n     print(0)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n a.sort(reverse=True)\n ans=[]\n for i in range(n-1):\n     if a[i]==a[i+1]:\n         ans.append(a[i])\n         i=i+2\n-if len(ans) >= 2:\n-    print(ans[0]*ans[1])    \n else:\n     print(0)\n \n```\n "
    },
    {
        "user_id": "u892251744",
        "problem_id": "p03613",
        "submission1_id": "s104235737",
        "crp_content": "\n def main():\n     import sys\n     from collections import defaultdict\n     input = sys.stdin.readline\n \n     N = int(input())\n     A = list(map(int, input().split()))\n     C = defaultdict(int)\n     for a in A:\n         C[a] += 1\n \n     ans = 0\n-    for i in range(2, 10**5+1):\n-        ans = max(ans, C[i-1] + C[i] + C[i+1])\n     print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     import sys\n     from collections import defaultdict\n     input = sys.stdin.readline\n \n     N = int(input())\n     A = list(map(int, input().split()))\n     C = defaultdict(int)\n     for a in A:\n         C[a] += 1\n \n     ans = 0\n-    for i in range(2, 10**5+1):\n-        ans = max(ans, C[i-1] + C[i] + C[i+1])\n     print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u541475502",
        "problem_id": "p03992",
        "submission1_id": "s163797489",
        "crp_content": "\n s = input()\n-print(s)\n-print(s[:4],s[4:])\n",
        "origin_generated_text": "\n```\n s = input()\n-print(s)\n-print(s[:4],s[4:])\n```\n "
    },
    {
        "user_id": "u855199458",
        "problem_id": "p02287",
        "submission1_id": "s848925146",
        "crp_content": "\n \n import sys\n from math import floor\n sys.setrecursionlimit(100000)\n \n N = int(input())\n heap = [None] + [int(n) for n in input().split()]\n \n for i, h in enumerate(heap[1:]):\n     i += 1\n     text = \"node {}: key = {}\".format(i, h)\n     if i != 1:\n         text += \", parent key = {}\".format(heap[floor(i/2)])\n     if 2 * i <= N:\n         text += \", left key = {}\".format(heap[2*i])\n     if 2 * i + 1 <= N:\n         text += \", right key = {}\".format(heap[2*i + 1])\n     print(text)\n",
        "origin_generated_text": "\n```\n \n import sys\n from math import floor\n sys.setrecursionlimit(100000)\n \n N = int(input())\n heap = [None] + [int(n) for n in input().split()]\n \n for i, h in enumerate(heap[1:]):\n     i += 1\n     text = \"node {}: key = {}\".format(i, h)\n     if i != 1:\n         text += \", parent key = {}\".format(heap[floor(i/2)])\n     if 2 * i <= N:\n         text += \", left key = {}\".format(heap[2*i])\n     if 2 * i + 1 <= N:\n         text += \", right key = {}\".format(heap[2*i + 1])\n     print(text)\n```\n "
    },
    {
        "user_id": "u857673087",
        "problem_id": "p03206",
        "submission1_id": "s432614583",
        "crp_content": "\n D = int(input())\n \n-print('Chiristmas'+' Eve'*(25-D))\n \n",
        "origin_generated_text": "\n```\n D = int(input())\n \n-print('Chiristmas'+' Eve'*(25-D))\n \n```\n "
    },
    {
        "user_id": "u557494880",
        "problem_id": "p02963",
        "submission1_id": "s933542040",
        "crp_content": "\n S = int(input())\n X1 = 0\n Y1 = 0\n if S <= 10**9:\n     X2 = S\n     Y2 = 0\n     X3 = 0\n     Y3 = 1\n else:\n     S = 10**18 - S\n     X2 = 10**9\n     Y3 = 10**9\n-    X3 = S\n     Y2 = 1\n print(X1,Y1,X2,Y2,X3,Y3)\n     \n",
        "origin_generated_text": "\n```\n S = int(input())\n X1 = 0\n Y1 = 0\n if S <= 10**9:\n     X2 = S\n     Y2 = 0\n     X3 = 0\n     Y3 = 1\n else:\n     S = 10**18 - S\n     X2 = 10**9\n     Y3 = 10**9\n-    X3 = S\n     Y2 = 1\n print(X1,Y1,X2,Y2,X3,Y3)\n     \n```\n "
    },
    {
        "user_id": "u152638361",
        "problem_id": "p03475",
        "submission1_id": "s682910812",
        "crp_content": "\n N = int(input())\n CSF = [list(map(int,input().split())) for i in range(N-1)]\n CSF.append([0,0,1])\n ans=[0]*N \n for i in range(N-1):\n     for j in range(i,N-1):\n         if j == i:\n             ans[i]+=CSF[j][0]+CSF[j][1]\n         else:\n             if ans[i]<=CSF[j][1]:\n                 ans[i]=CSF[j][0]+CSF[j][1]\n             else:\n-                ans[i]+=(ans[i]-CSF[j][1])%CSF[j][2]+CSF[j][0] \n for i in range(N):\n     print(ans[i])\n",
        "origin_generated_text": "\n```\n N = int(input())\n CSF = [list(map(int,input().split())) for i in range(N-1)]\n CSF.append([0,0,1])\n ans=[0]*N \n for i in range(N-1):\n     for j in range(i,N-1):\n         if j == i:\n             ans[i]+=CSF[j][0]+CSF[j][1]\n         else:\n             if ans[i]<=CSF[j][1]:\n                 ans[i]=CSF[j][0]+CSF[j][1]\n             else:\n-                ans[i]+=(ans[i]-CSF[j][1])%CSF[j][2]+CSF[j][0] \n for i in range(N):\n     print(ans[i])\n```\n "
    },
    {
        "user_id": "u050024609",
        "problem_id": "p03326",
        "submission1_id": "s663557269",
        "crp_content": "\n [N, M] = map(int, input().split())\n a = [list(map(int, input().split())) for i in range(N)]\n def value(xyz, sign):\n \treturn sum([xyz[i]*(1 - 2*((sign & (1 << i)) >> i)) for i in range(3)])\n-print(max([sum([value(a[i], sign) for i in sorted([i for i in range(N)], key = lambda index : value(a[index], sign))[-M:]]) for sign in range(8)]))\n \n",
        "origin_generated_text": "\n```\n [N, M] = map(int, input().split())\n a = [list(map(int, input().split())) for i in range(N)]\n def value(xyz, sign):\n \treturn sum([xyz[i]*(1 - 2*((sign & (1 << i)) >> i)) for i in range(3)])\n-print(max([sum([value(a[i], sign) for i in sorted([i for i in range(N)], key = lambda index : value(a[index], sign))[-M:]]) for sign in range(8)]))\n \n```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03998",
        "submission1_id": "s017106367",
        "crp_content": "\n \n import sys, math, fractions, itertools\n \n \n def solve(S_A: str, S_B: str, S_C: str):\n     t = 'a'\n     A = list(S_A)\n     B = list(S_B)\n     C = list(S_C)\n     while(True):\n         if t == 'a':\n             if len(A) == 0:\n                 w = 'A'\n                 break\n             t = A.pop()\n         elif t == 'b':\n             if len(B) == 0:\n                 w = 'B'\n                 break\n             t = B.pop()\n         else:\n             if len(C) == 0:\n                 w = 'C'\n                 break\n             t = C.pop()\n     print(w)\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S_A = next(tokens)  \n     S_B = next(tokens)  \n     S_C = next(tokens)  \n     solve(S_A, S_B, S_C)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys, math, fractions, itertools\n \n \n def solve(S_A: str, S_B: str, S_C: str):\n     t = 'a'\n     A = list(S_A)\n     B = list(S_B)\n     C = list(S_C)\n     while(True):\n         if t == 'a':\n             if len(A) == 0:\n                 w = 'A'\n                 break\n             t = A.pop()\n         elif t == 'b':\n             if len(B) == 0:\n                 w = 'B'\n                 break\n             t = B.pop()\n         else:\n             if len(C) == 0:\n                 w = 'C'\n                 break\n             t = C.pop()\n     print(w)\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S_A = next(tokens)  \n     S_B = next(tokens)  \n     S_C = next(tokens)  \n     solve(S_A, S_B, S_C)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u405660020",
        "problem_id": "p03106",
        "submission1_id": "s145938385",
        "crp_content": "\n a,b,k=map(int,input().split())\n numlst=[]\n for i in range(max(a,b)):\n     if a%(i+1)==0 and b%(i+1)==0:\n         numlst.append(i+1)\n-print(numlst)\n print(numlst[len(numlst)-k])\n",
        "origin_generated_text": "\n```\n a,b,k=map(int,input().split())\n numlst=[]\n for i in range(max(a,b)):\n     if a%(i+1)==0 and b%(i+1)==0:\n         numlst.append(i+1)\n-print(numlst)\n print(numlst[len(numlst)-k])\n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p04017",
        "submission1_id": "s448054824",
        "crp_content": "\n import bisect\n import sys\n input = sys.stdin.readline\n n = int(input())\n a = list(map(int,input().split()))\n d = int(input())\n graph = [[0 for i in range(n+1)] for j in range(18)]\n for i in range(n):\n   x = bisect.bisect_right(a,a[i]+d)\n   graph[0][i+1] = x\n for j in range(1,18):\n   for i in range(n):\n     t = graph[j-1][i+1]\n     graph[j][i+1] = graph[j-1][t]\n q = int(input())\n for _ in range(q):\n   x,y = map(int,input().split())\n   x,y = min(x,y),max(x,y)\n   ans = 0\n   for j in range(18)[::-1]:\n     if graph[j][x] <= y:\n       ans += 2**j\n       x = graph[j][x]\n     if j == 0 and x < y:\n       ans += 1\n   print(ans)\n",
        "origin_generated_text": "\n```\n import bisect\n import sys\n input = sys.stdin.readline\n n = int(input())\n a = list(map(int,input().split()))\n d = int(input())\n graph = [[0 for i in range(n+1)] for j in range(18)]\n for i in range(n):\n   x = bisect.bisect_right(a,a[i]+d)\n   graph[0][i+1] = x\n for j in range(1,18):\n   for i in range(n):\n     t = graph[j-1][i+1]\n     graph[j][i+1] = graph[j-1][t]\n q = int(input())\n for _ in range(q):\n   x,y = map(int,input().split())\n   x,y = min(x,y),max(x,y)\n   ans = 0\n   for j in range(18)[::-1]:\n     if graph[j][x] <= y:\n       ans += 2**j\n       x = graph[j][x]\n     if j == 0 and x < y:\n       ans += 1\n   print(ans)\n```\n "
    },
    {
        "user_id": "u692687119",
        "problem_id": "p02730",
        "submission1_id": "s202551598",
        "crp_content": "\n S = input()\n N = len(S)\n kai = []\n kai2 = []\n kai3 = []\n rev = []\n rev2 = []\n rev3 = []\n \n for i in range(N):\n   kai.append(S[i])\n \n for i in range(0, int((N - 1) / 2)):\n   kai2.append(S[i])\n \n for i in range(int((N + 3) / 2) - 1, N):\n   kai3.append(S[i])\n \n-kai.reverse\n-kai2.reverse\n-kai3.reverse\n \n for i in range(N):\n   rev.append(S[i])\n \n for i in range(0, int((N - 1) / 2)):\n   rev2.append(S[i])\n \n for i in range(int((N + 3) / 2) - 1, N):\n   rev3.append(S[i])\n   \n if kai == rev:\n   if kai2 == rev2:\n     if kai3 == rev3:\n       print('Yes')\n     else:\n       print('No')\n   else:\n     print('No')\n else:\n   print('No')\n \n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n kai = []\n kai2 = []\n kai3 = []\n rev = []\n rev2 = []\n rev3 = []\n \n for i in range(N):\n   kai.append(S[i])\n \n for i in range(0, int((N - 1) / 2)):\n   kai2.append(S[i])\n \n for i in range(int((N + 3) / 2) - 1, N):\n   kai3.append(S[i])\n \n-kai.reverse\n-kai2.reverse\n-kai3.reverse\n \n for i in range(N):\n   rev.append(S[i])\n \n for i in range(0, int((N - 1) / 2)):\n   rev2.append(S[i])\n \n for i in range(int((N + 3) / 2) - 1, N):\n   rev3.append(S[i])\n   \n if kai == rev:\n   if kai2 == rev2:\n     if kai3 == rev3:\n       print('Yes')\n     else:\n       print('No')\n   else:\n     print('No')\n else:\n   print('No')\n \n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s383636637",
        "crp_content": "\n \n \n k = int(input())\n-k = 100\n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(5)):\n-    for j in reversed(range(1,10**4)):\n         num = str(j)+\"9\"*i*3\n         n = sum([int(k) for k in num])\n         n = int(num)/n\n         if(minN > n or n==1):\n             minN = n\n             ans.append(num)\n \n for i in list(reversed(ans))[:k]:\n     print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n-k = 100\n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(5)):\n-    for j in reversed(range(1,10**4)):\n         num = str(j)+\"9\"*i*3\n         n = sum([int(k) for k in num])\n         n = int(num)/n\n         if(minN > n or n==1):\n             minN = n\n             ans.append(num)\n \n for i in list(reversed(ans))[:k]:\n     print(i)\n```\n "
    },
    {
        "user_id": "u488497128",
        "problem_id": "p03796",
        "submission1_id": "s067510684",
        "crp_content": "\n import sys\n \n M = 10**9 + 7\n N = int(sys.stdin.readline().strip())\n \n x = 1\n \n for i in range(N):\n-    x = (x * i) % M\n \n print(x)\n \n",
        "origin_generated_text": "\n```\n import sys\n \n M = 10**9 + 7\n N = int(sys.stdin.readline().strip())\n \n x = 1\n \n for i in range(N):\n-    x = (x * i) % M\n \n print(x)\n \n```\n "
    },
    {
        "user_id": "u193025715",
        "problem_id": "p00026",
        "submission1_id": "s165128973",
        "crp_content": "\n paper = [0 for i in range(100)]\n white_points = None\n deep_points = None\n \n def small(x, y):\n     p = [[x, y]]\n     for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n         p.append([x + i, y + j])\n     return p\n \n def middle(x, y):\n     p = small(x, y)\n     for i, j in zip([1, -1, 1, -1], [1, 1, -1, -1]):\n         p.append([x + i, y + j])\n     return p\n \n def big(x, y):\n     p = middle(x, y)\n     for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n         p.append([x + i, y + j])\n     return p\n \n while True:\n     try:\n         x, y, size = map(int, input().split(','))\n     except:\n         print(paper.count(0))\n         print(max(paper))\n         break\n \n     if size == 1:\n         bp = small(x, y)\n     elif size == 2:\n         bp = middle(x, y)\n     elif size == 3:\n         bp = big(x, y)\n     for p in bp:\n-        if not 0 <= p[1] * 10 + p[0] <= 99: continue\n         paper[p[1] * 10 + p[0]] += 1\n",
        "origin_generated_text": "\n```\n paper = [0 for i in range(100)]\n white_points = None\n deep_points = None\n \n def small(x, y):\n     p = [[x, y]]\n     for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n         p.append([x + i, y + j])\n     return p\n \n def middle(x, y):\n     p = small(x, y)\n     for i, j in zip([1, -1, 1, -1], [1, 1, -1, -1]):\n         p.append([x + i, y + j])\n     return p\n \n def big(x, y):\n     p = middle(x, y)\n     for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n         p.append([x + i, y + j])\n     return p\n \n while True:\n     try:\n         x, y, size = map(int, input().split(','))\n     except:\n         print(paper.count(0))\n         print(max(paper))\n         break\n \n     if size == 1:\n         bp = small(x, y)\n     elif size == 2:\n         bp = middle(x, y)\n     elif size == 3:\n         bp = big(x, y)\n     for p in bp:\n-        if not 0 <= p[1] * 10 + p[0] <= 99: continue\n         paper[p[1] * 10 + p[0]] += 1\n```\n "
    },
    {
        "user_id": "u177398299",
        "problem_id": "p03326",
        "submission1_id": "s418779009",
        "crp_content": "\n N, M = map(int, input().split())\n cake = [list(map(int, input().split())) for _ in range(N)]\n \n INF = 10 ** 18\n dp = [[[-INF] * 8 for _ in range(M + 1)] for _ in range(N + 1)]\n for i in range(8):\n     dp[0][0][i] = 0\n \n for i in range(1, N + 1):\n     x, y, z = cake[i - 1]\n     for j in range(M, 0, -1):\n         for msk in range(8):\n             mx = x * (1 - 2 * (msk >> 2 & 1))\n             my = y * (1 - 2 * (msk >> 1 & 1))\n             mz = z * (1 - 2 * (msk >> 0 & 1))\n             dp[i][j][msk] = max(dp[i - 1][j][msk],\n                                 dp[i - 1][j - 1][msk] + mx + my + mz)\n \n-print(max(dp[N][M][i] for i in range(8)))\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n cake = [list(map(int, input().split())) for _ in range(N)]\n \n INF = 10 ** 18\n dp = [[[-INF] * 8 for _ in range(M + 1)] for _ in range(N + 1)]\n for i in range(8):\n     dp[0][0][i] = 0\n \n for i in range(1, N + 1):\n     x, y, z = cake[i - 1]\n     for j in range(M, 0, -1):\n         for msk in range(8):\n             mx = x * (1 - 2 * (msk >> 2 & 1))\n             my = y * (1 - 2 * (msk >> 1 & 1))\n             mz = z * (1 - 2 * (msk >> 0 & 1))\n             dp[i][j][msk] = max(dp[i - 1][j][msk],\n                                 dp[i - 1][j - 1][msk] + mx + my + mz)\n \n-print(max(dp[N][M][i] for i in range(8)))\n```\n "
    },
    {
        "user_id": "u844697453",
        "problem_id": "p03479",
        "submission1_id": "s582529932",
        "crp_content": "\n a = input().split()\n ans=1\n b=0\n c=[int(a[0])]\n while(0==0):\n-    if c[b]*2<int(a[1])-1:\n         c.append(c[b]*2)\n         b+=1\n     else:\n         print(len(c))\n         break\n",
        "origin_generated_text": "\n```\n a = input().split()\n ans=1\n b=0\n c=[int(a[0])]\n while(0==0):\n-    if c[b]*2<int(a[1])-1:\n         c.append(c[b]*2)\n         b+=1\n     else:\n         print(len(c))\n         break\n```\n "
    },
    {
        "user_id": "u938045879",
        "problem_id": "p02281",
        "submission1_id": "s059449949",
        "crp_content": "\n n = int(input())\n root = set(range(n))\n nodes = [0 for i in range(n)]\n for i in range(n):\n     node = list(map(int, input().split()))\n     children = node[1:3]\n     root -= set(children)\n     nodes[node[0]] = children\n \n def preorder(id):\n     if(id == -1):\n         return\n     order.append(id)\n     preorder(nodes[id][0])\n     preorder(nodes[id][1])\n \n def inorder(id):\n     if(id == -1):\n         return\n     inorder(nodes[id][0])\n     order.append(id)\n     inorder(nodes[id][1])\n \n def postorder(id):\n     if(id == -1):\n         return\n     postorder(nodes[id][0])\n     postorder(nodes[id][1])\n     order.append(id)\n \n order = []\n preorder(list(root)[0])\n-print(*order)\n order = []\n inorder(list(root)[0])\n-print(*order)\n order = []\n postorder(list(root)[0])\n-print(*order)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n root = set(range(n))\n nodes = [0 for i in range(n)]\n for i in range(n):\n     node = list(map(int, input().split()))\n     children = node[1:3]\n     root -= set(children)\n     nodes[node[0]] = children\n \n def preorder(id):\n     if(id == -1):\n         return\n     order.append(id)\n     preorder(nodes[id][0])\n     preorder(nodes[id][1])\n \n def inorder(id):\n     if(id == -1):\n         return\n     inorder(nodes[id][0])\n     order.append(id)\n     inorder(nodes[id][1])\n \n def postorder(id):\n     if(id == -1):\n         return\n     postorder(nodes[id][0])\n     postorder(nodes[id][1])\n     order.append(id)\n \n order = []\n preorder(list(root)[0])\n-print(*order)\n order = []\n inorder(list(root)[0])\n-print(*order)\n order = []\n postorder(list(root)[0])\n-print(*order)\n \n \n```\n "
    },
    {
        "user_id": "u244416763",
        "problem_id": "p03274",
        "submission1_id": "s851210085",
        "crp_content": "\n n,k = map(int, input().split())\n x = list(map(int, input().split()))\n minus = [0]\n plus = [0]\n for i in x:\n     if x:\n         plus.append(x)\n     else:\n         minus.append(-x)\n k -= 1\n ans = x[-1] - x[0]\n for i in range(n-k):\n     if x[i+k] < 0:\n         ans = min(ans, -x[i])\n     elif 0 < x[i+k] and x[i] < 0:\n-        if -x[i] < x[i+k]:\n             ans = min(ans, abs(2*(x[i])) + x[i+k])\n         else:\n             ans = min(ans, 2*x[i+k] + abs(x[i]))\n     else:\n         ans = min(ans, x[i+k])\n     \n print(ans)\n",
        "origin_generated_text": "\n```\n n,k = map(int, input().split())\n x = list(map(int, input().split()))\n minus = [0]\n plus = [0]\n for i in x:\n     if x:\n         plus.append(x)\n     else:\n         minus.append(-x)\n k -= 1\n ans = x[-1] - x[0]\n for i in range(n-k):\n     if x[i+k] < 0:\n         ans = min(ans, -x[i])\n     elif 0 < x[i+k] and x[i] < 0:\n-        if -x[i] < x[i+k]:\n             ans = min(ans, abs(2*(x[i])) + x[i+k])\n         else:\n             ans = min(ans, 2*x[i+k] + abs(x[i]))\n     else:\n         ans = min(ans, x[i+k])\n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s509989576",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tif(i!=n-1):\n \t\t\ta=b\n \t\t\tb=c\n-\t\t\tc=1\n \telse:\n \t\tc+=1\n \n \n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tif(i!=n-1):\n \t\t\ta=b\n \t\t\tb=c\n-\t\t\tc=1\n \telse:\n \t\tc+=1\n \n \n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03096",
        "submission1_id": "s712673798",
        "crp_content": "\n import sys\n N = int(input())\n C = [0]\n c = [int(sys.stdin.readline()) for i in range(N)]\n \n C = C+c\n ans = 1\n dp = [0] * (N + 100)\n color = [[]for i in range((2*(10**5)+100))]\n dp[0] = 1\n \n dp[1] = 1\n color[C[1]].append(1)\n for i in range(2, N+1):\n     dp[i] = dp[i - 1]\n \n     \n     for col in reversed(color[C[i]]):\n         \n         if i - col == 1:\n             break\n         else:\n             dp[i] += dp[col-1]\n     \n     color[C[i]].append(i)\n     \n \n \n print(dp[N] % (10 ** 9 + 7))\n \n \n \n \n",
        "origin_generated_text": "\n```\n import sys\n N = int(input())\n C = [0]\n c = [int(sys.stdin.readline()) for i in range(N)]\n \n C = C+c\n ans = 1\n dp = [0] * (N + 100)\n color = [[]for i in range((2*(10**5)+100))]\n dp[0] = 1\n \n dp[1] = 1\n color[C[1]].append(1)\n for i in range(2, N+1):\n     dp[i] = dp[i - 1]\n \n     \n     for col in reversed(color[C[i]]):\n         \n         if i - col == 1:\n             break\n         else:\n             dp[i] += dp[col-1]\n     \n     color[C[i]].append(i)\n     \n \n \n print(dp[N] % (10 ** 9 + 7))\n \n \n \n \n```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p04019",
        "submission1_id": "s007278134",
        "crp_content": "\n S = input()\n \n tmp = [0 for _ in range(4)]\n \n res = 'Yes'\n for i in range(len(S)):\n     if S[i] == 'S':\n         tmp[0] = 1\n     elif S[i] == 'N':\n         tmp[1] = 1\n     elif S[i] == 'W':\n         tmp[2] = 1\n     else:\n         tmp[2] = 1\n         \n if tmp[0] == 1 and tmp[1] == 0:\n     res = 'No'\n if tmp[1] == 1 and tmp[0] == 0:\n     res = 'No'\n-if tmp[2] == 1 and tmp[3] == 0:\n     res = 'No'\n-if tmp[3] == 1 and tmp[2] == 0:\n     res = 'No'\n \n print(res)\n \n \n",
        "origin_generated_text": "\n```\n S = input()\n \n tmp = [0 for _ in range(4)]\n \n res = 'Yes'\n for i in range(len(S)):\n     if S[i] == 'S':\n         tmp[0] = 1\n     elif S[i] == 'N':\n         tmp[1] = 1\n     elif S[i] == 'W':\n         tmp[2] = 1\n     else:\n         tmp[2] = 1\n         \n if tmp[0] == 1 and tmp[1] == 0:\n     res = 'No'\n if tmp[1] == 1 and tmp[0] == 0:\n     res = 'No'\n-if tmp[2] == 1 and tmp[3] == 0:\n     res = 'No'\n-if tmp[3] == 1 and tmp[2] == 0:\n     res = 'No'\n \n print(res)\n \n \n```\n "
    },
    {
        "user_id": "u112623731",
        "problem_id": "p02699",
        "submission1_id": "s234355438",
        "crp_content": "\n s, w = input().split()\n-if s < w:\n   print('safe')\n else:\n   print('unsafe')\n",
        "origin_generated_text": "\n```\n s, w = input().split()\n-if s < w:\n   print('safe')\n else:\n   print('unsafe')\n```\n "
    },
    {
        "user_id": "u333139319",
        "problem_id": "p03206",
        "submission1_id": "s319945325",
        "crp_content": "\n d = int(input())\n \n \n-print(\"Chirstmas\"+\" Eve\" * (25 - d))\n",
        "origin_generated_text": "\n```\n d = int(input())\n \n \n-print(\"Chirstmas\"+\" Eve\" * (25 - d))\n```\n "
    },
    {
        "user_id": "u232873434",
        "problem_id": "p03568",
        "submission1_id": "s031526394",
        "crp_content": "\n N = int(input())\n A = list(map(int,input().split()))\n \n even_num = 0\n \n for i in range(N):\n     if A[i]%2:\n         even_num += 1\n \n-print(1*3**(N-1)*even_num+2*3**(N-1)*(N-even_num)-2**(N-even_num))\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int,input().split()))\n \n even_num = 0\n \n for i in range(N):\n     if A[i]%2:\n         even_num += 1\n \n-print(1*3**(N-1)*even_num+2*3**(N-1)*(N-even_num)-2**(N-even_num))\n```\n "
    },
    {
        "user_id": "u492049124",
        "problem_id": "p03475",
        "submission1_id": "s984924012",
        "crp_content": "\n N = int(input())\n lines = []\n \n for i in range(N-1):\n     lines.append(input())\n \n C = []\n S = []\n F = []\n \n for line in lines:\n \tc, s, f = line.split()\n \tC.append(int(c))\n \tS.append(int(s))\n \tF.append(int(f))\n \n A = []\n \n for i in range(N-1):\n \ta = C[i] + S[i]\n-\tfor j in range(i + 1, N - 1):\n-\t\t\n-\t\tn = S[j] - a if a <= S[j] else F[j] - (a % F[j])\n-\t\ta = a + C[j] + n\n-\tA.append(a)\n \n for a in A:\n \tprint(a)\n print(0)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n lines = []\n \n for i in range(N-1):\n     lines.append(input())\n \n C = []\n S = []\n F = []\n \n for line in lines:\n \tc, s, f = line.split()\n \tC.append(int(c))\n \tS.append(int(s))\n \tF.append(int(f))\n \n A = []\n \n for i in range(N-1):\n \ta = C[i] + S[i]\n-\tfor j in range(i + 1, N - 1):\n-\t\t\n-\t\tn = S[j] - a if a <= S[j] else F[j] - (a % F[j])\n-\t\ta = a + C[j] + n\n-\tA.append(a)\n \n for a in A:\n \tprint(a)\n print(0)\n \n```\n "
    },
    {
        "user_id": "u390193191",
        "problem_id": "p03714",
        "submission1_id": "s940490218",
        "crp_content": "\n import heapq\n \n n = int(input())\n A = list(map(int, input().split()))\n \n pre = [0]*(n+1)\n pre_list = [e for e in A[:n]]\n heapq.heapify(pre_list)\n pre_sum = sum(pre_list)\n pre[0] = pre_sum\n for i in range(n, 2*n):\n     small = heapq.heappushpop(pre_list, A[i])\n     pre_sum += A[i] - small\n     pre[i-n+1] = pre_sum\n \n suf = [0]*(n+1)\n suf_list = [-e for e in A[2*n:]]\n heapq.heapify(suf_list)\n suf_sum = -sum(suf_list)\n suf[-1] = suf_sum\n for i in range(2*n-1, n-1, -1):\n     large = -heapq.heappushpop(suf_list, A[i])\n     suf_sum += A[i] - large\n     suf[i-n] = suf_sum\n \n \n \n \n print(max([pre[i] - suf[i] for i in range(n+1)]))\n \n",
        "origin_generated_text": "\n```\n import heapq\n \n n = int(input())\n A = list(map(int, input().split()))\n \n pre = [0]*(n+1)\n pre_list = [e for e in A[:n]]\n heapq.heapify(pre_list)\n pre_sum = sum(pre_list)\n pre[0] = pre_sum\n for i in range(n, 2*n):\n     small = heapq.heappushpop(pre_list, A[i])\n     pre_sum += A[i] - small\n     pre[i-n+1] = pre_sum\n \n suf = [0]*(n+1)\n suf_list = [-e for e in A[2*n:]]\n heapq.heapify(suf_list)\n suf_sum = -sum(suf_list)\n suf[-1] = suf_sum\n for i in range(2*n-1, n-1, -1):\n     large = -heapq.heappushpop(suf_list, A[i])\n     suf_sum += A[i] - large\n     suf[i-n] = suf_sum\n \n \n \n \n print(max([pre[i] - suf[i] for i in range(n+1)]))\n \n```\n "
    },
    {
        "user_id": "u689377278",
        "problem_id": "p02660",
        "submission1_id": "s368157125",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq\n \n def main():\n     temp = [True] * (10 ** 6)\n     temp[0] = False\n     temp[1] = False\n     for i in range(2, 10 ** 6):\n         if temp[i]:\n             cnt = 2 * i\n             while cnt < 10 ** 6:\n                 temp[cnt] = False\n                 cnt += i\n     prime = []\n     for i in range(10 ** 6):\n         if temp[i]:\n             prime.append(i)\n \n     n = int(input())\n     if n == 1:\n         print(0)\n         return\n     ans = 0\n     tempN = n\n     for i in prime:\n         if i > tempN:\n             break\n         if tempN % i:\n             continue\n         div = 0\n         while True:\n             cnt = 1\n             temp = 2\n             while tempN % (i ** (div + 2 * temp)) == 0:\n                 cnt += 1\n                 temp *= 2\n             if tempN % (i ** (div + cnt)):\n                 break\n             div += cnt\n         tempN = tempN \n         \n         if div > 2:\n             div = int((div * 2) ** 0.5)\n         else:\n             div = 1\n         \n         ans += div\n     if tempN > 1:\n         ans += 1\n     print(max(ans, 1))\n     return\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq\n \n def main():\n     temp = [True] * (10 ** 6)\n     temp[0] = False\n     temp[1] = False\n     for i in range(2, 10 ** 6):\n         if temp[i]:\n             cnt = 2 * i\n             while cnt < 10 ** 6:\n                 temp[cnt] = False\n                 cnt += i\n     prime = []\n     for i in range(10 ** 6):\n         if temp[i]:\n             prime.append(i)\n \n     n = int(input())\n     if n == 1:\n         print(0)\n         return\n     ans = 0\n     tempN = n\n     for i in prime:\n         if i > tempN:\n             break\n         if tempN % i:\n             continue\n         div = 0\n         while True:\n             cnt = 1\n             temp = 2\n             while tempN % (i ** (div + 2 * temp)) == 0:\n                 cnt += 1\n                 temp *= 2\n             if tempN % (i ** (div + cnt)):\n                 break\n             div += cnt\n         tempN = tempN \n         \n         if div > 2:\n             div = int((div * 2) ** 0.5)\n         else:\n             div = 1\n         \n         ans += div\n     if tempN > 1:\n         ans += 1\n     print(max(ans, 1))\n     return\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u677393869",
        "problem_id": "p03080",
        "submission1_id": "s803059106",
        "crp_content": "\n-N=input(int())\n-n=input(int())\n A=n.count(\"R\")\n B=n.count(\"B\")\n if A>B:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n-N=input(int())\n-n=input(int())\n A=n.count(\"R\")\n B=n.count(\"B\")\n if A>B:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u308097393",
        "problem_id": "p03296",
        "submission1_id": "s713494763",
        "crp_content": "\n N = int(input())\n a = [int(x) for x in input().split()]\n count = 0\n-if (N==len(a))and(2<=N):\n-    for i in range(1,N-1):\n-        if (a[i-1]==a[i]):\n-            a[i] += 1\n-            if a[i] > 10000:\n-                a[i] = 1\n-            if a[i]==a[i+1]:\n-                a[i] += 1\n-                if a[i] > 10000:\n-                    a[i] = 1\n-            count += 1\n-    print(count)\n",
        "origin_generated_text": "\n```\n N = int(input())\n a = [int(x) for x in input().split()]\n count = 0\n-if (N==len(a))and(2<=N):\n-    for i in range(1,N-1):\n-        if (a[i-1]==a[i]):\n-            a[i] += 1\n-            if a[i] > 10000:\n-                a[i] = 1\n-            if a[i]==a[i+1]:\n-                a[i] += 1\n-                if a[i] > 10000:\n-                    a[i] = 1\n-            count += 1\n-    print(count)\n```\n "
    },
    {
        "user_id": "u886274153",
        "problem_id": "p03965",
        "submission1_id": "s543549275",
        "crp_content": "\n s = input()\n n = len(s)\n \n s = [i for i in s]\n for i in range(n):\n     if s[i] == \"p\":\n         s[i] = 1\n     else:\n         s[i] = 0\n-print(s)\n \n d = [0]*n\n d[0] = 0\n gc = 1\n pc = 0\n for i in range(1, n):\n     if gc-1 >= pc:\n         d[i] = 1\n         pc += 1\n     else:\n         d[i] = 0\n         gc += 1\n-print(d)\n \n ans = 0\n for i in range(n):\n     ans += d[i]-s[i]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n \n s = [i for i in s]\n for i in range(n):\n     if s[i] == \"p\":\n         s[i] = 1\n     else:\n         s[i] = 0\n-print(s)\n \n d = [0]*n\n d[0] = 0\n gc = 1\n pc = 0\n for i in range(1, n):\n     if gc-1 >= pc:\n         d[i] = 1\n         pc += 1\n     else:\n         d[i] = 0\n         gc += 1\n-print(d)\n \n ans = 0\n for i in range(n):\n     ans += d[i]-s[i]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u995004106",
        "problem_id": "p02556",
        "submission1_id": "s286562045",
        "crp_content": "\n from math import *\n import fractions\n import sys\n import collections\n import itertools\n import pprint\n from collections import deque\n from heapq import *\n import copy\n N=int(input())\n points=[list(map(int,input().split())) for _ in range(N)]\n \n \n chebmax0=-float(\"inf\")\n chebmin0=float(\"inf\")\n chebmax1=-float(\"inf\")\n chebmin1=float(\"inf\")\n \n \n for l in points:\n     chebmax0=max(chebmax0,l[0]-l[1])\n for l in points:\n-    chebmin0=min(chebmax0,l[0]-l[1])\n for l in points:\n     chebmax1=max(chebmax1,l[0]+l[1])\n for l in points:\n-    chebmin1=min(chebmax1,l[0]+l[1])\n \n print(max(chebmax0-chebmin0,chebmax1-chebmin1))\n",
        "origin_generated_text": "\n```\n from math import *\n import fractions\n import sys\n import collections\n import itertools\n import pprint\n from collections import deque\n from heapq import *\n import copy\n N=int(input())\n points=[list(map(int,input().split())) for _ in range(N)]\n \n \n chebmax0=-float(\"inf\")\n chebmin0=float(\"inf\")\n chebmax1=-float(\"inf\")\n chebmin1=float(\"inf\")\n \n \n for l in points:\n     chebmax0=max(chebmax0,l[0]-l[1])\n for l in points:\n-    chebmin0=min(chebmax0,l[0]-l[1])\n for l in points:\n     chebmax1=max(chebmax1,l[0]+l[1])\n for l in points:\n-    chebmin1=min(chebmax1,l[0]+l[1])\n \n print(max(chebmax0-chebmin0,chebmax1-chebmin1))\n```\n "
    },
    {
        "user_id": "u835283937",
        "problem_id": "p03625",
        "submission1_id": "s584911385",
        "crp_content": "\n from collections import defaultdict\n def main():\n     N = int(input())\n     A = [int(a) for a in input().split()]\n \n     edge = defaultdict(int)\n \n     for i in range(N):\n         edge[A[i]] += 1\n     edge = [ [k, v] for k, v in edge.items() if v >= 2 ]\n-    print(edge)\n     edge.sort(key = lambda x : x[0])\n-    print(edge)\n \n     if len(edge) >= 2 :\n         print(edge[-1][0]*edge[-2][0])\n \n     elif len(edge) == 1:\n         if edge[-1][1] >= 4:\n             print(edge[-1][0]**2)\n         else:\n             print(0)\n     else:\n         print(0)\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n def main():\n     N = int(input())\n     A = [int(a) for a in input().split()]\n \n     edge = defaultdict(int)\n \n     for i in range(N):\n         edge[A[i]] += 1\n     edge = [ [k, v] for k, v in edge.items() if v >= 2 ]\n-    print(edge)\n     edge.sort(key = lambda x : x[0])\n-    print(edge)\n \n     if len(edge) >= 2 :\n         print(edge[-1][0]*edge[-2][0])\n \n     elif len(edge) == 1:\n         if edge[-1][1] >= 4:\n             print(edge[-1][0]**2)\n         else:\n             print(0)\n     else:\n         print(0)\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u337851472",
        "problem_id": "p03943",
        "submission1_id": "s806050599",
        "crp_content": "\n a, b, c = map(int,input().split())\n-print(\"YES\" if (a+b) == c or (b+c) == a or (c+a) == b else \"NO\")\n",
        "origin_generated_text": "\n```\n a, b, c = map(int,input().split())\n-print(\"YES\" if (a+b) == c or (b+c) == a or (c+a) == b else \"NO\")\n```\n "
    },
    {
        "user_id": "u424967964",
        "problem_id": "p03760",
        "submission1_id": "s108354809",
        "crp_content": "\n o = input()\n e = input()\n-print(\"\".join([ch1 + ch2 for ch1 , ch2 in zip(o,e)]))\n",
        "origin_generated_text": "\n```\n o = input()\n e = input()\n-print(\"\".join([ch1 + ch2 for ch1 , ch2 in zip(o,e)]))\n```\n "
    },
    {
        "user_id": "u280984565",
        "problem_id": "p03546",
        "submission1_id": "s417185309",
        "crp_content": "\n def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n \n w, h = read_line(int, int)\n \n c = []\n for _ in range(10):\n     c.append(read_line(int, int, int, int, int, int, int, int, int, int))\n \n for k in range(10):\n     for i in range(10):\n         for j in range(10):\n             if i != j:\n                 c[i][j] = min(c[i][j], c[i][k] + c[k][j])\n \n cost = 0\n-for _ in range(w):\n-    for a in read_line(*([int] * h)):\n-        if a > 0:\n-            cost += c[a][1]\n \n print(cost)\n \n",
        "origin_generated_text": "\n```\n def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n \n w, h = read_line(int, int)\n \n c = []\n for _ in range(10):\n     c.append(read_line(int, int, int, int, int, int, int, int, int, int))\n \n for k in range(10):\n     for i in range(10):\n         for j in range(10):\n             if i != j:\n                 c[i][j] = min(c[i][j], c[i][k] + c[k][j])\n \n cost = 0\n-for _ in range(w):\n-    for a in read_line(*([int] * h)):\n-        if a > 0:\n-            cost += c[a][1]\n \n print(cost)\n \n```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s021638210",
        "crp_content": "\n K=int(input())\n if K%2==0:\n-  print(K*K/4)\n else:\n-  print((K-1)*(K-1)/4)\n",
        "origin_generated_text": "\n```\n K=int(input())\n if K%2==0:\n-  print(K*K/4)\n else:\n-  print((K-1)*(K-1)/4)\n```\n "
    },
    {
        "user_id": "u262869085",
        "problem_id": "p02912",
        "submission1_id": "s654203187",
        "crp_content": "\n import heapq\n \n N , M = map(int,input().split())\n A = [-int(i) for i in input().split()]\n \n heapq.heapify(A)\n for _ in range(M):\n     a = heapq.heappop(A) >> 1\n     heapq.heappush(A,a)\n-print(-sum(A))\n \n",
        "origin_generated_text": "\n```\n import heapq\n \n N , M = map(int,input().split())\n A = [-int(i) for i in input().split()]\n \n heapq.heapify(A)\n for _ in range(M):\n     a = heapq.heappop(A) >> 1\n     heapq.heappush(A,a)\n-print(-sum(A))\n \n```\n "
    },
    {
        "user_id": "u328755070",
        "problem_id": "p03729",
        "submission1_id": "s379952215",
        "crp_content": "\n A, B, C = input().split()\n-if A[-1] == B[0] and B[-1] == C[0]:\n     ans = \"YES\"\n else:\n     print('NO')\n \n",
        "origin_generated_text": "\n```\n A, B, C = input().split()\n-if A[-1] == B[0] and B[-1] == C[0]:\n     ans = \"YES\"\n else:\n     print('NO')\n \n```\n "
    },
    {
        "user_id": "u965230804",
        "problem_id": "p03475",
        "submission1_id": "s280808969",
        "crp_content": "\n n = int(input())\n csf = []\n for i in range(n - 1):\n     csf.append(list(map(int, input().split())))\n \n for i in range(n):\n     AnsSec = 0\n     Now_Station = i\n     while Now_Station < n - 1:\n         if AnsSec > csf[Now_Station][1]:\n             if csf[Now_Station][2] % AnsSec != 0:\n-                AnsSec += csf[Now_Station][2] - (AnsSec % csf[Now_Station][2] )\n         else:\n             AnsSec += csf[Now_Station][1] - AnsSec\n         AnsSec += csf[Now_Station][0]\n         Now_Station += 1\n     print(AnsSec)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n csf = []\n for i in range(n - 1):\n     csf.append(list(map(int, input().split())))\n \n for i in range(n):\n     AnsSec = 0\n     Now_Station = i\n     while Now_Station < n - 1:\n         if AnsSec > csf[Now_Station][1]:\n             if csf[Now_Station][2] % AnsSec != 0:\n-                AnsSec += csf[Now_Station][2] - (AnsSec % csf[Now_Station][2] )\n         else:\n             AnsSec += csf[Now_Station][1] - AnsSec\n         AnsSec += csf[Now_Station][0]\n         Now_Station += 1\n     print(AnsSec)\n \n```\n "
    },
    {
        "user_id": "u231905444",
        "problem_id": "p03079",
        "submission1_id": "s098487359",
        "crp_content": "\n arr=list(map(int,input().split()))\n if(arr.count(arr[0])==3):\n-    print('yes')\n else:\n-    print('no')\n     \n",
        "origin_generated_text": "\n```\n arr=list(map(int,input().split()))\n if(arr.count(arr[0])==3):\n-    print('yes')\n else:\n-    print('no')\n     \n```\n "
    },
    {
        "user_id": "u922769680",
        "problem_id": "p02742",
        "submission1_id": "s994181374",
        "crp_content": "\n H,W=map(int,input().split())\n if H%2==1 and W%2==1:\n-    print((H*W+1)/2)\n else:\n-    print(H*W/2)\n",
        "origin_generated_text": "\n```\n H,W=map(int,input().split())\n if H%2==1 and W%2==1:\n-    print((H*W+1)/2)\n else:\n-    print(H*W/2)\n```\n "
    },
    {
        "user_id": "u773440446",
        "problem_id": "p02553",
        "submission1_id": "s904828488",
        "crp_content": "\n a,b,c,d = map(int,input().split())\n ans = []\n-for i in c,d:\n-    ans.append(a*i)\n-for j in c,d:\n-    ans.append(b*i)\n \n print(max(ans))\n",
        "origin_generated_text": "\n```\n a,b,c,d = map(int,input().split())\n ans = []\n-for i in c,d:\n-    ans.append(a*i)\n-for j in c,d:\n-    ans.append(b*i)\n \n print(max(ans))\n```\n "
    },
    {
        "user_id": "u498487134",
        "problem_id": "p03714",
        "submission1_id": "s096339260",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n def I(): return int(input())\n def MI(): return map(int, input().split())\n def LI(): return list(map(int, input().split()))\n import heapq\n \n def main():\n     mod=10**9+7\n     N=I()\n     a=LI()\n     q1=a[:N]\n     s1=[0]*(N+1)\n     s1[0]=sum(q1)\n     heapq.heapify(q1)\n         \n     q2=[]\n     heapq.heapify(q2)\n     s2=[0]*(N+1)\n     for i in range(N):\n         b=a[-1-i]*(-1)\n         s2[0]+=b\n         heapq.heappush(q2,b)\n     \n     \n     for i in range(N):\n         b=heapq.heappop(q1)\n-        s1[i+1]=s1[i]+a[i+N]-b\n         \n         c=heapq.heappop(q2)\n-        s2[i+1]=s2[i]+a[-1-N-i]*(-1)-c\n         \n     L=[0]*(N+1)\n     ans=-1*10**16\n     for i in range(N+1):\n         temp=s1[i]+s2[-1-i]\n         if ans<temp:\n             ans=temp\n     print(ans)\n         \n         \n     \n \n main()\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n def I(): return int(input())\n def MI(): return map(int, input().split())\n def LI(): return list(map(int, input().split()))\n import heapq\n \n def main():\n     mod=10**9+7\n     N=I()\n     a=LI()\n     q1=a[:N]\n     s1=[0]*(N+1)\n     s1[0]=sum(q1)\n     heapq.heapify(q1)\n         \n     q2=[]\n     heapq.heapify(q2)\n     s2=[0]*(N+1)\n     for i in range(N):\n         b=a[-1-i]*(-1)\n         s2[0]+=b\n         heapq.heappush(q2,b)\n     \n     \n     for i in range(N):\n         b=heapq.heappop(q1)\n-        s1[i+1]=s1[i]+a[i+N]-b\n         \n         c=heapq.heappop(q2)\n-        s2[i+1]=s2[i]+a[-1-N-i]*(-1)-c\n         \n     L=[0]*(N+1)\n     ans=-1*10**16\n     for i in range(N+1):\n         temp=s1[i]+s2[-1-i]\n         if ans<temp:\n             ans=temp\n     print(ans)\n         \n         \n     \n \n main()\n \n```\n "
    },
    {
        "user_id": "u789417951",
        "problem_id": "p03546",
        "submission1_id": "s279573062",
        "crp_content": "\n H, W=map(int,input().split())\n c=[list(map(int,input().split())) for _ in range(10)]\n a=[list(map(int,input().split())) for _ in range(H)]\n ans=0\n \n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n \n for i in range(H):\n     for j in range(W):\n         if a[i][j]>=0:\n-            ans += c[a[i][j]][1]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n H, W=map(int,input().split())\n c=[list(map(int,input().split())) for _ in range(10)]\n a=[list(map(int,input().split())) for _ in range(H)]\n ans=0\n \n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n \n for i in range(H):\n     for j in range(W):\n         if a[i][j]>=0:\n-            ans += c[a[i][j]][1]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s807816150",
        "crp_content": "\n K=int(input())\n if K%2==0:\n-  print(K/2*K/2)\n else:\n-  print(K/2*(K-1)/2)\n",
        "origin_generated_text": "\n```\n K=int(input())\n if K%2==0:\n-  print(K/2*K/2)\n else:\n-  print(K/2*(K-1)/2)\n```\n "
    },
    {
        "user_id": "u038724782",
        "problem_id": "p02665",
        "submission1_id": "s300284426",
        "crp_content": "\n n = int(input())\n a_l = list(map(int,input().split()))\n \n if a_l[0] != 0:\n     if n == 0:\n         print(1)\n     else:\n         print(-1)\n     exit()\n \n tree = [0]*(n+1)\n tree[0] = 1\n for i in range(1,n+1):\n     tree[i] = (tree[i-1] - a_l[i-1]) * 2\n \n \n-if tree[-1] < a_l[-1]:\n     print(-1)\n     exit()\n \n while tree[-1] != a_l[-1]:\n     tree[-1] -= 1\n     i = 1\n     while True:\n         i += 1 \n         if tree[-(i-1)] >= (tree[-i] - a_l[-i]):\n             break\n         tree[-i] -= 1\n \n \n ans = 0\n for val in tree:\n     ans += val\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a_l = list(map(int,input().split()))\n \n if a_l[0] != 0:\n     if n == 0:\n         print(1)\n     else:\n         print(-1)\n     exit()\n \n tree = [0]*(n+1)\n tree[0] = 1\n for i in range(1,n+1):\n     tree[i] = (tree[i-1] - a_l[i-1]) * 2\n \n \n-if tree[-1] < a_l[-1]:\n     print(-1)\n     exit()\n \n while tree[-1] != a_l[-1]:\n     tree[-1] -= 1\n     i = 1\n     while True:\n         i += 1 \n         if tree[-(i-1)] >= (tree[-i] - a_l[-i]):\n             break\n         tree[-i] -= 1\n \n \n ans = 0\n for val in tree:\n     ans += val\n print(ans)\n```\n "
    },
    {
        "user_id": "u776237437",
        "problem_id": "p02699",
        "submission1_id": "s821715006",
        "crp_content": "\n S,W=map(int,input().split())\n \n-if S<W:\n     print('safe')\n else:\n     print('unsafe')\n",
        "origin_generated_text": "\n```\n S,W=map(int,input().split())\n \n-if S<W:\n     print('safe')\n else:\n     print('unsafe')\n```\n "
    },
    {
        "user_id": "u865741247",
        "problem_id": "p02954",
        "submission1_id": "s118366595",
        "crp_content": "\n \n import sys\n \n S =  input()\n l = len(S)\n ans = [0] * l\n cot = [0,0]\n for i  in range(l):\n     if S[i] == \"R\":\n         cot[i%2] += 1\n     else:\n         ans[i] += cot[i %2 ]\n         ans[i - 1 ] += cot[(i + 1)%2]\n         cot[0] = cot[1] = 0\n \n cot[0] = cot[1] = 0\n for i  in range(l-1,0,-1):\n     if S[i] == \"L\":\n         cot[i%2] += 1\n     else:\n         ans[i] += cot[i %2 ]\n         ans[i + 1 ]  += cot[(i + 1)%2]\n         cot[0] = cot[1] = 0\n print(\" \".join(list(map(str,ans))))\n \n \n \n",
        "origin_generated_text": "\n```\n \n import sys\n \n S =  input()\n l = len(S)\n ans = [0] * l\n cot = [0,0]\n for i  in range(l):\n     if S[i] == \"R\":\n         cot[i%2] += 1\n     else:\n         ans[i] += cot[i %2 ]\n         ans[i - 1 ] += cot[(i + 1)%2]\n         cot[0] = cot[1] = 0\n \n cot[0] = cot[1] = 0\n for i  in range(l-1,0,-1):\n     if S[i] == \"L\":\n         cot[i%2] += 1\n     else:\n         ans[i] += cot[i %2 ]\n         ans[i + 1 ]  += cot[(i + 1)%2]\n         cot[0] = cot[1] = 0\n print(\" \".join(list(map(str,ans))))\n \n \n \n```\n "
    },
    {
        "user_id": "u527261492",
        "problem_id": "p03080",
        "submission1_id": "s103603511",
        "crp_content": "\n N=int(input())\n-s=list(input().split())\n r=s.count('R')\n b=s.count('B')\n if r>b:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n N=int(input())\n-s=list(input().split())\n r=s.count('R')\n b=s.count('B')\n if r>b:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u924406834",
        "problem_id": "p03546",
        "submission1_id": "s494954565",
        "crp_content": "\n h,w = map(int,input().split())\n ij = [list(map(int,input().split())) for x in range(10)]\n dp = [[100 for i in range(10)] for i in range(10)]\n for i in range(10):\n     dp[i][0] = ij[i][1]\n for i in range(1,10):\n     for j in range(10):\n         num = dp[j][i-1]\n         for k in range(10):\n             num = min(num,ij[j][k] + dp[k][j-1])\n         dp[j][i] = num\n ans = 0\n for i in range(h):\n     for j in list(map(int,input().split())):\n         if j == -1:break\n         ans += dp[j][-1]\n print(ans)\n",
        "origin_generated_text": "\n```\n h,w = map(int,input().split())\n ij = [list(map(int,input().split())) for x in range(10)]\n dp = [[100 for i in range(10)] for i in range(10)]\n for i in range(10):\n     dp[i][0] = ij[i][1]\n for i in range(1,10):\n     for j in range(10):\n         num = dp[j][i-1]\n         for k in range(10):\n             num = min(num,ij[j][k] + dp[k][j-1])\n         dp[j][i] = num\n ans = 0\n for i in range(h):\n     for j in list(map(int,input().split())):\n         if j == -1:break\n         ans += dp[j][-1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u885634168",
        "problem_id": "p02727",
        "submission1_id": "s025358254",
        "crp_content": "\n X, Y, a, b, c = list(map(int,input().split()))\n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n-s = sorted(p)[::-1][:X] + sorted(q)[::-1][:X] + r\n-ans = sum(s[:X + Y])\n print(ans)                   \n",
        "origin_generated_text": "\n```\n X, Y, a, b, c = list(map(int,input().split()))\n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n-s = sorted(p)[::-1][:X] + sorted(q)[::-1][:X] + r\n-ans = sum(s[:X + Y])\n print(ans)                   \n```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03096",
        "submission1_id": "s552533018",
        "crp_content": "\n import sys\n input=sys.stdin.readline\n \n N=int(input())\n L=[]\n for i in range(N):\n     n=int(input())\n     L.append(n)\n     \n dp=[0 for i in range(N)]\n dp[0]=1\n D=dict()\n D[L[0]]=1\n for i in range(1,N):\n     if L[i] not in D:\n         D[L[i]]=1\n         dp[i]=dp[i-1]\n     else:\n         if L[i]==L[i-1]:\n             dp[i]=dp[i-1]\n         else:\n             dp[i]=dp[i-1]+D[L[i]]\n             D[L[i]]+=1\n print(dp[-1])\n",
        "origin_generated_text": "\n```\n import sys\n input=sys.stdin.readline\n \n N=int(input())\n L=[]\n for i in range(N):\n     n=int(input())\n     L.append(n)\n     \n dp=[0 for i in range(N)]\n dp[0]=1\n D=dict()\n D[L[0]]=1\n for i in range(1,N):\n     if L[i] not in D:\n         D[L[i]]=1\n         dp[i]=dp[i-1]\n     else:\n         if L[i]==L[i-1]:\n             dp[i]=dp[i-1]\n         else:\n             dp[i]=dp[i-1]+D[L[i]]\n             D[L[i]]+=1\n print(dp[-1])\n```\n "
    },
    {
        "user_id": "u396495667",
        "problem_id": "p03992",
        "submission1_id": "s475637638",
        "crp_content": "\n s = list(input())\n f= ''.join(s[:4])\n-b=''.join(s[4:])\n print(f,'',b)\n",
        "origin_generated_text": "\n```\n s = list(input())\n f= ''.join(s[:4])\n-b=''.join(s[4:])\n print(f,'',b)\n```\n "
    },
    {
        "user_id": "u347363297",
        "problem_id": "p02718",
        "submission1_id": "s521534064",
        "crp_content": "\n n, m = input().split()\n m = int(m)\n \n votes = input().split()\n votes = [int(i) for i in votes]\n votes.sort(reverse=True)\n \n total = sum(votes)\n \n valid = True\n for i in range(m):\n     if votes[i] <= total/(4*m):\n         valid = False\n         break\n \n if valid:\n-    print('yes')\n else:\n-    print('no')\n",
        "origin_generated_text": "\n```\n n, m = input().split()\n m = int(m)\n \n votes = input().split()\n votes = [int(i) for i in votes]\n votes.sort(reverse=True)\n \n total = sum(votes)\n \n valid = True\n for i in range(m):\n     if votes[i] <= total/(4*m):\n         valid = False\n         break\n \n if valid:\n-    print('yes')\n else:\n-    print('no')\n```\n "
    },
    {
        "user_id": "u931118906",
        "problem_id": "p02912",
        "submission1_id": "s684022595",
        "crp_content": "\n import sys\n import heapq\n input=sys.stdin.readline\n n,m=map(int,input().split())\n a=list(map(lambda x:int(x)*(-1),input().split()))\n heapq.heapify(a)\n for _ in range(m):\n-    heapq.heappush(a,(-1)*(heapq.heappop(a)/2))\n print(int(sum(a)*(-1)))\n",
        "origin_generated_text": "\n```\n import sys\n import heapq\n input=sys.stdin.readline\n n,m=map(int,input().split())\n a=list(map(lambda x:int(x)*(-1),input().split()))\n heapq.heapify(a)\n for _ in range(m):\n-    heapq.heappush(a,(-1)*(heapq.heappop(a)/2))\n print(int(sum(a)*(-1)))\n```\n "
    },
    {
        "user_id": "u215335591",
        "problem_id": "p02407",
        "submission1_id": "s941240014",
        "crp_content": "\n n = int(input())\n x = [int(i) for i in input().split()]\n x.sort()\n x.reverse()\n-for i in range(n-1):\n-    print(x[i],\" \",sep=\"\",end=\"\")\n-print(x[n-1])\n-\n-\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = [int(i) for i in input().split()]\n x.sort()\n x.reverse()\n-for i in range(n-1):\n-    print(x[i],\" \",sep=\"\",end=\"\")\n-print(x[n-1])\n-\n-\n```\n "
    },
    {
        "user_id": "u965436898",
        "problem_id": "p03416",
        "submission1_id": "s420953546",
        "crp_content": "\n a,b = map(int,input().split())\n ans = 0\n for i in range(a,b+1):\n   s = list(str(i))\n-  left = s[0:2]\n-  right = s[3:]\n   if left == right:\n     ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n ans = 0\n for i in range(a,b+1):\n   s = list(str(i))\n-  left = s[0:2]\n-  right = s[3:]\n   if left == right:\n     ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u993268357",
        "problem_id": "p03796",
        "submission1_id": "s590334818",
        "crp_content": "\n n = int(input())\n \n res = 1\n \n-for i in range(1, n):\n   res = res*i%(10**9+7)\n \n print(res)\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n res = 1\n \n-for i in range(1, n):\n   res = res*i%(10**9+7)\n \n print(res)\n```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03970",
        "submission1_id": "s656053524",
        "crp_content": "\n S1 = input()\n S2 = \"CODEFESTIVAL2016\"\n ans = 0\n for i in range(16):\n-  if S1[i] == S2[i]:\n     ans+=1\n print(ans)\n   \n",
        "origin_generated_text": "\n```\n S1 = input()\n S2 = \"CODEFESTIVAL2016\"\n ans = 0\n for i in range(16):\n-  if S1[i] == S2[i]:\n     ans+=1\n print(ans)\n   \n```\n "
    },
    {
        "user_id": "u851695354",
        "problem_id": "p02281",
        "submission1_id": "s712517092",
        "crp_content": "\n \n class Tree:\n     def __init__(self,parent,left,right):\n         self.parent = parent\n         self.left = left\n         self.right = right\n \n \n def preparse(u):\n     if u == -1: return\n     print(\" \", end=\"\")\n     print(u, end=\"\")\n     preparse(trees[u].left)\n     preparse(trees[u].right)\n \n \n def inparse(u):\n     if u == -1: return\n     \n     inparse(trees[u].left)\n     \n     print(\" \", end=\"\")\n     print(u, end=\"\")\n     \n     inparse(trees[u].right)\n     \n \n def postparse(u):\n     if u == -1: return\n     \n     postparse(trees[u].left)\n     \n     postparse(trees[u].right)\n     \n     print(\" \", end=\"\")\n     print(u, end=\"\")\n \n \n N = int(input())\n \n trees = [Tree(-1,-1,-1) for i in range(N)]\n for i in range(N):\n     l = list(map(int, input().split()))\n     no = l[0]\n     left = l[1]\n     right = l[2]\n     trees[no].left = left\n     trees[no].right = right\n     if left != -1: trees[left].parent = no\n     if right != -1: trees[right].parent = no\n \n print(\"Preorder\")\n preparse(0)\n print(\"\")\n print(\"Inorder\")\n inparse(0)\n print(\"\")\n print(\"Postorder\")\n postparse(0)\n",
        "origin_generated_text": "\n```\n \n class Tree:\n     def __init__(self,parent,left,right):\n         self.parent = parent\n         self.left = left\n         self.right = right\n \n \n def preparse(u):\n     if u == -1: return\n     print(\" \", end=\"\")\n     print(u, end=\"\")\n     preparse(trees[u].left)\n     preparse(trees[u].right)\n \n \n def inparse(u):\n     if u == -1: return\n     \n     inparse(trees[u].left)\n     \n     print(\" \", end=\"\")\n     print(u, end=\"\")\n     \n     inparse(trees[u].right)\n     \n \n def postparse(u):\n     if u == -1: return\n     \n     postparse(trees[u].left)\n     \n     postparse(trees[u].right)\n     \n     print(\" \", end=\"\")\n     print(u, end=\"\")\n \n \n N = int(input())\n \n trees = [Tree(-1,-1,-1) for i in range(N)]\n for i in range(N):\n     l = list(map(int, input().split()))\n     no = l[0]\n     left = l[1]\n     right = l[2]\n     trees[no].left = left\n     trees[no].right = right\n     if left != -1: trees[left].parent = no\n     if right != -1: trees[right].parent = no\n \n print(\"Preorder\")\n preparse(0)\n print(\"\")\n print(\"Inorder\")\n inparse(0)\n print(\"\")\n print(\"Postorder\")\n postparse(0)\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s201836992",
        "crp_content": "\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i == 0 and (j is not 0 or k is not 0):\n     return 0\n   \n   if i < 0 or j < 0 or k < 0 or i < j:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i == 0 and (j is not 0 or k is not 0):\n     return 0\n   \n   if i < 0 or j < 0 or k < 0 or i < j:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n```\n "
    },
    {
        "user_id": "u054106284",
        "problem_id": "p03734",
        "submission1_id": "s318752486",
        "crp_content": "\n N, W = (int(i) for i in input().split())\n w = [0]*N\n v = [0]*N\n for i in range(N):\n   w[i], v[i] = (int(j) for j in input().split())\n w0 = w[0]\n wh = [a - w0 for a in w]\n dp = [[[0]*(N+1) for i in range(3*N+1)] for j in range(N+1)]\n for i in range(N):\n   for j in range(3*N+1):\n     for k in range(N+1):\n       dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k])\n       if j - wh[i] >=0 and k-1 >=0:\n         dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j-wh[i]][k-1]+v[i])\n res = 0\n for k in range(N+1):\n-  if w0*k <= W <= (w0+3)*k:\n     Wk = W - w0*k\n     ans = 0\n     for j in range(Wk+1):\n       ans = max(dp[N][j][k], ans)\n     res = max(res, ans)\n print(res)\n \n",
        "origin_generated_text": "\n```\n N, W = (int(i) for i in input().split())\n w = [0]*N\n v = [0]*N\n for i in range(N):\n   w[i], v[i] = (int(j) for j in input().split())\n w0 = w[0]\n wh = [a - w0 for a in w]\n dp = [[[0]*(N+1) for i in range(3*N+1)] for j in range(N+1)]\n for i in range(N):\n   for j in range(3*N+1):\n     for k in range(N+1):\n       dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k])\n       if j - wh[i] >=0 and k-1 >=0:\n         dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j-wh[i]][k-1]+v[i])\n res = 0\n for k in range(N+1):\n-  if w0*k <= W <= (w0+3)*k:\n     Wk = W - w0*k\n     ans = 0\n     for j in range(Wk+1):\n       ans = max(dp[N][j][k], ans)\n     res = max(res, ans)\n print(res)\n \n```\n "
    },
    {
        "user_id": "u777394984",
        "problem_id": "p02767",
        "submission1_id": "s520747654",
        "crp_content": "\n def resolve():\n     import math\n     n = int(input())\n     x = list(map(int,input().split()))\n-    b =  math.ceil(sum(x)/n)\n     m = 0\n     for i in x:\n         m += (i-b) * (i-b)\n     print(m)\n resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n     import math\n     n = int(input())\n     x = list(map(int,input().split()))\n-    b =  math.ceil(sum(x)/n)\n     m = 0\n     for i in x:\n         m += (i-b) * (i-b)\n     print(m)\n resolve()\n```\n "
    },
    {
        "user_id": "u112567325",
        "problem_id": "p03206",
        "submission1_id": "s678277620",
        "crp_content": "\n D = int(input())\n \n ans = \"Christmas\"\n-for i in range(D-25):\n   ans += \" Eve\"\n print(ans)\n",
        "origin_generated_text": "\n```\n D = int(input())\n \n ans = \"Christmas\"\n-for i in range(D-25):\n   ans += \" Eve\"\n print(ans)\n```\n "
    },
    {
        "user_id": "u284854859",
        "problem_id": "p03274",
        "submission1_id": "s160200140",
        "crp_content": "\n \n import bisect \n n,k = map(int,input().split())\n x = list(map(int,input().split()))\n \n w  = x.count(0)\n for i in range(w):\n     x.remove(0)\n \n if k <= w:\n     print(0)\n else:\n     k = k -w\n     \n \n     r = bisect.bisect_left(x,0)\n     \n     if x[-1]<0:\n         print(x[len(x)-k])\n     else:\n         ass = 10 ** 10\n         for i in range(r,min(len(x),r + k )):\n             if i-r+1 >= k:\n                 ans = abs(x[i])\n             elif i == r and r-k >= 0:\n                 ans = abs(x[r-k])\n             else:\n-                ans = x[i] + abs(x[i-k+1]) + min(x[i],abs(x[i-k+1]))\n             ass = min(ass,ans)\n         print(ass)\n",
        "origin_generated_text": "\n```\n \n import bisect \n n,k = map(int,input().split())\n x = list(map(int,input().split()))\n \n w  = x.count(0)\n for i in range(w):\n     x.remove(0)\n \n if k <= w:\n     print(0)\n else:\n     k = k -w\n     \n \n     r = bisect.bisect_left(x,0)\n     \n     if x[-1]<0:\n         print(x[len(x)-k])\n     else:\n         ass = 10 ** 10\n         for i in range(r,min(len(x),r + k )):\n             if i-r+1 >= k:\n                 ans = abs(x[i])\n             elif i == r and r-k >= 0:\n                 ans = abs(x[r-k])\n             else:\n-                ans = x[i] + abs(x[i-k+1]) + min(x[i],abs(x[i-k+1]))\n             ass = min(ass,ans)\n         print(ass)\n```\n "
    },
    {
        "user_id": "u917558625",
        "problem_id": "p02912",
        "submission1_id": "s128208907",
        "crp_content": "\n import math\n  \n s=list(map(int,input().split()))\n t=list(map(int,input().split()))\n a=0\n b=0\n c=0\n d=s[1]\n t.sort(reverse=True)\n if s[0]==1:\n   for i in range(s[1]):\n     t[0]=math.floor(t[0]/2)\n else:\n   c=t[0]/2\n   for j in range(s[1]):\n     for l in range(s[0]):\n       if d>0:\n         if c<=t[l]:\n           t[l]=math.floor(t[l]/2)\n           d=d-1\n         else:\n             t.sort(reverse=True)\n             c=t[0]/2\n             continue\n       else:\n         break\n print(sum(t))\n",
        "origin_generated_text": "\n```\n import math\n  \n s=list(map(int,input().split()))\n t=list(map(int,input().split()))\n a=0\n b=0\n c=0\n d=s[1]\n t.sort(reverse=True)\n if s[0]==1:\n   for i in range(s[1]):\n     t[0]=math.floor(t[0]/2)\n else:\n   c=t[0]/2\n   for j in range(s[1]):\n     for l in range(s[0]):\n       if d>0:\n         if c<=t[l]:\n           t[l]=math.floor(t[l]/2)\n           d=d-1\n         else:\n             t.sort(reverse=True)\n             c=t[0]/2\n             continue\n       else:\n         break\n print(sum(t))\n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s647666029",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(1e7 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(1e7 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n```\n "
    },
    {
        "user_id": "u204616996",
        "problem_id": "p03102",
        "submission1_id": "s378850408",
        "crp_content": "\n N,M,C=map(int,input().split())\n B=list(map(int,input().split()))\n ans=0\n for i in range(N):\n   A=list(map(int,input().split()))\n-  if sum([a*b for a in A for b in B])+C>0:\n     ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n N,M,C=map(int,input().split())\n B=list(map(int,input().split()))\n ans=0\n for i in range(N):\n   A=list(map(int,input().split()))\n-  if sum([a*b for a in A for b in B])+C>0:\n     ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u014139588",
        "problem_id": "p02640",
        "submission1_id": "s371483577",
        "crp_content": "\n x, y = map(int, input().split())\n-if y%2 == 1:\n-  print(\"NO\")\n else:\n-  if y >= 2*x and y <= 4*x:\n-    print(\"Yes\")\n-  else:\n-    print(\"No\")\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n-if y%2 == 1:\n-  print(\"NO\")\n else:\n-  if y >= 2*x and y <= 4*x:\n-    print(\"Yes\")\n-  else:\n-    print(\"No\")\n```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03992",
        "submission1_id": "s916667161",
        "crp_content": "\n s=input()\n-ss=s[0:3]+\" \"+s[4:]\n print(ss)\n",
        "origin_generated_text": "\n```\n s=input()\n-ss=s[0:3]+\" \"+s[4:]\n print(ss)\n```\n "
    },
    {
        "user_id": "u955125992",
        "problem_id": "p03274",
        "submission1_id": "s587531628",
        "crp_content": "\n n, k = map(int, input().split())\n x = list(map(int, input().split()))\n \n ans = 10 ** 9\n \n if n == 1:\n     for i in range(n):\n         ans = min(ans, abs(x[i]))\n elif n == k:\n     ans = min(abs(x[0]-x[n-1]) + abs(x[n-1]), abs(x[0]) + abs(x[0] - x[n-1]))\n else:\n     for i in range(n-k):\n-        ans = min(ans, abs(x[i]-x[i+k-1]) + abs(x[i+k-1]), abs(x[i]) + abs(x[i] - x[i+k-1]))\n \n print(ans)\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n x = list(map(int, input().split()))\n \n ans = 10 ** 9\n \n if n == 1:\n     for i in range(n):\n         ans = min(ans, abs(x[i]))\n elif n == k:\n     ans = min(abs(x[0]-x[n-1]) + abs(x[n-1]), abs(x[0]) + abs(x[0] - x[n-1]))\n else:\n     for i in range(n-k):\n-        ans = min(ans, abs(x[i]-x[i+k-1]) + abs(x[i+k-1]), abs(x[i]) + abs(x[i] - x[i+k-1]))\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u508486691",
        "problem_id": "p03008",
        "submission1_id": "s881793162",
        "crp_content": "\n import sys\n import math\n from collections import defaultdict\n \n sys.setrecursionlimit(10**7)\n def input():\n     return sys.stdin.readline()[:-1]\n \n mod = 10**9 + 7\n \n def I(): return int(input())\n def II(): return map(int, input().split())\n def III(): return list(map(int, input().split()))\n def Line(N,num):\n     if N<=0:\n         return [[] for _ in range(num)]\n     elif num==1:\n         return [I() for _ in range(N)]\n     else:\n         read_all = [tuple(II()) for _ in range(N)]\n         return map(list, zip(*read_all))\n \n \n \n N = I()\n A = III()\n B = III()\n \n first_use = []\n second_use = []\n for i in range(3):\n     if A[i]<B[i]:\n         first_use.append(i)\n     if A[i]>B[i]:\n         second_use.append(i)\n \n \n dp = [0]*(N+1)\n for i in range(N+1):\n     for j in first_use:\n         if i-A[j]>=0:\n             dp[i] = max(dp[i-A[j]]+B[j],dp[i])\n for i in range(N+1):\n     dp[i] = N-i+dp[i]\n \n \n count = max(dp)\n dp = [0]*(count+1)\n for i in range(count+1):\n     for j in second_use:\n         if i-B[j]>=0:\n             dp[i] = max(dp[i-B[j]]+A[j],dp[i])\n-for i in range(N+1):\n     dp[i] = count-i+dp[i]\n \n print(max(dp))\n",
        "origin_generated_text": "\n```\n import sys\n import math\n from collections import defaultdict\n \n sys.setrecursionlimit(10**7)\n def input():\n     return sys.stdin.readline()[:-1]\n \n mod = 10**9 + 7\n \n def I(): return int(input())\n def II(): return map(int, input().split())\n def III(): return list(map(int, input().split()))\n def Line(N,num):\n     if N<=0:\n         return [[] for _ in range(num)]\n     elif num==1:\n         return [I() for _ in range(N)]\n     else:\n         read_all = [tuple(II()) for _ in range(N)]\n         return map(list, zip(*read_all))\n \n \n \n N = I()\n A = III()\n B = III()\n \n first_use = []\n second_use = []\n for i in range(3):\n     if A[i]<B[i]:\n         first_use.append(i)\n     if A[i]>B[i]:\n         second_use.append(i)\n \n \n dp = [0]*(N+1)\n for i in range(N+1):\n     for j in first_use:\n         if i-A[j]>=0:\n             dp[i] = max(dp[i-A[j]]+B[j],dp[i])\n for i in range(N+1):\n     dp[i] = N-i+dp[i]\n \n \n count = max(dp)\n dp = [0]*(count+1)\n for i in range(count+1):\n     for j in second_use:\n         if i-B[j]>=0:\n             dp[i] = max(dp[i-B[j]]+A[j],dp[i])\n-for i in range(N+1):\n     dp[i] = count-i+dp[i]\n \n print(max(dp))\n```\n "
    },
    {
        "user_id": "u311636831",
        "problem_id": "p02880",
        "submission1_id": "s927678605",
        "crp_content": "\n dic={}\n \n for i in range(9):\n     for j in range(9):\n         if dic.get(i*j,None)==None:\n             dic[i*j]=1\n         else:\n             dic[i*j]+=1\n \n N = int(input())\n \n if dic.get(N,None)==None:\n     print(\"No\")\n else:\n     print(\"Yes\")\n",
        "origin_generated_text": "\n```\n dic={}\n \n for i in range(9):\n     for j in range(9):\n         if dic.get(i*j,None)==None:\n             dic[i*j]=1\n         else:\n             dic[i*j]+=1\n \n N = int(input())\n \n if dic.get(N,None)==None:\n     print(\"No\")\n else:\n     print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u972637506",
        "problem_id": "p02407",
        "submission1_id": "s111581134",
        "crp_content": "\n-_ = input()\n \n-print(\"\".join(reversed(input())))\n",
        "origin_generated_text": "\n```\n-_ = input()\n \n-print(\"\".join(reversed(input())))\n```\n "
    },
    {
        "user_id": "u766407523",
        "problem_id": "p03992",
        "submission1_id": "s213940868",
        "crp_content": "\n S = input()\n-print(S[:5] + ' ' + S[5:])\n",
        "origin_generated_text": "\n```\n S = input()\n-print(S[:5] + ' ' + S[5:])\n```\n "
    },
    {
        "user_id": "u895515293",
        "problem_id": "p03626",
        "submission1_id": "s500728531",
        "crp_content": "\n DIV=10**9+7\n N=int(input())\n ST=[input(), input()]\n PST=[]\n ptr=0\n while ptr < N:\n     \n     if ST[0][ptr] == ST[1][ptr]:\n         ptr += 1\n         PST.append(0)\n     \n     else:\n         ptr += 2\n         PST.append(1)\n \n \n \n res = 3\n for i in range(len(PST)-1):\n     if PST[i] == 0 and PST[i+1] == 0:\n         res = (res*2)%DIV\n     elif PST[i] == 0 and PST[i+1] == 1:\n         res = (res*2)%DIV\n     elif PST[i] == 1 and PST[i+1] == 0:\n         res = res\n     elif PST[i] == 1 and PST[i+1] == 1:\n         res = (res*3)%DIV\n \n print(res)\n \n",
        "origin_generated_text": "\n```\n DIV=10**9+7\n N=int(input())\n ST=[input(), input()]\n PST=[]\n ptr=0\n while ptr < N:\n     \n     if ST[0][ptr] == ST[1][ptr]:\n         ptr += 1\n         PST.append(0)\n     \n     else:\n         ptr += 2\n         PST.append(1)\n \n \n \n res = 3\n for i in range(len(PST)-1):\n     if PST[i] == 0 and PST[i+1] == 0:\n         res = (res*2)%DIV\n     elif PST[i] == 0 and PST[i+1] == 1:\n         res = (res*2)%DIV\n     elif PST[i] == 1 and PST[i+1] == 0:\n         res = res\n     elif PST[i] == 1 and PST[i+1] == 1:\n         res = (res*3)%DIV\n \n print(res)\n \n```\n "
    },
    {
        "user_id": "u619197965",
        "problem_id": "p03625",
        "submission1_id": "s492415172",
        "crp_content": "\n from collections import Counter\n n=int(input())\n a=sorted([int(i) for i in input().split()])\n cnt=Counter(a)\n key=sorted(list(cnt.keys()))[::-1]\n one=two=0\n for i in key:\n     if cnt[i]>=4:\n         one=two=i\n     elif cnt[i]>=2:\n         if one==0:\n             one=i\n         else:\n             two=i\n             break\n-print(one*two)\n",
        "origin_generated_text": "\n```\n from collections import Counter\n n=int(input())\n a=sorted([int(i) for i in input().split()])\n cnt=Counter(a)\n key=sorted(list(cnt.keys()))[::-1]\n one=two=0\n for i in key:\n     if cnt[i]>=4:\n         one=two=i\n     elif cnt[i]>=2:\n         if one==0:\n             one=i\n         else:\n             two=i\n             break\n-print(one*two)\n```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03343",
        "submission1_id": "s058584602",
        "crp_content": "\n n,k,q = (int(i) for i in input().split())\n a = [int(i) for i in input().split()]\n ans = 10**9\n for i in a:\n \tp,s,f = [],0,1\n \tfor j in range(n):\n \t\tif a[j]>=i and f:\n \t\t\ts,f = j,0\n \t\telif a[j]<i and f-1:\n \t\t\tif j-s>=k:\n \t\t\t\tfor j2 in sorted(a[s:j])[:j-s-k+1]: p.append(j2)\n \t\t\tf = 1\n \tif n-s>=k:\n \t\tfor j2 in sorted(a[s:n])[:n-s-k+1]: p.append(j2)\n \tif len(p)>=q: ans = min(ans,sorted(p)[q-1]-i)\n print(ans)\n",
        "origin_generated_text": "\n```\n n,k,q = (int(i) for i in input().split())\n a = [int(i) for i in input().split()]\n ans = 10**9\n for i in a:\n \tp,s,f = [],0,1\n \tfor j in range(n):\n \t\tif a[j]>=i and f:\n \t\t\ts,f = j,0\n \t\telif a[j]<i and f-1:\n \t\t\tif j-s>=k:\n \t\t\t\tfor j2 in sorted(a[s:j])[:j-s-k+1]: p.append(j2)\n \t\t\tf = 1\n \tif n-s>=k:\n \t\tfor j2 in sorted(a[s:n])[:n-s-k+1]: p.append(j2)\n \tif len(p)>=q: ans = min(ans,sorted(p)[q-1]-i)\n print(ans)\n```\n "
    },
    {
        "user_id": "u211160392",
        "problem_id": "p02919",
        "submission1_id": "s107563635",
        "crp_content": "\n N = int(input())\n P = list(map(int,input().split()))\n \n b = [0] * (N + 1)\n l1 = [max(i-1,-1) for i in range(N)]\n r1 = [min(i+1,N) for i in range(N)]\n l2 = [max(i-2,-1) for i in range(N)]\n r2 = [min(i+2,N) for i in range(N)]\n \n ans = 0\n for i in range(N):\n     b[P[i]-1] = i \n for i in range(N):\n     m = b[i] \n     x1,y1,x2,y2 = l1[m] , r1[m] , l2[m] ,r2[m]\n     ans += (i+1) * ((x1-x2) * (y1-m+1) + (y1-y2) * (m-x1))\n     \n     \n     \n     if x2 >=0:\n         r1[x2] = x1\n         r2[x2] = y1\n     \n     if x1 >= 0:\n         r1[x1] = y1 \n         r2[x1] = y2\n     \n     if y1 < N:\n         l2[y1] = x2 \n         l1[y1] = x1    \n     \n     if y2 < N:\n         l2[y2] = x1\n         l1[y2] = y1\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n P = list(map(int,input().split()))\n \n b = [0] * (N + 1)\n l1 = [max(i-1,-1) for i in range(N)]\n r1 = [min(i+1,N) for i in range(N)]\n l2 = [max(i-2,-1) for i in range(N)]\n r2 = [min(i+2,N) for i in range(N)]\n \n ans = 0\n for i in range(N):\n     b[P[i]-1] = i \n for i in range(N):\n     m = b[i] \n     x1,y1,x2,y2 = l1[m] , r1[m] , l2[m] ,r2[m]\n     ans += (i+1) * ((x1-x2) * (y1-m+1) + (y1-y2) * (m-x1))\n     \n     \n     \n     if x2 >=0:\n         r1[x2] = x1\n         r2[x2] = y1\n     \n     if x1 >= 0:\n         r1[x1] = y1 \n         r2[x1] = y2\n     \n     if y1 < N:\n         l2[y1] = x2 \n         l1[y1] = x1    \n     \n     if y2 < N:\n         l2[y2] = x1\n         l1[y2] = y1\n print(ans)\n```\n "
    },
    {
        "user_id": "u945181840",
        "problem_id": "p03480",
        "submission1_id": "s845587226",
        "crp_content": "\n from itertools import groupby\n \n S = list(input())\n n = len(S)\n s = [len(list(j)) for i, j in groupby(S)]\n s = [max(i, n - i) for i in s]\n \n-print(min(s))\n \n",
        "origin_generated_text": "\n```\n from itertools import groupby\n \n S = list(input())\n n = len(S)\n s = [len(list(j)) for i, j in groupby(S)]\n s = [max(i, n - i) for i in s]\n \n-print(min(s))\n \n```\n "
    },
    {
        "user_id": "u625963200",
        "problem_id": "p03272",
        "submission1_id": "s535511449",
        "crp_content": "\n n,i=map(int,input().split())\n-print(n-1+1)\n",
        "origin_generated_text": "\n```\n n,i=map(int,input().split())\n-print(n-1+1)\n```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p02580",
        "submission1_id": "s968887474",
        "crp_content": "\n import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n \n sys.setrecursionlimit(10**7)\n inf=10**20\n mod=10**9+7\n dd=[(-1,0),(0,1),(1,0),(0,-1)]\n ddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n \n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def LS(): return sys.stdin.readline().split()\n def S(): return input()\n \n def main():\n   H,W,M=LI()\n   h=[0]*H\n   w=[0]*W\n   lh=[]\n   lw=[]\n   d={}\n   for _ in range(M):\n     a,b=LI()\n     lh.append(a)\n     lw.append(b)\n     a-=1\n     b-=1\n     h[a]+=1\n     w[b]+=1\n     d[(a,b)]=1\n \n   h_koho=[]\n   w_koho=[]\n \n   h_max=max(h)\n   w_max=max(w)\n \n   for i,x in enumerate(h):\n     if x==h_max:\n       h_koho.append(x)\n   for i,x in enumerate(w):\n     if x==w_max:\n       w_koho.append(x)\n \n   for x in h_koho:\n     for y in w_koho:\n       if (x,y) not in d:\n-        return h_max+w_max\n \n   return h_max+w_max-1\n \n \n print(main())\n \n",
        "origin_generated_text": "\n```\n import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n \n sys.setrecursionlimit(10**7)\n inf=10**20\n mod=10**9+7\n dd=[(-1,0),(0,1),(1,0),(0,-1)]\n ddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n \n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def LS(): return sys.stdin.readline().split()\n def S(): return input()\n \n def main():\n   H,W,M=LI()\n   h=[0]*H\n   w=[0]*W\n   lh=[]\n   lw=[]\n   d={}\n   for _ in range(M):\n     a,b=LI()\n     lh.append(a)\n     lw.append(b)\n     a-=1\n     b-=1\n     h[a]+=1\n     w[b]+=1\n     d[(a,b)]=1\n \n   h_koho=[]\n   w_koho=[]\n \n   h_max=max(h)\n   w_max=max(w)\n \n   for i,x in enumerate(h):\n     if x==h_max:\n       h_koho.append(x)\n   for i,x in enumerate(w):\n     if x==w_max:\n       w_koho.append(x)\n \n   for x in h_koho:\n     for y in w_koho:\n       if (x,y) not in d:\n-        return h_max+w_max\n \n   return h_max+w_max-1\n \n \n print(main())\n \n```\n "
    },
    {
        "user_id": "u102461423",
        "problem_id": "p03766",
        "submission1_id": "s711539629",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n MOD = 10**9 + 7\n N = int(input())\n \n dp = [0] * (N+10)\n dp_cum = [0] * (N+10)\n \n dp[1] = N-1; dp_cum[1] = N-1\n dp[2] = N-1; dp_cum[2] = 2*(N-1)\n for n in range(3,N+1):\n     dp[n] = dp[n-1] + dp_cum[n-3]\n     dp_cum[n] = (dp_cum[n-1] + dp[n]) % MOD\n \n-answer = sum(dp[1:N])*N + dp[-1] + 1\n answer %= MOD\n print(answer)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n MOD = 10**9 + 7\n N = int(input())\n \n dp = [0] * (N+10)\n dp_cum = [0] * (N+10)\n \n dp[1] = N-1; dp_cum[1] = N-1\n dp[2] = N-1; dp_cum[2] = 2*(N-1)\n for n in range(3,N+1):\n     dp[n] = dp[n-1] + dp_cum[n-3]\n     dp_cum[n] = (dp_cum[n-1] + dp[n]) % MOD\n \n-answer = sum(dp[1:N])*N + dp[-1] + 1\n answer %= MOD\n print(answer)\n```\n "
    },
    {
        "user_id": "u861020408",
        "problem_id": "p02954",
        "submission1_id": "s076031332",
        "crp_content": "\n S = input() + 'O'\n N = len(S)\n n = [0] * (N - 1)\n t = []\n i = 0\n j =  0\n while S[i] != 'O':\n     count = 0\n     if S[i] == 'R':\n         while S[i] == 'R':\n             count += 1\n             i += 1\n     elif S[i] == 'L':\n         while S[i] == 'L':\n             count += 1\n             i += 1\n     t.append(count)\n T = int(len(t)/2)  \n for i in range(T):\n     j += t[2*i]\n     if t[2*i] % 2 == 0:\n         if t[2*i + 1] % 2 == 0:\n             n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n             n[j] = n[j - 1]\n         elif t[2*i + 1] % 2 == 1:\n             n[j - 1] = t[2*i + 1]\n             n[j] = t[2*i]\n     elif t[2*i] % 2 == 1:\n         if t[2*i + 1] % 2 == 0:\n             n[j - 1] = int((t[2*i] + t[2*i + 1] + 1)/2)\n             n[j] = n[j - 1]\n         elif t[2*i + 1] % 2 == 1:\n             n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n             n[j] = n[j - 1]\n-    j += t[2*i+1]\n print(' '.join(map(str, n)))\n \n",
        "origin_generated_text": "\n```\n S = input() + 'O'\n N = len(S)\n n = [0] * (N - 1)\n t = []\n i = 0\n j =  0\n while S[i] != 'O':\n     count = 0\n     if S[i] == 'R':\n         while S[i] == 'R':\n             count += 1\n             i += 1\n     elif S[i] == 'L':\n         while S[i] == 'L':\n             count += 1\n             i += 1\n     t.append(count)\n T = int(len(t)/2)  \n for i in range(T):\n     j += t[2*i]\n     if t[2*i] % 2 == 0:\n         if t[2*i + 1] % 2 == 0:\n             n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n             n[j] = n[j - 1]\n         elif t[2*i + 1] % 2 == 1:\n             n[j - 1] = t[2*i + 1]\n             n[j] = t[2*i]\n     elif t[2*i] % 2 == 1:\n         if t[2*i + 1] % 2 == 0:\n             n[j - 1] = int((t[2*i] + t[2*i + 1] + 1)/2)\n             n[j] = n[j - 1]\n         elif t[2*i + 1] % 2 == 1:\n             n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n             n[j] = n[j - 1]\n-    j += t[2*i+1]\n print(' '.join(map(str, n)))\n \n```\n "
    },
    {
        "user_id": "u073709667",
        "problem_id": "p02385",
        "submission1_id": "s879255025",
        "crp_content": "\n def N():\n     num=Dice[0]\n     Dice[0]=Dice[1]\n     Dice[1]=Dice[5]\n     Dice[5]=Dice[4]\n     Dice[4]=num\n def E():\n     num=Dice[0]\n     Dice[0]=Dice[3]\n     Dice[3]=Dice[5]\n     Dice[5]=Dice[2]\n     Dice[2]=num\n def W():\n     num=Dice[0]\n     Dice[0]=Dice[2]\n     Dice[2]=Dice[5]\n     Dice[5]=Dice[3]\n     Dice[3]=num\n def S():\n     num=Dice[0]\n     Dice[0]=Dice[4]\n     Dice[4]=Dice[5]\n     Dice[5]=Dice[1]\n     Dice[1]=num\n Dice=[int(i) for i in input().split()]\n Dice2=[int(i) for i in input().split()]\n-if (Dice[0] in Dice2)==False:\n     print('No')\n else:\n     count=0\n     for j in range(12):\n         if count%2==0:\n             N()\n         else:\n             W()\n         count+=1\n         for i in range(4):\n             N()\n             W()\n             S()\n             if Dice==Dice2:\n                 break\n     if Dice==Dice2:\n         print('Yes')\n     else:\n         print('No')\n",
        "origin_generated_text": "\n```\n def N():\n     num=Dice[0]\n     Dice[0]=Dice[1]\n     Dice[1]=Dice[5]\n     Dice[5]=Dice[4]\n     Dice[4]=num\n def E():\n     num=Dice[0]\n     Dice[0]=Dice[3]\n     Dice[3]=Dice[5]\n     Dice[5]=Dice[2]\n     Dice[2]=num\n def W():\n     num=Dice[0]\n     Dice[0]=Dice[2]\n     Dice[2]=Dice[5]\n     Dice[5]=Dice[3]\n     Dice[3]=num\n def S():\n     num=Dice[0]\n     Dice[0]=Dice[4]\n     Dice[4]=Dice[5]\n     Dice[5]=Dice[1]\n     Dice[1]=num\n Dice=[int(i) for i in input().split()]\n Dice2=[int(i) for i in input().split()]\n-if (Dice[0] in Dice2)==False:\n     print('No')\n else:\n     count=0\n     for j in range(12):\n         if count%2==0:\n             N()\n         else:\n             W()\n         count+=1\n         for i in range(4):\n             N()\n             W()\n             S()\n             if Dice==Dice2:\n                 break\n     if Dice==Dice2:\n         print('Yes')\n     else:\n         print('No')\n```\n "
    },
    {
        "user_id": "u961674365",
        "problem_id": "p03796",
        "submission1_id": "s921176113",
        "crp_content": "\n n=int(input())\n for i in range(n):\n-  n=(n*(i+1))%(10**9+7)\n print(n)\n",
        "origin_generated_text": "\n```\n n=int(input())\n for i in range(n):\n-  n=(n*(i+1))%(10**9+7)\n print(n)\n```\n "
    },
    {
        "user_id": "u404682284",
        "problem_id": "p02281",
        "submission1_id": "s808071461",
        "crp_content": "\n class NullNode():\n     def __init__(self):\n         self.id = -1\n \n class Node():\n     def __init__(self, id):\n         self.id = id\n         self.parent = NullNode()\n         self.left = NullNode()\n         self.right = NullNode()\n \n     def inorder(self, node_list, out_list=[]):\n         pass\n \n     def postorder(self, node_list, out_list=[]):\n         pass\n \n def preorder(node, out_list=[]):\n     if node.id != -1:\n         out_list.append(str(node.id))\n         out_list = preorder(node.left, out_list)\n         out_list = preorder(node.right, out_list)\n     return out_list\n \n def inorder(node, out_list=[]):\n     if node.id != -1:\n         out_list = inorder(node.left, out_list)\n         out_list.append(str(node.id))\n         out_list = inorder(node.right, out_list)\n     return out_list\n \n def postorder(node, out_list=[]):\n     if node.id != -1:\n         out_list = postorder(node.left, out_list)\n         out_list = postorder(node.right, out_list)\n         out_list.append(str(node.id))\n     return out_list\n \n n = int(input())\n node_list = [Node(id) for id in range(n)]\n for i in range(n):\n     [id, left, right] = [int(j) for j in input().split()]\n     i_node = node_list[id]\n     if left != -1:\n         i_node.left = node_list[left]\n         node_list[left].parent = node_list[id]\n     if right != -1:\n         i_node.right = node_list[right]\n         node_list[right].parent = node_list[id]\n \n print('Preorder')\n out_list = preorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n print('Inorder')\n out_list = inorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n print('Postorder')\n out_list = postorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n \n",
        "origin_generated_text": "\n```\n class NullNode():\n     def __init__(self):\n         self.id = -1\n \n class Node():\n     def __init__(self, id):\n         self.id = id\n         self.parent = NullNode()\n         self.left = NullNode()\n         self.right = NullNode()\n \n     def inorder(self, node_list, out_list=[]):\n         pass\n \n     def postorder(self, node_list, out_list=[]):\n         pass\n \n def preorder(node, out_list=[]):\n     if node.id != -1:\n         out_list.append(str(node.id))\n         out_list = preorder(node.left, out_list)\n         out_list = preorder(node.right, out_list)\n     return out_list\n \n def inorder(node, out_list=[]):\n     if node.id != -1:\n         out_list = inorder(node.left, out_list)\n         out_list.append(str(node.id))\n         out_list = inorder(node.right, out_list)\n     return out_list\n \n def postorder(node, out_list=[]):\n     if node.id != -1:\n         out_list = postorder(node.left, out_list)\n         out_list = postorder(node.right, out_list)\n         out_list.append(str(node.id))\n     return out_list\n \n n = int(input())\n node_list = [Node(id) for id in range(n)]\n for i in range(n):\n     [id, left, right] = [int(j) for j in input().split()]\n     i_node = node_list[id]\n     if left != -1:\n         i_node.left = node_list[left]\n         node_list[left].parent = node_list[id]\n     if right != -1:\n         i_node.right = node_list[right]\n         node_list[right].parent = node_list[id]\n \n print('Preorder')\n out_list = preorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n print('Inorder')\n out_list = inorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n print('Postorder')\n out_list = postorder(node_list[0])\n print(' ' + ' '.join(out_list))\n \n \n```\n "
    },
    {
        "user_id": "u746849814",
        "problem_id": "p03475",
        "submission1_id": "s891968879",
        "crp_content": "\n n = int(input())\n C, S, F = [], [], []\n for _ in range(n-1):\n     c, s, f = map(int, input().split())\n     C.append(c)\n     S.append(s)\n     F.append(f)\n     \n for i in range(n-1):\n     t = S[i]\n     while i != (n-1):\n         if t < S[i]:  \n             wait = (S[i] - t)\n         else:\n             wait = (t - S[i])%F[i]\n         t += wait\n         move = C[i]\n         t += move\n         i += 1\n     print(t)\n-print(0)  \n",
        "origin_generated_text": "\n```\n n = int(input())\n C, S, F = [], [], []\n for _ in range(n-1):\n     c, s, f = map(int, input().split())\n     C.append(c)\n     S.append(s)\n     F.append(f)\n     \n for i in range(n-1):\n     t = S[i]\n     while i != (n-1):\n         if t < S[i]:  \n             wait = (S[i] - t)\n         else:\n             wait = (t - S[i])%F[i]\n         t += wait\n         move = C[i]\n         t += move\n         i += 1\n     print(t)\n-print(0)  \n```\n "
    },
    {
        "user_id": "u261400234",
        "problem_id": "p03303",
        "submission1_id": "s814316833",
        "crp_content": "\n a=input()\n b=int(input())\n-print(a[::3])\n",
        "origin_generated_text": "\n```\n a=input()\n b=int(input())\n-print(a[::3])\n```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s316175109",
        "crp_content": "\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>1:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if (g-s)%m>1:\n         if g>=s:\n             if ans>s:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-ans)%m\n         else:\n             if ans>s or g>=ans:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-s)%m\n     else:\n         val+=(g-s)%m\n \n \n print(val)\n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>1:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if (g-s)%m>1:\n         if g>=s:\n             if ans>s:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-ans)%m\n         else:\n             if ans>s or g>=ans:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-s)%m\n     else:\n         val+=(g-s)%m\n \n \n print(val)\n```\n "
    },
    {
        "user_id": "u993642190",
        "problem_id": "p03625",
        "submission1_id": "s175217567",
        "crp_content": "\n import collections as cl\n \n N = int(input())\n sticks = [int(i) for i in input().split()]\n \n sticks.sort(reverse=True)\n \n w = 0\n h = 0\n \n for k,v in sorted(cl.Counter(sticks).items(), key=lambda x: x[0], reverse=True):\n     if (v < 2) :\n         continue\n     \n     if (v >= 4) :\n         \n         w = k\n         h = k\n         break\n     \n     if (v >= 2) :\n         if (w == 0) :\n             w = k\n         else :\n             h = k\n             break\n \n \n print(w*h)\n",
        "origin_generated_text": "\n```\n import collections as cl\n \n N = int(input())\n sticks = [int(i) for i in input().split()]\n \n sticks.sort(reverse=True)\n \n w = 0\n h = 0\n \n for k,v in sorted(cl.Counter(sticks).items(), key=lambda x: x[0], reverse=True):\n     if (v < 2) :\n         continue\n     \n     if (v >= 4) :\n         \n         w = k\n         h = k\n         break\n     \n     if (v >= 2) :\n         if (w == 0) :\n             w = k\n         else :\n             h = k\n             break\n \n \n print(w*h)\n```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03573",
        "submission1_id": "s130099978",
        "crp_content": "\n import functools\n \n import os\n \n INF = float('inf')\n \n \n def inp():\n     return int(input())\n \n \n def inpf():\n     return float(input())\n \n \n def inps():\n     return input()\n \n \n def inl():\n     return list(map(int, input().split()))\n \n \n def inlf():\n     return list(map(float, input().split()))\n \n \n def inls():\n     return input().split()\n \n \n def inpm(line):\n     return [inp() for _ in range(line)]\n \n \n def inpfm(line):\n     return [inpf() for _ in range(line)]\n \n \n def inpsm(line):\n     return [inps() for _ in range(line)]\n \n \n def inlm(line):\n     return [inl() for _ in range(line)]\n \n \n def inlfm(line):\n     return [inlf() for _ in range(line)]\n \n \n def inlsm(line):\n     return [inls() for _ in range(line)]\n \n \n def debug(fn):\n     if not os.getenv('LOCAL'):\n         return fn\n \n     @functools.wraps(fn)\n     def wrapper(*args, **kwargs):\n         print('DEBUG: {}({}) -> '.format(\n             fn.__name__,\n             ', '.join(\n                 list(map(str, args)) +\n                 ['{}={}'.format(k, str(v)) for k, v in kwargs.items()]\n             )\n         ), end='')\n         ret = fn(*args, **kwargs)\n         print(ret)\n         return ret\n \n     return wrapper\n \n a, b, c = inl()\n if a == b:\n     print(c)\n elif a ==c:\n     print(b)\n-else:print(b)\n           \n",
        "origin_generated_text": "\n```\n import functools\n \n import os\n \n INF = float('inf')\n \n \n def inp():\n     return int(input())\n \n \n def inpf():\n     return float(input())\n \n \n def inps():\n     return input()\n \n \n def inl():\n     return list(map(int, input().split()))\n \n \n def inlf():\n     return list(map(float, input().split()))\n \n \n def inls():\n     return input().split()\n \n \n def inpm(line):\n     return [inp() for _ in range(line)]\n \n \n def inpfm(line):\n     return [inpf() for _ in range(line)]\n \n \n def inpsm(line):\n     return [inps() for _ in range(line)]\n \n \n def inlm(line):\n     return [inl() for _ in range(line)]\n \n \n def inlfm(line):\n     return [inlf() for _ in range(line)]\n \n \n def inlsm(line):\n     return [inls() for _ in range(line)]\n \n \n def debug(fn):\n     if not os.getenv('LOCAL'):\n         return fn\n \n     @functools.wraps(fn)\n     def wrapper(*args, **kwargs):\n         print('DEBUG: {}({}) -> '.format(\n             fn.__name__,\n             ', '.join(\n                 list(map(str, args)) +\n                 ['{}={}'.format(k, str(v)) for k, v in kwargs.items()]\n             )\n         ), end='')\n         ret = fn(*args, **kwargs)\n         print(ret)\n         return ret\n \n     return wrapper\n \n a, b, c = inl()\n if a == b:\n     print(c)\n elif a ==c:\n     print(b)\n-else:print(b)\n           \n```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s965301113",
        "crp_content": "\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1 or w == 1:\n-        count = 1\n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n-    else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n \n",
        "origin_generated_text": "\n```\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1 or w == 1:\n-        count = 1\n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n-    else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n \n```\n "
    },
    {
        "user_id": "u813102292",
        "problem_id": "p02880",
        "submission1_id": "s670863987",
        "crp_content": "\n N = input()\n printed = False\n-for i in range(1, 10):\n-    for j in range(1, 10):\n         if N == i * j:\n             print('Yes')\n             printed = True\n             break\n \n if not printed:\n     print('No')\n",
        "origin_generated_text": "\n```\n N = input()\n printed = False\n-for i in range(1, 10):\n-    for j in range(1, 10):\n         if N == i * j:\n             print('Yes')\n             printed = True\n             break\n \n if not printed:\n     print('No')\n```\n "
    },
    {
        "user_id": "u143903328",
        "problem_id": "p03477",
        "submission1_id": "s450175746",
        "crp_content": "\n a, b, c, d = map(int,input().split())\n if a + b > c + d:\n     print('Left')\n-elif a + b < c + d:\n     print('Balanced')\n else:\n     print('Right')\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int,input().split())\n if a + b > c + d:\n     print('Left')\n-elif a + b < c + d:\n     print('Balanced')\n else:\n     print('Right')\n```\n "
    },
    {
        "user_id": "u904943473",
        "problem_id": "p03274",
        "submission1_id": "s298505015",
        "crp_content": "\n N, K = map(int, input().split())\n lst = list(map(int, input().split()))\n-ans = 2 * 10 ** 5\n for i in range(N-K+1):\n \tk_lst = lst[i:i+K]\n \tleft = min(k_lst)\n \tright = max(k_lst)\n-\tif (left > right):\n-\t\tdis = abs(left - right) + abs(right)\n \telse:\n-\t\tdis = abs(left - right) + abs(left)\n \tif (dis < ans):\n-\t\tans = dis    \n print(ans)\n \n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n lst = list(map(int, input().split()))\n-ans = 2 * 10 ** 5\n for i in range(N-K+1):\n \tk_lst = lst[i:i+K]\n \tleft = min(k_lst)\n \tright = max(k_lst)\n-\tif (left > right):\n-\t\tdis = abs(left - right) + abs(right)\n \telse:\n-\t\tdis = abs(left - right) + abs(left)\n \tif (dis < ans):\n-\t\tans = dis    \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u412563426",
        "problem_id": "p03479",
        "submission1_id": "s604395317",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n x, y = map(int, input().split())\n-ans = 0\n-for k in range(1, 40):\n-    \n-    if int(y / (x * 2**k)) < 1:\n-        ans = k\n-        break\n-print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n x, y = map(int, input().split())\n-ans = 0\n-for k in range(1, 40):\n-    \n-    if int(y / (x * 2**k)) < 1:\n-        ans = k\n-        break\n-print(ans)\n```\n "
    },
    {
        "user_id": "u943004959",
        "problem_id": "p02625",
        "submission1_id": "s300135922",
        "crp_content": "\n MOD = 10**9 + 7\n MAX = 5*10**5 + 1\n \n fact = [0 for _ in range(MAX)]\n factinv = [0 for _ in range(MAX)]\n \n fact[0] = 1\n for k in range(1, MAX):\n     fact[k] = fact[k - 1]*k\n     fact[k] %= MOD\n \n factinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\n for k in range(MAX - 1, 0, -1):\n     factinv[k - 1] = factinv[k]*k\n     factinv[k - 1] %= MOD\n \n def nCk(n, k):\n     return fact[n]*factinv[k]*factinv[n - k] % MOD\n \n def nPk(n, k):\n     return fact[n]*factinv[n - k] % MOD\n \n n, m = map(int, input().split(' '))\n \n ans = 0\n for k in range(n + 1):\n     tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n     if k % 2: ans += tmp\n     else: ans -= tmp\n     ans %= MOD\n \n print(ans)\n",
        "origin_generated_text": "\n```\n MOD = 10**9 + 7\n MAX = 5*10**5 + 1\n \n fact = [0 for _ in range(MAX)]\n factinv = [0 for _ in range(MAX)]\n \n fact[0] = 1\n for k in range(1, MAX):\n     fact[k] = fact[k - 1]*k\n     fact[k] %= MOD\n \n factinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\n for k in range(MAX - 1, 0, -1):\n     factinv[k - 1] = factinv[k]*k\n     factinv[k - 1] %= MOD\n \n def nCk(n, k):\n     return fact[n]*factinv[k]*factinv[n - k] % MOD\n \n def nPk(n, k):\n     return fact[n]*factinv[n - k] % MOD\n \n n, m = map(int, input().split(' '))\n \n ans = 0\n for k in range(n + 1):\n     tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n     if k % 2: ans += tmp\n     else: ans -= tmp\n     ans %= MOD\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u073852194",
        "problem_id": "p03972",
        "submission1_id": "s220502594",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n from itertools import accumulate\n \n W, H = map(int,input().split())\n \n P = [int(input()) for _ in range(W)]\n Q = [int(input()) for _ in range(H)]\n \n P.sort()\n Q.sort()\n \n cum_p = [0] + list(accumulate(P))\n cum_q = [0] + list(accumulate(Q))\n \n res = 0\n \n-N = min(len(cum_p), len(cum_q))\n \n-for i in range(N):\n-    res += cum_p[-1 - i] + cum_q[-1 - i]\n-\n-for i in range(N - 1):\n-    res += min(P[-1 - i], Q[-1 - i])\n     \n print(res)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n from itertools import accumulate\n \n W, H = map(int,input().split())\n \n P = [int(input()) for _ in range(W)]\n Q = [int(input()) for _ in range(H)]\n \n P.sort()\n Q.sort()\n \n cum_p = [0] + list(accumulate(P))\n cum_q = [0] + list(accumulate(Q))\n \n res = 0\n \n-N = min(len(cum_p), len(cum_q))\n \n-for i in range(N):\n-    res += cum_p[-1 - i] + cum_q[-1 - i]\n-\n-for i in range(N - 1):\n-    res += min(P[-1 - i], Q[-1 - i])\n     \n print(res)\n```\n "
    },
    {
        "user_id": "u357751375",
        "problem_id": "p02767",
        "submission1_id": "s505105361",
        "crp_content": "\n n = int(input())\n x = list(map(int,input().split()))\n m = 0\n j = max(x)\n \n for p in range(j):\n     c = 0\n     for i in range(n):\n-        p = (i+1) * (i+1) - n\n-        c = c + (p * p)\n     \n     if m == 0:\n         m = c\n     else:\n         if m > c:\n             m = c\n \n-print(c)\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int,input().split()))\n m = 0\n j = max(x)\n \n for p in range(j):\n     c = 0\n     for i in range(n):\n-        p = (i+1) * (i+1) - n\n-        c = c + (p * p)\n     \n     if m == 0:\n         m = c\n     else:\n         if m > c:\n             m = c\n \n-print(c)\n```\n "
    },
    {
        "user_id": "u168416324",
        "problem_id": "p02886",
        "submission1_id": "s957060167",
        "crp_content": "\n ans=0\n n=int(input())\n li=list(map(int,input().split()))\n for i in li:\n   for j in li:\n-    if i==j:\n-      break\n     ans+=i*j\n print(ans)\n \n",
        "origin_generated_text": "\n```\n ans=0\n n=int(input())\n li=list(map(int,input().split()))\n for i in li:\n   for j in li:\n-    if i==j:\n-      break\n     ans+=i*j\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u712082626",
        "problem_id": "p03103",
        "submission1_id": "s226645524",
        "crp_content": "\n n, m = map(int, input().split())\n t = {}\n for i in range(n):\n     a,b = map(int, input().split())\n     t[a] = b\n t = sorted(t.items())\n-print(t)\n r = 0\n for i in t:\n     if i[1] < m:\n         r += i[0]*i[1]\n         m -= i[1]\n     else:\n         r += i[0]*(m)\n         break\n print(r)\n \n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n t = {}\n for i in range(n):\n     a,b = map(int, input().split())\n     t[a] = b\n t = sorted(t.items())\n-print(t)\n r = 0\n for i in t:\n     if i[1] < m:\n         r += i[0]*i[1]\n         m -= i[1]\n     else:\n         r += i[0]*(m)\n         break\n print(r)\n \n```\n "
    },
    {
        "user_id": "u105210954",
        "problem_id": "p02959",
        "submission1_id": "s274657067",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n b = list(map(int,input().split()))\n \n ans = 0\n \n for i in range(n):\n   sa = a[i] - b[i]\n   \n   if sa < 0:\n     b[i] -= a[i]\n     ans += a[i]\n     sa2 = a[i+1] - b[i]\n     \n     if sa2 < 0:\n       ans += a[i+1]\n       a[i+1] = 0\n     else:\n       a[i+1] -= sa2\n       ans += b[i]\n       b[i] -= sa2\n       \n   else:\n     ans += b[i]\n     \n print(ans)\n     \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n b = list(map(int,input().split()))\n \n ans = 0\n \n for i in range(n):\n   sa = a[i] - b[i]\n   \n   if sa < 0:\n     b[i] -= a[i]\n     ans += a[i]\n     sa2 = a[i+1] - b[i]\n     \n     if sa2 < 0:\n       ans += a[i+1]\n       a[i+1] = 0\n     else:\n       a[i+1] -= sa2\n       ans += b[i]\n       b[i] -= sa2\n       \n   else:\n     ans += b[i]\n     \n print(ans)\n     \n```\n "
    },
    {
        "user_id": "u396976991",
        "problem_id": "p03296",
        "submission1_id": "s917691137",
        "crp_content": "\n N=int(input())\n a=[]\n a=input().split()\n sum=0\n \n-for i in range (1,N-1):\n   if a[i-1]==a[i]:\n     a[i]=i+10000\n     sum=sum+1\n \n print(sum)\n",
        "origin_generated_text": "\n```\n N=int(input())\n a=[]\n a=input().split()\n sum=0\n \n-for i in range (1,N-1):\n   if a[i-1]==a[i]:\n     a[i]=i+10000\n     sum=sum+1\n \n print(sum)\n```\n "
    },
    {
        "user_id": "u556160473",
        "problem_id": "p03734",
        "submission1_id": "s856999339",
        "crp_content": "\n import bisect\n \n if 1:\n     N,W = map(int, input().split(' '))\n     w,v = [],[]\n     for i in range(N):\n         w_,v_ = map(int, input().split(' '))\n         w.append(w_)\n         v.append(v_)\n else:\n     N,W = 4,6\n     w = [2,3,4,3]\n     v = [1,4,10,4]\n \n w0 = w[0]\n \n idxs = set()\n for i in range(N+1):\n     for j in range(3*i+1):\n         if i*w0+j <= W:\n             idxs.add(i*w0+j)\n idxs = list(idxs) \n idx_dict = {idx:i for i,idx in enumerate(idxs)}\n \n dp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n \n for i in range(N):\n     for j in range(len(idxs)):\n         if idxs[j] < w[i]:\n             dp[i+1][j] = dp[i][j]\n         else:\n             if 1:\n                 k = bisect.bisect_left(idxs, idxs[j]-w[i])\n                 try:\n                     dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n                 except:\n                     dp[i+1][j] = dp[i][j]\n             else:\n                 try:\n                     dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n                 except:\n                     dp[i+1][j] = dp[i][j]\n                 \n print(dp[-1][-1])\n",
        "origin_generated_text": "\n```\n import bisect\n \n if 1:\n     N,W = map(int, input().split(' '))\n     w,v = [],[]\n     for i in range(N):\n         w_,v_ = map(int, input().split(' '))\n         w.append(w_)\n         v.append(v_)\n else:\n     N,W = 4,6\n     w = [2,3,4,3]\n     v = [1,4,10,4]\n \n w0 = w[0]\n \n idxs = set()\n for i in range(N+1):\n     for j in range(3*i+1):\n         if i*w0+j <= W:\n             idxs.add(i*w0+j)\n idxs = list(idxs) \n idx_dict = {idx:i for i,idx in enumerate(idxs)}\n \n dp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n \n for i in range(N):\n     for j in range(len(idxs)):\n         if idxs[j] < w[i]:\n             dp[i+1][j] = dp[i][j]\n         else:\n             if 1:\n                 k = bisect.bisect_left(idxs, idxs[j]-w[i])\n                 try:\n                     dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n                 except:\n                     dp[i+1][j] = dp[i][j]\n             else:\n                 try:\n                     dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n                 except:\n                     dp[i+1][j] = dp[i][j]\n                 \n print(dp[-1][-1])\n```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03023",
        "submission1_id": "s815434524",
        "crp_content": "\n n = int(input())\n-print((n-3)*180)\n",
        "origin_generated_text": "\n```\n n = int(input())\n-print((n-3)*180)\n```\n "
    },
    {
        "user_id": "u382176416",
        "problem_id": "p03106",
        "submission1_id": "s130636296",
        "crp_content": "\n a, b, k = map(int, input().split())\n \n-n = 0\n cd_list = []\n \n if a < b:\n   n = a\n else:\n   n = b\n \n i = 1\n \n while i <= n:\n   if a % i == 0 and b % i == 0:\n     cd_list.append(i)\n   i += 1\n \n print(cd_list[k-1])\n   \n",
        "origin_generated_text": "\n```\n a, b, k = map(int, input().split())\n \n-n = 0\n cd_list = []\n \n if a < b:\n   n = a\n else:\n   n = b\n \n i = 1\n \n while i <= n:\n   if a % i == 0 and b % i == 0:\n     cd_list.append(i)\n   i += 1\n \n print(cd_list[k-1])\n   \n```\n "
    },
    {
        "user_id": "u314089899",
        "problem_id": "p03752",
        "submission1_id": "s718037797",
        "crp_content": "\n import itertools\n import copy\n \n def main():\n     N,K = map(int, input().split())\n     a_list = [int(e) for e in input().split()]\n \n     \n     \n     \n     \n \n     ans = 10**100\n \n     l = [i for i in range(0,N)]\n \n     for v in itertools.combinations(l,K): \n         copied_a_list = copy.copy(a_list)\n         \n         v = set(v)\n         left_max = copied_a_list[0]-1\n         temp_ans = 0\n         \n         for i in range(N): \n             if i in v:\n                 temp_ans += max(0,left_max+1 - copied_a_list[i])\n                 copied_a_list[i] = left_max+1\n             \n             if copied_a_list[i] > left_max:\n                 left_max = copied_a_list[i]\n         \n-        print(v,copied_a_list,temp_ans)\n         \n         if temp_ans < ans:\n             ans = temp_ans\n             \n     print(ans)\n \n main()\n",
        "origin_generated_text": "\n```\n import itertools\n import copy\n \n def main():\n     N,K = map(int, input().split())\n     a_list = [int(e) for e in input().split()]\n \n     \n     \n     \n     \n \n     ans = 10**100\n \n     l = [i for i in range(0,N)]\n \n     for v in itertools.combinations(l,K): \n         copied_a_list = copy.copy(a_list)\n         \n         v = set(v)\n         left_max = copied_a_list[0]-1\n         temp_ans = 0\n         \n         for i in range(N): \n             if i in v:\n                 temp_ans += max(0,left_max+1 - copied_a_list[i])\n                 copied_a_list[i] = left_max+1\n             \n             if copied_a_list[i] > left_max:\n                 left_max = copied_a_list[i]\n         \n-        print(v,copied_a_list,temp_ans)\n         \n         if temp_ans < ans:\n             ans = temp_ans\n             \n     print(ans)\n \n main()\n```\n "
    },
    {
        "user_id": "u952708174",
        "problem_id": "p03106",
        "submission1_id": "s642281618",
        "crp_content": "\n A, B, K = [int(i) for i in input().split()]\n tmp = []\n-for j in range(1, 101):\n     if A % j == 0 and B % j == 0:\n         tmp.append(j)\n print(tmp[K - 1])\n",
        "origin_generated_text": "\n```\n A, B, K = [int(i) for i in input().split()]\n tmp = []\n-for j in range(1, 101):\n     if A % j == 0 and B % j == 0:\n         tmp.append(j)\n print(tmp[K - 1])\n```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03626",
        "submission1_id": "s215901667",
        "crp_content": "\n n = int(input())\n s1 = input()\n s2 = input()\n cnt = 1\n i = 0\n-while i < n-1:\n     if i == 0:\n         if s1[i] == s2[i]:\n             cnt *= 3\n             s = 0\n         else:\n             cnt *= 6\n             i += 1\n             s = 1\n     elif s1[i] == s2[i]:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 1\n         s = 0\n     else:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 3\n         s = 1\n         i += 1\n     i += 1\n print(cnt)\n",
        "origin_generated_text": "\n```\n n = int(input())\n s1 = input()\n s2 = input()\n cnt = 1\n i = 0\n-while i < n-1:\n     if i == 0:\n         if s1[i] == s2[i]:\n             cnt *= 3\n             s = 0\n         else:\n             cnt *= 6\n             i += 1\n             s = 1\n     elif s1[i] == s2[i]:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 1\n         s = 0\n     else:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 3\n         s = 1\n         i += 1\n     i += 1\n print(cnt)\n```\n "
    },
    {
        "user_id": "u939198091",
        "problem_id": "p02718",
        "submission1_id": "s059049459",
        "crp_content": "\n import math\n \n def solve(n,m,lst):\n   min_vote = math.ceil(sum(lst)/4/m) - 1\n-  print(min_vote)\n-  print(sum(lst))\n   return lst[m-1] > min_vote\n \n if __name__ == \"__main__\":\n   _n, _m = map(int, input().split())\n   a_list = [int(i) for i in input().split()]\n   a_list = sorted(a_list,reverse=True)\n   if solve(_n,_m,a_list):\n     print('Yes')\n   else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n import math\n \n def solve(n,m,lst):\n   min_vote = math.ceil(sum(lst)/4/m) - 1\n-  print(min_vote)\n-  print(sum(lst))\n   return lst[m-1] > min_vote\n \n if __name__ == \"__main__\":\n   _n, _m = map(int, input().split())\n   a_list = [int(i) for i in input().split()]\n   a_list = sorted(a_list,reverse=True)\n   if solve(_n,_m,a_list):\n     print('Yes')\n   else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u591919975",
        "problem_id": "p02742",
        "submission1_id": "s641148969",
        "crp_content": "\n H,W=map(int,input().split())\n \n \n if (H*W)%2==0:\n-    print(int(H*W/2))\n \n else:\n-    print(int((H*W+1)/2))\n",
        "origin_generated_text": "\n```\n H,W=map(int,input().split())\n \n \n if (H*W)%2==0:\n-    print(int(H*W/2))\n \n else:\n-    print(int((H*W+1)/2))\n```\n "
    },
    {
        "user_id": "u941438707",
        "problem_id": "p03970",
        "submission1_id": "s271987540",
        "crp_content": "\n-s=input();print(sum(\"CODEFESTIVAL2016\"[i]==s[i] for i in range(16)))\n",
        "origin_generated_text": "\n```\n-s=input();print(sum(\"CODEFESTIVAL2016\"[i]==s[i] for i in range(16)))\n```\n "
    },
    {
        "user_id": "u698176039",
        "problem_id": "p03326",
        "submission1_id": "s341856305",
        "crp_content": "\n N,M = map(int,input().split())\n xyz = [list(map(int,input().split())) for _ in range(N)]\n \n ans = 0\n state = [0,0,0]\n for s in range(1<<3):\n     for i in range(3):\n         if s%2 == 1:\n             state[i] = 1\n         else:\n             state[i] = 0\n         s = s>>1\n     \n     \n     totalList = [0] * N\n     \n     for k in range(N):\n         t = 0\n         for i in range(3):\n             if state[i]:\n                 t -= xyz[k][i]\n             else:\n                 t += xyz[k][i]\n         totalList[k] = t\n         \n     totalList.sort(reverse = True)\n     cur = sum(totalList[:M])\n     ans = max(ans,cur)\n     cur = sum(totalList[M:])\n     ans = max(ans,cur)\n \n print(ans)\n     \n     \n",
        "origin_generated_text": "\n```\n N,M = map(int,input().split())\n xyz = [list(map(int,input().split())) for _ in range(N)]\n \n ans = 0\n state = [0,0,0]\n for s in range(1<<3):\n     for i in range(3):\n         if s%2 == 1:\n             state[i] = 1\n         else:\n             state[i] = 0\n         s = s>>1\n     \n     \n     totalList = [0] * N\n     \n     for k in range(N):\n         t = 0\n         for i in range(3):\n             if state[i]:\n                 t -= xyz[k][i]\n             else:\n                 t += xyz[k][i]\n         totalList[k] = t\n         \n     totalList.sort(reverse = True)\n     cur = sum(totalList[:M])\n     ans = max(ans,cur)\n     cur = sum(totalList[M:])\n     ans = max(ans,cur)\n \n print(ans)\n     \n     \n```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03959",
        "submission1_id": "s847033871",
        "crp_content": "\n N=int(input())\n T=list(map(int,input().split()))\n A=list(map(int,input().split()))\n if T[len(A)-1]!=A[0]:\n-    print(-1)\n else:\n         \n     t=[1]\n     for i in range(1,N):\n         if T[i-1]!=T[i]:\n             t.append(1)\n         else:\n             t.append(T[i])\n         if T[i-1]>T[i]:\n-            print(-1)\n             exit()\n     A=A[::-1]\n     a=[1]\n     for i in range(1,N):\n         if A[i-1]!=A[i]:\n             a.append(1)\n         else:\n             a.append(A[i])\n         if A[i-1]>A[i]:\n-            print(-1)\n             exit()\n     A=A[::-1]\n     a=a[::-1]\n     \n     ans=1\n     for i in range(N):\n         ans*=min(t[i],a[i])\n         ans%=(10**9+7)\n     print(ans)\n",
        "origin_generated_text": "\n```\n N=int(input())\n T=list(map(int,input().split()))\n A=list(map(int,input().split()))\n if T[len(A)-1]!=A[0]:\n-    print(-1)\n else:\n         \n     t=[1]\n     for i in range(1,N):\n         if T[i-1]!=T[i]:\n             t.append(1)\n         else:\n             t.append(T[i])\n         if T[i-1]>T[i]:\n-            print(-1)\n             exit()\n     A=A[::-1]\n     a=[1]\n     for i in range(1,N):\n         if A[i-1]!=A[i]:\n             a.append(1)\n         else:\n             a.append(A[i])\n         if A[i-1]>A[i]:\n-            print(-1)\n             exit()\n     A=A[::-1]\n     a=a[::-1]\n     \n     ans=1\n     for i in range(N):\n         ans*=min(t[i],a[i])\n         ans%=(10**9+7)\n     print(ans)\n```\n "
    },
    {
        "user_id": "u325149030",
        "problem_id": "p02665",
        "submission1_id": "s592655803",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n B = [0] *(N+1)\n B[0] = 1\n ans = 0\n for i in range(1, N+1):\n     B[i] = (B[i-1] - A[i-1])*2\n     if B[i] <= 0:\n         ans = -1\n         break\n if ans == 0:\n     check = 0\n     for j in range(N, 0, -1):\n         check += A[j]\n-        if check < B[j-1]:\n             ans += check\n         else:\n             last = j\n             for k in range(last+1):\n                 ans += B[k]\n             break\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n B = [0] *(N+1)\n B[0] = 1\n ans = 0\n for i in range(1, N+1):\n     B[i] = (B[i-1] - A[i-1])*2\n     if B[i] <= 0:\n         ans = -1\n         break\n if ans == 0:\n     check = 0\n     for j in range(N, 0, -1):\n         check += A[j]\n-        if check < B[j-1]:\n             ans += check\n         else:\n             last = j\n             for k in range(last+1):\n                 ans += B[k]\n             break\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u727787724",
        "problem_id": "p03546",
        "submission1_id": "s515761398",
        "crp_content": "\n h,w=map(int,input().split())\n c=[]\n for i in range(10):\n \tc.append(list(map(int,input().split())))\n a=[]\n ans=0\n for i in range(h):\n \ta.append(list(map(int,input().split())))\n for i in range(10):\n \tfor j in range(10):\n \t\tfor k in range(10):\n \t\t\tc[i][j]=min(c[i][j],c[i][k]+c[k][j])\n for j in range(h):\n \tfor k in range(w):\n-\t\tif a[j][k]==-1 or a[j][k]==1:\n \t\t\tcontinue\n \t\telse:\n \t\t\tans+=c[a[j][k]][1]\n print(ans)\n \t\t\t\t\t\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n c=[]\n for i in range(10):\n \tc.append(list(map(int,input().split())))\n a=[]\n ans=0\n for i in range(h):\n \ta.append(list(map(int,input().split())))\n for i in range(10):\n \tfor j in range(10):\n \t\tfor k in range(10):\n \t\t\tc[i][j]=min(c[i][j],c[i][k]+c[k][j])\n for j in range(h):\n \tfor k in range(w):\n-\t\tif a[j][k]==-1 or a[j][k]==1:\n \t\t\tcontinue\n \t\telse:\n \t\t\tans+=c[a[j][k]][1]\n print(ans)\n \t\t\t\t\t\n```\n "
    },
    {
        "user_id": "u283869437",
        "problem_id": "p03972",
        "submission1_id": "s815429233",
        "crp_content": "\n W,H=map(int,input().split())\n-p=sorted(int(input())for _ in'_'*W)\n-p+=10**1000,\n-q=sorted(int(input())for _ in'_'*H)\n-q+=10**1000,\n z=i=j=0\n h,w=H+1,W+1\n while i<W or j<H:\n \tif h*p[i]<w*q[j]:\n \t\tz+=h*p[i]\n \t\ti+=1\n \t\tw-=1\n \telse:\n \t\tz+=w*q[j]\n \t\tj+=1\n \t\th-=1\n print(z)\n \n",
        "origin_generated_text": "\n```\n W,H=map(int,input().split())\n-p=sorted(int(input())for _ in'_'*W)\n-p+=10**1000,\n-q=sorted(int(input())for _ in'_'*H)\n-q+=10**1000,\n z=i=j=0\n h,w=H+1,W+1\n while i<W or j<H:\n \tif h*p[i]<w*q[j]:\n \t\tz+=h*p[i]\n \t\ti+=1\n \t\tw-=1\n \telse:\n \t\tz+=w*q[j]\n \t\tj+=1\n \t\th-=1\n print(z)\n \n```\n "
    },
    {
        "user_id": "u587213169",
        "problem_id": "p03416",
        "submission1_id": "s734891014",
        "crp_content": "\n a, b =map(int, input().split())\n count=0\n-for i in range(a+1,b+1):\n     m = list(str(i))\n     if m[0]==m[3]:\n         if m[1]==m[2]:\n             count+=1\n print(count)\n",
        "origin_generated_text": "\n```\n a, b =map(int, input().split())\n count=0\n-for i in range(a+1,b+1):\n     m = list(str(i))\n     if m[0]==m[3]:\n         if m[1]==m[2]:\n             count+=1\n print(count)\n```\n "
    },
    {
        "user_id": "u118642796",
        "problem_id": "p03568",
        "submission1_id": "s635241837",
        "crp_content": "\n N = int(input())\n A = [int(i) for i in input().split()]\n \n-ans = 2**N\n-tmp = 1\n for a in A:\n   if a%2==0:\n-    tmp *= 2\n-print(ans - tmp)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = [int(i) for i in input().split()]\n \n-ans = 2**N\n-tmp = 1\n for a in A:\n   if a%2==0:\n-    tmp *= 2\n-print(ans - tmp)\n```\n "
    },
    {
        "user_id": "u093041722",
        "problem_id": "p02727",
        "submission1_id": "s834608265",
        "crp_content": "\n from collections import deque\n X,Y,A,B,C = (int(x) for x in input().split())\n p = [[int(x), 'r'] for x in input().split()]\n q = [[int(x), 'g'] for x in input().split()]\n r = [[int(x), 'c'] for x in input().split()]\n pqr = p + q + r\n pqr.sort(reverse=True)\n d = deque(pqr)\n rem = X + Y\n picked = 0\n ans = 0\n while rem > picked:\n     pop = d.popleft()\n     if pop[1] == 'r':\n         if X > 0:\n             X -= 1\n             ans += pop[0]\n             picked += 1\n     elif pop[1] == 'g':\n-        if Y > 0:\n             Y -= 1\n             ans += pop[0]\n             picked += 1\n     else:\n         rem -= 1\n         ans += pop[0]\n         picked += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n from collections import deque\n X,Y,A,B,C = (int(x) for x in input().split())\n p = [[int(x), 'r'] for x in input().split()]\n q = [[int(x), 'g'] for x in input().split()]\n r = [[int(x), 'c'] for x in input().split()]\n pqr = p + q + r\n pqr.sort(reverse=True)\n d = deque(pqr)\n rem = X + Y\n picked = 0\n ans = 0\n while rem > picked:\n     pop = d.popleft()\n     if pop[1] == 'r':\n         if X > 0:\n             X -= 1\n             ans += pop[0]\n             picked += 1\n     elif pop[1] == 'g':\n-        if Y > 0:\n             Y -= 1\n             ans += pop[0]\n             picked += 1\n     else:\n         rem -= 1\n         ans += pop[0]\n         picked += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u646130340",
        "problem_id": "p03079",
        "submission1_id": "s701496519",
        "crp_content": "\n A, B, C = map(int, input().split())\n if A == B and B == C:\n-    print('YES')\n else:\n-    print('NO')\n \n",
        "origin_generated_text": "\n```\n A, B, C = map(int, input().split())\n if A == B and B == C:\n-    print('YES')\n else:\n-    print('NO')\n \n```\n "
    },
    {
        "user_id": "u211160392",
        "problem_id": "p03272",
        "submission1_id": "s985405982",
        "crp_content": "\n N,i = map(int,input().split())\n-print(N-1+1)\n",
        "origin_generated_text": "\n```\n N,i = map(int,input().split())\n-print(N-1+1)\n```\n "
    },
    {
        "user_id": "u813450984",
        "problem_id": "p03274",
        "submission1_id": "s405404508",
        "crp_content": "\n n, k = map(int, input().split())\n c = list(map(int, input().split()))\n ans = float('Inf')\n for i in range(n-k+1):\n   l, r = abs(c[i]), abs(c[i+k-1])\n   \n   if c[i] < 0 and r > 0:\n     ans = min(ans, min(l, r) * 2 + max(l, r))\n   else:\n     ans = min(ans, max(l, r))\n print(ans)\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n c = list(map(int, input().split()))\n ans = float('Inf')\n for i in range(n-k+1):\n   l, r = abs(c[i]), abs(c[i+k-1])\n   \n   if c[i] < 0 and r > 0:\n     ans = min(ans, min(l, r) * 2 + max(l, r))\n   else:\n     ans = min(ans, max(l, r))\n print(ans)\n```\n "
    },
    {
        "user_id": "u941407962",
        "problem_id": "p03343",
        "submission1_id": "s328872858",
        "crp_content": "\n N, K, Q = map(int, input().split())\n X = list(map(int, input().split()))\n Y = sorted(X)\n \n \n \n \n \n r = Y[Q-1] - Y[0]\n for y in Y[1:]:\n     tmp = []\n     tmp2 = []\n     for x in X:\n         if x < y:\n             tmp.sort()\n             tn = len(tmp)\n             if tn-K+1 > 0:\n                 tmp2 += tmp[:tn-K+1]\n             tmp = []\n             continue\n         tmp.append(x)\n     tn = len(tmp)\n     if tn-K+1 > 0:\n         tmp2 += tmp[:tn-K+1]\n     tmp2.sort()\n     if len(tmp2) >= Q:\n         r = min(r, tmp2[Q-1] - y)\n print(r)\n \n",
        "origin_generated_text": "\n```\n N, K, Q = map(int, input().split())\n X = list(map(int, input().split()))\n Y = sorted(X)\n \n \n \n \n \n r = Y[Q-1] - Y[0]\n for y in Y[1:]:\n     tmp = []\n     tmp2 = []\n     for x in X:\n         if x < y:\n             tmp.sort()\n             tn = len(tmp)\n             if tn-K+1 > 0:\n                 tmp2 += tmp[:tn-K+1]\n             tmp = []\n             continue\n         tmp.append(x)\n     tn = len(tmp)\n     if tn-K+1 > 0:\n         tmp2 += tmp[:tn-K+1]\n     tmp2.sort()\n     if len(tmp2) >= Q:\n         r = min(r, tmp2[Q-1] - y)\n print(r)\n \n```\n "
    },
    {
        "user_id": "u093861603",
        "problem_id": "p02660",
        "submission1_id": "s232907283",
        "crp_content": "\n N=int(input())\n li=[0]*(10**6+1)\n flag=False\n for i in range(2,int(N**0.5)+1):\n   while N%i==0:\n     flag=True\n     N/=i\n     li[i]+=1\n if flag==False:\n   print(1)\n   exit()\n ans=0\n for count in li:\n   use=1\n   while count-use>=0:\n     ans+=1\n     count-=use\n     use+=1\n print(ans)\n     \n     \n",
        "origin_generated_text": "\n```\n N=int(input())\n li=[0]*(10**6+1)\n flag=False\n for i in range(2,int(N**0.5)+1):\n   while N%i==0:\n     flag=True\n     N/=i\n     li[i]+=1\n if flag==False:\n   print(1)\n   exit()\n ans=0\n for count in li:\n   use=1\n   while count-use>=0:\n     ans+=1\n     count-=use\n     use+=1\n print(ans)\n     \n     \n```\n "
    },
    {
        "user_id": "u318233626",
        "problem_id": "p02640",
        "submission1_id": "s109942094",
        "crp_content": "\n x, y = map(int, input().split())\n \n tmp = 4 * x - y\n f = 0\n if tmp % 2 == 0 and tmp >= 0:\n     crane = tmp % 2\n     turtle = x - crane\n     if x >= 0:\n         f = 1\n     else:\n         pass\n else:\n     pass\n \n if f == 1:\n     print('Yes')\n else: \n     print('No')\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n \n tmp = 4 * x - y\n f = 0\n if tmp % 2 == 0 and tmp >= 0:\n     crane = tmp % 2\n     turtle = x - crane\n     if x >= 0:\n         f = 1\n     else:\n         pass\n else:\n     pass\n \n if f == 1:\n     print('Yes')\n else: \n     print('No')\n```\n "
    },
    {
        "user_id": "u499381410",
        "problem_id": "p04017",
        "submission1_id": "s627752703",
        "crp_content": "\n from collections import defaultdict, deque, Counter\n from heapq import heappush, heappop, heapify\n import math\n import bisect\n import random\n from itertools import permutations, accumulate, combinations, product\n import sys\n import string\n from bisect import bisect_left, bisect_right\n from math import factorial, ceil, floor\n from operator import mul\n from functools import reduce\n from operator import mul\n \n \n sys.setrecursionlimit(2147483647)\n INF = 10 ** 20\n def LI(): return list(map(int, sys.stdin.buffer.readline().split()))\n def I(): return int(sys.stdin.buffer.readline())\n def LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\n def S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def LSR(n): return [LS() for i in range(n)]\n def SRL(n): return [list(S()) for i in range(n)]\n def MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n mod = 1000000007\n \n n = I()\n X = LI()\n l = I()\n log_n = (n - 1).bit_length()\n doubling = [[n] * n for _ in range(log_n)]\n for i in range(n - 1):\n     doubling[0][i] = bisect_right(X, X[i] + l) - 1\n \n for j in range(1, log_n):\n     for k in range(n):\n         if doubling[j - 1][k] == n:\n             continue\n         doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\n q = I()\n-print(doubling)\n for _ in range(q):\n     a, b = LI()\n     if a > b:\n         a, b = b, a\n     a -= 1\n     b -= 1\n     ans = 0\n     for m in range(log_n - 1, -1, -1):\n         if doubling[m][a] <= b:\n             a = doubling[m][a]\n             ans += 2 ** m\n     print(ans)\n \n \n \n \n \n \n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict, deque, Counter\n from heapq import heappush, heappop, heapify\n import math\n import bisect\n import random\n from itertools import permutations, accumulate, combinations, product\n import sys\n import string\n from bisect import bisect_left, bisect_right\n from math import factorial, ceil, floor\n from operator import mul\n from functools import reduce\n from operator import mul\n \n \n sys.setrecursionlimit(2147483647)\n INF = 10 ** 20\n def LI(): return list(map(int, sys.stdin.buffer.readline().split()))\n def I(): return int(sys.stdin.buffer.readline())\n def LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\n def S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def LSR(n): return [LS() for i in range(n)]\n def SRL(n): return [list(S()) for i in range(n)]\n def MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n mod = 1000000007\n \n n = I()\n X = LI()\n l = I()\n log_n = (n - 1).bit_length()\n doubling = [[n] * n for _ in range(log_n)]\n for i in range(n - 1):\n     doubling[0][i] = bisect_right(X, X[i] + l) - 1\n \n for j in range(1, log_n):\n     for k in range(n):\n         if doubling[j - 1][k] == n:\n             continue\n         doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\n q = I()\n-print(doubling)\n for _ in range(q):\n     a, b = LI()\n     if a > b:\n         a, b = b, a\n     a -= 1\n     b -= 1\n     ans = 0\n     for m in range(log_n - 1, -1, -1):\n         if doubling[m][a] <= b:\n             a = doubling[m][a]\n             ans += 2 ** m\n     print(ans)\n \n \n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u958693198",
        "problem_id": "p02854",
        "submission1_id": "s501688497",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n \n \n sum = 0\n for i in range(n):\n     sum += a[i]\n \n sum2 = 0\n for i in range(n):\n     sum2 += a[i]\n     x = sum2*2 - sum\n     if x >= 0:\n         y = sum - sum2*2 - a[i]\n         if x >= y:\n             print(x)\n             break\n         else:\n-            print(y)\n             break\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n \n \n sum = 0\n for i in range(n):\n     sum += a[i]\n \n sum2 = 0\n for i in range(n):\n     sum2 += a[i]\n     x = sum2*2 - sum\n     if x >= 0:\n         y = sum - sum2*2 - a[i]\n         if x >= y:\n             print(x)\n             break\n         else:\n-            print(y)\n             break\n \n```\n "
    },
    {
        "user_id": "u258391277",
        "problem_id": "p02912",
        "submission1_id": "s647494831",
        "crp_content": "\n def main():\n     n, m = map(int, input().split())\n     a_list = list(map(int, input().split()))\n \n     for _ in range(m):\n         a_list[a_list.index(max(a_list))] /= 2\n \n-    print(sum(a_list))\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     n, m = map(int, input().split())\n     a_list = list(map(int, input().split()))\n \n     for _ in range(m):\n         a_list[a_list.index(max(a_list))] /= 2\n \n-    print(sum(a_list))\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u774845108",
        "problem_id": "p03079",
        "submission1_id": "s899577279",
        "crp_content": "\n from sys import stdin\n \n def ria(sep = ''):\n     if sep == '' :\n         return list(map(int, input().split())) \n     else: return list(map(int, input().split(sep)))\n def rsa(sep = ''):\n     if sep == '' :\n         return input().split() \n     else: return input().split(sep)\n def ri(): return int(input())\n def rd(): return float(input())\n def rs(): return input()\n \n \n \n A, B, C = map(int, input().split())\n-print(\"Yes\" if (A == B and B == C) else \"NO\")\n \n \n",
        "origin_generated_text": "\n```\n from sys import stdin\n \n def ria(sep = ''):\n     if sep == '' :\n         return list(map(int, input().split())) \n     else: return list(map(int, input().split(sep)))\n def rsa(sep = ''):\n     if sep == '' :\n         return input().split() \n     else: return input().split(sep)\n def ri(): return int(input())\n def rd(): return float(input())\n def rs(): return input()\n \n \n \n A, B, C = map(int, input().split())\n-print(\"Yes\" if (A == B and B == C) else \"NO\")\n \n \n```\n "
    },
    {
        "user_id": "u602252807",
        "problem_id": "p02854",
        "submission1_id": "s952566595",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n \n s = sum(a)\n \n left = 0\n right = 0\n for i in range(n):\n     left += a[i]\n     if left >= s/2:\n         right = s - left\n         break\n     \n-if left == s/2:\n     print(0)\n else:\n     print(abs(left-right))\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n \n s = sum(a)\n \n left = 0\n right = 0\n for i in range(n):\n     left += a[i]\n     if left >= s/2:\n         right = s - left\n         break\n     \n-if left == s/2:\n     print(0)\n else:\n     print(abs(left-right))\n```\n "
    },
    {
        "user_id": "u595905528",
        "problem_id": "p02580",
        "submission1_id": "s557024985",
        "crp_content": "\n import sys\n import bisect\n import itertools\n import collections\n import fractions\n import heapq\n import math\n from operator import mul\n from functools import reduce\n from functools import lru_cache\n \n \n def solve():\n     readline = sys.stdin.buffer.readline\n     input = readline\n     mod = 10 ** 9 + 7\n     H, W, M = map(int, input().split())\n     Hlist = [0] * H\n     Wlist = [0] * W\n     hw = []\n \n     for _ in range(M):\n         h, w = map(int, input().split())\n         Hlist[h-1] += 1\n         Wlist[w-1] += 1\n         hw.append([h, w])\n \n \n     hmax = [i for i, x in enumerate(Hlist) if x == max(Hlist)]\n     wmax = [i for i, x in enumerate(Wlist) if x == max(Wlist)]\n     hmaxset = set(hmax)\n     wmaxset = set(wmax)\n \n     flag = False\n     for hh in hw:\n         h = hh[0] - 1\n         w = hh[1] - 1\n         if not (h in hmaxset and w in wmaxset):\n             flag = True\n             break\n \n \n     if flag:\n         print(Hlist[h] + Wlist[w])\n     else:\n-        print(Hlist[h] + Wlist[w] - 1)\n \n \n \n \n \n if __name__ == '__main__':\n     solve()\n",
        "origin_generated_text": "\n```\n import sys\n import bisect\n import itertools\n import collections\n import fractions\n import heapq\n import math\n from operator import mul\n from functools import reduce\n from functools import lru_cache\n \n \n def solve():\n     readline = sys.stdin.buffer.readline\n     input = readline\n     mod = 10 ** 9 + 7\n     H, W, M = map(int, input().split())\n     Hlist = [0] * H\n     Wlist = [0] * W\n     hw = []\n \n     for _ in range(M):\n         h, w = map(int, input().split())\n         Hlist[h-1] += 1\n         Wlist[w-1] += 1\n         hw.append([h, w])\n \n \n     hmax = [i for i, x in enumerate(Hlist) if x == max(Hlist)]\n     wmax = [i for i, x in enumerate(Wlist) if x == max(Wlist)]\n     hmaxset = set(hmax)\n     wmaxset = set(wmax)\n \n     flag = False\n     for hh in hw:\n         h = hh[0] - 1\n         w = hh[1] - 1\n         if not (h in hmaxset and w in wmaxset):\n             flag = True\n             break\n \n \n     if flag:\n         print(Hlist[h] + Wlist[w])\n     else:\n-        print(Hlist[h] + Wlist[w] - 1)\n \n \n \n \n \n if __name__ == '__main__':\n     solve()\n```\n "
    },
    {
        "user_id": "u533713111",
        "problem_id": "p02886",
        "submission1_id": "s673333456",
        "crp_content": "\n N=int(input())\n d=list(map(int, input().split()))\n-a=(sum(d))**2\n \n def square(list):\n     return [i ** 2 for i in list]\n \n b=sum(square(d))\n result=a-b\n print(result)\n",
        "origin_generated_text": "\n```\n N=int(input())\n d=list(map(int, input().split()))\n-a=(sum(d))**2\n \n def square(list):\n     return [i ** 2 for i in list]\n \n b=sum(square(d))\n result=a-b\n print(result)\n```\n "
    },
    {
        "user_id": "u047023156",
        "problem_id": "p02727",
        "submission1_id": "s508216069",
        "crp_content": "\n import sys\n from collections import Counter\n input = sys.stdin.readline\n \n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort()\n q.sort()\n r.sort()\n \n if A > X:\n     p = p[-X:]\n if B > Y:\n-    q = q[-X:]\n \n p.extend(q)\n p.extend(r)\n \n p.sort()\n \n print(sum(p[-(X+Y):]))\n",
        "origin_generated_text": "\n```\n import sys\n from collections import Counter\n input = sys.stdin.readline\n \n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort()\n q.sort()\n r.sort()\n \n if A > X:\n     p = p[-X:]\n if B > Y:\n-    q = q[-X:]\n \n p.extend(q)\n p.extend(r)\n \n p.sort()\n \n print(sum(p[-(X+Y):]))\n```\n "
    },
    {
        "user_id": "u112002050",
        "problem_id": "p03200",
        "submission1_id": "s894886678",
        "crp_content": "\n s = list(input())\n b_counts = []\n cnt = 0\n for i in range(len(s)):\n     if s[i] == \"B\":\n         cnt += 1\n     if s[i] == \"W\":\n-        cnt += sum(b_counts)\n         b_counts.append(cnt)\n         cnt = 0\n print(sum(b_counts))\n \n",
        "origin_generated_text": "\n```\n s = list(input())\n b_counts = []\n cnt = 0\n for i in range(len(s)):\n     if s[i] == \"B\":\n         cnt += 1\n     if s[i] == \"W\":\n-        cnt += sum(b_counts)\n         b_counts.append(cnt)\n         cnt = 0\n print(sum(b_counts))\n \n```\n "
    },
    {
        "user_id": "u686036872",
        "problem_id": "p03087",
        "submission1_id": "s285275553",
        "crp_content": "\n N, Q = map(int, input().split())\n S=list(input())\n list=[]\n-for i in range(0, N-1):\n     if S[i] == \"A\" and S[i+1] == \"C\":\n         list.append(i)\n count=0\n for i in range(Q):\n     l, r = map(int, input().split())\n     for j in list:\n-        if l-1 <= j < r-1:\n             count+=1\n         else:\n             count+=0\n     print(count)\n",
        "origin_generated_text": "\n```\n N, Q = map(int, input().split())\n S=list(input())\n list=[]\n-for i in range(0, N-1):\n     if S[i] == \"A\" and S[i+1] == \"C\":\n         list.append(i)\n count=0\n for i in range(Q):\n     l, r = map(int, input().split())\n     for j in list:\n-        if l-1 <= j < r-1:\n             count+=1\n         else:\n             count+=0\n     print(count)\n```\n "
    },
    {
        "user_id": "u831971779",
        "problem_id": "p02407",
        "submission1_id": "s086355108",
        "crp_content": "\n n = int(input())\n-print(\" \".join(input().split())[::-1])\n",
        "origin_generated_text": "\n```\n n = int(input())\n-print(\" \".join(input().split())[::-1])\n```\n "
    },
    {
        "user_id": "u933096856",
        "problem_id": "p02469",
        "submission1_id": "s096942121",
        "crp_content": "\n def gcd(x,y):\n     p=min(x,y)\n     q=max(x,y)\n     while True:\n             m=q%p\n             if m==0:\n \n                 break\n             p=m\n             q=p\n     g=p\n \n \n \n \n     return g\n \n c=0\n n=int(input())\n a=sorted(set(list(map(int, input().split()))))\n b=[]\n while len(a) > 1:\n     n=len(a)\n     for i in range(n-1):\n         p=a[i]\n         q=a[i+1]\n         g=gcd(p,q)\n         r=a[i]*a[i+1]\n         b.append(r)\n     a=sorted(b)\n     b=[]\n-print(*a)\n",
        "origin_generated_text": "\n```\n def gcd(x,y):\n     p=min(x,y)\n     q=max(x,y)\n     while True:\n             m=q%p\n             if m==0:\n \n                 break\n             p=m\n             q=p\n     g=p\n \n \n \n \n     return g\n \n c=0\n n=int(input())\n a=sorted(set(list(map(int, input().split()))))\n b=[]\n while len(a) > 1:\n     n=len(a)\n     for i in range(n-1):\n         p=a[i]\n         q=a[i+1]\n         g=gcd(p,q)\n         r=a[i]*a[i+1]\n         b.append(r)\n     a=sorted(b)\n     b=[]\n-print(*a)\n```\n "
    },
    {
        "user_id": "u143565147",
        "problem_id": "p02556",
        "submission1_id": "s152646556",
        "crp_content": "\n def f(x, y):\n     return x-y, x+y\n \n \n n = int(input())\n p = [list(map(int, input().split())) for i in range(n)]\n \n max_x = 0\n min_x = 2000000000\n max_y = 0\n min_y = 2000000000\n for xi, yi in p:\n     x_, y_ = f(xi, yi)\n     max_x = max(max_x, x_)\n     min_x = min(min_x, x_)\n     max_y = max(max_y, y_)\n     min_y = min(min_y, y_)\n \n-print(max(max_x - min_x, max_y - min_y))\n",
        "origin_generated_text": "\n```\n def f(x, y):\n     return x-y, x+y\n \n \n n = int(input())\n p = [list(map(int, input().split())) for i in range(n)]\n \n max_x = 0\n min_x = 2000000000\n max_y = 0\n min_y = 2000000000\n for xi, yi in p:\n     x_, y_ = f(xi, yi)\n     max_x = max(max_x, x_)\n     min_x = min(min_x, x_)\n     max_y = max(max_y, y_)\n     min_y = min(min_y, y_)\n \n-print(max(max_x - min_x, max_y - min_y))\n```\n "
    },
    {
        "user_id": "u094191970",
        "problem_id": "p03992",
        "submission1_id": "s730619305",
        "crp_content": "\n s=input()\n-print(s[:4]+''+s[4:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4]+''+s[4:])\n```\n "
    },
    {
        "user_id": "u035901835",
        "problem_id": "p02954",
        "submission1_id": "s597225914",
        "crp_content": "\n S=input()\n \n num={}\n for i in range(len(S)):\n     num[i]=0\n \n for i in range(len(S)):\n     if S[i]=='L' and S[i-1]=='R':\n         j=1\n         count=1\n         while(1):\n             if i-j<0:\n                 break\n             if S[i-j]=='R':\n                 if j%2==0:\n                     count+=1\n             else:\n                 break\n             j+=1\n         num[i]=count\n \n for i in range(len(S)):\n     if S[i]=='R' and S[i+1]=='L':\n         j=1\n         count=1\n         while(1):\n             if i+j>len(S)-1:\n                 break\n             if S[i+j]=='L':\n                 if j%2==0:\n                     count+=1\n             else:\n                 break\n             j+=1\n         num[i]=count\n \n \n for i in range(len(S)):\n     print(num[i],end=' ')\n \n print('')\n",
        "origin_generated_text": "\n```\n S=input()\n \n num={}\n for i in range(len(S)):\n     num[i]=0\n \n for i in range(len(S)):\n     if S[i]=='L' and S[i-1]=='R':\n         j=1\n         count=1\n         while(1):\n             if i-j<0:\n                 break\n             if S[i-j]=='R':\n                 if j%2==0:\n                     count+=1\n             else:\n                 break\n             j+=1\n         num[i]=count\n \n for i in range(len(S)):\n     if S[i]=='R' and S[i+1]=='L':\n         j=1\n         count=1\n         while(1):\n             if i+j>len(S)-1:\n                 break\n             if S[i+j]=='L':\n                 if j%2==0:\n                     count+=1\n             else:\n                 break\n             j+=1\n         num[i]=count\n \n \n for i in range(len(S)):\n     print(num[i],end=' ')\n \n print('')\n```\n "
    },
    {
        "user_id": "u931118906",
        "problem_id": "p02912",
        "submission1_id": "s904560377",
        "crp_content": "\n import sys\n import heapq\n input=sys.stdin.readline\n n,m=map(int,input().split())\n a=list(map(lambda x:int(x)*(-1),input().split()))\n heapq.heapify(a)\n for _ in range(m):\n-    heapq.heappush(a,heapq.heappop(a)/2)\n print(int(sum(a)*(-1)))\n",
        "origin_generated_text": "\n```\n import sys\n import heapq\n input=sys.stdin.readline\n n,m=map(int,input().split())\n a=list(map(lambda x:int(x)*(-1),input().split()))\n heapq.heapify(a)\n for _ in range(m):\n-    heapq.heappush(a,heapq.heappop(a)/2)\n print(int(sum(a)*(-1)))\n```\n "
    },
    {
        "user_id": "u426108351",
        "problem_id": "p03036",
        "submission1_id": "s169115448",
        "crp_content": "\n r, D, x2000 = map(int, input().split())\n for i in range(10):\n-  x2000 = r*x2000+D\n   print(x2000)\n",
        "origin_generated_text": "\n```\n r, D, x2000 = map(int, input().split())\n for i in range(10):\n-  x2000 = r*x2000+D\n   print(x2000)\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s965682950",
        "crp_content": "\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b -1) \n dgt[n] = l-sum(dgt)\n \n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0])\n",
        "origin_generated_text": "\n```\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b -1) \n dgt[n] = l-sum(dgt)\n \n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0])\n```\n "
    },
    {
        "user_id": "u567434159",
        "problem_id": "p03965",
        "submission1_id": "s458613368",
        "crp_content": "\n s = input()\n score = 0\n toUse = 0\n for it in s:\n   if it == 'g' and toUse > 0:\n     toUse -= 1\n     score += 1\n     continue\n   if it == 'g':\n     continue\n   if toUse > 0:\n     toUse -= 1\n   else:\n     score -=1\n     \n print(score)\n \n",
        "origin_generated_text": "\n```\n s = input()\n score = 0\n toUse = 0\n for it in s:\n   if it == 'g' and toUse > 0:\n     toUse -= 1\n     score += 1\n     continue\n   if it == 'g':\n     continue\n   if toUse > 0:\n     toUse -= 1\n   else:\n     score -=1\n     \n print(score)\n \n```\n "
    },
    {
        "user_id": "u108617242",
        "problem_id": "p03970",
        "submission1_id": "s789574930",
        "crp_content": "\n s = input()\n count = 0;\n anser = \"CODEFESTIVAL2016\"\n-for i in range(0,15):\n \tif not s[i] == anser[i]:\n \t\tcount+=1\n print(count)\n \n",
        "origin_generated_text": "\n```\n s = input()\n count = 0;\n anser = \"CODEFESTIVAL2016\"\n-for i in range(0,15):\n \tif not s[i] == anser[i]:\n \t\tcount+=1\n print(count)\n \n```\n "
    },
    {
        "user_id": "u328067859",
        "problem_id": "p02767",
        "submission1_id": "s570874688",
        "crp_content": "\n N = int(input())\n X = list(map(int, input().split()))\n sum = []\n-for n in range(1,N+1):\n     s = 0\n     for x in X:\n         s = s + ((x-n)*(x-n))\n     sum.append(s)\n \n print(min(sum))\n",
        "origin_generated_text": "\n```\n N = int(input())\n X = list(map(int, input().split()))\n sum = []\n-for n in range(1,N+1):\n     s = 0\n     for x in X:\n         s = s + ((x-n)*(x-n))\n     sum.append(s)\n \n print(min(sum))\n```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s336424715",
        "crp_content": "\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for v,w in zip(values,weights):\n         for c in range(w, capacity+1):\n             work[c]=max(work[c],work[c-w]+v)\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))+[1]\n     prices_b=list(map(int,inp().split()))+[1]\n     \n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n-    print(valA)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n     return '{}'.format(valB)\n print(sol())\n",
        "origin_generated_text": "\n```\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for v,w in zip(values,weights):\n         for c in range(w, capacity+1):\n             work[c]=max(work[c],work[c-w]+v)\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))+[1]\n     prices_b=list(map(int,inp().split()))+[1]\n     \n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n-    print(valA)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n     return '{}'.format(valB)\n print(sol())\n```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p03477",
        "submission1_id": "s676517690",
        "crp_content": "\n A, B, C, D = map(int, input().split())\n if A+B == C+D:\n   print(\"Balanced\")\n if A+B > C+D:\n   print(\"Left\")\n-if A+B < C+D:\n   print(\"Balanced\")\n-\n",
        "origin_generated_text": "\n```\n A, B, C, D = map(int, input().split())\n if A+B == C+D:\n   print(\"Balanced\")\n if A+B > C+D:\n   print(\"Left\")\n-if A+B < C+D:\n   print(\"Balanced\")\n-\n```\n "
    },
    {
        "user_id": "u331464808",
        "problem_id": "p03992",
        "submission1_id": "s157893759",
        "crp_content": "\n s = input()\n-print(s[:3]+' '+s[4:])\n",
        "origin_generated_text": "\n```\n s = input()\n-print(s[:3]+' '+s[4:])\n```\n "
    },
    {
        "user_id": "u927282564",
        "problem_id": "p02665",
        "submission1_id": "s495879611",
        "crp_content": "\n N=int(input())\n A=list(map(int,input().split()))\n temp=1\n summ=0\n cont=0\n templist=[1]\n for i in range(N+1):\n   \n   if A[i]<temp:\n     if i<N:\n       summ+=temp\n       temp=2*(temp-A[i])\n       templist.append(temp)\n     elif i==N:\n       summ+=temp\n       cont+=1\n   elif A[i]==temp:\n     if i==N:\n       summ+=temp\n       \n       cont+=1\n     else:\n       print(\"-1\")\n       break\n   else:\n     print(\"-1\")\n     break\n     \n if cont==1:\n   if A[N]==temp:\n   \tprint(summ)\n   else:\n     \n     \n     comp=A[-1]\n     for i in range(N):\n       summ-=(templist[-(i+1)]-comp)\n       comp+=A[-(i+2)]\n       \n       \n       \n       if comp>templist[-(i+2)]:\n         print(summ)\n         break\n \n \n",
        "origin_generated_text": "\n```\n N=int(input())\n A=list(map(int,input().split()))\n temp=1\n summ=0\n cont=0\n templist=[1]\n for i in range(N+1):\n   \n   if A[i]<temp:\n     if i<N:\n       summ+=temp\n       temp=2*(temp-A[i])\n       templist.append(temp)\n     elif i==N:\n       summ+=temp\n       cont+=1\n   elif A[i]==temp:\n     if i==N:\n       summ+=temp\n       \n       cont+=1\n     else:\n       print(\"-1\")\n       break\n   else:\n     print(\"-1\")\n     break\n     \n if cont==1:\n   if A[N]==temp:\n   \tprint(summ)\n   else:\n     \n     \n     comp=A[-1]\n     for i in range(N):\n       summ-=(templist[-(i+1)]-comp)\n       comp+=A[-(i+2)]\n       \n       \n       \n       if comp>templist[-(i+2)]:\n         print(summ)\n         break\n \n \n```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03752",
        "submission1_id": "s441156214",
        "crp_content": "\n n,k = map(int,input().split())\n a = list(map(int,input().split()))\n ans = 10**11\n \n \n for i in range(2**(n-1)):\n   select = [0]\n   len_select = 1\n   for j in range(n-1):\n     if i >> j & 1 and len_select < k:\n       select.append(j+1)\n       len_select += 1\n   \n   \n   ok = 1\n   \n   for m in select:\n     for l in range(n):\n       if l in select: continue\n       if l < k and a[l] >= a[m]:\n         \n         ok = 0\n   if ok == 0 or len_select < k: continue\n   else:\n     ans_i = 0\n     pre_val = a[0]\n     for j in range(1,k):\n       \n       if pre_val >= a[select[j]]:\n         ans_i += pre_val+1 - a[select[j]]\n         pre_val += 1\n       else:\n         pre_val = a[select[j]]\n   ans = min(ans,ans_i)\n print(ans)\n",
        "origin_generated_text": "\n```\n n,k = map(int,input().split())\n a = list(map(int,input().split()))\n ans = 10**11\n \n \n for i in range(2**(n-1)):\n   select = [0]\n   len_select = 1\n   for j in range(n-1):\n     if i >> j & 1 and len_select < k:\n       select.append(j+1)\n       len_select += 1\n   \n   \n   ok = 1\n   \n   for m in select:\n     for l in range(n):\n       if l in select: continue\n       if l < k and a[l] >= a[m]:\n         \n         ok = 0\n   if ok == 0 or len_select < k: continue\n   else:\n     ans_i = 0\n     pre_val = a[0]\n     for j in range(1,k):\n       \n       if pre_val >= a[select[j]]:\n         ans_i += pre_val+1 - a[select[j]]\n         pre_val += 1\n       else:\n         pre_val = a[select[j]]\n   ans = min(ans,ans_i)\n print(ans)\n```\n "
    },
    {
        "user_id": "u552201227",
        "problem_id": "p03206",
        "submission1_id": "s486069755",
        "crp_content": "\n D = int(input())\n-print(\"Christmas\"+\"Eve\"*(25-D))\n",
        "origin_generated_text": "\n```\n D = int(input())\n-print(\"Christmas\"+\"Eve\"*(25-D))\n```\n "
    },
    {
        "user_id": "u661290476",
        "problem_id": "p00026",
        "submission1_id": "s956045492",
        "crp_content": "\n \n board=[[0]*10 for i in range(10)]\n ink=[[[0,0,0,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,0,1,0,0],[0,0,0,0,0]],\n [[0,0,0,0,0],[0,1,1,1,0],[0,1,1,1,0],[0,1,1,1,0],[0,0,0,0,0]],\n [[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]]]\n \n while True:\n     try:\n         x,y,s=map(int,input().split(\",\"))\n     except:\n         break\n     for i in range(5):\n         for j in range(5):\n             if 0<=i+y-2<=9 and 0<=j+x-2<=9:\n                 board[i+y-2][j+x-2]+=ink[s-1][i][j]\n \n flat=sum(board,[])\n print(flat.count(0))\n-print(flat.count(max(flat)))\n",
        "origin_generated_text": "\n```\n \n board=[[0]*10 for i in range(10)]\n ink=[[[0,0,0,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,0,1,0,0],[0,0,0,0,0]],\n [[0,0,0,0,0],[0,1,1,1,0],[0,1,1,1,0],[0,1,1,1,0],[0,0,0,0,0]],\n [[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]]]\n \n while True:\n     try:\n         x,y,s=map(int,input().split(\",\"))\n     except:\n         break\n     for i in range(5):\n         for j in range(5):\n             if 0<=i+y-2<=9 and 0<=j+x-2<=9:\n                 board[i+y-2][j+x-2]+=ink[s-1][i][j]\n \n flat=sum(board,[])\n print(flat.count(0))\n-print(flat.count(max(flat)))\n```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03079",
        "submission1_id": "s702976766",
        "crp_content": "\n A ,B ,C =map(int,input().split())\n if A==B and B==C:\n-     print('YES')\n else :\n-     print('NO')\n \n",
        "origin_generated_text": "\n```\n A ,B ,C =map(int,input().split())\n if A==B and B==C:\n-     print('YES')\n else :\n-     print('NO')\n \n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03318",
        "submission1_id": "s322035665",
        "crp_content": "\n def main():\n-    s=set()\n-    for digit in range(16):\n-        for i in range(1,1000):\n-            c=i*10**digit+int('9'*digit or 0)\n-            if c<10**15:\n-                s.add(c)\n-    c=sorted(s)\n-    for i,n in enumerate(c):\n-        sn=n/sum(map(int,str(n)))\n-        for m in c[i+1:i+10]:\n-            sm=m/sum(map(int,str(m)))\n-            if sm<sn:\n-                s.remove(n)\n-                break\n-    print(*sorted(s)[:int(input())],sep='\\n')\n main()\n",
        "origin_generated_text": "\n```\n def main():\n-    s=set()\n-    for digit in range(16):\n-        for i in range(1,1000):\n-            c=i*10**digit+int('9'*digit or 0)\n-            if c<10**15:\n-                s.add(c)\n-    c=sorted(s)\n-    for i,n in enumerate(c):\n-        sn=n/sum(map(int,str(n)))\n-        for m in c[i+1:i+10]:\n-            sm=m/sum(map(int,str(m)))\n-            if sm<sn:\n-                s.remove(n)\n-                break\n-    print(*sorted(s)[:int(input())],sep='\\n')\n main()\n```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s973777543",
        "crp_content": "\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(6)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n-    if x==[0]*l:\n         c+=3\n-    if x==[1]*l:\n         c+=3\n \n     print(c%1000000007)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n s1=input()\n s2=input()\n x=[]\n f=0\n for i in range(n):\n     if f==1:\n         f=0\n     else:\n         if s1[i]==s2[i]:\n             x.append(0)\n         else:\n             x.append(1)\n             f=1\n l=len(x)\n \n if l==1:\n     if x[0]==0:\n         print(3)\n     else:\n         print(6)\n else:\n     if x[0]==0:\n         c=3\n     else:\n         c=6\n     for i in range(1,l):\n         \n         if x[i-1]==0:\n             c*=2\n         else:\n             if x[i]==1:\n                 c*=3\n         c%=1000000007\n-    if x==[0]*l:\n         c+=3\n-    if x==[1]*l:\n         c+=3\n \n     print(c%1000000007)\n \n```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p03087",
        "submission1_id": "s306099861",
        "crp_content": "\n from itertools import accumulate\n \n n, q = map(int, input().split())\n \n s = input()\n \n problems = [list(map(int, input().split())) for _ in range(q)]\n \n \n def count(total, i):\n     return total + 1 if s[i-1] + s[i] == 'AC' else total\n \n \n cumsum = [0] + list(accumulate(range(1, n), count))\n \n for l, r in problems:\n     print(cumsum[r-1] - cumsum[l-1])\n \n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n n, q = map(int, input().split())\n \n s = input()\n \n problems = [list(map(int, input().split())) for _ in range(q)]\n \n \n def count(total, i):\n     return total + 1 if s[i-1] + s[i] == 'AC' else total\n \n \n cumsum = [0] + list(accumulate(range(1, n), count))\n \n for l, r in problems:\n     print(cumsum[r-1] - cumsum[l-1])\n \n \n```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s437205029",
        "crp_content": "\n N, K = map(int, input().split())\n m = 1e9+7\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] = dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k] % m\n       dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] = dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k] % m\n print(int(dp[N][0][K]))\n \n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n m = 1e9+7\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] = dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k] % m\n       dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] = dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k] % m\n print(int(dp[N][0][K]))\n \n```\n "
    },
    {
        "user_id": "u111392182",
        "problem_id": "p02854",
        "submission1_id": "s209502166",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n b = sum(a)\n l = 0\n r = 0\n x = 0\n ans = 0\n for i in a:\n   l += i\n   r = b - l\n   if l==r:\n     break;\n   elif l>r:\n     ans = min(l-r,y-x)\n-    print(l-r,y-x)\n     break;\n   x = l\n   y = r\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n b = sum(a)\n l = 0\n r = 0\n x = 0\n ans = 0\n for i in a:\n   l += i\n   r = b - l\n   if l==r:\n     break;\n   elif l>r:\n     ans = min(l-r,y-x)\n-    print(l-r,y-x)\n     break;\n   x = l\n   y = r\n print(ans)\n```\n "
    },
    {
        "user_id": "u302957509",
        "problem_id": "p03206",
        "submission1_id": "s801739845",
        "crp_content": "\n-print(\"Christmas\" + \" \".join([\"Eve\"] * (25 - int(input()))))\n",
        "origin_generated_text": "\n```\n-print(\"Christmas\" + \" \".join([\"Eve\"] * (25 - int(input()))))\n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03613",
        "submission1_id": "s157232319",
        "crp_content": "\n n = int(input())\n k = [0] * 100001\n for a in map(int, input().split()):\n     k[a] += 1\n-print(max(map(sum, zip(k[1:], k[2:], k[3:]))))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n k = [0] * 100001\n for a in map(int, input().split()):\n     k[a] += 1\n-print(max(map(sum, zip(k[1:], k[2:], k[3:]))))\n \n```\n "
    },
    {
        "user_id": "u361243145",
        "problem_id": "p03480",
        "submission1_id": "s916975861",
        "crp_content": "\n import decimal\n \n S = input()\n \n ans = decimal.Decimal(\"inf\")\n-for i in range(len(S)-1):\n     if S[i] != S[i+1]:\n         ans = min(ans, max(i, len(S)-i))\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n import decimal\n \n S = input()\n \n ans = decimal.Decimal(\"inf\")\n-for i in range(len(S)-1):\n     if S[i] != S[i+1]:\n         ans = min(ans, max(i, len(S)-i))\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u891635666",
        "problem_id": "p03477",
        "submission1_id": "s216747980",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n if a + b > c + d:\n     print('Left')\n elif a + b < c + d:\n     print(\"Right\")\n else:\n-    print(\"Right\")\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n if a + b > c + d:\n     print('Left')\n elif a + b < c + d:\n     print(\"Right\")\n else:\n-    print(\"Right\")\n```\n "
    },
    {
        "user_id": "u777923818",
        "problem_id": "p03998",
        "submission1_id": "s536828572",
        "crp_content": "\n turn = \"a\"\n S = {}\n S[\"a\"] = list(input())\n S[\"b\"] = list(input())\n S[\"c\"] = list(input())\n \n while True:\n     nextturn = S[turn].pop(0)\n     if len(S[turn]) == 0:\n         print(turn.upper())\n         break\n     else:\n         turn = nextturn\n         \n",
        "origin_generated_text": "\n```\n turn = \"a\"\n S = {}\n S[\"a\"] = list(input())\n S[\"b\"] = list(input())\n S[\"c\"] = list(input())\n \n while True:\n     nextturn = S[turn].pop(0)\n     if len(S[turn]) == 0:\n         print(turn.upper())\n         break\n     else:\n         turn = nextturn\n         \n```\n "
    },
    {
        "user_id": "u790877102",
        "problem_id": "p03563",
        "submission1_id": "s850165090",
        "crp_content": "\n R = int(input())\n G = int(input())\n \n-W = R + R - G\n \n print(W)\n",
        "origin_generated_text": "\n```\n R = int(input())\n G = int(input())\n \n-W = R + R - G\n \n print(W)\n```\n "
    },
    {
        "user_id": "u594956556",
        "problem_id": "p03943",
        "submission1_id": "s550965215",
        "crp_content": "\n abc = list(map(int, input().split()))\n-if abc[0]+abc[1] == abc[2]:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n abc = list(map(int, input().split()))\n-if abc[0]+abc[1] == abc[2]:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s365279194",
        "crp_content": "\n \n def solve(a,b,c,d):\n   x1,y1,x2,y2=a,b,c,d\n   mx=my=0\n   if x1==x2 and x1%3==2:mx=1\n   if y1==y2 and y1%3==2:my=1\n   for i in range(29):\n     x1=0--x1\n     y1=0--y1\n     x2=0--x2\n     y2=0--y2\n     if x1==x2 and x1%3==2:mx=i+2\n     if y1==y2 and y1%3==2:my=i+2\n   ans=abs(a-c)+abs(b-d)\n   if mx<my:\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return ans\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n-  print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def solve(a,b,c,d):\n   x1,y1,x2,y2=a,b,c,d\n   mx=my=0\n   if x1==x2 and x1%3==2:mx=1\n   if y1==y2 and y1%3==2:my=1\n   for i in range(29):\n     x1=0--x1\n     y1=0--y1\n     x2=0--x2\n     y2=0--y2\n     if x1==x2 and x1%3==2:mx=i+2\n     if y1==y2 and y1%3==2:my=i+2\n   ans=abs(a-c)+abs(b-d)\n   if mx<my:\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return ans\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n-  print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u725359833",
        "problem_id": "p02886",
        "submission1_id": "s407130933",
        "crp_content": "\n n=int(input())\n-d=map(int,input().split(\" \"))\n wa=[]\n for i in range(1,n+1):\n   for j in range(i,n+1):\n-    wa.append(i*j)\n print(sum(wa))\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n-d=map(int,input().split(\" \"))\n wa=[]\n for i in range(1,n+1):\n   for j in range(i,n+1):\n-    wa.append(i*j)\n print(sum(wa))\n \n```\n "
    },
    {
        "user_id": "u077019541",
        "problem_id": "p03080",
        "submission1_id": "s290800766",
        "crp_content": "\n-N = [i for i in input()]\n if N.count(\"R\")>N.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n-N = [i for i in input()]\n if N.count(\"R\")>N.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s459664114",
        "crp_content": "\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n-        for k in range(300):\n-            if k >= w:\n-                if dp[i][j][k - w] + v > dp[i][j][k]:\n-                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n-                else:\n-                    dp[i + 1][j][k] = dp[i][j][k]\n-            else:\n-                dp[i + 1][j][k] = dp[i][j][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n-        for k in range(300):\n-            if k >= w:\n-                if dp[i][j][k - w] + v > dp[i][j][k]:\n-                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n-                else:\n-                    dp[i + 1][j][k] = dp[i][j][k]\n-            else:\n-                dp[i + 1][j][k] = dp[i][j][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u607044138",
        "problem_id": "p02556",
        "submission1_id": "s002854534",
        "crp_content": "\n N = int(input())\n table = [[int(i) for i in input().split()] for N in range(N)]\n \n a = 0\n b = 10**9 * 2\n c = 0\n d = 10**9 * 2\n for i in range(N):\n     p = table[i][0]\n     q = table[i][1]\n     if a < p+q:\n         a = p+q\n     if b > p+q:\n         b = p+q\n     if c < p-q:\n         c = p-q\n     if d > p-q:\n         d = p-q\n \n-print(max(a-b,c-d))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n table = [[int(i) for i in input().split()] for N in range(N)]\n \n a = 0\n b = 10**9 * 2\n c = 0\n d = 10**9 * 2\n for i in range(N):\n     p = table[i][0]\n     q = table[i][1]\n     if a < p+q:\n         a = p+q\n     if b > p+q:\n         b = p+q\n     if c < p-q:\n         c = p-q\n     if d > p-q:\n         d = p-q\n \n-print(max(a-b,c-d))\n \n```\n "
    },
    {
        "user_id": "u955125992",
        "problem_id": "p03200",
        "submission1_id": "s754840458",
        "crp_content": "\n s = str(input())\n n = len(s)\n count = 0\n max_W = 0\n \n for i in range(n):\n     if s[i] == 'W':\n-        count += i\n         max_W = i\n \n-if max_W == s.count('W') - 1 or s.count('W') == 0 or s.count('W') == n:\n     print(0)\n     exit()\n \n print(count)\n",
        "origin_generated_text": "\n```\n s = str(input())\n n = len(s)\n count = 0\n max_W = 0\n \n for i in range(n):\n     if s[i] == 'W':\n-        count += i\n         max_W = i\n \n-if max_W == s.count('W') - 1 or s.count('W') == 0 or s.count('W') == n:\n     print(0)\n     exit()\n \n print(count)\n```\n "
    },
    {
        "user_id": "u602773379",
        "problem_id": "p02660",
        "submission1_id": "s652081916",
        "crp_content": "\n import math\n \n \n def prime(num):\n \tarray=[]\n-\ttmp=int(math.sqrt(n))+1\n-\tfor i in range(2,tmp):\n-\t\twhile num % i == 0:\n-\t\t\tnum/=i\n-\t\t\tarray.append(i)\n \t\n \t\n \tif array==[]:\n \t\treturn [num]\n \telse:\n \t\tif n>1:\n \t\t\tarray.append(int(n))\n \t\treturn array\n \n n=int(input())\n P=prime(n)\n P=sorted(P)\n \n \n if 1 in P:\n \tprint(0)\n else:\n \tans=0\n \ttmp=0\n \tfor i in range(0,len(P)):\n \t\tif i==0:\n \t\t\ttmp=P[i] \n \t\telif P[i]==P[i-1]:\n \t\t\ttmp*=P[i]\n \t\telse:\n \t\t\ttmp=P[i]\n \n \t\tif n%tmp==0:\n \t\t\tn/=tmp\n \t\t\tans+=1\n \tprint(ans)\n",
        "origin_generated_text": "\n```\n import math\n \n \n def prime(num):\n \tarray=[]\n-\ttmp=int(math.sqrt(n))+1\n-\tfor i in range(2,tmp):\n-\t\twhile num % i == 0:\n-\t\t\tnum/=i\n-\t\t\tarray.append(i)\n \t\n \t\n \tif array==[]:\n \t\treturn [num]\n \telse:\n \t\tif n>1:\n \t\t\tarray.append(int(n))\n \t\treturn array\n \n n=int(input())\n P=prime(n)\n P=sorted(P)\n \n \n if 1 in P:\n \tprint(0)\n else:\n \tans=0\n \ttmp=0\n \tfor i in range(0,len(P)):\n \t\tif i==0:\n \t\t\ttmp=P[i] \n \t\telif P[i]==P[i-1]:\n \t\t\ttmp*=P[i]\n \t\telse:\n \t\t\ttmp=P[i]\n \n \t\tif n%tmp==0:\n \t\t\tn/=tmp\n \t\t\tans+=1\n \tprint(ans)\n```\n "
    },
    {
        "user_id": "u258009780",
        "problem_id": "p03992",
        "submission1_id": "s302469794",
        "crp_content": "\n d = input()\n-print(d[0:3] + \" \" + d[4:])\n",
        "origin_generated_text": "\n```\n d = input()\n-print(d[0:3] + \" \" + d[4:])\n```\n "
    },
    {
        "user_id": "u231189826",
        "problem_id": "p02917",
        "submission1_id": "s928113223",
        "crp_content": "\n n = int(input())\n B = list(map(int,(input().split())))\n \n list_A = [0]*n\n \n list_A[0] = B[0]\n list_A[n-1] = B[n-2]\n for i in range(1,n-2):\n     list_A[i] = min(B[i],B[i+1])\n \n-print(list_A)\n print(sum(list_A))\n \n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n B = list(map(int,(input().split())))\n \n list_A = [0]*n\n \n list_A[0] = B[0]\n list_A[n-1] = B[n-2]\n for i in range(1,n-2):\n     list_A[i] = min(B[i],B[i+1])\n \n-print(list_A)\n print(sum(list_A))\n \n \n \n```\n "
    },
    {
        "user_id": "u604607346",
        "problem_id": "p03479",
        "submission1_id": "s514585615",
        "crp_content": "\n x, y = map(int, input().split())\n  \n num = 0\n-while x < y:\n     num += 1\n     x *= 2\n     \n print(num)\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n  \n num = 0\n-while x < y:\n     num += 1\n     x *= 2\n     \n print(num)\n```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03008",
        "submission1_id": "s021868372",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n n = int(input())\n a1, a2, a3 = map(int, input().split())\n b1, b2, b3 = map(int, input().split())\n def f(n, a1, a2, a3, b1, b2, b3):\n   dp = [0]*(n+1)\n   for i in range(n+1):\n     for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n       if i-a >= 0:\n         dp[i] = max(dp[i], dp[i-a]+b)\n   return max(dp)\n m = f(n, a1, a2, a3, b1, b2, b3)\n-ans = f(m, b1, b2, b3, a1, a2, a3)\n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n n = int(input())\n a1, a2, a3 = map(int, input().split())\n b1, b2, b3 = map(int, input().split())\n def f(n, a1, a2, a3, b1, b2, b3):\n   dp = [0]*(n+1)\n   for i in range(n+1):\n     for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n       if i-a >= 0:\n         dp[i] = max(dp[i], dp[i-a]+b)\n   return max(dp)\n m = f(n, a1, a2, a3, b1, b2, b3)\n-ans = f(m, b1, b2, b3, a1, a2, a3)\n print(ans)\n```\n "
    },
    {
        "user_id": "u244416620",
        "problem_id": "p02730",
        "submission1_id": "s203749346",
        "crp_content": "\n \n \n S = input()\n \n def is_kaibun(s):\n     l = len(s)\n-    print('former', s[:int(l/2)])\n-    print('latter', s[:-(int(l/2))-1:-1])\n     if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n         return True\n     else:\n         return False\n \n if is_kaibun(S):\n     if is_kaibun(S[:int((len(S)-1)/2)]):\n         if is_kaibun(S[int((len(S)+3)/2)-1:]):\n             print('Yes')\n             exit()\n print('No')\n",
        "origin_generated_text": "\n```\n \n \n S = input()\n \n def is_kaibun(s):\n     l = len(s)\n-    print('former', s[:int(l/2)])\n-    print('latter', s[:-(int(l/2))-1:-1])\n     if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n         return True\n     else:\n         return False\n \n if is_kaibun(S):\n     if is_kaibun(S[:int((len(S)-1)/2)]):\n         if is_kaibun(S[int((len(S)+3)/2)-1:]):\n             print('Yes')\n             exit()\n print('No')\n```\n "
    },
    {
        "user_id": "u082945913",
        "problem_id": "p02660",
        "submission1_id": "s068309001",
        "crp_content": "\n import math\n \n n = int(input())\n N = n\n \n if(n == 1):\n     print(0)\n     exit()\n \n yakusu = []\n multi = []\n \n i = 2\n while(i <= math.ceil(math.sqrt(n))):\n     \n     if(n % i == 0):\n         if(i in yakusu):\n             multi[yakusu.index(i)] += 1\n         else:\n             yakusu.append(i)\n             multi.append(1)\n         n = int(n / i)\n         continue\n     \n     if(n == 1):\n         break\n     \n     i += 1\n \n if(len(yakusu) == 0):\n     print(1)\n     exit()\n     \n ans = 0\n \n for j in range(len(multi)):\n-    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n     ans += int(h)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import math\n \n n = int(input())\n N = n\n \n if(n == 1):\n     print(0)\n     exit()\n \n yakusu = []\n multi = []\n \n i = 2\n while(i <= math.ceil(math.sqrt(n))):\n     \n     if(n % i == 0):\n         if(i in yakusu):\n             multi[yakusu.index(i)] += 1\n         else:\n             yakusu.append(i)\n             multi.append(1)\n         n = int(n / i)\n         continue\n     \n     if(n == 1):\n         break\n     \n     i += 1\n \n if(len(yakusu) == 0):\n     print(1)\n     exit()\n     \n ans = 0\n \n for j in range(len(multi)):\n-    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n     ans += int(h)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u819135704",
        "problem_id": "p03480",
        "submission1_id": "s756012439",
        "crp_content": "\n S = input()\n \n n = len(S)\n a = n\n for i in range(n-1):\n     if S[i] != S[i+1]:\n-        a = min(a, max(i+1, n-i+1))\n \n print(a)\n \n",
        "origin_generated_text": "\n```\n S = input()\n \n n = len(S)\n a = n\n for i in range(n-1):\n     if S[i] != S[i+1]:\n-        a = min(a, max(i+1, n-i+1))\n \n print(a)\n \n```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03677",
        "submission1_id": "s871699666",
        "crp_content": "\n from collections import defaultdict,deque\n import sys,heapq,bisect,math,itertools,string,queue,datetime\n sys.setrecursionlimit(10**8)\n INF = float('inf')\n mod = 10**9+7\n eps = 10**-7\n def inpl(): return list(map(int, input().split()))\n def inpl_s(): return list(input().split())\n \n N,M = inpl()\n aa = inpl()\n for i in range(N):\n \taa[i] -= 1\n \n yama_height = [0]*(2*M)\n yama_num = [0]*(2*M)\n SUM = 0\n for i in range(1,N):\n \tna = aa[i]\n \tba = aa[i-1]\n \tif na < ba:\n \t\tna += M\n \tSUM += (na-ba)\n \tyama_height[na] = na - (ba + 1)\n \tyama_num[na] -= 1\n \tyama_num[ba+1] += 1\n \n tmp = 0\n for i in range(2*M):\n \ttmp += yama_num[i]\n \tyama_num[i] = tmp\n \n ans_list = [0]*(M)\n tmp = 0\n for i in reversed(range(2*M)):\n \ttmp += yama_height[i]\n \ttmp -= yama_num[i]\n \tans_list[i%M] += tmp\n \n-print(SUM-max(ans_list))\n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict,deque\n import sys,heapq,bisect,math,itertools,string,queue,datetime\n sys.setrecursionlimit(10**8)\n INF = float('inf')\n mod = 10**9+7\n eps = 10**-7\n def inpl(): return list(map(int, input().split()))\n def inpl_s(): return list(input().split())\n \n N,M = inpl()\n aa = inpl()\n for i in range(N):\n \taa[i] -= 1\n \n yama_height = [0]*(2*M)\n yama_num = [0]*(2*M)\n SUM = 0\n for i in range(1,N):\n \tna = aa[i]\n \tba = aa[i-1]\n \tif na < ba:\n \t\tna += M\n \tSUM += (na-ba)\n \tyama_height[na] = na - (ba + 1)\n \tyama_num[na] -= 1\n \tyama_num[ba+1] += 1\n \n tmp = 0\n for i in range(2*M):\n \ttmp += yama_num[i]\n \tyama_num[i] = tmp\n \n ans_list = [0]*(M)\n tmp = 0\n for i in reversed(range(2*M)):\n \ttmp += yama_height[i]\n \ttmp -= yama_num[i]\n \tans_list[i%M] += tmp\n \n-print(SUM-max(ans_list))\n \n```\n "
    },
    {
        "user_id": "u894694822",
        "problem_id": "p03563",
        "submission1_id": "s424770132",
        "crp_content": "\n r=int(input())\n g=int(input())\n-print((g-r)*2+g)\n",
        "origin_generated_text": "\n```\n r=int(input())\n g=int(input())\n-print((g-r)*2+g)\n```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03546",
        "submission1_id": "s160448245",
        "crp_content": "\n def warshall_floyd(graph):\n     num_v = len(graph)\n     for i in range(num_v):\n         for j in range(num_v):\n             for k in range(num_v):\n                 graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])\n     return graph\n \n \n h, w = map(int, input().split())\n route = [[float(\"inf\") for _ in range(10)] for _ in range(10)]\n \n for i in range(10):\n     S = list(map(int, input().split()))\n     for j in range(10):\n         route[i][j] = S[j]\n graph = warshall_floyd(route)\n result = 0\n for i in range(h):\n     A = list(map(int, input().split()))\n     for a in A:\n         if a == -1:\n             continue\n         else:\n             result += graph[a][1]\n print(result)\n \n \n",
        "origin_generated_text": "\n```\n def warshall_floyd(graph):\n     num_v = len(graph)\n     for i in range(num_v):\n         for j in range(num_v):\n             for k in range(num_v):\n                 graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])\n     return graph\n \n \n h, w = map(int, input().split())\n route = [[float(\"inf\") for _ in range(10)] for _ in range(10)]\n \n for i in range(10):\n     S = list(map(int, input().split()))\n     for j in range(10):\n         route[i][j] = S[j]\n graph = warshall_floyd(route)\n result = 0\n for i in range(h):\n     A = list(map(int, input().split()))\n     for a in A:\n         if a == -1:\n             continue\n         else:\n             result += graph[a][1]\n print(result)\n \n \n```\n "
    },
    {
        "user_id": "u706414019",
        "problem_id": "p03475",
        "submission1_id": "s339408341",
        "crp_content": "\n import sys,math\n input = sys.stdin.readline\n \n N = int(input())\n CSF = [[0,0,0]]\n for i in range(1,N):\n     CSF.append(list(map(int,input().split())))\n for i in range(1,N+1):\n     nowtime = 0\n     for j in range(i,N):\n         if nowtime <=CSF[j][1]:\n             depT =CSF[j][1]\n         else:\n             depT =CSF[j][1] + math.ceil((nowtime-CSF[j][1])/CSF[j][2])*CSF[j][2]\n \n         nowtime = depT+CSF[j][0]\n-        print(nowtime,depT)\n     print(nowtime)\n \n",
        "origin_generated_text": "\n```\n import sys,math\n input = sys.stdin.readline\n \n N = int(input())\n CSF = [[0,0,0]]\n for i in range(1,N):\n     CSF.append(list(map(int,input().split())))\n for i in range(1,N+1):\n     nowtime = 0\n     for j in range(i,N):\n         if nowtime <=CSF[j][1]:\n             depT =CSF[j][1]\n         else:\n             depT =CSF[j][1] + math.ceil((nowtime-CSF[j][1])/CSF[j][2])*CSF[j][2]\n \n         nowtime = depT+CSF[j][0]\n-        print(nowtime,depT)\n     print(nowtime)\n \n```\n "
    },
    {
        "user_id": "u169678167",
        "problem_id": "p03080",
        "submission1_id": "s614245282",
        "crp_content": "\n A = int(input())\n B = list(input())\n \n count_RED = 0\n for i in range (0, A):\n     if B[i] == \"R\":\n         count_RED += 1\n count_BLUE = A - count_RED\n if (count_RED > count_BLUE):\n     print('Yes')\n else:\n-    print('NO')    \n",
        "origin_generated_text": "\n```\n A = int(input())\n B = list(input())\n \n count_RED = 0\n for i in range (0, A):\n     if B[i] == \"R\":\n         count_RED += 1\n count_BLUE = A - count_RED\n if (count_RED > count_BLUE):\n     print('Yes')\n else:\n-    print('NO')    \n```\n "
    },
    {
        "user_id": "u912867658",
        "problem_id": "p02699",
        "submission1_id": "s020923192",
        "crp_content": "\n s,w = input().split()\n-print(\"safe\") if s < w else print(\"unsafe\")\n",
        "origin_generated_text": "\n```\n s,w = input().split()\n-print(\"safe\") if s < w else print(\"unsafe\")\n```\n "
    },
    {
        "user_id": "u252828980",
        "problem_id": "p02912",
        "submission1_id": "s143313976",
        "crp_content": "\n a,b = map(int,input().split())\n li = [-int(x) for x in input().split()]\n import heapq\n heapq.heapify(li)\n for i in range(b):\n     c = heapq.heappop(li)\n-    heapq.heappush(li,c/2)\n print(-int(sum(li)))\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n li = [-int(x) for x in input().split()]\n import heapq\n heapq.heapify(li)\n for i in range(b):\n     c = heapq.heappop(li)\n-    heapq.heappush(li,c/2)\n print(-int(sum(li)))\n```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03992",
        "submission1_id": "s588862308",
        "crp_content": "\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n def lcm(x, y):\n     return (x * y) \n \n if __name__ == '__main__':\n-    a = [str(i) for i in input().split()]\n     print(a[0][:4]+\" \"+a[0][5:])\n \n",
        "origin_generated_text": "\n```\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n def lcm(x, y):\n     return (x * y) \n \n if __name__ == '__main__':\n-    a = [str(i) for i in input().split()]\n     print(a[0][:4]+\" \"+a[0][5:])\n \n```\n "
    },
    {
        "user_id": "u121192152",
        "problem_id": "p02917",
        "submission1_id": "s546110108",
        "crp_content": "\n N = int(input())\n B = list(map(int, input().split()))\n \n-A = [max(B)] * N\n \n for n in range(N, 0, -1):\n-    if A[n-1] > B[n-2]:\n-        A[n-1] = B[n-2]\n-    if A[n-2] > B[n-2]:\n-        A[n-2] = B[n-2]\n print(sum(A))\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int, input().split()))\n \n-A = [max(B)] * N\n \n for n in range(N, 0, -1):\n-    if A[n-1] > B[n-2]:\n-        A[n-1] = B[n-2]\n-    if A[n-2] > B[n-2]:\n-        A[n-2] = B[n-2]\n print(sum(A))\n```\n "
    },
    {
        "user_id": "u396971285",
        "problem_id": "p03103",
        "submission1_id": "s247556399",
        "crp_content": "\n N,M=map(int,input().split())\n \n \n AB=[]\n for i in range(N):\n   ab=list(map(int,input().split()))\n   AB.append(ab)\n \n \n list.sort(AB,key=lambda x:x[0])\n \n \n m=0 \n cost=0 \n for i in range(N):\n  \n  if M-m==AB[i][1]:\n      m+=AB[i][1]\n      cost+=AB[i][0]*AB[i][1]\n      break\n \n  elif M-m<AB[i][1] :\n       for j in range(AB[i][1]+1):\n-         cost=cost+AB[i][0]*j\n         m=m+j\n         if m==M:\n             break\n         else:\n-             cost=cost-AB[i][0]*j\n  else:\n       cost+=AB[i][0]*AB[i][1]\n       m+=AB[i][1]\n     \n print(cost)\n",
        "origin_generated_text": "\n```\n N,M=map(int,input().split())\n \n \n AB=[]\n for i in range(N):\n   ab=list(map(int,input().split()))\n   AB.append(ab)\n \n \n list.sort(AB,key=lambda x:x[0])\n \n \n m=0 \n cost=0 \n for i in range(N):\n  \n  if M-m==AB[i][1]:\n      m+=AB[i][1]\n      cost+=AB[i][0]*AB[i][1]\n      break\n \n  elif M-m<AB[i][1] :\n       for j in range(AB[i][1]+1):\n-         cost=cost+AB[i][0]*j\n         m=m+j\n         if m==M:\n             break\n         else:\n-             cost=cost-AB[i][0]*j\n  else:\n       cost+=AB[i][0]*AB[i][1]\n       m+=AB[i][1]\n     \n print(cost)\n```\n "
    },
    {
        "user_id": "u557437077",
        "problem_id": "p03633",
        "submission1_id": "s719207795",
        "crp_content": "\n def gcd(a, b):\n     while b:\n         a, b = b, a % b\n     return a\n \n \n def lcm(a, b):\n     return a*b \n \n \n n = int(input())\n t = [0 for i in range(n)]\n for i in range(n):\n     t[i] = int(input())\n sum = t[0]\n for i in range(1, n):\n     \n     sum = lcm(sum, t[i])\n     \n print(sum)\n \n",
        "origin_generated_text": "\n```\n def gcd(a, b):\n     while b:\n         a, b = b, a % b\n     return a\n \n \n def lcm(a, b):\n     return a*b \n \n \n n = int(input())\n t = [0 for i in range(n)]\n for i in range(n):\n     t[i] = int(input())\n sum = t[0]\n for i in range(1, n):\n     \n     sum = lcm(sum, t[i])\n     \n print(sum)\n \n```\n "
    },
    {
        "user_id": "u384679440",
        "problem_id": "p03296",
        "submission1_id": "s351944973",
        "crp_content": "\n N = int(input())\n a = list(map(int, input().split()))\n ans = 0\n count = 1\n for i in range(1, len(a)):\n \tif a[i] == a[i-1]:\n \t\tcount += 1\n-\t\tif i == len(a) - 1 and count > 2:\n \t\t\tans += int(count / 2)\n \t\telif i == len(a) - 1 and count == 2:\n \t\t\tans += 1\n \telif a[i] != a[i-1] and count == 2:\n \t\tans += 1\n \t\tcount = 1\n \telif a[i] != a[i-1] and count > 2:\n \t\tans += count - 2\n \t\tcount = 1\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n a = list(map(int, input().split()))\n ans = 0\n count = 1\n for i in range(1, len(a)):\n \tif a[i] == a[i-1]:\n \t\tcount += 1\n-\t\tif i == len(a) - 1 and count > 2:\n \t\t\tans += int(count / 2)\n \t\telif i == len(a) - 1 and count == 2:\n \t\t\tans += 1\n \telif a[i] != a[i-1] and count == 2:\n \t\tans += 1\n \t\tcount = 1\n \telif a[i] != a[i-1] and count > 2:\n \t\tans += count - 2\n \t\tcount = 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u090068671",
        "problem_id": "p02660",
        "submission1_id": "s414326355",
        "crp_content": "\n def resolve():\n \timport math\n \tN = int(input())\n \tif N==1:\n \t\tprint(0)\n \telse:\n \t\t\n \t\tlst_e = []\n \t\tfor p in range(2, math.ceil(math.sqrt(N))):\n \t\t\te = 0\n \t\t\twhile (N % p == 0):\n \t\t\t\tN /= p\n \t\t\t\te += 1\n \t\t\tif e>0:\n \t\t\t\tlst_e.append(e)\n \t\t\n \t\t\n \t\tanswer = 0\n \t\tfor e in lst_e:\n \t\t\ti = 1\n \t\t\twhile e >= i:\n \t\t\t\te -= i\n \t\t\t\ti += 1\n \t\t\t\tanswer += 1\n \t\tif answer == 0:\n \t\t\tanswer = 1\n \t\tprint(answer)\n         \n resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n \timport math\n \tN = int(input())\n \tif N==1:\n \t\tprint(0)\n \telse:\n \t\t\n \t\tlst_e = []\n \t\tfor p in range(2, math.ceil(math.sqrt(N))):\n \t\t\te = 0\n \t\t\twhile (N % p == 0):\n \t\t\t\tN /= p\n \t\t\t\te += 1\n \t\t\tif e>0:\n \t\t\t\tlst_e.append(e)\n \t\t\n \t\t\n \t\tanswer = 0\n \t\tfor e in lst_e:\n \t\t\ti = 1\n \t\t\twhile e >= i:\n \t\t\t\te -= i\n \t\t\t\ti += 1\n \t\t\t\tanswer += 1\n \t\tif answer == 0:\n \t\t\tanswer = 1\n \t\tprint(answer)\n         \n resolve()\n```\n "
    },
    {
        "user_id": "u580697892",
        "problem_id": "p02742",
        "submission1_id": "s409238600",
        "crp_content": "\n \n from math import ceil\n H, W = map(int, input().split())\n if H == 1 or W == 1:\n     print(1)\n     exit()\n ans = 0\n-ans += ceil(W / 2) * ceil(H / 2)\n-ans += W \n print(ans)\n",
        "origin_generated_text": "\n```\n \n from math import ceil\n H, W = map(int, input().split())\n if H == 1 or W == 1:\n     print(1)\n     exit()\n ans = 0\n-ans += ceil(W / 2) * ceil(H / 2)\n-ans += W \n print(ans)\n```\n "
    },
    {
        "user_id": "u358254559",
        "problem_id": "p02912",
        "submission1_id": "s834457628",
        "crp_content": "\n N, M = map(int, input().split())\n \n A_list = list(map(int, input().split()))\n \n a = list(map(lambda x: x*(-1), A_list))\n \n import heapq\n import math\n \n \n heapq.heapify(a)\n \n-print(a)\n-\n \n for i in range(M):\n         max_p = heapq.heappop(a)\n         max_p = max_p / 2\n         heapq.heappush(a, max_p)\n \n res=0\n for i in range(N):\n         a[i] = -a[i]\n         res += math.floor(a[i])\n \n print(res)\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n \n A_list = list(map(int, input().split()))\n \n a = list(map(lambda x: x*(-1), A_list))\n \n import heapq\n import math\n \n \n heapq.heapify(a)\n \n-print(a)\n-\n \n for i in range(M):\n         max_p = heapq.heappop(a)\n         max_p = max_p / 2\n         heapq.heappush(a, max_p)\n \n res=0\n for i in range(N):\n         a[i] = -a[i]\n         res += math.floor(a[i])\n \n print(res)\n```\n "
    },
    {
        "user_id": "u534527715",
        "problem_id": "p03303",
        "submission1_id": "s573706590",
        "crp_content": "\n \n import sys\n S = input()\n w = int(input())\n x = 0\n \n S_list = list(S)\n \n while True:\n     sys.stdout.write(S_list[x])\n     x = x + w\n-    if x > len(S_list) or x + w > len(S_list):\n         break\n \n",
        "origin_generated_text": "\n```\n \n import sys\n S = input()\n w = int(input())\n x = 0\n \n S_list = list(S)\n \n while True:\n     sys.stdout.write(S_list[x])\n     x = x + w\n-    if x > len(S_list) or x + w > len(S_list):\n         break\n \n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s857212848",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-ta = a + []\n-res = pow(10, 10)\n-for x in sorted(a):\n-  \n-  t = sorted(ta)\n-  if t[Q - 1] == pow(10, 10): break\n-  res = min(res, t[Q - 1] - t[0])\n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          ta[j] = pow(10, 10)\n print(res)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-ta = a + []\n-res = pow(10, 10)\n-for x in sorted(a):\n-  \n-  t = sorted(ta)\n-  if t[Q - 1] == pow(10, 10): break\n-  res = min(res, t[Q - 1] - t[0])\n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          ta[j] = pow(10, 10)\n print(res)\n```\n "
    },
    {
        "user_id": "u536377809",
        "problem_id": "p03326",
        "submission1_id": "s911472974",
        "crp_content": "\n [N,M]=list(map(int,input().split()\n               )\n           )\n XYZ=[[int(i) for i in input().split()] for i in range(N)] \n maxabs=0\n \n-for i in range(8):\n-  pm=list(map(int,format(i, 'b')))\n-  pm=[0,]*(3-len(pm))+pm\n-\n-  newXYZ=sorted([[item[0]*(-1)**pm[0],item[1]*(-1)**pm[1],item[2]*(-1)**pm[2]] for item in XYZ],\n-               reverse=True)\n-  \n-  maxabs=max(sum([abs(sum([newXYZ[m][j] for m in range(M)]\n-                             )\n-                         ) for j in range(3)\n-                 ]\n-                ),\n-             maxabs\n-            )\n \n \n print(maxabs)\n",
        "origin_generated_text": "\n```\n [N,M]=list(map(int,input().split()\n               )\n           )\n XYZ=[[int(i) for i in input().split()] for i in range(N)] \n maxabs=0\n \n-for i in range(8):\n-  pm=list(map(int,format(i, 'b')))\n-  pm=[0,]*(3-len(pm))+pm\n-\n-  newXYZ=sorted([[item[0]*(-1)**pm[0],item[1]*(-1)**pm[1],item[2]*(-1)**pm[2]] for item in XYZ],\n-               reverse=True)\n-  \n-  maxabs=max(sum([abs(sum([newXYZ[m][j] for m in range(M)]\n-                             )\n-                         ) for j in range(3)\n-                 ]\n-                ),\n-             maxabs\n-            )\n \n \n print(maxabs)\n```\n "
    },
    {
        "user_id": "u085186789",
        "problem_id": "p03303",
        "submission1_id": "s180917234",
        "crp_content": "\n S = input()\n w = int(input())\n for i in range(len(S)):\n-  if w != 1 and (i + 1) % w == 1 :\n     print(S[i], end = \"\")\n   elif w == 1:\n     print(S[i])\n-\n",
        "origin_generated_text": "\n```\n S = input()\n w = int(input())\n for i in range(len(S)):\n-  if w != 1 and (i + 1) % w == 1 :\n     print(S[i], end = \"\")\n   elif w == 1:\n     print(S[i])\n-\n```\n "
    },
    {
        "user_id": "u293198424",
        "problem_id": "p03103",
        "submission1_id": "s553275677",
        "crp_content": "\n n,m = map(int,input().split())\n drink = dict()\n-cost = set()\n ans = 0\n for i in range(n):\n     ab = [int(i) for i in input().split()]\n-    cost.add(ab[0])\n     if ab[0] in drink:\n         drink[ab[0]] += ab[1]\n     else:\n         drink[ab[0]] = ab[1]\n \n-sorted(cost)\n-for i in cost:\n-    if m <= drink[i]:\n-        ans += m*i\n-        break\n-    else:\n-        m -= drink[i]\n-        ans += i * drink[i] \n     \n print(ans)\n",
        "origin_generated_text": "\n```\n n,m = map(int,input().split())\n drink = dict()\n-cost = set()\n ans = 0\n for i in range(n):\n     ab = [int(i) for i in input().split()]\n-    cost.add(ab[0])\n     if ab[0] in drink:\n         drink[ab[0]] += ab[1]\n     else:\n         drink[ab[0]] = ab[1]\n \n-sorted(cost)\n-for i in cost:\n-    if m <= drink[i]:\n-        ans += m*i\n-        break\n-    else:\n-        m -= drink[i]\n-        ans += i * drink[i] \n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u831971779",
        "problem_id": "p02407",
        "submission1_id": "s266078536",
        "crp_content": "\n-n = input()\n print(\" \".join(input().split())[::-1])\n",
        "origin_generated_text": "\n```\n-n = input()\n print(\" \".join(input().split())[::-1])\n```\n "
    },
    {
        "user_id": "u550943777",
        "problem_id": "p02665",
        "submission1_id": "s389169550",
        "crp_content": "\n n = int(input())\n arr = list(map(int,input().split()))\n ans = [0]*(n+1)\n ans[0] = 1\n c_sum = [0]*(n+1)\n c_sum[0] = arr[0]\n for i in range(1,n+1):\n     c_sum[i] = c_sum[i-1] + arr[i]\n root = [0]*(n+1)\n root[0] = arr[0]\n for d in range(n+1):\n     if d==0:\n-        ans[d] = min(1-arr[0],c_sum[-1])\n     else:\n-        ans[d] = min(root[d-1]*2,(c_sum[-1] - c_sum[d-1]))\n     if ans[d] < 0:\n         print(-1)\n         exit()\n     root[d] = ans[d] - arr[d]\n print(sum(ans))\n \n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n arr = list(map(int,input().split()))\n ans = [0]*(n+1)\n ans[0] = 1\n c_sum = [0]*(n+1)\n c_sum[0] = arr[0]\n for i in range(1,n+1):\n     c_sum[i] = c_sum[i-1] + arr[i]\n root = [0]*(n+1)\n root[0] = arr[0]\n for d in range(n+1):\n     if d==0:\n-        ans[d] = min(1-arr[0],c_sum[-1])\n     else:\n-        ans[d] = min(root[d-1]*2,(c_sum[-1] - c_sum[d-1]))\n     if ans[d] < 0:\n         print(-1)\n         exit()\n     root[d] = ans[d] - arr[d]\n print(sum(ans))\n \n \n \n```\n "
    },
    {
        "user_id": "u550943777",
        "problem_id": "p03625",
        "submission1_id": "s231338952",
        "crp_content": "\n N = int(input())\n arr = sorted(list(map(int,input().split())))\n b = {}\n for i in arr:\n     if i not in b:\n         b[i] = 1\n     else:\n         b[i] += 1\n h = 0\n w = 0\n for i in b:\n     if b[i] >= 4 and h*w < i**2:\n         h = i\n         w = i\n     elif b[i] >= 2:\n         if w*i > h*i:\n             h = i\n         else:\n             w = i\n print(0)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n arr = sorted(list(map(int,input().split())))\n b = {}\n for i in arr:\n     if i not in b:\n         b[i] = 1\n     else:\n         b[i] += 1\n h = 0\n w = 0\n for i in b:\n     if b[i] >= 4 and h*w < i**2:\n         h = i\n         w = i\n     elif b[i] >= 2:\n         if w*i > h*i:\n             h = i\n         else:\n             w = i\n print(0)\n \n```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p03274",
        "submission1_id": "s489411593",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n \n def main():\n     N, K = map(int, input().split())\n     X = [int(c) for c in input().split()]\n \n     def fullsearch():\n-        for i in range(N-K):\n             l = X[i]\n             r = X[i+K-1]\n             distance = abs(r - l)\n             if abs(l) > abs(r):\n                 distance += abs(r)\n             else:\n                 distance += abs(l)\n             yield distance\n \n     if N == K:\n         print(0)\n     else:\n         print(min(fullsearch()))\n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n \n def main():\n     N, K = map(int, input().split())\n     X = [int(c) for c in input().split()]\n \n     def fullsearch():\n-        for i in range(N-K):\n             l = X[i]\n             r = X[i+K-1]\n             distance = abs(r - l)\n             if abs(l) > abs(r):\n                 distance += abs(r)\n             else:\n                 distance += abs(l)\n             yield distance\n \n     if N == K:\n         print(0)\n     else:\n         print(min(fullsearch()))\n \n main()\n```\n "
    },
    {
        "user_id": "u382176416",
        "problem_id": "p03272",
        "submission1_id": "s352130105",
        "crp_content": "\n n,i=map(int,input().split())\n-print(n-i-1)\n",
        "origin_generated_text": "\n```\n n,i=map(int,input().split())\n-print(n-i-1)\n```\n "
    },
    {
        "user_id": "u533883485",
        "problem_id": "p02287",
        "submission1_id": "s110485424",
        "crp_content": "\n \n import math\n \n class Tree():\n     def __init__(self, key):\n         self.root = key\n \n class Node():\n     def __init__(self, id, key):\n         self.id = id\n         self.key = key\n         self.parent = None\n         self.left = None\n         self.right = None\n \n     def set_status(self, id, key):\n         global node_list\n         parent_id = math.floor(id/2)\n         odd = id % 2\n         self.parent = node_list[parent_id]\n         if odd == 0:\n             self.parent.left = self\n         else:\n             self.parent.right = self\n \n def print_nodes():\n     global node_list\n     node_list.pop(0)\n     for node in node_list:\n-        print(\"node {}: key = {}\".format(node.id, node.key), end = \"\")\n         if node.parent:\n-            print(\", parent key = {}\".format(node.parent.key), end = \"\")\n         if node.left:\n-            print(\", left key = {}\".format(node.left.key), end = \"\")\n         if node.right:\n-            print(\", right key = {}\".format(node.right.key), end = \"\")\n         print()\n \n n = int(input())\n input_num = list(map(int, input().split()))\n node_list = [None]\n \n for i, num in enumerate(input_num):\n     i = i + 1 \n     node = Node(i, num)\n     node_list.append(node)\n \n     if i == 1:\n         tree = Tree(num)\n     else:\n         node.set_status(i, num)\n \n print_nodes()\n",
        "origin_generated_text": "\n```\n \n import math\n \n class Tree():\n     def __init__(self, key):\n         self.root = key\n \n class Node():\n     def __init__(self, id, key):\n         self.id = id\n         self.key = key\n         self.parent = None\n         self.left = None\n         self.right = None\n \n     def set_status(self, id, key):\n         global node_list\n         parent_id = math.floor(id/2)\n         odd = id % 2\n         self.parent = node_list[parent_id]\n         if odd == 0:\n             self.parent.left = self\n         else:\n             self.parent.right = self\n \n def print_nodes():\n     global node_list\n     node_list.pop(0)\n     for node in node_list:\n-        print(\"node {}: key = {}\".format(node.id, node.key), end = \"\")\n         if node.parent:\n-            print(\", parent key = {}\".format(node.parent.key), end = \"\")\n         if node.left:\n-            print(\", left key = {}\".format(node.left.key), end = \"\")\n         if node.right:\n-            print(\", right key = {}\".format(node.right.key), end = \"\")\n         print()\n \n n = int(input())\n input_num = list(map(int, input().split()))\n node_list = [None]\n \n for i, num in enumerate(input_num):\n     i = i + 1 \n     node = Node(i, num)\n     node_list.append(node)\n \n     if i == 1:\n         tree = Tree(num)\n     else:\n         node.set_status(i, num)\n \n print_nodes()\n```\n "
    },
    {
        "user_id": "u884982181",
        "problem_id": "p03714",
        "submission1_id": "s288824648",
        "crp_content": "\n import heapq\n n = int(input())\n a = list(map(int,input().split()))\n aka = a[:n]\n heapq.heapify(aka)\n akasum = [0] * (n+1)\n akasum[0] = sum(aka)\n ao = a[2*n:]\n heapq._heapify_max(ao)\n aosum = [0] * (n+1)\n aosum[-1] = sum(ao)\n for i in range(n,2*n):\n   b = heapq.heappop(aka)\n   if b >= a[i]:\n     heapq.heappush(aka, b)\n   else:\n     heapq.heappush(aka, a[i])\n   akasum[i-n+1] = sum(aka)\n   b = heapq.heappop(ao)\n   if b <= a[-i-1]:\n     heapq.heappush(ao, b)\n   else:\n     heapq.heappush(ao, a[-i-1])\n   aosum[-i+n-2] = sum(ao)\n ans = - float(\"inf\")\n for i in range(n+1):\n   kota = akasum[i] - aosum[i]\n   ans = max(kota,ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n import heapq\n n = int(input())\n a = list(map(int,input().split()))\n aka = a[:n]\n heapq.heapify(aka)\n akasum = [0] * (n+1)\n akasum[0] = sum(aka)\n ao = a[2*n:]\n heapq._heapify_max(ao)\n aosum = [0] * (n+1)\n aosum[-1] = sum(ao)\n for i in range(n,2*n):\n   b = heapq.heappop(aka)\n   if b >= a[i]:\n     heapq.heappush(aka, b)\n   else:\n     heapq.heappush(aka, a[i])\n   akasum[i-n+1] = sum(aka)\n   b = heapq.heappop(ao)\n   if b <= a[-i-1]:\n     heapq.heappush(ao, b)\n   else:\n     heapq.heappush(ao, a[-i-1])\n   aosum[-i+n-2] = sum(ao)\n ans = - float(\"inf\")\n for i in range(n+1):\n   kota = akasum[i] - aosum[i]\n   ans = max(kota,ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p02730",
        "submission1_id": "s906415153",
        "crp_content": "\n import math\n a= input()\n length=math.floor(len(a)/2)\n def kaibun(p):\n     length_p=math.floor(len(p)/2)\n     total_p = 0\n     for i in range(length_p):\n         if p[i] is not p[-1*i -1]:\n             return False\n             break\n         else:\n             total_p += 1\n         if total_p == length_p:\n             return True\n if kaibun(a):\n-    if kaibun(a[:length+1]):\n         print('Yes')\n-    elif length==1:\n-        print('Yes')\n-    else:\n-        print('No')\n else:\n     print('No')\n \n \n",
        "origin_generated_text": "\n```\n import math\n a= input()\n length=math.floor(len(a)/2)\n def kaibun(p):\n     length_p=math.floor(len(p)/2)\n     total_p = 0\n     for i in range(length_p):\n         if p[i] is not p[-1*i -1]:\n             return False\n             break\n         else:\n             total_p += 1\n         if total_p == length_p:\n             return True\n if kaibun(a):\n-    if kaibun(a[:length+1]):\n         print('Yes')\n-    elif length==1:\n-        print('Yes')\n-    else:\n-        print('No')\n else:\n     print('No')\n \n \n```\n "
    },
    {
        "user_id": "u950708010",
        "problem_id": "p03475",
        "submission1_id": "s038695080",
        "crp_content": "\n n = int(input())\n stack = [0]\n queue = []\n for i in range(n-1):\n   c,s,f = (int(i) for i in input().split())\n   queue.append((c,s,f))\n for i in range(n):\n  ans = 0\n  for j in range(n-i-1):\n    c,s,f = queue[i+j]\n    \n    if s >= ans:\n     ans = s+c\n    else:\n      if ans%f == 0:\n       ans +=c\n      elif ans%f != 0:\n-      ans += ans%f+c\n  if n-i-1 == 0:\n   ans = 0\n  print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n stack = [0]\n queue = []\n for i in range(n-1):\n   c,s,f = (int(i) for i in input().split())\n   queue.append((c,s,f))\n for i in range(n):\n  ans = 0\n  for j in range(n-i-1):\n    c,s,f = queue[i+j]\n    \n    if s >= ans:\n     ans = s+c\n    else:\n      if ans%f == 0:\n       ans +=c\n      elif ans%f != 0:\n-      ans += ans%f+c\n  if n-i-1 == 0:\n   ans = 0\n  print(ans)\n \n```\n "
    },
    {
        "user_id": "u698756732",
        "problem_id": "p02640",
        "submission1_id": "s549872887",
        "crp_content": "\n x,y = list(map(int, input(\"\").split()))\n \n-if 4 * x < y:\n     print(\"No\")\n else:\n     if y % 2 == 0:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n",
        "origin_generated_text": "\n```\n x,y = list(map(int, input(\"\").split()))\n \n-if 4 * x < y:\n     print(\"No\")\n else:\n     if y % 2 == 0:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n```\n "
    },
    {
        "user_id": "u979126665",
        "problem_id": "p02922",
        "submission1_id": "s209182264",
        "crp_content": "\n a,b = map(int,input().split(\" \"))\n k = 1\n-while (a * k + 1) < b:\n     k +=1\n print(k)\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split(\" \"))\n k = 1\n-while (a * k + 1) < b:\n     k +=1\n print(k)\n```\n "
    },
    {
        "user_id": "u565812827",
        "problem_id": "p00375",
        "submission1_id": "s963872729",
        "crp_content": "\n a=int(input())\n-print((a-30)/2)\n \n",
        "origin_generated_text": "\n```\n a=int(input())\n-print((a-30)/2)\n \n```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p04019",
        "submission1_id": "s671837659",
        "crp_content": "\n s = list(input())\n-if 'S' in s and 'N' in s or not ('S' in s or 'N' in s) or 'E' in s and 'W' in s or not ('E' in s or 'W' in s):\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n s = list(input())\n-if 'S' in s and 'N' in s or not ('S' in s or 'N' in s) or 'E' in s and 'W' in s or not ('E' in s or 'W' in s):\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03677",
        "submission1_id": "s836041544",
        "crp_content": "\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n \n imos = [0] * (2 * m)\n diff = [0] * (2 * m)\n res = 0\n for i in range(n - 1):\n     l = a[i] - 1\n     r = a[i + 1] - 1\n     if l > r:\n         r += m\n     imos[l + 2] += 1\n     imos[r + 1] -= 1\n     diff[r + 1] = r - l - 1\n     res += r - l\n \n ans = [0] * (2 * m)\n tmp = 0\n \n for i in range(2 * m):\n     tmp += imos[i]\n     if i - 1 >= 0:\n         ans[i] += ans[i - 1] + tmp\n     else:\n         ans[i] += tmp\n     ans[i] -= diff[i]\n     \n max_ = 0\n for i in range(m):\n     max_ = max(max_, ans[i] + ans[i + m])\n print(res - max_)\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n \n imos = [0] * (2 * m)\n diff = [0] * (2 * m)\n res = 0\n for i in range(n - 1):\n     l = a[i] - 1\n     r = a[i + 1] - 1\n     if l > r:\n         r += m\n     imos[l + 2] += 1\n     imos[r + 1] -= 1\n     diff[r + 1] = r - l - 1\n     res += r - l\n \n ans = [0] * (2 * m)\n tmp = 0\n \n for i in range(2 * m):\n     tmp += imos[i]\n     if i - 1 >= 0:\n         ans[i] += ans[i - 1] + tmp\n     else:\n         ans[i] += tmp\n     ans[i] -= diff[i]\n     \n max_ = 0\n for i in range(m):\n     max_ = max(max_, ans[i] + ans[i + m])\n print(res - max_)\n```\n "
    },
    {
        "user_id": "u511379665",
        "problem_id": "p02912",
        "submission1_id": "s890154115",
        "crp_content": "\n N,M=map(int,input().split())\n A=list(map(int,input().split()))\n \n ans=0\n def cheap(x,y):\n     x=int(x/(2**y))\n     return x\n \n i=0\n while(i<M):\n-    sorted(A)\n-    A[0]=cheap(A[0],1)\n     i+=1\n \n for i in range(0,N):\n     ans+=A[i]\n \n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n N,M=map(int,input().split())\n A=list(map(int,input().split()))\n \n ans=0\n def cheap(x,y):\n     x=int(x/(2**y))\n     return x\n \n i=0\n while(i<M):\n-    sorted(A)\n-    A[0]=cheap(A[0],1)\n     i+=1\n \n for i in range(0,N):\n     ans+=A[i]\n \n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u798894056",
        "problem_id": "p03041",
        "submission1_id": "s343295932",
        "crp_content": "\n N, K = list(map(int, input().split()))\n s = input()\n-print(s.replace(s[K - 1], s[K - 1].lower()))\n",
        "origin_generated_text": "\n```\n N, K = list(map(int, input().split()))\n s = input()\n-print(s.replace(s[K - 1], s[K - 1].lower()))\n```\n "
    },
    {
        "user_id": "u516554284",
        "problem_id": "p02959",
        "submission1_id": "s012495194",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n c=0\n for i in range(n):\n   if a[i]>b[i]:\n     c+=b[i]\n   elif a[i]<=b[i]:\n    \n     if a[i+1]-(b[i]-a[i])>=0:\n       c+=b[i]\n-      a[i+1]==a[i+1]-(b[i]-a[i])\n     else:\n       c+=a[i+1]\n-      a[i+1]==0\n print(c)\n \n \n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n c=0\n for i in range(n):\n   if a[i]>b[i]:\n     c+=b[i]\n   elif a[i]<=b[i]:\n    \n     if a[i+1]-(b[i]-a[i])>=0:\n       c+=b[i]\n-      a[i+1]==a[i+1]-(b[i]-a[i])\n     else:\n       c+=a[i+1]\n-      a[i+1]==0\n print(c)\n \n \n```\n "
    },
    {
        "user_id": "u255673886",
        "problem_id": "p02767",
        "submission1_id": "s574132154",
        "crp_content": "\n n = int(input())\n x = list(map(int,input().split()))\n m = 10**10\n-for p in range(x[0],x[n-1]+1):\n     power = 0\n     for i in range(n):\n         power += (x[i]-p)**2\n     m = min(m,power)\n print(m)\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int,input().split()))\n m = 10**10\n-for p in range(x[0],x[n-1]+1):\n     power = 0\n     for i in range(n):\n         power += (x[i]-p)**2\n     m = min(m,power)\n print(m)\n```\n "
    },
    {
        "user_id": "u511449169",
        "problem_id": "p03036",
        "submission1_id": "s626400931",
        "crp_content": "\n r, d, x = map(int, input().split())\n for i in range(10):\n-  r = r*x-d\n-  print(r)\n",
        "origin_generated_text": "\n```\n r, d, x = map(int, input().split())\n for i in range(10):\n-  r = r*x-d\n-  print(r)\n```\n "
    },
    {
        "user_id": "u533713111",
        "problem_id": "p02886",
        "submission1_id": "s812498382",
        "crp_content": "\n N=int(input())\n d=list(map(int, input().split()))\n a=(sum(d))**2\n \n def square(list):\n     return [i ** 2 for i in list]\n \n b=sum(square(d))\n result=(a-b)/2\n-print(result)\n",
        "origin_generated_text": "\n```\n N=int(input())\n d=list(map(int, input().split()))\n a=(sum(d))**2\n \n def square(list):\n     return [i ** 2 for i in list]\n \n b=sum(square(d))\n result=(a-b)/2\n-print(result)\n```\n "
    },
    {
        "user_id": "u857408368",
        "problem_id": "p02887",
        "submission1_id": "s399056367",
        "crp_content": "\n N = int(input())\n S = str(input())\n \n-ans = [S[-1]]\n-\n-for i in range(N):\n-    if(ans[-1] != S[i]):\n-        ans.append(S[i])\n \n print(len(ans))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n S = str(input())\n \n-ans = [S[-1]]\n-\n-for i in range(N):\n-    if(ans[-1] != S[i]):\n-        ans.append(S[i])\n \n print(len(ans))\n \n```\n "
    },
    {
        "user_id": "u387080888",
        "problem_id": "p03102",
        "submission1_id": "s680264575",
        "crp_content": "\n a=tuple(map(int,input().split()))\n b=[]\n for i in range(a[0]+1):\n     b.append(list(map(int,input().split())))\n ans=0\n s=0\n for j in range(a[0]):\n     for k in range(a[1]):\n         s+=b[j][k]*b[0][k]\n     s+=a[2]\n     if s>0:\n         ans+=1\n     s=0\n print(ans)\n",
        "origin_generated_text": "\n```\n a=tuple(map(int,input().split()))\n b=[]\n for i in range(a[0]+1):\n     b.append(list(map(int,input().split())))\n ans=0\n s=0\n for j in range(a[0]):\n     for k in range(a[1]):\n         s+=b[j][k]*b[0][k]\n     s+=a[2]\n     if s>0:\n         ans+=1\n     s=0\n print(ans)\n```\n "
    },
    {
        "user_id": "u515052479",
        "problem_id": "p03087",
        "submission1_id": "s255059009",
        "crp_content": "\n n,q = map(int,input().split())\n s = list(input())\n base = [0]*n\n count = 0\n \n for i in range(n-1):\n   if (s[i] == \"A\") and (s[i+1] == \"C\"):\n     count = count + 1\n     base[i] = count\n   else:\n     base[i] = count\n \n base[n-1] = base[n-2]\n \n for i in range(q):\n   l,r = map(int,input().split())\n   ans = base[r-1] - base[l-1]\n   \n   if s[r-1] == \"A\":\n     ans = ans - 1\n   \n   if s[l-1] == \"A\":\n     ans = ans + 1\n     \n   print(ans)\n",
        "origin_generated_text": "\n```\n n,q = map(int,input().split())\n s = list(input())\n base = [0]*n\n count = 0\n \n for i in range(n-1):\n   if (s[i] == \"A\") and (s[i+1] == \"C\"):\n     count = count + 1\n     base[i] = count\n   else:\n     base[i] = count\n \n base[n-1] = base[n-2]\n \n for i in range(q):\n   l,r = map(int,input().split())\n   ans = base[r-1] - base[l-1]\n   \n   if s[r-1] == \"A\":\n     ans = ans - 1\n   \n   if s[l-1] == \"A\":\n     ans = ans + 1\n     \n   print(ans)\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03972",
        "submission1_id": "s818195498",
        "crp_content": "\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     w, h = LI()\n-    a = IR(w + h)\n-    a.sort()\n-    acc = list(itertools.accumulate(a))[::-1]\n-    ans = acc[0]\n-    for i in range(1, w + h, 2):\n-        ans += acc[i]\n-    print(ans)\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     w, h = LI()\n-    a = IR(w + h)\n-    a.sort()\n-    acc = list(itertools.accumulate(a))[::-1]\n-    ans = acc[0]\n-    for i in range(1, w + h, 2):\n-        ans += acc[i]\n-    print(ans)\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n```\n "
    },
    {
        "user_id": "u726212005",
        "problem_id": "p03041",
        "submission1_id": "s536678123",
        "crp_content": "\n import copy\n n,k=map(int,input().split())\n \n s=list(input())\n \n-print(s[0:k-1],end='')\n-print(s[k-1].lower(),end='')\n-print(s[k:],end='')\n",
        "origin_generated_text": "\n```\n import copy\n n,k=map(int,input().split())\n \n s=list(input())\n \n-print(s[0:k-1],end='')\n-print(s[k-1].lower(),end='')\n-print(s[k:],end='')\n```\n "
    },
    {
        "user_id": "u375695365",
        "problem_id": "p03036",
        "submission1_id": "s171725482",
        "crp_content": "\n n,d,x=map(int,input().split())\n for i in range(10):\n     x= n*x-d\n-print(x)\n",
        "origin_generated_text": "\n```\n n,d,x=map(int,input().split())\n for i in range(10):\n     x= n*x-d\n-print(x)\n```\n "
    },
    {
        "user_id": "u266874640",
        "problem_id": "p03272",
        "submission1_id": "s681015940",
        "crp_content": "\n N,i = map(int, input().split())\n-print(int(N - i))\n \n",
        "origin_generated_text": "\n```\n N,i = map(int, input().split())\n-print(int(N - i))\n \n```\n "
    },
    {
        "user_id": "u086503932",
        "problem_id": "p03573",
        "submission1_id": "s736241070",
        "crp_content": "\n A,B,C=map(int,input().split())\n-print(A)if A==B else print(B) if A==C else print(C) \n",
        "origin_generated_text": "\n```\n A,B,C=map(int,input().split())\n-print(A)if A==B else print(B) if A==C else print(C) \n```\n "
    },
    {
        "user_id": "u470735879",
        "problem_id": "p03573",
        "submission1_id": "s121843444",
        "crp_content": "\n a, b, c = map(int, input().split())\n \n if a == b:\n     print(c)\n elif b == c:\n     print(a)\n else:\n-    print(a)\n",
        "origin_generated_text": "\n```\n a, b, c = map(int, input().split())\n \n if a == b:\n     print(c)\n elif b == c:\n     print(a)\n else:\n-    print(a)\n```\n "
    },
    {
        "user_id": "u926393759",
        "problem_id": "p03054",
        "submission1_id": "s192399667",
        "crp_content": "\n h, w, n = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()[::-1]\n T = input()[::-1]\n \n-r_bound = w\n-l_bound = 1\n-d_bound = h\n-u_bound = 1\n \n remain = True\n \n if S[0] =='R':\n     r_bound -= 1\n if S[0] =='L':\n     l_bound += 1\n if S[0] =='D':\n     d_bound -= 1\n if S[0] =='U':\n     u_bound += 1\n \n for s, t in zip(S[1:], T[1:]):\n     if s =='R' and t !='L':\n         r_bound -= 1\n     if s =='L' and t !='R':\n         l_bound += 1\n     if s =='D' and t !='U':\n         d_bound -= 1\n     if s =='U' and t !='D':\n         u_bound += 1\n     if (r_bound < l_bound) or (d_bound < u_bound):\n         remain = False\n         break\n-if (sc < l_bound or sc > r_bound) or (sr < u_bound or sr > d_bound):\n     remain = False\n \n if remain:\n     print('YES')\n else:\n     print('NO')\n \n",
        "origin_generated_text": "\n```\n h, w, n = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()[::-1]\n T = input()[::-1]\n \n-r_bound = w\n-l_bound = 1\n-d_bound = h\n-u_bound = 1\n \n remain = True\n \n if S[0] =='R':\n     r_bound -= 1\n if S[0] =='L':\n     l_bound += 1\n if S[0] =='D':\n     d_bound -= 1\n if S[0] =='U':\n     u_bound += 1\n \n for s, t in zip(S[1:], T[1:]):\n     if s =='R' and t !='L':\n         r_bound -= 1\n     if s =='L' and t !='R':\n         l_bound += 1\n     if s =='D' and t !='U':\n         d_bound -= 1\n     if s =='U' and t !='D':\n         u_bound += 1\n     if (r_bound < l_bound) or (d_bound < u_bound):\n         remain = False\n         break\n-if (sc < l_bound or sc > r_bound) or (sr < u_bound or sr > d_bound):\n     remain = False\n \n if remain:\n     print('YES')\n else:\n     print('NO')\n \n```\n "
    },
    {
        "user_id": "u703528810",
        "problem_id": "p03274",
        "submission1_id": "s669279195",
        "crp_content": "\n N,K=map(int,input().split())\n x=list(map(int,input().split()))\n \n-ans=max(x)-min(x)\n \n for i in range(N-K+1):\n-    ans=min(ans,x[i+K-1]-x[i]+min(abs(x[i]),abs(x[i+K-1])))\n \n if N==1:\n     ans=x[0]\n print(ans)\n",
        "origin_generated_text": "\n```\n N,K=map(int,input().split())\n x=list(map(int,input().split()))\n \n-ans=max(x)-min(x)\n \n for i in range(N-K+1):\n-    ans=min(ans,x[i+K-1]-x[i]+min(abs(x[i]),abs(x[i+K-1])))\n \n if N==1:\n     ans=x[0]\n print(ans)\n```\n "
    },
    {
        "user_id": "u742505495",
        "problem_id": "p00006",
        "submission1_id": "s677927315",
        "crp_content": "\n import math\n import sys\n \n lines = input()\n-print(lines[0:len(lines)-1:-1])\n",
        "origin_generated_text": "\n```\n import math\n import sys\n \n lines = input()\n-print(lines[0:len(lines)-1:-1])\n```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p04017",
        "submission1_id": "s921008784",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n x = list(map(int, input().split()))\n L = int(input())\n n = N.bit_length()\n next_hotel = [[0]*n for _ in range(N)]\n for i in range(N):\n     index = bisect_right(x, x[i]+L)-1\n     \n     next_hotel[i][0] = index\n for i in range(1, n):\n     for j in range(N):\n         next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\n def count(a, b):\n     if a>b:\n         a, b = b, a\n     res = 0\n     for i in range(n):\n         if a >= b:\n             return  res\n         c = max(bisect_right(next_hotel[a], b)-1, 0)\n         a = next_hotel[a][c]\n         res+=2**c\n Q = int(input())\n for _ in range(Q):\n     a, b = map(int, input().split())\n-    print(count(a-1, b-1))\n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n x = list(map(int, input().split()))\n L = int(input())\n n = N.bit_length()\n next_hotel = [[0]*n for _ in range(N)]\n for i in range(N):\n     index = bisect_right(x, x[i]+L)-1\n     \n     next_hotel[i][0] = index\n for i in range(1, n):\n     for j in range(N):\n         next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\n def count(a, b):\n     if a>b:\n         a, b = b, a\n     res = 0\n     for i in range(n):\n         if a >= b:\n             return  res\n         c = max(bisect_right(next_hotel[a], b)-1, 0)\n         a = next_hotel[a][c]\n         res+=2**c\n Q = int(input())\n for _ in range(Q):\n     a, b = map(int, input().split())\n-    print(count(a-1, b-1))\n```\n "
    },
    {
        "user_id": "u999669171",
        "problem_id": "p03760",
        "submission1_id": "s900359958",
        "crp_content": "\n o = input()\n e = input()\n \n-for x,y in zip( o, e ) : print( x+y, end=\"\" )\n",
        "origin_generated_text": "\n```\n o = input()\n e = input()\n \n-for x,y in zip( o, e ) : print( x+y, end=\"\" )\n```\n "
    },
    {
        "user_id": "u821712904",
        "problem_id": "p02959",
        "submission1_id": "s816929275",
        "crp_content": "\n n=int(input())\n a=[int(i) for i in input().split()]\n b=[int(i) for i in input().split()]\n a1=a\n for i in range(n):\n   if b[i]>=a[i]+a[i+1]:\n     a[i],a[i+1]=0,0\n   elif b[i]>=a[i]:\n     a[i+1]=b[i]-a[i]\n     a[i]=0\n   else:\n     a[i]-=b[i]\n print(sum(a1)-sum(a))\n     \n",
        "origin_generated_text": "\n```\n n=int(input())\n a=[int(i) for i in input().split()]\n b=[int(i) for i in input().split()]\n a1=a\n for i in range(n):\n   if b[i]>=a[i]+a[i+1]:\n     a[i],a[i+1]=0,0\n   elif b[i]>=a[i]:\n     a[i+1]=b[i]-a[i]\n     a[i]=0\n   else:\n     a[i]-=b[i]\n print(sum(a1)-sum(a))\n     \n```\n "
    },
    {
        "user_id": "u641406334",
        "problem_id": "p03103",
        "submission1_id": "s495510870",
        "crp_content": "\n n, m = map(int,input().split())\n L = []\n-ans, cnt = 0, 0\n for i in range(n):\n   ab = list(map(int,input().split()))\n   L.append(ab)\n L.sort()\n for j in range(n):\n-  if m-cnt>=L[j][1]:\n-    cnt+=L[j][1]\n-    ans+=L[j][0]*L[j][1]\n-  else:\n-    ans+=L[j][0]*(m-cnt)\n-    break\n-  if ans==m:\n-    break\n print(ans)\n",
        "origin_generated_text": "\n```\n n, m = map(int,input().split())\n L = []\n-ans, cnt = 0, 0\n for i in range(n):\n   ab = list(map(int,input().split()))\n   L.append(ab)\n L.sort()\n for j in range(n):\n-  if m-cnt>=L[j][1]:\n-    cnt+=L[j][1]\n-    ans+=L[j][0]*L[j][1]\n-  else:\n-    ans+=L[j][0]*(m-cnt)\n-    break\n-  if ans==m:\n-    break\n print(ans)\n```\n "
    },
    {
        "user_id": "u626891113",
        "problem_id": "p02660",
        "submission1_id": "s529730160",
        "crp_content": "\n from collections import Counter\n n = int(input())\n ans = 0\n def primes(n):\n     is_p = [True]*(n + 1)\n     is_p[0] = False\n     is_p[1] = False\n     for i in range(2, int(n**0.5)+1):\n         if not is_p[i]:\n             continue\n         for j in range(i*2, n+1, i):\n             is_p[j] = False\n     return [i for i in range(n+1) if is_p[i]]\n \n-p = primes(10**6)\n \n dp = []\n cl = []\n n1 = n\n for i in p:\n     if n%i == 0:\n         cl.append(i)\n     while n%i == 0:\n         n = n/i\n         dp.append(i)\n     if n == 1:\n         break\n     if n == n1:\n         ans = 1\n \n c = Counter(dp)\n \n \n for i in cl:\n     cnt = 1\n     while c[i] >= cnt:\n         c[i] -= cnt\n         ans += 1\n         cnt += 1\n         \n print(ans)\n \n",
        "origin_generated_text": "\n```\n from collections import Counter\n n = int(input())\n ans = 0\n def primes(n):\n     is_p = [True]*(n + 1)\n     is_p[0] = False\n     is_p[1] = False\n     for i in range(2, int(n**0.5)+1):\n         if not is_p[i]:\n             continue\n         for j in range(i*2, n+1, i):\n             is_p[j] = False\n     return [i for i in range(n+1) if is_p[i]]\n \n-p = primes(10**6)\n \n dp = []\n cl = []\n n1 = n\n for i in p:\n     if n%i == 0:\n         cl.append(i)\n     while n%i == 0:\n         n = n/i\n         dp.append(i)\n     if n == 1:\n         break\n     if n == n1:\n         ans = 1\n \n c = Counter(dp)\n \n \n for i in cl:\n     cnt = 1\n     while c[i] >= cnt:\n         c[i] -= cnt\n         ans += 1\n         cnt += 1\n         \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s312714823",
        "crp_content": "\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n     drop(1,1,1)\n \n n = 0\n m = 0\n for f in field:\n     for e in f:\n         if e > m:\n             m = e\n         if e==0:\n             n+=1\n \n print(n)\n print(m)\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n     drop(1,1,1)\n \n n = 0\n m = 0\n for f in field:\n     for e in f:\n         if e > m:\n             m = e\n         if e==0:\n             n+=1\n \n print(n)\n print(m)\n \n \n```\n "
    },
    {
        "user_id": "u533511299",
        "problem_id": "p02954",
        "submission1_id": "s225430096",
        "crp_content": "\n if __name__ == '__main__':\n   str = input()\n   strList = [c for c in str]\n   strList.append('e')\n   strLength = len(strList)\n   rLength = 0\n   lLength = 0\n   i = 0\n   changePoint = 0\n \n   child = [0 for i in range(strLength)]\n \n   c = 'R'\n   \n   while(c != 'e'):\n     c = strList[i]\n     while(c == 'R'):\n       i += 1\n       c = strList[i]\n       rLength += 1\n     \n     changePoint = i\n     \n     while(c == 'L'):\n       i += 1\n       c = strList[i]\n       lLength += 1\n \n-    rRight = int(rLength/2)\n-    rLeft = rLength - rRight\n-\n-    lLeft = int(lLength/2)\n-    lRight = lLength - lLeft\n-\n-    child[changePoint-1] += rLeft + lLeft\n-    child[changePoint] += rRight + lRight\n-\n-    rLength = 0\n-    lLength = 0\n   \n   for numOfChild in child:\n     print(numOfChild, end=\"\")\n     print(' ', end=\"\")\n",
        "origin_generated_text": "\n```\n if __name__ == '__main__':\n   str = input()\n   strList = [c for c in str]\n   strList.append('e')\n   strLength = len(strList)\n   rLength = 0\n   lLength = 0\n   i = 0\n   changePoint = 0\n \n   child = [0 for i in range(strLength)]\n \n   c = 'R'\n   \n   while(c != 'e'):\n     c = strList[i]\n     while(c == 'R'):\n       i += 1\n       c = strList[i]\n       rLength += 1\n     \n     changePoint = i\n     \n     while(c == 'L'):\n       i += 1\n       c = strList[i]\n       lLength += 1\n \n-    rRight = int(rLength/2)\n-    rLeft = rLength - rRight\n-\n-    lLeft = int(lLength/2)\n-    lRight = lLength - lLeft\n-\n-    child[changePoint-1] += rLeft + lLeft\n-    child[changePoint] += rRight + lRight\n-\n-    rLength = 0\n-    lLength = 0\n   \n   for numOfChild in child:\n     print(numOfChild, end=\"\")\n     print(' ', end=\"\")\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s610052105",
        "crp_content": "\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \tl = mat_dot(l, j, m)\n \n print(l[0][0])\n",
        "origin_generated_text": "\n```\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \tl = mat_dot(l, j, m)\n \n print(l[0][0])\n```\n "
    },
    {
        "user_id": "u394244719",
        "problem_id": "p04019",
        "submission1_id": "s874638858",
        "crp_content": "\n import sys\n from collections import Counter\n \n inint = lambda: int(sys.stdin.readline())\n inintm = lambda: map(int, sys.stdin.readline().split())\n inintl = lambda: list(inintm())\n instrm = lambda: map(str, sys.stdin.readline().split())\n instrl = lambda: list(instrm())\n \n s = input()\n \n-if not (\"N\" in s and \"S\" in s):\n     print(\"No\")\n     exit()\n-    if not (\"E\" in s and \"W\" in s):\n         print(\"No\")\n         exit()\n \n print(\"Yes\")\n",
        "origin_generated_text": "\n```\n import sys\n from collections import Counter\n \n inint = lambda: int(sys.stdin.readline())\n inintm = lambda: map(int, sys.stdin.readline().split())\n inintl = lambda: list(inintm())\n instrm = lambda: map(str, sys.stdin.readline().split())\n instrl = lambda: list(instrm())\n \n s = input()\n \n-if not (\"N\" in s and \"S\" in s):\n     print(\"No\")\n     exit()\n-    if not (\"E\" in s and \"W\" in s):\n         print(\"No\")\n         exit()\n \n print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s019454965",
        "crp_content": "\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n dp[(0, 1, 2)] = 1\n \n def perm(i, j, k):\n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   else:\n-    dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                  + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                  +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n     return dp[(i, j, k)]\n \n print(perm(n-1, 0, k))\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n dp[(0, 1, 2)] = 1\n \n def perm(i, j, k):\n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   else:\n-    dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                  + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                  +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n     return dp[(i, j, k)]\n \n print(perm(n-1, 0, k))\n```\n "
    },
    {
        "user_id": "u730476362",
        "problem_id": "p03200",
        "submission1_id": "s852320838",
        "crp_content": "\n S = input()\n counter = 0\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n sum=0\n for i in range(len(S)):\n     if S[i]=='W':\n         sum+=i\n         counter+=1\n-print(sum-counter)\n",
        "origin_generated_text": "\n```\n S = input()\n counter = 0\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n sum=0\n for i in range(len(S)):\n     if S[i]=='W':\n         sum+=i\n         counter+=1\n-print(sum-counter)\n```\n "
    },
    {
        "user_id": "u857428111",
        "problem_id": "p03568",
        "submission1_id": "s090027677",
        "crp_content": "\n \n \n import sys\n input= lambda: sys.stdin.readline().rstrip()\n sys.setrecursionlimit(10**9)\n def pin(type=int):return map(type,input().split())\n def tupin(t=int):return tuple(pin(t))\n def lispin(t=int):return list(pin(t))\n \n def resolve():\n     N=int(input())\n     t=3**N\n     s=1\n     f=0\n     for a in pin():\n-        if a>1 and a%2:\n             f=1\n             s*=1\n         else:\n             s*=2\n \n     print(t-s)\n \n resolve()\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n input= lambda: sys.stdin.readline().rstrip()\n sys.setrecursionlimit(10**9)\n def pin(type=int):return map(type,input().split())\n def tupin(t=int):return tuple(pin(t))\n def lispin(t=int):return list(pin(t))\n \n def resolve():\n     N=int(input())\n     t=3**N\n     s=1\n     f=0\n     for a in pin():\n-        if a>1 and a%2:\n             f=1\n             s*=1\n         else:\n             s*=2\n \n     print(t-s)\n \n resolve()\n \n```\n "
    },
    {
        "user_id": "u627600101",
        "problem_id": "p02727",
        "submission1_id": "s432361046",
        "crp_content": "\n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort(reverse=True)\n \n sa = sum(p[:X])\n sb = sum(q[:Y])\n \n p.append(float('inf'))\n q.append(float('inf'))\n \n \n ans = sa + sb\n nr = 0\n np = X-1\n nq = Y-1\n while nr < len(r):\n   if r[nr] <= min(p[np], q[nq]):\n     break\n-  elif p[np] > r[nr] > q[nq]:\n     ans += r[nr] - q[nq]\n     nr += 1\n     nq -= 1\n     continue\n   else:\n     ans += r[nr] - p[np]\n     nr += 1\n     nq -= 1\n     continue\n   \n print(ans)\n",
        "origin_generated_text": "\n```\n X, Y, A, B, C = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort(reverse=True)\n \n sa = sum(p[:X])\n sb = sum(q[:Y])\n \n p.append(float('inf'))\n q.append(float('inf'))\n \n \n ans = sa + sb\n nr = 0\n np = X-1\n nq = Y-1\n while nr < len(r):\n   if r[nr] <= min(p[np], q[nq]):\n     break\n-  elif p[np] > r[nr] > q[nq]:\n     ans += r[nr] - q[nq]\n     nr += 1\n     nq -= 1\n     continue\n   else:\n     ans += r[nr] - p[np]\n     nr += 1\n     nq -= 1\n     continue\n   \n print(ans)\n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s374230710",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(5e10 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(5e10 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n```\n "
    },
    {
        "user_id": "u328751895",
        "problem_id": "p03079",
        "submission1_id": "s295110670",
        "crp_content": "\n A, B, C = map(int, input().split())\n-print('YES' if A == B == C else 'NO')\n",
        "origin_generated_text": "\n```\n A, B, C = map(int, input().split())\n-print('YES' if A == B == C else 'NO')\n```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p04019",
        "submission1_id": "s155717456",
        "crp_content": "\n s = input()\n-if s.count(\"N\") == s.count(\"S\") and s.count(\"W\") == s.count(\"E\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n s = input()\n-if s.count(\"N\") == s.count(\"S\") and s.count(\"W\") == s.count(\"E\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u836737505",
        "problem_id": "p03992",
        "submission1_id": "s107960937",
        "crp_content": "\n s = input()\n-print(s[:4]+\"\"+s[5:])\n",
        "origin_generated_text": "\n```\n s = input()\n-print(s[:4]+\"\"+s[5:])\n```\n "
    },
    {
        "user_id": "u766684188",
        "problem_id": "p02746",
        "submission1_id": "s740633465",
        "crp_content": "\n import sys\n input=sys.stdin.readline\n \n def dist(a,b,c,d,P3):\n     for p in P3:\n         da,ma=divmod(a,p)\n         dc,mc=divmod(c,p)\n         if da!=dc:\n             return abs(a-c)+abs(b-d)\n         if da!=1:\n             a,c=ma,mc\n             continue\n         db,mb=divmod(b,p)\n         dd,md=divmod(d,p)\n         if db==dd:\n             a,c=ma,mc\n             continue\n         return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n     return abs(a-c)+abs(b-d)\n \n def main():\n     q=int(input())\n     P3=[pow(3,i) for i in reversed(range(30))]\n     for _ in range(q):\n         a,b,c,d=map(lambda x: int(x)-1,input().split())\n-        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n \n if __name__=='__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys\n input=sys.stdin.readline\n \n def dist(a,b,c,d,P3):\n     for p in P3:\n         da,ma=divmod(a,p)\n         dc,mc=divmod(c,p)\n         if da!=dc:\n             return abs(a-c)+abs(b-d)\n         if da!=1:\n             a,c=ma,mc\n             continue\n         db,mb=divmod(b,p)\n         dd,md=divmod(d,p)\n         if db==dd:\n             a,c=ma,mc\n             continue\n         return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n     return abs(a-c)+abs(b-d)\n \n def main():\n     q=int(input())\n     P3=[pow(3,i) for i in reversed(range(30))]\n     for _ in range(q):\n         a,b,c,d=map(lambda x: int(x)-1,input().split())\n-        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n \n if __name__=='__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u725133562",
        "problem_id": "p04019",
        "submission1_id": "s290482881",
        "crp_content": "\n s = input()\n l = len(s)\n judge = 0\n if 'N' in s:\n     judge += 1\n if 'W' in s:\n-    judge += 1/1000\n if 'S' in s:\n     judge -= 1\n if 'E' in s:\n-    judge -= 1/1000\n \n print('Yes' if judge == 0 else 'No')\n",
        "origin_generated_text": "\n```\n s = input()\n l = len(s)\n judge = 0\n if 'N' in s:\n     judge += 1\n if 'W' in s:\n-    judge += 1/1000\n if 'S' in s:\n     judge -= 1\n if 'E' in s:\n-    judge -= 1/1000\n \n print('Yes' if judge == 0 else 'No')\n```\n "
    },
    {
        "user_id": "u144913062",
        "problem_id": "p03008",
        "submission1_id": "s457055677",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n N = int(input())\n ga, sa, ba = map(int, input().split())\n gb, sb, bb = map(int, input().split())\n A = [10**18] * 3\n B = [10**18] * 3\n dg = abs(ga - gb)\n ds = abs(sa - sb)\n db = abs(ba - bb)\n if ga < gb:\n     A[0] = ga\n elif ga > gb:\n     B[0] = gb\n if sa < sb:\n     A[1] = sa\n elif sa > sb:\n     B[1] = sb\n if ba < bb:\n     A[2] = ba\n elif ba > bb:\n     B[2] = bb\n \n def calc(X):\n     res = -1\n     for i in range(N+1):\n         if X[0] * i > N:\n             break\n         M = N - X[0] * i\n         j = M \n         k = (M - X[1] * j) \n         res = max(res, dg * i + ds * j + db * k)\n         k = M \n         j = (M - X[2] * k) \n         res = max(res, dg * i + ds * j + db * k)\n     return res\n \n-N += calc(A)\n-N += calc(B)\n-print(N)\n-\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n N = int(input())\n ga, sa, ba = map(int, input().split())\n gb, sb, bb = map(int, input().split())\n A = [10**18] * 3\n B = [10**18] * 3\n dg = abs(ga - gb)\n ds = abs(sa - sb)\n db = abs(ba - bb)\n if ga < gb:\n     A[0] = ga\n elif ga > gb:\n     B[0] = gb\n if sa < sb:\n     A[1] = sa\n elif sa > sb:\n     B[1] = sb\n if ba < bb:\n     A[2] = ba\n elif ba > bb:\n     B[2] = bb\n \n def calc(X):\n     res = -1\n     for i in range(N+1):\n         if X[0] * i > N:\n             break\n         M = N - X[0] * i\n         j = M \n         k = (M - X[1] * j) \n         res = max(res, dg * i + ds * j + db * k)\n         k = M \n         j = (M - X[2] * k) \n         res = max(res, dg * i + ds * j + db * k)\n     return res\n \n-N += calc(A)\n-N += calc(B)\n-print(N)\n-\n \n```\n "
    },
    {
        "user_id": "u255898796",
        "problem_id": "p02580",
        "submission1_id": "s302245909",
        "crp_content": "\n import collections\n a = input().split()\n M = int(a[2])\n hidari = []\n migi = []\n c = []\n  \n for i in range(M):\n   b = input().split()\n   hidari.append(b[0])\n   migi.append(b[1])\n   c.append(b)\n  \n countleft = collections.Counter(hidari)\n countright = collections.Counter(migi)\n leftmax = countleft.most_common()[0][1]\n rightmax = countright.most_common()[0][1]\n tempmax = int(leftmax + rightmax)\n  \n \n \n leftkeys = (list(countleft.keys())[list(countleft.values()).index(leftmax)])\n rightkeys = (list(countright.keys())[list(countright.values()).index(rightmax)])\n  \n leftkeyN = int(len(leftkeys))\n rightkeyN = int(len(rightkeys))\n flag = int(0)\n cnt = int(0)\n \n for i in range(leftkeyN):\n     if flag != 0:\n         break\n     else:\n         for P in range(rightkeyN):\n             for T in range(M):\n                 if c[T] == [leftkeys[i],rightkeys[P]]:\n                     cnt = cnt + 1\n             if cnt == 0:\n                 flag = flag + 1\n                 break\n             else:\n                 cnt = 0\n  \n if flag == 0:\n     print(int(tempmax - 1))\n else:\n     print(int(tempmax))\n     \n",
        "origin_generated_text": "\n```\n import collections\n a = input().split()\n M = int(a[2])\n hidari = []\n migi = []\n c = []\n  \n for i in range(M):\n   b = input().split()\n   hidari.append(b[0])\n   migi.append(b[1])\n   c.append(b)\n  \n countleft = collections.Counter(hidari)\n countright = collections.Counter(migi)\n leftmax = countleft.most_common()[0][1]\n rightmax = countright.most_common()[0][1]\n tempmax = int(leftmax + rightmax)\n  \n \n \n leftkeys = (list(countleft.keys())[list(countleft.values()).index(leftmax)])\n rightkeys = (list(countright.keys())[list(countright.values()).index(rightmax)])\n  \n leftkeyN = int(len(leftkeys))\n rightkeyN = int(len(rightkeys))\n flag = int(0)\n cnt = int(0)\n \n for i in range(leftkeyN):\n     if flag != 0:\n         break\n     else:\n         for P in range(rightkeyN):\n             for T in range(M):\n                 if c[T] == [leftkeys[i],rightkeys[P]]:\n                     cnt = cnt + 1\n             if cnt == 0:\n                 flag = flag + 1\n                 break\n             else:\n                 cnt = 0\n  \n if flag == 0:\n     print(int(tempmax - 1))\n else:\n     print(int(tempmax))\n     \n```\n "
    },
    {
        "user_id": "u311379832",
        "problem_id": "p03475",
        "submission1_id": "s085243671",
        "crp_content": "\n N = int(input())\n c = [list(map(int, input().split())) for _ in range(N - 1)]\n anslst = [0] * N\n for i in range(N - 1):\n     ans = c[i][1] + c[i][0]\n     for j in range(i + 1, N - 1):\n         if ans <= c[j][1]:\n             ans = c[j][1] + c[j][0]\n         else:\n             tmp = ans - c[j][1]\n             amari = tmp % c[j][2]\n             if amari == 0:\n                 ans += c[j][0]\n             else:\n                 ans += c[j][0] + amari\n \n     anslst[i] = ans\n \n for i in anslst:\n     print(i)\n",
        "origin_generated_text": "\n```\n N = int(input())\n c = [list(map(int, input().split())) for _ in range(N - 1)]\n anslst = [0] * N\n for i in range(N - 1):\n     ans = c[i][1] + c[i][0]\n     for j in range(i + 1, N - 1):\n         if ans <= c[j][1]:\n             ans = c[j][1] + c[j][0]\n         else:\n             tmp = ans - c[j][1]\n             amari = tmp % c[j][2]\n             if amari == 0:\n                 ans += c[j][0]\n             else:\n                 ans += c[j][0] + amari\n \n     anslst[i] = ans\n \n for i in anslst:\n     print(i)\n```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02963",
        "submission1_id": "s002977361",
        "crp_content": "\n def f():\n     s = int(input())\n-    y = s\n-    x = 10**9 - s%(10**9)\n \n-    ans = [0, 0, 10**9, 1, x, y]\n     \n     print(*ans)\n \n if __name__ == '__main__':\n     f()\n \n",
        "origin_generated_text": "\n```\n def f():\n     s = int(input())\n-    y = s\n-    x = 10**9 - s%(10**9)\n \n-    ans = [0, 0, 10**9, 1, x, y]\n     \n     print(*ans)\n \n if __name__ == '__main__':\n     f()\n \n```\n "
    },
    {
        "user_id": "u952130512",
        "problem_id": "p03998",
        "submission1_id": "s028771829",
        "crp_content": "\n A=input()\n B=input()\n C=input()\n s=\"a\"\n while len(A)!=0 and len(B)!=0 and len(C)!=0:\n   if s==\"a\":\n     s=A[0]\n     A=A[1:]\n     continue\n   if s==\"b\":\n     s=B[0]\n     B=B[1:]\n     continue\n   if s==\"c\":\n     s=C[0]\n     C=C[1:]\n     continue\n if len(A)==0:\n   print(\"A\")\n elif len(B)==0:\n   print(\"B\")\n else:\n   print(\"C\")\n \n",
        "origin_generated_text": "\n```\n A=input()\n B=input()\n C=input()\n s=\"a\"\n while len(A)!=0 and len(B)!=0 and len(C)!=0:\n   if s==\"a\":\n     s=A[0]\n     A=A[1:]\n     continue\n   if s==\"b\":\n     s=B[0]\n     B=B[1:]\n     continue\n   if s==\"c\":\n     s=C[0]\n     C=C[1:]\n     continue\n if len(A)==0:\n   print(\"A\")\n elif len(B)==0:\n   print(\"B\")\n else:\n   print(\"C\")\n \n```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03675",
        "submission1_id": "s888346405",
        "crp_content": "\n from sys import stdin\n \n N = int(stdin.readline().rstrip())\n A = stdin.readline().rstrip().split()\n \n B = A[::-1]\n \n ans = \"\"\n \n if N % 2 == 0:\n   for i in range(0,N,2):\n     ans += B[i]\n   for i in range(0,N,2):\n     ans += A[i]\n   \n else:\n   for i in range(0,N,2):\n     ans += B[i]\n-  for i in range(1,N,2):\n     ans += B[i]\n \n print(*list(ans))\n",
        "origin_generated_text": "\n```\n from sys import stdin\n \n N = int(stdin.readline().rstrip())\n A = stdin.readline().rstrip().split()\n \n B = A[::-1]\n \n ans = \"\"\n \n if N % 2 == 0:\n   for i in range(0,N,2):\n     ans += B[i]\n   for i in range(0,N,2):\n     ans += A[i]\n   \n else:\n   for i in range(0,N,2):\n     ans += B[i]\n-  for i in range(1,N,2):\n     ans += B[i]\n \n print(*list(ans))\n```\n "
    },
    {
        "user_id": "u038724782",
        "problem_id": "p02665",
        "submission1_id": "s155098193",
        "crp_content": "\n n = int(input())\n a_l = list(map(int,input().split()))\n \n if a_l[0] != 0:\n     if n == 0:\n         print(1)\n     else:\n         print(-1)\n     exit()\n \n tree = [0]*(n+1)\n tree[0] = 1\n for i in range(1,n+1):\n     tree[i] = (tree[i-1] - a_l[i-1]) * 2\n \n \n if tree[-1] < a_l[-1]:\n     print(-1)\n     exit()\n \n \n tree[-1] = a_l[-1]\n-for i in range(2,n+2):\n     \n     if tree[-i] == tree[-(i-1)] + a_l[-i]:\n         break\n     else:\n         tree[-i] = min(tree[-i], tree[-(i-1)] + a_l[-i])\n     \n \n \n \n \n \n \n \n \n \n \n \n \n ans = 0\n for val in tree:\n     ans += val\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a_l = list(map(int,input().split()))\n \n if a_l[0] != 0:\n     if n == 0:\n         print(1)\n     else:\n         print(-1)\n     exit()\n \n tree = [0]*(n+1)\n tree[0] = 1\n for i in range(1,n+1):\n     tree[i] = (tree[i-1] - a_l[i-1]) * 2\n \n \n if tree[-1] < a_l[-1]:\n     print(-1)\n     exit()\n \n \n tree[-1] = a_l[-1]\n-for i in range(2,n+2):\n     \n     if tree[-i] == tree[-(i-1)] + a_l[-i]:\n         break\n     else:\n         tree[-i] = min(tree[-i], tree[-(i-1)] + a_l[-i])\n     \n \n \n \n \n \n \n \n \n \n \n \n \n ans = 0\n for val in tree:\n     ans += val\n print(ans)\n```\n "
    },
    {
        "user_id": "u726823037",
        "problem_id": "p02625",
        "submission1_id": "s609723355",
        "crp_content": "\n n,m=map(int,input().split())\n a = 1\n-Mod=1e9+7\n d = [1]*(n+1)\n for i in range(n):\n   d[i+1]=((m-n+i)*d[i]+i*d[i-1])%Mod\n   a=a*(m-i)%Mod\n print(int(a*d[n]%Mod))\n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n a = 1\n-Mod=1e9+7\n d = [1]*(n+1)\n for i in range(n):\n   d[i+1]=((m-n+i)*d[i]+i*d[i-1])%Mod\n   a=a*(m-i)%Mod\n print(int(a*d[n]%Mod))\n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s623384412",
        "crp_content": "\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S%x2\n-y3 = S\n print(x1,y1,x2,y2,x3,y3)\n \n",
        "origin_generated_text": "\n```\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S%x2\n-y3 = S\n print(x1,y1,x2,y2,x3,y3)\n \n```\n "
    },
    {
        "user_id": "u305452255",
        "problem_id": "p02640",
        "submission1_id": "s025798421",
        "crp_content": "\n x, y = map(int, input().split())\n \n-if (y/2 - x) > x:\n   print('No')\n else:\n   print('Yes')\n \n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n \n-if (y/2 - x) > x:\n   print('No')\n else:\n   print('Yes')\n \n```\n "
    },
    {
        "user_id": "u144980750",
        "problem_id": "p03106",
        "submission1_id": "s489117375",
        "crp_content": "\n a=[0,0]\n s=[]\n a[0],a[1],k=map(int,input().split())\n-for i in range(1,max(a)+1):\n   if a[0]%i==0 and a[1]%i==0:\n     s.append(i)\n print(s[k-1])\n",
        "origin_generated_text": "\n```\n a=[0,0]\n s=[]\n a[0],a[1],k=map(int,input().split())\n-for i in range(1,max(a)+1):\n   if a[0]%i==0 and a[1]%i==0:\n     s.append(i)\n print(s[k-1])\n```\n "
    },
    {
        "user_id": "u119148115",
        "problem_id": "p04017",
        "submission1_id": "s661453007",
        "crp_content": "\n import sys\n def I(): return int(sys.stdin.readline().rstrip())\n def MI(): return map(int,sys.stdin.readline().rstrip().split())\n def LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n \n \n N = I()\n x = LI()\n L = I()\n \n from bisect import bisect_right\n \n arrive = [[0]*N for _ in range(30)]  \n for k in range(30):\n     if k == 0:\n         for i in range(N):\n             arrive[0][i] = bisect_right(x,x[i]+L)-1\n     else:\n         for i in range(N):\n             arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n \n \n def query(a,b):  \n     a -= 1\n     b -= 1\n     ans = 0\n     for k in range(29,-1,-1):\n         if arrive[k][a] > b:\n             continue\n         else:\n             a = arrive[k][a]\n             ans += 1 << k\n     print(ans)\n \n \n Q = I()\n for i in range(Q):\n     a,b = MI()\n     if a > b:\n         a,b = b,a\n-    query(a,b)\n \n",
        "origin_generated_text": "\n```\n import sys\n def I(): return int(sys.stdin.readline().rstrip())\n def MI(): return map(int,sys.stdin.readline().rstrip().split())\n def LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n \n \n N = I()\n x = LI()\n L = I()\n \n from bisect import bisect_right\n \n arrive = [[0]*N for _ in range(30)]  \n for k in range(30):\n     if k == 0:\n         for i in range(N):\n             arrive[0][i] = bisect_right(x,x[i]+L)-1\n     else:\n         for i in range(N):\n             arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n \n \n def query(a,b):  \n     a -= 1\n     b -= 1\n     ans = 0\n     for k in range(29,-1,-1):\n         if arrive[k][a] > b:\n             continue\n         else:\n             a = arrive[k][a]\n             ans += 1 << k\n     print(ans)\n \n \n Q = I()\n for i in range(Q):\n     a,b = MI()\n     if a > b:\n         a,b = b,a\n-    query(a,b)\n \n```\n "
    },
    {
        "user_id": "u235066013",
        "problem_id": "p03943",
        "submission1_id": "s203461786",
        "crp_content": "\n a,b,c=[int(i) for i in input().split()]\n if a+b==c or b+c==a or c+a==b:\n-  print('YES')\n else:\n-  print('NO')\n",
        "origin_generated_text": "\n```\n a,b,c=[int(i) for i in input().split()]\n if a+b==c or b+c==a or c+a==b:\n-  print('YES')\n else:\n-  print('NO')\n```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02385",
        "submission1_id": "s344803021",
        "crp_content": "\n \n \n \n class dice():\n     def __init__(self, arr):\n         self.top = arr[0]\n         self.south = arr[1]\n         self.east = arr[2]\n         self.west = arr[3]\n         self.north = arr[4]\n         self.bottom = arr[5]\n \n     def rotate(self, ope):\n         if ope == 'S':\n             self.top, self.north, self.bottom, self.south = self.north, self.bottom, self.south, self.top\n         elif ope == 'N':\n             self.top, self.south, self.bottom, self.north = self.south, self.bottom, self.north, self.top\n         elif ope == 'E':\n             self.top, self.west, self.bottom, self.east = self.west, self.bottom, self.east, self.top\n         elif ope == 'W':\n             self.top, self.east, self.bottom, self.west = self.east, self.bottom, self.west, self.top\n \n     def get_surfaces(self):\n         return [self.top, self.south, self.east, self.north, self.west, self.bottom]\n \n dc1 = dice([int(x) for x in input().split(' ')])\n dc2 = dice([int(x) for x in input().split(' ')])\n \n judged = False\n-if len((dc1.get_surfaces() and dc2.get_surfaces())) == 6:\n-    if dc2.top != dc1.top:\n-        opes = ['S', 'E', 'S', 'E', 'S']\n-        for op in opes:\n-            dc2.rotate(op)\n-            if dc2.top == dc1.top: break\n-    for i in range(4):\n-        if dc2.south == dc1.south:\n-            break\n-        dc2.rotate('R')\n-    if (dc1.east == dc2.east) and (dc1.north == dc2.north) and (dc1.bottom == dc2.bottom):\n-        judged = True\n \n if judged:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n \n \n \n class dice():\n     def __init__(self, arr):\n         self.top = arr[0]\n         self.south = arr[1]\n         self.east = arr[2]\n         self.west = arr[3]\n         self.north = arr[4]\n         self.bottom = arr[5]\n \n     def rotate(self, ope):\n         if ope == 'S':\n             self.top, self.north, self.bottom, self.south = self.north, self.bottom, self.south, self.top\n         elif ope == 'N':\n             self.top, self.south, self.bottom, self.north = self.south, self.bottom, self.north, self.top\n         elif ope == 'E':\n             self.top, self.west, self.bottom, self.east = self.west, self.bottom, self.east, self.top\n         elif ope == 'W':\n             self.top, self.east, self.bottom, self.west = self.east, self.bottom, self.west, self.top\n \n     def get_surfaces(self):\n         return [self.top, self.south, self.east, self.north, self.west, self.bottom]\n \n dc1 = dice([int(x) for x in input().split(' ')])\n dc2 = dice([int(x) for x in input().split(' ')])\n \n judged = False\n-if len((dc1.get_surfaces() and dc2.get_surfaces())) == 6:\n-    if dc2.top != dc1.top:\n-        opes = ['S', 'E', 'S', 'E', 'S']\n-        for op in opes:\n-            dc2.rotate(op)\n-            if dc2.top == dc1.top: break\n-    for i in range(4):\n-        if dc2.south == dc1.south:\n-            break\n-        dc2.rotate('R')\n-    if (dc1.east == dc2.east) and (dc1.north == dc2.north) and (dc1.bottom == dc2.bottom):\n-        judged = True\n \n if judged:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u554954744",
        "problem_id": "p03626",
        "submission1_id": "s232277236",
        "crp_content": "\n N = int(input())\n S = input()\n T = input()\n \n MOD = 10 ** 9\n \n ptn = []\n i = 0\n while i < N:\n     if S[i] == T[i]:\n         ptn.append(1)\n         i += 1\n     else:\n         ptn.append(2)\n         i += 2\n \n if ptn[0] == 1:\n     ans = 3\n else:\n     ans = 6\n \n for s, t in zip(ptn[:], ptn[1:]):\n     if s == 1 and t == 1:\n         ans *= 2\n     elif s == 1 and t == 2:\n         ans *= 2\n     elif s == 2 and t == 1:\n         ans *= 1\n     elif s == 2 and t == 2:\n         ans *= 3\n     ans %= MOD\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n S = input()\n T = input()\n \n MOD = 10 ** 9\n \n ptn = []\n i = 0\n while i < N:\n     if S[i] == T[i]:\n         ptn.append(1)\n         i += 1\n     else:\n         ptn.append(2)\n         i += 2\n \n if ptn[0] == 1:\n     ans = 3\n else:\n     ans = 6\n \n for s, t in zip(ptn[:], ptn[1:]):\n     if s == 1 and t == 1:\n         ans *= 2\n     elif s == 1 and t == 2:\n         ans *= 2\n     elif s == 2 and t == 1:\n         ans *= 1\n     elif s == 2 and t == 2:\n         ans *= 3\n     ans %= MOD\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u076512055",
        "problem_id": "p02880",
        "submission1_id": "s618186216",
        "crp_content": "\n N = int(input())\n \n ans = 'No'\n-for i in range(1,10):\n-    for j in range(i+1,10):\n         if N == i * j:\n             ans = 'Yes'\n             \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n \n ans = 'No'\n-for i in range(1,10):\n-    for j in range(i+1,10):\n         if N == i * j:\n             ans = 'Yes'\n             \n print(ans)\n```\n "
    },
    {
        "user_id": "u708890186",
        "problem_id": "p02767",
        "submission1_id": "s005062572",
        "crp_content": "\n import statistics\n n=int(input())\n x=[int(_) for _ in input().split()]\n mid=int(statistics.mean(x))\n-mmid=mid-1\n cnt=0\n cntm=0\n for i in range(len(x)):\n   cnt+= (x[i]-mid)**2\n   cntm+=(x[i]-mmid)**2\n print(min(cnt,cntm))\n   \n",
        "origin_generated_text": "\n```\n import statistics\n n=int(input())\n x=[int(_) for _ in input().split()]\n mid=int(statistics.mean(x))\n-mmid=mid-1\n cnt=0\n cntm=0\n for i in range(len(x)):\n   cnt+= (x[i]-mid)**2\n   cntm+=(x[i]-mmid)**2\n print(min(cnt,cntm))\n   \n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03546",
        "submission1_id": "s945543506",
        "crp_content": "\n h,w=map(int,input().split())\n d=[list(map(int,input().split())) for _ in range(10)]\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n       d[i][j]=min(d[i][j],d[i][k]+d[k][j])\n ans=0\n for _ in range(h):\n   arr=list(map(int,input().split()))\n   for i in range(w):\n     if arr[i]==-1:\n       continue\n     elif arr[i]==1:\n       continue\n     else:\n-      ans+=d[arr[i]][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n d=[list(map(int,input().split())) for _ in range(10)]\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n       d[i][j]=min(d[i][j],d[i][k]+d[k][j])\n ans=0\n for _ in range(h):\n   arr=list(map(int,input().split()))\n   for i in range(w):\n     if arr[i]==-1:\n       continue\n     elif arr[i]==1:\n       continue\n     else:\n-      ans+=d[arr[i]][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u782009499",
        "problem_id": "p02959",
        "submission1_id": "s926453128",
        "crp_content": "\n n = int(input())\n a = [int(i) for i in input().split()]\n b = [int(i) for i in input().split()]\n \n count = 0\n left = 0\n for i in range(n-1,-1, -1):\n     if b[i] - a[i+1] + left > 0:\n         count += a[i+1]\n         left = b[i] - a[i+1] + left\n-        if left > b[i]:\n-            left = b[i]\n     else:\n         count += b[i]\n         left = 0\n \n count += min(left, a[0])\n print(count)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = [int(i) for i in input().split()]\n b = [int(i) for i in input().split()]\n \n count = 0\n left = 0\n for i in range(n-1,-1, -1):\n     if b[i] - a[i+1] + left > 0:\n         count += a[i+1]\n         left = b[i] - a[i+1] + left\n-        if left > b[i]:\n-            left = b[i]\n     else:\n         count += b[i]\n         left = 0\n \n count += min(left, a[0])\n print(count)\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s250757919",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, 0, -1):\n         if X[P[j][a]] <= Y:\n             Y = X[P[j][a]]\n             num += 2 ** (j - 1)\n     print(num + 1)\n \n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, 0, -1):\n         if X[P[j][a]] <= Y:\n             Y = X[P[j][a]]\n             num += 2 ** (j - 1)\n     print(num + 1)\n \n```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s625716717",
        "crp_content": "\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n     x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    x3, y3 = divmod(s, 10**9)\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n     x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    x3, y3 = divmod(s, 10**9)\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03096",
        "submission1_id": "s386763220",
        "crp_content": "\n n = int(input())\n c = [int(input()) for i in range(n)]\n num,x = 1,[0]*(200001)\n c.append(0)\n x[c[0]]+=1\n for i in range(1,n):\n     x[c[i]] = (x[c[i]]+num)%(10**9+7)\n-    if c[i]-c[i+1]: num = x[c[i]]\n-    else: num = 0\n print(num)\n",
        "origin_generated_text": "\n```\n n = int(input())\n c = [int(input()) for i in range(n)]\n num,x = 1,[0]*(200001)\n c.append(0)\n x[c[0]]+=1\n for i in range(1,n):\n     x[c[i]] = (x[c[i]]+num)%(10**9+7)\n-    if c[i]-c[i+1]: num = x[c[i]]\n-    else: num = 0\n print(num)\n```\n "
    },
    {
        "user_id": "u840988663",
        "problem_id": "p02954",
        "submission1_id": "s700388640",
        "crp_content": "\n S=input()\n L=len(S)\n x=[1]*len(S)\n for i in range(L-2):\n     if S[i] == S[i+1] == \"R\":\n         x[i+2] += x[i]\n         x[i]=0\n for i in range(L-1,-1,-1):\n     if S[i] == S[i-1] ==\"L\":\n         x[i-2] += x[i]\n         x[i]=0\n \n-print(x)\n",
        "origin_generated_text": "\n```\n S=input()\n L=len(S)\n x=[1]*len(S)\n for i in range(L-2):\n     if S[i] == S[i+1] == \"R\":\n         x[i+2] += x[i]\n         x[i]=0\n for i in range(L-1,-1,-1):\n     if S[i] == S[i-1] ==\"L\":\n         x[i-2] += x[i]\n         x[i]=0\n \n-print(x)\n```\n "
    },
    {
        "user_id": "u625046108",
        "problem_id": "p02954",
        "submission1_id": "s555081292",
        "crp_content": "\n import math\n \n S = input()\n \n l = [0]\n ans = [0]*len(S)\n \n tmp = \"R\"\n for i in range(len(S)):\n   if tmp != S[i]:\n     l.append(i)\n   tmp = S[i]\n \n l.append(len(S))\n \n for i in range(1, len(l), 2):\n   ans[l[i]-1] = math.ceil((l[i]-l[i-1])/2) + math.floor((l[i+1]-l[i])/2)\n   ans[l[i]] = math.floor((l[i]-l[i-1])/2) + math.ceil((l[i+1]-l[i])/2)\n \n-print(ans)\n",
        "origin_generated_text": "\n```\n import math\n \n S = input()\n \n l = [0]\n ans = [0]*len(S)\n \n tmp = \"R\"\n for i in range(len(S)):\n   if tmp != S[i]:\n     l.append(i)\n   tmp = S[i]\n \n l.append(len(S))\n \n for i in range(1, len(l), 2):\n   ans[l[i]-1] = math.ceil((l[i]-l[i-1])/2) + math.floor((l[i+1]-l[i])/2)\n   ans[l[i]] = math.floor((l[i]-l[i-1])/2) + math.ceil((l[i+1]-l[i])/2)\n \n-print(ans)\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s077130107",
        "crp_content": "\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n dp[(0, 1, 2)] = 1\n \n def perm(i, j, k):\n \n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   else:\n     dp[(i, j, k)] = (j+j+1)*perm(i-1, j, k-2*j)\\\n                   + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                   +  1*perm(i-1, j-1, k-2*j)\n     return dp[(i, j, k)]\n \n-print(perm(n-1, 0, k))\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n dp[(0, 1, 2)] = 1\n \n def perm(i, j, k):\n \n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   else:\n     dp[(i, j, k)] = (j+j+1)*perm(i-1, j, k-2*j)\\\n                   + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                   +  1*perm(i-1, j-1, k-2*j)\n     return dp[(i, j, k)]\n \n-print(perm(n-1, 0, k))\n```\n "
    },
    {
        "user_id": "u856152065",
        "problem_id": "p02880",
        "submission1_id": "s048613864",
        "crp_content": "\n n = input()\n \n-ran = list(range(1,10))\n-product = [x*y for x in ran for y in ran]\n print(\"Yes\") if n in product else print(\"No\")\n",
        "origin_generated_text": "\n```\n n = input()\n \n-ran = list(range(1,10))\n-product = [x*y for x in ran for y in ran]\n print(\"Yes\") if n in product else print(\"No\")\n```\n "
    },
    {
        "user_id": "u374671031",
        "problem_id": "p02699",
        "submission1_id": "s370833199",
        "crp_content": "\n S, W  = map(int, input().split())\n \n-print(\"safe\" if S > W else\"unsefe\")\n",
        "origin_generated_text": "\n```\n S, W  = map(int, input().split())\n \n-print(\"safe\" if S > W else\"unsefe\")\n```\n "
    },
    {
        "user_id": "u979362546",
        "problem_id": "p03106",
        "submission1_id": "s745267567",
        "crp_content": "\n a, b, k = map(int, input().split())\n da = []\n db = []\n dc = []\n for i in range(1,a+1):\n     if a%i == 0:\n     \tda.append(i)\n \n for j in range(1, b+1):\n     if b%j == 0:\n     \tdb.append(j)\n",
        "origin_generated_text": "\n```\n a, b, k = map(int, input().split())\n da = []\n db = []\n dc = []\n for i in range(1,a+1):\n     if a%i == 0:\n     \tda.append(i)\n \n for j in range(1, b+1):\n     if b%j == 0:\n     \tdb.append(j)\n```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03054",
        "submission1_id": "s249165950",
        "crp_content": "\n def examA():\n     N = I()\n     ans = 0\n     print(ans)\n     return\n \n def examB():\n     H, W, N = LI()\n     start = LI()\n     S = SI(); T = SI()\n     for t,a in [[\"U\",\"D\"],[\"R\",\"L\"]]:\n         if t==\"U\":\n             n = H\n         else:\n             n = W\n         \n         l = 1; r = n\n         if S[-1]==t:\n             r -=1\n         elif S[-1]==a:\n             l +=1\n         for i in range(N-2,-1,-1):\n             if T[i]==t and l>1:\n                 l -= 1\n             elif T[i]==a and r<n:\n                 r += 1\n             if S[i] == t:\n                 r -= 1\n             elif S[i] == a:\n                 l += 1\n \n             if t==\"U\" and (r==0 or l==n):\n                 print(\"NO\")\n                 return\n             if t==\"R\" and (r==0 or l==n):\n                 print(\"NO\")\n                 return\n \n         if t==\"U\" and (not l<=start[1]<=r):\n             print(\"NO\")\n             return\n         elif t==\"R\" and (not l<=start[0]<=r):\n             print(\"NO\")\n             return\n     print(\"YES\")\n     return\n \n def examC():\n     ans = 0\n     print(ans)\n     return\n \n def examD():\n     ans = 0\n     print(ans)\n     return\n \n import sys,copy,bisect,itertools,heapq,math\n from heapq import heappop,heappush,heapify\n from collections import Counter,defaultdict,deque\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n def LSI(): return list(map(str,sys.stdin.readline().split()))\n def LS(): return sys.stdin.readline().split()\n def SI(): return sys.stdin.readline().strip()\n global mod,mod2,inf,alphabet\n mod = 10**9 + 7\n mod2 = 998244353\n inf = 10**18\n alphabet = [chr(ord('a') + i) for i in range(26)]\n \n if __name__ == '__main__':\n     examB()\n \n \n",
        "origin_generated_text": "\n```\n def examA():\n     N = I()\n     ans = 0\n     print(ans)\n     return\n \n def examB():\n     H, W, N = LI()\n     start = LI()\n     S = SI(); T = SI()\n     for t,a in [[\"U\",\"D\"],[\"R\",\"L\"]]:\n         if t==\"U\":\n             n = H\n         else:\n             n = W\n         \n         l = 1; r = n\n         if S[-1]==t:\n             r -=1\n         elif S[-1]==a:\n             l +=1\n         for i in range(N-2,-1,-1):\n             if T[i]==t and l>1:\n                 l -= 1\n             elif T[i]==a and r<n:\n                 r += 1\n             if S[i] == t:\n                 r -= 1\n             elif S[i] == a:\n                 l += 1\n \n             if t==\"U\" and (r==0 or l==n):\n                 print(\"NO\")\n                 return\n             if t==\"R\" and (r==0 or l==n):\n                 print(\"NO\")\n                 return\n \n         if t==\"U\" and (not l<=start[1]<=r):\n             print(\"NO\")\n             return\n         elif t==\"R\" and (not l<=start[0]<=r):\n             print(\"NO\")\n             return\n     print(\"YES\")\n     return\n \n def examC():\n     ans = 0\n     print(ans)\n     return\n \n def examD():\n     ans = 0\n     print(ans)\n     return\n \n import sys,copy,bisect,itertools,heapq,math\n from heapq import heappop,heappush,heapify\n from collections import Counter,defaultdict,deque\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n def LSI(): return list(map(str,sys.stdin.readline().split()))\n def LS(): return sys.stdin.readline().split()\n def SI(): return sys.stdin.readline().strip()\n global mod,mod2,inf,alphabet\n mod = 10**9 + 7\n mod2 = 998244353\n inf = 10**18\n alphabet = [chr(ord('a') + i) for i in range(26)]\n \n if __name__ == '__main__':\n     examB()\n \n \n```\n "
    },
    {
        "user_id": "u358919705",
        "problem_id": "p00026",
        "submission1_id": "s743554912",
        "crp_content": "\n a = [[0] * 14 for _ in range(14)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     x += 2\n     y += 2\n     for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n         a[x + d[0]][y + d[1]] += 1\n     if s >= 2:\n         for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n             a[x + d[0]][y + d[1]] += 1\n     if s == 3:\n         for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n             a[x + d[0]][y + d[1]] += 1\n print(sum(a[i][2:12].count(0) for i in range(2, 12)))\n print(max(max(a[i][2:12]) for i in range(2, 12)))\n-print(a)\n",
        "origin_generated_text": "\n```\n a = [[0] * 14 for _ in range(14)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     x += 2\n     y += 2\n     for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n         a[x + d[0]][y + d[1]] += 1\n     if s >= 2:\n         for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n             a[x + d[0]][y + d[1]] += 1\n     if s == 3:\n         for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n             a[x + d[0]][y + d[1]] += 1\n print(sum(a[i][2:12].count(0) for i in range(2, 12)))\n print(max(max(a[i][2:12]) for i in range(2, 12)))\n-print(a)\n```\n "
    },
    {
        "user_id": "u890638336",
        "problem_id": "p03080",
        "submission1_id": "s448965474",
        "crp_content": "\n N = input()\n s = input()\n \n-N1 = int(N)/2\n-\n import math\n-math.floor(N1)\n-N1= int(N1)\n \n list_s = list(s)\n list_s.sort()\n X = list_s[N1]\n \n if X=='R':\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N = input()\n s = input()\n \n-N1 = int(N)/2\n-\n import math\n-math.floor(N1)\n-N1= int(N1)\n \n list_s = list(s)\n list_s.sort()\n X = list_s[N1]\n \n if X=='R':\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u156815136",
        "problem_id": "p02580",
        "submission1_id": "s472949111",
        "crp_content": "\n \n \n \n from math import gcd\n from itertools import combinations,permutations,accumulate, product \n \n from collections import deque,defaultdict,Counter\n import decimal\n import re\n import math\n import bisect\n import heapq\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n import sys\n sys.setrecursionlimit(10000000)\n mod = 10**9 + 7\n \n \n INF = float('inf')\n from sys import stdin\n readline = stdin.readline\n def readInts():\n   return list(map(int,readline().split()))\n def readTuples():\n     return tuple(map(int,readline().split()))\n def I():\n     return int(readline())\n H,W,M = readInts()\n \n dic1 = defaultdict(int)\n dic2 = defaultdict(int)\n s = set()\n for i in range(M):\n     h,w = map(lambda x:int(x)-1, input().split())\n     dic1[h] += 1\n     dic2[w] += 1\n     s.add((h,w))\n \n \n ans = 0\n \n \n \n \n \n \n for h,w in s:\n     ans = max(ans, dic1[h] + dic2[w] - 1)\n \n max1 = max(dic1, key = dic1.get)\n max2 = max(dic2, key = dic2.get)\n if (max1,max2) in s:\n     pass\n else:\n     ans = max(ans, dic1[max1] + dic2[max2])\n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n \n \n from math import gcd\n from itertools import combinations,permutations,accumulate, product \n \n from collections import deque,defaultdict,Counter\n import decimal\n import re\n import math\n import bisect\n import heapq\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n import sys\n sys.setrecursionlimit(10000000)\n mod = 10**9 + 7\n \n \n INF = float('inf')\n from sys import stdin\n readline = stdin.readline\n def readInts():\n   return list(map(int,readline().split()))\n def readTuples():\n     return tuple(map(int,readline().split()))\n def I():\n     return int(readline())\n H,W,M = readInts()\n \n dic1 = defaultdict(int)\n dic2 = defaultdict(int)\n s = set()\n for i in range(M):\n     h,w = map(lambda x:int(x)-1, input().split())\n     dic1[h] += 1\n     dic2[w] += 1\n     s.add((h,w))\n \n \n ans = 0\n \n \n \n \n \n \n for h,w in s:\n     ans = max(ans, dic1[h] + dic2[w] - 1)\n \n max1 = max(dic1, key = dic1.get)\n max2 = max(dic2, key = dic2.get)\n if (max1,max2) in s:\n     pass\n else:\n     ans = max(ans, dic1[max1] + dic2[max2])\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u283452598",
        "problem_id": "p02385",
        "submission1_id": "s219857482",
        "crp_content": "\n class Dice():\n     def __init__(self,ary):\n         self.top = ary[0]\n         self.south = ary[1]\n         self.east = ary[2]\n         self.west = ary[3]\n         self.north = ary[4]\n         self.bottom = ary[5]\n \n     def get_top(self):\n         return self.top\n \n     def rotate_north(self):\n         self.top,self.south,self.north,self.bottom = self.south,self.bottom,self.top,self.north\n     \n     def rotate_south(self):\n         self.top,self.south,self.north,self.bottom = self.north,self.top,self.bottom,self.south\n \n     def rotate_west(self):\n         self.top,self.west,self.bottom,self.east = self.east,self.top,self.west,self.bottom\n \n     def rotate_east(self):\n         self.top,self.west,self.bottom,self.east = self.west,self.bottom,self.east,self.top\n \n     def rotate_horizon(self):\n         self.south,self.east,self.north,self.west = self.west,self.south,self.east,self.north\n \n     def get_east(self):\n         return self.east\n         \n dice1 = Dice(list(map(int,input().split())))\n dice2 = Dice(list(map(int,input().split())))\n \n h=\"\"\n \n for i in range(4):\n     dice2.rotate_west()\n     if dice1.top == dice2.top:\n         for _ in range(4):\n             dice2.rotate_horizon()\n             if dice1.south == dice2.south:\n                 if dice1.east == dice2.east:\n                     h = \"Yes\"\n for _ in range(4):\n     dice2.rotate_north()\n     if dice1.top == dice2.top:\n         for m in range(4):\n             dice2.rotate_horizon()\n             if dice1.south == dice2.south:\n                 if dice1.east == dice2.east:\n                     h = \"Yes\"\n if h:\n     print(h)\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n class Dice():\n     def __init__(self,ary):\n         self.top = ary[0]\n         self.south = ary[1]\n         self.east = ary[2]\n         self.west = ary[3]\n         self.north = ary[4]\n         self.bottom = ary[5]\n \n     def get_top(self):\n         return self.top\n \n     def rotate_north(self):\n         self.top,self.south,self.north,self.bottom = self.south,self.bottom,self.top,self.north\n     \n     def rotate_south(self):\n         self.top,self.south,self.north,self.bottom = self.north,self.top,self.bottom,self.south\n \n     def rotate_west(self):\n         self.top,self.west,self.bottom,self.east = self.east,self.top,self.west,self.bottom\n \n     def rotate_east(self):\n         self.top,self.west,self.bottom,self.east = self.west,self.bottom,self.east,self.top\n \n     def rotate_horizon(self):\n         self.south,self.east,self.north,self.west = self.west,self.south,self.east,self.north\n \n     def get_east(self):\n         return self.east\n         \n dice1 = Dice(list(map(int,input().split())))\n dice2 = Dice(list(map(int,input().split())))\n \n h=\"\"\n \n for i in range(4):\n     dice2.rotate_west()\n     if dice1.top == dice2.top:\n         for _ in range(4):\n             dice2.rotate_horizon()\n             if dice1.south == dice2.south:\n                 if dice1.east == dice2.east:\n                     h = \"Yes\"\n for _ in range(4):\n     dice2.rotate_north()\n     if dice1.top == dice2.top:\n         for m in range(4):\n             dice2.rotate_horizon()\n             if dice1.south == dice2.south:\n                 if dice1.east == dice2.east:\n                     h = \"Yes\"\n if h:\n     print(h)\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03200",
        "submission1_id": "s832538383",
        "crp_content": "\n \n import sys, math, fractions, itertools, collections, copy, heapq\n \n \n def solve(S: str):\n     counter = 0\n     tmp = S[0]\n     for s in S[1:]:\n         if s == tmp[-1]:\n             tmp = tmp + s\n         elif s == 'W' and tmp[-1] == 'B':\n             tmp = tmp + s\n         else:\n             counter += 2 * min(tmp.count('B'), tmp.count('W'))\n             tmp = s\n     counter += 2 * min(tmp.count('B'), tmp.count('W'))\n     print(counter)\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S = next(tokens)  \n     solve(S)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys, math, fractions, itertools, collections, copy, heapq\n \n \n def solve(S: str):\n     counter = 0\n     tmp = S[0]\n     for s in S[1:]:\n         if s == tmp[-1]:\n             tmp = tmp + s\n         elif s == 'W' and tmp[-1] == 'B':\n             tmp = tmp + s\n         else:\n             counter += 2 * min(tmp.count('B'), tmp.count('W'))\n             tmp = s\n     counter += 2 * min(tmp.count('B'), tmp.count('W'))\n     print(counter)\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S = next(tokens)  \n     solve(S)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03626",
        "submission1_id": "s956560642",
        "crp_content": "\n N = int(input())\n s1 = input()\n s2 = input()\n \n MOD = int(1e9) + 7\n \n tate = \"tate\"\n yoko = \"yoko\"\n \n i = 0\n ans = 0\n pre = \"\"\n if s1[i] == s2[i]:\n     ans = 3\n     i += 1\n     pre = tate\n else:\n     ans = 6\n     i += 2\n     pre = yoko\n \n while i < N:\n     if s1[i] == s2[i]:\n         if pre == tate:\n             ans *= 2\n         elif pre == yoko:\n             ans *= 1\n         i += 1\n         pre = tate\n     else:\n         if pre == tate:\n             ans *= 2\n         elif pre == yoko:\n             ans *= 2\n         i += 2\n         pre = yoko\n     ans %= MOD\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n s1 = input()\n s2 = input()\n \n MOD = int(1e9) + 7\n \n tate = \"tate\"\n yoko = \"yoko\"\n \n i = 0\n ans = 0\n pre = \"\"\n if s1[i] == s2[i]:\n     ans = 3\n     i += 1\n     pre = tate\n else:\n     ans = 6\n     i += 2\n     pre = yoko\n \n while i < N:\n     if s1[i] == s2[i]:\n         if pre == tate:\n             ans *= 2\n         elif pre == yoko:\n             ans *= 1\n         i += 1\n         pre = tate\n     else:\n         if pre == tate:\n             ans *= 2\n         elif pre == yoko:\n             ans *= 2\n         i += 2\n         pre = yoko\n     ans %= MOD\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03300",
        "submission1_id": "s550101020",
        "crp_content": "\n from itertools import accumulate\n \n \n def search_ab(sss, cursor):\n     \n     ai = aaa.index(cursor)\n     tmp_cur = bbb[ai]\n     max_cur = sss.index(0, cursor)\n     repeat = 1\n     while tmp_cur < max_cur:\n         cur = s.find('a', tmp_cur, max_cur)\n         if cur == -1:\n             break\n         ai = aaa.index(cur, ai)\n         tmp_cur = bbb[ai]\n         repeat += 1\n     return repeat, max_cur + 1\n \n \n def search_ba(sss, cursor):\n     \n     first_bi = bbb.index(cursor)\n     max_cursor = sss.index(0, cursor)\n     last_bi = aaa.index(max_cursor)\n \n     tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n     tmp_max = ''\n     for i in range(last_bi, first_bi - 1, -1):\n         tmp_buf[aaa[i] - cursor] = 'a'\n         tmp_buf[bbb[i] - cursor] = 'b'\n         tmp = ''.join(tmp_buf)\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max, max_cursor + 1\n \n \n def integrate(parts_b):\n     tmp_max = ''\n     for pb in reversed(parts_b):\n         tmp = pb + tmp_max\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max\n \n \n n = int(input())\n s = input()\n \n n2 = n * 2\n sss = []\n aaa, bbb = [], []\n for i, c in enumerate(s):\n     if c == 'a':\n         aaa.append(i)\n         sss.append(-1)\n     else:\n         bbb.append(i)\n         sss.append(1)\n sss = list(accumulate(sss))\n repeat_a = 0\n parts_b = []\n cursor = 0\n while cursor < n2:\n     c = sss[cursor]\n     if c < 0:\n         repeat, cursor = search_ab(sss, cursor)\n         repeat_a += repeat\n     else:\n         tmp, cursor = search_ba(sss, cursor)\n         parts_b.append(tmp)\n if parts_b:\n     print(integrate(parts_b))\n else:\n-    print('ab' * repeat_a)\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n \n def search_ab(sss, cursor):\n     \n     ai = aaa.index(cursor)\n     tmp_cur = bbb[ai]\n     max_cur = sss.index(0, cursor)\n     repeat = 1\n     while tmp_cur < max_cur:\n         cur = s.find('a', tmp_cur, max_cur)\n         if cur == -1:\n             break\n         ai = aaa.index(cur, ai)\n         tmp_cur = bbb[ai]\n         repeat += 1\n     return repeat, max_cur + 1\n \n \n def search_ba(sss, cursor):\n     \n     first_bi = bbb.index(cursor)\n     max_cursor = sss.index(0, cursor)\n     last_bi = aaa.index(max_cursor)\n \n     tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n     tmp_max = ''\n     for i in range(last_bi, first_bi - 1, -1):\n         tmp_buf[aaa[i] - cursor] = 'a'\n         tmp_buf[bbb[i] - cursor] = 'b'\n         tmp = ''.join(tmp_buf)\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max, max_cursor + 1\n \n \n def integrate(parts_b):\n     tmp_max = ''\n     for pb in reversed(parts_b):\n         tmp = pb + tmp_max\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max\n \n \n n = int(input())\n s = input()\n \n n2 = n * 2\n sss = []\n aaa, bbb = [], []\n for i, c in enumerate(s):\n     if c == 'a':\n         aaa.append(i)\n         sss.append(-1)\n     else:\n         bbb.append(i)\n         sss.append(1)\n sss = list(accumulate(sss))\n repeat_a = 0\n parts_b = []\n cursor = 0\n while cursor < n2:\n     c = sss[cursor]\n     if c < 0:\n         repeat, cursor = search_ab(sss, cursor)\n         repeat_a += repeat\n     else:\n         tmp, cursor = search_ba(sss, cursor)\n         parts_b.append(tmp)\n if parts_b:\n     print(integrate(parts_b))\n else:\n-    print('ab' * repeat_a)\n \n```\n "
    },
    {
        "user_id": "u172035535",
        "problem_id": "p03274",
        "submission1_id": "s320337327",
        "crp_content": "\n N,K = map(int,input().split())\n X = list(map(int,input().split()))\n ans = 10**9\n for i in range(N-K+1):\n-    ans = min(ans,abs(X[i])+abs(X[i+K-1])+min(abs(X[i]),abs(X[i+K-1])))\n print(ans)\n",
        "origin_generated_text": "\n```\n N,K = map(int,input().split())\n X = list(map(int,input().split()))\n ans = 10**9\n for i in range(N-K+1):\n-    ans = min(ans,abs(X[i])+abs(X[i+K-1])+min(abs(X[i]),abs(X[i+K-1])))\n print(ans)\n```\n "
    },
    {
        "user_id": "u742729271",
        "problem_id": "p03760",
        "submission1_id": "s524083743",
        "crp_content": "\n O = input()\n E = input()\n ans = \"\"\n for i in range(len(E)):\n   ans+=O[i]\n-  ans+=E[i]\n   \n if len(O)%2==1:\n   ans+=O[len(O)-1]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n O = input()\n E = input()\n ans = \"\"\n for i in range(len(E)):\n   ans+=O[i]\n-  ans+=E[i]\n   \n if len(O)%2==1:\n   ans+=O[len(O)-1]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u350064373",
        "problem_id": "p02407",
        "submission1_id": "s813263493",
        "crp_content": "\n input()\n list1 = list(map(int, input().split()))\n list1.sort()\n result=\"\"\n for i in range(0,len(list1)):\n     result += str(list1[i])+\" \"\n print(result)\n",
        "origin_generated_text": "\n```\n input()\n list1 = list(map(int, input().split()))\n list1.sort()\n result=\"\"\n for i in range(0,len(list1)):\n     result += str(list1[i])+\" \"\n print(result)\n```\n "
    },
    {
        "user_id": "u277353449",
        "problem_id": "p02959",
        "submission1_id": "s197264580",
        "crp_content": "\n N=int(input())\n a=input().split()\n b=input().split()\n for i in range(0,N):\n   a[i]=int(a[i])\n   b[i]=int(b[i])\n a[N]=int(a[N])\n answer=sum(a)\n for i in range(0,N):\n     c=b[i]-a[i]\n     if c<0:\n         a[i]=-c\n         b[i]=0\n     else:\n         a[i]=0\n         b[i]=c\n     d=b[i]-a[i+1]\n     if d<0:\n-        a[i+1]=-c\n         b[i]=0\n     else:\n         a[i+1]=0\n         b[i]=c\n print (answer-sum(a))\n",
        "origin_generated_text": "\n```\n N=int(input())\n a=input().split()\n b=input().split()\n for i in range(0,N):\n   a[i]=int(a[i])\n   b[i]=int(b[i])\n a[N]=int(a[N])\n answer=sum(a)\n for i in range(0,N):\n     c=b[i]-a[i]\n     if c<0:\n         a[i]=-c\n         b[i]=0\n     else:\n         a[i]=0\n         b[i]=c\n     d=b[i]-a[i+1]\n     if d<0:\n-        a[i+1]=-c\n         b[i]=0\n     else:\n         a[i+1]=0\n         b[i]=c\n print (answer-sum(a))\n```\n "
    },
    {
        "user_id": "u374935093",
        "problem_id": "p02660",
        "submission1_id": "s905812546",
        "crp_content": "\n import math\n data = input()\n target = int(data)\n \n def primes(n):\n     is_prime = [True] * (n + 1)\n     is_prime[0] = False\n     is_prime[1] = False\n     for i in range(2, int(n**0.5) + 1):\n         if not is_prime[i]:\n             continue\n         for j in range(i * 2, n + 1, i):\n             is_prime[j] = False\n     return [i for i in range(n + 1) if is_prime[i]]\n \n list = primes(1000000)\n result =[]\n for i in list:\n     check = target\n     k = 0\n     while True:\n         if check % i != 0:\n             break\n         else:\n             check = check/i\n             k +=1\n     result.append(k)\n \n ans = 0\n for j in result:\n     y = 0\n     z = j\n     while z > y:\n         y += 1\n         z -= y\n         ans +=1\n if ans == 0 and target != 1:\n     ans =1        \n print(ans)\n",
        "origin_generated_text": "\n```\n import math\n data = input()\n target = int(data)\n \n def primes(n):\n     is_prime = [True] * (n + 1)\n     is_prime[0] = False\n     is_prime[1] = False\n     for i in range(2, int(n**0.5) + 1):\n         if not is_prime[i]:\n             continue\n         for j in range(i * 2, n + 1, i):\n             is_prime[j] = False\n     return [i for i in range(n + 1) if is_prime[i]]\n \n list = primes(1000000)\n result =[]\n for i in list:\n     check = target\n     k = 0\n     while True:\n         if check % i != 0:\n             break\n         else:\n             check = check/i\n             k +=1\n     result.append(k)\n \n ans = 0\n for j in result:\n     y = 0\n     z = j\n     while z > y:\n         y += 1\n         z -= y\n         ans +=1\n if ans == 0 and target != 1:\n     ans =1        \n print(ans)\n```\n "
    },
    {
        "user_id": "u446711904",
        "problem_id": "p03729",
        "submission1_id": "s271837643",
        "crp_content": "\n-a,b,c=input().split();print('NYoe s'[a[-1]==b[0] and b[-1]==c[0]::2])\n",
        "origin_generated_text": "\n```\n-a,b,c=input().split();print('NYoe s'[a[-1]==b[0] and b[-1]==c[0]::2])\n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s150260949",
        "crp_content": "\n h,w,n=[int(j) for j in input().split()]\n r,c=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=c\n for i in range(n):\n     if s[i]==\"R\":\n         x+=1\n     if t[i]==\"L\" and x>1:\n         x-=1\n if not 1<=x<=w:\n     print(\"NO\")\n     exit()\n \n \n x=c\n for i in range(n):\n     if s[i]==\"L\":\n         x-=1\n     if t[i]==\"R\" and x<w:\n         x+=1\n if not 1<=x<=w:\n     print(\"NO\")\n     exit()\n \n \n x=r\n for i in range(n):\n     if s[i]==\"U\":\n         x+=1\n     if t[i]==\"D\" and x>1:\n         x-=1\n if not 1<=x<=h:\n     print(\"NO\")\n     exit()\n \n \n x=r\n for i in range(n):\n     if s[i]==\"D\":\n         x-=1\n     if t[i]==\"U\" and x<h:\n         x+=1\n if not 1<=x<=h:\n     print(\"NO\")\n     exit()\n print(\"YES\")\n",
        "origin_generated_text": "\n```\n h,w,n=[int(j) for j in input().split()]\n r,c=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=c\n for i in range(n):\n     if s[i]==\"R\":\n         x+=1\n     if t[i]==\"L\" and x>1:\n         x-=1\n if not 1<=x<=w:\n     print(\"NO\")\n     exit()\n \n \n x=c\n for i in range(n):\n     if s[i]==\"L\":\n         x-=1\n     if t[i]==\"R\" and x<w:\n         x+=1\n if not 1<=x<=w:\n     print(\"NO\")\n     exit()\n \n \n x=r\n for i in range(n):\n     if s[i]==\"U\":\n         x+=1\n     if t[i]==\"D\" and x>1:\n         x-=1\n if not 1<=x<=h:\n     print(\"NO\")\n     exit()\n \n \n x=r\n for i in range(n):\n     if s[i]==\"D\":\n         x-=1\n     if t[i]==\"U\" and x<h:\n         x+=1\n if not 1<=x<=h:\n     print(\"NO\")\n     exit()\n print(\"YES\")\n```\n "
    },
    {
        "user_id": "u761529120",
        "problem_id": "p03625",
        "submission1_id": "s915349997",
        "crp_content": "\n import collections\n \n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     \n     B = collections.Counter(A)\n \n     c = []\n \n     for k, v in B.items():\n         if v >= 2:\n             c.append(k)\n         if v >= 4:\n             c.append(k)\n     if len(c) < 2:\n         print(0)\n     else:\n-        c.sort\n         print(c[-1] * c[-2])\n \n main()\n",
        "origin_generated_text": "\n```\n import collections\n \n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     \n     B = collections.Counter(A)\n \n     c = []\n \n     for k, v in B.items():\n         if v >= 2:\n             c.append(k)\n         if v >= 4:\n             c.append(k)\n     if len(c) < 2:\n         print(0)\n     else:\n-        c.sort\n         print(c[-1] * c[-2])\n \n main()\n```\n "
    },
    {
        "user_id": "u056801547",
        "problem_id": "p02914",
        "submission1_id": "s095687594",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n-a.append(0)\n-for i in range(n):\n-    a[n] ^= a[i]\n-    \n-    \n-for i in range(n):\n-    a[i] &= ~a[n]\n-r = 0\n-for i in range(60, -1, -1):\n-    for j in range(r, n):\n-        if (a[j] >> i) & 1:\n-            a[r], a[j] = a[j], a[r]\n-            break\n-    else:\n-        continue\n-        \n-    for j in range(n):\n-        if (a[j] == a[r]):\n-            continue\n-        if (a[j]>>i) & 1:\n-            a[j] ^= a[r]\n-    r+=1\n-s = 0\n-for i in range(r):\n-    s ^= a[i]\n-    \n-print(s*2 + a[n])\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n-a.append(0)\n-for i in range(n):\n-    a[n] ^= a[i]\n-    \n-    \n-for i in range(n):\n-    a[i] &= ~a[n]\n-r = 0\n-for i in range(60, -1, -1):\n-    for j in range(r, n):\n-        if (a[j] >> i) & 1:\n-            a[r], a[j] = a[j], a[r]\n-            break\n-    else:\n-        continue\n-        \n-    for j in range(n):\n-        if (a[j] == a[r]):\n-            continue\n-        if (a[j]>>i) & 1:\n-            a[j] ^= a[r]\n-    r+=1\n-s = 0\n-for i in range(r):\n-    s ^= a[i]\n-    \n-print(s*2 + a[n])\n```\n "
    },
    {
        "user_id": "u675168568",
        "problem_id": "p02640",
        "submission1_id": "s008752760",
        "crp_content": "\n x, y = map(int, input().split())\n \n-if (4*x >= y and y%2 == 0):\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n \n-if (4*x >= y and y%2 == 0):\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u379956761",
        "problem_id": "p00023",
        "submission1_id": "s999323619",
        "crp_content": "\n import sys\n import math\n \n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n \n     distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n-    if ra + rb < distance:\n-        if (ra < rb and distance + ra < rb):\n             print(-2)\n-        elif (rb < ra and distance + rb < ra):\n             print(2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import sys\n import math\n \n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n \n     distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n-    if ra + rb < distance:\n-        if (ra < rb and distance + ra < rb):\n             print(-2)\n-        elif (rb < ra and distance + rb < ra):\n             print(2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u914773681",
        "problem_id": "p03102",
        "submission1_id": "s905156945",
        "crp_content": "\n def main():\n     N, M, C = map(int, input().split())\n     \n     B = list(map(int, input().split())) \n     A = [[] for i in range(N)]\n     for i in range(N):\n         A[i] = list(map(int, input().split()))\n-    print('B=',B)\n-    print('A=',A)\n     \n     num = 0\n     for i in range(N):\n         sum = 0\n         for j in range(M):\n             sum = sum + A[i][j]*B[j]\n         result = sum + C\n         if (result > 0 ):\n             num = num + 1\n     print(num)\n     return num\n \n main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     N, M, C = map(int, input().split())\n     \n     B = list(map(int, input().split())) \n     A = [[] for i in range(N)]\n     for i in range(N):\n         A[i] = list(map(int, input().split()))\n-    print('B=',B)\n-    print('A=',A)\n     \n     num = 0\n     for i in range(N):\n         sum = 0\n         for j in range(M):\n             sum = sum + A[i][j]*B[j]\n         result = sum + C\n         if (result > 0 ):\n             num = num + 1\n     print(num)\n     return num\n \n main()\n \n```\n "
    },
    {
        "user_id": "u583014981",
        "problem_id": "p03079",
        "submission1_id": "s296378527",
        "crp_content": "\n def regtri(a, b, c):\n     if a == b and b == c:\n         return 'Yes'\n     else:\n         return 'No'\n  \n a, b, c = (int(i) for i in input().split())\n-regtri(a, b, c)\n",
        "origin_generated_text": "\n```\n def regtri(a, b, c):\n     if a == b and b == c:\n         return 'Yes'\n     else:\n         return 'No'\n  \n a, b, c = (int(i) for i in input().split())\n-regtri(a, b, c)\n```\n "
    },
    {
        "user_id": "u413165887",
        "problem_id": "p03096",
        "submission1_id": "s008414950",
        "crp_content": "\n n = int(input())\n c = [int(input()) for _i in range(n)]\n \n dic = {}\n dp = [0 for _i in range(n)]\n dp[0] = 1\n for i in range(1, n):\n     if c[i-1] != c[i]:\n         if c[i] in dic:\n             dp[i] += dic[c[i]]\n             dic[c[i]] += dp[i-1]\n         else:\n             dic[c[i]] = dp[i-1] + 1\n-    dp[i] += dp[i-1]\n print(dp[n-1])\n",
        "origin_generated_text": "\n```\n n = int(input())\n c = [int(input()) for _i in range(n)]\n \n dic = {}\n dp = [0 for _i in range(n)]\n dp[0] = 1\n for i in range(1, n):\n     if c[i-1] != c[i]:\n         if c[i] in dic:\n             dp[i] += dic[c[i]]\n             dic[c[i]] += dp[i-1]\n         else:\n             dic[c[i]] = dp[i-1] + 1\n-    dp[i] += dp[i-1]\n print(dp[n-1])\n```\n "
    },
    {
        "user_id": "u964299793",
        "problem_id": "p03764",
        "submission1_id": "s992132203",
        "crp_content": "\n mod=10**9+7\n n,m=map(int,input().split())\n x=list(map(int,input().split()))\n y=list(map(int,input().split()))\n ansx=0\n cum=x[0]\n for i in range(1,n):\n     ansx+=(i*x[i]-cum+mod)%mod\n     ansx%=mod\n     cum+=x[i]\n ansy=0\n cum=y[0]\n for i in range(1,m):\n     ansy+=(i*y[i]-cum+mod)%mod\n     ansy%=mod\n     cum+=y[i]\n-print(ansx,ansy)\n print((ansx*ansy)%mod)\n \n",
        "origin_generated_text": "\n```\n mod=10**9+7\n n,m=map(int,input().split())\n x=list(map(int,input().split()))\n y=list(map(int,input().split()))\n ansx=0\n cum=x[0]\n for i in range(1,n):\n     ansx+=(i*x[i]-cum+mod)%mod\n     ansx%=mod\n     cum+=x[i]\n ansy=0\n cum=y[0]\n for i in range(1,m):\n     ansy+=(i*y[i]-cum+mod)%mod\n     ansy%=mod\n     cum+=y[i]\n-print(ansx,ansy)\n print((ansx*ansy)%mod)\n \n```\n "
    },
    {
        "user_id": "u766163292",
        "problem_id": "p02297",
        "submission1_id": "s238896185",
        "crp_content": "\n \n \n import cmath\n \n \n def outer_product(v1, v2):\n     return v1.real * v2.imag - v1.imag * v2.real\n \n \n def in_place_sort_points_ccw(points):\n-    points.sort(key=cmath.phase)\n \n \n def area_polygon(n, points):\n     in_place_sort_points_ccw(points)\n     s = sum(outer_product(points[i], points[(i + 1) % n])\n             for i in range(n)) / 2.0\n     return s\n \n \n def main():\n     n = int(input())\n     ps = [complex(*map(float, input().split())) for _ in range(n)]\n     s = area_polygon(n, ps)\n     print(\"{:.1f}\".format(s))\n \n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n \n \n import cmath\n \n \n def outer_product(v1, v2):\n     return v1.real * v2.imag - v1.imag * v2.real\n \n \n def in_place_sort_points_ccw(points):\n-    points.sort(key=cmath.phase)\n \n \n def area_polygon(n, points):\n     in_place_sort_points_ccw(points)\n     s = sum(outer_product(points[i], points[(i + 1) % n])\n             for i in range(n)) / 2.0\n     return s\n \n \n def main():\n     n = int(input())\n     ps = [complex(*map(float, input().split())) for _ in range(n)]\n     s = area_polygon(n, ps)\n     print(\"{:.1f}\".format(s))\n \n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u705038083",
        "problem_id": "p03477",
        "submission1_id": "s644566964",
        "crp_content": "\n s = input()\n \n slist = s.split(\" \")\n \n left = int(slist[0]) + int(slist[1])\n \n right = int(slist[2]) + int(slist[3])\n \n if left > right:\n-    print(\"left\")\n \t\n elif left == right:\n     print(\"Balanced\")\n \t\n else:\n-    print(\"right\")\n \n",
        "origin_generated_text": "\n```\n s = input()\n \n slist = s.split(\" \")\n \n left = int(slist[0]) + int(slist[1])\n \n right = int(slist[2]) + int(slist[3])\n \n if left > right:\n-    print(\"left\")\n \t\n elif left == right:\n     print(\"Balanced\")\n \t\n else:\n-    print(\"right\")\n \n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s341674725",
        "crp_content": "\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n \n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0]%m)\n",
        "origin_generated_text": "\n```\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n \n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0]%m)\n```\n "
    },
    {
        "user_id": "u807028974",
        "problem_id": "p03102",
        "submission1_id": "s045672234",
        "crp_content": "\n N,M,C = map(int,input().split())\n B = input().split()\n Anm = []\n for i in range(N):\n     Anm.append(input().split())\n cont = 0\n for A in Anm:\n     c = 0\n     for i in range(M):\n         c += int(A[i]) * int(B[i])\n     if c > 0:\n         cont += 1\n print(cont)\n",
        "origin_generated_text": "\n```\n N,M,C = map(int,input().split())\n B = input().split()\n Anm = []\n for i in range(N):\n     Anm.append(input().split())\n cont = 0\n for A in Anm:\n     c = 0\n     for i in range(M):\n         c += int(A[i]) * int(B[i])\n     if c > 0:\n         cont += 1\n print(cont)\n```\n "
    },
    {
        "user_id": "u450145303",
        "problem_id": "p03760",
        "submission1_id": "s438272932",
        "crp_content": "\n o = input()\n e = input()\n for i,a in enumerate(o):\n     for j,b in enumerate(e):\n         if(i == j):\n             print(a + b, end = '')\n-    if i == len(o) - 1:\n-        print(a)\n \n",
        "origin_generated_text": "\n```\n o = input()\n e = input()\n for i,a in enumerate(o):\n     for j,b in enumerate(e):\n         if(i == j):\n             print(a + b, end = '')\n-    if i == len(o) - 1:\n-        print(a)\n \n```\n "
    },
    {
        "user_id": "u366644013",
        "problem_id": "p03943",
        "submission1_id": "s181801980",
        "crp_content": "\n na = lambda: list(map(int, input().split()))\n a, b, c = na()\n-if a + b == c or b + c == a:\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n na = lambda: list(map(int, input().split()))\n a, b, c = na()\n-if a + b == c or b + c == a:\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03625",
        "submission1_id": "s817431784",
        "crp_content": "\n from collections import Counter\n N = int(input())\n A_list = list(map(int, input().split()))\n counter = Counter(A_list)\n counter = sorted(counter.items(), key=lambda x: -x[0])\n \n long_side = 0\n short_side = 0\n choice = 0\n \n for k, v in counter:\n     if v % 4 == 0 and choice == 0:\n         long_side = k\n         short_side = k\n         choice = 4\n \n     elif v >= 2:\n         if choice == 2:\n             short_side = k\n             choice = 4\n         else:\n             long_side = k\n             choice = 2\n \n     if choice == 4:\n         print(long_side*short_side)\n         exit()\n print(0)\n",
        "origin_generated_text": "\n```\n from collections import Counter\n N = int(input())\n A_list = list(map(int, input().split()))\n counter = Counter(A_list)\n counter = sorted(counter.items(), key=lambda x: -x[0])\n \n long_side = 0\n short_side = 0\n choice = 0\n \n for k, v in counter:\n     if v % 4 == 0 and choice == 0:\n         long_side = k\n         short_side = k\n         choice = 4\n \n     elif v >= 2:\n         if choice == 2:\n             short_side = k\n             choice = 4\n         else:\n             long_side = k\n             choice = 2\n \n     if choice == 4:\n         print(long_side*short_side)\n         exit()\n print(0)\n```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p04019",
        "submission1_id": "s502210307",
        "crp_content": "\n a = list(input())\n-print(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")\n",
        "origin_generated_text": "\n```\n a = list(input())\n-print(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")\n```\n "
    },
    {
        "user_id": "u997113115",
        "problem_id": "p03087",
        "submission1_id": "s850352580",
        "crp_content": "\n N, Q = map(int, input().split())\n S = input()\n flag = True\n R = [0]*N\n a = 0\n for i in range(N):\n     s = S[i]\n     if s == \"A\":\n         flag = True\n     elif s == \"C\" and flag:\n         a += 1\n         flag = False\n     else:\n         flag = False\n     R[i] = a\n-print(R)\n for i in range(Q):\n     l, r = map(int, input().split())\n     print(R[r-1] - R[l-1])\n \n",
        "origin_generated_text": "\n```\n N, Q = map(int, input().split())\n S = input()\n flag = True\n R = [0]*N\n a = 0\n for i in range(N):\n     s = S[i]\n     if s == \"A\":\n         flag = True\n     elif s == \"C\" and flag:\n         a += 1\n         flag = False\n     else:\n         flag = False\n     R[i] = a\n-print(R)\n for i in range(Q):\n     l, r = map(int, input().split())\n     print(R[r-1] - R[l-1])\n \n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s121069384",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n-            if i - last_i >= lent and i < lent:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n-            if i - last_i >= lent and i < lent:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u114860785",
        "problem_id": "p00006",
        "submission1_id": "s963627881",
        "crp_content": "\n-print(input()[-1])\n \n",
        "origin_generated_text": "\n```\n-print(input()[-1])\n \n```\n "
    },
    {
        "user_id": "u372345564",
        "problem_id": "p03613",
        "submission1_id": "s732139941",
        "crp_content": "\n def main():\n     N =  int(input())\n     a = [int(i) for i in input().split()]\n     \n     \n     \n     count_ = [0] * ( max(a)+1 )\n     \n     \n     \n     \n     \n     for num in a:\n-        if(num-1 > 0):\n-            count_[num-1] += 1\n-            count_[num-2] += 1\n-            count_[num] += 1\n         else:\n-            count_[num-1] += 1\n-            count_[num] += 1\n     \n     \n     print(max(count_))\n     \n if __name__==\"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n def main():\n     N =  int(input())\n     a = [int(i) for i in input().split()]\n     \n     \n     \n     count_ = [0] * ( max(a)+1 )\n     \n     \n     \n     \n     \n     for num in a:\n-        if(num-1 > 0):\n-            count_[num-1] += 1\n-            count_[num-2] += 1\n-            count_[num] += 1\n         else:\n-            count_[num-1] += 1\n-            count_[num] += 1\n     \n     \n     print(max(count_))\n     \n if __name__==\"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u332253305",
        "problem_id": "p02767",
        "submission1_id": "s217093646",
        "crp_content": "\n n=int(input())\n x=list(map(int,input().split()))\n ans=sum(x)\n-print(ans)\n v=0\n for i in x:\n     v+=(i-ans)**2\n-print(v)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n x=list(map(int,input().split()))\n ans=sum(x)\n-print(ans)\n v=0\n for i in x:\n     v+=(i-ans)**2\n-print(v)\n \n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p02962",
        "submission1_id": "s550920381",
        "crp_content": "\n def rolling_hash(s, w, MOD):\n     ret = []\n     tmp = 0\n     p = pow(26, w, MOD)\n     ords = [ord(c) - 97 for c in s]\n     for i, o in enumerate(ords):\n         tmp = tmp * 26 + o\n         if i >= w:\n             tmp = (tmp - ords[i - w] * p)\n         tmp %= MOD\n         ret.append(tmp)\n     return ret\n \n \n def solve(s, t):\n     MOD = 10 ** 9 + 7\n     ls, lt = len(s), len(t)\n     k = (lt - 1) \n     s *= k * 2\n     ls *= k\n     rs, rt = rolling_hash(s, lt, MOD), rolling_hash(t, lt, MOD)\n     rs = rs[ls:]\n     ht = rt[-1]\n \n     checked = [-1] * ls\n \n     def series(i, st):\n-        print(i, st, checked)\n         if i == st:\n             return float('-inf')\n         if checked[i] == -1:\n             checked[i] = series((i + lt) % ls, st) + 1 if rs[i] == ht else 0\n         return checked[i]\n \n     for i, hs in enumerate(rs):\n         if hs != ht:\n             continue\n         ret = series((i + lt) % ls, i)\n         if ret == float('-inf'):\n             return -1\n         checked[i] = ret + 1\n \n     return max(0, max(checked))\n \n \n s = input()\n t = input()\n print(solve(s, t))\n \n",
        "origin_generated_text": "\n```\n def rolling_hash(s, w, MOD):\n     ret = []\n     tmp = 0\n     p = pow(26, w, MOD)\n     ords = [ord(c) - 97 for c in s]\n     for i, o in enumerate(ords):\n         tmp = tmp * 26 + o\n         if i >= w:\n             tmp = (tmp - ords[i - w] * p)\n         tmp %= MOD\n         ret.append(tmp)\n     return ret\n \n \n def solve(s, t):\n     MOD = 10 ** 9 + 7\n     ls, lt = len(s), len(t)\n     k = (lt - 1) \n     s *= k * 2\n     ls *= k\n     rs, rt = rolling_hash(s, lt, MOD), rolling_hash(t, lt, MOD)\n     rs = rs[ls:]\n     ht = rt[-1]\n \n     checked = [-1] * ls\n \n     def series(i, st):\n-        print(i, st, checked)\n         if i == st:\n             return float('-inf')\n         if checked[i] == -1:\n             checked[i] = series((i + lt) % ls, st) + 1 if rs[i] == ht else 0\n         return checked[i]\n \n     for i, hs in enumerate(rs):\n         if hs != ht:\n             continue\n         ret = series((i + lt) % ls, i)\n         if ret == float('-inf'):\n             return -1\n         checked[i] = ret + 1\n \n     return max(0, max(checked))\n \n \n s = input()\n t = input()\n print(solve(s, t))\n \n```\n "
    },
    {
        "user_id": "u869595612",
        "problem_id": "p03023",
        "submission1_id": "s241709362",
        "crp_content": "\n-(int(input())-2)*180\n",
        "origin_generated_text": "\n```\n-(int(input())-2)*180\n```\n "
    },
    {
        "user_id": "u217303170",
        "problem_id": "p03729",
        "submission1_id": "s411383758",
        "crp_content": "\n a, b, c = input().split()\n if a[-1] == b[0] and b[-1] == c[0]:\n-    print('Yes')\n else:\n-    print('No')\n \n",
        "origin_generated_text": "\n```\n a, b, c = input().split()\n if a[-1] == b[0] and b[-1] == c[0]:\n-    print('Yes')\n else:\n-    print('No')\n \n```\n "
    },
    {
        "user_id": "u126844573",
        "problem_id": "p03416",
        "submission1_id": "s171390200",
        "crp_content": "\n A, B = map(int, input().split())\n \n count = 0\n-for q in range(A, B):\n-    if str(q)[:2] == str(q)[-2:]:\n         count += 1\n print(count)\n \n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n \n count = 0\n-for q in range(A, B):\n-    if str(q)[:2] == str(q)[-2:]:\n         count += 1\n print(count)\n \n```\n "
    },
    {
        "user_id": "u093129359",
        "problem_id": "p03102",
        "submission1_id": "s752612514",
        "crp_content": "\n n,m,c=map(int,input().split())\n b= [int(x) for x in input().split()]\n ans=0\n \n for i in range(n):\n     a=[int(x)*y for x,y in zip(input().split(),b)]\n     s=0\n     for j in range(m):\n         s=sum(a)\n         if(s+c>0):\n-            ans=+1\n print(ans)\n",
        "origin_generated_text": "\n```\n n,m,c=map(int,input().split())\n b= [int(x) for x in input().split()]\n ans=0\n \n for i in range(n):\n     a=[int(x)*y for x,y in zip(input().split(),b)]\n     s=0\n     for j in range(m):\n         s=sum(a)\n         if(s+c>0):\n-            ans=+1\n print(ans)\n```\n "
    },
    {
        "user_id": "u690781906",
        "problem_id": "p03200",
        "submission1_id": "s926955575",
        "crp_content": "\n s = input()\n w_count = s.count('W')\n ans = 0\n-for i in range(w_count):\n-    if s[i] == 'B':\n-        ans += w_count - i + 1\n print(ans)\n",
        "origin_generated_text": "\n```\n s = input()\n w_count = s.count('W')\n ans = 0\n-for i in range(w_count):\n-    if s[i] == 'B':\n-        ans += w_count - i + 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u105302073",
        "problem_id": "p02767",
        "submission1_id": "s838950993",
        "crp_content": "\n n = int(input())\n x = [int(i) for i in input().split()]\n l, r = 0, 0\n for i in x:\n     l = min(l, i)\n     r = max(l, i)\n-ans = 10e9\n for i in range(l, r):\n     cost = 0\n     for j in range(n):\n         cost += (x[j] - i) * (x[j] - i)\n     ans = min(ans, cost)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n x = [int(i) for i in input().split()]\n l, r = 0, 0\n for i in x:\n     l = min(l, i)\n     r = max(l, i)\n-ans = 10e9\n for i in range(l, r):\n     cost = 0\n     for j in range(n):\n         cost += (x[j] - i) * (x[j] - i)\n     ans = min(ans, cost)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u350093546",
        "problem_id": "p03998",
        "submission1_id": "s907708804",
        "crp_content": "\n a=list(input())\n b=list(input())\n c=list(input())\n order='a'\n while True:\n   if order=='a':\n     order=a[0]\n     if len(a)==1:\n       print('A')\n       break\n     else:\n       a=a[1:]\n   elif order=='b':\n     order=b[0]\n     if len(b)==1:\n       print('B')\n       break\n     else:\n       b=b[1:]\n   elif order=='c':\n     order=c[0]\n     if len(c)==1:\n       print('C')\n       break\n     else:\n       c=c[1:]\n",
        "origin_generated_text": "\n```\n a=list(input())\n b=list(input())\n c=list(input())\n order='a'\n while True:\n   if order=='a':\n     order=a[0]\n     if len(a)==1:\n       print('A')\n       break\n     else:\n       a=a[1:]\n   elif order=='b':\n     order=b[0]\n     if len(b)==1:\n       print('B')\n       break\n     else:\n       b=b[1:]\n   elif order=='c':\n     order=c[0]\n     if len(c)==1:\n       print('C')\n       break\n     else:\n       c=c[1:]\n```\n "
    },
    {
        "user_id": "u438160186",
        "problem_id": "p02886",
        "submission1_id": "s904315782",
        "crp_content": "\n n = int(input())\n d = [int(i) for i in input().split()]\n-s = n * (n-1)\n \n ans = 0\n-for i in range(n):\n-  for j in range(s):\n-      if j < n:\n-        ans += d[i] * d[j]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n d = [int(i) for i in input().split()]\n-s = n * (n-1)\n \n ans = 0\n-for i in range(n):\n-  for j in range(s):\n-      if j < n:\n-        ans += d[i] * d[j]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u215065194",
        "problem_id": "p03998",
        "submission1_id": "s930243415",
        "crp_content": "\n a=input()\n b=input()\n c=input()\n dic={'a':[_ for _ in a],'b':[_ for _ in b],'c':[_ for _ in c]}\n char='a'\n-print(dic)\n for i in range(len(a)+len(b)+len(c)):\n     if len(dic[char]) == 0:\n         break\n     char = dic[char].pop(0)\n print(char.upper())\n",
        "origin_generated_text": "\n```\n a=input()\n b=input()\n c=input()\n dic={'a':[_ for _ in a],'b':[_ for _ in b],'c':[_ for _ in c]}\n char='a'\n-print(dic)\n for i in range(len(a)+len(b)+len(c)):\n     if len(dic[char]) == 0:\n         break\n     char = dic[char].pop(0)\n print(char.upper())\n```\n "
    },
    {
        "user_id": "u283220417",
        "problem_id": "p02767",
        "submission1_id": "s920860459",
        "crp_content": "\n N = int(input())\n X = list(map(int, input().split()))\n min = 1000000\n \n-for i in range(1, X[N-1]+1):\n     T = 0\n     for j in range(N):\n       T += (X[j]-i) ** 2\n     if T < min:\n         min = T\n \n print(min)\n",
        "origin_generated_text": "\n```\n N = int(input())\n X = list(map(int, input().split()))\n min = 1000000\n \n-for i in range(1, X[N-1]+1):\n     T = 0\n     for j in range(N):\n       T += (X[j]-i) ** 2\n     if T < min:\n         min = T\n \n print(min)\n```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03626",
        "submission1_id": "s499253433",
        "crp_content": "\n n = int(input())\n s1 = input()\n s2 = input()\n cnt = 1\n i = 0\n while i <= n-1:\n     if i == 0:\n         if s1[i] == s2[i]:\n             cnt *= 3\n             s = 0\n         else:\n             cnt *= 6\n             i += 1\n             s = 1\n     elif s1[i] == s2[i]:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 1\n         s = 0\n     else:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 3\n         s = 1\n         i += 1\n     i += 1\n-print(cnt)\n",
        "origin_generated_text": "\n```\n n = int(input())\n s1 = input()\n s2 = input()\n cnt = 1\n i = 0\n while i <= n-1:\n     if i == 0:\n         if s1[i] == s2[i]:\n             cnt *= 3\n             s = 0\n         else:\n             cnt *= 6\n             i += 1\n             s = 1\n     elif s1[i] == s2[i]:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 1\n         s = 0\n     else:\n         if s == 0:\n             cnt *= 2\n         else:\n             cnt *= 3\n         s = 1\n         i += 1\n     i += 1\n-print(cnt)\n```\n "
    },
    {
        "user_id": "u233729690",
        "problem_id": "p03079",
        "submission1_id": "s668086654",
        "crp_content": "\n A,B,C = map(int, input().split())\n \n-print(A,B,C)\n-\n if A == B and B == C:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n A,B,C = map(int, input().split())\n \n-print(A,B,C)\n-\n if A == B and B == C:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u996564551",
        "problem_id": "p03102",
        "submission1_id": "s410531548",
        "crp_content": "\n N, M, C = input().split(' ')\n N = int(N)\n M = int(M)\n C = int(C)\n B = []\n B = input().split(' ')\n B = [int(i) for i in B]\n A = []\n R = 0\n for i in range(N):\n   A = input().split(' ')\n   A = [int(i) for i in A]\n   combine = [x * y for (x, y) in zip(A, B)]\n-  print(sum(combine) + C)\n   if sum(combine) + C > 0:\n     R += 1\n print(R)\n",
        "origin_generated_text": "\n```\n N, M, C = input().split(' ')\n N = int(N)\n M = int(M)\n C = int(C)\n B = []\n B = input().split(' ')\n B = [int(i) for i in B]\n A = []\n R = 0\n for i in range(N):\n   A = input().split(' ')\n   A = [int(i) for i in A]\n   combine = [x * y for (x, y) in zip(A, B)]\n-  print(sum(combine) + C)\n   if sum(combine) + C > 0:\n     R += 1\n print(R)\n```\n "
    },
    {
        "user_id": "u456595418",
        "problem_id": "p03079",
        "submission1_id": "s203194475",
        "crp_content": "\n l = []\n l= list(map(int,input().split()))\n ls = sorted(l)\n a = ls[0]\n b = ls[1]\n c = ls[2]\n \n-if a + b < c:\n \tprint(\"Yes\")\n else:\n   \tprint(\"No\")\n",
        "origin_generated_text": "\n```\n l = []\n l= list(map(int,input().split()))\n ls = sorted(l)\n a = ls[0]\n b = ls[1]\n c = ls[2]\n \n-if a + b < c:\n \tprint(\"Yes\")\n else:\n   \tprint(\"No\")\n```\n "
    },
    {
        "user_id": "u687766076",
        "problem_id": "p03106",
        "submission1_id": "s312222115",
        "crp_content": "\n import sys\n \n a, b, k = map(int, sys.stdin.readline().split())\n-m = min(a, b)+1\n cnt = 0\n-for i in range(1, m):\n     if a % i == 0 and b % i == 0:\n         cnt += 1\n         if cnt == k:\n             print(i)\n             break\n \n",
        "origin_generated_text": "\n```\n import sys\n \n a, b, k = map(int, sys.stdin.readline().split())\n-m = min(a, b)+1\n cnt = 0\n-for i in range(1, m):\n     if a % i == 0 and b % i == 0:\n         cnt += 1\n         if cnt == k:\n             print(i)\n             break\n \n```\n "
    },
    {
        "user_id": "u581625805",
        "problem_id": "p02556",
        "submission1_id": "s592636386",
        "crp_content": "\n n = int(input())\n plus_max = 0\n plus_min = 10**10\n minus_max = 0\n minus_min = 10**10\n for _ in range(n):\n     x, y = map(int, input().split())\n     plus_max = max(plus_max, x + y)\n     plus_min = min(plus_min, x + y)\n     minus_max = max(minus_max, x - y)\n     minus_min = min(minus_min, x - y)\n-print(max(plus_max - plus_min, minus_max - minus_min))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n plus_max = 0\n plus_min = 10**10\n minus_max = 0\n minus_min = 10**10\n for _ in range(n):\n     x, y = map(int, input().split())\n     plus_max = max(plus_max, x + y)\n     plus_min = min(plus_min, x + y)\n     minus_max = max(minus_max, x - y)\n     minus_min = min(minus_min, x - y)\n-print(max(plus_max - plus_min, minus_max - minus_min))\n \n```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s166339565",
        "crp_content": "\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = [-1]*(2*(10**5)+1)\n prevIdx = [0] * N\n for i in range(N):\n     C[i] = int(input())\n     if i > 0 and C[i] == C[i-1]:\n         continue\n     prevIdx[i] = dic[C[i]]\n     dic[C[i]] = i\n \n dp = [0] * N\n dp[0] = 1\n acc = [0] * N\n acc[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1] % mod\n     if C[i] == C[i-1] or prevIdx[i] == -1:\n         acc[i] = 1\n         continue\n     \n     dp[i] += acc[prevIdx[i]]\n     acc[i] = acc[prevIdx[i]] + dp[i-1]\n     acc[i] %= mod\n     dp[i] %= mod\n \n print(dp[N-1] % mod)\n",
        "origin_generated_text": "\n```\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = [-1]*(2*(10**5)+1)\n prevIdx = [0] * N\n for i in range(N):\n     C[i] = int(input())\n     if i > 0 and C[i] == C[i-1]:\n         continue\n     prevIdx[i] = dic[C[i]]\n     dic[C[i]] = i\n \n dp = [0] * N\n dp[0] = 1\n acc = [0] * N\n acc[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1] % mod\n     if C[i] == C[i-1] or prevIdx[i] == -1:\n         acc[i] = 1\n         continue\n     \n     dp[i] += acc[prevIdx[i]]\n     acc[i] = acc[prevIdx[i]] + dp[i-1]\n     acc[i] %= mod\n     dp[i] %= mod\n \n print(dp[N-1] % mod)\n```\n "
    },
    {
        "user_id": "u189479417",
        "problem_id": "p03087",
        "submission1_id": "s871500072",
        "crp_content": "\n N, Q = map(int,input().split())\n S = input()\n cnt = [0]\n for i in range(len(S)-1):\n     cnt.append(cnt[-1])\n     if S[i] == 'A' and S[i+1] == 'C':\n         cnt[-1] += 1\n cnt = [0] + cnt\n-print(cnt)\n \n for _ in range(Q):\n     l, r = map(int,input().split())\n     ans = cnt[r] - cnt[l-1]\n     if 2 <= l and (S[l-2] == 'A' and S[l-1] == 'C'):\n         ans -= 1\n     print(ans)\n",
        "origin_generated_text": "\n```\n N, Q = map(int,input().split())\n S = input()\n cnt = [0]\n for i in range(len(S)-1):\n     cnt.append(cnt[-1])\n     if S[i] == 'A' and S[i+1] == 'C':\n         cnt[-1] += 1\n cnt = [0] + cnt\n-print(cnt)\n \n for _ in range(Q):\n     l, r = map(int,input().split())\n     ans = cnt[r] - cnt[l-1]\n     if 2 <= l and (S[l-2] == 'A' and S[l-1] == 'C'):\n         ans -= 1\n     print(ans)\n```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p03106",
        "submission1_id": "s071497750",
        "crp_content": "\n a,b,k=map(int, input().split())\n-cnt=1\n for i in range(1,max(a,b)+1):\n     if a%i==0 and b%i==0:\n-        cnt+=1\n-        if cnt==k:\n-            print(i)\n",
        "origin_generated_text": "\n```\n a,b,k=map(int, input().split())\n-cnt=1\n for i in range(1,max(a,b)+1):\n     if a%i==0 and b%i==0:\n-        cnt+=1\n-        if cnt==k:\n-            print(i)\n```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p03416",
        "submission1_id": "s285899671",
        "crp_content": "\n a,b = map(int,(input().split()))\n count = 0\n for i in range(a,b+1):\n     num_str = str(i)\n     if (num_str[0] == num_str[4]) and (num_str[1] == num_str[3]):\n         count += 1\n-print(range(a,b))\n",
        "origin_generated_text": "\n```\n a,b = map(int,(input().split()))\n count = 0\n for i in range(a,b+1):\n     num_str = str(i)\n     if (num_str[0] == num_str[4]) and (num_str[1] == num_str[3]):\n         count += 1\n-print(range(a,b))\n```\n "
    },
    {
        "user_id": "u104282757",
        "problem_id": "p02950",
        "submission1_id": "s224368606",
        "crp_content": "\n p = int(input())\n a_list = list(map(int, input().split()))\n r_list = [0] * p\n \n fact = [0] * p\n fact[0] = 1\n for i in range(1, p):\n     fact[i] = fact[i - 1] * i % p\n \n fact_inv = [0] * p\n fact_inv[-1] = pow(fact[-1], p-2, p)\n for i in range(p-2, -1 ,-1):\n     fact_inv[i] = (fact_inv[i+1] * (i+1)) % p\n \n ncr = [(fact[p-1] * fact_inv[p-1-i] * fact_inv[i]) % p for i in range(p)]\n \n for j in range(p):\n     if a_list[j] == 0:\n         continue\n     k = 1\n     for i in range(p-1, -1, -1):\n         r_list[i] -= ncr[i] * k\n         r_list[i] %= p\n         k *= -j\n         k %= p\n-    r_list[0] += 1\n \n \n print(*r_list)\n \n",
        "origin_generated_text": "\n```\n p = int(input())\n a_list = list(map(int, input().split()))\n r_list = [0] * p\n \n fact = [0] * p\n fact[0] = 1\n for i in range(1, p):\n     fact[i] = fact[i - 1] * i % p\n \n fact_inv = [0] * p\n fact_inv[-1] = pow(fact[-1], p-2, p)\n for i in range(p-2, -1 ,-1):\n     fact_inv[i] = (fact_inv[i+1] * (i+1)) % p\n \n ncr = [(fact[p-1] * fact_inv[p-1-i] * fact_inv[i]) % p for i in range(p)]\n \n for j in range(p):\n     if a_list[j] == 0:\n         continue\n     k = 1\n     for i in range(p-1, -1, -1):\n         r_list[i] -= ncr[i] * k\n         r_list[i] %= p\n         k *= -j\n         k %= p\n-    r_list[0] += 1\n \n \n print(*r_list)\n \n```\n "
    },
    {
        "user_id": "u693524218",
        "problem_id": "p03036",
        "submission1_id": "s913774491",
        "crp_content": "\n r,D,x = [int(i) for i in input().split()]\n \n-print(r)\n-\n-\n def calu(r,D,x):\n     X =x\n     for j in range(10):\n        X = r*X-D\n        print(X)\n \n calu(r,D,x)\n",
        "origin_generated_text": "\n```\n r,D,x = [int(i) for i in input().split()]\n \n-print(r)\n-\n-\n def calu(r,D,x):\n     X =x\n     for j in range(10):\n        X = r*X-D\n        print(X)\n \n calu(r,D,x)\n```\n "
    },
    {
        "user_id": "u493130708",
        "problem_id": "p03563",
        "submission1_id": "s518157337",
        "crp_content": "\n R = int(input())\n G = int(input())\n \n-print(R+(G-R)**2)\n",
        "origin_generated_text": "\n```\n R = int(input())\n G = int(input())\n \n-print(R+(G-R)**2)\n```\n "
    },
    {
        "user_id": "u994988729",
        "problem_id": "p02665",
        "submission1_id": "s489060775",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n \n leaf = []\n miki = []\n under = 1\n \n for i, a in enumerate(A):\n     can = 2 ** i\n     if a > can or under == 0:\n         print(-1)\n         exit()\n     miki.append(under - a)\n     under = miki[-1] * 2\n \n \n ans = 0\n child = 0\n for i in reversed(range(N + 1)):\n     child = min(child, miki[i]) + A[i]\n     ans += child\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n \n leaf = []\n miki = []\n under = 1\n \n for i, a in enumerate(A):\n     can = 2 ** i\n     if a > can or under == 0:\n         print(-1)\n         exit()\n     miki.append(under - a)\n     under = miki[-1] * 2\n \n \n ans = 0\n child = 0\n for i in reversed(range(N + 1)):\n     child = min(child, miki[i]) + A[i]\n     ans += child\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p03200",
        "submission1_id": "s621113641",
        "crp_content": "\n S = input()\n ans = 0\n tmp = 0\n for i in range(len(S)):\n   if S[i] == 'W':\n     ans+=i-tmp\n   else:\n-    tmp+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n ans = 0\n tmp = 0\n for i in range(len(S)):\n   if S[i] == 'W':\n     ans+=i-tmp\n   else:\n-    tmp+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u626881915",
        "problem_id": "p02963",
        "submission1_id": "s065519122",
        "crp_content": "\n import math\n s=int(input())\n c=math.ceil(math.sqrt(s))\n sa=c*c-s\n-for i in range(2, s):\n   if sa%i==0:\n-    print(\"0 0 {} {} {} {}\".format(c, i, sa/i, c))\n     exit()\n-    \n",
        "origin_generated_text": "\n```\n import math\n s=int(input())\n c=math.ceil(math.sqrt(s))\n sa=c*c-s\n-for i in range(2, s):\n   if sa%i==0:\n-    print(\"0 0 {} {} {} {}\".format(c, i, sa/i, c))\n     exit()\n-    \n```\n "
    },
    {
        "user_id": "u203261375",
        "problem_id": "p00023",
        "submission1_id": "s848168883",
        "crp_content": "\n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n     dist = ((xa - xb)**2 + (ya - yb)**2)**.5\n-    if ra + rb < dist:\n         print('0')\n-    elif (rb < ra) and (dist < ra):\n         print('2')\n-    elif (ra < rb) and (dist < rb):\n         print('-2')\n     else:\n         print('1')\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n     dist = ((xa - xb)**2 + (ya - yb)**2)**.5\n-    if ra + rb < dist:\n         print('0')\n-    elif (rb < ra) and (dist < ra):\n         print('2')\n-    elif (ra < rb) and (dist < rb):\n         print('-2')\n     else:\n         print('1')\n```\n "
    },
    {
        "user_id": "u255001744",
        "problem_id": "p03480",
        "submission1_id": "s520570309",
        "crp_content": "\n S = input()\n \n s = S[0]\n-temp_T = 100000\n for i in range(1, len(S)):\n     if(S[i] != s):\n         judge = max(i,len(S)-i)\n         temp_T = min(judge, temp_T)\n         s = S[i]\n \n print(temp_T)\n \n",
        "origin_generated_text": "\n```\n S = input()\n \n s = S[0]\n-temp_T = 100000\n for i in range(1, len(S)):\n     if(S[i] != s):\n         judge = max(i,len(S)-i)\n         temp_T = min(judge, temp_T)\n         s = S[i]\n \n print(temp_T)\n \n```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s287246109",
        "crp_content": "\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for c in range(1, capacity+1):\n         candidates = [val + work[c-weight]\n                       for val,weight in zip(values,weights) if weight <= c]\n         work[c] = max(candidates) if candidates != [] else 0\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))\n     prices_b=list(map(int,inp().split()))\n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n     return '{}'.format(valB)\n print(sol())\n",
        "origin_generated_text": "\n```\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for c in range(1, capacity+1):\n         candidates = [val + work[c-weight]\n                       for val,weight in zip(values,weights) if weight <= c]\n         work[c] = max(candidates) if candidates != [] else 0\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))\n     prices_b=list(map(int,inp().split()))\n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n     return '{}'.format(valB)\n print(sol())\n```\n "
    },
    {
        "user_id": "u808280993",
        "problem_id": "p03318",
        "submission1_id": "s684066276",
        "crp_content": "\n \n \n K = int(input())\n \n-Sunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n \n \n-if K <= len(Sunuke):\n     for i in range(K):\n         print(Sunuke[i])\n \n else:\n     resi = K - len(Sunuke)\n     digit = 1\n     num = 19\n     Sunuke.append(num)\n     resi -= 1\n     endFlg = False\n     while resi > 0:\n         for d in range(1, digit+1):\n             for i in range(9):\n                 num += 10\n                 Sunuke.append(num)\n \n                 resi -= 1\n                 if resi == 0:\n                     endFlg = True\n                     break\n             if endFlg:\n                 break\n \n for i in range(K):\n     print(Sunuke[i])\n",
        "origin_generated_text": "\n```\n \n \n K = int(input())\n \n-Sunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n \n \n-if K <= len(Sunuke):\n     for i in range(K):\n         print(Sunuke[i])\n \n else:\n     resi = K - len(Sunuke)\n     digit = 1\n     num = 19\n     Sunuke.append(num)\n     resi -= 1\n     endFlg = False\n     while resi > 0:\n         for d in range(1, digit+1):\n             for i in range(9):\n                 num += 10\n                 Sunuke.append(num)\n \n                 resi -= 1\n                 if resi == 0:\n                     endFlg = True\n                     break\n             if endFlg:\n                 break\n \n for i in range(K):\n     print(Sunuke[i])\n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s928842319",
        "crp_content": "\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S\n-y3 = S%10**9\n print(x1,y1,x2,y2,x3,y3)\n \n",
        "origin_generated_text": "\n```\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S\n-y3 = S%10**9\n print(x1,y1,x2,y2,x3,y3)\n \n```\n "
    },
    {
        "user_id": "u034855798",
        "problem_id": "p03477",
        "submission1_id": "s364785093",
        "crp_content": "\n \n \n \n \n \n A,B,C,D = map(int,input().split())\n \n \n \n \n \n-if A+B>=C+D:\n     print(\"Left\")\n-if A+B==C+D:\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n A,B,C,D = map(int,input().split())\n \n \n \n \n \n-if A+B>=C+D:\n     print(\"Left\")\n-if A+B==C+D:\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n```\n "
    },
    {
        "user_id": "u006657459",
        "problem_id": "p03626",
        "submission1_id": "s352774439",
        "crp_content": "\n N = int(input())\n S1 = input()\n S2 = input()\n patterns = []\n flag = False\n for i in range(N):\n     if S1[i] == S2[i]:\n         patterns.append('row')\n     elif flag is False:\n         patterns.append('column')\n         flag = True\n     else:\n         flag = False\n \n-print(patterns)\n if patterns[0] == 'row':\n     count = 3\n else:\n     count = 6\n for i in range(1, len(patterns)):\n     prev = patterns[i-1]\n     current = patterns[i]\n     if prev == 'row':\n         if current == 'row':\n             count *= 2\n         else:\n             count *= 2\n     else: \n         if current == 'row':\n             count *= 1\n         else:\n             count *= 3\n print(count % (10**9  + 7))\n",
        "origin_generated_text": "\n```\n N = int(input())\n S1 = input()\n S2 = input()\n patterns = []\n flag = False\n for i in range(N):\n     if S1[i] == S2[i]:\n         patterns.append('row')\n     elif flag is False:\n         patterns.append('column')\n         flag = True\n     else:\n         flag = False\n \n-print(patterns)\n if patterns[0] == 'row':\n     count = 3\n else:\n     count = 6\n for i in range(1, len(patterns)):\n     prev = patterns[i-1]\n     current = patterns[i]\n     if prev == 'row':\n         if current == 'row':\n             count *= 2\n         else:\n             count *= 2\n     else: \n         if current == 'row':\n             count *= 1\n         else:\n             count *= 3\n print(count % (10**9  + 7))\n```\n "
    },
    {
        "user_id": "u459798349",
        "problem_id": "p02914",
        "submission1_id": "s122345233",
        "crp_content": "\n n=int(input())\n A=[int(i) for i in input().split()]\n \n suma=0\n for i in range(n):\n     suma^=A[i]\n \n B=[~suma&me for me in A]\n B.sort(reverse=True)\n \n cnt=0\n for i in range(59,-1,-1):\n     B.sort(reverse=True)\n     if B[cnt]&(1<<i)>0:\n         \n         for q in range(cnt):\n             if B[q]&(1<<i)>1:\n                 B[q]^=B[cnt]\n         for q in range(cnt+1,n):\n             if B[q]&(1<<i)>1:\n                 B[q]^=B[cnt]\n             else:\n                 break          \n         cnt+=1\n \n ans=0\n B.sort(reverse=True)\n for i in range(min(n,60)):\n     ans^=B[i]\n \n print(ans*2+suma)\n",
        "origin_generated_text": "\n```\n n=int(input())\n A=[int(i) for i in input().split()]\n \n suma=0\n for i in range(n):\n     suma^=A[i]\n \n B=[~suma&me for me in A]\n B.sort(reverse=True)\n \n cnt=0\n for i in range(59,-1,-1):\n     B.sort(reverse=True)\n     if B[cnt]&(1<<i)>0:\n         \n         for q in range(cnt):\n             if B[q]&(1<<i)>1:\n                 B[q]^=B[cnt]\n         for q in range(cnt+1,n):\n             if B[q]&(1<<i)>1:\n                 B[q]^=B[cnt]\n             else:\n                 break          \n         cnt+=1\n \n ans=0\n B.sort(reverse=True)\n for i in range(min(n,60)):\n     ans^=B[i]\n \n print(ans*2+suma)\n```\n "
    },
    {
        "user_id": "u466331465",
        "problem_id": "p02887",
        "submission1_id": "s827033309",
        "crp_content": "\n import sys\n from itertools import accumulate\n input = sys.stdin.readline\n def inputs():return [int(x) for x in input().split()]\n N = int(input())\n S= list(input())\n s = []\n cnt= 1\n for i in range(len(S)-1):\n   if S[i]==S[i+1]:\n     cnt+=1\n   else:\n     s.append(cnt)\n     cnt=1\n s.append(cnt)\n-print(len(s))\n \n \n",
        "origin_generated_text": "\n```\n import sys\n from itertools import accumulate\n input = sys.stdin.readline\n def inputs():return [int(x) for x in input().split()]\n N = int(input())\n S= list(input())\n s = []\n cnt= 1\n for i in range(len(S)-1):\n   if S[i]==S[i+1]:\n     cnt+=1\n   else:\n     s.append(cnt)\n     cnt=1\n s.append(cnt)\n-print(len(s))\n \n \n```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02642",
        "submission1_id": "s014243065",
        "crp_content": "\n import math\n n=int(input(\"\"))\n aa=input(\"\").split(\" \")\n lista=[]\n for i in range(n):\n     lista+=[int(aa[i])]\n s=0\n lista.sort()\n ccc=int(lista[n-1]/lista[0])+1\n listde=set()\n for i in range(n-1):\n     if(lista[i]==lista[i+1] ):\n         listde.add(lista[i])\n t=0\n for i in range(n):\n     t=0\n     for k in listde:\n         \n         if (lista[i]%k==0):\n             t=1\n             break\n     if (t==0):\n         s+=1\n-        if(lista[i]<=cccc):\n             listde.add(lista[i])\n print(s)\n     \n         \n \n",
        "origin_generated_text": "\n```\n import math\n n=int(input(\"\"))\n aa=input(\"\").split(\" \")\n lista=[]\n for i in range(n):\n     lista+=[int(aa[i])]\n s=0\n lista.sort()\n ccc=int(lista[n-1]/lista[0])+1\n listde=set()\n for i in range(n-1):\n     if(lista[i]==lista[i+1] ):\n         listde.add(lista[i])\n t=0\n for i in range(n):\n     t=0\n     for k in listde:\n         \n         if (lista[i]%k==0):\n             t=1\n             break\n     if (t==0):\n         s+=1\n-        if(lista[i]<=cccc):\n             listde.add(lista[i])\n print(s)\n     \n         \n \n```\n "
    },
    {
        "user_id": "u344655022",
        "problem_id": "p02580",
        "submission1_id": "s945708732",
        "crp_content": "\n from collections import Counter\n from collections import defaultdict\n \n def li():\n     return [int(x) for x in input().split()]\n \n H, W, M = li()\n PH = []\n PW = []\n \n for i in range(M):\n     h, w = li()\n     PH.append(h)\n     PW.append(w)\n \n frequency_h_list = Counter(PH).most_common()\n frequency_w_list = Counter(PW).most_common()\n most_common_h_cnt = frequency_h_list[0][1]\n most_common_w_cnt = frequency_w_list[0][1]\n \n most_common_h_list = []\n for x in frequency_h_list:\n     if x[1] < most_common_h_cnt:\n         break\n     most_common_h_list.append(x[0])\n \n most_common_w_list = []\n for x in frequency_w_list:\n     if x[1] < most_common_w_cnt:\n         break\n     most_common_w_list.append(x[0])\n \n contain_intersection = {}\n for h in most_common_h_list:\n     for w in most_common_w_list:\n         contain_intersection[h, w] = False\n \n add = 0\n \n for i in range(M):\n     h, w = PH[i], PW[i]\n     if h not in most_common_h_list and w not in most_common_w_list:\n         continue\n     if (h, w) not in contain_intersection:\n         add = -1\n         break\n cnt = most_common_h_cnt + most_common_w_cnt + add\n \n print(cnt)\n",
        "origin_generated_text": "\n```\n from collections import Counter\n from collections import defaultdict\n \n def li():\n     return [int(x) for x in input().split()]\n \n H, W, M = li()\n PH = []\n PW = []\n \n for i in range(M):\n     h, w = li()\n     PH.append(h)\n     PW.append(w)\n \n frequency_h_list = Counter(PH).most_common()\n frequency_w_list = Counter(PW).most_common()\n most_common_h_cnt = frequency_h_list[0][1]\n most_common_w_cnt = frequency_w_list[0][1]\n \n most_common_h_list = []\n for x in frequency_h_list:\n     if x[1] < most_common_h_cnt:\n         break\n     most_common_h_list.append(x[0])\n \n most_common_w_list = []\n for x in frequency_w_list:\n     if x[1] < most_common_w_cnt:\n         break\n     most_common_w_list.append(x[0])\n \n contain_intersection = {}\n for h in most_common_h_list:\n     for w in most_common_w_list:\n         contain_intersection[h, w] = False\n \n add = 0\n \n for i in range(M):\n     h, w = PH[i], PW[i]\n     if h not in most_common_h_list and w not in most_common_w_list:\n         continue\n     if (h, w) not in contain_intersection:\n         add = -1\n         break\n cnt = most_common_h_cnt + most_common_w_cnt + add\n \n print(cnt)\n```\n "
    },
    {
        "user_id": "u834832056",
        "problem_id": "p02922",
        "submission1_id": "s953641343",
        "crp_content": "\n import math\n \n a, b = map(int, input().split(' '))\n \n-print(math.ceil(b / a))\n \n",
        "origin_generated_text": "\n```\n import math\n \n a, b = map(int, input().split(' '))\n \n-print(math.ceil(b / a))\n \n```\n "
    },
    {
        "user_id": "u187646742",
        "problem_id": "p02407",
        "submission1_id": "s235033174",
        "crp_content": "\n a = list(map(int, input().split()))\n a = list(a[i] for i in range(len(a)-1,-1,-1))\n-print(\" \".join(map(str, a)))\n",
        "origin_generated_text": "\n```\n a = list(map(int, input().split()))\n a = list(a[i] for i in range(len(a)-1,-1,-1))\n-print(\" \".join(map(str, a)))\n```\n "
    },
    {
        "user_id": "u726439578",
        "problem_id": "p03943",
        "submission1_id": "s634751594",
        "crp_content": "\n a=list(map(int,input().split()))\n a.sort()\n if a[0]+a[1]==a[2]:\n-    print(\"YES\")\n else:\n-    print(\"NO\")\n \n \n",
        "origin_generated_text": "\n```\n a=list(map(int,input().split()))\n a.sort()\n if a[0]+a[1]==a[2]:\n-    print(\"YES\")\n else:\n-    print(\"NO\")\n \n \n```\n "
    },
    {
        "user_id": "u182139295",
        "problem_id": "p03041",
        "submission1_id": "s677368663",
        "crp_content": "\n \n \n \n n, k = map(int, input().split())\n \n \n s = list(input())\n \n a = s[k:k+1]\n \n-a = ','.join(a)\n-\n a = a.lower()\n \n s[k:k+1] = a\n \n-print(s)\n",
        "origin_generated_text": "\n```\n \n \n \n n, k = map(int, input().split())\n \n \n s = list(input())\n \n a = s[k:k+1]\n \n-a = ','.join(a)\n-\n a = a.lower()\n \n s[k:k+1] = a\n \n-print(s)\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s028676556",
        "crp_content": "\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = ra ** 2 - rb ** 2\n \n     if d1 <= d2:\n-        if math.fabs(dr) > math.fabs(d1):\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = ra ** 2 - rb ** 2\n \n     if d1 <= d2:\n-        if math.fabs(dr) > math.fabs(d1):\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u777299405",
        "problem_id": "p02281",
        "submission1_id": "s259446344",
        "crp_content": "\n n = int(input())\n tree = [0] * n\n root = set(range(n))\n for i in range(n):\n     node_id, left, right = map(int, input().split())\n     tree[i] = (left, right)\n     root -= {left, right}\n root_node = root.pop()\n \n \n def preorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield i\n     yield from preorder(left)\n     yield from preorder(right)\n \n \n def inorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield from inorder(left)\n     yield i\n     yield from inorder(right)\n \n \n def postorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield from postorder(left)\n     yield from postorder(right)\n     yield i\n \n-print(\"preorder\\n \", end=\"\")\n-print(*preorder(root_node))\n-print(\"inorder\\n \", end=\"\")\n-print(*inorder(root_node))\n-print(\"postorder\\n \", end=\"\")\n-print(*postorder(root_node))\n",
        "origin_generated_text": "\n```\n n = int(input())\n tree = [0] * n\n root = set(range(n))\n for i in range(n):\n     node_id, left, right = map(int, input().split())\n     tree[i] = (left, right)\n     root -= {left, right}\n root_node = root.pop()\n \n \n def preorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield i\n     yield from preorder(left)\n     yield from preorder(right)\n \n \n def inorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield from inorder(left)\n     yield i\n     yield from inorder(right)\n \n \n def postorder(i):\n     if i == -1:\n         return\n     (left, right) = tree[i]\n     yield from postorder(left)\n     yield from postorder(right)\n     yield i\n \n-print(\"preorder\\n \", end=\"\")\n-print(*preorder(root_node))\n-print(\"inorder\\n \", end=\"\")\n-print(*inorder(root_node))\n-print(\"postorder\\n \", end=\"\")\n-print(*postorder(root_node))\n```\n "
    },
    {
        "user_id": "u202406075",
        "problem_id": "p02854",
        "submission1_id": "s762017756",
        "crp_content": "\n import sys\n \n n = int(input())\n \n a = list(map(int, input().split()))\n \n cnt = 0\n sum_ = sum(a)/2\n \n for i in range(n):\n     cnt += a[i]\n     if cnt == sum_:\n         print(0)\n         sys.exit()\n     elif cnt > sum_:\n-        x1 = sum_ -cnt +a[i-1]\n-        if x1 <= cnt -sum_:\n-            x1 = cnt -sum_\n-        break\n \n print(int(x1*2))\n",
        "origin_generated_text": "\n```\n import sys\n \n n = int(input())\n \n a = list(map(int, input().split()))\n \n cnt = 0\n sum_ = sum(a)/2\n \n for i in range(n):\n     cnt += a[i]\n     if cnt == sum_:\n         print(0)\n         sys.exit()\n     elif cnt > sum_:\n-        x1 = sum_ -cnt +a[i-1]\n-        if x1 <= cnt -sum_:\n-            x1 = cnt -sum_\n-        break\n \n print(int(x1*2))\n```\n "
    },
    {
        "user_id": "u467736898",
        "problem_id": "p03054",
        "submission1_id": "s241880704",
        "crp_content": "\n H, W, N = map(int, input().split())\n Sr, Sc = map(int, input().split())\n S = input()\n T = input()\n \n \n l = 1\n r = W\n u = 1\n d = H\n for s, t in zip(S[::-1], T[::-1]):\n \n     if t==\"L\":\n         r = min(r+1, W)\n     elif t==\"R\":\n         l = max(l-1, 1)\n     elif t==\"U\":\n         d = min(d+1, W)\n     else:\n         u = max(u-1, 1)\n \n     if s==\"L\":\n         l+=1\n     elif s==\"R\":\n         r-=1\n     elif s==\"U\":\n         u+=1\n     else:\n         d-=1\n \n-    if l > r or u > d:\n-        print(\"NO\")\n-        exit()\n-    \n if d<=Sr<=u and l<=Sc<=r:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n",
        "origin_generated_text": "\n```\n H, W, N = map(int, input().split())\n Sr, Sc = map(int, input().split())\n S = input()\n T = input()\n \n \n l = 1\n r = W\n u = 1\n d = H\n for s, t in zip(S[::-1], T[::-1]):\n \n     if t==\"L\":\n         r = min(r+1, W)\n     elif t==\"R\":\n         l = max(l-1, 1)\n     elif t==\"U\":\n         d = min(d+1, W)\n     else:\n         u = max(u-1, 1)\n \n     if s==\"L\":\n         l+=1\n     elif s==\"R\":\n         r-=1\n     elif s==\"U\":\n         u+=1\n     else:\n         d-=1\n \n-    if l > r or u > d:\n-        print(\"NO\")\n-        exit()\n-    \n if d<=Sr<=u and l<=Sc<=r:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n```\n "
    },
    {
        "user_id": "u424241608",
        "problem_id": "p03106",
        "submission1_id": "s313588120",
        "crp_content": "\n \n a,b,k = map(int,input().split())\n \n cnt = 0\n for i in range(1,min(a,b)+1):\n   if a%i == 0 and b%i == 0:\n     cnt+=1\n     if cnt == k:\n-      print(k)\n       break\n \n",
        "origin_generated_text": "\n```\n \n a,b,k = map(int,input().split())\n \n cnt = 0\n for i in range(1,min(a,b)+1):\n   if a%i == 0 and b%i == 0:\n     cnt+=1\n     if cnt == k:\n-      print(k)\n       break\n \n```\n "
    },
    {
        "user_id": "u470542271",
        "problem_id": "p03625",
        "submission1_id": "s076698114",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n \n tmp = []\n from collections import Counter\n c = Counter(a)\n for k in c.keys():\n     if c[k] >= 2:\n         tmp.append(k)\n \n tmp.sort()\n if len(tmp) >= 2:\n     print(tmp[-1] * tmp[-2])\n else:\n     print(0)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n \n tmp = []\n from collections import Counter\n c = Counter(a)\n for k in c.keys():\n     if c[k] >= 2:\n         tmp.append(k)\n \n tmp.sort()\n if len(tmp) >= 2:\n     print(tmp[-1] * tmp[-2])\n else:\n     print(0)\n \n```\n "
    },
    {
        "user_id": "u677037479",
        "problem_id": "p03729",
        "submission1_id": "s642874323",
        "crp_content": "\n a,b,c = input().split()\n \n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print(\"Yes\")\n \n     elif b[-1] != c[0]:\n-        print(\"No\")\n \n elif a[-1] != b[0]:\n-    print(\"No\")\n \n",
        "origin_generated_text": "\n```\n a,b,c = input().split()\n \n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print(\"Yes\")\n \n     elif b[-1] != c[0]:\n-        print(\"No\")\n \n elif a[-1] != b[0]:\n-    print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u725133562",
        "problem_id": "p04019",
        "submission1_id": "s877234796",
        "crp_content": "\n s = input()\n l = len(s)\n judge = 0\n if 'N' in s:\n     judge += 2\n if 'W' in s:\n-    judge += 1/1000\n if 'S' in s:\n     judge -= 2\n if 'E' in s:\n-    judge -= 1/1000\n \n print('Yes' if judge == 0 else 'No')\n",
        "origin_generated_text": "\n```\n s = input()\n l = len(s)\n judge = 0\n if 'N' in s:\n     judge += 2\n if 'W' in s:\n-    judge += 1/1000\n if 'S' in s:\n     judge -= 2\n if 'E' in s:\n-    judge -= 1/1000\n \n print('Yes' if judge == 0 else 'No')\n```\n "
    },
    {
        "user_id": "u069129582",
        "problem_id": "p02917",
        "submission1_id": "s970568955",
        "crp_content": "\n n=int(input())\n b=list(map(int,input().split()))\n-for j in range(n-2):\n-    if b[j]>min(b[j:]):\n-        b[j]=min(b[j:])\n \n-print(sum(b)+b[0])\n",
        "origin_generated_text": "\n```\n n=int(input())\n b=list(map(int,input().split()))\n-for j in range(n-2):\n-    if b[j]>min(b[j:]):\n-        b[j]=min(b[j:])\n \n-print(sum(b)+b[0])\n```\n "
    },
    {
        "user_id": "u657208344",
        "problem_id": "p03023",
        "submission1_id": "s708467397",
        "crp_content": "\n n=int(input())\n-print(n*90)\n",
        "origin_generated_text": "\n```\n n=int(input())\n-print(n*90)\n```\n "
    },
    {
        "user_id": "u333404917",
        "problem_id": "p03023",
        "submission1_id": "s453817557",
        "crp_content": "\n N = int(input())\n-print(N-1*90)\n",
        "origin_generated_text": "\n```\n N = int(input())\n-print(N-1*90)\n```\n "
    },
    {
        "user_id": "u773711732",
        "problem_id": "p02917",
        "submission1_id": "s469695259",
        "crp_content": "\n N = int(input())\n Bi = list(map(int, input().split()))\n listA = [0 for i in range(N)]\n-listA[N-1] = Bi[N-2]\n gokei = 0\n-for j in reversed(range(N-1)):\n-    listA[j] = min(Bi[j], Bi[j-1])\n \n for k in listA:\n     gokei += k\n print(gokei)\n",
        "origin_generated_text": "\n```\n N = int(input())\n Bi = list(map(int, input().split()))\n listA = [0 for i in range(N)]\n-listA[N-1] = Bi[N-2]\n gokei = 0\n-for j in reversed(range(N-1)):\n-    listA[j] = min(Bi[j], Bi[j-1])\n \n for k in listA:\n     gokei += k\n print(gokei)\n```\n "
    },
    {
        "user_id": "u777215291",
        "problem_id": "p03023",
        "submission1_id": "s884056559",
        "crp_content": "\n N = int(input())\n-print(180*(N-1))\n",
        "origin_generated_text": "\n```\n N = int(input())\n-print(180*(N-1))\n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s082972706",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tif(i!=n-1):\n \t\t\ta=b\n \t\t\tb=c\n-\t\t\tc=1\n \telse:\n \t\tc+=1\n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tif(i!=n-1):\n \t\t\ta=b\n \t\t\tb=c\n-\t\t\tc=1\n \telse:\n \t\tc+=1\n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u094565093",
        "problem_id": "p03106",
        "submission1_id": "s473237710",
        "crp_content": "\n A, B, K=map(int, input().split())\n if A>B:\n     tmp=A\n     A=B\n     B=tmp\n count=0\n for i in range(1,A+1):\n-    if A%i ==0 & B%i==0:\n         count+=1\n     if count ==K:\n         break\n-print(i)\n",
        "origin_generated_text": "\n```\n A, B, K=map(int, input().split())\n if A>B:\n     tmp=A\n     A=B\n     B=tmp\n count=0\n for i in range(1,A+1):\n-    if A%i ==0 & B%i==0:\n         count+=1\n     if count ==K:\n         break\n-print(i)\n```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03303",
        "submission1_id": "s893265962",
        "crp_content": "\n S = list(input())\n w = int(input())\n \n L = len(S)\n \n ans = []\n \n for i in range(0,L,w):\n-\tif i < L-1:\n \t\tans.append(S[i])\n \n \n print (''.join(ans))\n",
        "origin_generated_text": "\n```\n S = list(input())\n w = int(input())\n \n L = len(S)\n \n ans = []\n \n for i in range(0,L,w):\n-\tif i < L-1:\n \t\tans.append(S[i])\n \n \n print (''.join(ans))\n```\n "
    },
    {
        "user_id": "u923659712",
        "problem_id": "p03479",
        "submission1_id": "s267069005",
        "crp_content": "\n a,b=map(int,input().split())\n ans=0\n-while b>a:\n   a*=2\n   ans+=1\n print(ans-1)\n",
        "origin_generated_text": "\n```\n a,b=map(int,input().split())\n ans=0\n-while b>a:\n   a*=2\n   ans+=1\n print(ans-1)\n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03274",
        "submission1_id": "s344045049",
        "crp_content": "\n N, K = map(int, input().split(' '))\n a= list(map(int, input().split(' ')))\n \n INF = float('inf')\n ans = INF\n \n-for i in range(N-K):\n-    ans = min(ans, abs(a[i+K-1]-a[i])+min(abs(a[i+K-1]), abs(a[i])))\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split(' '))\n a= list(map(int, input().split(' ')))\n \n INF = float('inf')\n ans = INF\n \n-for i in range(N-K):\n-    ans = min(ans, abs(a[i+K-1]-a[i])+min(abs(a[i+K-1]), abs(a[i])))\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u600319862",
        "problem_id": "p03036",
        "submission1_id": "s337689794",
        "crp_content": "\n a,b,c = map(int,input().split())\n def fib(n):\n   if n == 0:\n     return c\n   else:\n     return 2 * fib(n-1) -10\n   \n for i in range(10):\n-  print(fib(i+1))\n",
        "origin_generated_text": "\n```\n a,b,c = map(int,input().split())\n def fib(n):\n   if n == 0:\n     return c\n   else:\n     return 2 * fib(n-1) -10\n   \n for i in range(10):\n-  print(fib(i+1))\n```\n "
    },
    {
        "user_id": "u970899068",
        "problem_id": "p03102",
        "submission1_id": "s770219177",
        "crp_content": "\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n \n count=0\n for i in range(N):\n   A = list(map(int, input().split()))\n   sum=0\n   for j in range(M):\n     sum+=B[j]*A[j]\n     if sum+C>0:\n       count+=1\n \n print(count)\n",
        "origin_generated_text": "\n```\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n \n count=0\n for i in range(N):\n   A = list(map(int, input().split()))\n   sum=0\n   for j in range(M):\n     sum+=B[j]*A[j]\n     if sum+C>0:\n       count+=1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u339881903",
        "problem_id": "p02880",
        "submission1_id": "s000151196",
        "crp_content": "\n N = input()\n \n hoge = []\n for i in range(1, 10):\n     for j in range(1, 10):\n         hoge.append(i * j)\n \n if N in hoge:\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n N = input()\n \n hoge = []\n for i in range(1, 10):\n     for j in range(1, 10):\n         hoge.append(i * j)\n \n if N in hoge:\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u626891113",
        "problem_id": "p02660",
        "submission1_id": "s362952496",
        "crp_content": "\n from collections import Counter\n n = int(input())\n ans = 0\n def primes(n):\n     is_p = [True]*(n + 1)\n     is_p[0] = False\n     is_p[1] = False\n     for i in range(2, int(n**0.5)+1):\n         if not is_p[i]:\n             continue\n         for j in range(i*2, n+1, i):\n             is_p[j] = False\n     return [i for i in range(n+1) if is_p[i]]\n \n-p = primes(10**6)\n \n dp = []\n cl = []\n n1 = n\n for i in p:\n     if n%i == 0:\n         cl.append(i)\n     while n%i == 0:\n         n = n/i\n         dp.append(i)\n     if n == 1:\n         break\n if n == n1:\n     dp.append(n)\n     cl.append(n)\n \n c = Counter(dp)\n \n for i in cl:\n     cnt = 1\n     while c[i] >= cnt:\n         c[i] -= cnt\n         ans += 1\n         cnt += 1\n         \n print(ans)\n \n",
        "origin_generated_text": "\n```\n from collections import Counter\n n = int(input())\n ans = 0\n def primes(n):\n     is_p = [True]*(n + 1)\n     is_p[0] = False\n     is_p[1] = False\n     for i in range(2, int(n**0.5)+1):\n         if not is_p[i]:\n             continue\n         for j in range(i*2, n+1, i):\n             is_p[j] = False\n     return [i for i in range(n+1) if is_p[i]]\n \n-p = primes(10**6)\n \n dp = []\n cl = []\n n1 = n\n for i in p:\n     if n%i == 0:\n         cl.append(i)\n     while n%i == 0:\n         n = n/i\n         dp.append(i)\n     if n == 1:\n         break\n if n == n1:\n     dp.append(n)\n     cl.append(n)\n \n c = Counter(dp)\n \n for i in cl:\n     cnt = 1\n     while c[i] >= cnt:\n         c[i] -= cnt\n         ans += 1\n         cnt += 1\n         \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u270343876",
        "problem_id": "p02665",
        "submission1_id": "s305478809",
        "crp_content": "\n n = int(input())+1\n a = list(map(int, input().split()))\n m_node = [1]*n\n node = 0\n total = 0\n \n if n == 1:\n     if a[0] != 1:\n         print(\"-1\", end=\"\")\n         exit()\n     else:\n         print(\"1\", end=\"\")\n         exit()\n \n for i in range(1, n):\n     m_node[i] = (m_node[i-1] - a[i-1])*2\n     if m_node[i] <= 0:\n         print(\"-1\", end=\"\")\n         exit()\n for i in reversed(range(n)):\n     if a[i] >= m_node[i]:\n         print(\"-1\", end=\"\")\n         exit()\n     node = min((node+a[i]), m_node[i])\n     total += node\n \n print(total, end=\"\")\n",
        "origin_generated_text": "\n```\n n = int(input())+1\n a = list(map(int, input().split()))\n m_node = [1]*n\n node = 0\n total = 0\n \n if n == 1:\n     if a[0] != 1:\n         print(\"-1\", end=\"\")\n         exit()\n     else:\n         print(\"1\", end=\"\")\n         exit()\n \n for i in range(1, n):\n     m_node[i] = (m_node[i-1] - a[i-1])*2\n     if m_node[i] <= 0:\n         print(\"-1\", end=\"\")\n         exit()\n for i in reversed(range(n)):\n     if a[i] >= m_node[i]:\n         print(\"-1\", end=\"\")\n         exit()\n     node = min((node+a[i]), m_node[i])\n     total += node\n \n print(total, end=\"\")\n```\n "
    },
    {
        "user_id": "u379956761",
        "problem_id": "p00023",
        "submission1_id": "s054307587",
        "crp_content": "\n import sys\n import math\n \n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n \n     distance = math.sqrt(abs(xa-xb)**2 + abs(ya-yb)**2)\n     if distance < ra + rb:\n-        if (ra < rb and distance < ra) or (ra > rb and distance < rb):\n             print(\"2\")\n         else:\n             print(\"1\")\n     else:\n         print(\"0\")\n",
        "origin_generated_text": "\n```\n import sys\n import math\n \n n = int(input())\n \n for _ in range(n):\n     xa, ya, ra, xb, yb, rb = map(float, input().split())\n \n     distance = math.sqrt(abs(xa-xb)**2 + abs(ya-yb)**2)\n     if distance < ra + rb:\n-        if (ra < rb and distance < ra) or (ra > rb and distance < rb):\n             print(\"2\")\n         else:\n             print(\"1\")\n     else:\n         print(\"0\")\n```\n "
    },
    {
        "user_id": "u743272507",
        "problem_id": "p03272",
        "submission1_id": "s808445218",
        "crp_content": "\n a,b = map(int,input().split())\n-print(b-a+1)\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n-print(b-a+1)\n```\n "
    },
    {
        "user_id": "u515052479",
        "problem_id": "p03274",
        "submission1_id": "s616470250",
        "crp_content": "\n n,k = map(int,input().split())\n x = list(map(int,input().split()))\n ans = 10**9\n   \n for i in range(n-k+1):\n   if x[k-1+i]*x[i] < 0:\n     if x[k-1+i] <= abs(x[i]) :\n       temp = 2*x[k-1+i] - x[i]\n     elif abs(x[i]) < x[k-1+i]:\n       temp = x[k-1+i] - 2*x[i]\n       \n   elif (0 <= x[i]):\n     temp = x[k+i-1]\n \n   elif (x[k+i-1] <= 0):\n-    temp = -x[0]\n     \n   if temp < ans:\n     ans = temp\n     \n print(ans)\n",
        "origin_generated_text": "\n```\n n,k = map(int,input().split())\n x = list(map(int,input().split()))\n ans = 10**9\n   \n for i in range(n-k+1):\n   if x[k-1+i]*x[i] < 0:\n     if x[k-1+i] <= abs(x[i]) :\n       temp = 2*x[k-1+i] - x[i]\n     elif abs(x[i]) < x[k-1+i]:\n       temp = x[k-1+i] - 2*x[i]\n       \n   elif (0 <= x[i]):\n     temp = x[k+i-1]\n \n   elif (x[k+i-1] <= 0):\n-    temp = -x[0]\n     \n   if temp < ans:\n     ans = temp\n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u200527996",
        "problem_id": "p02959",
        "submission1_id": "s802662914",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n ans = 0\n for i in range(N):\n     if A[i] >= B[i]:\n         ans += B[i]\n     if A[i] < B[i]:\n         ans += A[i]\n-        if A[i+1] >= (B[i] - A[i]):\n-            A[i+1] -= B[i] - A[i]\n-            ans += B[i] - A[i]\n-        else:\n-            A[i+1] = 0\n-            ans += A[i+1]\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n ans = 0\n for i in range(N):\n     if A[i] >= B[i]:\n         ans += B[i]\n     if A[i] < B[i]:\n         ans += A[i]\n-        if A[i+1] >= (B[i] - A[i]):\n-            A[i+1] -= B[i] - A[i]\n-            ans += B[i] - A[i]\n-        else:\n-            A[i+1] = 0\n-            ans += A[i+1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u086503932",
        "problem_id": "p04019",
        "submission1_id": "s400551564",
        "crp_content": "\n S = input()\n a = S.count('N')\n b = S.count('S')\n c = S.count('E') \n d = S.count('W')\n \n-if a*b > 0 and c==0 and d==0:\n   print('Yes')\n-elif c*d >0 and a==0 and b==0:\n   print('Yes')\n-elif a==0 and b==0 and c==0 and d==0:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n S = input()\n a = S.count('N')\n b = S.count('S')\n c = S.count('E') \n d = S.count('W')\n \n-if a*b > 0 and c==0 and d==0:\n   print('Yes')\n-elif c*d >0 and a==0 and b==0:\n   print('Yes')\n-elif a==0 and b==0 and c==0 and d==0:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u641722141",
        "problem_id": "p03943",
        "submission1_id": "s665848524",
        "crp_content": "\n a,b,c=map(int,input().split())\n-if abs(a-b)==c:print('Yes')\n else:print('No')\n",
        "origin_generated_text": "\n```\n a,b,c=map(int,input().split())\n-if abs(a-b)==c:print('Yes')\n else:print('No')\n```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s045277997",
        "crp_content": "\n n = int(input())\n tree = [[] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     tree[id] = [left, right]\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n print('Preoder')\n preoder(0)\n print('')\n print('Inorder')\n inorder(0)\n print('')\n print('Postorder')\n postorder(0)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n tree = [[] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     tree[id] = [left, right]\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n print('Preoder')\n preoder(0)\n print('')\n print('Inorder')\n inorder(0)\n print('')\n print('Postorder')\n postorder(0)\n \n \n```\n "
    },
    {
        "user_id": "u072717685",
        "problem_id": "p03796",
        "submission1_id": "s220690653",
        "crp_content": "\n n = int(input())\n r = 1\n w = 10**9 + 7\n for i in range(1, n+1):\n-  if r > w:\n-    r = (r % w) * i\n   else:\n     r *= i\n   \n   \n print(r)\n",
        "origin_generated_text": "\n```\n n = int(input())\n r = 1\n w = 10**9 + 7\n for i in range(1, n+1):\n-  if r > w:\n-    r = (r % w) * i\n   else:\n     r *= i\n   \n   \n print(r)\n```\n "
    },
    {
        "user_id": "u283869437",
        "problem_id": "p03972",
        "submission1_id": "s366542834",
        "crp_content": "\n W,H=map(int,input().split())\n-p=sorted(int(input())for _ in'_'*W)\n-p+=10**18,\n-q=sorted(int(input())for _ in'_'*H)\n-q+=10**18,\n z=i=j=0\n h,w=H+1,W+1\n while i<W or j<H:\n \tif h*p[i]<w*q[j]:\n \t\tz+=h*p[i]\n \t\ti+=1\n \t\tw-=1\n \telse:\n \t\tz+=w*q[j]\n \t\tj+=1\n \t\th-=1\n print(z)\n \n",
        "origin_generated_text": "\n```\n W,H=map(int,input().split())\n-p=sorted(int(input())for _ in'_'*W)\n-p+=10**18,\n-q=sorted(int(input())for _ in'_'*H)\n-q+=10**18,\n z=i=j=0\n h,w=H+1,W+1\n while i<W or j<H:\n \tif h*p[i]<w*q[j]:\n \t\tz+=h*p[i]\n \t\ti+=1\n \t\tw-=1\n \telse:\n \t\tz+=w*q[j]\n \t\tj+=1\n \t\th-=1\n print(z)\n \n```\n "
    },
    {
        "user_id": "u483304397",
        "problem_id": "p02912",
        "submission1_id": "s808137767",
        "crp_content": "\n N,M = map(int, input().split())\n import heapq\n A = list(map(int, input().split()))\n A = [(-x,x) for x in A]\n heapq.heapify(A)\n def conf(A, M):\n     if M > 0:\n         a = heapq.heappop(A)[1]\n-        heapq.heappush(A, (-int(a/2), int(a/2)))\n     else:\n         return A\n     return conf(A, M-1)\n B = [a[1] for a in A]\n print(sum(B))\n",
        "origin_generated_text": "\n```\n N,M = map(int, input().split())\n import heapq\n A = list(map(int, input().split()))\n A = [(-x,x) for x in A]\n heapq.heapify(A)\n def conf(A, M):\n     if M > 0:\n         a = heapq.heappop(A)[1]\n-        heapq.heappush(A, (-int(a/2), int(a/2)))\n     else:\n         return A\n     return conf(A, M-1)\n B = [a[1] for a in A]\n print(sum(B))\n```\n "
    },
    {
        "user_id": "u740284863",
        "problem_id": "p03992",
        "submission1_id": "s014052935",
        "crp_content": "\n s=str(input())\n-print(s[0:3]+\" \"+s[4:])\n",
        "origin_generated_text": "\n```\n s=str(input())\n-print(s[0:3]+\" \"+s[4:])\n```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03633",
        "submission1_id": "s960432154",
        "crp_content": "\n import functools\n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a, b):\n   if a < b:\n     a, b = b, a\n   if b == 0:\n     return a\n   return gcd(b, b % a)\n  \n def lcm(A, B):\n-  return A * B \n  \n print(functools.reduce(lcm, T))\n",
        "origin_generated_text": "\n```\n import functools\n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a, b):\n   if a < b:\n     a, b = b, a\n   if b == 0:\n     return a\n   return gcd(b, b % a)\n  \n def lcm(A, B):\n-  return A * B \n  \n print(functools.reduce(lcm, T))\n```\n "
    },
    {
        "user_id": "u459150945",
        "problem_id": "p03568",
        "submission1_id": "s304868794",
        "crp_content": "\n N = int(input())\n An = list(map(int, input().split()))\n odd = sum([1 for a in An if a % 2 != 0])\n-print(3**N - 2**odd)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n An = list(map(int, input().split()))\n odd = sum([1 for a in An if a % 2 != 0])\n-print(3**N - 2**odd)\n \n```\n "
    },
    {
        "user_id": "u326647750",
        "problem_id": "p03760",
        "submission1_id": "s927892812",
        "crp_content": "\n o = list(input())\n-e = list(input()) + []\n for i, j in zip(o, e):\n     print(i + j, end=\"\")\n \n",
        "origin_generated_text": "\n```\n o = list(input())\n-e = list(input()) + []\n for i, j in zip(o, e):\n     print(i + j, end=\"\")\n \n```\n "
    },
    {
        "user_id": "u276192130",
        "problem_id": "p03613",
        "submission1_id": "s289214295",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n num = [0 for i in range(max(a)+2)]\n for i in a:\n     num[i] += 1\n temp = 0\n ans = 0\n-for i in range(max(a)):\n-    temp = num[i] + num[i+1] + num[i+2]\n-    ans = max(temp, ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n num = [0 for i in range(max(a)+2)]\n for i in a:\n     num[i] += 1\n temp = 0\n ans = 0\n-for i in range(max(a)):\n-    temp = num[i] + num[i+1] + num[i+2]\n-    ans = max(temp, ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u572193732",
        "problem_id": "p02959",
        "submission1_id": "s476499613",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n \n count = 0\n for i in range(N):\n     if A[i] < B[i]:\n         count += A[i]\n         B[i] -= A[i]\n     else:\n         count += B[i]\n         B[i] = 0\n     if A[i+1] < B[i]:\n         count += A[i+1]\n         B[i] -= A[i+1]\n         A[i+1] = 0\n     else:\n         count += B[i]\n         B[i] = 0\n-        A[i+1] -= B[i]\n-        \n print(count)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n \n count = 0\n for i in range(N):\n     if A[i] < B[i]:\n         count += A[i]\n         B[i] -= A[i]\n     else:\n         count += B[i]\n         B[i] = 0\n     if A[i+1] < B[i]:\n         count += A[i+1]\n         B[i] -= A[i+1]\n         A[i+1] = 0\n     else:\n         count += B[i]\n         B[i] = 0\n-        A[i+1] -= B[i]\n-        \n print(count)\n```\n "
    },
    {
        "user_id": "u569742427",
        "problem_id": "p03563",
        "submission1_id": "s663626956",
        "crp_content": "\n R=float(input())\n G=float(input())\n \n-print(G*2-R)\n \n",
        "origin_generated_text": "\n```\n R=float(input())\n G=float(input())\n \n-print(G*2-R)\n \n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p04019",
        "submission1_id": "s864565282",
        "crp_content": "\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     s = S()\n     ans = [0, 0]\n     for si in s:\n         if si == \"N\":\n             ans[0] = min(ans[0] + 1, 1)\n         elif si == \"W\":\n             ans[1] = min(ans[1] + 1, 1)\n         elif si == \"S\":\n             ans[0] = max(ans[0] - 1, -1)\n         else:\n             ans[1] = max(ans[1] - 1, -1)\n-    if ans == [0, 0]:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     s = S()\n     ans = [0, 0]\n     for si in s:\n         if si == \"N\":\n             ans[0] = min(ans[0] + 1, 1)\n         elif si == \"W\":\n             ans[1] = min(ans[1] + 1, 1)\n         elif si == \"S\":\n             ans[0] = max(ans[0] - 1, -1)\n         else:\n             ans[1] = max(ans[1] - 1, -1)\n-    if ans == [0, 0]:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n```\n "
    },
    {
        "user_id": "u174273188",
        "problem_id": "p02963",
        "submission1_id": "s487578886",
        "crp_content": "\n def resolve():\n     s = int(input())\n     \n-    x2, y2 = 10 ** 9, 1\n-    y3 = s \n-    x3 = s % 10 ** 9\n-    print(0, 0, x2, y2, x3, y3)\n \n \n if __name__ == \"__main__\":\n     resolve()\n \n",
        "origin_generated_text": "\n```\n def resolve():\n     s = int(input())\n     \n-    x2, y2 = 10 ** 9, 1\n-    y3 = s \n-    x3 = s % 10 ** 9\n-    print(0, 0, x2, y2, x3, y3)\n \n \n if __name__ == \"__main__\":\n     resolve()\n \n```\n "
    },
    {
        "user_id": "u361826811",
        "problem_id": "p03760",
        "submission1_id": "s872301249",
        "crp_content": "\n \n \n import sys\n \n \n \n \n read = sys.stdin.buffer.read\n readline = sys.stdin.buffer.readline\n readlines = sys.stdin.buffer.readlines\n sys.setrecursionlimit(10 ** 7)\n \n-O, E = read().decode('utf8').split()\n ans = [i+j for i, j in zip(O, E)]\n \n print(''.join(ans))\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n \n \n \n \n read = sys.stdin.buffer.read\n readline = sys.stdin.buffer.readline\n readlines = sys.stdin.buffer.readlines\n sys.setrecursionlimit(10 ** 7)\n \n-O, E = read().decode('utf8').split()\n ans = [i+j for i, j in zip(O, E)]\n \n print(''.join(ans))\n \n```\n "
    },
    {
        "user_id": "u161164709",
        "problem_id": "p02556",
        "submission1_id": "s625870490",
        "crp_content": "\n n = int(input())\n xy_array = [list(map(int, input().split())) for _ in range(n)]\n \n th = pow(10, 9)\n right_up_max = 0\n left_down_min = th\n left_up_max = 0\n right_down_min = th\n \n for x, y in xy_array:\n-    right_up_max = max(x + y, right_up_max)\n-    left_down_min = min(x + y, left_down_min)\n-    left_up_max = max(th - x + y, left_up_max)\n-    right_down_min = min(th - x + y, right_down_min)\n \n ans = max(right_up_max - left_down_min, left_up_max - right_down_min)\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n xy_array = [list(map(int, input().split())) for _ in range(n)]\n \n th = pow(10, 9)\n right_up_max = 0\n left_down_min = th\n left_up_max = 0\n right_down_min = th\n \n for x, y in xy_array:\n-    right_up_max = max(x + y, right_up_max)\n-    left_down_min = min(x + y, left_down_min)\n-    left_up_max = max(th - x + y, left_up_max)\n-    right_down_min = min(th - x + y, right_down_min)\n \n ans = max(right_up_max - left_down_min, left_up_max - right_down_min)\n print(ans)\n```\n "
    },
    {
        "user_id": "u333731247",
        "problem_id": "p03041",
        "submission1_id": "s419862107",
        "crp_content": "\n N,K=map(int,input().split())\n S=list(input())\n \n S[K-1]=S[K-1].lower()\n \n-print(S)\n",
        "origin_generated_text": "\n```\n N,K=map(int,input().split())\n S=list(input())\n \n S[K-1]=S[K-1].lower()\n \n-print(S)\n```\n "
    },
    {
        "user_id": "u692053345",
        "problem_id": "p02854",
        "submission1_id": "s866799807",
        "crp_content": "\n n=int(input())\n S=list(map(int, input().split()))\n Sum=sum(S)\n \n wa=0\n count=0\n for i in range(n):\n-    if wa<Sum/2:\n         wa=wa+S[i]\n         count=count+1\n if count==n:\n     wa=wa-S[n-1]\n         \n print(int(abs(Sum-2*wa)))\n",
        "origin_generated_text": "\n```\n n=int(input())\n S=list(map(int, input().split()))\n Sum=sum(S)\n \n wa=0\n count=0\n for i in range(n):\n-    if wa<Sum/2:\n         wa=wa+S[i]\n         count=count+1\n if count==n:\n     wa=wa-S[n-1]\n         \n print(int(abs(Sum-2*wa)))\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s018403980",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n```\n "
    },
    {
        "user_id": "u400765446",
        "problem_id": "p02385",
        "submission1_id": "s439234011",
        "crp_content": "\n import sys\n class Dice:\n \n     def __init__(self):\n         \n         \n         self.t = 1\n         self.s = 2\n         self.e = 3\n         self.w = 4\n         self.n = 5\n         self.b = 6\n         self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n \n     def __init__(self, t, s, e, w, n, b):\n         \n         self.t = t\n         self.s = s\n         self.e = e\n         self.w = w\n         self.n = n\n         self.b = b\n         self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n \n     def rot(self, way):\n         if way == 0: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.n, self.t, self.e, self.w, self.b, self.s\n         elif way == 1: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.s, self.b, self.e, self.w, self.t, self.n\n         elif way == 2: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.w, self.s, self.t, self.b, self.n, self.e\n         elif way == 3: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.e, self.s, self.b, self.t, self.n, self.w\n         elif way == 4: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.t, self.w, self.s, self.n, self.e, self.b\n     \n     def settop(self, num):\n         \n         if num not in (self.t, self.s, self.e, self.w, self.n, self.b):\n-            print(\"unexpected error\")\n-            sys.exit\n         elif num == self.t: \n             pass\n         elif num == self.b: \n             self.rot(0)\n             self.rot(0)\n         elif num == self.n: \n             self.rot(1)\n         elif num == self.s: \n             self.rot(0)\n         elif num == self.e: \n             self.rot(2)\n         elif num == self.w: \n             self.rot(3)\n        \n \n def main():\n     t1,s1,e1,w1,n1,b1 = map(int, input().split())\n     t2,s2,e2,w2,n2,b2 = map(int, input().split())\n \n     dice1 = Dice(t1,s1,e1,w1,n1,b1)\n     dice2 = Dice(t2,s2,e2,w2,n2,b2)\n \n     \n     dice2.settop(dice1.t)\n     flag = 0\n     for _ in range(4):\n         if (dice1.t, dice1.s, dice1.e, dice1.w, dice1.n, dice1.b) == (dice2.t, dice2.s, dice2.e, dice2.w, dice2.n, dice2.b):\n             flag = 1\n             break\n         else:\n             dice2.rot(4)\n \n     if flag == 1:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n \n if __name__ == '__main__':\n     main()\n \n \n",
        "origin_generated_text": "\n```\n import sys\n class Dice:\n \n     def __init__(self):\n         \n         \n         self.t = 1\n         self.s = 2\n         self.e = 3\n         self.w = 4\n         self.n = 5\n         self.b = 6\n         self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n \n     def __init__(self, t, s, e, w, n, b):\n         \n         self.t = t\n         self.s = s\n         self.e = e\n         self.w = w\n         self.n = n\n         self.b = b\n         self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n \n     def rot(self, way):\n         if way == 0: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.n, self.t, self.e, self.w, self.b, self.s\n         elif way == 1: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.s, self.b, self.e, self.w, self.t, self.n\n         elif way == 2: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.w, self.s, self.t, self.b, self.n, self.e\n         elif way == 3: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.e, self.s, self.b, self.t, self.n, self.w\n         elif way == 4: \n             self.t, self.s, self.e, self.w, self.n, self.b = self.t, self.w, self.s, self.n, self.e, self.b\n     \n     def settop(self, num):\n         \n         if num not in (self.t, self.s, self.e, self.w, self.n, self.b):\n-            print(\"unexpected error\")\n-            sys.exit\n         elif num == self.t: \n             pass\n         elif num == self.b: \n             self.rot(0)\n             self.rot(0)\n         elif num == self.n: \n             self.rot(1)\n         elif num == self.s: \n             self.rot(0)\n         elif num == self.e: \n             self.rot(2)\n         elif num == self.w: \n             self.rot(3)\n        \n \n def main():\n     t1,s1,e1,w1,n1,b1 = map(int, input().split())\n     t2,s2,e2,w2,n2,b2 = map(int, input().split())\n \n     dice1 = Dice(t1,s1,e1,w1,n1,b1)\n     dice2 = Dice(t2,s2,e2,w2,n2,b2)\n \n     \n     dice2.settop(dice1.t)\n     flag = 0\n     for _ in range(4):\n         if (dice1.t, dice1.s, dice1.e, dice1.w, dice1.n, dice1.b) == (dice2.t, dice2.s, dice2.e, dice2.w, dice2.n, dice2.b):\n             flag = 1\n             break\n         else:\n             dice2.rot(4)\n \n     if flag == 1:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n \n if __name__ == '__main__':\n     main()\n \n \n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03303",
        "submission1_id": "s274397717",
        "crp_content": "\n s=input()\n n=int(input())\n ans=''\n for i in range(n):\n   if i%n==0:\n-    ans+=s[i]\n print(ans)\n     \n",
        "origin_generated_text": "\n```\n s=input()\n n=int(input())\n ans=''\n for i in range(n):\n   if i%n==0:\n-    ans+=s[i]\n print(ans)\n     \n```\n "
    },
    {
        "user_id": "u397256488",
        "problem_id": "p03752",
        "submission1_id": "s985125926",
        "crp_content": "\n N,K = map(int,input().split())\n bills = list(map(int,input().split()))\n ans = 0\n k = 0\n while k < K:\n \tk = 0\n \tcost =[]\n \tcosd = {}\n \ttatekae = {}\n \tmaxh = 0\n \tfor bi,b in enumerate(bills):\n \t\tif b > maxh:\n \t\t\tcost.append(0)\n \t\t\tmaxh = b\n \t\t\tk = k + 1\n \t\telse:\n \t\t\tc = maxh - b + 1\n \t\t\tcost.append(c)\n \t\t\tmaxh2 = maxh + 1\n \t\t\ttatekae[bi] = []\n \t\t\tfor b2i,b2 in enumerate(bills[bi:]):\n \t\t\t\tif maxh2 < b2:\n \t\t\t\t\tbreak\n \t\t\t\telif maxh2 == b2:\n \t\t\t\t\tc = c + 1\n \t\t\t\t\tmaxh2 = maxh2 + 1\n \t\t\t\t\ttatekae[bi].append(b2i + bi)\n \t\t\tcosd[bi] = c\n \tif k > K:\n \t\tbreak\n \ta = min(cosd.items(),key =lambda x: x[1])[0]\n \tans = ans + cosd[a]\n \tbills[a] = bills[a] + cost[a]\n \tfor t in tatekae[a]:\n \t\tbills[t] = bills[t] + 1\n \tk = k + 1\n print(ans)\n",
        "origin_generated_text": "\n```\n N,K = map(int,input().split())\n bills = list(map(int,input().split()))\n ans = 0\n k = 0\n while k < K:\n \tk = 0\n \tcost =[]\n \tcosd = {}\n \ttatekae = {}\n \tmaxh = 0\n \tfor bi,b in enumerate(bills):\n \t\tif b > maxh:\n \t\t\tcost.append(0)\n \t\t\tmaxh = b\n \t\t\tk = k + 1\n \t\telse:\n \t\t\tc = maxh - b + 1\n \t\t\tcost.append(c)\n \t\t\tmaxh2 = maxh + 1\n \t\t\ttatekae[bi] = []\n \t\t\tfor b2i,b2 in enumerate(bills[bi:]):\n \t\t\t\tif maxh2 < b2:\n \t\t\t\t\tbreak\n \t\t\t\telif maxh2 == b2:\n \t\t\t\t\tc = c + 1\n \t\t\t\t\tmaxh2 = maxh2 + 1\n \t\t\t\t\ttatekae[bi].append(b2i + bi)\n \t\t\tcosd[bi] = c\n \tif k > K:\n \t\tbreak\n \ta = min(cosd.items(),key =lambda x: x[1])[0]\n \tans = ans + cosd[a]\n \tbills[a] = bills[a] + cost[a]\n \tfor t in tatekae[a]:\n \t\tbills[t] = bills[t] + 1\n \tk = k + 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u844789719",
        "problem_id": "p03965",
        "submission1_id": "s866140112",
        "crp_content": "\n S = [1 if _ == 'p' else 0 for _ in input()]\n N = len(S)\n count_g = 0\n count_p = 0\n score = 0\n for hand_t in S:\n-    if hand_t == 0 and count_p < count_g:\n         count_p += 1\n         hand_a = 1\n     else:\n         count_g += 1\n         hand_a = 0\n     score += hand_a - hand_t\n \n print(score)\n \n",
        "origin_generated_text": "\n```\n S = [1 if _ == 'p' else 0 for _ in input()]\n N = len(S)\n count_g = 0\n count_p = 0\n score = 0\n for hand_t in S:\n-    if hand_t == 0 and count_p < count_g:\n         count_p += 1\n         hand_a = 1\n     else:\n         count_g += 1\n         hand_a = 0\n     score += hand_a - hand_t\n \n print(score)\n \n```\n "
    },
    {
        "user_id": "u516050812",
        "problem_id": "p02553",
        "submission1_id": "s637713268",
        "crp_content": "\n inp = list(map(int,input().split()))\n ans = []\n for i in range(4):\n-  for j in range(i+1,4):\n     ans.append(inp[i] * inp[j])\n     \n print(max(ans))\n",
        "origin_generated_text": "\n```\n inp = list(map(int,input().split()))\n ans = []\n for i in range(4):\n-  for j in range(i+1,4):\n     ans.append(inp[i] * inp[j])\n     \n print(max(ans))\n```\n "
    },
    {
        "user_id": "u265768297",
        "problem_id": "p03296",
        "submission1_id": "s062899045",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n ans=0\n-for i in range(n-2):\n-    if a[i]==a[i+1]:\n-        a[i+1]=-1\n         ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n ans=0\n-for i in range(n-2):\n-    if a[i]==a[i+1]:\n-        a[i+1]=-1\n         ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u850266651",
        "problem_id": "p03023",
        "submission1_id": "s019279677",
        "crp_content": "\n N = int(input())\n-print(180*(N-1))\n",
        "origin_generated_text": "\n```\n N = int(input())\n-print(180*(N-1))\n```\n "
    },
    {
        "user_id": "u764759179",
        "problem_id": "p02385",
        "submission1_id": "s807573479",
        "crp_content": "\n \n \n import random\n \n \n class Dice() :\n \n     mask = {'N':(1,5,2,3,0,4), 'E':(3,1,0,5,4,2),\n             'W':(2,1,5,0,4,3), 'S':(4,0,2,3,5,1)}\n     way = (\"N\",\"E\",\"W\",\"S\")\n \n     def __init__(self, data):\n         self.label = data\n \n     def move(self, data):\n         self.label = [self.label[idx] for idx in self.mask[data]]\n \n     def get_up(self):\n         return self.label[0]\n \n     def compare(self, dice2):\n         ok = False\n         for i in range(1000):\n             check = True\n             for i2 in range(6):\n                 if self.label[i2] == dice2.label[i2] :\n                     continue\n                 else:\n                     check = False\n                     break\n \n             if check :\n                 ok = True\n                 break\n             else:\n                 self.move(self.way[random.randint(0,3)])\n         return ok\n \n dice1 = Dice(input().split())\n dice2 = Dice(input().split())\n \n if dice1.compare(dice2) :\n-    print (\"OK\")\n else:\n-    print (\"NG\")\n \n",
        "origin_generated_text": "\n```\n \n \n import random\n \n \n class Dice() :\n \n     mask = {'N':(1,5,2,3,0,4), 'E':(3,1,0,5,4,2),\n             'W':(2,1,5,0,4,3), 'S':(4,0,2,3,5,1)}\n     way = (\"N\",\"E\",\"W\",\"S\")\n \n     def __init__(self, data):\n         self.label = data\n \n     def move(self, data):\n         self.label = [self.label[idx] for idx in self.mask[data]]\n \n     def get_up(self):\n         return self.label[0]\n \n     def compare(self, dice2):\n         ok = False\n         for i in range(1000):\n             check = True\n             for i2 in range(6):\n                 if self.label[i2] == dice2.label[i2] :\n                     continue\n                 else:\n                     check = False\n                     break\n \n             if check :\n                 ok = True\n                 break\n             else:\n                 self.move(self.way[random.randint(0,3)])\n         return ok\n \n dice1 = Dice(input().split())\n dice2 = Dice(input().split())\n \n if dice1.compare(dice2) :\n-    print (\"OK\")\n else:\n-    print (\"NG\")\n \n```\n "
    },
    {
        "user_id": "u382431597",
        "problem_id": "p02767",
        "submission1_id": "s064700252",
        "crp_content": "\n from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\n \n n = int(input())\n x = list(map(int, input().split()))\n \n x.sort()\n-ave = sum(x) / len(x)\n squared = sum([i*i for i in x])\n \n-print(Decimal(str(squared - n*(ave)*ave)).quantize(Decimal('0'), rounding=ROUND_HALF_UP))\n \n \n",
        "origin_generated_text": "\n```\n from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\n \n n = int(input())\n x = list(map(int, input().split()))\n \n x.sort()\n-ave = sum(x) / len(x)\n squared = sum([i*i for i in x])\n \n-print(Decimal(str(squared - n*(ave)*ave)).quantize(Decimal('0'), rounding=ROUND_HALF_UP))\n \n \n```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p03716",
        "submission1_id": "s815837487",
        "crp_content": "\n import sys\n from collections import Counter, deque, defaultdict\n from math import factorial\n import heapq, bisect\n import math\n import itertools\n sys.setrecursionlimit(10 ** 5 + 10)\n INF = 10*5\n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n \n n = INT()\n a = LIST()\n \n a1 = a[:2*n]\n a2 = a[n:]\n a2.reverse()\n for i in range(2*n):\n     a2[i] = a2[i]*-1\n \n def searchmax(a):\n-    print(a)\n     maxl = [0]*(n+1)\n     left = a[:n]\n     center = a[n:]\n     heapq.heapify(left)\n     maxl[0] = sum(left)\n     for i in range(1,n+1):\n         heapq.heappushpop(left, center[i-1])\n         maxl[i] = sum(left)\n-    print(maxl)\n     return maxl\n \n maxll = searchmax(a1)\n minrr = searchmax(a2)\n minrr.reverse()\n \n res = [INF *-1]*(n+1)\n for i in range(n+1):\n     res[i] = maxll[i] + minrr[i]\n \n print(max(res)) \n \n \n \n \n",
        "origin_generated_text": "\n```\n import sys\n from collections import Counter, deque, defaultdict\n from math import factorial\n import heapq, bisect\n import math\n import itertools\n sys.setrecursionlimit(10 ** 5 + 10)\n INF = 10*5\n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n \n n = INT()\n a = LIST()\n \n a1 = a[:2*n]\n a2 = a[n:]\n a2.reverse()\n for i in range(2*n):\n     a2[i] = a2[i]*-1\n \n def searchmax(a):\n-    print(a)\n     maxl = [0]*(n+1)\n     left = a[:n]\n     center = a[n:]\n     heapq.heapify(left)\n     maxl[0] = sum(left)\n     for i in range(1,n+1):\n         heapq.heappushpop(left, center[i-1])\n         maxl[i] = sum(left)\n-    print(maxl)\n     return maxl\n \n maxll = searchmax(a1)\n minrr = searchmax(a2)\n minrr.reverse()\n \n res = [INF *-1]*(n+1)\n for i in range(n+1):\n     res[i] = maxll[i] + minrr[i]\n \n print(max(res)) \n \n \n \n \n```\n "
    },
    {
        "user_id": "u796424048",
        "problem_id": "p03626",
        "submission1_id": "s460557632",
        "crp_content": "\n N = int(input())\n S_1 = list(input())\n S_2 = list(input())\n \n \n \n if S_1[0] == S_2[0]:\n     res = 3\n     flag = 0\n     i = 1\n else:\n     res = 6\n     flag = 1\n     i = 2\n \n while i != N:\n     if S_1[i] == S_2[i]:\n         if flag == 0:\n             res *= 2 \n         else:\n             res *= 1\n             flag = 0\n         i += 1\n \n     else:\n         if flag == 0:\n             res *= 2\n             flag = 1\n         else:\n             res *= 3\n         i += 2\n         \n ans = res%100000007\n \n print(ans)    \n",
        "origin_generated_text": "\n```\n N = int(input())\n S_1 = list(input())\n S_2 = list(input())\n \n \n \n if S_1[0] == S_2[0]:\n     res = 3\n     flag = 0\n     i = 1\n else:\n     res = 6\n     flag = 1\n     i = 2\n \n while i != N:\n     if S_1[i] == S_2[i]:\n         if flag == 0:\n             res *= 2 \n         else:\n             res *= 1\n             flag = 0\n         i += 1\n \n     else:\n         if flag == 0:\n             res *= 2\n             flag = 1\n         else:\n             res *= 3\n         i += 2\n         \n ans = res%100000007\n \n print(ans)    \n```\n "
    },
    {
        "user_id": "u550535134",
        "problem_id": "p03573",
        "submission1_id": "s863313216",
        "crp_content": "\n A, B, C = map(int, input().split())\n-print(\"A\" if B == C else \"B\" if A == C else \"C\")\n",
        "origin_generated_text": "\n```\n A, B, C = map(int, input().split())\n-print(\"A\" if B == C else \"B\" if A == C else \"C\")\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p03343",
        "submission1_id": "s528081204",
        "crp_content": "\n n,k,q=map(int,input().split())\n a=list(map(int,input().split()))\n ans=10**10\n for x in a:\n   b=[[]]\n   can=0\n   for i in a:\n     if i<x:\n       if len(b[-1]):b.append([])\n     else:b[-1].append(i)\n   if len(b[-1])==0:del b[-1]\n   for i in range(len(b)):b[i].sort()\n   c=[]\n   for i in b:\n     i.sort()\n     if len(i)>=k:c+=i[:len(i)-k+1]\n   if len(c)<q:continue\n   ans=min(ans,c[q-1]-c[0])\n print(ans)\n",
        "origin_generated_text": "\n```\n n,k,q=map(int,input().split())\n a=list(map(int,input().split()))\n ans=10**10\n for x in a:\n   b=[[]]\n   can=0\n   for i in a:\n     if i<x:\n       if len(b[-1]):b.append([])\n     else:b[-1].append(i)\n   if len(b[-1])==0:del b[-1]\n   for i in range(len(b)):b[i].sort()\n   c=[]\n   for i in b:\n     i.sort()\n     if len(i)>=k:c+=i[:len(i)-k+1]\n   if len(c)<q:continue\n   ans=min(ans,c[q-1]-c[0])\n print(ans)\n```\n "
    },
    {
        "user_id": "u318042557",
        "problem_id": "p02922",
        "submission1_id": "s643369443",
        "crp_content": "\n A, B = map(int, input().split())\n sum = 0\n i = 1\n if B != 1:\n     sum = A\n     while sum < B:\n         sum += (A-1)*i\n         i += 1\n     print(i)\n else:\n     print(0)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n sum = 0\n i = 1\n if B != 1:\n     sum = A\n     while sum < B:\n         sum += (A-1)*i\n         i += 1\n     print(i)\n else:\n     print(0)\n```\n "
    },
    {
        "user_id": "u981931040",
        "problem_id": "p03546",
        "submission1_id": "s654163359",
        "crp_content": "\n def warshall_floyd():\n     for middle in range(10):\n         for start in range(10):\n             for end in range(10):\n                 costs[start][end] = min(costs[start][end], costs[start][middle] + costs[middle][end])\n \n \n H, W = map(int, input().split())\n costs = []\n \n for i in range(10):\n     costs.append(list(map(int, input().split())))\n \n warshall_floyd()\n \n-print(*costs, sep='\\n')\n ans = 0\n for i in range(H):\n     wall = list(map(int, input().split()))\n     for num in wall:\n         if num != -1:\n             ans += costs[num][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n def warshall_floyd():\n     for middle in range(10):\n         for start in range(10):\n             for end in range(10):\n                 costs[start][end] = min(costs[start][end], costs[start][middle] + costs[middle][end])\n \n \n H, W = map(int, input().split())\n costs = []\n \n for i in range(10):\n     costs.append(list(map(int, input().split())))\n \n warshall_floyd()\n \n-print(*costs, sep='\\n')\n ans = 0\n for i in range(H):\n     wall = list(map(int, input().split()))\n     for num in wall:\n         if num != -1:\n             ans += costs[num][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u032222383",
        "problem_id": "p03102",
        "submission1_id": "s853135950",
        "crp_content": "\n n,m,c=map(int,input().split())\n b=list(map(int, input().split()))\n u=0\n for i in range(n):\n     inp=list(map(int,input().split()))\n     s=0\n     for j in range(m):\n-        s+=inp[j]*(j+1)\n     s+=c\n     if s>0:\n         u+=1\n print(u)\n",
        "origin_generated_text": "\n```\n n,m,c=map(int,input().split())\n b=list(map(int, input().split()))\n u=0\n for i in range(n):\n     inp=list(map(int,input().split()))\n     s=0\n     for j in range(m):\n-        s+=inp[j]*(j+1)\n     s+=c\n     if s>0:\n         u+=1\n print(u)\n```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03479",
        "submission1_id": "s919053388",
        "crp_content": "\n X, Y = map(int, input().split())\n c = 1\n while(True):\n   if X <= Y:\n     X *= 2\n     c += 1\n   else:\n     break\n print(c)\n",
        "origin_generated_text": "\n```\n X, Y = map(int, input().split())\n c = 1\n while(True):\n   if X <= Y:\n     X *= 2\n     c += 1\n   else:\n     break\n print(c)\n```\n "
    },
    {
        "user_id": "u731368968",
        "problem_id": "p03959",
        "submission1_id": "s578906540",
        "crp_content": "\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n \n x = [1 for _ in range(N)]\n for i in range(1,N):\n     if i == 0:\n         x[i] = 1\n     elif T[i - 1] < T[i]:\n         x[i] = 1\n     else:\n         x[i] = T[i]\n \n y = [1 for _ in range(N)]\n for i in range(N - 2, -1, -1):\n     if i == N - 1:\n-        y[i] == 1\n     if A[i] > A[i + 1]:\n         y[i] = 1\n     else:\n         y[i] = A[i]\n \n ans = 1\n \n for i in range(N):\n     ans = ans * min(x[i], y[i]) % int(1e9 + 7)\n \n print(ans)\n \n 11333\n 33121\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n \n x = [1 for _ in range(N)]\n for i in range(1,N):\n     if i == 0:\n         x[i] = 1\n     elif T[i - 1] < T[i]:\n         x[i] = 1\n     else:\n         x[i] = T[i]\n \n y = [1 for _ in range(N)]\n for i in range(N - 2, -1, -1):\n     if i == N - 1:\n-        y[i] == 1\n     if A[i] > A[i + 1]:\n         y[i] = 1\n     else:\n         y[i] = A[i]\n \n ans = 1\n \n for i in range(N):\n     ans = ans * min(x[i], y[i]) % int(1e9 + 7)\n \n print(ans)\n \n 11333\n 33121\n \n```\n "
    },
    {
        "user_id": "u453642820",
        "problem_id": "p03943",
        "submission1_id": "s981469154",
        "crp_content": "\n A=sorted(list(map(int,input().split())))\n-print(\"Yes\" if sum(A[:1])==A[2] else \"No\")\n",
        "origin_generated_text": "\n```\n A=sorted(list(map(int,input().split())))\n-print(\"Yes\" if sum(A[:1])==A[2] else \"No\")\n```\n "
    },
    {
        "user_id": "u657512990",
        "problem_id": "p03970",
        "submission1_id": "s101133418",
        "crp_content": "\n \n s=input()\n t='CODEFESTIVAL2016'\n ans=0\n for i in range(16):\n-    if t[i]==s[i]:ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n \n s=input()\n t='CODEFESTIVAL2016'\n ans=0\n for i in range(16):\n-    if t[i]==s[i]:ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u959421160",
        "problem_id": "p03729",
        "submission1_id": "s460553019",
        "crp_content": "\n Nstr = input().split()\n result = 'YES'\n for i in range(2):\n-    print(Nstr[i][-1] , Nstr[i + 1][0])\n     if Nstr[i][-1] != Nstr[i + 1][0]:\n         result = 'NO'\n print(result)\n",
        "origin_generated_text": "\n```\n Nstr = input().split()\n result = 'YES'\n for i in range(2):\n-    print(Nstr[i][-1] , Nstr[i + 1][0])\n     if Nstr[i][-1] != Nstr[i + 1][0]:\n         result = 'NO'\n print(result)\n```\n "
    },
    {
        "user_id": "u709304134",
        "problem_id": "p02642",
        "submission1_id": "s165029909",
        "crp_content": "\n from collections import Counter\n import bisect\n N = int(input())\n A = list(map(int,input().split()))\n \n \n \n cnt = Counter(A)\n A.sort()\n ans = 0\n for i in range(len(A)):\n     if cnt[A[i]] > 1:\n         continue\n-    idx = bisect.bisect_right(A, pow(A[i],0.5))\n-    J = min(idx+1,i)\n     \n     ok = True\n     for j in range(J):\n         \n         if A[i] % A[j] == 0:\n             ok = False\n             break\n     if ok:\n         ans += 1\n print (ans)\n \n \n",
        "origin_generated_text": "\n```\n from collections import Counter\n import bisect\n N = int(input())\n A = list(map(int,input().split()))\n \n \n \n cnt = Counter(A)\n A.sort()\n ans = 0\n for i in range(len(A)):\n     if cnt[A[i]] > 1:\n         continue\n-    idx = bisect.bisect_right(A, pow(A[i],0.5))\n-    J = min(idx+1,i)\n     \n     ok = True\n     for j in range(J):\n         \n         if A[i] % A[j] == 0:\n             ok = False\n             break\n     if ok:\n         ans += 1\n print (ans)\n \n \n```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03343",
        "submission1_id": "s186868861",
        "crp_content": "\n N, K, Q = map(int, input().split())\n A = list(map(int, input().split()))\n \n def find_maximum(y):\n   C = [[]]\n   for a in A:\n     if a < y and len(C[-1]) > 0:\n       C.append([])\n     else:\n       C[-1].append(a)\n   cand_x = []\n   for Ci in C:\n     m = len(Ci)\n     if m >= K:\n       Ci.sort()\n       cand_x += Ci[:m-K+1]\n   if len(cand_x) >= Q:\n     cand_x.sort()\n     return cand_x[Q-1], cand_x[0]\n   else:\n     return float('inf'), 0\n \n ans = float('inf')\n for a in A:\n   x, y = find_maximum(a)\n   ans = min(ans, x-y)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N, K, Q = map(int, input().split())\n A = list(map(int, input().split()))\n \n def find_maximum(y):\n   C = [[]]\n   for a in A:\n     if a < y and len(C[-1]) > 0:\n       C.append([])\n     else:\n       C[-1].append(a)\n   cand_x = []\n   for Ci in C:\n     m = len(Ci)\n     if m >= K:\n       Ci.sort()\n       cand_x += Ci[:m-K+1]\n   if len(cand_x) >= Q:\n     cand_x.sort()\n     return cand_x[Q-1], cand_x[0]\n   else:\n     return float('inf'), 0\n \n ans = float('inf')\n for a in A:\n   x, y = find_maximum(a)\n   ans = min(ans, x-y)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03568",
        "submission1_id": "s568635411",
        "crp_content": "\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def S(): return input().rstrip()\n def LS(): return S().split()\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     n = II()\n     a = LI()\n     ans = 3 ** n\n-    a = sum(map(lambda x: x & 1, a))\n-    na = n - a\n-    print(ans - 2 ** na * a)\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def S(): return input().rstrip()\n def LS(): return S().split()\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = 1e10\n \n \n def solve():\n     n = II()\n     a = LI()\n     ans = 3 ** n\n-    a = sum(map(lambda x: x & 1, a))\n-    na = n - a\n-    print(ans - 2 ** na * a)\n     return\n \n \n \n if __name__ == '__main__':\n     solve()\n \n```\n "
    },
    {
        "user_id": "u947883560",
        "problem_id": "p02919",
        "submission1_id": "s879481824",
        "crp_content": "\n \n import sys\n INF = float(\"inf\")\n \n \n class MaxBit:\n     def __init__(self, n):\n         self.size = n\n         self.tree = [0] * (n + 1)\n \n     def sum(self, i):\n         s = 0\n         while i > 0:\n             s = max(s, self.tree[i])\n             i -= i & -i\n         return s\n \n     def add(self, i, x):\n         while i <= self.size:\n             self.tree[i] = max(self.tree[i], x)\n             i += i & -i\n \n \n class MinBit:\n     def __init__(self, n):\n         self.size = n\n         self.tree = [n-1] * (n + 1)\n \n     def sum(self, i):\n         s = self.size-1\n         while i > 0:\n             s = min(s, self.tree[i])\n             i -= i & -i\n         return s\n \n     def add(self, i, x):\n         while i <= self.size:\n             self.tree[i] = min(self.tree[i], x)\n             i += i & -i\n \n \n def solve(N: int, P: \"List[int]\"):\n \n     prev = MaxBit(N+2)\n     foll = MinBit(N+2)\n     seq = [0]*(N+2)\n \n     inv = {p: i for i, p in enumerate(P)}\n     \n \n     ans = 0\n     for i in range(N, 0, -1):\n         prev.add(inv[i]+2, inv[i]+1)\n         foll.add(N-inv[i]+1, inv[i]+1)\n         seq[inv[i]+1] = i\n \n         \n         \n         \n         \n         \n         p = prev.sum(inv[i]+1)\n         pp = prev.sum(p)\n         f = foll.sum(N-inv[i])\n         ff = foll.sum(N-f+1)\n         \n         if p > 0:\n             \n             ans += i*(p - pp)\n             \n             ans += i*(f - (inv[i]+1))\n             ans -= i\n             \n             \n             \n         \n         if f < N+1:\n             \n             ans += i*(inv[i]+1 - p)\n             \n             ans += i*(ff - f)\n             ans -= i\n             \n             \n             \n     print(ans)\n     return\n \n \n def main():\n \n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     P = [int(next(tokens)) for _ in range(N)]  \n     solve(N, P)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n INF = float(\"inf\")\n \n \n class MaxBit:\n     def __init__(self, n):\n         self.size = n\n         self.tree = [0] * (n + 1)\n \n     def sum(self, i):\n         s = 0\n         while i > 0:\n             s = max(s, self.tree[i])\n             i -= i & -i\n         return s\n \n     def add(self, i, x):\n         while i <= self.size:\n             self.tree[i] = max(self.tree[i], x)\n             i += i & -i\n \n \n class MinBit:\n     def __init__(self, n):\n         self.size = n\n         self.tree = [n-1] * (n + 1)\n \n     def sum(self, i):\n         s = self.size-1\n         while i > 0:\n             s = min(s, self.tree[i])\n             i -= i & -i\n         return s\n \n     def add(self, i, x):\n         while i <= self.size:\n             self.tree[i] = min(self.tree[i], x)\n             i += i & -i\n \n \n def solve(N: int, P: \"List[int]\"):\n \n     prev = MaxBit(N+2)\n     foll = MinBit(N+2)\n     seq = [0]*(N+2)\n \n     inv = {p: i for i, p in enumerate(P)}\n     \n \n     ans = 0\n     for i in range(N, 0, -1):\n         prev.add(inv[i]+2, inv[i]+1)\n         foll.add(N-inv[i]+1, inv[i]+1)\n         seq[inv[i]+1] = i\n \n         \n         \n         \n         \n         \n         p = prev.sum(inv[i]+1)\n         pp = prev.sum(p)\n         f = foll.sum(N-inv[i])\n         ff = foll.sum(N-f+1)\n         \n         if p > 0:\n             \n             ans += i*(p - pp)\n             \n             ans += i*(f - (inv[i]+1))\n             ans -= i\n             \n             \n             \n         \n         if f < N+1:\n             \n             ans += i*(inv[i]+1 - p)\n             \n             ans += i*(ff - f)\n             ans -= i\n             \n             \n             \n     print(ans)\n     return\n \n \n def main():\n \n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     P = [int(next(tokens)) for _ in range(N)]  \n     solve(N, P)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u147458211",
        "problem_id": "p03716",
        "submission1_id": "s506980286",
        "crp_content": "\n import heapq\n N = int(input())\n a = list(map(int, input().split()))\n \n max_result = -1000000\n \n for k in range(N, 2*N+1):\n-  print(\"----------------\")\n   big_a = a[:k]\n   heapq.heapify(big_a)\n-  print(big_a)\n   small_a =[(-x, x) for x in a[k:]]\n   heapq.heapify(small_a)\n-  print(small_a)\n \n   for i in range(len(big_a) - N):\n     heapq.heappop(big_a)\n-  print(big_a)\n \n   for i in range(len(small_a) - N):\n     heapq.heappop(small_a)\n-  print(small_a)\n \n   big_sum = sum(big_a)\n   small_sum = 0\n   for i in small_a:\n     small_sum += i[1]\n \n   if (big_sum - small_sum) > max_result:\n     max_result = big_sum - small_sum\n \n print(max_result)\n \n \n",
        "origin_generated_text": "\n```\n import heapq\n N = int(input())\n a = list(map(int, input().split()))\n \n max_result = -1000000\n \n for k in range(N, 2*N+1):\n-  print(\"----------------\")\n   big_a = a[:k]\n   heapq.heapify(big_a)\n-  print(big_a)\n   small_a =[(-x, x) for x in a[k:]]\n   heapq.heapify(small_a)\n-  print(small_a)\n \n   for i in range(len(big_a) - N):\n     heapq.heappop(big_a)\n-  print(big_a)\n \n   for i in range(len(small_a) - N):\n     heapq.heappop(small_a)\n-  print(small_a)\n \n   big_sum = sum(big_a)\n   small_sum = 0\n   for i in small_a:\n     small_sum += i[1]\n \n   if (big_sum - small_sum) > max_result:\n     max_result = big_sum - small_sum\n \n print(max_result)\n \n \n```\n "
    },
    {
        "user_id": "u478719560",
        "problem_id": "p02642",
        "submission1_id": "s542321219",
        "crp_content": "\n import sys\n \n \n \n \n \n \n \n \n \n \n \n stdin = sys.stdin\n sys.setrecursionlimit(10 ** 7)\n MIN = -10 ** 9\n MOD = 10 ** 9 + 7\n INF = float(\"inf\")\n IINF = 10 ** 18\n \n def main():\n     n = int(stdin.readline().rstrip())\n     \n     As = list(map(int, stdin.readline().rstrip().split()))\n     \n     \n     \n     \n-    As.sort(reverse=True)\n-    l = []\n-    l.append(As.pop())\n-\n-    for i in range(1,n):\n-        t = As.pop()\n         \n-        u = len(l)\n-        flag = False\n-        for j in range(u):\n-            if t%l[j] == 0:\n-                flag=True\n-        if flag==False:\n-            l.append(t)\n-    print(len(l))\n \n \n \n \n \n \n main()\n \n",
        "origin_generated_text": "\n```\n import sys\n \n \n \n \n \n \n \n \n \n \n \n stdin = sys.stdin\n sys.setrecursionlimit(10 ** 7)\n MIN = -10 ** 9\n MOD = 10 ** 9 + 7\n INF = float(\"inf\")\n IINF = 10 ** 18\n \n def main():\n     n = int(stdin.readline().rstrip())\n     \n     As = list(map(int, stdin.readline().rstrip().split()))\n     \n     \n     \n     \n-    As.sort(reverse=True)\n-    l = []\n-    l.append(As.pop())\n-\n-    for i in range(1,n):\n-        t = As.pop()\n         \n-        u = len(l)\n-        flag = False\n-        for j in range(u):\n-            if t%l[j] == 0:\n-                flag=True\n-        if flag==False:\n-            l.append(t)\n-    print(len(l))\n \n \n \n \n \n \n main()\n \n```\n "
    },
    {
        "user_id": "u644907318",
        "problem_id": "p03633",
        "submission1_id": "s220987769",
        "crp_content": "\n def gcd(x,y):\n     if x<y:\n         x,y = y,x\n     while y>0:\n         x,y = y,x%y\n     return x\n N = int(input())\n-T = list(set([int(input()) for _ in range(N)]))\n-a = T[0]\n-for i in range(1,len(T)):\n-    a = gcd(T[i],a)\n-t = a\n-for i in range(len(T)):\n-    t *= T[i]\n-print(t)\n",
        "origin_generated_text": "\n```\n def gcd(x,y):\n     if x<y:\n         x,y = y,x\n     while y>0:\n         x,y = y,x%y\n     return x\n N = int(input())\n-T = list(set([int(input()) for _ in range(N)]))\n-a = T[0]\n-for i in range(1,len(T)):\n-    a = gcd(T[i],a)\n-t = a\n-for i in range(len(T)):\n-    t *= T[i]\n-print(t)\n```\n "
    },
    {
        "user_id": "u362127784",
        "problem_id": "p02660",
        "submission1_id": "s340629916",
        "crp_content": "\n a =int(input())\n list = []\n b = 1\n-for i in range(2,44):\n     list.append(b)\n     b = b + i\n n = 0\n e = 0\n k = 0\n-for i in range(2,1000000):\n     if (a % i == 0):\n         warikaisi = True\n         while(warikaisi):\n             if a % i == 0:\n                 list.append(i)\n                 a = a / i\n                 e = e + 1\n                 if (e == list[k]):\n                     n = n + 1\n                     k = k + 1\n             else:\n                 e = 0\n                 k = 0\n                 warikaisi = False\n if (n == 0 and a != 1):\n     n = 1\n-if (a >= 1000000):\n     n = 1\n print(n)\n",
        "origin_generated_text": "\n```\n a =int(input())\n list = []\n b = 1\n-for i in range(2,44):\n     list.append(b)\n     b = b + i\n n = 0\n e = 0\n k = 0\n-for i in range(2,1000000):\n     if (a % i == 0):\n         warikaisi = True\n         while(warikaisi):\n             if a % i == 0:\n                 list.append(i)\n                 a = a / i\n                 e = e + 1\n                 if (e == list[k]):\n                     n = n + 1\n                     k = k + 1\n             else:\n                 e = 0\n                 k = 0\n                 warikaisi = False\n if (n == 0 and a != 1):\n     n = 1\n-if (a >= 1000000):\n     n = 1\n print(n)\n```\n "
    },
    {
        "user_id": "u320763652",
        "problem_id": "p03998",
        "submission1_id": "s589942741",
        "crp_content": "\n a = input()\n b = input()\n c = input()\n \n \n \n next = 'a'\n \n while True:\n \n     if not a:\n         print('A')\n         exit()\n     if not b:\n         print('B')\n         exit()\n     if not c:\n         print('C')\n         exit()\n \n     if next == 'a':\n         next = a[-1]\n         a = a[:-1]\n \n     elif next == 'b':\n         next = b[-1]\n         b = b[:-1]\n-    else:\n         next = c[-1]\n         c = c[:-1]\n \n",
        "origin_generated_text": "\n```\n a = input()\n b = input()\n c = input()\n \n \n \n next = 'a'\n \n while True:\n \n     if not a:\n         print('A')\n         exit()\n     if not b:\n         print('B')\n         exit()\n     if not c:\n         print('C')\n         exit()\n \n     if next == 'a':\n         next = a[-1]\n         a = a[:-1]\n \n     elif next == 'b':\n         next = b[-1]\n         b = b[:-1]\n-    else:\n         next = c[-1]\n         c = c[:-1]\n \n```\n "
    },
    {
        "user_id": "u831274245",
        "problem_id": "p03200",
        "submission1_id": "s051858594",
        "crp_content": "\n S = input().strip()\n \n count = 0\n suma = 0\n for i in S:\n   if i==\"W\":\n     suma += count\n   else:\n     count += 1\n-\n",
        "origin_generated_text": "\n```\n S = input().strip()\n \n count = 0\n suma = 0\n for i in S:\n   if i==\"W\":\n     suma += count\n   else:\n     count += 1\n-\n```\n "
    },
    {
        "user_id": "u740267532",
        "problem_id": "p02640",
        "submission1_id": "s535970343",
        "crp_content": "\n def animal(x,y):\n-    if x*4 >= y:\n         return \"Yes\"\n     return \"No\"\n \n if __name__ == \"__main__\":\n     x,y = map(int,input().split())\n     print(animal(x,y))\n",
        "origin_generated_text": "\n```\n def animal(x,y):\n-    if x*4 >= y:\n         return \"Yes\"\n     return \"No\"\n \n if __name__ == \"__main__\":\n     x,y = map(int,input().split())\n     print(animal(x,y))\n```\n "
    },
    {
        "user_id": "u894258749",
        "problem_id": "p03079",
        "submission1_id": "s998032863",
        "crp_content": "\n inpl = lambda: list(map(int,input().split()))\n \n A, B, C = inpl()\n if A==B==C:\n-    print('YES')\n else:\n-    print('NO')\n",
        "origin_generated_text": "\n```\n inpl = lambda: list(map(int,input().split()))\n \n A, B, C = inpl()\n if A==B==C:\n-    print('YES')\n else:\n-    print('NO')\n```\n "
    },
    {
        "user_id": "u282347497",
        "problem_id": "p03200",
        "submission1_id": "s428752782",
        "crp_content": "\n s = input()\n n = len(s)\n sum = [0] * (n + 1)\n sum[0] = (s[0] == 'B')\n for i in range(1 , n):\n \tsum[i] = sum[i-1] + (s[i] == 'B')\n ans = 0\n for i in range(n - 1, 0 ,-1):\n-\tprint(i)\n \tif s[i] == 'W':\n \t\tans += sum[i]\n print(ans)\n \t\n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n sum = [0] * (n + 1)\n sum[0] = (s[0] == 'B')\n for i in range(1 , n):\n \tsum[i] = sum[i-1] + (s[i] == 'B')\n ans = 0\n for i in range(n - 1, 0 ,-1):\n-\tprint(i)\n \tif s[i] == 'W':\n \t\tans += sum[i]\n print(ans)\n \t\n```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03080",
        "submission1_id": "s092050398",
        "crp_content": "\n s = input()\n if s.count(\"R\") > s.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n s = input()\n if s.count(\"R\") > s.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u991237710",
        "problem_id": "p02718",
        "submission1_id": "s549709070",
        "crp_content": "\n N , M = input().split()\n array = input().split()\n flag = 0\n \n N = int(N)\n M = int(M)\n \n iarray = []\n \n for i in array:\n     iarray.append(int(i))\n \n total = sum(iarray)\n \n for i in iarray:\n     if i >= total/(4*M):\n         flag += 1\n if flag >= M:\n-    print(\"yes\")\n else:\n-    print(\"no\")\n",
        "origin_generated_text": "\n```\n N , M = input().split()\n array = input().split()\n flag = 0\n \n N = int(N)\n M = int(M)\n \n iarray = []\n \n for i in array:\n     iarray.append(int(i))\n \n total = sum(iarray)\n \n for i in iarray:\n     if i >= total/(4*M):\n         flag += 1\n if flag >= M:\n-    print(\"yes\")\n else:\n-    print(\"no\")\n```\n "
    },
    {
        "user_id": "u236441175",
        "problem_id": "p02553",
        "submission1_id": "s602736263",
        "crp_content": "\n a, b, c, d = input().split()\n \n a=int(a)\n b=int(b)\n c=int(c)\n d=int(d)\n \n \n-print(a, b, c, d)\n-\n X1 = min(a,b) * min(c,d)\n X2 = min(a,b) * max(c,d)\n X3 = max(a,b) * min(c,d)\n X4 = max(a,b) * max(c,d)\n \n print(max(X1,X2,X3,X4))\n \n",
        "origin_generated_text": "\n```\n a, b, c, d = input().split()\n \n a=int(a)\n b=int(b)\n c=int(c)\n d=int(d)\n \n \n-print(a, b, c, d)\n-\n X1 = min(a,b) * min(c,d)\n X2 = min(a,b) * max(c,d)\n X3 = max(a,b) * min(c,d)\n X4 = max(a,b) * max(c,d)\n \n print(max(X1,X2,X3,X4))\n \n```\n "
    },
    {
        "user_id": "u899578884",
        "problem_id": "p03206",
        "submission1_id": "s730565293",
        "crp_content": "\n D = int(input())\n str = \"Christmas\"\n-while D < 25:\n     str += \" EVE\"\n     D += 1\n print(str)\n \n",
        "origin_generated_text": "\n```\n D = int(input())\n str = \"Christmas\"\n-while D < 25:\n     str += \" EVE\"\n     D += 1\n print(str)\n \n```\n "
    },
    {
        "user_id": "u354126779",
        "problem_id": "p03796",
        "submission1_id": "s582141658",
        "crp_content": "\n n=int(input())\n p=1\n for i in range(1,n+1):\n     p=p*i\n     p=p%(10**9+7)\n",
        "origin_generated_text": "\n```\n n=int(input())\n p=1\n for i in range(1,n+1):\n     p=p*i\n     p=p%(10**9+7)\n```\n "
    },
    {
        "user_id": "u337751290",
        "problem_id": "p02730",
        "submission1_id": "s282366198",
        "crp_content": "\n \n def main():\n     s = input()\n-    if len(s) % 2  == 0:\n         print(\"No\")\n         return\n     N = int(len(s))\n     \n     s1 = s[0:int((N-1)/2)]\n     s2 = s[int((N+1)/2):N]\n \n     \n     \n \n     i = 0\n     j = int((N - 1) / 2) - 1\n     \n     while True:\n         if i > j:\n             break\n         if s1[i] != s1[j]:\n             print(\"No\")\n             return\n         i += 1\n         j -= 1\n \n     i = 0\n     j = int((N - 1) / 2) - 1\n     while True:\n         if i > j:\n             break\n         if s2[i] != s2[j]:\n             \n             return\n         i += 1\n         j -= 1\n \n \n     print(\"Yes\")\n     return\n \n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n \n def main():\n     s = input()\n-    if len(s) % 2  == 0:\n         print(\"No\")\n         return\n     N = int(len(s))\n     \n     s1 = s[0:int((N-1)/2)]\n     s2 = s[int((N+1)/2):N]\n \n     \n     \n \n     i = 0\n     j = int((N - 1) / 2) - 1\n     \n     while True:\n         if i > j:\n             break\n         if s1[i] != s1[j]:\n             print(\"No\")\n             return\n         i += 1\n         j -= 1\n \n     i = 0\n     j = int((N - 1) / 2) - 1\n     while True:\n         if i > j:\n             break\n         if s2[i] != s2[j]:\n             \n             return\n         i += 1\n         j -= 1\n \n \n     print(\"Yes\")\n     return\n \n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s083640727",
        "crp_content": "\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node \"+str(k)+\": key = \"+str(plist[0][0])+\n                       \", left key = \"+str(plist[1][0])+\n                       \", right key = \"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                       \", parent key = \"+str(plist[i-1][l])+\", left key = \"+\n                       str(plist[i+1][2*j]),end=\"\")\n                 try:\n                     print(\", right key = \"+str(plist[i+1][2*j+1])+\",\")\n                 except:\n                     print(\",\")\n         except:\n             l = int(j/2)\n             print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                   \", parent key = \"+str(plist[i-1][l])+\",\")\n         k += 1\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node \"+str(k)+\": key = \"+str(plist[0][0])+\n                       \", left key = \"+str(plist[1][0])+\n                       \", right key = \"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                       \", parent key = \"+str(plist[i-1][l])+\", left key = \"+\n                       str(plist[i+1][2*j]),end=\"\")\n                 try:\n                     print(\", right key = \"+str(plist[i+1][2*j+1])+\",\")\n                 except:\n                     print(\",\")\n         except:\n             l = int(j/2)\n             print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                   \", parent key = \"+str(plist[i-1][l])+\",\")\n         k += 1\n \n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s361867117",
        "crp_content": "\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n \n-s = s\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n print(ans1)\n",
        "origin_generated_text": "\n```\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n \n-s = s\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n print(ans1)\n```\n "
    },
    {
        "user_id": "u027675217",
        "problem_id": "p03102",
        "submission1_id": "s585042379",
        "crp_content": "\n n,m,c=map(int,input().split())\n b=list(map(int,input().split()))\n l=[]\n ans=[]\n cnt=0\n for i in range(n):\n \ta=list(map(int,input().split()))\n \tl.append(a)\n for i in range(n):\n \tsum=0\n \tfor j in range(m):\n \t\tsum+=b[j]*l[i][j]\n \t\tif j==(m-1):\n \t\t\tsum-=c\n \t\t\tans.append(sum)\n for i in ans:\n \tif i>0:\n \t\tcnt+=1\n print(cnt)\n",
        "origin_generated_text": "\n```\n n,m,c=map(int,input().split())\n b=list(map(int,input().split()))\n l=[]\n ans=[]\n cnt=0\n for i in range(n):\n \ta=list(map(int,input().split()))\n \tl.append(a)\n for i in range(n):\n \tsum=0\n \tfor j in range(m):\n \t\tsum+=b[j]*l[i][j]\n \t\tif j==(m-1):\n \t\t\tsum-=c\n \t\t\tans.append(sum)\n for i in ans:\n \tif i>0:\n \t\tcnt+=1\n print(cnt)\n```\n "
    },
    {
        "user_id": "u734195782",
        "problem_id": "p02660",
        "submission1_id": "s308421491",
        "crp_content": "\n import math\n def check(n):\n     count = 0\n     end = int(math.sqrt(n)+1)\n     for i in range(2,end):\n         if n%i==0:\n             count += 1\n             n/=i\n         if n%i==0:\n             l = 2\n             count2 = 0\n             while n%i==0:\n                 n/=i\n                 count2+=1\n                 if count2==l:\n                     count+=1\n                     count2=0\n                     l+=1\n     if n==1:\n         return 0\n     if count==0:\n         return 1\n     else:\n         return count   \n n = int(input())\n ans = check(n)\n print(ans)\n",
        "origin_generated_text": "\n```\n import math\n def check(n):\n     count = 0\n     end = int(math.sqrt(n)+1)\n     for i in range(2,end):\n         if n%i==0:\n             count += 1\n             n/=i\n         if n%i==0:\n             l = 2\n             count2 = 0\n             while n%i==0:\n                 n/=i\n                 count2+=1\n                 if count2==l:\n                     count+=1\n                     count2=0\n                     l+=1\n     if n==1:\n         return 0\n     if count==0:\n         return 1\n     else:\n         return count   \n n = int(input())\n ans = check(n)\n print(ans)\n```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s517124301",
        "crp_content": "\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1:\n-        count = w \n-    elif w == 1:\n-        count = h \n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n     else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1:\n-        count = w \n-    elif w == 1:\n-        count = h \n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n     else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n```\n "
    },
    {
        "user_id": "u553348533",
        "problem_id": "p03274",
        "submission1_id": "s386734816",
        "crp_content": "\n N, K = map(int,input().split())\n listMap = [int(i) for i in input().split()]\n minMin = float(\"inf\")\n \n-for j in range(N - K):\n     L = j\n     R = j + K - 1\n     sumL = abs(listMap[L]) + abs(listMap[L] - listMap[R])\n     sumR = abs(listMap[R]) + abs(listMap[R] - listMap[L])\n     sum = min(sumL, sumR)\n     if sum < minMin:\n         minMin = sum\n \n if minMin == float(\"inf\"):\n     minMin = listMap[0]\n \n print(minMin)\n",
        "origin_generated_text": "\n```\n N, K = map(int,input().split())\n listMap = [int(i) for i in input().split()]\n minMin = float(\"inf\")\n \n-for j in range(N - K):\n     L = j\n     R = j + K - 1\n     sumL = abs(listMap[L]) + abs(listMap[L] - listMap[R])\n     sumR = abs(listMap[R]) + abs(listMap[R] - listMap[L])\n     sum = min(sumL, sumR)\n     if sum < minMin:\n         minMin = sum\n \n if minMin == float(\"inf\"):\n     minMin = listMap[0]\n \n print(minMin)\n```\n "
    },
    {
        "user_id": "u131881594",
        "problem_id": "p03546",
        "submission1_id": "s373132073",
        "crp_content": "\n from collections import defaultdict\n \n h,w=map(int,input().split())\n c=[]\n dic=defaultdict(int)\n for _ in range(10): c.append(list(map(int,input().split())))\n for _ in range(h):\n     temp=list(map(int,input().split()))\n     for i in temp: dic[i]+=1\n for k in range(10):\n     for i in range(10):\n         for j in range(10): c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n ans=0\n for item in dic.items():\n     if item[0]: ans+=item[1]*c[item[0]][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n \n h,w=map(int,input().split())\n c=[]\n dic=defaultdict(int)\n for _ in range(10): c.append(list(map(int,input().split())))\n for _ in range(h):\n     temp=list(map(int,input().split()))\n     for i in temp: dic[i]+=1\n for k in range(10):\n     for i in range(10):\n         for j in range(10): c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n ans=0\n for item in dic.items():\n     if item[0]: ans+=item[1]*c[item[0]][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03965",
        "submission1_id": "s029707659",
        "crp_content": "\n s = input()\n \n ans = 0\n \n r = 0\n p = 0\n \n for j in s:\n   if j == 'g':\n     r += 1\n     if p > 1:\n       ans -= p\n     p = 0\n   else:\n     p += 1\n     if r > 1:\n       ans += r\n     r = 0\n-if p > 1:\n-  ans -= p\n-if r > 1:\n-  ans += r\n print (ans)\n",
        "origin_generated_text": "\n```\n s = input()\n \n ans = 0\n \n r = 0\n p = 0\n \n for j in s:\n   if j == 'g':\n     r += 1\n     if p > 1:\n       ans -= p\n     p = 0\n   else:\n     p += 1\n     if r > 1:\n       ans += r\n     r = 0\n-if p > 1:\n-  ans -= p\n-if r > 1:\n-  ans += r\n print (ans)\n```\n "
    },
    {
        "user_id": "u138546245",
        "problem_id": "p02243",
        "submission1_id": "s344004382",
        "crp_content": "\n from heapq import heappop, heappush\n import sys\n \n \n class SSSP:\n     \n     def __init__(self, graph):\n         self.size = len(graph)\n         self.tree = []\n         self.weights = [0] * self.size\n         self._search(graph)\n \n     def weight(self, n):\n         return self.weights[n]\n \n     def _search(self, graph):\n         h = []\n         count = 1\n         for i, w in graph[0]:\n             heappush(h, (w, 0, i))\n \n         while count < self.size:\n             while len(h) > 0:\n                 weight, src, dst = heappop(h)\n                 if self.weights[dst] == 0 and dst > 0:\n                     self.weights[dst] = weight\n                     count += 1\n                     self.tree.append((src, dst))\n                     for i, w in graph[dst]:\n-                        if self.weights[i] == 0 and dst > 0:\n                             heappush(h, (w+weight, dst, i))\n                     break\n \n \n def run():\n     n = int(input())\n \n     nodes = [None] * n\n     for line in sys.stdin:\n         id_, deg, *edges = [int(i) for i in line.split()]\n         nodes[id_] = []\n         for _ in range(deg):\n             tgt, wgt, *edges = edges\n             nodes[id_].append((tgt, wgt))\n \n     st = SSSP(nodes)\n     for node in range(n):\n         print('{} {}'.format(node, st.weight(node)))\n \n \n if __name__ == '__main__':\n     run()\n \n \n",
        "origin_generated_text": "\n```\n from heapq import heappop, heappush\n import sys\n \n \n class SSSP:\n     \n     def __init__(self, graph):\n         self.size = len(graph)\n         self.tree = []\n         self.weights = [0] * self.size\n         self._search(graph)\n \n     def weight(self, n):\n         return self.weights[n]\n \n     def _search(self, graph):\n         h = []\n         count = 1\n         for i, w in graph[0]:\n             heappush(h, (w, 0, i))\n \n         while count < self.size:\n             while len(h) > 0:\n                 weight, src, dst = heappop(h)\n                 if self.weights[dst] == 0 and dst > 0:\n                     self.weights[dst] = weight\n                     count += 1\n                     self.tree.append((src, dst))\n                     for i, w in graph[dst]:\n-                        if self.weights[i] == 0 and dst > 0:\n                             heappush(h, (w+weight, dst, i))\n                     break\n \n \n def run():\n     n = int(input())\n \n     nodes = [None] * n\n     for line in sys.stdin:\n         id_, deg, *edges = [int(i) for i in line.split()]\n         nodes[id_] = []\n         for _ in range(deg):\n             tgt, wgt, *edges = edges\n             nodes[id_].append((tgt, wgt))\n \n     st = SSSP(nodes)\n     for node in range(n):\n         print('{} {}'.format(node, st.weight(node)))\n \n \n if __name__ == '__main__':\n     run()\n \n \n```\n "
    },
    {
        "user_id": "u935842428",
        "problem_id": "p03752",
        "submission1_id": "s382918221",
        "crp_content": "\n import sys, itertools\n input = lambda: sys.stdin.readline().rstrip() \n sys.setrecursionlimit(10**7)\n INF = 10**20\n def I(): return int(input())\n def F(): return float(input())\n def S(): return input()\n def LI(): return [int(x) for x in input().split()]\n def LI_(): return [int(x)-1 for x in input().split()]\n def LF(): return [float(x) for x in input().split()]\n def LS(): return input().split()\n \n def resolve():\n     N, K = LI()\n     a = LI()\n     ans = INF\n     \n-    for i in itertools.combinations(range(1, N), K-1):\n         cost_sum = 0\n         for j, e in enumerate(i):\n             cost_sum += (a[0]+j+1)-a[e]\n         ans = min(cost_sum, ans)\n \n     print(ans)\n \n if __name__ == '__main__':\n     resolve()\n",
        "origin_generated_text": "\n```\n import sys, itertools\n input = lambda: sys.stdin.readline().rstrip() \n sys.setrecursionlimit(10**7)\n INF = 10**20\n def I(): return int(input())\n def F(): return float(input())\n def S(): return input()\n def LI(): return [int(x) for x in input().split()]\n def LI_(): return [int(x)-1 for x in input().split()]\n def LF(): return [float(x) for x in input().split()]\n def LS(): return input().split()\n \n def resolve():\n     N, K = LI()\n     a = LI()\n     ans = INF\n     \n-    for i in itertools.combinations(range(1, N), K-1):\n         cost_sum = 0\n         for j, e in enumerate(i):\n             cost_sum += (a[0]+j+1)-a[e]\n         ans = min(cost_sum, ans)\n \n     print(ans)\n \n if __name__ == '__main__':\n     resolve()\n```\n "
    },
    {
        "user_id": "u557437077",
        "problem_id": "p03633",
        "submission1_id": "s896669902",
        "crp_content": "\n def gcd(a, b):\n     while b > 0:\n         tmp = a\n         a = b\n         b = tmp % b\n     return a\n \n \n def lcm(a, b):\n     return a*b  \n \n \n n = int(input())\n t = [0 for i in range(n)]\n for i in range(n):\n     t[i] = int(input())\n sum = t[0]\n for i in range(1, n):\n     \n     sum = lcm(sum, t[i])\n     \n print(sum)\n \n",
        "origin_generated_text": "\n```\n def gcd(a, b):\n     while b > 0:\n         tmp = a\n         a = b\n         b = tmp % b\n     return a\n \n \n def lcm(a, b):\n     return a*b  \n \n \n n = int(input())\n t = [0 for i in range(n)]\n for i in range(n):\n     t[i] = int(input())\n sum = t[0]\n for i in range(1, n):\n     \n     sum = lcm(sum, t[i])\n     \n print(sum)\n \n```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p03959",
        "submission1_id": "s664365162",
        "crp_content": "\n n=int(input())\n \n t=list(map(int,input().split()))\n a=list(map(int,input().split()))\n \n \n-print(0)\n-exit()\n \n kakute=[0]*n\n kakute[0]=1\n \n for i in range(1,n):\n     if t[i]>t[i-1]:\n         kakute[i]=1\n \n a=a[::-1]\n ans=1\n \n for i in range(1,n):\n     index=n-i-1\n     \n     if a[i]>a[i-1]:\n         \n         if a[i]>t[index]:\n             print(0)\n             exit()\n         elif kakute[index]==1:\n             if a[i] != t[index]:\n                 print(0)\n                 exit()\n     \n     else:\n         \n         if kakute[index]==1:\n             if t[index]>a[i]:\n                 print(0)\n                 exit()\n         else:\n             ans=ans*min(a[i],t[index])%(10**9+7)\n \n print(ans%(10**9+7))\n \n \n             \n \n         \n \n \n \n \n \n \n \n \n \n",
        "origin_generated_text": "\n```\n n=int(input())\n \n t=list(map(int,input().split()))\n a=list(map(int,input().split()))\n \n \n-print(0)\n-exit()\n \n kakute=[0]*n\n kakute[0]=1\n \n for i in range(1,n):\n     if t[i]>t[i-1]:\n         kakute[i]=1\n \n a=a[::-1]\n ans=1\n \n for i in range(1,n):\n     index=n-i-1\n     \n     if a[i]>a[i-1]:\n         \n         if a[i]>t[index]:\n             print(0)\n             exit()\n         elif kakute[index]==1:\n             if a[i] != t[index]:\n                 print(0)\n                 exit()\n     \n     else:\n         \n         if kakute[index]==1:\n             if t[index]>a[i]:\n                 print(0)\n                 exit()\n         else:\n             ans=ans*min(a[i],t[index])%(10**9+7)\n \n print(ans%(10**9+7))\n \n \n             \n \n         \n \n \n \n \n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u173720816",
        "problem_id": "p03041",
        "submission1_id": "s286056702",
        "crp_content": "\n N,K=map(int, input().split())\n S=input()\n-S=S.replace(S[K-1], chr(ord(S[K-1])+32))\n print(S)\n",
        "origin_generated_text": "\n```\n N,K=map(int, input().split())\n S=input()\n-S=S.replace(S[K-1], chr(ord(S[K-1])+32))\n print(S)\n```\n "
    },
    {
        "user_id": "u497596438",
        "problem_id": "p03716",
        "submission1_id": "s974013935",
        "crp_content": "\n from heapq import *\n \n N=int(input())\n A=list(map(int,input().split()))\n B=[]\n for i in range(N):\n     heappush(B,A[i])\n sumB=[sum(B)]\n for i in range(N,2*N):\n     heappush(B,A[i])\n     poped=heappop(B)\n     sumB.append(sumB[-1]-poped+A[i])\n \n A.reverse()\n C=[]\n for i in range(N):\n     heappush(C,A[i]*(-1))\n sumC=[(-1)*sum(C)]\n for i in range(N,2*N):\n     heappush(C,A[i]*(-1))\n     poped=heappop(C)*(-1)\n     sumC.append(sumC[-1]-poped+A[i])\n sumC.reverse()\n ans=-10**19\n for i,j in zip(sumB,sumC):\n     ans=max(ans,i-j)\n \n",
        "origin_generated_text": "\n```\n from heapq import *\n \n N=int(input())\n A=list(map(int,input().split()))\n B=[]\n for i in range(N):\n     heappush(B,A[i])\n sumB=[sum(B)]\n for i in range(N,2*N):\n     heappush(B,A[i])\n     poped=heappop(B)\n     sumB.append(sumB[-1]-poped+A[i])\n \n A.reverse()\n C=[]\n for i in range(N):\n     heappush(C,A[i]*(-1))\n sumC=[(-1)*sum(C)]\n for i in range(N,2*N):\n     heappush(C,A[i]*(-1))\n     poped=heappop(C)*(-1)\n     sumC.append(sumC[-1]-poped+A[i])\n sumC.reverse()\n ans=-10**19\n for i,j in zip(sumB,sumC):\n     ans=max(ans,i-j)\n \n```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s642921527",
        "crp_content": "\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     if a[i+1] == (a[i]+1)%m:\n         continue\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-(a[j]+1))%m)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n \n",
        "origin_generated_text": "\n```\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     if a[i+1] == (a[i]+1)%m:\n         continue\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-(a[j]+1))%m)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n \n```\n "
    },
    {
        "user_id": "u948986080",
        "problem_id": "p03479",
        "submission1_id": "s870358362",
        "crp_content": "\n x,y=map(int,input().split())\n len=1\n while True:\n   x*=2\n-  if x*2<y:\n     len+=1\n   else:\n     break\n print(len)\n",
        "origin_generated_text": "\n```\n x,y=map(int,input().split())\n len=1\n while True:\n   x*=2\n-  if x*2<y:\n     len+=1\n   else:\n     break\n print(len)\n```\n "
    },
    {
        "user_id": "u601426916",
        "problem_id": "p02660",
        "submission1_id": "s815473208",
        "crp_content": "\n \n import math\n N = int(input())\n Nsyo = N\n count = 0\n div = 2\n divcount = 0\n divlist = []\n while N > 1 and div <= math.sqrt(N):\n     if N%div == 0:\n         while N%div == 0:\n             N = N/div\n             divcount = divcount+1\n         divlist.append(divcount)\n         divcount = 0\n     else:\n         pass\n     div = div + 1\n div = 1\n divcount = 0\n for i in divlist:\n     while i >= div:\n         i = i-div\n         divcount = divcount + 1\n         div = div + 1\n         \n     count = count +divcount\n     divcount = 0\n     div = 1\n if divlist == [] and N >0:\n     count = 1\n print(count)\n",
        "origin_generated_text": "\n```\n \n import math\n N = int(input())\n Nsyo = N\n count = 0\n div = 2\n divcount = 0\n divlist = []\n while N > 1 and div <= math.sqrt(N):\n     if N%div == 0:\n         while N%div == 0:\n             N = N/div\n             divcount = divcount+1\n         divlist.append(divcount)\n         divcount = 0\n     else:\n         pass\n     div = div + 1\n div = 1\n divcount = 0\n for i in divlist:\n     while i >= div:\n         i = i-div\n         divcount = divcount + 1\n         div = div + 1\n         \n     count = count +divcount\n     divcount = 0\n     div = 1\n if divlist == [] and N >0:\n     count = 1\n print(count)\n```\n "
    },
    {
        "user_id": "u883048396",
        "problem_id": "p03296",
        "submission1_id": "s249497643",
        "crp_content": "\n iN = int(input())\n aS = [int(x) for x in input().rstrip().split()]\n \n \n \n iCounter = 0\n if iN == 2:\n     if aS[0] == aS[1]:\n         iCounter += 1\n else:\n     for i in range(1,iN-1):\n         if aS[i] == aS[i-1]:\n             if aS[i] == aS[i+1]:\n                 if aS[i] != 10000:\n                     aS[i] += 1\n                 else:\n                     aS[i] -= 1\n                 iCounter += 1\n             else:\n                 if i == iN - 2:\n                     continue\n                 else:\n                     iU = max(aS[i],aS[i+1])\n                     if iU < 10000:\n                         iU += 1\n                     else:\n                         iU -= 1\n-                        if iU == min(aS[1],aS[i+1]):\n-                            iU -= 1\n                     aS[i] = iU\n                     iCounter += 1\n print(iCounter)\n \n",
        "origin_generated_text": "\n```\n iN = int(input())\n aS = [int(x) for x in input().rstrip().split()]\n \n \n \n iCounter = 0\n if iN == 2:\n     if aS[0] == aS[1]:\n         iCounter += 1\n else:\n     for i in range(1,iN-1):\n         if aS[i] == aS[i-1]:\n             if aS[i] == aS[i+1]:\n                 if aS[i] != 10000:\n                     aS[i] += 1\n                 else:\n                     aS[i] -= 1\n                 iCounter += 1\n             else:\n                 if i == iN - 2:\n                     continue\n                 else:\n                     iU = max(aS[i],aS[i+1])\n                     if iU < 10000:\n                         iU += 1\n                     else:\n                         iU -= 1\n-                        if iU == min(aS[1],aS[i+1]):\n-                            iU -= 1\n                     aS[i] = iU\n                     iCounter += 1\n print(iCounter)\n \n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s797433160",
        "crp_content": "\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"y\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"y\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u316341119",
        "problem_id": "p03039",
        "submission1_id": "s343244875",
        "crp_content": "\n N, M, K = map(int, input().split())\n \n MOD = 10**9+7\n \n def comb(n, r):\n     r = n-r if n-r < r else r\n     if r == 0:\n         return 1\n     ndfact = 1\n     for i in range(n, n-r, -1):\n         ndfact *= i\n         ndfact %= MOD\n     rfact = 1\n     for i in range(r, 1, -1):\n         rfact *= i\n         rfact %= MOD\n     return ndfact \n \n-p = comb(N*M-2, K-2) % MOD\n ans = 0\n for i in range(N):\n     for j in range(M):\n         if i == 0 and j == 0:\n             continue\n         d = i+j\n         cnt = (N-i) * (M-j)\n         if i != 0 and j != 0:\n             cnt *= 2\n         ans += d * cnt\n         ans %= MOD\n \n print((ans*p)%MOD)\n \n",
        "origin_generated_text": "\n```\n N, M, K = map(int, input().split())\n \n MOD = 10**9+7\n \n def comb(n, r):\n     r = n-r if n-r < r else r\n     if r == 0:\n         return 1\n     ndfact = 1\n     for i in range(n, n-r, -1):\n         ndfact *= i\n         ndfact %= MOD\n     rfact = 1\n     for i in range(r, 1, -1):\n         rfact *= i\n         rfact %= MOD\n     return ndfact \n \n-p = comb(N*M-2, K-2) % MOD\n ans = 0\n for i in range(N):\n     for j in range(M):\n         if i == 0 and j == 0:\n             continue\n         d = i+j\n         cnt = (N-i) * (M-j)\n         if i != 0 and j != 0:\n             cnt *= 2\n         ans += d * cnt\n         ans %= MOD\n \n print((ans*p)%MOD)\n \n```\n "
    },
    {
        "user_id": "u241577413",
        "problem_id": "p02633",
        "submission1_id": "s561353059",
        "crp_content": "\n a = int(input())\n \n x = a\n i = 1\n \n-while x % 180 != 0:\n     x += a\n     i += 1\n \n print(i*2)\n",
        "origin_generated_text": "\n```\n a = int(input())\n \n x = a\n i = 1\n \n-while x % 180 != 0:\n     x += a\n     i += 1\n \n print(i*2)\n```\n "
    },
    {
        "user_id": "u316341119",
        "problem_id": "p03039",
        "submission1_id": "s246052148",
        "crp_content": "\n from math import factorial\n N, M, K = map(int, input().split())\n \n MOD = 10**9+7\n \n def comb(n, r):\n     r = n-r if n-r < r else r\n     if r == 0:\n         return 1\n     ndfact = 1\n     for i in range(n, n-r, -1):\n         ndfact *= i\n         ndfact %= MOD\n     return ndfact \n \n-p = comb(N*M-2, K-2) % MOD\n ans = 0\n for i in range(N):\n     for j in range(M):\n         if i == 0 and j == 0:\n             continue\n         d = i+j\n         cnt = (N-i) * (M-j)\n         if i != 0 and j != 0:\n             cnt *= 2\n         ans += d * cnt\n         ans %= MOD\n \n print((ans*p)%MOD)\n \n",
        "origin_generated_text": "\n```\n from math import factorial\n N, M, K = map(int, input().split())\n \n MOD = 10**9+7\n \n def comb(n, r):\n     r = n-r if n-r < r else r\n     if r == 0:\n         return 1\n     ndfact = 1\n     for i in range(n, n-r, -1):\n         ndfact *= i\n         ndfact %= MOD\n     return ndfact \n \n-p = comb(N*M-2, K-2) % MOD\n ans = 0\n for i in range(N):\n     for j in range(M):\n         if i == 0 and j == 0:\n             continue\n         d = i+j\n         cnt = (N-i) * (M-j)\n         if i != 0 and j != 0:\n             cnt *= 2\n         ans += d * cnt\n         ans %= MOD\n \n print((ans*p)%MOD)\n \n```\n "
    },
    {
        "user_id": "u198062737",
        "problem_id": "p03959",
        "submission1_id": "s049614357",
        "crp_content": "\n N = int(input())\n T = list(map(int, input().split(\" \")))\n A = list(map(int, input().split(\" \")))\n h = [-1 for i in range(N)]\n mod = 10 ** 9 + 7\n \n h[0] = T[0]\n h[N - 1] = A[N - 1]\n for i in range(N - 1):\n     if T[i] < T[i + 1]:\n         h[i + 1] = T[i + 1]\n \n for i in range(N - 1):\n     if A[i + 1] < A[i] and (h[i] == -1 or h[i] == A[i]):\n         h[i] = A[i]\n     elif A[i + 1] < A[i]:\n         h[i] = 0\n \n ans = 1\n for i in range(N):\n     if h[i] == 0:\n         ans *= h[i]\n         break\n     elif h[i] == -1:\n         ans *= min(T[i], A[i])\n         ans %= mod\n \n if A[N - 1] != T[0]:\n     print(0)\n else:\n     print(ans % mod)\n",
        "origin_generated_text": "\n```\n N = int(input())\n T = list(map(int, input().split(\" \")))\n A = list(map(int, input().split(\" \")))\n h = [-1 for i in range(N)]\n mod = 10 ** 9 + 7\n \n h[0] = T[0]\n h[N - 1] = A[N - 1]\n for i in range(N - 1):\n     if T[i] < T[i + 1]:\n         h[i + 1] = T[i + 1]\n \n for i in range(N - 1):\n     if A[i + 1] < A[i] and (h[i] == -1 or h[i] == A[i]):\n         h[i] = A[i]\n     elif A[i + 1] < A[i]:\n         h[i] = 0\n \n ans = 1\n for i in range(N):\n     if h[i] == 0:\n         ans *= h[i]\n         break\n     elif h[i] == -1:\n         ans *= min(T[i], A[i])\n         ans %= mod\n \n if A[N - 1] != T[0]:\n     print(0)\n else:\n     print(ans % mod)\n```\n "
    },
    {
        "user_id": "u925406312",
        "problem_id": "p02640",
        "submission1_id": "s005534087",
        "crp_content": "\n a,b = map(int,input().split())\n \n turu = 2\n kame = 4\n flag =0\n \n for x in range(a + 1):\n     for y in range(a + 1):\n-        if kame * x + turu * y == b or x + y <= a:\n             flag += 1\n \n if flag == 0:\n     print(\"No\")\n else:\n     print(\"Yes\")\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n \n turu = 2\n kame = 4\n flag =0\n \n for x in range(a + 1):\n     for y in range(a + 1):\n-        if kame * x + turu * y == b or x + y <= a:\n             flag += 1\n \n if flag == 0:\n     print(\"No\")\n else:\n     print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03992",
        "submission1_id": "s621357722",
        "crp_content": "\n s = str(input())\n-print(s[0:3] + \" \" + s[4:])\n",
        "origin_generated_text": "\n```\n s = str(input())\n-print(s[0:3] + \" \" + s[4:])\n```\n "
    },
    {
        "user_id": "u344959886",
        "problem_id": "p03760",
        "submission1_id": "s962714182",
        "crp_content": "\n o=input()\n e=input()\n for i,j in zip(o,e):\n     print(i+j,end=\"\")\n-   \n",
        "origin_generated_text": "\n```\n o=input()\n e=input()\n for i,j in zip(o,e):\n     print(i+j,end=\"\")\n-   \n```\n "
    },
    {
        "user_id": "u432805419",
        "problem_id": "p03943",
        "submission1_id": "s268509969",
        "crp_content": "\n a = list(map(int,input().split()))\n a.sort()\n if (a[0] + a[1]) == a[2]:\n   print(\"Yes\")\n else:\n-  print(\"NO\")\n \n",
        "origin_generated_text": "\n```\n a = list(map(int,input().split()))\n a.sort()\n if (a[0] + a[1]) == a[2]:\n   print(\"Yes\")\n else:\n-  print(\"NO\")\n \n```\n "
    },
    {
        "user_id": "u970899068",
        "problem_id": "p03972",
        "submission1_id": "s915446726",
        "crp_content": "\n h,w=map(int, input().split())\n p=[int(input()) for i in range(w)]\n q=[int(input()) for i in range(h)]\n p.append(0)\n q.append(0)\n p.sort()\n p.reverse()\n q.sort()\n q.reverse()\n \n count=h*w\n row=0\n line=0\n i=0\n j=0\n ans=0\n \n while count>0:\n     if p[i]>=q[j]:\n         ans+=p[i]*(w-line)\n \n         count-=w-line\n         i+=1\n         row+=1\n \n     else:\n         ans+=q[j]*(h-row)\n \n         count-=h-row\n         j+=1\n         line+=1\n x=sum(p)*(h+1)+sum(q)*(w+1)\n print(x-ans)\n \n",
        "origin_generated_text": "\n```\n h,w=map(int, input().split())\n p=[int(input()) for i in range(w)]\n q=[int(input()) for i in range(h)]\n p.append(0)\n q.append(0)\n p.sort()\n p.reverse()\n q.sort()\n q.reverse()\n \n count=h*w\n row=0\n line=0\n i=0\n j=0\n ans=0\n \n while count>0:\n     if p[i]>=q[j]:\n         ans+=p[i]*(w-line)\n \n         count-=w-line\n         i+=1\n         row+=1\n \n     else:\n         ans+=q[j]*(h-row)\n \n         count-=h-row\n         j+=1\n         line+=1\n x=sum(p)*(h+1)+sum(q)*(w+1)\n print(x-ans)\n \n```\n "
    },
    {
        "user_id": "u602773379",
        "problem_id": "p02660",
        "submission1_id": "s514470095",
        "crp_content": "\n import math\n \n def prime(num):\n \tarray=[]\n \ttmp=int(math.sqrt(n))+1\n \tfor i in range(2,tmp):\n \t\twhile num % i == 0:\n \t\t\tnum/=i\n \t\t\tarray.append(i)\n \t\n \tif array==[]:\n \t\treturn [num]\n \telse:\n \t\treturn array\n \n n=int(input())\n P=prime(n)\n num=n\n tmp=P[0]\n \n if 1 in P:\n \tprint(0)\n else:\t\n \tans=1\n \tfor i in range(1,len(P)):\n-\t\tif P[i]==P[i-1]:\n-\t\t\ttmp*=P[i]\n-\t\telse:\n-\t\t\ttmp=P[i]\n-\n \t\tif num%tmp==0:\n \t\t\tnum/=tmp\n \t\t\tans+=1\n \n \tprint(ans)\n",
        "origin_generated_text": "\n```\n import math\n \n def prime(num):\n \tarray=[]\n \ttmp=int(math.sqrt(n))+1\n \tfor i in range(2,tmp):\n \t\twhile num % i == 0:\n \t\t\tnum/=i\n \t\t\tarray.append(i)\n \t\n \tif array==[]:\n \t\treturn [num]\n \telse:\n \t\treturn array\n \n n=int(input())\n P=prime(n)\n num=n\n tmp=P[0]\n \n if 1 in P:\n \tprint(0)\n else:\t\n \tans=1\n \tfor i in range(1,len(P)):\n-\t\tif P[i]==P[i-1]:\n-\t\t\ttmp*=P[i]\n-\t\telse:\n-\t\t\ttmp=P[i]\n-\n \t\tif num%tmp==0:\n \t\t\tnum/=tmp\n \t\t\tans+=1\n \n \tprint(ans)\n```\n "
    },
    {
        "user_id": "u899782392",
        "problem_id": "p03752",
        "submission1_id": "s332336077",
        "crp_content": "\n N, K = map(int, input().split())\n A = list(map(int, input().split()))\n \n-ans = sum(A)\n for key in range(1 << N):\n     if bin(key).count('1') < K:\n         continue\n     cost = 0\n     height = 0\n     for i in range(N):\n         if not (key & (1 << i)):\n             height = max(A[i], height)\n             continue\n         height = max(A[i], height+1)\n         cost += height - A[i]\n     ans = min(ans, cost)\n print(ans)\n \n \n \n \n \n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n A = list(map(int, input().split()))\n \n-ans = sum(A)\n for key in range(1 << N):\n     if bin(key).count('1') < K:\n         continue\n     cost = 0\n     height = 0\n     for i in range(N):\n         if not (key & (1 << i)):\n             height = max(A[i], height)\n             continue\n         height = max(A[i], height+1)\n         cost += height - A[i]\n     ans = min(ans, cost)\n print(ans)\n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u620084012",
        "problem_id": "p03965",
        "submission1_id": "s085573507",
        "crp_content": "\n s = input()\n g, p = 0, 0\n ans = 0\n for e in s:\n     if e == \"g\":\n-        if p+1 <= g:\n             p += 1\n             ans += 1\n         else:\n             g += 1\n     else:\n         p += 1\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n s = input()\n g, p = 0, 0\n ans = 0\n for e in s:\n     if e == \"g\":\n-        if p+1 <= g:\n             p += 1\n             ans += 1\n         else:\n             g += 1\n     else:\n         p += 1\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u207097826",
        "problem_id": "p03716",
        "submission1_id": "s096813467",
        "crp_content": "\n \n \n from heapq import heappush, heappop\n import sys\n \n N = int(input())\n a = list(map(int,input().split()))\n \n hq = []\n hq_r = []\n for i in range(N):\n     heappush(hq,a[i])\n     heappush(hq_r,-1*a[-1-i])\n \n \n max_A = [0 for _ in range(N+1)]\n max_A[0] = sum(hq)\n \n min_C = [0 for _ in range(N+1)]\n min_C[0] = sum(hq_r) * (-1)\n \n for i in range(N):\n     heappush(hq, a[N+i])\n     heappush(hq_r, -1*a[-N-1-i])\n     minus = heappop(hq)\n     minus_r = heappop(hq_r)\n     max_A[i+1] = max_A[i] + a[N+i] - minus\n     min_C[i+1] = min_C[i] + a[-N-1-i] + minus_r\n     \n max_val = -10e+100\n-print(max_val)\n for i in range(N+1):\n     kari = max_A[i] - min_C[-1-i]\n     if max_val < kari:\n         max_val =kari\n print(max_val)\n",
        "origin_generated_text": "\n```\n \n \n from heapq import heappush, heappop\n import sys\n \n N = int(input())\n a = list(map(int,input().split()))\n \n hq = []\n hq_r = []\n for i in range(N):\n     heappush(hq,a[i])\n     heappush(hq_r,-1*a[-1-i])\n \n \n max_A = [0 for _ in range(N+1)]\n max_A[0] = sum(hq)\n \n min_C = [0 for _ in range(N+1)]\n min_C[0] = sum(hq_r) * (-1)\n \n for i in range(N):\n     heappush(hq, a[N+i])\n     heappush(hq_r, -1*a[-N-1-i])\n     minus = heappop(hq)\n     minus_r = heappop(hq_r)\n     max_A[i+1] = max_A[i] + a[N+i] - minus\n     min_C[i+1] = min_C[i] + a[-N-1-i] + minus_r\n     \n max_val = -10e+100\n-print(max_val)\n for i in range(N+1):\n     kari = max_A[i] - min_C[-1-i]\n     if max_val < kari:\n         max_val =kari\n print(max_val)\n```\n "
    },
    {
        "user_id": "u661284763",
        "problem_id": "p02407",
        "submission1_id": "s831426262",
        "crp_content": "\n input()\n a = input().split()\n a.reverse()\n-for b in a:\n-    print(b, end='_')\n",
        "origin_generated_text": "\n```\n input()\n a = input().split()\n a.reverse()\n-for b in a:\n-    print(b, end='_')\n```\n "
    },
    {
        "user_id": "u964040941",
        "problem_id": "p00026",
        "submission1_id": "s090239443",
        "crp_content": "\n import sys\n \n paper = [[0] * 10 for i in range(10)]\n \n for line in sys.stdin:\n     x,y,s = map(int,line.split(','))\n     for i in range(10):\n         for j in range(10):\n             if s == 1:\n                 if abs(i - y) + abs(j - x) <= 1:\n                     paper [i] [j] += 1\n             if s == 2:\n                 if abs(i - y) <= 1 and abs(j - x) <= 1:\n                     paper [i] [j] += 1\n             if s == 3:\n                 if abs(i - y) + abs(j - x) <= 2:\n                     paper [i] [j] += 1\n \n ans = [0,0]\n for i in range(10):\n     for j in range(10):\n         if paper [i] [j] == 0:\n             ans [0] += 1\n         if paper [i] [j] > ans [1]:\n             ans [1] = paper [i] [j]\n \n-print(ans [0],ans [1])\n",
        "origin_generated_text": "\n```\n import sys\n \n paper = [[0] * 10 for i in range(10)]\n \n for line in sys.stdin:\n     x,y,s = map(int,line.split(','))\n     for i in range(10):\n         for j in range(10):\n             if s == 1:\n                 if abs(i - y) + abs(j - x) <= 1:\n                     paper [i] [j] += 1\n             if s == 2:\n                 if abs(i - y) <= 1 and abs(j - x) <= 1:\n                     paper [i] [j] += 1\n             if s == 3:\n                 if abs(i - y) + abs(j - x) <= 2:\n                     paper [i] [j] += 1\n \n ans = [0,0]\n for i in range(10):\n     for j in range(10):\n         if paper [i] [j] == 0:\n             ans [0] += 1\n         if paper [i] [j] > ans [1]:\n             ans [1] = paper [i] [j]\n \n-print(ans [0],ans [1])\n```\n "
    },
    {
        "user_id": "u619819312",
        "problem_id": "p03625",
        "submission1_id": "s215373055",
        "crp_content": "\n from collections import Counter\n n=int(input())\n a=list(map(int,input().split()))\n p=Counter(a)\n c=0\n d=0\n for a,b in p.items():\n     if b>3:\n         if c<a:\n             c=a\n         if d<a:\n             d=a\n     elif b>1:\n         if c==0:\n             c=a\n         else:\n             if d>c:\n                 c=a\n             else:\n                 d=a\n print(c*d)\n",
        "origin_generated_text": "\n```\n from collections import Counter\n n=int(input())\n a=list(map(int,input().split()))\n p=Counter(a)\n c=0\n d=0\n for a,b in p.items():\n     if b>3:\n         if c<a:\n             c=a\n         if d<a:\n             d=a\n     elif b>1:\n         if c==0:\n             c=a\n         else:\n             if d>c:\n                 c=a\n             else:\n                 d=a\n print(c*d)\n```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s659794092",
        "crp_content": "\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     if a[i+1] == a[i]+1:\n         continue\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-(a[j]+1))%m)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n",
        "origin_generated_text": "\n```\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     if a[i+1] == a[i]+1:\n         continue\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-(a[j]+1))%m)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n```\n "
    },
    {
        "user_id": "u075502030",
        "problem_id": "p02660",
        "submission1_id": "s964983531",
        "crp_content": "\n import math\n \n def is_prime(n):\n     if n==1:\n         return False\n     nmax = int(math.sqrt(n)) + 1\n     for i in range(2, nmax):\n         if(n%i)==0:\n             return False\n     return True\n \n def pf(n):\n     sn = int(math.sqrt(n)) + 1\n     ps = []\n     for i in range(1, sn):\n         if (n%i)==0:\n             ps.append(i)\n     del ps[0]\n     if not ps:\n         ps.append(n)\n     return ps        \n \n n = int(input())\n ps = []\n num = pf(n)\n for i in num:\n     if is_prime(i):\n         ps.append(i)\n         \n zs = []        \n for p in ps:\n     z = p\n     while(z<=n):\n         zs.append(z)\n         z *= p\n zs.sort()\n \n cnt = 0\n for z in zs:\n     if(n>1):\n         if(n%z==0):\n             n /= z\n             cnt += 1\n print(cnt)\n",
        "origin_generated_text": "\n```\n import math\n \n def is_prime(n):\n     if n==1:\n         return False\n     nmax = int(math.sqrt(n)) + 1\n     for i in range(2, nmax):\n         if(n%i)==0:\n             return False\n     return True\n \n def pf(n):\n     sn = int(math.sqrt(n)) + 1\n     ps = []\n     for i in range(1, sn):\n         if (n%i)==0:\n             ps.append(i)\n     del ps[0]\n     if not ps:\n         ps.append(n)\n     return ps        \n \n n = int(input())\n ps = []\n num = pf(n)\n for i in num:\n     if is_prime(i):\n         ps.append(i)\n         \n zs = []        \n for p in ps:\n     z = p\n     while(z<=n):\n         zs.append(z)\n         z *= p\n zs.sort()\n \n cnt = 0\n for z in zs:\n     if(n>1):\n         if(n%z==0):\n             n /= z\n             cnt += 1\n print(cnt)\n```\n "
    },
    {
        "user_id": "u089830331",
        "problem_id": "p02281",
        "submission1_id": "s811679059",
        "crp_content": "\n import sys\n \n def walk(T, nid, order):\n   if nid < 0: return\n   lid, rid = T[nid]\n \n   if order == \"pre\":\n     sys.stdout.write(\" \" + str(nid))\n     walk(T, lid, order)\n     walk(T, rid, order)\n   elif order == \"in\":\n     walk(T, lid, order)\n     sys.stdout.write(\" \" + str(nid))\n     walk(T, rid, order)\n   else:\n     walk(T, lid, order)\n     walk(T, rid, order)\n     sys.stdout.write(\" \" + str(nid))\n \n T = {}\n for i in range(int(input())):\n   nid, lid, rid = map(int, input().split())\n   T[nid] = [lid, rid]\n \n-print(\"Preorder\"),  walk(T, 0, \"pre\"),  print()\n-print(\"Inorder\"),   walk(T, 0, \"in\"),   print()\n-print(\"Postorder\"), walk(T, 0, \"post\"), print()\n \n",
        "origin_generated_text": "\n```\n import sys\n \n def walk(T, nid, order):\n   if nid < 0: return\n   lid, rid = T[nid]\n \n   if order == \"pre\":\n     sys.stdout.write(\" \" + str(nid))\n     walk(T, lid, order)\n     walk(T, rid, order)\n   elif order == \"in\":\n     walk(T, lid, order)\n     sys.stdout.write(\" \" + str(nid))\n     walk(T, rid, order)\n   else:\n     walk(T, lid, order)\n     walk(T, rid, order)\n     sys.stdout.write(\" \" + str(nid))\n \n T = {}\n for i in range(int(input())):\n   nid, lid, rid = map(int, input().split())\n   T[nid] = [lid, rid]\n \n-print(\"Preorder\"),  walk(T, 0, \"pre\"),  print()\n-print(\"Inorder\"),   walk(T, 0, \"in\"),   print()\n-print(\"Postorder\"), walk(T, 0, \"post\"), print()\n \n```\n "
    },
    {
        "user_id": "u423665486",
        "problem_id": "p03416",
        "submission1_id": "s163709818",
        "crp_content": "\n def resolve():\n \ta, b = map(int, input().split())\n \tans = 0\n-\tfor i in range(a, b):\n \t\tv = str(i)\n \t\td = len(v) \n-\t\tif v[:d] == v[d+1:]:\n \t\t\tans += 1\n \tprint(ans)\n resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n \ta, b = map(int, input().split())\n \tans = 0\n-\tfor i in range(a, b):\n \t\tv = str(i)\n \t\td = len(v) \n-\t\tif v[:d] == v[d+1:]:\n \t\t\tans += 1\n \tprint(ans)\n resolve()\n```\n "
    },
    {
        "user_id": "u946090308",
        "problem_id": "p03264",
        "submission1_id": "s908825329",
        "crp_content": "\n k = int(input())        \n if (k%2) == 1:\n-    oe = ((k+1) * (k-3)) / 8\n-    print(2 * oe)\n else:\n-    o = (k+2) * (k-1)/8\n-    e = (k*(k-4))/8\n-    print(o+e)\n",
        "origin_generated_text": "\n```\n k = int(input())        \n if (k%2) == 1:\n-    oe = ((k+1) * (k-3)) / 8\n-    print(2 * oe)\n else:\n-    o = (k+2) * (k-1)/8\n-    e = (k*(k-4))/8\n-    print(o+e)\n```\n "
    },
    {
        "user_id": "u422590714",
        "problem_id": "p02954",
        "submission1_id": "s684612209",
        "crp_content": "\n import sys\n \n sys.setrecursionlimit(10 ** 7)\n \n S = list(input())\n \n is_hole = [None for _ in S]\n is_s = [None for _ in S]\n \n s_1 = None\n for i, s in enumerate(S):\n     if s_1 == 'R' and s == 'L':\n         is_hole[i - 1] = 'R'\n         is_hole[i] = 'L'\n     if s_1 == 'L' and s == 'R':\n         is_s[i] = 'S'  \n     s_1 = s\n \n result = [0 for _ in S]\n mem_R = 0  \n mem_Rx = 0  \n mem_L = 0\n \n def find_next_mem_R(i):\n     while i < len(S):\n         if is_hole[i] == 'R':\n             return i\n         i += 1\n \n mem_Rx = find_next_mem_R(0)\n \n for i, s in enumerate(S):\n     if is_s[i] == 'S':\n         result[mem_Rx] = mem_R\n         result[mem_Rx + 1] = mem_L\n         mem_R = 0\n         mem_L = 0\n         mem_Rx = find_next_mem_R(i)\n \n     if s == 'R':\n         x_diff_for_R = mem_Rx - i\n         if x_diff_for_R % 2 == 0:\n             mem_R += 1\n         else:\n             mem_L += 1\n     else:\n         x_diff_for_R = i - mem_Rx\n         if x_diff_for_R % 2 == 0:\n             mem_R += 1\n         else:\n             mem_L += 1\n \n result[mem_Rx] = mem_R\n result[mem_Rx + 1] = mem_L\n-print(result)\n \n",
        "origin_generated_text": "\n```\n import sys\n \n sys.setrecursionlimit(10 ** 7)\n \n S = list(input())\n \n is_hole = [None for _ in S]\n is_s = [None for _ in S]\n \n s_1 = None\n for i, s in enumerate(S):\n     if s_1 == 'R' and s == 'L':\n         is_hole[i - 1] = 'R'\n         is_hole[i] = 'L'\n     if s_1 == 'L' and s == 'R':\n         is_s[i] = 'S'  \n     s_1 = s\n \n result = [0 for _ in S]\n mem_R = 0  \n mem_Rx = 0  \n mem_L = 0\n \n def find_next_mem_R(i):\n     while i < len(S):\n         if is_hole[i] == 'R':\n             return i\n         i += 1\n \n mem_Rx = find_next_mem_R(0)\n \n for i, s in enumerate(S):\n     if is_s[i] == 'S':\n         result[mem_Rx] = mem_R\n         result[mem_Rx + 1] = mem_L\n         mem_R = 0\n         mem_L = 0\n         mem_Rx = find_next_mem_R(i)\n \n     if s == 'R':\n         x_diff_for_R = mem_Rx - i\n         if x_diff_for_R % 2 == 0:\n             mem_R += 1\n         else:\n             mem_L += 1\n     else:\n         x_diff_for_R = i - mem_Rx\n         if x_diff_for_R % 2 == 0:\n             mem_R += 1\n         else:\n             mem_L += 1\n \n result[mem_Rx] = mem_R\n result[mem_Rx + 1] = mem_L\n-print(result)\n \n```\n "
    },
    {
        "user_id": "u652656291",
        "problem_id": "p02922",
        "submission1_id": "s248903927",
        "crp_content": "\n a,b = map(int,input().split())\n-c = 1 + (a-1)\n ans = 0\n if c <= b:\n   ans += 1\n-  c += (a-1)\n print(ans)\n-  \n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n-c = 1 + (a-1)\n ans = 0\n if c <= b:\n   ans += 1\n-  c += (a-1)\n print(ans)\n-  \n```\n "
    },
    {
        "user_id": "u523130469",
        "problem_id": "p03714",
        "submission1_id": "s128585875",
        "crp_content": "\n import heapq\n \n n = int(input().strip())\n a = list(map(int, input().split()))\n pre = a[:n]\n heapq.heapify(pre)\n suf = list(map(lambda x: -x, a[(2 * n):]))\n heapq.heapify(suf)\n left = {}\n right = {}\n pre_sum = sum(pre)\n suf_sum = -sum(suf)\n left[n - 1] = pre_sum\n right[2 * n] = suf_sum\n for i in range(n, 2 * n):\n     heapq.heappush(pre, a[i])\n     pre_sum = pre_sum + a[i] - heapq.heappop(pre)\n     left[i] = pre_sum\n for i in range(2 * n - 1, n - 1, -1):\n     heapq.heappush(suf, -a[i])\n     suf_sum = suf_sum + heapq.heappop(suf) + a[i]\n     right[i] = suf_sum\n ans = - (10 ** 50)\n-for i in range(n - 1, 2 * n - 1):\n     ans = max(ans, left[i] - right[i + 1])\n print(ans)\n \n",
        "origin_generated_text": "\n```\n import heapq\n \n n = int(input().strip())\n a = list(map(int, input().split()))\n pre = a[:n]\n heapq.heapify(pre)\n suf = list(map(lambda x: -x, a[(2 * n):]))\n heapq.heapify(suf)\n left = {}\n right = {}\n pre_sum = sum(pre)\n suf_sum = -sum(suf)\n left[n - 1] = pre_sum\n right[2 * n] = suf_sum\n for i in range(n, 2 * n):\n     heapq.heappush(pre, a[i])\n     pre_sum = pre_sum + a[i] - heapq.heappop(pre)\n     left[i] = pre_sum\n for i in range(2 * n - 1, n - 1, -1):\n     heapq.heappush(suf, -a[i])\n     suf_sum = suf_sum + heapq.heappop(suf) + a[i]\n     right[i] = suf_sum\n ans = - (10 ** 50)\n-for i in range(n - 1, 2 * n - 1):\n     ans = max(ans, left[i] - right[i + 1])\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u943057856",
        "problem_id": "p02640",
        "submission1_id": "s905250960",
        "crp_content": "\n x,y=map(int,input().split())\n-for i in range(100):\n     if i*2+(x-i)*4==y:\n         print(\"Yes\")\n         break\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n x,y=map(int,input().split())\n-for i in range(100):\n     if i*2+(x-i)*4==y:\n         print(\"Yes\")\n         break\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u687053495",
        "problem_id": "p03036",
        "submission1_id": "s391082629",
        "crp_content": "\n r, d, x = map(int, input().split())\n \n-for i in range(x):\n   x = r * x - d\n-  if i >= 10:\n-    break  \n   print(x)\n",
        "origin_generated_text": "\n```\n r, d, x = map(int, input().split())\n \n-for i in range(x):\n   x = r * x - d\n-  if i >= 10:\n-    break  \n   print(x)\n```\n "
    },
    {
        "user_id": "u761168538",
        "problem_id": "p02556",
        "submission1_id": "s825026886",
        "crp_content": "\n n=int(input())\n arr=[]\n s=set()\n for _ in range(n):\n \tx,y=map(int,input().split())\n \tif((x,y) not in s):\n-\t\tarr.append(x+y)\n \t\ts.add((x,y))\n arr.sort()\n if(len(arr)==1):\n \tprint(0)\n else:\n \tprint(arr[-1]-arr[0])\n",
        "origin_generated_text": "\n```\n n=int(input())\n arr=[]\n s=set()\n for _ in range(n):\n \tx,y=map(int,input().split())\n \tif((x,y) not in s):\n-\t\tarr.append(x+y)\n \t\ts.add((x,y))\n arr.sort()\n if(len(arr)==1):\n \tprint(0)\n else:\n \tprint(arr[-1]-arr[0])\n```\n "
    },
    {
        "user_id": "u006657459",
        "problem_id": "p03296",
        "submission1_id": "s461582626",
        "crp_content": "\n import random\n N = int(input())\n a = [int(ai) for ai in input().split()]\n \n count = 0\n for i in range(0, N-1):\n     if a[i] == a[i+1]:\n         count += 1\n-    while a[i] == a[i+1]:\n-        a[i+1] = random.randint(1, N)\n print(count)\n",
        "origin_generated_text": "\n```\n import random\n N = int(input())\n a = [int(ai) for ai in input().split()]\n \n count = 0\n for i in range(0, N-1):\n     if a[i] == a[i+1]:\n         count += 1\n-    while a[i] == a[i+1]:\n-        a[i+1] = random.randint(1, N)\n print(count)\n```\n "
    },
    {
        "user_id": "u019075898",
        "problem_id": "p02730",
        "submission1_id": "s834372890",
        "crp_content": "\n \n def isReverse(s):\n     p1 = 0\n     p2 = len(s) - 1\n     flag = True\n     while p1 <= p2:\n         if s[p1] != s[p2]:\n             flag = False\n         p1 += 1\n         p2 += -1\n     return flag\n if __name__ == \"__main__\":\n     s = input()\n     s1 = s[:int((len(s) - 1) / 2)]\n     s2 = s[int((len(s) + 1) / 2):]\n-    print(s, s1, s2)\n-    print(isReverse(s), isReverse(s1), isReverse(s2))\n     if isReverse(s) and isReverse(s1) and isReverse(s2):\n         print(\"Yes\")\n     else:\n         print(\"No\")\n",
        "origin_generated_text": "\n```\n \n def isReverse(s):\n     p1 = 0\n     p2 = len(s) - 1\n     flag = True\n     while p1 <= p2:\n         if s[p1] != s[p2]:\n             flag = False\n         p1 += 1\n         p2 += -1\n     return flag\n if __name__ == \"__main__\":\n     s = input()\n     s1 = s[:int((len(s) - 1) / 2)]\n     s2 = s[int((len(s) + 1) / 2):]\n-    print(s, s1, s2)\n-    print(isReverse(s), isReverse(s1), isReverse(s2))\n     if isReverse(s) and isReverse(s1) and isReverse(s2):\n         print(\"Yes\")\n     else:\n         print(\"No\")\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03480",
        "submission1_id": "s523183730",
        "crp_content": "\n \n from collections import defaultdict\n from collections import deque\n from heapq import heappush, heappop\n import sys\n import math\n import bisect\n import random\n import itertools\n sys.setrecursionlimit(10**5)\n stdin = sys.stdin\n bisect_left = bisect.bisect_left\n bisect_right = bisect.bisect_right\n def LI(): return list(map(int, stdin.readline().split()))\n def LF(): return list(map(float, stdin.readline().split()))\n def LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\n def II(): return int(stdin.readline())\n def IF(): return float(stdin.readline())\n def LS(): return list(map(list, stdin.readline().split()))\n def S(): return list(stdin.readline().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     a, b, c, d = LI()\n     a += b\n     c += d\n     ans = [\"Left\", \"Right\"]\n     if a == c:\n         print(\"Balanced\")\n         return\n     print(ans[a < c])\n     return\n \n \n def B():\n     n, a, b = LI()\n     ans = 0\n     for i in range(1, n + 1):\n         if a <= sum(list(map(int, list(str(i))))) <= b:\n            ans += i\n     print(ans) \n     \n     return\n \n \n def C():\n     x, y = LI()\n     ans = 0\n     while x <= y:\n         ans += 1\n         x *= 2\n     print(ans)\n     return\n \n \n \n \n \n def D():\n     s = S()\n     ans = inf\n     n = len(s)\n     for i in range(n - 1):\n         if s[i] != s[i + 1]:\n             ans = min(ans, max(i + 1, n - i - 1))\n-    print(ans if ans != inf else 0)\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict\n from collections import deque\n from heapq import heappush, heappop\n import sys\n import math\n import bisect\n import random\n import itertools\n sys.setrecursionlimit(10**5)\n stdin = sys.stdin\n bisect_left = bisect.bisect_left\n bisect_right = bisect.bisect_right\n def LI(): return list(map(int, stdin.readline().split()))\n def LF(): return list(map(float, stdin.readline().split()))\n def LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\n def II(): return int(stdin.readline())\n def IF(): return float(stdin.readline())\n def LS(): return list(map(list, stdin.readline().split()))\n def S(): return list(stdin.readline().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     a, b, c, d = LI()\n     a += b\n     c += d\n     ans = [\"Left\", \"Right\"]\n     if a == c:\n         print(\"Balanced\")\n         return\n     print(ans[a < c])\n     return\n \n \n def B():\n     n, a, b = LI()\n     ans = 0\n     for i in range(1, n + 1):\n         if a <= sum(list(map(int, list(str(i))))) <= b:\n            ans += i\n     print(ans) \n     \n     return\n \n \n def C():\n     x, y = LI()\n     ans = 0\n     while x <= y:\n         ans += 1\n         x *= 2\n     print(ans)\n     return\n \n \n \n \n \n def D():\n     s = S()\n     ans = inf\n     n = len(s)\n     for i in range(n - 1):\n         if s[i] != s[i + 1]:\n             ans = min(ans, max(i + 1, n - i - 1))\n-    print(ans if ans != inf else 0)\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n```\n "
    },
    {
        "user_id": "u353797797",
        "problem_id": "p02962",
        "submission1_id": "s946356729",
        "crp_content": "\n import sys\n \n sys.setrecursionlimit(10 ** 6)\n int1 = lambda x: int(x) - 1\n p2D = lambda x: print(*x, sep=\"\\n\")\n def II(): return int(sys.stdin.readline())\n def MI(): return map(int, sys.stdin.readline().split())\n def LI(): return list(map(int, sys.stdin.readline().split()))\n def LLI(rows_number): return [LI() for _ in range(rows_number)]\n def SI(): return sys.stdin.readline()[:-1]\n \n def LcpByZ(target):\n     len_t = len(target)\n     lcp = [-1] * len_t\n     top = 1  \n     left = 0  \n     right = 0  \n     lcp[0] = 0\n     while top < len_t:\n         \n         while top + right < len_t and target[right] == target[top + right]:\n             right += 1\n         \n         lcp[top] = right\n         left = 1\n         \n         if right == 0:\n             top += 1\n             continue\n         \n         while left + lcp[left] < right and left < right:\n             lcp[top + left] = lcp[left]\n             left += 1\n         \n         top += left\n         right -= left\n         left = 0  \n     return lcp\n \n def main():\n     tt = t + t\n     while len(tt) < len(s): tt += t\n     ss = s\n     while len(ss) < len(tt) * 2: ss += s\n     \n     if tt in ss:return -1\n \n     while len(tt) < len(ss): tt += t\n     lcp=LcpByZ(tt+\"@\"+ss)\n     \n     tn=len(t)\n-    ans=max(lcp[len(tt):])\n     return ans\n \n s=SI()\n t=SI()\n print(main())\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n sys.setrecursionlimit(10 ** 6)\n int1 = lambda x: int(x) - 1\n p2D = lambda x: print(*x, sep=\"\\n\")\n def II(): return int(sys.stdin.readline())\n def MI(): return map(int, sys.stdin.readline().split())\n def LI(): return list(map(int, sys.stdin.readline().split()))\n def LLI(rows_number): return [LI() for _ in range(rows_number)]\n def SI(): return sys.stdin.readline()[:-1]\n \n def LcpByZ(target):\n     len_t = len(target)\n     lcp = [-1] * len_t\n     top = 1  \n     left = 0  \n     right = 0  \n     lcp[0] = 0\n     while top < len_t:\n         \n         while top + right < len_t and target[right] == target[top + right]:\n             right += 1\n         \n         lcp[top] = right\n         left = 1\n         \n         if right == 0:\n             top += 1\n             continue\n         \n         while left + lcp[left] < right and left < right:\n             lcp[top + left] = lcp[left]\n             left += 1\n         \n         top += left\n         right -= left\n         left = 0  \n     return lcp\n \n def main():\n     tt = t + t\n     while len(tt) < len(s): tt += t\n     ss = s\n     while len(ss) < len(tt) * 2: ss += s\n     \n     if tt in ss:return -1\n \n     while len(tt) < len(ss): tt += t\n     lcp=LcpByZ(tt+\"@\"+ss)\n     \n     tn=len(t)\n-    ans=max(lcp[len(tt):])\n     return ans\n \n s=SI()\n t=SI()\n print(main())\n \n \n```\n "
    },
    {
        "user_id": "u716530146",
        "problem_id": "p03714",
        "submission1_id": "s421355128",
        "crp_content": "\n \n import sys\n import math\n import heapq\n \n \n def input(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n \n \n sys.setrecursionlimit(10**8)\n inf = float('inf')\n count = 0\n ans = -inf\n n = int(input())\n A = list(map(int, input().split()))\n AL = A[:n]\n AR = A[2*n:]\n AL.sort()\n AR.sort(reverse=1)\n i1 = i2 = j1 = j2 = 0\n i = j = 0\n ANL = A[n:2*n]\n ANR = ANL[::-1]\n LS = sum(AL)\n RS = sum(AR)\n heapq.heapify(AL)\n AR = list(map(lambda ddd: -ddd, AR))\n \n heapq.heapify(AR)\n ans = max(ans, LS-RS)\n \n for count in range(n):\n-    print(AL,AR)\n     \n     if ANL[i]-AL[0] > -AR[0]-ANR[j]:\n         LS = LS-heapq.heappop(AL)+ANL[i]\n         heapq.heappush(AL,ANL[i])\n         i += 1\n     else:\n         RS = RS+heapq.heappop(AR)+ANR[j]\n         heapq.heappush(AR,-ANR[j])\n         j += 1\n     \n     ans = max(ans, LS-RS)\n-print(AL,AR)\n \n \n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n import sys\n import math\n import heapq\n \n \n def input(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n \n \n sys.setrecursionlimit(10**8)\n inf = float('inf')\n count = 0\n ans = -inf\n n = int(input())\n A = list(map(int, input().split()))\n AL = A[:n]\n AR = A[2*n:]\n AL.sort()\n AR.sort(reverse=1)\n i1 = i2 = j1 = j2 = 0\n i = j = 0\n ANL = A[n:2*n]\n ANR = ANL[::-1]\n LS = sum(AL)\n RS = sum(AR)\n heapq.heapify(AL)\n AR = list(map(lambda ddd: -ddd, AR))\n \n heapq.heapify(AR)\n ans = max(ans, LS-RS)\n \n for count in range(n):\n-    print(AL,AR)\n     \n     if ANL[i]-AL[0] > -AR[0]-ANR[j]:\n         LS = LS-heapq.heappop(AL)+ANL[i]\n         heapq.heappush(AL,ANL[i])\n         i += 1\n     else:\n         RS = RS+heapq.heappop(AR)+ANR[j]\n         heapq.heappush(AR,-ANR[j])\n         j += 1\n     \n     ans = max(ans, LS-RS)\n-print(AL,AR)\n \n \n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u645250356",
        "problem_id": "p03959",
        "submission1_id": "s892975170",
        "crp_content": "\n from collections import Counter,defaultdict,deque\n from heapq import heappop,heappush,heapify\n import sys,bisect,math,itertools,fractions\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n INF = float('inf')\n def inp(): return int(sys.stdin.readline())\n def inpl(): return list(map(int, sys.stdin.readline().split()))\n \n def err():\n     print(0)\n     quit()\n \n n = inp()\n a = inpl()\n b = inpl()\n de = [-1] * n\n mx = [INF] * n\n now = -1\n for i in range(n):\n     if a[i] > now:\n         now = a[i]\n         de[i] = now\n     else:\n         mx[i] = now\n now = -1\n for i in range(n)[::-1]:\n     if b[i] > now:\n         now = b[i]\n         if de[i] != -1 and de[i] != now:\n             err()\n         de[i] = now\n     else:\n         mx[i] = min(mx[i], now)\n res = 1\n for i in range(n):\n     if de[i] == -1:\n         res *= mx[i]\n         res %= mod\n print(res)\n",
        "origin_generated_text": "\n```\n from collections import Counter,defaultdict,deque\n from heapq import heappop,heappush,heapify\n import sys,bisect,math,itertools,fractions\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n INF = float('inf')\n def inp(): return int(sys.stdin.readline())\n def inpl(): return list(map(int, sys.stdin.readline().split()))\n \n def err():\n     print(0)\n     quit()\n \n n = inp()\n a = inpl()\n b = inpl()\n de = [-1] * n\n mx = [INF] * n\n now = -1\n for i in range(n):\n     if a[i] > now:\n         now = a[i]\n         de[i] = now\n     else:\n         mx[i] = now\n now = -1\n for i in range(n)[::-1]:\n     if b[i] > now:\n         now = b[i]\n         if de[i] != -1 and de[i] != now:\n             err()\n         de[i] = now\n     else:\n         mx[i] = min(mx[i], now)\n res = 1\n for i in range(n):\n     if de[i] == -1:\n         res *= mx[i]\n         res %= mod\n print(res)\n```\n "
    },
    {
        "user_id": "u430478288",
        "problem_id": "p03729",
        "submission1_id": "s178605486",
        "crp_content": "\n A, B, C = input().split()\n \n-if A[-1] == B[0] and B[-1] and C[-1]:\n     print('YES')\n else:\n     print('NO')\n",
        "origin_generated_text": "\n```\n A, B, C = input().split()\n \n-if A[-1] == B[0] and B[-1] and C[-1]:\n     print('YES')\n else:\n     print('NO')\n```\n "
    },
    {
        "user_id": "u237493274",
        "problem_id": "p02959",
        "submission1_id": "s235514571",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n \n ans = 0\n \n for i in range(n):\n     ab = a[i] - b[i]\n     if ab < 0:\n         ans += a[i]\n         b[i] -= a[i]\n         ab = a[i+1] - b[i]\n         \n         if ab <= 0:\n             ans += a[i+1]\n             a[i+1] = 0\n         else:\n             ans += b[i]\n            \n     elif ab == 0:\n         ans += b[i]\n         \n     else:\n         ans += b[i]\n         \n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n \n ans = 0\n \n for i in range(n):\n     ab = a[i] - b[i]\n     if ab < 0:\n         ans += a[i]\n         b[i] -= a[i]\n         ab = a[i+1] - b[i]\n         \n         if ab <= 0:\n             ans += a[i+1]\n             a[i+1] = 0\n         else:\n             ans += b[i]\n            \n     elif ab == 0:\n         ans += b[i]\n         \n     else:\n         ans += b[i]\n         \n print(ans)\n```\n "
    },
    {
        "user_id": "u064434060",
        "problem_id": "p03626",
        "submission1_id": "s213874119",
        "crp_content": "\n import sys\n \n import math\n \n \n \n \n \n \n \n mod=1000000007\n n=int(input())\n s=[input() for _ in range(2)]\n d=[]\n i=0\n while i<n:\n     if s[0][i]==s[1][i]:\n         d.append(1)\n         i+=1\n     else:\n         d.append(2)\n         i+=2\n m=len(d)\n ans=0\n if d[0]==1:\n     ans=3\n if d[0]==2:\n     ans=6\n-print(d)\n for i in range(1,m):\n     if d[i]==1:\n         if d[i-1]==2:\n             ans*=1\n         else:\n             ans*=2\n     else:\n         if d[i-1]==2:\n             ans*=3\n         else:\n             ans*=2\n     ans=ans%mod\n print(ans%mod)\n",
        "origin_generated_text": "\n```\n import sys\n \n import math\n \n \n \n \n \n \n \n mod=1000000007\n n=int(input())\n s=[input() for _ in range(2)]\n d=[]\n i=0\n while i<n:\n     if s[0][i]==s[1][i]:\n         d.append(1)\n         i+=1\n     else:\n         d.append(2)\n         i+=2\n m=len(d)\n ans=0\n if d[0]==1:\n     ans=3\n if d[0]==2:\n     ans=6\n-print(d)\n for i in range(1,m):\n     if d[i]==1:\n         if d[i-1]==2:\n             ans*=1\n         else:\n             ans*=2\n     else:\n         if d[i-1]==2:\n             ans*=3\n         else:\n             ans*=2\n     ans=ans%mod\n print(ans%mod)\n```\n "
    },
    {
        "user_id": "u200785298",
        "problem_id": "p03096",
        "submission1_id": "s193260173",
        "crp_content": "\n \n import sys\n \n MOD = 1000000007  \n \n def solve(N, C):\n     last = [-1] * (N + 1)\n     pairs = []\n     for i, c in enumerate(C):\n         try:\n             prev = last[c - 1]\n         except:\n             return\n         if prev >= 0 and prev < i - 1:\n             pairs.append((prev, i))\n         last[c - 1] = i\n-    print(0)\n     return\n     pairs.sort()\n     count = [0] * N\n     count[0] = 1\n     idx = 0\n     for i in range(N):\n         if i > 0:\n             count[i] += count[i - 1]\n             count[i] %= MOD\n         while idx < len(pairs) and pairs[idx][0] == i:\n             count[pairs[idx][1]] += count[i]\n             count[pairs[idx][1]] %= MOD\n             idx += 1\n     print(count[N - 1])\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     C = [ int(next(tokens)) for _ in range(N) ]  \n     solve(N, C)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n \n MOD = 1000000007  \n \n def solve(N, C):\n     last = [-1] * (N + 1)\n     pairs = []\n     for i, c in enumerate(C):\n         try:\n             prev = last[c - 1]\n         except:\n             return\n         if prev >= 0 and prev < i - 1:\n             pairs.append((prev, i))\n         last[c - 1] = i\n-    print(0)\n     return\n     pairs.sort()\n     count = [0] * N\n     count[0] = 1\n     idx = 0\n     for i in range(N):\n         if i > 0:\n             count[i] += count[i - 1]\n             count[i] %= MOD\n         while idx < len(pairs) and pairs[idx][0] == i:\n             count[pairs[idx][1]] += count[i]\n             count[pairs[idx][1]] %= MOD\n             idx += 1\n     print(count[N - 1])\n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     C = [ int(next(tokens)) for _ in range(N) ]  \n     solve(N, C)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u819939299",
        "problem_id": "p03760",
        "submission1_id": "s664168365",
        "crp_content": "\n o=list(input())\n-e=list(input())+[\"\"]\n-for x,y in zip(o,e):print(x,y,end=\"\") \n",
        "origin_generated_text": "\n```\n o=list(input())\n-e=list(input())+[\"\"]\n-for x,y in zip(o,e):print(x,y,end=\"\") \n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s800603669",
        "crp_content": "\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 0\n-x3 = S\n-y3 = (x2-S%x2)%x2\n print(x1,y1,x2,y2,x3,y3)\n",
        "origin_generated_text": "\n```\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 0\n-x3 = S\n-y3 = (x2-S%x2)%x2\n print(x1,y1,x2,y2,x3,y3)\n```\n "
    },
    {
        "user_id": "u766783496",
        "problem_id": "p02886",
        "submission1_id": "s121331508",
        "crp_content": "\n import copy\n x = input()\n y = list(map(int,input().split()))\n \n result = 0\n for i, j in enumerate(y):\n     if i == (len(y) - 1):\n         break\n     array = copy.deepcopy(y)\n     b = array.pop(i)\n     a_sum = sum(array)\n     result = result + b * len(y) + a_sum\n \n print(result)\n \n",
        "origin_generated_text": "\n```\n import copy\n x = input()\n y = list(map(int,input().split()))\n \n result = 0\n for i, j in enumerate(y):\n     if i == (len(y) - 1):\n         break\n     array = copy.deepcopy(y)\n     b = array.pop(i)\n     a_sum = sum(array)\n     result = result + b * len(y) + a_sum\n \n print(result)\n \n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03965",
        "submission1_id": "s857336400",
        "crp_content": "\n s = input()\n \n ans = 0\n \n r = 0\n p = 0\n \n for j in s:\n   if j == 'g':\n     r += 1\n     if p > 1:\n       ans -= p\n     p = 0\n   else:\n     p += 1\n     if r > 1:\n       ans += r\n     r = 0\n if p >= 1:\n   if p == 1 and ans > 0:\n     ans -= 1\n   elif p > 1:\n     ans -= p\n if r > 1:\n   ans += r\n print (ans)\n",
        "origin_generated_text": "\n```\n s = input()\n \n ans = 0\n \n r = 0\n p = 0\n \n for j in s:\n   if j == 'g':\n     r += 1\n     if p > 1:\n       ans -= p\n     p = 0\n   else:\n     p += 1\n     if r > 1:\n       ans += r\n     r = 0\n if p >= 1:\n   if p == 1 and ans > 0:\n     ans -= 1\n   elif p > 1:\n     ans -= p\n if r > 1:\n   ans += r\n print (ans)\n```\n "
    },
    {
        "user_id": "u910632349",
        "problem_id": "p02580",
        "submission1_id": "s864634856",
        "crp_content": "\n h,w,m=map(int,input().split())\n bomb=[list(map(int,input().split())) for _ in range(m)] \n a=[0 for i in range(h+1)] \n b=[0 for _ in range(w+1)] \n for i in range(m):\n     a[bomb[i][0]]+=1\n     b[bomb[i][1]]+=1\n am=max(a) \n bm=max(b) \n hmax=[0]*(h+1) \n wmax=[0]*(w+1) \n for i in range(h+1):\n     if am==a[i]:\n         hmax[i]+=1\n for i in range(w):\n     if bm==b[i]:\n         wmax[i]+=1\n ans=(am+bm) \n k=sum(hmax)*sum(wmax)\n if k>m: \n     print(ans)\n     exit()\n for i in bomb:\n     if hmax[i[0]]==1 and wmax[i[1]]==1:\n         k-=1\n if k==0:\n     print(ans-1)\n else:\n     print(ans)\n",
        "origin_generated_text": "\n```\n h,w,m=map(int,input().split())\n bomb=[list(map(int,input().split())) for _ in range(m)] \n a=[0 for i in range(h+1)] \n b=[0 for _ in range(w+1)] \n for i in range(m):\n     a[bomb[i][0]]+=1\n     b[bomb[i][1]]+=1\n am=max(a) \n bm=max(b) \n hmax=[0]*(h+1) \n wmax=[0]*(w+1) \n for i in range(h+1):\n     if am==a[i]:\n         hmax[i]+=1\n for i in range(w):\n     if bm==b[i]:\n         wmax[i]+=1\n ans=(am+bm) \n k=sum(hmax)*sum(wmax)\n if k>m: \n     print(ans)\n     exit()\n for i in bomb:\n     if hmax[i[0]]==1 and wmax[i[1]]==1:\n         k-=1\n if k==0:\n     print(ans-1)\n else:\n     print(ans)\n```\n "
    },
    {
        "user_id": "u102461423",
        "problem_id": "p02962",
        "submission1_id": "s481798793",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n sys.setrecursionlimit(10 ** 7)\n \n S = input().rstrip()\n T = input().rstrip()\n \n \n LS = len(S)\n LT = len(T)\n n = (LT + (-LT) % LS) \n S *= (n+1)\n S = S[:LS+LT]\n \n MOD = 10 ** 9 + 7\n base = 1234\n base_inv = pow(base,MOD-2,MOD) \n power = [1] * (LS+LT)\n power_inv = [1] * (LS+LT)\n for n in range(1,LS+LT):\n     power[n] = power[n-1] * base % MOD\n     power_inv[n] = power_inv[n-1] * base_inv % MOD\n \n def to_rolling_hash(S):\n     ret = [0] * len(S)\n     prev = 0\n     for i,s in enumerate(S):\n         x = (prev + power[i] * ord(s)) % MOD\n         ret[i] = x\n         prev = x\n     return ret\n \n S_hash = to_rolling_hash(S) + [0]\n T_hash = to_rolling_hash(T)[-1] \n \n-can_start = [(S_hash[i + LT - 1] - S_hash[i - 1]) * power_inv[i] % MOD == T_hash for i in range(LS)]\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n sys.setrecursionlimit(10 ** 7)\n \n S = input().rstrip()\n T = input().rstrip()\n \n \n LS = len(S)\n LT = len(T)\n n = (LT + (-LT) % LS) \n S *= (n+1)\n S = S[:LS+LT]\n \n MOD = 10 ** 9 + 7\n base = 1234\n base_inv = pow(base,MOD-2,MOD) \n power = [1] * (LS+LT)\n power_inv = [1] * (LS+LT)\n for n in range(1,LS+LT):\n     power[n] = power[n-1] * base % MOD\n     power_inv[n] = power_inv[n-1] * base_inv % MOD\n \n def to_rolling_hash(S):\n     ret = [0] * len(S)\n     prev = 0\n     for i,s in enumerate(S):\n         x = (prev + power[i] * ord(s)) % MOD\n         ret[i] = x\n         prev = x\n     return ret\n \n S_hash = to_rolling_hash(S) + [0]\n T_hash = to_rolling_hash(T)[-1] \n \n-can_start = [(S_hash[i + LT - 1] - S_hash[i - 1]) * power_inv[i] % MOD == T_hash for i in range(LS)]\n \n```\n "
    },
    {
        "user_id": "u516272298",
        "problem_id": "p03041",
        "submission1_id": "s664100588",
        "crp_content": "\n n,k = map(int,input().split())\n-s = str(input())\n-print(s.replace(s[k-1],s[k-1].lower()))\n",
        "origin_generated_text": "\n```\n n,k = map(int,input().split())\n-s = str(input())\n-print(s.replace(s[k-1],s[k-1].lower()))\n```\n "
    },
    {
        "user_id": "u183896397",
        "problem_id": "p03296",
        "submission1_id": "s048632900",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n ans = 0\n befor = a[0]\n-for i in range(1,n-1):\n     after = a[i+1]\n     if a[i] == befor:\n         ans += 1\n         for j in range(1,10001):\n             if j != after:\n                 a[i] = j\n                 break\n     befor = a[i]\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n ans = 0\n befor = a[0]\n-for i in range(1,n-1):\n     after = a[i+1]\n     if a[i] == befor:\n         ans += 1\n         for j in range(1,10001):\n             if j != after:\n                 a[i] = j\n                 break\n     befor = a[i]\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u944209426",
        "problem_id": "p03965",
        "submission1_id": "s292004126",
        "crp_content": "\n s=input()\n n=len(s)\n res=0\n tg,tp=0,0\n for i in range(n):\n     if s[i]==\"g\":\n         if tg>tp:\n             tp+=1\n             res+=1\n         else:\n             tg+=1\n     else:\n         if tg<=tp:\n             tp+=1\n         else:\n             tg+=1\n-            res-=1\n print(res)\n",
        "origin_generated_text": "\n```\n s=input()\n n=len(s)\n res=0\n tg,tp=0,0\n for i in range(n):\n     if s[i]==\"g\":\n         if tg>tp:\n             tp+=1\n             res+=1\n         else:\n             tg+=1\n     else:\n         if tg<=tp:\n             tp+=1\n         else:\n             tg+=1\n-            res-=1\n print(res)\n```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03480",
        "submission1_id": "s272256159",
        "crp_content": "\n s = list(map(int, list(input())))\n-ans = 10**9\n for i in range(len(s)-1):\n     if s[i]!=s[i+1]:\n         ans = min(ans, max(i+1, len(s)-i-1))\n print(ans)\n \n",
        "origin_generated_text": "\n```\n s = list(map(int, list(input())))\n-ans = 10**9\n for i in range(len(s)-1):\n     if s[i]!=s[i+1]:\n         ans = min(ans, max(i+1, len(s)-i-1))\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u207309781",
        "problem_id": "p02718",
        "submission1_id": "s252525406",
        "crp_content": "\n (N, M) = [int(x) for x in input().split()]\n line=[int(x) for x in input().split()]\n-cutoff=sum(line)/(4*M)\n count=0\n for i in line:\n     if i>cutoff:\n         count+=1\n if count>M:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n (N, M) = [int(x) for x in input().split()]\n line=[int(x) for x in input().split()]\n-cutoff=sum(line)/(4*M)\n count=0\n for i in line:\n     if i>cutoff:\n         count+=1\n if count>M:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u744920373",
        "problem_id": "p02854",
        "submission1_id": "s849842146",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10**8)\n def ii(): return int(sys.stdin.readline())\n def mi(): return map(int, sys.stdin.readline().split())\n def li(): return list(map(int, sys.stdin.readline().split()))\n def li2(N): return [list(map(int, sys.stdin.readline().split())) for i in range(N)]\n def dp2(ini, i, j): return [[ini]*i for i2 in range(j)]\n def dp3(ini, i, j, k): return [[[ini]*i for i2 in range(j)] for i3 in range(k)]\n \n \n \n from itertools import accumulate \n \n N = ii()\n A = li()\n \n acc = list(accumulate(A))\n sa = acc[-1] -acc[0]\n \n for i in range(N):\n     if acc[i] - (acc[-1] - acc[i]) >= 0:\n         break\n \n-if i == N-1:\n-    print(abs(A[i] - acc[i-1]))\n else:\n-    print(abs(acc[i] - (acc[-1] - acc[i])))\n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10**8)\n def ii(): return int(sys.stdin.readline())\n def mi(): return map(int, sys.stdin.readline().split())\n def li(): return list(map(int, sys.stdin.readline().split()))\n def li2(N): return [list(map(int, sys.stdin.readline().split())) for i in range(N)]\n def dp2(ini, i, j): return [[ini]*i for i2 in range(j)]\n def dp3(ini, i, j, k): return [[[ini]*i for i2 in range(j)] for i3 in range(k)]\n \n \n \n from itertools import accumulate \n \n N = ii()\n A = li()\n \n acc = list(accumulate(A))\n sa = acc[-1] -acc[0]\n \n for i in range(N):\n     if acc[i] - (acc[-1] - acc[i]) >= 0:\n         break\n \n-if i == N-1:\n-    print(abs(A[i] - acc[i-1]))\n else:\n-    print(abs(acc[i] - (acc[-1] - acc[i])))\n```\n "
    },
    {
        "user_id": "u652057333",
        "problem_id": "p03626",
        "submission1_id": "s550925943",
        "crp_content": "\n MOD = 10**9+7\n \n n = int(input())\n s1 = input()\n s2 = input()\n ans = 1\n \n if s1[0] == s2[0]:\n     i = 1\n     pre_pat = 0\n     ans = 3\n else:\n     i = 2\n     pre_pat = 1\n     ans = 6\n \n t = [[2, 2], [1, 3]]\n while True:\n     if i >= n:\n         break\n     if s1[i] == s2[i]:\n         pat = 0\n         i += 1\n     else:\n         pat = 1\n         i += 2\n     ans *= t[pre_pat][pat]\n     ans %= MOD\n-    print(pre_pat, pat, ans, i)\n     pre_pat = pat\n print(ans)\n",
        "origin_generated_text": "\n```\n MOD = 10**9+7\n \n n = int(input())\n s1 = input()\n s2 = input()\n ans = 1\n \n if s1[0] == s2[0]:\n     i = 1\n     pre_pat = 0\n     ans = 3\n else:\n     i = 2\n     pre_pat = 1\n     ans = 6\n \n t = [[2, 2], [1, 3]]\n while True:\n     if i >= n:\n         break\n     if s1[i] == s2[i]:\n         pat = 0\n         i += 1\n     else:\n         pat = 1\n         i += 2\n     ans *= t[pre_pat][pat]\n     ans %= MOD\n-    print(pre_pat, pat, ans, i)\n     pre_pat = pat\n print(ans)\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03039",
        "submission1_id": "s758583015",
        "crp_content": "\n MOD = 10**9 + 7\n list_size = 200001\n \n f_list = [1] * list_size\n f_r_list = [1] * list_size\n \n for i in range(list_size - 1):\n \tf_list[i + 1] = int((f_list[i] * (i + 2)) % MOD)\n \n f_r_list[-1] = pow(f_list[-1], MOD - 2, MOD)\n \n for i in range(2, list_size + 1):\n \tf_r_list[-i] = int((f_r_list[-i + 1] * (list_size + 2 - i)) % MOD)\n \n def comb(n, r):\n \tif n < r:\n \t\treturn 0\n \telif n == 0 or r == 0 or n == r:\n \t\treturn 1\n \telse:\n \t\treturn (((f_list[n - 1] * f_r_list[n - r - 1]) % MOD) * f_r_list[r - 1]) % MOD \n \n n, m, k = map(int, input().split())\n-print(int((((n+m)*k*(k-1))/6)*comb(n*m, k)%MOD))\n",
        "origin_generated_text": "\n```\n MOD = 10**9 + 7\n list_size = 200001\n \n f_list = [1] * list_size\n f_r_list = [1] * list_size\n \n for i in range(list_size - 1):\n \tf_list[i + 1] = int((f_list[i] * (i + 2)) % MOD)\n \n f_r_list[-1] = pow(f_list[-1], MOD - 2, MOD)\n \n for i in range(2, list_size + 1):\n \tf_r_list[-i] = int((f_r_list[-i + 1] * (list_size + 2 - i)) % MOD)\n \n def comb(n, r):\n \tif n < r:\n \t\treturn 0\n \telif n == 0 or r == 0 or n == r:\n \t\treturn 1\n \telse:\n \t\treturn (((f_list[n - 1] * f_r_list[n - r - 1]) % MOD) * f_r_list[r - 1]) % MOD \n \n n, m, k = map(int, input().split())\n-print(int((((n+m)*k*(k-1))/6)*comb(n*m, k)%MOD))\n```\n "
    },
    {
        "user_id": "u331464808",
        "problem_id": "p03992",
        "submission1_id": "s441017628",
        "crp_content": "\n s = input()\n-print(s[:3]+' '+s[3:])\n",
        "origin_generated_text": "\n```\n s = input()\n-print(s[:3]+' '+s[3:])\n```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p02718",
        "submission1_id": "s831329813",
        "crp_content": "\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n-print(\"Yes\") if len([a[i] for i in range(m) if a[i] > sum(a) / 4 / m]) >= m else print(\"No\")\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n-print(\"Yes\") if len([a[i] for i in range(m) if a[i] > sum(a) / 4 / m]) >= m else print(\"No\")\n```\n "
    },
    {
        "user_id": "u661980786",
        "problem_id": "p03573",
        "submission1_id": "s421802268",
        "crp_content": "\n a,b,c = map(int,input().split())\n if a == b:\n     print(c)\n-if a == c:\n     print(b)\n else:\n     print(a)\n",
        "origin_generated_text": "\n```\n a,b,c = map(int,input().split())\n if a == b:\n     print(c)\n-if a == c:\n     print(b)\n else:\n     print(a)\n```\n "
    },
    {
        "user_id": "u574483499",
        "problem_id": "p02880",
        "submission1_id": "s461531385",
        "crp_content": "\n n = int(input())\n \n ln = []\n \n for i in range(9):\n   for j in range(9):\n     ln.append(i*j)\n     \n-print(\"Yes\" if n in ln else \"No\")\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n ln = []\n \n for i in range(9):\n   for j in range(9):\n     ln.append(i*j)\n     \n-print(\"Yes\" if n in ln else \"No\")\n```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s200123623",
        "crp_content": "\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int, i.split(\",\")))\n-        mas[y][x] += 1\n         for j in eval(\"n\"+str(a)):\n             try:\n                 mas[y+j[1]][x+j[0]] += 1\n             except IndexError:\n                 continue\n     except:\n         break\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n",
        "origin_generated_text": "\n```\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int, i.split(\",\")))\n-        mas[y][x] += 1\n         for j in eval(\"n\"+str(a)):\n             try:\n                 mas[y+j[1]][x+j[0]] += 1\n             except IndexError:\n                 continue\n     except:\n         break\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n```\n "
    },
    {
        "user_id": "u054556734",
        "problem_id": "p03625",
        "submission1_id": "s894629652",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n a.sort(reverse=True)\n \n ans=[]\n tmp=0\n flag=True\n for el in a:\n     if len(ans)==2: break\n     if el != tmp: tmp=el; flag=True\n     else:\n         if flag: ans.append(el); tmp=el; flag=False\n \n try: ans=ans[0]*ans[1]\n except: ans=0\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n a.sort(reverse=True)\n \n ans=[]\n tmp=0\n flag=True\n for el in a:\n     if len(ans)==2: break\n     if el != tmp: tmp=el; flag=True\n     else:\n         if flag: ans.append(el); tmp=el; flag=False\n \n try: ans=ans[0]*ans[1]\n except: ans=0\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u797673668",
        "problem_id": "p02327",
        "submission1_id": "s962062448",
        "crp_content": "\n h, w = map(int, input().split())\n max_rect, prev = 0, [0] * (w + 1)\n for i in range(h):\n     current = [p + 1 if f else 0 for f, p in zip(map(lambda x: int(x) ^ 1, input().split()), prev)] + [0]\n     stack = [(0, 0)]\n     for j in range(w + 1):\n         c_j = current[j]\n         if stack[-1][0] < c_j:\n             stack.append((c_j, j))\n             continue\n         if stack[-1][0] > c_j:\n             while stack[-1][0] > c_j:\n                 height, since = stack.pop()\n                 max_rect = max(max_rect, height * (j - since))\n             if c_j:\n                 stack.append((c_j, j))\n     prev = current\n \n print(max_rect)\n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n max_rect, prev = 0, [0] * (w + 1)\n for i in range(h):\n     current = [p + 1 if f else 0 for f, p in zip(map(lambda x: int(x) ^ 1, input().split()), prev)] + [0]\n     stack = [(0, 0)]\n     for j in range(w + 1):\n         c_j = current[j]\n         if stack[-1][0] < c_j:\n             stack.append((c_j, j))\n             continue\n         if stack[-1][0] > c_j:\n             while stack[-1][0] > c_j:\n                 height, since = stack.pop()\n                 max_rect = max(max_rect, height * (j - since))\n             if c_j:\n                 stack.append((c_j, j))\n     prev = current\n \n print(max_rect)\n```\n "
    },
    {
        "user_id": "u726769307",
        "problem_id": "p02887",
        "submission1_id": "s177244060",
        "crp_content": "\n n=int(input())\n s=list(input())\n prev=s[0]\n sum=1\n for i in range(n-1):\n     if(prev!=s[i]):\n         sum+=1\n-    prev=s[i]\n print(sum)\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=list(input())\n prev=s[0]\n sum=1\n for i in range(n-1):\n     if(prev!=s[i]):\n         sum+=1\n-    prev=s[i]\n print(sum)\n```\n "
    },
    {
        "user_id": "u940765148",
        "problem_id": "p02742",
        "submission1_id": "s450199928",
        "crp_content": "\n h,w = [int(i) for i in input().split()]\n-a = (w + 1) \n-n = (h + 1) \n-r = a*n\n if h % 2 == 0:\n-    r += (a-1)*n\n else:\n-    r += (a-1)*(n-1)\n print(r)\n",
        "origin_generated_text": "\n```\n h,w = [int(i) for i in input().split()]\n-a = (w + 1) \n-n = (h + 1) \n-r = a*n\n if h % 2 == 0:\n-    r += (a-1)*n\n else:\n-    r += (a-1)*(n-1)\n print(r)\n```\n "
    },
    {
        "user_id": "u441320782",
        "problem_id": "p03573",
        "submission1_id": "s945329750",
        "crp_content": "\n x = list(map(int,input().split()))\n result = None\n for i in set(x):\n   if x.count(i)>1:\n     result = i\n-print(result)    \n",
        "origin_generated_text": "\n```\n x = list(map(int,input().split()))\n result = None\n for i in set(x):\n   if x.count(i)>1:\n     result = i\n-print(result)    \n```\n "
    },
    {
        "user_id": "u032798323",
        "problem_id": "p02699",
        "submission1_id": "s752000546",
        "crp_content": "\n S,W = list(map(int,input().split()))\n \n-if S < W:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n \n",
        "origin_generated_text": "\n```\n S,W = list(map(int,input().split()))\n \n-if S < W:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n \n```\n "
    },
    {
        "user_id": "u355853184",
        "problem_id": "p02580",
        "submission1_id": "s225191644",
        "crp_content": "\n H, W, M = map(int, input().split())\n \n H_bom = [0 for i in range(H)]\n W_bom = [0 for i in range(W)]\n bom_map = [[0 for i in range(W)] for i in range(H)]\n \n for i in range(M):\n     M_temp = list(map(int, input().split()))\n     H_bom[M_temp[0]-1] += 1\n     W_bom[M_temp[1]-1] += 1\n     bom_map[M_temp[0]-1][M_temp[1]-1] = 1\n \n \n H_bom_max = max(H_bom)\n W_bom_max = max(W_bom)\n H_bom_line = []\n W_bom_line = []\n \n for i in range(H):\n     if H_bom[i] == H_bom_max:\n         H_bom_line.append(i)\n for i in range(W):\n     if W_bom[i] == W_bom_max:\n         W_bom_line.append(i)\n \n bom_check_flag = 0\n \n for i in H_bom_line:\n     for j in W_bom_line:\n         if bom_map[i-1][j-1] == 1:\n             print(H_bom_max + W_bom_max)\n             bom_check_flag = 1\n             break\n if bom_check_flag == 0:\n     print(H_bom_max + W_bom_max -1)\n \n",
        "origin_generated_text": "\n```\n H, W, M = map(int, input().split())\n \n H_bom = [0 for i in range(H)]\n W_bom = [0 for i in range(W)]\n bom_map = [[0 for i in range(W)] for i in range(H)]\n \n for i in range(M):\n     M_temp = list(map(int, input().split()))\n     H_bom[M_temp[0]-1] += 1\n     W_bom[M_temp[1]-1] += 1\n     bom_map[M_temp[0]-1][M_temp[1]-1] = 1\n \n \n H_bom_max = max(H_bom)\n W_bom_max = max(W_bom)\n H_bom_line = []\n W_bom_line = []\n \n for i in range(H):\n     if H_bom[i] == H_bom_max:\n         H_bom_line.append(i)\n for i in range(W):\n     if W_bom[i] == W_bom_max:\n         W_bom_line.append(i)\n \n bom_check_flag = 0\n \n for i in H_bom_line:\n     for j in W_bom_line:\n         if bom_map[i-1][j-1] == 1:\n             print(H_bom_max + W_bom_max)\n             bom_check_flag = 1\n             break\n if bom_check_flag == 0:\n     print(H_bom_max + W_bom_max -1)\n \n```\n "
    },
    {
        "user_id": "u017810624",
        "problem_id": "p02633",
        "submission1_id": "s682782019",
        "crp_content": "\n import math\n x=int(input())\n ct=0\n for i in range(1000):\n-  ct+=(180-x)\n   if ct%360==0:\n     print(i+1)\n     exit()\n",
        "origin_generated_text": "\n```\n import math\n x=int(input())\n ct=0\n for i in range(1000):\n-  ct+=(180-x)\n   if ct%360==0:\n     print(i+1)\n     exit()\n```\n "
    },
    {
        "user_id": "u014268998",
        "problem_id": "p03106",
        "submission1_id": "s802381741",
        "crp_content": "\n a,b,k = map(int,input().split())\n \n \n \n c = 0\n ans = 0\n-for i in range(min(a,b),1,-1):\n   if(a%i == 0 and b%i == 0):\n     c += 1\n-    print(i)\n     if(c == k):\n       ans = i\n       break\n \n print(ans)\n",
        "origin_generated_text": "\n```\n a,b,k = map(int,input().split())\n \n \n \n c = 0\n ans = 0\n-for i in range(min(a,b),1,-1):\n   if(a%i == 0 and b%i == 0):\n     c += 1\n-    print(i)\n     if(c == k):\n       ans = i\n       break\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u914330401",
        "problem_id": "p03102",
        "submission1_id": "s182412719",
        "crp_content": "\n N, M, C = map(int, input().split())\n B = list(map(int, input().split()))\n-A = [[0]*M]*N\n ans = 0\n sum = 0\n for i in range(N):\n   A[i] = list(map(int, input().split()))\n for i in range(N):\n   for j in range(M):\n     sum += A[i][j] * B[j]\n   sum += C\n   if sum > 0:\n     ans += 1\n       \n print(ans)\n",
        "origin_generated_text": "\n```\n N, M, C = map(int, input().split())\n B = list(map(int, input().split()))\n-A = [[0]*M]*N\n ans = 0\n sum = 0\n for i in range(N):\n   A[i] = list(map(int, input().split()))\n for i in range(N):\n   for j in range(M):\n     sum += A[i][j] * B[j]\n   sum += C\n   if sum > 0:\n     ans += 1\n       \n print(ans)\n```\n "
    },
    {
        "user_id": "u041351774",
        "problem_id": "p03716",
        "submission1_id": "s961895692",
        "crp_content": "\n import heapq\n n=int(input())\n a=list(map(int,input().split()))\n q=a[0:n]\n heapq.heapify(q)\n p=list(map(lambda x: x*(-1),a[2*n:3*n]))\n heapq.heapify(p)\n sums=[0]*(n+1)\n sums[0]=sum(q)\n sums[n]=sum(p)\n am=a[n:2*n]\n for i in range(0,n):\n     heapq.heappush(q,am[i])\n     heapq.heappop(q)\n     sums[i+1]=sum(q)\n for i in range(n-1,-1,-1):\n     heapq.heappush(p,(-1)*am[i])\n     heapq.heappop(p)\n     sums[i]+=sum(p)\n print(max(sums))\n",
        "origin_generated_text": "\n```\n import heapq\n n=int(input())\n a=list(map(int,input().split()))\n q=a[0:n]\n heapq.heapify(q)\n p=list(map(lambda x: x*(-1),a[2*n:3*n]))\n heapq.heapify(p)\n sums=[0]*(n+1)\n sums[0]=sum(q)\n sums[n]=sum(p)\n am=a[n:2*n]\n for i in range(0,n):\n     heapq.heappush(q,am[i])\n     heapq.heappop(q)\n     sums[i+1]=sum(q)\n for i in range(n-1,-1,-1):\n     heapq.heappush(p,(-1)*am[i])\n     heapq.heappop(p)\n     sums[i]+=sum(p)\n print(max(sums))\n```\n "
    },
    {
        "user_id": "u707808519",
        "problem_id": "p02556",
        "submission1_id": "s702335322",
        "crp_content": "\n N = int(input())\n mant = [0 for _ in range(N)]\n for i in range(N):\n     x, y = map(int, input().split())\n-    mant[i] = x + y\n \n print(max(mant)-min(mant))\n",
        "origin_generated_text": "\n```\n N = int(input())\n mant = [0 for _ in range(N)]\n for i in range(N):\n     x, y = map(int, input().split())\n-    mant[i] = x + y\n \n print(max(mant)-min(mant))\n```\n "
    },
    {
        "user_id": "u830054172",
        "problem_id": "p03272",
        "submission1_id": "s292746109",
        "crp_content": "\n n,i=list(map(int,input().split()))\n-print(n-i)\n",
        "origin_generated_text": "\n```\n n,i=list(map(int,input().split()))\n-print(n-i)\n```\n "
    },
    {
        "user_id": "u260216890",
        "problem_id": "p02886",
        "submission1_id": "s779389870",
        "crp_content": "\n N=int(input())\n-D=list(map(int,input().split()))\n from itertools import combinations\n ans=0\n comb=combinations(D,2)\n for c in comb:\n   ans+=c[0]+c[1]\n print(ans)\n",
        "origin_generated_text": "\n```\n N=int(input())\n-D=list(map(int,input().split()))\n from itertools import combinations\n ans=0\n comb=combinations(D,2)\n for c in comb:\n   ans+=c[0]+c[1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p03416",
        "submission1_id": "s245993608",
        "crp_content": "\n a,b = map(int,input().split()) \n c = 0\n-for i in range(1,10):\n-  for j in range(0,10):\n-    for k in range(0,10):\n-      x = 10001*i+1010*j+100*k\n-      if x >= a and x <= b:\n-        c += 1\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split()) \n c = 0\n-for i in range(1,10):\n-  for j in range(0,10):\n-    for k in range(0,10):\n-      x = 10001*i+1010*j+100*k\n-      if x >= a and x <= b:\n-        c += 1\n```\n "
    },
    {
        "user_id": "u268792407",
        "problem_id": "p02887",
        "submission1_id": "s094790296",
        "crp_content": "\n N = int(input())\n-S = list(input().split())\n  \n ans = 1\n for i in range(N - 1):\n-    if i != i + 1:\n         ans = ans + 1\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n-S = list(input().split())\n  \n ans = 1\n for i in range(N - 1):\n-    if i != i + 1:\n         ans = ans + 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u369320902",
        "problem_id": "p03041",
        "submission1_id": "s118693254",
        "crp_content": "\n a = input().split()\n b = input()\n  \n list = list(b)\n  \n-for i in list:\n-  if i == int(a[1]) - 1:\n-    list[i] = list[i].lower()\n     \n print(''.join(list))\n",
        "origin_generated_text": "\n```\n a = input().split()\n b = input()\n  \n list = list(b)\n  \n-for i in list:\n-  if i == int(a[1]) - 1:\n-    list[i] = list[i].lower()\n     \n print(''.join(list))\n```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p02407",
        "submission1_id": "s717091859",
        "crp_content": "\n n = int(input())\n-print(\" \".join(map(str, sorted(list(map(int, input().split())), reverse=True))))\n",
        "origin_generated_text": "\n```\n n = int(input())\n-print(\" \".join(map(str, sorted(list(map(int, input().split())), reverse=True))))\n```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p02665",
        "submission1_id": "s084629975",
        "crp_content": "\n \n N = int(input())\n \n A = list(map(int, input().split()))\n for i in range(N):\n-    if A[i] > 2**i:\n         print(-1)\n         exit()\n \n if A[0] != 0:\n     if N == 0 and A[0] == 1:\n         print(1)\n         exit()\n     else:\n         print(-1)\n         exit()\n \n limit = [1]\n for i in range(1, N+1):\n     if i == N:\n         limit.append(A[i])\n     else:\n         limit.append((limit[-1]-A[i-1])*2)\n \n \n \n ans = [A[-1]]\n now_leaf = A[-1]\n for i in range(N-1, -1, -1):\n     \n     ans.append(min(now_leaf+A[i], limit[i]))\n     now_leaf = ans[-1]\n \n print(sum(ans))\n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n \n A = list(map(int, input().split()))\n for i in range(N):\n-    if A[i] > 2**i:\n         print(-1)\n         exit()\n \n if A[0] != 0:\n     if N == 0 and A[0] == 1:\n         print(1)\n         exit()\n     else:\n         print(-1)\n         exit()\n \n limit = [1]\n for i in range(1, N+1):\n     if i == N:\n         limit.append(A[i])\n     else:\n         limit.append((limit[-1]-A[i-1])*2)\n \n \n \n ans = [A[-1]]\n now_leaf = A[-1]\n for i in range(N-1, -1, -1):\n     \n     ans.append(min(now_leaf+A[i], limit[i]))\n     now_leaf = ans[-1]\n \n print(sum(ans))\n \n```\n "
    },
    {
        "user_id": "u324549724",
        "problem_id": "p03796",
        "submission1_id": "s610085967",
        "crp_content": "\n import math\n \n n = int(input())\n-print(math.factorial(n)%1000000009)\n \n",
        "origin_generated_text": "\n```\n import math\n \n n = int(input())\n-print(math.factorial(n)%1000000009)\n \n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s212622760",
        "crp_content": "\n \n def solve(a,b,c,d):\n   x1,y1,x2,y2=a,b,c,d\n   mx=my=0\n   if x1==x2 and x1%3==2:mx=1\n   if y1==y2 and y1%3==2:my=1\n   for i in range(29):\n     x1=0--x1\n     y1=0--y1\n     x2=0--x2\n     y2=0--y2\n     if x1==x2 and x1%3==2:mx=i+2\n     if y1==y2 and y1%3==2:my=i+2\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def solve(a,b,c,d):\n   x1,y1,x2,y2=a,b,c,d\n   mx=my=0\n   if x1==x2 and x1%3==2:mx=1\n   if y1==y2 and y1%3==2:my=1\n   for i in range(29):\n     x1=0--x1\n     y1=0--y1\n     x2=0--x2\n     y2=0--y2\n     if x1==x2 and x1%3==2:mx=i+2\n     if y1==y2 and y1%3==2:my=i+2\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u813238682",
        "problem_id": "p03563",
        "submission1_id": "s094637307",
        "crp_content": "\n R = float(input())\n G = float(input())\n-ans = 2 * G -R\n print(ans)\n",
        "origin_generated_text": "\n```\n R = float(input())\n G = float(input())\n-ans = 2 * G -R\n print(ans)\n```\n "
    },
    {
        "user_id": "u556160473",
        "problem_id": "p03734",
        "submission1_id": "s710473790",
        "crp_content": "\n import bisect\n \n if 1:\n     N,W = map(int, input().split(' '))\n     w,v = [],[]\n     for i in range(N):\n         w_,v_ = map(int, input().split(' '))\n         w.append(w_)\n         v.append(v_)\n else:\n     N,W = 4,6\n     w = [2,3,4,3]\n     v = [1,4,10,4]\n \n w0 = w[0]\n \n idxs = set()\n for i in range(N+1):\n     for j in range(3*i+1):\n         if i*w0+j <= W:\n             idxs.add(i*w0+j)\n idxs = list(idxs) \n idx_dict = {idx:i for i,idx in enumerate(idxs)}\n \n dp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n \n for i in range(N):\n     for j in range(len(idxs)):\n         if idxs[j] < w[i]:\n             dp[i+1][j] = dp[i][j]\n         else:\n-            if 0:\n-                k = bisect.bisect_left(idxs, idxs[j]-w[i])\n-                try:\n-                    dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n-                except:\n-                    dp[i+1][j] = dp[i][j]\n-            else:\n-                try:\n-                    dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n-                except:\n-                    dp[i+1][j] = dp[i][j]\n                 \n print(dp[-1][-1]%1000000009)\n",
        "origin_generated_text": "\n```\n import bisect\n \n if 1:\n     N,W = map(int, input().split(' '))\n     w,v = [],[]\n     for i in range(N):\n         w_,v_ = map(int, input().split(' '))\n         w.append(w_)\n         v.append(v_)\n else:\n     N,W = 4,6\n     w = [2,3,4,3]\n     v = [1,4,10,4]\n \n w0 = w[0]\n \n idxs = set()\n for i in range(N+1):\n     for j in range(3*i+1):\n         if i*w0+j <= W:\n             idxs.add(i*w0+j)\n idxs = list(idxs) \n idx_dict = {idx:i for i,idx in enumerate(idxs)}\n \n dp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n \n for i in range(N):\n     for j in range(len(idxs)):\n         if idxs[j] < w[i]:\n             dp[i+1][j] = dp[i][j]\n         else:\n-            if 0:\n-                k = bisect.bisect_left(idxs, idxs[j]-w[i])\n-                try:\n-                    dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n-                except:\n-                    dp[i+1][j] = dp[i][j]\n-            else:\n-                try:\n-                    dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n-                except:\n-                    dp[i+1][j] = dp[i][j]\n                 \n print(dp[-1][-1]%1000000009)\n```\n "
    },
    {
        "user_id": "u692746605",
        "problem_id": "p02880",
        "submission1_id": "s848956615",
        "crp_content": "\n n=int(input())\n \n-for i in range(2,10):\n-  for j in range(2,10):\n     if i*j==n:\n       print('Yes')\n       exit()\n \n print('No')\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n \n-for i in range(2,10):\n-  for j in range(2,10):\n     if i*j==n:\n       print('Yes')\n       exit()\n \n print('No')\n \n```\n "
    },
    {
        "user_id": "u858670323",
        "problem_id": "p03796",
        "submission1_id": "s678189381",
        "crp_content": "\n N=int(input().rstrip())\n a=1\n mod=1e9+7\n for i in range(1,N+1):\n   a*=i\n   a%=mod\n-print(a)\n-\n",
        "origin_generated_text": "\n```\n N=int(input().rstrip())\n a=1\n mod=1e9+7\n for i in range(1,N+1):\n   a*=i\n   a%=mod\n-print(a)\n-\n```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p03796",
        "submission1_id": "s913133989",
        "crp_content": "\n n = int(input())\n ans = 1\n-for i in range(1,n):\n   ans *= i\n   ans %= 10**9 + 7\n-print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n ans = 1\n-for i in range(1,n):\n   ans *= i\n   ans %= 10**9 + 7\n-print(ans)\n```\n "
    },
    {
        "user_id": "u723711163",
        "problem_id": "p02718",
        "submission1_id": "s062282807",
        "crp_content": "\n N, M = list(map(int, input().split()))\n scores = list(map(int, input().split()))\n-at_least = sum(scores) \n \n-if len([ s for s in scores if s > at_least]) >= M:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n N, M = list(map(int, input().split()))\n scores = list(map(int, input().split()))\n-at_least = sum(scores) \n \n-if len([ s for s in scores if s > at_least]) >= M:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u229333839",
        "problem_id": "p03206",
        "submission1_id": "s276135749",
        "crp_content": "\n C = \"Christmas\"\n-E =\" EVE\"\n D = input()\n D = int(D)\n a = 25 - D\n q=\"\"\n  \n while a > 0:\n   q = q + E\n   a = a - 1\n  \n print(C+q)\n",
        "origin_generated_text": "\n```\n C = \"Christmas\"\n-E =\" EVE\"\n D = input()\n D = int(D)\n a = 25 - D\n q=\"\"\n  \n while a > 0:\n   q = q + E\n   a = a - 1\n  \n print(C+q)\n```\n "
    },
    {
        "user_id": "u021916304",
        "problem_id": "p02742",
        "submission1_id": "s770144087",
        "crp_content": "\n h,w=map(int,input().split())\n if h == 1 or w == 1:\n   print(1)\n elif h%2 == 0 or w%2 == 0:\n-  print(h*w/2)\n else:\n   print(int(h*w/2)+1)\n   \n \n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n if h == 1 or w == 1:\n   print(1)\n elif h%2 == 0 or w%2 == 0:\n-  print(h*w/2)\n else:\n   print(int(h*w/2)+1)\n   \n \n```\n "
    },
    {
        "user_id": "u547608423",
        "problem_id": "p02556",
        "submission1_id": "s536894716",
        "crp_content": "\n N = int(input())\n i = []\n j = []\n for k in range(N):\n     x, y = map(int, input().split())\n-    i.append(x+y)\n-    j.append(-x-y)\n \n-print(max(abs(max(i)+max(j)), abs(min(i)+min(j))))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n i = []\n j = []\n for k in range(N):\n     x, y = map(int, input().split())\n-    i.append(x+y)\n-    j.append(-x-y)\n \n-print(max(abs(max(i)+max(j)), abs(min(i)+min(j))))\n \n```\n "
    },
    {
        "user_id": "u013202780",
        "problem_id": "p03729",
        "submission1_id": "s303296019",
        "crp_content": "\n-a,b,c=input().split();print(\"Yes\" if a[-1]==b[0] and b[-1]==c[0] else \"No\")\n",
        "origin_generated_text": "\n```\n-a,b,c=input().split();print(\"Yes\" if a[-1]==b[0] and b[-1]==c[0] else \"No\")\n```\n "
    },
    {
        "user_id": "u727407185",
        "problem_id": "p02727",
        "submission1_id": "s934850012",
        "crp_content": "\n import sys\n x, y, a, b, c = [int(x) for x in input().split()]\n p = [int(x) for x in input().split()]\n q = [int(x) for x in input().split()]\n r = [int(x) for x in input().split()]\n p.sort(key=lambda x: -x)\n q.sort(key=lambda x: -x)\n r.sort(key=lambda x: -x)\n ri = max(0, x - a) + max(0, y - b)\n pi = min(a, x)\n qi = min(b, y)\n while ri < len(r) and (0 < pi or 0 < qi):\n     if 0 < pi and p[pi - 1] < r[ri] and (qi <= 0 or p[pi - 1] < q[qi - 1]):\n         ri += 1\n         pi -= 1\n     elif 0 < qi and q[qi - 1] < r[ri] and (pi <= 0 or q[qi - 1] < p[pi - 1]):\n         ri += 1\n         qi -= 1\n     else:\n         break\n-print(sum(p[:pi]) + sum(q[:qi]) + sum(r[:ri]))\n \n",
        "origin_generated_text": "\n```\n import sys\n x, y, a, b, c = [int(x) for x in input().split()]\n p = [int(x) for x in input().split()]\n q = [int(x) for x in input().split()]\n r = [int(x) for x in input().split()]\n p.sort(key=lambda x: -x)\n q.sort(key=lambda x: -x)\n r.sort(key=lambda x: -x)\n ri = max(0, x - a) + max(0, y - b)\n pi = min(a, x)\n qi = min(b, y)\n while ri < len(r) and (0 < pi or 0 < qi):\n     if 0 < pi and p[pi - 1] < r[ri] and (qi <= 0 or p[pi - 1] < q[qi - 1]):\n         ri += 1\n         pi -= 1\n     elif 0 < qi and q[qi - 1] < r[ri] and (pi <= 0 or q[qi - 1] < p[pi - 1]):\n         ri += 1\n         qi -= 1\n     else:\n         break\n-print(sum(p[:pi]) + sum(q[:qi]) + sum(r[:ri]))\n \n```\n "
    },
    {
        "user_id": "u637322311",
        "problem_id": "p02281",
        "submission1_id": "s179648532",
        "crp_content": "\n from sys import stdin\n \n class Node(object):\n     def __init__(self, parent=None, left=None, right=None):\n         self.parent = parent\n         self.left = left\n         self.right = right\n \n def print_nodes(nodes, n):\n     A = []\n     B = []\n     C = []\n     def walk_tree(nodes, u):\n         if u == -1:\n             return\n         r = nodes[u].right\n         l = nodes[u].left\n         nonlocal A\n         A.append(u)\n         walk_tree(nodes, l)\n         B.append(u)\n         walk_tree(nodes, r)\n         C.append(u)\n \n     for i in range(n):\n         if nodes[i].parent == None:\n             walk_tree(nodes, i)\n-            print(\"Preorder\", end=\"\\n \")\n             print(*A, sep=\" \")\n-            print(\"Ineorder\", end=\"\\n \")\n             print(*B, sep=\" \")\n-            print(\"Postorder\", end=\"\\n \")\n             print(*C, sep=\" \")\n \n def read_binary_tree(nodes, n):\n     for _ in range(n):\n         i = [int(i) for i in stdin.readline().strip().split()]\n         nodes[i[0]].left = i[1]\n         nodes[i[0]].right = i[2]\n         if i[1] != -1:\n             nodes[i[1]].parent = i[0]\n         if i[2] != -1:\n             nodes[i[2]].parent = i[0]\n \n n = int(input())\n nodes = [Node() for _ in range(n)]\n read_binary_tree(nodes, n)\n print_nodes(nodes, n)\n \n",
        "origin_generated_text": "\n```\n from sys import stdin\n \n class Node(object):\n     def __init__(self, parent=None, left=None, right=None):\n         self.parent = parent\n         self.left = left\n         self.right = right\n \n def print_nodes(nodes, n):\n     A = []\n     B = []\n     C = []\n     def walk_tree(nodes, u):\n         if u == -1:\n             return\n         r = nodes[u].right\n         l = nodes[u].left\n         nonlocal A\n         A.append(u)\n         walk_tree(nodes, l)\n         B.append(u)\n         walk_tree(nodes, r)\n         C.append(u)\n \n     for i in range(n):\n         if nodes[i].parent == None:\n             walk_tree(nodes, i)\n-            print(\"Preorder\", end=\"\\n \")\n             print(*A, sep=\" \")\n-            print(\"Ineorder\", end=\"\\n \")\n             print(*B, sep=\" \")\n-            print(\"Postorder\", end=\"\\n \")\n             print(*C, sep=\" \")\n \n def read_binary_tree(nodes, n):\n     for _ in range(n):\n         i = [int(i) for i in stdin.readline().strip().split()]\n         nodes[i[0]].left = i[1]\n         nodes[i[0]].right = i[2]\n         if i[1] != -1:\n             nodes[i[1]].parent = i[0]\n         if i[2] != -1:\n             nodes[i[2]].parent = i[0]\n \n n = int(input())\n nodes = [Node() for _ in range(n)]\n read_binary_tree(nodes, n)\n print_nodes(nodes, n)\n \n```\n "
    },
    {
        "user_id": "u131881594",
        "problem_id": "p03998",
        "submission1_id": "s608735469",
        "crp_content": "\n a,b,c=input(),input(),input()\n string=[a,b,c]\n s=[0,0,0]\n ban=0\n-print(string)\n while s[0]!=len(a) and s[1]!=len(b) and s[2]!=len(c):\n     temp=s[ban]\n     s[ban]+=1\n     if string[ban][temp]==\"a\": ban=0\n     elif string[ban][temp]==\"b\": ban=1\n     else: ban=2\n \n if s[0]==len(a): print(\"A\")\n if s[1]==len(b): print(\"B\")\n if s[2]==len(c): print(\"C\")\n",
        "origin_generated_text": "\n```\n a,b,c=input(),input(),input()\n string=[a,b,c]\n s=[0,0,0]\n ban=0\n-print(string)\n while s[0]!=len(a) and s[1]!=len(b) and s[2]!=len(c):\n     temp=s[ban]\n     s[ban]+=1\n     if string[ban][temp]==\"a\": ban=0\n     elif string[ban][temp]==\"b\": ban=1\n     else: ban=2\n \n if s[0]==len(a): print(\"A\")\n if s[1]==len(b): print(\"B\")\n if s[2]==len(c): print(\"C\")\n```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s556813886",
        "crp_content": "\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = {}\n for i in range(N):\n     C[i] = int(input())\n     if not C[i] in dic:\n         dic[C[i]] = [ i ]\n     else:\n         dic[C[i]].append(i)\n \n dp = [0] * N\n dp[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1]\n     if C[i] == C[i-1]:\n         continue\n \n     for prev in dic[C[i]]:\n         if prev < i:\n-            if prev > 0:\n                 dp[i] += dp[prev-1]\n             else:\n                 dp[i] += 1\n \n print(dp[N-1])\n",
        "origin_generated_text": "\n```\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = {}\n for i in range(N):\n     C[i] = int(input())\n     if not C[i] in dic:\n         dic[C[i]] = [ i ]\n     else:\n         dic[C[i]].append(i)\n \n dp = [0] * N\n dp[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1]\n     if C[i] == C[i-1]:\n         continue\n \n     for prev in dic[C[i]]:\n         if prev < i:\n-            if prev > 0:\n                 dp[i] += dp[prev-1]\n             else:\n                 dp[i] += 1\n \n print(dp[N-1])\n```\n "
    },
    {
        "user_id": "u482157295",
        "problem_id": "p03796",
        "submission1_id": "s701455186",
        "crp_content": "\n n = int(input())\n ans = 1\n dummy1,dummy2 = divmod(n,2)\n for i in range(1,dummy1+1):\n   ans *= i\n   ans *= n+1-i\n   ans = ans % (10**9+7)\n-if dummy2 == 1:\n-  ans *= (dummy2+1)\n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n ans = 1\n dummy1,dummy2 = divmod(n,2)\n for i in range(1,dummy1+1):\n   ans *= i\n   ans *= n+1-i\n   ans = ans % (10**9+7)\n-if dummy2 == 1:\n-  ans *= (dummy2+1)\n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u780206746",
        "problem_id": "p03760",
        "submission1_id": "s022090086",
        "crp_content": "\n import sys\n \n O = list(input())\n E = list(input())\n for o, e in zip(O, E):\n     sys.stdout.write(o + e)\n-if len(O) - len(E) == 1:\n     sys.stdout.write(E[-1])\n print()\n \n",
        "origin_generated_text": "\n```\n import sys\n \n O = list(input())\n E = list(input())\n for o, e in zip(O, E):\n     sys.stdout.write(o + e)\n-if len(O) - len(E) == 1:\n     sys.stdout.write(E[-1])\n print()\n \n```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p03274",
        "submission1_id": "s890270825",
        "crp_content": "\n n, k = map(int, input().split())\n a = list(map(int, input().split()))\n ans = 10**10\n for i in range(n-k+1):\n-    tmp = a[k+i-1] - a[i] + abs(a[i])\n     if ans > tmp:\n         ans = tmp\n print(ans)\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n a = list(map(int, input().split()))\n ans = 10**10\n for i in range(n-k+1):\n-    tmp = a[k+i-1] - a[i] + abs(a[i])\n     if ans > tmp:\n         ans = tmp\n print(ans)\n```\n "
    },
    {
        "user_id": "u424967964",
        "problem_id": "p02886",
        "submission1_id": "s305353885",
        "crp_content": "\n a = int(input())\n b = [int(i) for i in input().split()]\n ans = 0\n for i in range(a):\n-  ans += b[i]*(sum(b)-b[i])\n print(ans)\n",
        "origin_generated_text": "\n```\n a = int(input())\n b = [int(i) for i in input().split()]\n ans = 0\n for i in range(a):\n-  ans += b[i]*(sum(b)-b[i])\n print(ans)\n```\n "
    },
    {
        "user_id": "u912359563",
        "problem_id": "p03480",
        "submission1_id": "s853147878",
        "crp_content": "\n S = input()\n n = len(S)\n-T = 1000000\n for i in range(1, n) :\n     if S[i] != S[i-1] :\n         T = min(T, max(i, n-i))\n print(T if T != 0 else n)\n \n",
        "origin_generated_text": "\n```\n S = input()\n n = len(S)\n-T = 1000000\n for i in range(1, n) :\n     if S[i] != S[i-1] :\n         T = min(T, max(i, n-i))\n print(T if T != 0 else n)\n \n```\n "
    },
    {
        "user_id": "u301043830",
        "problem_id": "p03303",
        "submission1_id": "s893312889",
        "crp_content": "\n S = input()\n w = int(input())\n \n for index, s in enumerate(S):\n     if index % w == 0:\n-        print(s)\n \n \n",
        "origin_generated_text": "\n```\n S = input()\n w = int(input())\n \n for index, s in enumerate(S):\n     if index % w == 0:\n-        print(s)\n \n \n```\n "
    },
    {
        "user_id": "u997641430",
        "problem_id": "p03326",
        "submission1_id": "s169512068",
        "crp_content": "\n N,M=map(int,input().split())\n xyz=[list(map(int,input().split())) for i in range(N)]\n MAX=0\n for index in [[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]:\n     LIST=sorted([sum([p[a]*index[a] for a in range(3)]) for p in xyz])[::-1]\n-    print(LIST)\n     if sum(LIST[0:M])>MAX:\n         MAX=sum(LIST[0:M])\n print(MAX)\n",
        "origin_generated_text": "\n```\n N,M=map(int,input().split())\n xyz=[list(map(int,input().split())) for i in range(N)]\n MAX=0\n for index in [[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]:\n     LIST=sorted([sum([p[a]*index[a] for a in range(3)]) for p in xyz])[::-1]\n-    print(LIST)\n     if sum(LIST[0:M])>MAX:\n         MAX=sum(LIST[0:M])\n print(MAX)\n```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s144350081",
        "crp_content": "\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>2:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if (g-s)%m>2:\n         if g>=s:\n             if ans>s:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-ans)%m\n         else:\n             if ans>s or g>=ans:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-s)%m\n     else:\n         val+=(g-s)%m\n \n \n print(val)\n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>2:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if (g-s)%m>2:\n         if g>=s:\n             if ans>s:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-ans)%m\n         else:\n             if ans>s or g>=ans:\n                 val+=1+(g-ans)%m\n             else:\n                 val+=(g-s)%m\n     else:\n         val+=(g-s)%m\n \n \n print(val)\n```\n "
    },
    {
        "user_id": "u375065632",
        "problem_id": "p03206",
        "submission1_id": "s111233505",
        "crp_content": "\n x = int(input())\n-print(\"christmas\"+\"Eve\"*(25-x))\n",
        "origin_generated_text": "\n```\n x = int(input())\n-print(\"christmas\"+\"Eve\"*(25-x))\n```\n "
    },
    {
        "user_id": "u342502598",
        "problem_id": "p02963",
        "submission1_id": "s697151652",
        "crp_content": "\n n=int(input())\n m=1000000000\n l=[0,0]\n if(n<=m):\n     l.append(1)\n     l.append(0)\n     l.append(0)\n     l.append(n)\n else:\n     l.append(1)\n     l.append(m)\n     x=n%m\n     y=n\n     l.append(m-x)\n     l.append(y)\n for i in l:\n     print(i,end=\" \")\n \n \n",
        "origin_generated_text": "\n```\n n=int(input())\n m=1000000000\n l=[0,0]\n if(n<=m):\n     l.append(1)\n     l.append(0)\n     l.append(0)\n     l.append(n)\n else:\n     l.append(1)\n     l.append(m)\n     x=n%m\n     y=n\n     l.append(m-x)\n     l.append(y)\n for i in l:\n     print(i,end=\" \")\n \n \n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s333875828",
        "crp_content": "\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b) \n dgt[n] = l-sum(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \tl = mat_dot(l, j, m)\n \n print(l[0][0])\n",
        "origin_generated_text": "\n```\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n ans = 0\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n-\tdgt[i] = (10**i -a+b) \n dgt[n] = l-sum(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \tl = mat_dot(l, j, m)\n \n print(l[0][0])\n```\n "
    },
    {
        "user_id": "u425758699",
        "problem_id": "p02633",
        "submission1_id": "s325562347",
        "crp_content": "\n n=int(input())\n for i in range(360):\n-  if (i*n+n)%360==0:\n     print(i)\n     break\n",
        "origin_generated_text": "\n```\n n=int(input())\n for i in range(360):\n-  if (i*n+n)%360==0:\n     print(i)\n     break\n```\n "
    },
    {
        "user_id": "u923270446",
        "problem_id": "p03303",
        "submission1_id": "s476881730",
        "crp_content": "\n s = list(input())\n w = int(input())\n index = 0\n l = []\n while index <= len(s) - 1:\n-  print(index)\n   l.append(s[index])\n   index += w\n print(*l, sep=\"\")\n",
        "origin_generated_text": "\n```\n s = list(input())\n w = int(input())\n index = 0\n l = []\n while index <= len(s) - 1:\n-  print(index)\n   l.append(s[index])\n   index += w\n print(*l, sep=\"\")\n```\n "
    },
    {
        "user_id": "u799428010",
        "problem_id": "p03036",
        "submission1_id": "s833148003",
        "crp_content": "\n r,d,x=map(int, input().split())\n ans=x\n for i in range(1,10):\n     ans=r*ans-d\n     print(ans)\n",
        "origin_generated_text": "\n```\n r,d,x=map(int, input().split())\n ans=x\n for i in range(1,10):\n     ans=r*ans-d\n     print(ans)\n```\n "
    },
    {
        "user_id": "u273660689",
        "problem_id": "p02718",
        "submission1_id": "s406762427",
        "crp_content": "\n N, M = map(int, input().split())\n A = list(map(int, input().split()))\n \n \n \n cnt = 0\n cnt1 = 0\n \n for i in range(N):\n     cnt = cnt + A[i]\n \n for i in range(N):\n-    if A[i] / cnt > 1 / 4 / M:\n         cnt1 = cnt1 + 1\n \n \n \n if cnt1 > M:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n A = list(map(int, input().split()))\n \n \n \n cnt = 0\n cnt1 = 0\n \n for i in range(N):\n     cnt = cnt + A[i]\n \n for i in range(N):\n-    if A[i] / cnt > 1 / 4 / M:\n         cnt1 = cnt1 + 1\n \n \n \n if cnt1 > M:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s745896227",
        "crp_content": "\n K=int(input())\n if K%2==0:\n-  print(K*K/4)\n else:\n-  print((K+1)*(K-1)/4)\n",
        "origin_generated_text": "\n```\n K=int(input())\n if K%2==0:\n-  print(K*K/4)\n else:\n-  print((K+1)*(K-1)/4)\n```\n "
    },
    {
        "user_id": "u225845681",
        "problem_id": "p02959",
        "submission1_id": "s495875760",
        "crp_content": "\n N = int(input())\n teki = input().split()\n yusya = input().split()\n i = 0\n taoshita = 0\n \n while i < N :\n   if int(teki[i]) >= int(yusya[i]):\n     a = int(yusya[i]) \n     b = 0\n   else:\n     a = int(teki[i])\n     yusya[i] = int(yusya[i]) - int(teki[i])\n-    if int(teki[i+1]) >= yusya[i]:\n       b = yusya[i]\n       teki[i+1] = int(teki[i+1]) - yusya[i]\n     else:\n       b = int(teki[i+1])\n   taoshita += a + b\n   i += 1\n \n print(taoshita)\n",
        "origin_generated_text": "\n```\n N = int(input())\n teki = input().split()\n yusya = input().split()\n i = 0\n taoshita = 0\n \n while i < N :\n   if int(teki[i]) >= int(yusya[i]):\n     a = int(yusya[i]) \n     b = 0\n   else:\n     a = int(teki[i])\n     yusya[i] = int(yusya[i]) - int(teki[i])\n-    if int(teki[i+1]) >= yusya[i]:\n       b = yusya[i]\n       teki[i+1] = int(teki[i+1]) - yusya[i]\n     else:\n       b = int(teki[i+1])\n   taoshita += a + b\n   i += 1\n \n print(taoshita)\n```\n "
    },
    {
        "user_id": "u609255576",
        "problem_id": "p03041",
        "submission1_id": "s489265290",
        "crp_content": "\n inputstr1 = input().split()\n n = inputstr1[0]\n k = inputstr1[1]\n s = input()\n s_list = list(s)\n s_list[int(k) - 1] = s_list[int(k)-1].lower()\n s = \"\".join(s_list)\n-print(\"S:\"+s)\n \n",
        "origin_generated_text": "\n```\n inputstr1 = input().split()\n n = inputstr1[0]\n k = inputstr1[1]\n s = input()\n s_list = list(s)\n s_list[int(k) - 1] = s_list[int(k)-1].lower()\n s = \"\".join(s_list)\n-print(\"S:\"+s)\n \n```\n "
    },
    {
        "user_id": "u121161758",
        "problem_id": "p02854",
        "submission1_id": "s643644097",
        "crp_content": "\n \n import math\n N = int(input())\n A = list(map(int, input().split()))\n \n sum = 0\n for i in range(len(A)):\n     sum += A[i]\n \n check_sum = 0\n for i in range(len(A)):\n     check_sum += A[i]\n     if check_sum == sum/2:\n         print(0)\n         exit()\n     if check_sum > sum / 2:\n         if i+ 1 == len(A):\n-            print(A[i] - (check_sum - A[i]))\n             exit()\n         else:\n-            print(abs(2* check_sum - sum))\n             exit()\n \n",
        "origin_generated_text": "\n```\n \n import math\n N = int(input())\n A = list(map(int, input().split()))\n \n sum = 0\n for i in range(len(A)):\n     sum += A[i]\n \n check_sum = 0\n for i in range(len(A)):\n     check_sum += A[i]\n     if check_sum == sum/2:\n         print(0)\n         exit()\n     if check_sum > sum / 2:\n         if i+ 1 == len(A):\n-            print(A[i] - (check_sum - A[i]))\n             exit()\n         else:\n-            print(abs(2* check_sum - sum))\n             exit()\n \n```\n "
    },
    {
        "user_id": "u945335181",
        "problem_id": "p02718",
        "submission1_id": "s847049129",
        "crp_content": "\n N,M = map(int,input().split())\n \n votos = list(map(int,input().split()))\n \n qtd_votos = sum(votos)\n minimo = qtd_votos\n \n contador = 0\n for i in votos:\n-    if i > minimo:\n         contador += 1\n if contador >= M:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n N,M = map(int,input().split())\n \n votos = list(map(int,input().split()))\n \n qtd_votos = sum(votos)\n minimo = qtd_votos\n \n contador = 0\n for i in votos:\n-    if i > minimo:\n         contador += 1\n if contador >= M:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u934246119",
        "problem_id": "p03296",
        "submission1_id": "s133778417",
        "crp_content": "\n n = int(input())\n a_tmp = input().split()\n a = []\n ans = 0\n for _ in a_tmp:\n     a.append(int(_))\n i = 0\n same = 1\n while i < n-1:\n     tmp = a[i]\n     i += 1\n     if a[i] == tmp:\n         same += 1\n         if same == 3:\n             ans += 1\n             same = 1\n     else:\n         if same >= 2:\n             ans += 1\n             same = 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a_tmp = input().split()\n a = []\n ans = 0\n for _ in a_tmp:\n     a.append(int(_))\n i = 0\n same = 1\n while i < n-1:\n     tmp = a[i]\n     i += 1\n     if a[i] == tmp:\n         same += 1\n         if same == 3:\n             ans += 1\n             same = 1\n     else:\n         if same >= 2:\n             ans += 1\n             same = 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u598684283",
        "problem_id": "p03998",
        "submission1_id": "s710229571",
        "crp_content": "\n a = list(input())\n b = list(input())\n c = list(input())\n check = \"a\"\n while len(a) != 0 and len(b) != 0 and len(c) != 0:\n     if check == \"a\":\n         check = a[0]\n         a.pop(0)\n     elif check == \"b\":\n         check = b[0]\n         b.pop(0)\n     else:\n         check = c[0]\n         c.pop(0)\n \n-if len(a) == 1:\n     print(\"A\")\n-elif len(b) == 1:\n     print(\"B\")\n else:\n     print(\"C\")\n",
        "origin_generated_text": "\n```\n a = list(input())\n b = list(input())\n c = list(input())\n check = \"a\"\n while len(a) != 0 and len(b) != 0 and len(c) != 0:\n     if check == \"a\":\n         check = a[0]\n         a.pop(0)\n     elif check == \"b\":\n         check = b[0]\n         b.pop(0)\n     else:\n         check = c[0]\n         c.pop(0)\n \n-if len(a) == 1:\n     print(\"A\")\n-elif len(b) == 1:\n     print(\"B\")\n else:\n     print(\"C\")\n```\n "
    },
    {
        "user_id": "u987164499",
        "problem_id": "p02580",
        "submission1_id": "s781485723",
        "crp_content": "\n H,W,M = map(int,input().split())\n \n h_target = [0]*(H+1)\n w_target = [0]*(W+1)\n target = []\n \n for _ in range(M):\n     h,w = map(int,input().split())\n     target.append((h,w))\n     h_target[h] += 1\n     w_target[w] += 1\n \n max_h_target = max(h_target)\n max_w_target = max(w_target)\n \n flag = False \n \n for i,j in target:\n-    if h_target[i] != max_h_target and w_target[j] != max_w_target:\n         break\n else:\n     flag = True\n \n if flag:\n     print(max_h_target+max_w_target)\n else:\n     print(max_h_target+max_w_target-1)\n",
        "origin_generated_text": "\n```\n H,W,M = map(int,input().split())\n \n h_target = [0]*(H+1)\n w_target = [0]*(W+1)\n target = []\n \n for _ in range(M):\n     h,w = map(int,input().split())\n     target.append((h,w))\n     h_target[h] += 1\n     w_target[w] += 1\n \n max_h_target = max(h_target)\n max_w_target = max(w_target)\n \n flag = False \n \n for i,j in target:\n-    if h_target[i] != max_h_target and w_target[j] != max_w_target:\n         break\n else:\n     flag = True\n \n if flag:\n     print(max_h_target+max_w_target)\n else:\n     print(max_h_target+max_w_target-1)\n```\n "
    },
    {
        "user_id": "u882209234",
        "problem_id": "p03078",
        "submission1_id": "s572868270",
        "crp_content": "\n X,Y,Z,K = map(int,input().split())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n C = list(map(int,input().split()))\n \n AB = []\n for a in A:\n     for b in B:\n         AB.append(a+b)\n AB.sort(reverse=True)\n \n AB = AB[:K]\n-C.sort(reverse=True)\n ABC = []\n i = 0\n for ab in AB:\n     if i >= K: break\n     for c in C:\n         ABC.append(ab+c)\n         i += 1\n \n ABC.sort(reverse=True)\n \n for i in range(K): print(ABC[i])\n",
        "origin_generated_text": "\n```\n X,Y,Z,K = map(int,input().split())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n C = list(map(int,input().split()))\n \n AB = []\n for a in A:\n     for b in B:\n         AB.append(a+b)\n AB.sort(reverse=True)\n \n AB = AB[:K]\n-C.sort(reverse=True)\n ABC = []\n i = 0\n for ab in AB:\n     if i >= K: break\n     for c in C:\n         ABC.append(ab+c)\n         i += 1\n \n ABC.sort(reverse=True)\n \n for i in range(K): print(ABC[i])\n```\n "
    },
    {
        "user_id": "u394482932",
        "problem_id": "p03729",
        "submission1_id": "s254110955",
        "crp_content": "\n-a,b,c=input().split();print('YNEOS'[a[-1]+c[0]==b[-1]+b[0]::2])\n",
        "origin_generated_text": "\n```\n-a,b,c=input().split();print('YNEOS'[a[-1]+c[0]==b[-1]+b[0]::2])\n```\n "
    },
    {
        "user_id": "u539969758",
        "problem_id": "p02642",
        "submission1_id": "s349900775",
        "crp_content": "\n from collections import deque\n \n N = int(input())\n A = list(map(int,input().split()))\n \n A.sort()\n \n ans = 0\n max_A = max(A)\n ban = [0]*(max_A+1)\n again = list()\n \n last = 0\n for i in range(N-1):\n     if A[i] == A[i+1] and A[i] != last:\n         again.append(A[i])\n         last = A[i]\n if A[N-1] != A[N-2]:\n     again.append(A[N-1])\n \n for num in again:\n     ban_num = num\n     while ban_num <= max_A:\n         ban[ban_num] = 1\n         ban_num += num\n  \n for num in A:\n     if ban[num] != 1:\n         ans += 1\n         ban_num = num\n         while ban_num <= max_A:\n             ban[ban_num] = 1\n             ban_num += num\n \n print(ans)\n",
        "origin_generated_text": "\n```\n from collections import deque\n \n N = int(input())\n A = list(map(int,input().split()))\n \n A.sort()\n \n ans = 0\n max_A = max(A)\n ban = [0]*(max_A+1)\n again = list()\n \n last = 0\n for i in range(N-1):\n     if A[i] == A[i+1] and A[i] != last:\n         again.append(A[i])\n         last = A[i]\n if A[N-1] != A[N-2]:\n     again.append(A[N-1])\n \n for num in again:\n     ban_num = num\n     while ban_num <= max_A:\n         ban[ban_num] = 1\n         ban_num += num\n  \n for num in A:\n     if ban[num] != 1:\n         ans += 1\n         ban_num = num\n         while ban_num <= max_A:\n             ban[ban_num] = 1\n             ban_num += num\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s286031006",
        "crp_content": "\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n-p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n-    w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k]:\n                     dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                 else:\n                     dp[i + 1][j][k] = dp[i][j][k]\n             else:\n                 dp[i + 1][j][k] = dp[i][j][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n-p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n-    w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k]:\n                     dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                 else:\n                     dp[i + 1][j][k] = dp[i][j][k]\n             else:\n                 dp[i + 1][j][k] = dp[i][j][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u713914478",
        "problem_id": "p03760",
        "submission1_id": "s308299036",
        "crp_content": "\n O = input()\n \n \n E = input()\n \n S = []\n \n if len(O) == len(E):\n \tfor i in range(len(O)):\n \t\tS.append(O[i] + E[i])\n else:\n-\tfor i in range(len(E)):\n-\t\tS.append(O[i] + E[i])\n-\t\tS.append(O[-1])\n \n print(\"\".join(S))\n",
        "origin_generated_text": "\n```\n O = input()\n \n \n E = input()\n \n S = []\n \n if len(O) == len(E):\n \tfor i in range(len(O)):\n \t\tS.append(O[i] + E[i])\n else:\n-\tfor i in range(len(E)):\n-\t\tS.append(O[i] + E[i])\n-\t\tS.append(O[-1])\n \n print(\"\".join(S))\n```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02642",
        "submission1_id": "s837842544",
        "crp_content": "\n import math\n n=int(input(\"\"))\n aa=input(\"\").split(\" \")\n lista=[]\n for i in range(n):\n     lista+=[int(aa[i])]\n s=0\n lista.sort()\n listde=set()\n for i in range(n-1):\n     if(lista[i]==lista[i+1] ):\n         listde.add(lista[i])\n t=0\n for i in range(n):\n     t=0\n     for k in listde:\n         \n         if (lista[i]%k==0):\n             t=1\n             break\n     if (t==0):\n         s+=1\n-        if(lista[i]<=math.sqrt(lista[n-1])):\n             listde.add(lista[i])\n print(s)\n     \n         \n \n",
        "origin_generated_text": "\n```\n import math\n n=int(input(\"\"))\n aa=input(\"\").split(\" \")\n lista=[]\n for i in range(n):\n     lista+=[int(aa[i])]\n s=0\n lista.sort()\n listde=set()\n for i in range(n-1):\n     if(lista[i]==lista[i+1] ):\n         listde.add(lista[i])\n t=0\n for i in range(n):\n     t=0\n     for k in listde:\n         \n         if (lista[i]%k==0):\n             t=1\n             break\n     if (t==0):\n         s+=1\n-        if(lista[i]<=math.sqrt(lista[n-1])):\n             listde.add(lista[i])\n print(s)\n     \n         \n \n```\n "
    },
    {
        "user_id": "u451100851",
        "problem_id": "p02553",
        "submission1_id": "s226095019",
        "crp_content": "\n a, b, c, d = [int(t) for t in input().split()]\n-print(max([b*d, a*c, a*d, b*d]))\n",
        "origin_generated_text": "\n```\n a, b, c, d = [int(t) for t in input().split()]\n-print(max([b*d, a*c, a*d, b*d]))\n```\n "
    },
    {
        "user_id": "u798803522",
        "problem_id": "p01359",
        "submission1_id": "s879596365",
        "crp_content": "\n inputnum,outputnum = (int(n) for n in input().split(' '))\n data = {}\n while True:\n     for i in range(inputnum):\n         temp = input().split(' ')\n-        data[temp[0]] = [int(temp[2]) - int(temp[1]) + 1,int(temp[2])]\n     for o in range(outputnum):\n         targ = int(input())\n         for k,v in data.items():\n             if v[0] <= targ  <= v[1]:\n                 print(k + ' ' + str(targ-v[0] + 1))\n                 break\n         else:\n             print(\"Unknown\")\n     inputnum,outputnum = (int(n) for n in input().split(' '))\n     if inputnum == outputnum == 0:\n         break\n",
        "origin_generated_text": "\n```\n inputnum,outputnum = (int(n) for n in input().split(' '))\n data = {}\n while True:\n     for i in range(inputnum):\n         temp = input().split(' ')\n-        data[temp[0]] = [int(temp[2]) - int(temp[1]) + 1,int(temp[2])]\n     for o in range(outputnum):\n         targ = int(input())\n         for k,v in data.items():\n             if v[0] <= targ  <= v[1]:\n                 print(k + ' ' + str(targ-v[0] + 1))\n                 break\n         else:\n             print(\"Unknown\")\n     inputnum,outputnum = (int(n) for n in input().split(' '))\n     if inputnum == outputnum == 0:\n         break\n```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p02963",
        "submission1_id": "s523044692",
        "crp_content": "\n import math\n S = int(input())\n X1 = 0\n Y1 = 0\n X2 = 0\n Y2 = 0\n X3 = 0\n Y3 = 0\n if  S <= 10 ** 9:\n     X2 = S\n     Y3 = 1\n else:\n     X2 = int(math.sqrt(S))+1\n     Y3 = X2\n     s = X2 ** 2  - S \n     for i in range(1, int(math.sqrt(s) + 1)):\n         if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8:\n                 X3 = i\n-                Y2 = s\n                 break\n \n \n print (X1, Y1, X2, Y2, X3, Y3)\n \n",
        "origin_generated_text": "\n```\n import math\n S = int(input())\n X1 = 0\n Y1 = 0\n X2 = 0\n Y2 = 0\n X3 = 0\n Y3 = 0\n if  S <= 10 ** 9:\n     X2 = S\n     Y3 = 1\n else:\n     X2 = int(math.sqrt(S))+1\n     Y3 = X2\n     s = X2 ** 2  - S \n     for i in range(1, int(math.sqrt(s) + 1)):\n         if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8:\n                 X3 = i\n-                Y2 = s\n                 break\n \n \n print (X1, Y1, X2, Y2, X3, Y3)\n \n```\n "
    },
    {
        "user_id": "u241159583",
        "problem_id": "p02922",
        "submission1_id": "s638117601",
        "crp_content": "\n a, b = map(int, input().split())\n \n-if b - a == 1:\n   print(2)\n else:\n-  print(round((b-1)/(a-1)))\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n \n-if b - a == 1:\n   print(2)\n else:\n-  print(round((b-1)/(a-1)))\n```\n "
    },
    {
        "user_id": "u391589398",
        "problem_id": "p03477",
        "submission1_id": "s117097526",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n if a+b > c+d:\n     print('Left')\n elif a+b < c+d:\n-    print('right')\n else:\n     print('Balanced')\n \n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n if a+b > c+d:\n     print('Left')\n elif a+b < c+d:\n-    print('right')\n else:\n     print('Balanced')\n \n```\n "
    },
    {
        "user_id": "u202570162",
        "problem_id": "p02912",
        "submission1_id": "s479081931",
        "crp_content": "\n import heapq\n \n n,m = map(int,input().split())\n-price = [-int(i) for i in input().split()]\n \n heapq.heapify(price)\n for i in range(m):\n     a = heapq.heappop(price)\n     heapq.heappush(price,a)\n print(-sum(price))\n     \n",
        "origin_generated_text": "\n```\n import heapq\n \n n,m = map(int,input().split())\n-price = [-int(i) for i in input().split()]\n \n heapq.heapify(price)\n for i in range(m):\n     a = heapq.heappop(price)\n     heapq.heappush(price,a)\n print(-sum(price))\n     \n```\n "
    },
    {
        "user_id": "u347920118",
        "problem_id": "p02718",
        "submission1_id": "s073846843",
        "crp_content": "\n num = []\n vote = []\n num = list(map(int,input().split()))\n vote = list(map(int,input().split()))\n N = num[0]\n M = num[1]\n j = 0\n j /= 4*M\n cnt = 0\n-for i in range(0,len(vote)-1):\n     if  vote[i]>=j:\n         cnt += 1\n     else:\n         pass\n if M<=cnt:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n num = []\n vote = []\n num = list(map(int,input().split()))\n vote = list(map(int,input().split()))\n N = num[0]\n M = num[1]\n j = 0\n j /= 4*M\n cnt = 0\n-for i in range(0,len(vote)-1):\n     if  vote[i]>=j:\n         cnt += 1\n     else:\n         pass\n if M<=cnt:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u309141201",
        "problem_id": "p04019",
        "submission1_id": "s697834595",
        "crp_content": "\n \n S = input()\n \n \n cn = S.count('N')\n ce = S.count('E')\n cs = S.count('S')\n cw = S.count('W')\n-if cn > 0 and cs > 0 and ce < 0 and cw < 0:\n     print('Yes')\n-elif cn < 0 and cs < 0 and ce > 0 and cw > 0:\n     print('Yes')\n-elif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n \n S = input()\n \n \n cn = S.count('N')\n ce = S.count('E')\n cs = S.count('S')\n cw = S.count('W')\n-if cn > 0 and cs > 0 and ce < 0 and cw < 0:\n     print('Yes')\n-elif cn < 0 and cs < 0 and ce > 0 and cw > 0:\n     print('Yes')\n-elif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s103226440",
        "crp_content": "\n i = input().split()\n if (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n",
        "origin_generated_text": "\n```\n i = input().split()\n if (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03326",
        "submission1_id": "s469584546",
        "crp_content": "\n N,M=map(int,input().split())\n c=[list(map(int,input().split())) for i in range(N)]\n \n bit=[[] for i in range(2**3)]\n for k in range(N):\n     for i in range(2**3):\n         t=c[k].copy()\n         for j in range(3):\n             if(i>>j&1):\n                 t[j]*=-1\n         bit[i].append(t)\n for i in range(2**3):\n     bit[i].sort(key=lambda x:(x[0],x[1],x[2]),reverse=True)\n res=0\n for i in range(2**3):\n     p=[1,1,1]\n     for j in range(3):\n         if(i>>j&1):\n             p[j]*=-1\n     z,o,t=0,0,0\n     for k in range(M):\n         z+=bit[i][k][0]*p[0]\n         o+=bit[i][k][1]*p[1]\n         t+=bit[i][k][2]*p[2]\n     res=max(res,abs(z)+abs(o)+abs(t))\n print(res)\n",
        "origin_generated_text": "\n```\n N,M=map(int,input().split())\n c=[list(map(int,input().split())) for i in range(N)]\n \n bit=[[] for i in range(2**3)]\n for k in range(N):\n     for i in range(2**3):\n         t=c[k].copy()\n         for j in range(3):\n             if(i>>j&1):\n                 t[j]*=-1\n         bit[i].append(t)\n for i in range(2**3):\n     bit[i].sort(key=lambda x:(x[0],x[1],x[2]),reverse=True)\n res=0\n for i in range(2**3):\n     p=[1,1,1]\n     for j in range(3):\n         if(i>>j&1):\n             p[j]*=-1\n     z,o,t=0,0,0\n     for k in range(M):\n         z+=bit[i][k][0]*p[0]\n         o+=bit[i][k][1]*p[1]\n         t+=bit[i][k][2]*p[2]\n     res=max(res,abs(z)+abs(o)+abs(t))\n print(res)\n```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03714",
        "submission1_id": "s433168144",
        "crp_content": "\n from heapq import heapify, heappop, heappush\n N = int(input())\n A = list(map(int, input().split()))\n A = [-a for a in A]\n \n L = [[a, i] for i, a in enumerate(A[:2*N])]\n Sl = 0\n heapify(L)\n used = set()\n for i in range(N):\n   a, i = heappop(L)\n   used.add(i)\n   Sl -= a\n \n R = A[2*N:].copy()\n Sr = -sum(R)\n heapify(R)\n \n ans = Sl - Sr\n for i in range(2*N-1, N-1, -1):\n   a = - A[i]\n   r =  - heappop(R)\n   if a > r:\n     heappush(R, -r)\n   else:\n     Sr += a - r\n     heappush(R, -a)\n   if i in used:\n     while L:\n       l, j = heappop(L)\n       if j in used or j >= i:\n         continue\n       Sl += l - a\n       used.add(j)\n       break\n   ans = max(ans, Sl - Sr)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n from heapq import heapify, heappop, heappush\n N = int(input())\n A = list(map(int, input().split()))\n A = [-a for a in A]\n \n L = [[a, i] for i, a in enumerate(A[:2*N])]\n Sl = 0\n heapify(L)\n used = set()\n for i in range(N):\n   a, i = heappop(L)\n   used.add(i)\n   Sl -= a\n \n R = A[2*N:].copy()\n Sr = -sum(R)\n heapify(R)\n \n ans = Sl - Sr\n for i in range(2*N-1, N-1, -1):\n   a = - A[i]\n   r =  - heappop(R)\n   if a > r:\n     heappush(R, -r)\n   else:\n     Sr += a - r\n     heappush(R, -a)\n   if i in used:\n     while L:\n       l, j = heappop(L)\n       if j in used or j >= i:\n         continue\n       Sl += l - a\n       used.add(j)\n       break\n   ans = max(ans, Sl - Sr)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u572193732",
        "problem_id": "p03087",
        "submission1_id": "s047476870",
        "crp_content": "\n N, Q = map(int, input().split())\n S = input()\n S_list = list(S)\n count_list = [0]*N\n-print(S_list)\n \n for i in range(1, N):\n     count_list[i] += count_list[i-1] \n     if S_list[i-1] == \"A\" and S_list[i] == \"C\":\n         count_list[i] += 1\n         \n-print(count_list)\n \n for i in range(Q):\n     start, end = map(int, input().split())\n     count = count_list[end-1] - count_list[start-1]\n     print(count)\n",
        "origin_generated_text": "\n```\n N, Q = map(int, input().split())\n S = input()\n S_list = list(S)\n count_list = [0]*N\n-print(S_list)\n \n for i in range(1, N):\n     count_list[i] += count_list[i-1] \n     if S_list[i-1] == \"A\" and S_list[i] == \"C\":\n         count_list[i] += 1\n         \n-print(count_list)\n \n for i in range(Q):\n     start, end = map(int, input().split())\n     count = count_list[end-1] - count_list[start-1]\n     print(count)\n```\n "
    },
    {
        "user_id": "u652498023",
        "problem_id": "p03343",
        "submission1_id": "s573956070",
        "crp_content": "\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n \n-d=[a]\n a.sort()\n-ans = a[Q-1] - a[0]\n-\n-\n while True:\n   d_temp = list()\n   sub_temp = list()\n   for sub in d:\n     for c in sub:\n-      if c != a[0]:\n-        sub_temp.append(c)\n-      else:\n-        d_temp.append(sub_temp)\n-        sub_temp = list()\n-    d_temp.append(sub_temp)\n-    sub_temp = list()\n-  d = list()\n-  a = list()\n-\n-  for sub in d_temp:\n-    if len(sub) < K:\n-      continue\n-    else:\n-      d.append(sub)\n-      sub.sort()\n-      a.extend(sub[0:len(sub)-K+1])\n-  a.sort()\n-  if len(a) < Q:\n-    break\n-  else:\n-    ans = min(ans, a[Q-1] - a[0])\n-\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n \n-d=[a]\n a.sort()\n-ans = a[Q-1] - a[0]\n-\n-\n while True:\n   d_temp = list()\n   sub_temp = list()\n   for sub in d:\n     for c in sub:\n-      if c != a[0]:\n-        sub_temp.append(c)\n-      else:\n-        d_temp.append(sub_temp)\n-        sub_temp = list()\n-    d_temp.append(sub_temp)\n-    sub_temp = list()\n-  d = list()\n-  a = list()\n-\n-  for sub in d_temp:\n-    if len(sub) < K:\n-      continue\n-    else:\n-      d.append(sub)\n-      sub.sort()\n-      a.extend(sub[0:len(sub)-K+1])\n-  a.sort()\n-  if len(a) < Q:\n-    break\n-  else:\n-    ans = min(ans, a[Q-1] - a[0])\n-\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u987549444",
        "problem_id": "p02665",
        "submission1_id": "s451615379",
        "crp_content": "\n from sys import stdin\n \n a=int(stdin.readline())\n A=stdin.readline().split()\n sum=0\n for k in range(0,a+1):\n     sum+=int(A[k])\n \n sum-=int(A[a])\n ver=1\n lay=1\n K=0\n T=0\n \n if a==0:\n     if A[0]!=0:\n         print(-1)\n         K=1\n     else:\n         print(1)\n         K=1\n \n for l in range(0,a):\n     if lay-int(A[l])<=0:\n         print(-1)\n         K=1\n         break\n     if (lay-int(A[l]))*2-sum+int(A[l])<=int(A[a]):\n         lay=(lay-int(A[l]))*2\n         ver+=lay\n         sum-=int(A[l])\n         T=l\n     else:\n         lay-=int(A[l])\n         sum-=int(A[l])\n         x=lay-sum-int(A[a])\n         if x==0:\n            ver+=lay\n         elif x<0:\n            print(-1)\n            K=1\n            \n         else:\n            lay=sum+int(A[a])\n            ver+=lay\n         T=l\n         break\n \n if K==0:\n     for u in range(T+1,a):\n         lay -= int(A[u])\n         sum -= int(A[u])\n         ver+=lay\n \n if K==0:\n     print(ver)\n",
        "origin_generated_text": "\n```\n from sys import stdin\n \n a=int(stdin.readline())\n A=stdin.readline().split()\n sum=0\n for k in range(0,a+1):\n     sum+=int(A[k])\n \n sum-=int(A[a])\n ver=1\n lay=1\n K=0\n T=0\n \n if a==0:\n     if A[0]!=0:\n         print(-1)\n         K=1\n     else:\n         print(1)\n         K=1\n \n for l in range(0,a):\n     if lay-int(A[l])<=0:\n         print(-1)\n         K=1\n         break\n     if (lay-int(A[l]))*2-sum+int(A[l])<=int(A[a]):\n         lay=(lay-int(A[l]))*2\n         ver+=lay\n         sum-=int(A[l])\n         T=l\n     else:\n         lay-=int(A[l])\n         sum-=int(A[l])\n         x=lay-sum-int(A[a])\n         if x==0:\n            ver+=lay\n         elif x<0:\n            print(-1)\n            K=1\n            \n         else:\n            lay=sum+int(A[a])\n            ver+=lay\n         T=l\n         break\n \n if K==0:\n     for u in range(T+1,a):\n         lay -= int(A[u])\n         sum -= int(A[u])\n         ver+=lay\n \n if K==0:\n     print(ver)\n```\n "
    },
    {
        "user_id": "u581603131",
        "problem_id": "p03998",
        "submission1_id": "s278686560",
        "crp_content": "\n SA = list(str(input())) \n SB = list(str(input())) \n SC = list(str(input())) \n card = 'a'\n \n-for i in range(301):\n     if len(SA)==1 and card =='a':\n         print('A')\n         break\n     elif len(SB)==1 and card=='b':\n         print('B')\n         break\n     elif len(SC)==1 and card=='c':\n         print('C')\n         break\n         \n     if card == 'a':\n         SA = SA[1:]\n         card = SA[0]\n     elif card == 'b':\n         SB = SB[1:]\n         card = SB[0]\n     elif card == 'c':\n         SC =SC[1:]\n         card = SC[0]\n",
        "origin_generated_text": "\n```\n SA = list(str(input())) \n SB = list(str(input())) \n SC = list(str(input())) \n card = 'a'\n \n-for i in range(301):\n     if len(SA)==1 and card =='a':\n         print('A')\n         break\n     elif len(SB)==1 and card=='b':\n         print('B')\n         break\n     elif len(SC)==1 and card=='c':\n         print('C')\n         break\n         \n     if card == 'a':\n         SA = SA[1:]\n         card = SA[0]\n     elif card == 'b':\n         SB = SB[1:]\n         card = SB[0]\n     elif card == 'c':\n         SC =SC[1:]\n         card = SC[0]\n```\n "
    },
    {
        "user_id": "u108377418",
        "problem_id": "p03943",
        "submission1_id": "s812863444",
        "crp_content": "\n def main():\n     a, b, c = map(int, input().split() )\n \n-    if a == b + c | b == c + a | c == a + b:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n def main():\n     a, b, c = map(int, input().split() )\n \n-    if a == b + c | b == c + a | c == a + b:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s683065531",
        "crp_content": "\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for c in range(1, capacity+1):\n         candidates = [val + work[c-weight]\n                       for val,weight in zip(values,weights) if weight <= c]\n         work[c] = max(candidates) if candidates != [] else 0\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))+[1]\n     prices_b=list(map(int,inp().split()))+[1]\n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n-    return '{}'.format(valB)\n",
        "origin_generated_text": "\n```\n def knapsack_123(values,weights,capacity):\n     work = [0 for i in range(capacity+1)]\n     for c in range(1, capacity+1):\n         candidates = [val + work[c-weight]\n                       for val,weight in zip(values,weights) if weight <= c]\n         work[c] = max(candidates) if candidates != [] else 0\n     return work[-1]\n def sol(inp=input):\n     n=int(inp())\n     prices_a=list(map(int,inp().split()))+[1]\n     prices_b=list(map(int,inp().split()))+[1]\n     valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n     valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n-    return '{}'.format(valB)\n```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s961640285",
        "crp_content": "\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-a[j])%m-1)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n",
        "origin_generated_text": "\n```\n \n \n \n n,m = map(int,input().split())\n \n lis = [0] * m\n \n state = [0] * n\n \n a = list(map(int,input().split()))\n \n start = [ [] for i in range(m) ]\n end = [ [] for i in range(m)]\n \n allsum = 0\n for i in range(n-1):\n \n     start[a[i] % m].append(i)\n     end[(a[i+1]-1) % m].append(i)\n \n     allsum += (a[i+1]-a[i]) % m\n \n \n imosnum = 0\n plus = 0\n \n \n \n for i in range(2*m):\n \n     plus += imosnum\n \n     lis[i%m] += plus\n \n     for j in end[i%m]:\n         if state[j] == 1:\n             plus -= ((a[j+1]-a[j])%m-1)\n             state[j] = 2\n             imosnum -= 1\n \n     for j in start[i%m]:\n         if state[j] == 0:\n             imosnum += 1\n             state[j] = 1\n \n     \n \n print (allsum - max(lis))\n```\n "
    },
    {
        "user_id": "u850491413",
        "problem_id": "p03716",
        "submission1_id": "s354972164",
        "crp_content": "\n \n import sys\n from collections import deque, defaultdict\n import copy\n import bisect\n \n import math\n import heapq\n from itertools import combinations, permutations\n \n import sys\n def input():\n \treturn sys.stdin.readline().strip()\n \n N = int(input())\n a = list(map(int, input().split()))\n \n a_max = a[:N]\n a_min = a[2*N:]\n \n a_max_sum = sum(a_max)\n score = [a_max_sum]\n heapq.heapify(a_max)\n for i in range(N):\n \theapq.heappush(a_max, a[N + i])\n \ta_max_sum += a[N + i]\n \ta_max_sum -= heapq.heappop(a_max)\n \tscore.append(a_max_sum)\n-print(score)\n \n a_min_sum = sum(a_min)\n score[N] -= a_min_sum\n for i in range(len(a_min)):\n \ta_min[i] *= -1\n heapq.heapify(a_min)\n for i in range(N):\n \theapq.heappush(a_min, -a[2*N - 1 - i])\n \ta_min_sum += a[2*N - 1 - i]\n \ta_min_sum += heapq.heappop(a_min)\n \tscore[N - i - 1] -=a_min_sum\n \n print(max(score))\n",
        "origin_generated_text": "\n```\n \n import sys\n from collections import deque, defaultdict\n import copy\n import bisect\n \n import math\n import heapq\n from itertools import combinations, permutations\n \n import sys\n def input():\n \treturn sys.stdin.readline().strip()\n \n N = int(input())\n a = list(map(int, input().split()))\n \n a_max = a[:N]\n a_min = a[2*N:]\n \n a_max_sum = sum(a_max)\n score = [a_max_sum]\n heapq.heapify(a_max)\n for i in range(N):\n \theapq.heappush(a_max, a[N + i])\n \ta_max_sum += a[N + i]\n \ta_max_sum -= heapq.heappop(a_max)\n \tscore.append(a_max_sum)\n-print(score)\n \n a_min_sum = sum(a_min)\n score[N] -= a_min_sum\n for i in range(len(a_min)):\n \ta_min[i] *= -1\n heapq.heapify(a_min)\n for i in range(N):\n \theapq.heappush(a_min, -a[2*N - 1 - i])\n \ta_min_sum += a[2*N - 1 - i]\n \ta_min_sum += heapq.heappop(a_min)\n \tscore[N - i - 1] -=a_min_sum\n \n print(max(score))\n```\n "
    },
    {
        "user_id": "u619672182",
        "problem_id": "p02699",
        "submission1_id": "s440036863",
        "crp_content": "\n a=input().split()\n S = int(a[0])\n W = int(a[1])\n if S >= W:\n-    print(\"unsafe\")\n-else:\n     print(\"safe\")\n",
        "origin_generated_text": "\n```\n a=input().split()\n S = int(a[0])\n W = int(a[1])\n if S >= W:\n-    print(\"unsafe\")\n-else:\n     print(\"safe\")\n```\n "
    },
    {
        "user_id": "u042716570",
        "problem_id": "p02917",
        "submission1_id": "s591803582",
        "crp_content": "\n N = int(input())\n B = list(map(int,input().split()))\n A = [0]*N\n-A[N-1] = B[N-1-1]\n-for i in range(1,N):\n-    A[N-1-i] = min(B[N-1-i],B[N-1-i-1])\n print(sum(A))\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int,input().split()))\n A = [0]*N\n-A[N-1] = B[N-1-1]\n-for i in range(1,N):\n-    A[N-1-i] = min(B[N-1-i],B[N-1-i-1])\n print(sum(A))\n```\n "
    },
    {
        "user_id": "u129978636",
        "problem_id": "p03102",
        "submission1_id": "s592015934",
        "crp_content": "\n n,m,c=map(int,input().split())\n b=list(map(int,input().split()))\n ans=0\n for i in range(n):\n     a=list(map(int,input().split()))\n     d=0\n     for j in range(m):\n        d+=a[j]*b[j]\n     d+=c\n     if(d<=0):\n         continue\n     else:\n-     ans=i\n print(ans)\n",
        "origin_generated_text": "\n```\n n,m,c=map(int,input().split())\n b=list(map(int,input().split()))\n ans=0\n for i in range(n):\n     a=list(map(int,input().split()))\n     d=0\n     for j in range(m):\n        d+=a[j]*b[j]\n     d+=c\n     if(d<=0):\n         continue\n     else:\n-     ans=i\n print(ans)\n```\n "
    },
    {
        "user_id": "u729627789",
        "problem_id": "p03475",
        "submission1_id": "s184986690",
        "crp_content": "\n N = int(input())\n L = [list(map(int, input().split())) for i in range(N-1)]\n ans = []\n \n for i in range(N-1):\n     time = L[i][1]\n     for j in range(i, N-1):\n         c, s, f = L[j]\n         if time >= s:\n             time += f - (time % f) \n         else:\n             time += s - time\n         time += c\n     ans.append(time)\n \n ans.append(0)\n print(*ans, sep=\"\\n\")\n",
        "origin_generated_text": "\n```\n N = int(input())\n L = [list(map(int, input().split())) for i in range(N-1)]\n ans = []\n \n for i in range(N-1):\n     time = L[i][1]\n     for j in range(i, N-1):\n         c, s, f = L[j]\n         if time >= s:\n             time += f - (time % f) \n         else:\n             time += s - time\n         time += c\n     ans.append(time)\n \n ans.append(0)\n print(*ans, sep=\"\\n\")\n```\n "
    },
    {
        "user_id": "u131984977",
        "problem_id": "p02385",
        "submission1_id": "s701276705",
        "crp_content": "\n class Dice:\n     def __init__(self, data):\n         self.data = data\n     \n     def __eq__(self, value):\n-        for a in range(0,6,5):\n-            self.moveTopTo(self.getSortedList()[a])\n-            value.moveTopTo(value.getSortedList()[a])\n-            for b in range(4):\n-                print(self.data, value.data)\n-                if self.data == value.data:\n-                    return True\n-                else:\n-                    value.move('R')\n-        return False\n \n     def move(self, direction):\n         if direction == 'E':\n             self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                 self.data[3], self.data[5], self.data[2], self.data[0]\n         elif direction == 'N':\n             self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                 self.data[1], self.data[0], self.data[4], self.data[5]\n         elif direction == 'S':\n             self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                 self.data[4], self.data[0], self.data[1], self.data[5]\n         elif direction == 'W':\n             self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                 self.data[2], self.data[5], self.data[3], self.data[0]\n         elif direction == 'R':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[3], self.data[1], self.data[2], self.data[4]\n         elif direction == 'L':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[2], self.data[4], self.data[3], self.data[1]\n \n     def moveTopTo(self, target):\n         for a in range(4):\n             if self.data[0] == target:\n                 break\n             self.move('W')\n         if self.data[4] == target:\n             self.move('S')\n         elif self.data[1] == target:\n             self.move('N')\n     \n     def moveFrontTo(self, target):\n         for a in range(4):\n             if self.data[1] == target:\n                 break\n             self.move('R')\n \n     def getTop(self):\n         return self.data[0]\n     \n     def getRight(self):\n         return self.data[2]\n \n     def getSortedList(self):\n         tmp = self.data[:]\n         tmp.sort()\n         return tmp\n \n \n a = Dice(input().split())\n b = Dice(input().split())\n if a == b:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n class Dice:\n     def __init__(self, data):\n         self.data = data\n     \n     def __eq__(self, value):\n-        for a in range(0,6,5):\n-            self.moveTopTo(self.getSortedList()[a])\n-            value.moveTopTo(value.getSortedList()[a])\n-            for b in range(4):\n-                print(self.data, value.data)\n-                if self.data == value.data:\n-                    return True\n-                else:\n-                    value.move('R')\n-        return False\n \n     def move(self, direction):\n         if direction == 'E':\n             self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                 self.data[3], self.data[5], self.data[2], self.data[0]\n         elif direction == 'N':\n             self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                 self.data[1], self.data[0], self.data[4], self.data[5]\n         elif direction == 'S':\n             self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                 self.data[4], self.data[0], self.data[1], self.data[5]\n         elif direction == 'W':\n             self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                 self.data[2], self.data[5], self.data[3], self.data[0]\n         elif direction == 'R':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[3], self.data[1], self.data[2], self.data[4]\n         elif direction == 'L':\n             self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                 self.data[2], self.data[4], self.data[3], self.data[1]\n \n     def moveTopTo(self, target):\n         for a in range(4):\n             if self.data[0] == target:\n                 break\n             self.move('W')\n         if self.data[4] == target:\n             self.move('S')\n         elif self.data[1] == target:\n             self.move('N')\n     \n     def moveFrontTo(self, target):\n         for a in range(4):\n             if self.data[1] == target:\n                 break\n             self.move('R')\n \n     def getTop(self):\n         return self.data[0]\n     \n     def getRight(self):\n         return self.data[2]\n \n     def getSortedList(self):\n         tmp = self.data[:]\n         tmp.sort()\n         return tmp\n \n \n a = Dice(input().split())\n b = Dice(input().split())\n if a == b:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03274",
        "submission1_id": "s072936455",
        "crp_content": "\n import bisect\n n, k = map(int, input().split())\n X = list(map(int, input().split()))\n \n ans = float('inf')\n if n == 1:\n     ans = abs(X[0])\n for i in range(n):\n     temp = 0\n     \n     if X[i] <= 0:\n         if not 0 <= i+k-1 < n-1: continue\n         temp+= -X[i]*2\n         if X[i+k-1] >= 0:\n             temp += X[i+k-1]\n         ans = min(ans, temp)\n     \n     elif X[i] > 0:\n         if not 0 <= i-k+1 < n-1: continue\n         temp+=X[i]*2\n         if X[i-k+1] <= 0:\n             temp -= X[i-k+1]\n         ans  = min(ans, temp)\n \n st = bisect.bisect_left(X, 0)\n if st+k-1 < n-1: ans = min(ans, X[st+k-1])\n \n \n st = bisect.bisect_left(X, 0)-1\n if 0 <= st-k+1 < n-1: ans = min(ans, X[st-k+1])\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import bisect\n n, k = map(int, input().split())\n X = list(map(int, input().split()))\n \n ans = float('inf')\n if n == 1:\n     ans = abs(X[0])\n for i in range(n):\n     temp = 0\n     \n     if X[i] <= 0:\n         if not 0 <= i+k-1 < n-1: continue\n         temp+= -X[i]*2\n         if X[i+k-1] >= 0:\n             temp += X[i+k-1]\n         ans = min(ans, temp)\n     \n     elif X[i] > 0:\n         if not 0 <= i-k+1 < n-1: continue\n         temp+=X[i]*2\n         if X[i-k+1] <= 0:\n             temp -= X[i-k+1]\n         ans  = min(ans, temp)\n \n st = bisect.bisect_left(X, 0)\n if st+k-1 < n-1: ans = min(ans, X[st+k-1])\n \n \n st = bisect.bisect_left(X, 0)-1\n if 0 <= st-k+1 < n-1: ans = min(ans, X[st-k+1])\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u624689667",
        "problem_id": "p03752",
        "submission1_id": "s458972169",
        "crp_content": "\n n, k = [int(i) for i in input().split()]\n aa = [int(i) for i in input().split()]\n \n ans = float(\"inf\")\n for bit in range(1<<n):\n     if bin(bit).count(\"1\") < k:\n         continue\n-    if not (bit>>(n-1) & 1):\n         continue\n     now = aa[0]\n     cost = 0\n     for i in range(1, n):\n         if bit>>i & 1:\n             if aa[i] > now:\n                 now = aa[i]\n             else:\n                 now = now + 1\n                 cost += now - aa[i]\n         else:\n             if aa[i] > now:\n                 continue\n \n     ans = min(ans, cost)\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n n, k = [int(i) for i in input().split()]\n aa = [int(i) for i in input().split()]\n \n ans = float(\"inf\")\n for bit in range(1<<n):\n     if bin(bit).count(\"1\") < k:\n         continue\n-    if not (bit>>(n-1) & 1):\n         continue\n     now = aa[0]\n     cost = 0\n     for i in range(1, n):\n         if bit>>i & 1:\n             if aa[i] > now:\n                 now = aa[i]\n             else:\n                 now = now + 1\n                 cost += now - aa[i]\n         else:\n             if aa[i] > now:\n                 continue\n \n     ans = min(ans, cost)\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u461454424",
        "problem_id": "p02642",
        "submission1_id": "s176438166",
        "crp_content": "\n \n def main():\n     import sys\n     imput = sys.stdin.readline\n     \n     \n     \n     N = int(input())\n     A = list(map(int, input().split()))\n \n     \n     from collections import Counter\n     M = max(A) + 1\n     B = [True] * (M)\n     A = sorted(A)\n     C = Counter(A)\n \n     answer = 0\n     for a in A:\n         if C[a] > 1:\n             continue\n         elif B[a]:\n             answer += 1\n-            for j in range(a, M, a):\n                 B[j] = False\n \n     print(answer)\n \n     \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n \n def main():\n     import sys\n     imput = sys.stdin.readline\n     \n     \n     \n     N = int(input())\n     A = list(map(int, input().split()))\n \n     \n     from collections import Counter\n     M = max(A) + 1\n     B = [True] * (M)\n     A = sorted(A)\n     C = Counter(A)\n \n     answer = 0\n     for a in A:\n         if C[a] > 1:\n             continue\n         elif B[a]:\n             answer += 1\n-            for j in range(a, M, a):\n                 B[j] = False\n \n     print(answer)\n \n     \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u112007848",
        "problem_id": "p03568",
        "submission1_id": "s961797563",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split(\" \")))\n kisuu = 1\n kake = 1\n for i in a:\n-  if i != 1:\n-    kake *= 3\n-  else:\n-    kake *= 2\n   if i % 2 == 0:\n     kisuu *= 2\n print(kake - kisuu)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split(\" \")))\n kisuu = 1\n kake = 1\n for i in a:\n-  if i != 1:\n-    kake *= 3\n-  else:\n-    kake *= 2\n   if i % 2 == 0:\n     kisuu *= 2\n print(kake - kisuu)\n```\n "
    },
    {
        "user_id": "u984110693",
        "problem_id": "p03080",
        "submission1_id": "s659208899",
        "crp_content": "\n N = int(input())\n s = list(input().split())\n cnt = 0\n for a in s:\n-    if s == 'R':\n         cnt += 1\n if N - cnt < cnt:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N = int(input())\n s = list(input().split())\n cnt = 0\n for a in s:\n-    if s == 'R':\n         cnt += 1\n if N - cnt < cnt:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p02727",
        "submission1_id": "s063436811",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n from itertools import chain\n \n def readlines(*abc):\n     for n in abc:\n         yield list(map(int, input().split()))[:n]\n \n def main():\n     x, y, a, b, c = map(int, input().split())\n-    apples = sorted(chain(*readlines(a,b,c)), reverse=True)\n     print(sum(apples[:x+y]))\n \n \n main()\n \n \n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n from itertools import chain\n \n def readlines(*abc):\n     for n in abc:\n         yield list(map(int, input().split()))[:n]\n \n def main():\n     x, y, a, b, c = map(int, input().split())\n-    apples = sorted(chain(*readlines(a,b,c)), reverse=True)\n     print(sum(apples[:x+y]))\n \n \n main()\n \n \n \n```\n "
    },
    {
        "user_id": "u985076807",
        "problem_id": "p03760",
        "submission1_id": "s278241013",
        "crp_content": "\n \n \n \n def solve():\n     o = input()\n     e = input()\n \n     for l, r in zip(o, e):\n         print('{}{}'.format(l, r), end=\"\")\n \n-    if len(o) != len(e):\n-        print(e[-1])\n \n \n if __name__ == '__main__':\n     solve()\n \n",
        "origin_generated_text": "\n```\n \n \n \n def solve():\n     o = input()\n     e = input()\n \n     for l, r in zip(o, e):\n         print('{}{}'.format(l, r), end=\"\")\n \n-    if len(o) != len(e):\n-        print(e[-1])\n \n \n if __name__ == '__main__':\n     solve()\n \n```\n "
    },
    {
        "user_id": "u020798319",
        "problem_id": "p02922",
        "submission1_id": "s705916248",
        "crp_content": "\n a,b = map(int,input().split())\n sum = a\n count = 1\n-while sum < b :\n   sum += a\n   count += 1\n print (count)\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n sum = a\n count = 1\n-while sum < b :\n   sum += a\n   count += 1\n print (count)\n```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p02556",
        "submission1_id": "s962268363",
        "crp_content": "\n n = int(input())\n l = []\n ll = []\n for _ in range(n):\n     x, y = map(int, input().split())\n     l.append((x+y, x, y))\n     ll.append((x-y, x, y))\n l.sort()\n ll.sort()\n ans1 = 0\n ans2 = 0\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n     if a[1] >= b[1] and a[2] >= b[2]:\n         ans1 = b[0]-a[0]\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n-    if a[1] >= a[2] and b[2] >= b[1]:\n         ans2 = b[0]-a[0]\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n print(max(ans1, ans2))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n l = []\n ll = []\n for _ in range(n):\n     x, y = map(int, input().split())\n     l.append((x+y, x, y))\n     ll.append((x-y, x, y))\n l.sort()\n ll.sort()\n ans1 = 0\n ans2 = 0\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n     if a[1] >= b[1] and a[2] >= b[2]:\n         ans1 = b[0]-a[0]\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n-    if a[1] >= a[2] and b[2] >= b[1]:\n         ans2 = b[0]-a[0]\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n print(max(ans1, ans2))\n \n```\n "
    },
    {
        "user_id": "u492737043",
        "problem_id": "p02742",
        "submission1_id": "s035637779",
        "crp_content": "\n H,W=map(int,input().split())\n import math\n \n-A=[0,math.ceil(W/2)]\n-c=W*math.ceil(H/2)+A[H%2]\n \n print(c)\n \n",
        "origin_generated_text": "\n```\n H,W=map(int,input().split())\n import math\n \n-A=[0,math.ceil(W/2)]\n-c=W*math.ceil(H/2)+A[H%2]\n \n print(c)\n \n```\n "
    },
    {
        "user_id": "u584083761",
        "problem_id": "p03274",
        "submission1_id": "s002933317",
        "crp_content": "\n a,b = list(map(int, input().split()))\n n = list(map(int, input().split()))\n \n ans = []\n for i, name in enumerate(n):\n     if b+i >a:\n         break\n-    ans.append(min( (abs(n[i]) + abs(n[i +b-1] - n[i]),  (n[i+b-1]) + abs(n[i +b-1] - n[i]) )) )\n \n print(min(ans))\n",
        "origin_generated_text": "\n```\n a,b = list(map(int, input().split()))\n n = list(map(int, input().split()))\n \n ans = []\n for i, name in enumerate(n):\n     if b+i >a:\n         break\n-    ans.append(min( (abs(n[i]) + abs(n[i +b-1] - n[i]),  (n[i+b-1]) + abs(n[i +b-1] - n[i]) )) )\n \n print(min(ans))\n```\n "
    },
    {
        "user_id": "u201928947",
        "problem_id": "p02767",
        "submission1_id": "s702495630",
        "crp_content": "\n n = int(input())\n x = list(map(int,input().split()))\n-m_energy = 250000\n-for i in range(1,101):\n-  energy = 0\n   for k in range(n):\n-    m_energy += (x[k]-1)**2\n-  if energy < m_energy:\n-    m_energy = energy\n-print(m_energy)\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int,input().split()))\n-m_energy = 250000\n-for i in range(1,101):\n-  energy = 0\n   for k in range(n):\n-    m_energy += (x[k]-1)**2\n-  if energy < m_energy:\n-    m_energy = energy\n-print(m_energy)\n```\n "
    },
    {
        "user_id": "u033602950",
        "problem_id": "p03752",
        "submission1_id": "s767180718",
        "crp_content": "\n n,k = list(map(int, input().split()))\n a=list(map(int, input().split()))\n \n ans=[]\n for i in range(1<<n):\n     \n     if bin(i).count(\"1\")==k:\n         cst=0\n         use=a.copy()\n         for u in range(1,n):\n             if(i>>u&1):\n                 left_max=max(use[:u])\n                 cst+=left_max-use[u]+1\n                 use[u]= left_max+1\n         ans.append(cst)   \n print(min(ans))\n \n",
        "origin_generated_text": "\n```\n n,k = list(map(int, input().split()))\n a=list(map(int, input().split()))\n \n ans=[]\n for i in range(1<<n):\n     \n     if bin(i).count(\"1\")==k:\n         cst=0\n         use=a.copy()\n         for u in range(1,n):\n             if(i>>u&1):\n                 left_max=max(use[:u])\n                 cst+=left_max-use[u]+1\n                 use[u]= left_max+1\n         ans.append(cst)   \n print(min(ans))\n \n```\n "
    },
    {
        "user_id": "u263159909",
        "problem_id": "p02912",
        "submission1_id": "s233689566",
        "crp_content": "\n import heapq\n import math\n \n n, m = map(int, input().split())\n goods = list(map(lambda x: int(x) * -1, input().split()))\n heapq.heapify(goods)\n for i in range(n):\n     the_most_expensive = heapq.heappop(goods)\n-    heapq.heappush(goods, math.ceil(the_most_expensive / 2))\n \n print(sum(goods) * -1)\n \n",
        "origin_generated_text": "\n```\n import heapq\n import math\n \n n, m = map(int, input().split())\n goods = list(map(lambda x: int(x) * -1, input().split()))\n heapq.heapify(goods)\n for i in range(n):\n     the_most_expensive = heapq.heappop(goods)\n-    heapq.heappush(goods, math.ceil(the_most_expensive / 2))\n \n print(sum(goods) * -1)\n \n```\n "
    },
    {
        "user_id": "u736189571",
        "problem_id": "p02718",
        "submission1_id": "s355103432",
        "crp_content": "\n n, m = map(int, input().split())\n item = input().split()\n item = [int(x) for x in item]\n \n item.sort(reverse=True)\n \n s = sum(item)\n res = 0\n for i in range(n):\n-  if item[i] > s / (4*m):\n     res += 1\n     if res >= m:\n       print('Yes')\n   else:\n     print('No')\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n item = input().split()\n item = [int(x) for x in item]\n \n item.sort(reverse=True)\n \n s = sum(item)\n res = 0\n for i in range(n):\n-  if item[i] > s / (4*m):\n     res += 1\n     if res >= m:\n       print('Yes')\n   else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u375616706",
        "problem_id": "p03734",
        "submission1_id": "s715912307",
        "crp_content": "\n from itertools import accumulate\n import heapq\n \n import sys\n sys.setrecursionlimit(10**9)\n input = sys.stdin.readline\n \n N, W = map(int, input().split())\n first_item = list(map(int, input().split()))\n basew = first_item[0]\n w0 = []\n w1 = []\n w2 = []\n w3 = []\n heapq.heappush(w0, first_item[1])\n for _ in range(N-1):\n     w, v = map(int, input().split())\n     w -= basew\n     if w == 0:\n         heapq.heappush(w0, v)\n     elif w == 1:\n         heapq.heappush(w1, v)\n     elif w == 2:\n         heapq.heappush(w2, v)\n     elif w == 3:\n         heapq.heappush(w3, v)\n \n w0_acc = [0]+list(accumulate(reversed(w0)))\n w1_acc = [0]+list(accumulate(reversed(w1)))\n w2_acc = [0]+list(accumulate(reversed(w2)))\n w3_acc = [0]+list(accumulate(reversed(w3)))\n v = 0\n for i0 in range(len(w0)):\n     for i1 in range(len(w1)):\n         for i2 in range(len(w2)):\n             for i3 in range(len(w3)):\n-                if basew*(i0+i1+i2+i3)+3*i3 + 2*i2 + i1 > W:\n                     break\n                 else:\n                     v = max(v, w0_acc[i0]+w1_acc[i1]+w2_acc[i2]+w3_acc[i3])\n print(v)\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n import heapq\n \n import sys\n sys.setrecursionlimit(10**9)\n input = sys.stdin.readline\n \n N, W = map(int, input().split())\n first_item = list(map(int, input().split()))\n basew = first_item[0]\n w0 = []\n w1 = []\n w2 = []\n w3 = []\n heapq.heappush(w0, first_item[1])\n for _ in range(N-1):\n     w, v = map(int, input().split())\n     w -= basew\n     if w == 0:\n         heapq.heappush(w0, v)\n     elif w == 1:\n         heapq.heappush(w1, v)\n     elif w == 2:\n         heapq.heappush(w2, v)\n     elif w == 3:\n         heapq.heappush(w3, v)\n \n w0_acc = [0]+list(accumulate(reversed(w0)))\n w1_acc = [0]+list(accumulate(reversed(w1)))\n w2_acc = [0]+list(accumulate(reversed(w2)))\n w3_acc = [0]+list(accumulate(reversed(w3)))\n v = 0\n for i0 in range(len(w0)):\n     for i1 in range(len(w1)):\n         for i2 in range(len(w2)):\n             for i3 in range(len(w3)):\n-                if basew*(i0+i1+i2+i3)+3*i3 + 2*i2 + i1 > W:\n                     break\n                 else:\n                     v = max(v, w0_acc[i0]+w1_acc[i1]+w2_acc[i2]+w3_acc[i3])\n print(v)\n \n```\n "
    },
    {
        "user_id": "u614181788",
        "problem_id": "p02580",
        "submission1_id": "s930355994",
        "crp_content": "\n h,w,m = map(int,input().split())\n H = [0]*(h+1)\n W = [0]*(w+1)\n s = set([])\n for i in range(m):\n     a,b = map(int,input().split())\n     s.add((a,b))\n \n     H[a] += 1\n     W[b] += 1\n \n x = [0]*(h+1)\n y = [0]*(w+1)\n     \n for i in range(h+1):\n     x[i] = [i,H[i]]\n for i in range(w+1):\n     y[i] = [i,W[i]]\n \n x.sort(key= lambda val : val[1],reverse=True)\n y.sort(key= lambda val : val[1],reverse=True)\n \n ma = x[0][1]\n mb = y[0][1]\n \n i,j = 0,0\n sw = 0\n \n-xx = x.count(ma)\n-yy = y.count(mb)\n \n-for i in range(xx):\n-    for j in range(yy):\n-        if (x[i][0],y[j][0]) not in s:\n-            sw = 1\n-            break \n-print(ma+mb+sw-1)\n \n",
        "origin_generated_text": "\n```\n h,w,m = map(int,input().split())\n H = [0]*(h+1)\n W = [0]*(w+1)\n s = set([])\n for i in range(m):\n     a,b = map(int,input().split())\n     s.add((a,b))\n \n     H[a] += 1\n     W[b] += 1\n \n x = [0]*(h+1)\n y = [0]*(w+1)\n     \n for i in range(h+1):\n     x[i] = [i,H[i]]\n for i in range(w+1):\n     y[i] = [i,W[i]]\n \n x.sort(key= lambda val : val[1],reverse=True)\n y.sort(key= lambda val : val[1],reverse=True)\n \n ma = x[0][1]\n mb = y[0][1]\n \n i,j = 0,0\n sw = 0\n \n-xx = x.count(ma)\n-yy = y.count(mb)\n \n-for i in range(xx):\n-    for j in range(yy):\n-        if (x[i][0],y[j][0]) not in s:\n-            sw = 1\n-            break \n-print(ma+mb+sw-1)\n \n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s089739881",
        "crp_content": "\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n     \n \n n = 0\n m = 0\n for f in field:\n     for e in f:\n         if e > m:\n             m = e\n         if e==0:\n             n+=1\n \n print(n)\n print(m)\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n for line in lines:\n     x,y,z = map(int, line)\n     \n \n n = 0\n m = 0\n for f in field:\n     for e in f:\n         if e > m:\n             m = e\n         if e==0:\n             n+=1\n \n print(n)\n print(m)\n \n \n```\n "
    },
    {
        "user_id": "u307124824",
        "problem_id": "p03079",
        "submission1_id": "s727003607",
        "crp_content": "\n import sys\n \n A, B, C = input().split()\n \n if A == B:\n     if A == C:\n-        print('YES')\n         sys.exit()\n \n-print('NO')\n \n",
        "origin_generated_text": "\n```\n import sys\n \n A, B, C = input().split()\n \n if A == B:\n     if A == C:\n-        print('YES')\n         sys.exit()\n \n-print('NO')\n \n```\n "
    },
    {
        "user_id": "u129492036",
        "problem_id": "p03103",
        "submission1_id": "s531552127",
        "crp_content": "\n \n \n N, M = map(int, input().split())\n \n A = [list(map(int, input().split())) for i in range(N)]\n-A = sorted(dict(A).items())\n \n ans = 0\n m = M\n for a, b in A:\n     if m <= b:\n         ans += m*a\n         break\n     else:\n         ans += b*a\n         m -= b\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n \n N, M = map(int, input().split())\n \n A = [list(map(int, input().split())) for i in range(N)]\n-A = sorted(dict(A).items())\n \n ans = 0\n m = M\n for a, b in A:\n     if m <= b:\n         ans += m*a\n         break\n     else:\n         ans += b*a\n         m -= b\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u923270446",
        "problem_id": "p02887",
        "submission1_id": "s357190975",
        "crp_content": "\n n = int(input())\n s = input()\n cur = s[0]\n l = []\n-for i in range(n - 1):\n     if cur != s[i + 1]:\n         l.append(cur)\n print(len(l))\n",
        "origin_generated_text": "\n```\n n = int(input())\n s = input()\n cur = s[0]\n l = []\n-for i in range(n - 1):\n     if cur != s[i + 1]:\n         l.append(cur)\n print(len(l))\n```\n "
    },
    {
        "user_id": "u580904613",
        "problem_id": "p02954",
        "submission1_id": "s293310201",
        "crp_content": "\n S = input()\n ans = [0]*len(S)\n tmp = []\n cnt = 1;\n \n for i in range(len(S)-1):\n   if(S[i] == S[i+1]):\n     cnt += 1\n   else:\n     tmp.append(cnt)\n     cnt = 1\n tmp.append(cnt)\n \n cnt = 0\n for i in range(len(tmp)-1):\n   cnt += tmp[i]\n   if(i % 2 == 0):\n     if((tmp[i] - tmp[i+1])%2 == 0):\n       ans[cnt-1] = int((tmp[i]+tmp[i+1])/2)\n       ans[cnt] = int((tmp[i]+tmp[i+1])/2)\n     else:\n       if(abs(tmp[i] - tmp[i+1]) > 2):\n         if(tmp[i] > tmp[i+1]):\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n         else:\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n       else:\n         if(tmp[i] > tmp[i+1]):\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n         else:\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n-        \n print(*ans)\n",
        "origin_generated_text": "\n```\n S = input()\n ans = [0]*len(S)\n tmp = []\n cnt = 1;\n \n for i in range(len(S)-1):\n   if(S[i] == S[i+1]):\n     cnt += 1\n   else:\n     tmp.append(cnt)\n     cnt = 1\n tmp.append(cnt)\n \n cnt = 0\n for i in range(len(tmp)-1):\n   cnt += tmp[i]\n   if(i % 2 == 0):\n     if((tmp[i] - tmp[i+1])%2 == 0):\n       ans[cnt-1] = int((tmp[i]+tmp[i+1])/2)\n       ans[cnt] = int((tmp[i]+tmp[i+1])/2)\n     else:\n       if(abs(tmp[i] - tmp[i+1]) > 2):\n         if(tmp[i] > tmp[i+1]):\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n         else:\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n       else:\n         if(tmp[i] > tmp[i+1]):\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n         else:\n           ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n           ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n-        \n print(*ans)\n```\n "
    },
    {
        "user_id": "u147808483",
        "problem_id": "p03563",
        "submission1_id": "s924594991",
        "crp_content": "\n a=int(input())\n b=int(input())\n-print(a+b/2)\n",
        "origin_generated_text": "\n```\n a=int(input())\n b=int(input())\n-print(a+b/2)\n```\n "
    },
    {
        "user_id": "u524039871",
        "problem_id": "p03039",
        "submission1_id": "s829475490",
        "crp_content": "\n n,m,k=map(int,input().split())\n M=10**9+7\n def combi(x,y):\n   c=1\n   m=min(x-y,y)\n   for iii in range(y):\n     c=c*(x-iii)*pow(y-iii,-1)%M\n   return c\n \n rem_combi=combi(n*m-2,k-2)\n \n def calc(num):\n   out=0\n   for iii in range(num):\n     out+=iii*(num-iii)%M\n   return out\n \n-x_cost=m*m*calc(n)%M\n-y_cost=n*n*calc(m)%M\n-ans=rem_combi*(x_cost+y_cost)%M\n-print(int(ans))\n",
        "origin_generated_text": "\n```\n n,m,k=map(int,input().split())\n M=10**9+7\n def combi(x,y):\n   c=1\n   m=min(x-y,y)\n   for iii in range(y):\n     c=c*(x-iii)*pow(y-iii,-1)%M\n   return c\n \n rem_combi=combi(n*m-2,k-2)\n \n def calc(num):\n   out=0\n   for iii in range(num):\n     out+=iii*(num-iii)%M\n   return out\n \n-x_cost=m*m*calc(n)%M\n-y_cost=n*n*calc(m)%M\n-ans=rem_combi*(x_cost+y_cost)%M\n-print(int(ans))\n```\n "
    },
    {
        "user_id": "u645855527",
        "problem_id": "p02580",
        "submission1_id": "s612151636",
        "crp_content": "\n from itertools import combinations\n \n H, W, M = map(int, input().split())\n \n bomb_h = [0] * H\n bomb_w = [0] * W\n grid = [[False] * W for _ in range(H)]\n for i in range(M):\n     h, w = map(int, input().split())\n     bomb_h[h-1] += 1\n     bomb_w[w-1] += 1\n     grid[h-1][w-1] = True\n \n max_h = max(bomb_h)\n max_w = max(bomb_w)\n \n h_indices = []\n for i in range(H):\n     if bomb_h[i] == max_h:\n         h_indices.append(i)\n \n w_indices = []\n for i in range(W):\n     if bomb_w[i] == max_w:\n         w_indices.append(i)\n \n ans = max_w + max_h - 1\n for h in h_indices:\n     for w in w_indices:\n         if not grid[h][w]:\n             ans += 1\n-            break\n \n print(ans)\n",
        "origin_generated_text": "\n```\n from itertools import combinations\n \n H, W, M = map(int, input().split())\n \n bomb_h = [0] * H\n bomb_w = [0] * W\n grid = [[False] * W for _ in range(H)]\n for i in range(M):\n     h, w = map(int, input().split())\n     bomb_h[h-1] += 1\n     bomb_w[w-1] += 1\n     grid[h-1][w-1] = True\n \n max_h = max(bomb_h)\n max_w = max(bomb_w)\n \n h_indices = []\n for i in range(H):\n     if bomb_h[i] == max_h:\n         h_indices.append(i)\n \n w_indices = []\n for i in range(W):\n     if bomb_w[i] == max_w:\n         w_indices.append(i)\n \n ans = max_w + max_h - 1\n for h in h_indices:\n     for w in w_indices:\n         if not grid[h][w]:\n             ans += 1\n-            break\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u279605379",
        "problem_id": "p02297",
        "submission1_id": "s391171527",
        "crp_content": "\n def cross(a,b):return a[0]*b[1] - a[1]*b[0]\n         \n n = int(input())\n P =[]\n s = 0\n for i in range(n):P.append([int(i) for i in input().split()])\n for i in range(n-1):s += cross(P[i],P[i+1])\n-print(s/2)\n",
        "origin_generated_text": "\n```\n def cross(a,b):return a[0]*b[1] - a[1]*b[0]\n         \n n = int(input())\n P =[]\n s = 0\n for i in range(n):P.append([int(i) for i in input().split()])\n for i in range(n-1):s += cross(P[i],P[i+1])\n-print(s/2)\n```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03633",
        "submission1_id": "s799705392",
        "crp_content": "\n \n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a,b):\n   mi = min(a,b)\n   ma = max(a,b)\n   ans = 1\n   \n   while True:\n     \n     if (ma % mi) == 0:\n       ans = mi\n       break\n     else:\n-      mi = ma%mi\n       ma = mi\n       \n   return ans\n \n \n \n def lcm(a,b):\n   \n   g = gcd(a,b)\n   \n   return int(a*b/g)\n ans = T[0]\n for i in range(1,len(T)):\n   ans = lcm(ans,T[i])\n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a,b):\n   mi = min(a,b)\n   ma = max(a,b)\n   ans = 1\n   \n   while True:\n     \n     if (ma % mi) == 0:\n       ans = mi\n       break\n     else:\n-      mi = ma%mi\n       ma = mi\n       \n   return ans\n \n \n \n def lcm(a,b):\n   \n   g = gcd(a,b)\n   \n   return int(a*b/g)\n ans = T[0]\n for i in range(1,len(T)):\n   ans = lcm(ans,T[i])\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p03054",
        "submission1_id": "s810606253",
        "crp_content": "\n H,W,N=map(int,input().split())\n sr,sc=map(int,input().split())\n S=input()\n T=input()\n \n-lu=H-sr\n-ld=sr-1\n-ll=W-sc\n-lr=sc-1\n \n for i in range(N):\n   x=S[i]\n   y=T[i]\n \n   if x=='U':\n     lu-=1\n   elif x=='D':\n     ld-=1\n   elif x=='L':\n     ll-=1\n   elif x=='R':\n     lr-=1\n \n   \n \n   if lu<0 or ld<0 or ll<0 or lr<0:\n     print('NO')\n     exit()\n \n   if y=='U':\n     ld+=1\n   elif y=='D':\n     lu+=1\n   elif y=='L':\n     lr+=1\n   elif y=='R':\n     ll+=1\n \n   \n \n print('YES')\n",
        "origin_generated_text": "\n```\n H,W,N=map(int,input().split())\n sr,sc=map(int,input().split())\n S=input()\n T=input()\n \n-lu=H-sr\n-ld=sr-1\n-ll=W-sc\n-lr=sc-1\n \n for i in range(N):\n   x=S[i]\n   y=T[i]\n \n   if x=='U':\n     lu-=1\n   elif x=='D':\n     ld-=1\n   elif x=='L':\n     ll-=1\n   elif x=='R':\n     lr-=1\n \n   \n \n   if lu<0 or ld<0 or ll<0 or lr<0:\n     print('NO')\n     exit()\n \n   if y=='U':\n     ld+=1\n   elif y=='D':\n     lu+=1\n   elif y=='L':\n     lr+=1\n   elif y=='R':\n     ll+=1\n \n   \n \n print('YES')\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s528204101",
        "crp_content": "\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(15)):\n-    for j in reversed(range(1,100)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n):\n-            minN = n\n-            ans.append(num)\n-            \n for i in list(reversed(ans))[:k]:\n     print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(15)):\n-    for j in reversed(range(1,100)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n):\n-            minN = n\n-            ans.append(num)\n-            \n for i in list(reversed(ans))[:k]:\n     print(i)\n```\n "
    },
    {
        "user_id": "u082861480",
        "problem_id": "p03080",
        "submission1_id": "s177695903",
        "crp_content": "\n N = int(input())\n red_num = 0\n for i in input():\n   if i == 'R':\n     red_num += 1\n-print('Yes' if red_num > N else 'No')\n",
        "origin_generated_text": "\n```\n N = int(input())\n red_num = 0\n for i in input():\n   if i == 'R':\n     red_num += 1\n-print('Yes' if red_num > N else 'No')\n```\n "
    },
    {
        "user_id": "u461993794",
        "problem_id": "p02625",
        "submission1_id": "s452900392",
        "crp_content": "\n from functools import reduce\n \n n, m = map(int, input().split())\n \n mod = 10 ** 9 + 7\n ans = 0\n c = 1\n p1 = 1\n-p2 = reduce(lambda ac, v: ac * v % mod, range(m, m - n, -1), 1)\n for i in range(n + 1):\n     if i > 0:\n         c = (c * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n         p1 = (p1 * (n - i + 1)) % mod\n         p2 = (p2 * pow(n - i + 1, mod - 2, mod)) % mod\n     x = c * p1 * (p2 ** 2)\n     if i % 2 == 0:\n         ans += x\n     else:\n         ans -= x\n     ans %= mod\n print(ans)\n \n",
        "origin_generated_text": "\n```\n from functools import reduce\n \n n, m = map(int, input().split())\n \n mod = 10 ** 9 + 7\n ans = 0\n c = 1\n p1 = 1\n-p2 = reduce(lambda ac, v: ac * v % mod, range(m, m - n, -1), 1)\n for i in range(n + 1):\n     if i > 0:\n         c = (c * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n         p1 = (p1 * (n - i + 1)) % mod\n         p2 = (p2 * pow(n - i + 1, mod - 2, mod)) % mod\n     x = c * p1 * (p2 ** 2)\n     if i % 2 == 0:\n         ans += x\n     else:\n         ans -= x\n     ans %= mod\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u823044869",
        "problem_id": "p03563",
        "submission1_id": "s303312001",
        "crp_content": "\n r = int(input())\n g = int(input())\n \n if r<g:\n-  print(2*abs(r-g)+r)\n elif r>g:\n-  print(2*abs(r-g)-r)\n else:\n   print(r)\n \n",
        "origin_generated_text": "\n```\n r = int(input())\n g = int(input())\n \n if r<g:\n-  print(2*abs(r-g)+r)\n elif r>g:\n-  print(2*abs(r-g)-r)\n else:\n   print(r)\n \n```\n "
    },
    {
        "user_id": "u031115006",
        "problem_id": "p02767",
        "submission1_id": "s355963589",
        "crp_content": "\n N=int(input())\n list = list(map(int, input().split()))\n \n l=len(list)\n m=0\n i=0\n j=1\n r=0\n \n while(i<l):\n   if(m < abs(list[i]-j)):\n     m = j\n   i+=1\n   j+=1\n \n k=0\n \n while(k<l):\n-  r+=abs(list[k]-m)*abs(list[k]-m)\n   k+=1\n \n print(r)\n",
        "origin_generated_text": "\n```\n N=int(input())\n list = list(map(int, input().split()))\n \n l=len(list)\n m=0\n i=0\n j=1\n r=0\n \n while(i<l):\n   if(m < abs(list[i]-j)):\n     m = j\n   i+=1\n   j+=1\n \n k=0\n \n while(k<l):\n-  r+=abs(list[k]-m)*abs(list[k]-m)\n   k+=1\n \n print(r)\n```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03959",
        "submission1_id": "s335850370",
        "crp_content": "\n n=int(input())\n l= list(map(int, input().split()))\n r= list(map(int, input().split()))\n l=[0]+l\n r.append(0)\n \n res=1\n for i in range(n):\n \tif( (l[i]<l[i+1]) or (r[i]>r[i+1]) ):\n \t\tif( ( (l[i]<l[i+1]) and (r[i]>r[i+1]) ) and (l[i+1]!=r[i]) ):\n \t\t\tres*=0\n \telse:\n \t\tres*=min(l[i],r[i])\n \t\tres%=1000000007\n print(res)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n l= list(map(int, input().split()))\n r= list(map(int, input().split()))\n l=[0]+l\n r.append(0)\n \n res=1\n for i in range(n):\n \tif( (l[i]<l[i+1]) or (r[i]>r[i+1]) ):\n \t\tif( ( (l[i]<l[i+1]) and (r[i]>r[i+1]) ) and (l[i+1]!=r[i]) ):\n \t\t\tres*=0\n \telse:\n \t\tres*=min(l[i],r[i])\n \t\tres%=1000000007\n print(res)\n \n```\n "
    },
    {
        "user_id": "u379692329",
        "problem_id": "p03272",
        "submission1_id": "s602942617",
        "crp_content": "\n N, i = [int(x) for x in input().split()]\n-print(N+i-i)\n",
        "origin_generated_text": "\n```\n N, i = [int(x) for x in input().split()]\n-print(N+i-i)\n```\n "
    },
    {
        "user_id": "u706377526",
        "problem_id": "p02640",
        "submission1_id": "s596836110",
        "crp_content": "\n s = input()\n lst = s.split()\n \n ex1 = int(lst[0])\n ex2 = int(lst[1])\n-ret = \"no\"\n \n for i in range(ex1+1):\n     if 4 * (ex1 - i) + 2 * i == ex2:\n-        ret= \"yes\"\n \n print(ret)\n \n",
        "origin_generated_text": "\n```\n s = input()\n lst = s.split()\n \n ex1 = int(lst[0])\n ex2 = int(lst[1])\n-ret = \"no\"\n \n for i in range(ex1+1):\n     if 4 * (ex1 - i) + 2 * i == ex2:\n-        ret= \"yes\"\n \n print(ret)\n \n```\n "
    },
    {
        "user_id": "u425762225",
        "problem_id": "p03568",
        "submission1_id": "s590516680",
        "crp_content": "\n def solve(n,a):\n   even = 0\n   \n   for i in range(n):\n     if a[i] % 2 == 1:\n       even += 1\n   \n   return 3**n - 2**even\n   \n def main():\n   N = int(input())\n   a = list(map(int,input().split()))\n   print(solve(N,a))\n",
        "origin_generated_text": "\n```\n def solve(n,a):\n   even = 0\n   \n   for i in range(n):\n     if a[i] % 2 == 1:\n       even += 1\n   \n   return 3**n - 2**even\n   \n def main():\n   N = int(input())\n   a = list(map(int,input().split()))\n   print(solve(N,a))\n```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p02556",
        "submission1_id": "s553953528",
        "crp_content": "\n n = int(input())\n l = []\n ll = []\n for _ in range(n):\n     x, y = map(int, input().split())\n     l.append((x+y, x, y))\n     ll.append((x-y, x, y))\n l.sort()\n ll.sort()\n ans1 = 0\n ans2 = 0\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n     if a[1] >= b[1] and a[2] >= b[2]:\n         ans1 = abs(b[0]-a[0])\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n-    if a[1] >= a[2] and b[2] >= b[1]:\n         ans2 = abs(b[0]-a[0])\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n print(max(ans1, ans2))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n l = []\n ll = []\n for _ in range(n):\n     x, y = map(int, input().split())\n     l.append((x+y, x, y))\n     ll.append((x-y, x, y))\n l.sort()\n ll.sort()\n ans1 = 0\n ans2 = 0\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n     if a[1] >= b[1] and a[2] >= b[2]:\n         ans1 = abs(b[0]-a[0])\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n cnt = 0\n while True:\n     a = l[-cnt]\n     b = l[cnt]\n-    if a[1] >= a[2] and b[2] >= b[1]:\n         ans2 = abs(b[0]-a[0])\n         break\n     if cnt >= n-1:\n         break\n     cnt += 1\n \n print(max(ans1, ans2))\n \n```\n "
    },
    {
        "user_id": "u557494880",
        "problem_id": "p03716",
        "submission1_id": "s775514001",
        "crp_content": "\n N = int(input())\n A = list(map(int,input().split()))\n S = []\n P = A[:N]\n Q = A[2*N:]\n for i in range(N):\n     Q[i] *= -1\n R = A[N:2*N]\n p = [0]*(N+1)\n q = [0]*(N+1)\n import heapq\n heapq.heapify(P)\n heapq.heapify(Q)\n sp = sum(P)\n sq = sum(Q)\n p[0] = sp\n q[0] = sq\n \n for i in range(1,N+1):\n     heapq.heappush(P,R[i-1])\n     heapq.heappop(P)\n     sp = sum(P)\n     p[i] = sum(Q)\n for i in range(1,N+1):\n     heapq.heappush(Q,-R[-i])\n     heapq.heappop(Q)\n     sq = sum(Q)\n     q[i] = sq\n \n ans = -(10**100)\n for k in range(N+1):\n     ans = max(ans,p[k] + q[N-k])\n     \n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int,input().split()))\n S = []\n P = A[:N]\n Q = A[2*N:]\n for i in range(N):\n     Q[i] *= -1\n R = A[N:2*N]\n p = [0]*(N+1)\n q = [0]*(N+1)\n import heapq\n heapq.heapify(P)\n heapq.heapify(Q)\n sp = sum(P)\n sq = sum(Q)\n p[0] = sp\n q[0] = sq\n \n for i in range(1,N+1):\n     heapq.heappush(P,R[i-1])\n     heapq.heappop(P)\n     sp = sum(P)\n     p[i] = sum(Q)\n for i in range(1,N+1):\n     heapq.heappush(Q,-R[-i])\n     heapq.heappop(Q)\n     sq = sum(Q)\n     q[i] = sq\n \n ans = -(10**100)\n for k in range(N+1):\n     ans = max(ans,p[k] + q[N-k])\n     \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p03729",
        "submission1_id": "s869090298",
        "crp_content": "\n-a,b,c = input().split();print(\"YNeos\"[a[-1]!=b[0] or b[-1]!=c[0]::2])\n",
        "origin_generated_text": "\n```\n-a,b,c = input().split();print(\"YNeos\"[a[-1]!=b[0] or b[-1]!=c[0]::2])\n```\n "
    },
    {
        "user_id": "u551692187",
        "problem_id": "p03080",
        "submission1_id": "s983692053",
        "crp_content": "\n N = int(input())\n-s = input().split()\n-print('Yes') if s.count('R') * 2 > N else print('No')\n",
        "origin_generated_text": "\n```\n N = int(input())\n-s = input().split()\n-print('Yes') if s.count('R') * 2 > N else print('No')\n```\n "
    },
    {
        "user_id": "u882858304",
        "problem_id": "p02912",
        "submission1_id": "s146421644",
        "crp_content": "\n N,M=[int(i) for i in input().split()]\n A = [int(i) for i in input().split()]\n for i in range(M):\n   l=A.index(max(A))\n-  A[l]\n print(sum(A))\n",
        "origin_generated_text": "\n```\n N,M=[int(i) for i in input().split()]\n A = [int(i) for i in input().split()]\n for i in range(M):\n   l=A.index(max(A))\n-  A[l]\n print(sum(A))\n```\n "
    },
    {
        "user_id": "u197038614",
        "problem_id": "p02922",
        "submission1_id": "s733909107",
        "crp_content": "\n a, b = map(int, input().split())\n \n if a >= b:\n     print(1)\n     exit()\n     \n x = 2 * a - 1\n \n for i in range(2, a + 1):\n     if x >= b:\n         print(i)\n         exit()\n     x = x + a - 1\n \n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n \n if a >= b:\n     print(1)\n     exit()\n     \n x = 2 * a - 1\n \n for i in range(2, a + 1):\n     if x >= b:\n         print(i)\n         exit()\n     x = x + a - 1\n \n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s683336349",
        "crp_content": "\n i = input().split()\n if int (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n",
        "origin_generated_text": "\n```\n i = input().split()\n if int (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n```\n "
    },
    {
        "user_id": "u086172144",
        "problem_id": "p03041",
        "submission1_id": "s725342659",
        "crp_content": "\n N, K = list(map(int, input().split()))\n S = input()\n-print(S.replace(S[K - 1], S[K - 1].lower()))\n \n",
        "origin_generated_text": "\n```\n N, K = list(map(int, input().split()))\n S = input()\n-print(S.replace(S[K - 1], S[K - 1].lower()))\n \n```\n "
    },
    {
        "user_id": "u191874006",
        "problem_id": "p03054",
        "submission1_id": "s949234637",
        "crp_content": "\n \n \n \n import sys\n import math\n from bisect import bisect_right as br\n from bisect import bisect_left as bl\n sys.setrecursionlimit(1000000000)\n from heapq import heappush, heappop,heappushpop\n from collections import defaultdict\n from itertools import accumulate\n from collections import Counter\n from collections import deque\n from operator import itemgetter\n from itertools import permutations\n mod = 10**9 + 7\n inf = float('inf')\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n \n h,w,n = LI()\n sr,sc = LI()\n sr -= 1\n sc -= 1\n h -= 1\n w -= 1\n s = input()\n t = input()\n-l,r,d,u = 0,w,h,0\n for i in range(n)[::-1]:\n     if t[i] == 'R':\n         if l > 0:\n             l -= 1\n     elif t[i] == 'L':\n         if r < w:\n             r += 1\n     elif t[i] == 'U':\n         if u < h:\n             d -= 1\n     elif t[i] == 'D':\n         if d > 0:\n             u += 1\n     if s[i] == 'R':\n         r -= 1\n         if r < 0:\n             print('NO')\n             quit()\n     elif s[i] == 'L':\n         l += 1\n         if l > w:\n             print('NO')\n             quit()\n     elif s[i] == 'U':\n         u += 1\n         if u > h:\n             print('NO')\n             quit()\n     elif s[i] == 'D':\n         d -= 1\n         if d < 0:\n             print('NO')\n             quit()\n     \n-if l <= sc <= r and u <= sr <= d:\n     print('YES')\n else:\n     print('NO')\n             \n",
        "origin_generated_text": "\n```\n \n \n \n import sys\n import math\n from bisect import bisect_right as br\n from bisect import bisect_left as bl\n sys.setrecursionlimit(1000000000)\n from heapq import heappush, heappop,heappushpop\n from collections import defaultdict\n from itertools import accumulate\n from collections import Counter\n from collections import deque\n from operator import itemgetter\n from itertools import permutations\n mod = 10**9 + 7\n inf = float('inf')\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n \n h,w,n = LI()\n sr,sc = LI()\n sr -= 1\n sc -= 1\n h -= 1\n w -= 1\n s = input()\n t = input()\n-l,r,d,u = 0,w,h,0\n for i in range(n)[::-1]:\n     if t[i] == 'R':\n         if l > 0:\n             l -= 1\n     elif t[i] == 'L':\n         if r < w:\n             r += 1\n     elif t[i] == 'U':\n         if u < h:\n             d -= 1\n     elif t[i] == 'D':\n         if d > 0:\n             u += 1\n     if s[i] == 'R':\n         r -= 1\n         if r < 0:\n             print('NO')\n             quit()\n     elif s[i] == 'L':\n         l += 1\n         if l > w:\n             print('NO')\n             quit()\n     elif s[i] == 'U':\n         u += 1\n         if u > h:\n             print('NO')\n             quit()\n     elif s[i] == 'D':\n         d -= 1\n         if d < 0:\n             print('NO')\n             quit()\n     \n-if l <= sc <= r and u <= sr <= d:\n     print('YES')\n else:\n     print('NO')\n             \n```\n "
    },
    {
        "user_id": "u203261375",
        "problem_id": "p00026",
        "submission1_id": "s724596557",
        "crp_content": "\n area = [[0 for i in range(10)] for j in range(10)]\n \n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n \n     if s == 3:\n         if (0 <= x+2 <= 9) and (0 <= y <= 9):\n             area[x+2][y] += 1\n         if (0 <= x <= 9) and (0 <= y+2 <= 9):\n             area[x][y+2] += 1\n         if (0 <= x-2 <= 9) and (0 <= y <= 9):\n             area[x-2][y] += 1\n         if (0 <= x <= 9) and (0 <= y-2 <= 9):\n             area[x][y-2] += 1\n     if s >= 2:\n         if (0 <= x+1 <= 9) and (0 <= y+1 <= 9):\n             area[x+1][y+1] += 1\n         if (0 <= x+1 <= 9) and (0 <= y-1 <= 9):\n             area[x+1][y-1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y+1 <= 9):\n             area[x-1][y+1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y-1 <= 9):\n             area[x-1][y-1] += 1\n     if s >= 1:\n         if (0 <= x+1 <= 9) and (0 <= y <= 9):\n             area[x+1][y] += 1\n         if (0 <= x <= 9) and (0 <= y+1 <= 9):\n             area[x][y+1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y <= 9):\n             area[x-1][y] += 1\n         if (0 <= x <= 9) and (0 <= y-1 <= 9):\n             area[x][y-1] += 1\n         area[x][y] += 1\n-        print(area)\n \n max = 0\n cnt = 0\n \n for i in range(10):\n     for j in range(10):\n         if area[i][j] == 0:\n             cnt += 1\n         if area[i][j] > max:\n             max = area[i][j]\n print(cnt)\n print(max)\n",
        "origin_generated_text": "\n```\n area = [[0 for i in range(10)] for j in range(10)]\n \n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n \n     if s == 3:\n         if (0 <= x+2 <= 9) and (0 <= y <= 9):\n             area[x+2][y] += 1\n         if (0 <= x <= 9) and (0 <= y+2 <= 9):\n             area[x][y+2] += 1\n         if (0 <= x-2 <= 9) and (0 <= y <= 9):\n             area[x-2][y] += 1\n         if (0 <= x <= 9) and (0 <= y-2 <= 9):\n             area[x][y-2] += 1\n     if s >= 2:\n         if (0 <= x+1 <= 9) and (0 <= y+1 <= 9):\n             area[x+1][y+1] += 1\n         if (0 <= x+1 <= 9) and (0 <= y-1 <= 9):\n             area[x+1][y-1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y+1 <= 9):\n             area[x-1][y+1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y-1 <= 9):\n             area[x-1][y-1] += 1\n     if s >= 1:\n         if (0 <= x+1 <= 9) and (0 <= y <= 9):\n             area[x+1][y] += 1\n         if (0 <= x <= 9) and (0 <= y+1 <= 9):\n             area[x][y+1] += 1\n         if (0 <= x-1 <= 9) and (0 <= y <= 9):\n             area[x-1][y] += 1\n         if (0 <= x <= 9) and (0 <= y-1 <= 9):\n             area[x][y-1] += 1\n         area[x][y] += 1\n-        print(area)\n \n max = 0\n cnt = 0\n \n for i in range(10):\n     for j in range(10):\n         if area[i][j] == 0:\n             cnt += 1\n         if area[i][j] > max:\n             max = area[i][j]\n print(cnt)\n print(max)\n```\n "
    },
    {
        "user_id": "u504836877",
        "problem_id": "p03480",
        "submission1_id": "s025879284",
        "crp_content": "\n S = input()\n \n N = len(S)\n L = []\n temp = S[0]\n c = 1\n for i in range(1, N-1):\n     if S[i] == temp:\n         c += 1\n     else:\n         L.append(c)\n         c = 1\n         temp = S[i]\n if S[N-1] == temp:\n     c += 1\n else:\n     L.append(c)\n     c = 1\n L.append(c)\n \n ans = N\n while len(L) >= 3:\n     if L[0] > L[-1]:\n         ans = min(ans, N-L[-1])\n         L[1] += L[0]\n         L.pop(0)\n     else:\n         ans = min(ans, N-L[0])\n         L[-2] += L[-1]\n         L.pop(-1)\n         \n if len(L) == 2:\n     ans = min(ans, max(L))\n     \n print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n \n N = len(S)\n L = []\n temp = S[0]\n c = 1\n for i in range(1, N-1):\n     if S[i] == temp:\n         c += 1\n     else:\n         L.append(c)\n         c = 1\n         temp = S[i]\n if S[N-1] == temp:\n     c += 1\n else:\n     L.append(c)\n     c = 1\n L.append(c)\n \n ans = N\n while len(L) >= 3:\n     if L[0] > L[-1]:\n         ans = min(ans, N-L[-1])\n         L[1] += L[0]\n         L.pop(0)\n     else:\n         ans = min(ans, N-L[0])\n         L[-2] += L[-1]\n         L.pop(-1)\n         \n if len(L) == 2:\n     ans = min(ans, max(L))\n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u798803522",
        "problem_id": "p02281",
        "submission1_id": "s861790031",
        "crp_content": "\n from collections import defaultdict\n def preorder(here, conn, chain):\n     if here == -1:\n         return\n     chain.append(here)\n     if conn[here]:\n         preorder(conn[here][0], conn, chain)\n         preorder(conn[here][1], conn, chain)\n \n def inorder(here, conn, chain):\n     if here == -1:\n         return\n     if conn[here]:\n         inorder(conn[here][0], conn, chain)\n         chain.append(here)\n         inorder(conn[here][1], conn, chain)\n \n def postorder(here, conn, chain):\n     if here == -1:\n         return\n     if conn[here]:\n         postorder(conn[here][0], conn, chain)\n         postorder(conn[here][1], conn, chain)\n     chain.append(here)\n \n query = int(input())\n connect = defaultdict(list)\n for _ in range(query):\n     here, left, right = (int(n) for n in input().split(\" \"))\n     connect[here] = [left, right]\n preo = []\n ino = []\n posto = []\n preorder(0, connect, preo)\n inorder(0, connect, ino)\n postorder(0, connect, posto)\n \n print(\"Preorder\")\n print(*preo)\n print(\"Inorder\")\n print(*ino)\n print(\"Postorder\")\n print(*posto)\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n def preorder(here, conn, chain):\n     if here == -1:\n         return\n     chain.append(here)\n     if conn[here]:\n         preorder(conn[here][0], conn, chain)\n         preorder(conn[here][1], conn, chain)\n \n def inorder(here, conn, chain):\n     if here == -1:\n         return\n     if conn[here]:\n         inorder(conn[here][0], conn, chain)\n         chain.append(here)\n         inorder(conn[here][1], conn, chain)\n \n def postorder(here, conn, chain):\n     if here == -1:\n         return\n     if conn[here]:\n         postorder(conn[here][0], conn, chain)\n         postorder(conn[here][1], conn, chain)\n     chain.append(here)\n \n query = int(input())\n connect = defaultdict(list)\n for _ in range(query):\n     here, left, right = (int(n) for n in input().split(\" \"))\n     connect[here] = [left, right]\n preo = []\n ino = []\n posto = []\n preorder(0, connect, preo)\n inorder(0, connect, ino)\n postorder(0, connect, posto)\n \n print(\"Preorder\")\n print(*preo)\n print(\"Inorder\")\n print(*ino)\n print(\"Postorder\")\n print(*posto)\n```\n "
    },
    {
        "user_id": "u347640436",
        "problem_id": "p03036",
        "submission1_id": "s771881374",
        "crp_content": "\n r, d, x = map(int, input().split())\n for _ in range(10):\n   x = r * x -d\n-print(x)\n \n",
        "origin_generated_text": "\n```\n r, d, x = map(int, input().split())\n for _ in range(10):\n   x = r * x -d\n-print(x)\n \n```\n "
    },
    {
        "user_id": "u251252118",
        "problem_id": "p03272",
        "submission1_id": "s164925485",
        "crp_content": "\n A = [int(i) for i in input().split(\" \")]\n-ans = A[0] + A[1] -1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n A = [int(i) for i in input().split(\" \")]\n-ans = A[0] + A[1] -1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u414376763",
        "problem_id": "p02640",
        "submission1_id": "s672365936",
        "crp_content": "\n x,y = list(map(int,input().split()))\n \n-if ((4 * x) - y) % 2 == 0 and y >= 2 * x and  y >= 4 * x:\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n x,y = list(map(int,input().split()))\n \n-if ((4 * x) - y) % 2 == 0 and y >= 2 * x and  y >= 4 * x:\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s932436861",
        "crp_content": "\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int, i.split(\",\")))\n         mas[y][x] += 1\n         for k,l in eval(\"n\"+str(a)):\n             try:\n                 if y+l>= 0 and x+k >= 0:\n                     mas[y+l][x+k] += 1\n             except IndexError:\n                 continue\n     except ValueError:\n         break\n-print(mas)\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n",
        "origin_generated_text": "\n```\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int, i.split(\",\")))\n         mas[y][x] += 1\n         for k,l in eval(\"n\"+str(a)):\n             try:\n                 if y+l>= 0 and x+k >= 0:\n                     mas[y+l][x+k] += 1\n             except IndexError:\n                 continue\n     except ValueError:\n         break\n-print(mas)\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02727",
        "submission1_id": "s276697937",
        "crp_content": "\n x,y,a,b,c = map(int,input().split())\n pl = list(map(int,input().split()))\n ql = list(map(int,input().split()))\n rl = list(map(int,input().split()))\n \n-pp = sorted(pl,reverse=True)[:x-1]\n-qq = sorted(pl,reverse=True)[:y-1]\n-all = pp + qq + rl\n-print(sum(sorted(pl,reverse=True)[:x+y-1]))\n",
        "origin_generated_text": "\n```\n x,y,a,b,c = map(int,input().split())\n pl = list(map(int,input().split()))\n ql = list(map(int,input().split()))\n rl = list(map(int,input().split()))\n \n-pp = sorted(pl,reverse=True)[:x-1]\n-qq = sorted(pl,reverse=True)[:y-1]\n-all = pp + qq + rl\n-print(sum(sorted(pl,reverse=True)[:x+y-1]))\n```\n "
    },
    {
        "user_id": "u631277801",
        "problem_id": "p03096",
        "submission1_id": "s979855017",
        "crp_content": "\n import sys\n stdin = sys.stdin\n  \n sys.setrecursionlimit(10**5) \n  \n def li(): return map(int, stdin.readline().split())\n def li_(): return map(lambda x: int(x)-1, stdin.readline().split())\n def lf(): return map(float, stdin.readline().split())\n def ls(): return stdin.readline().split()\n def ns(): return stdin.readline().rstrip()\n def lc(): return list(ns())\n def ni(): return int(stdin.readline())\n def nf(): return float(stdin.readline())\n \n from collections import Counter, defaultdict\n \n def compress(s):\n     ret = []\n     for i, si in enumerate(s):\n         if i == 0:\n             ret.append(si)\n         else:\n             if si == ret[-1]:\n                 continue\n             else:\n                 ret.append(si)\n                 \n     return ret\n \n def removeonly1(s):\n     cnt = Counter(s)\n     ret = []\n     \n     for si in s:\n         if cnt[si] == 1:\n             continue\n         else:\n             ret.append(si)\n             \n     return ret\n \n n = ni()\n c = [ni() for _ in range(n)]\n MOD = 10**9+7\n \n colors = removeonly1(compress(c))\n \n \n dp = [0 for _ in range(len(colors)+1)]\n \n dp[0] = 1\n idxs = defaultdict(list)\n \n for i, ci in enumerate(colors):\n     dp[i+1] = dp[i]\n     \n     if ci in idxs.keys():\n         dp[i+1] += dp[idxs[ci][-1]]\n         dp[i+1] %= MOD\n         \n     idxs[ci].append(i)\n         \n print(dp[len(colors)])\n",
        "origin_generated_text": "\n```\n import sys\n stdin = sys.stdin\n  \n sys.setrecursionlimit(10**5) \n  \n def li(): return map(int, stdin.readline().split())\n def li_(): return map(lambda x: int(x)-1, stdin.readline().split())\n def lf(): return map(float, stdin.readline().split())\n def ls(): return stdin.readline().split()\n def ns(): return stdin.readline().rstrip()\n def lc(): return list(ns())\n def ni(): return int(stdin.readline())\n def nf(): return float(stdin.readline())\n \n from collections import Counter, defaultdict\n \n def compress(s):\n     ret = []\n     for i, si in enumerate(s):\n         if i == 0:\n             ret.append(si)\n         else:\n             if si == ret[-1]:\n                 continue\n             else:\n                 ret.append(si)\n                 \n     return ret\n \n def removeonly1(s):\n     cnt = Counter(s)\n     ret = []\n     \n     for si in s:\n         if cnt[si] == 1:\n             continue\n         else:\n             ret.append(si)\n             \n     return ret\n \n n = ni()\n c = [ni() for _ in range(n)]\n MOD = 10**9+7\n \n colors = removeonly1(compress(c))\n \n \n dp = [0 for _ in range(len(colors)+1)]\n \n dp[0] = 1\n idxs = defaultdict(list)\n \n for i, ci in enumerate(colors):\n     dp[i+1] = dp[i]\n     \n     if ci in idxs.keys():\n         dp[i+1] += dp[idxs[ci][-1]]\n         dp[i+1] %= MOD\n         \n     idxs[ci].append(i)\n         \n print(dp[len(colors)])\n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03573",
        "submission1_id": "s142784696",
        "crp_content": "\n a, b, c = map(int, input().split())\n \n-if a == b or a == c:\n     print(a)\n else:\n     print(b)\n \n",
        "origin_generated_text": "\n```\n a, b, c = map(int, input().split())\n \n-if a == b or a == c:\n     print(a)\n else:\n     print(b)\n \n```\n "
    },
    {
        "user_id": "u047796752",
        "problem_id": "p03677",
        "submission1_id": "s058865173",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n from heapq import *\n \n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n a = list(map(lambda x: x-1, a))\n lr = []\n cnt = 0\n \n for i in range(n-1):\n     ai, aj = a[i], a[i+1]\n     \n     if ai<aj:\n         lr.append((ai, aj))\n         cnt += aj-ai\n     else:\n         lr.append((ai-m, aj))\n         lr.append((ai, m-1))\n         cnt += m+aj-ai\n     \n lr.sort(key=lambda t: t[0])\n idx = 0\n ans = cnt\n decre = 0\n pq = []\n \n for i in range(m):\n     while len(pq)>0 and pq[0][0]<i:\n         r, l = heappop(pq)\n         decre -= r-l\n         \n     while idx<len(lr) and i>=lr[idx][0]:\n         decre += i-lr[idx][0]-1\n         heappush(pq, (lr[idx][1], lr[idx][0]))\n         idx += 1\n     \n     ans = min(ans, cnt-decre)\n     decre += len(pq)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n from heapq import *\n \n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n a = list(map(lambda x: x-1, a))\n lr = []\n cnt = 0\n \n for i in range(n-1):\n     ai, aj = a[i], a[i+1]\n     \n     if ai<aj:\n         lr.append((ai, aj))\n         cnt += aj-ai\n     else:\n         lr.append((ai-m, aj))\n         lr.append((ai, m-1))\n         cnt += m+aj-ai\n     \n lr.sort(key=lambda t: t[0])\n idx = 0\n ans = cnt\n decre = 0\n pq = []\n \n for i in range(m):\n     while len(pq)>0 and pq[0][0]<i:\n         r, l = heappop(pq)\n         decre -= r-l\n         \n     while idx<len(lr) and i>=lr[idx][0]:\n         decre += i-lr[idx][0]-1\n         heappush(pq, (lr[idx][1], lr[idx][0]))\n         idx += 1\n     \n     ans = min(ans, cnt-decre)\n     decre += len(pq)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u835482198",
        "problem_id": "p03087",
        "submission1_id": "s672417494",
        "crp_content": "\n n, q = map(int, input().split())\n s = input()\n \n ac = [0 for i in range(n)]\n for i in range(1, n):\n     if s[i - 1] == 'A' and s[i] == 'C':\n         ac[i] = 1\n \n for i in range(n - 1):\n     ac[i + 1] += ac[i]\n-print(ac)\n for i in range(q):\n     l, r = map(int, input().split())\n     l -= 1\n     r -= 1\n     ret = ac[r] - ac[l]\n     print(ret)\n \n",
        "origin_generated_text": "\n```\n n, q = map(int, input().split())\n s = input()\n \n ac = [0 for i in range(n)]\n for i in range(1, n):\n     if s[i - 1] == 'A' and s[i] == 'C':\n         ac[i] = 1\n \n for i in range(n - 1):\n     ac[i + 1] += ac[i]\n-print(ac)\n for i in range(q):\n     l, r = map(int, input().split())\n     l -= 1\n     r -= 1\n     ret = ac[r] - ac[l]\n     print(ret)\n \n```\n "
    },
    {
        "user_id": "u640922335",
        "problem_id": "p03752",
        "submission1_id": "s523784677",
        "crp_content": "\n N,K=map(int,input().split())\n A=list(map(int,input().split()))\n ans=[]\n \n for i in range(2**(N-1)):\n     limit=A[0]\n     L=[0]*(N-1)\n     total=0\n     count=0\n     for j in range(N-1):\n         if ((i>>j)&1):\n             L[j]=1\n             count+=1\n     if count>=K-1:\n         for m in range(N-1):\n             if L[m]==1:\n                 height=max(max(A[:m+1])+1,A[m+1])\n                 total+=height-A[m+1]\n                 A[m+1]=height\n         ans.append(total)\n \n print(min(ans))\n",
        "origin_generated_text": "\n```\n N,K=map(int,input().split())\n A=list(map(int,input().split()))\n ans=[]\n \n for i in range(2**(N-1)):\n     limit=A[0]\n     L=[0]*(N-1)\n     total=0\n     count=0\n     for j in range(N-1):\n         if ((i>>j)&1):\n             L[j]=1\n             count+=1\n     if count>=K-1:\n         for m in range(N-1):\n             if L[m]==1:\n                 height=max(max(A[:m+1])+1,A[m+1])\n                 total+=height-A[m+1]\n                 A[m+1]=height\n         ans.append(total)\n \n print(min(ans))\n```\n "
    },
    {
        "user_id": "u919025034",
        "problem_id": "p03274",
        "submission1_id": "s834465510",
        "crp_content": "\n N,K=map(int,input().split())\n X=list(map(int,input().split()))\n if N==1:\n   print(0);exit()\n \n ans=float(\"Inf\")\n-for i in range(N-K):\n-  ans=min(ans, X[i+K-1]-X[i]+ min(abs(X[i+K-1]),abs(X[i]))  )\n \n print(ans)\n   \n",
        "origin_generated_text": "\n```\n N,K=map(int,input().split())\n X=list(map(int,input().split()))\n if N==1:\n   print(0);exit()\n \n ans=float(\"Inf\")\n-for i in range(N-K):\n-  ans=min(ans, X[i+K-1]-X[i]+ min(abs(X[i+K-1]),abs(X[i]))  )\n \n print(ans)\n   \n```\n "
    },
    {
        "user_id": "u336828547",
        "problem_id": "p02553",
        "submission1_id": "s834435282",
        "crp_content": "\n a,b,c,d=map(int,input().split( ))\n-print(max(a*d,b*c,c*d,b*d))\n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int,input().split( ))\n-print(max(a*d,b*c,c*d,b*d))\n```\n "
    },
    {
        "user_id": "u991542950",
        "problem_id": "p02553",
        "submission1_id": "s816912975",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n-print(max(a, b) * max(c, d))\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n-print(max(a, b) * max(c, d))\n```\n "
    },
    {
        "user_id": "u952467214",
        "problem_id": "p03054",
        "submission1_id": "s243999044",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10 ** 7)\n input = sys.stdin.readline\n \n h, w,n = map(int, input().split())\n r,c = map(int, input().split())\n s = input() \n t = input() \n \n toL = c\n toR = w-c+1\n toU = r\n toD = h-r+1\n \n \n cntR=0\n for i in range(n):\n     if s[i] == 'R' : cntR+=1\n     if cntR == toR:\n         print('NO')\n         exit()\n     if t[i] == 'L' and cntR>0 : cntR-=1\n \n \n cntL = 0\n for i in range(n):\n     if s[i] == 'L' : cntL+=1\n     if cntL == toL:\n         print('NO')\n         exit()\n     if t[i] == 'R' and cntL>0: cntL-=1\n \n \n cntU = 0\n for i in range(n):\n     if s[i] == 'U' : cntU+=1\n     if cntU == toU:\n         print('NO')\n         exit()\n     if t[i] == 'D' and cntU>0: cntU-=1\n \n \n cntD = 0\n for i in range(n):\n     if s[i] == 'D' : cntD+=1\n     if cntD == toD:\n         print('NO')\n         exit()\n     if t[i] == 'U' and cntD>0: cntD-=1\n \n \n-print('YES')\n \n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10 ** 7)\n input = sys.stdin.readline\n \n h, w,n = map(int, input().split())\n r,c = map(int, input().split())\n s = input() \n t = input() \n \n toL = c\n toR = w-c+1\n toU = r\n toD = h-r+1\n \n \n cntR=0\n for i in range(n):\n     if s[i] == 'R' : cntR+=1\n     if cntR == toR:\n         print('NO')\n         exit()\n     if t[i] == 'L' and cntR>0 : cntR-=1\n \n \n cntL = 0\n for i in range(n):\n     if s[i] == 'L' : cntL+=1\n     if cntL == toL:\n         print('NO')\n         exit()\n     if t[i] == 'R' and cntL>0: cntL-=1\n \n \n cntU = 0\n for i in range(n):\n     if s[i] == 'U' : cntU+=1\n     if cntU == toU:\n         print('NO')\n         exit()\n     if t[i] == 'D' and cntU>0: cntU-=1\n \n \n cntD = 0\n for i in range(n):\n     if s[i] == 'D' : cntD+=1\n     if cntD == toD:\n         print('NO')\n         exit()\n     if t[i] == 'U' and cntD>0: cntD-=1\n \n \n-print('YES')\n \n```\n "
    },
    {
        "user_id": "u489959379",
        "problem_id": "p02912",
        "submission1_id": "s978767979",
        "crp_content": "\n import heapq\n import math\n \n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n q = []\n heapq.heapify(q)\n \n for i in range(n):\n     heapq.heappush(q, -a[i])\n \n for _ in range(m):\n     b = heapq.heappop(q) / 2\n     heapq.heappush(q, b)\n \n-print(math.floor(sum(q) * -1))\n \n",
        "origin_generated_text": "\n```\n import heapq\n import math\n \n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n q = []\n heapq.heapify(q)\n \n for i in range(n):\n     heapq.heappush(q, -a[i])\n \n for _ in range(m):\n     b = heapq.heappop(q) / 2\n     heapq.heappush(q, b)\n \n-print(math.floor(sum(q) * -1))\n \n```\n "
    },
    {
        "user_id": "u054514819",
        "problem_id": "p02730",
        "submission1_id": "s707271416",
        "crp_content": "\n S = input()\n def check(s):\n   return s[:int((len(s)-1)/2+1)]==s[int((len(s)-1)/2):][::-1]\n-if check(S) and check(S[:int((len(S)-1)/2+1)]) and check(S[int((len(S)+3)/2):]):\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n S = input()\n def check(s):\n   return s[:int((len(s)-1)/2+1)]==s[int((len(s)-1)/2):][::-1]\n-if check(S) and check(S[:int((len(S)-1)/2+1)]) and check(S[int((len(S)+3)/2):]):\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u476199965",
        "problem_id": "p03972",
        "submission1_id": "s916800039",
        "crp_content": "\n w,h = list(map(int,input().split()))\n pq = []\n for i in range(w):\n     pq.append((int(input()),0))\n for i in range(h):\n     pq.append((int(input()),1))\n pq.sort()\n res = 0\n w+=1\n h+=1\n dic = {0:w,1:h}\n \n for x in pq:\n-    print(dic[x[1]],x[0])\n     res += dic[1-x[1]]*x[0]\n     dic[x[1]] -= 1\n \n print(res)\n \n",
        "origin_generated_text": "\n```\n w,h = list(map(int,input().split()))\n pq = []\n for i in range(w):\n     pq.append((int(input()),0))\n for i in range(h):\n     pq.append((int(input()),1))\n pq.sort()\n res = 0\n w+=1\n h+=1\n dic = {0:w,1:h}\n \n for x in pq:\n-    print(dic[x[1]],x[0])\n     res += dic[1-x[1]]*x[0]\n     dic[x[1]] -= 1\n \n print(res)\n \n```\n "
    },
    {
        "user_id": "u368016155",
        "problem_id": "p03023",
        "submission1_id": "s649095289",
        "crp_content": "\n N = int(input())\n-print(180*(N-1))\n",
        "origin_generated_text": "\n```\n N = int(input())\n-print(180*(N-1))\n```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p02665",
        "submission1_id": "s589490096",
        "crp_content": "\n import sys\n from math import factorial\n from collections import Counter\n from fractions import Fraction\n import heapq, bisect, fractions\n import math\n import itertools\n sys.setrecursionlimit(10 ** 5 + 10)\n INF = 10**15 +5\n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n MOD = 10**9 + 7\n \n n = INT()\n a = LIST()\n if a[0]>0:\n     print(1)\n     sys.exit()\n c = [1]*(n+1)\n for i in range(1, n+1):\n     c[i] = (c[i-1]-a[i-1])*2\n if a[n]>c[n]:\n     print(-1)\n     sys.exit()\n b = [0]*(n+1)\n res = [0]*(n+1)\n b[n] = a[n]\n res[n] = a[n]\n for i in range(n-1, -1, -1):\n     if (c[i]-a[i])*2 <res[i+1]:\n         print(-1)\n         sys.exit()\n     b[i] = min(c[i]-a[i], res[i+1])\n     res[i] = a[i] + b[i]\n print(sum(res))    \n",
        "origin_generated_text": "\n```\n import sys\n from math import factorial\n from collections import Counter\n from fractions import Fraction\n import heapq, bisect, fractions\n import math\n import itertools\n sys.setrecursionlimit(10 ** 5 + 10)\n INF = 10**15 +5\n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n MOD = 10**9 + 7\n \n n = INT()\n a = LIST()\n if a[0]>0:\n     print(1)\n     sys.exit()\n c = [1]*(n+1)\n for i in range(1, n+1):\n     c[i] = (c[i-1]-a[i-1])*2\n if a[n]>c[n]:\n     print(-1)\n     sys.exit()\n b = [0]*(n+1)\n res = [0]*(n+1)\n b[n] = a[n]\n res[n] = a[n]\n for i in range(n-1, -1, -1):\n     if (c[i]-a[i])*2 <res[i+1]:\n         print(-1)\n         sys.exit()\n     b[i] = min(c[i]-a[i], res[i+1])\n     res[i] = a[i] + b[i]\n print(sum(res))    \n```\n "
    },
    {
        "user_id": "u638057737",
        "problem_id": "p03625",
        "submission1_id": "s463672501",
        "crp_content": "\n N = int(input())\n freq = {}\n arr = map(int,input().split())\n for i in arr:\n     try:\n         freq[i] += 1\n     except KeyError:\n         freq[i] = 1\n \n to_multiply = []      \n for i in sorted(freq.keys(),reverse=True):\n     if freq[i] >= 2:\n         to_multiply.append(i)\n if len(to_multiply) >= 2:\n     print(to_multiply[0] * to_multiply[1])\n else:\n     print(\"0\")\n         \n \n",
        "origin_generated_text": "\n```\n N = int(input())\n freq = {}\n arr = map(int,input().split())\n for i in arr:\n     try:\n         freq[i] += 1\n     except KeyError:\n         freq[i] = 1\n \n to_multiply = []      \n for i in sorted(freq.keys(),reverse=True):\n     if freq[i] >= 2:\n         to_multiply.append(i)\n if len(to_multiply) >= 2:\n     print(to_multiply[0] * to_multiply[1])\n else:\n     print(\"0\")\n         \n \n```\n "
    },
    {
        "user_id": "u955251526",
        "problem_id": "p03096",
        "submission1_id": "s769041533",
        "crp_content": "\n n = int(input())\n z = []\n pre = 0\n for _ in range(n):\n     i = int(input())\n     if i != pre:\n         z.append(i)\n     pre = i\n n = len(z)\n dp = [1] * (n+1)\n dpp = [0] * 2 * 10 ** 5\n for i in range(n):\n     dp[i+1] = dp[i] + dpp[z[i]-1]\n     dpp[z[i]-1] += dp[i+1]\n     dp[i+1] %= 10 ** 9 + 7\n-print(dp[n])\n",
        "origin_generated_text": "\n```\n n = int(input())\n z = []\n pre = 0\n for _ in range(n):\n     i = int(input())\n     if i != pre:\n         z.append(i)\n     pre = i\n n = len(z)\n dp = [1] * (n+1)\n dpp = [0] * 2 * 10 ** 5\n for i in range(n):\n     dp[i+1] = dp[i] + dpp[z[i]-1]\n     dpp[z[i]-1] += dp[i+1]\n     dp[i+1] %= 10 ** 9 + 7\n-print(dp[n])\n```\n "
    },
    {
        "user_id": "u983918956",
        "problem_id": "p03959",
        "submission1_id": "s007367178",
        "crp_content": "\n mod = 10 ** 9 + 7\n \n N = int(input())\n T = [0] + list(map(int, input().split()))\n A = list(map(int, input().split())) + [0]\n \n H = [0] * N\n for i in range(1, N + 1):\n     if T[i - 1] < T[i]:\n         H[i - 1] = T[i]\n for i in range(N - 1, -1, -1):\n     if A[i + 1] < A[i]:\n         if H[i] == 0 or H[i] == A[i]:\n             H[i] = A[i]\n         else:\n             print(0)\n             exit()\n \n ans = 1\n T.pop(0)\n A.pop(-1)\n for h, t, a in zip(H, T, A):\n     if h == 0:\n         ans *= min(t, a)\n         ans %= mod\n print(ans)\n",
        "origin_generated_text": "\n```\n mod = 10 ** 9 + 7\n \n N = int(input())\n T = [0] + list(map(int, input().split()))\n A = list(map(int, input().split())) + [0]\n \n H = [0] * N\n for i in range(1, N + 1):\n     if T[i - 1] < T[i]:\n         H[i - 1] = T[i]\n for i in range(N - 1, -1, -1):\n     if A[i + 1] < A[i]:\n         if H[i] == 0 or H[i] == A[i]:\n             H[i] = A[i]\n         else:\n             print(0)\n             exit()\n \n ans = 1\n T.pop(0)\n A.pop(-1)\n for h, t, a in zip(H, T, A):\n     if h == 0:\n         ans *= min(t, a)\n         ans %= mod\n print(ans)\n```\n "
    },
    {
        "user_id": "u094103573",
        "problem_id": "p02730",
        "submission1_id": "s188723257",
        "crp_content": "\n if __name__ == '__main__':\n     a = input()\n     a_len = len(a)\n     \n     top_s = a[:int((a_len-1)/2)]\n-    tail_s = a[int((a_len+3)/2)-1:]\n-    if top_s == ''.join(list(reversed(top_s))) and tail_s == ''.join(list(reversed(tail_s))):\n         print('Yes')\n     else:\n         print('No')\n",
        "origin_generated_text": "\n```\n if __name__ == '__main__':\n     a = input()\n     a_len = len(a)\n     \n     top_s = a[:int((a_len-1)/2)]\n-    tail_s = a[int((a_len+3)/2)-1:]\n-    if top_s == ''.join(list(reversed(top_s))) and tail_s == ''.join(list(reversed(tail_s))):\n         print('Yes')\n     else:\n         print('No')\n```\n "
    },
    {
        "user_id": "u952669998",
        "problem_id": "p02727",
        "submission1_id": "s014410933",
        "crp_content": "\n x,y,a,b,c= list(map(int,input().split()))\n \n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n p.sort()\n q.sort()\n r.sort()\n \n-t=p[0:x] + q[0:y] + r\n-t.sort()\n-print(sum(t[0:(x+y)]))\n",
        "origin_generated_text": "\n```\n x,y,a,b,c= list(map(int,input().split()))\n \n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n p.sort()\n q.sort()\n r.sort()\n \n-t=p[0:x] + q[0:y] + r\n-t.sort()\n-print(sum(t[0:(x+y)]))\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s663117803",
        "crp_content": "\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i < 0 or j < 0 or k < 0 or i < j:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i < 0 or j < 0 or k < 0 or i < j:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n```\n "
    },
    {
        "user_id": "u373723818",
        "problem_id": "p03036",
        "submission1_id": "s000581732",
        "crp_content": "\n r, D, x_2000= map(int, input().split(' '))\n xs = [x_2000]\n for x in range(10):\n-\txs.append(r*xs[len(xs)-1]-D)\n print('\\n'.join(map(str, xs)))\n",
        "origin_generated_text": "\n```\n r, D, x_2000= map(int, input().split(' '))\n xs = [x_2000]\n for x in range(10):\n-\txs.append(r*xs[len(xs)-1]-D)\n print('\\n'.join(map(str, xs)))\n```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s847892407",
        "crp_content": "\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1,1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int,i.split(\",\")))\n-        mas[y][x] += 1\n         for j in eval(\"n\"+str(a)):\n             try:\n                 mas[y+j[1]][x+j[0]] += 1\n             except IndexError:\n                 continue\n     except:\n         break\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n",
        "origin_generated_text": "\n```\n import sys\n n1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\n n2 = n1 + [[a, b] for a in [-1,1] for b in [-1, 1]]\n n3 = n2 + [[a*2, b*2] for a, b in n1]\n mas = [[0]*10 for i in range(10)]\n for i in sys.stdin:\n     try:\n         x, y, a = list(map(int,i.split(\",\")))\n-        mas[y][x] += 1\n         for j in eval(\"n\"+str(a)):\n             try:\n                 mas[y+j[1]][x+j[0]] += 1\n             except IndexError:\n                 continue\n     except:\n         break\n print(len([i for x in mas for i in x if not i]))\n print(max([max(v) for v in mas]))\n```\n "
    },
    {
        "user_id": "u641357568",
        "problem_id": "p02407",
        "submission1_id": "s674775211",
        "crp_content": "\n import sys\n \n length = int(sys.stdin.readline())\n num_seq = [ int(num) for num in sys.stdin.readline().split() ]\n-print(num_seq)\n \n for i in range(1,length):\n     print(num_seq[length - i],end=' ')\n print(num_seq[0],end='')\n \n",
        "origin_generated_text": "\n```\n import sys\n \n length = int(sys.stdin.readline())\n num_seq = [ int(num) for num in sys.stdin.readline().split() ]\n-print(num_seq)\n \n for i in range(1,length):\n     print(num_seq[length - i],end=' ')\n print(num_seq[0],end='')\n \n```\n "
    },
    {
        "user_id": "u445511055",
        "problem_id": "p03477",
        "submission1_id": "s383503741",
        "crp_content": "\n \n \n \n def main():\n     \n     a, b, c, d = map(int, input().split())\n-    if a+b < c+d:\n         print(\"Right\")\n-    if a+b == c+d:\n         print(\"Balanced\")\n     else:\n         print(\"Left\")\n \n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n \n \n \n def main():\n     \n     a, b, c, d = map(int, input().split())\n-    if a+b < c+d:\n         print(\"Right\")\n-    if a+b == c+d:\n         print(\"Balanced\")\n     else:\n         print(\"Left\")\n \n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s047812315",
        "crp_content": "\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < (br - ar):\n             print(2)\n-    if d < (ar - br):\n             print(-2)\n-    elif d <= (ar + br):\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < (br - ar):\n             print(2)\n-    if d < (ar - br):\n             print(-2)\n-    elif d <= (ar + br):\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u864197622",
        "problem_id": "p03677",
        "submission1_id": "s607910168",
        "crp_content": "\n from itertools import accumulate\n def acc(X): return list(accumulate(X))\n \n N, M = map(int, input().split())\n A = [int(a)-1 for a in input().split()]\n \n X = [0] * M \n Y = [0] * M \n \n def tri(l, r, a = 1):\n     if l < M:\n         Y[l] += a\n     if r + 1 < M:\n         Y[r+1] -= a\n         X[r+1] -= (r-l+1) * a\n \n def box(l, r, a = 1):\n     if l < M:\n         X[l] += a\n     if r + 1< M:\n         X[r+1] -= a\n     \n def calc(a, b):\n     if a <= b - 2:\n         tri(a+2, b)\n     elif a > b and a <= b + M - 2:\n         tri(a+1, M-1)\n         tri(0, b)\n         box(0, b, b-a)\n         \n     \n \n def rev():\n     ret = acc(Y)\n     ret = [X[i] + ret[i] for i in range(M)]\n     return acc(ret)\n     \n ans = 0\n for i in range(1, N):\n     ans += (A[i] - A[i-1]) % M\n     calc(A[i-1], A[i])\n \n X = rev()\n \n ans -= max(X)\n print(ans)\n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n def acc(X): return list(accumulate(X))\n \n N, M = map(int, input().split())\n A = [int(a)-1 for a in input().split()]\n \n X = [0] * M \n Y = [0] * M \n \n def tri(l, r, a = 1):\n     if l < M:\n         Y[l] += a\n     if r + 1 < M:\n         Y[r+1] -= a\n         X[r+1] -= (r-l+1) * a\n \n def box(l, r, a = 1):\n     if l < M:\n         X[l] += a\n     if r + 1< M:\n         X[r+1] -= a\n     \n def calc(a, b):\n     if a <= b - 2:\n         tri(a+2, b)\n     elif a > b and a <= b + M - 2:\n         tri(a+1, M-1)\n         tri(0, b)\n         box(0, b, b-a)\n         \n     \n \n def rev():\n     ret = acc(Y)\n     ret = [X[i] + ret[i] for i in range(M)]\n     return acc(ret)\n     \n ans = 0\n for i in range(1, N):\n     ans += (A[i] - A[i-1]) % M\n     calc(A[i-1], A[i])\n \n X = rev()\n \n ans -= max(X)\n print(ans)\n```\n "
    },
    {
        "user_id": "u966378542",
        "problem_id": "p03296",
        "submission1_id": "s080223372",
        "crp_content": "\n N = input()\n data = input().split()\n bef = -1\n count = 0\n result = 0\n \n for i in range(len(data)):\n \tt = int(data[i])\n \tif bef != t:\n \t\tif count > 1:\n-\t\t\tresult += int(count) / 2\n-\t\t\tprint(result)\n \t\tcount = 1\n \t\tbef = t\n \telse:\n \t\tcount += 1\n \n if count > 1:\n-\tresult += int(count / 2)\n print(result)\n",
        "origin_generated_text": "\n```\n N = input()\n data = input().split()\n bef = -1\n count = 0\n result = 0\n \n for i in range(len(data)):\n \tt = int(data[i])\n \tif bef != t:\n \t\tif count > 1:\n-\t\t\tresult += int(count) / 2\n-\t\t\tprint(result)\n \t\tcount = 1\n \t\tbef = t\n \telse:\n \t\tcount += 1\n \n if count > 1:\n-\tresult += int(count / 2)\n print(result)\n```\n "
    },
    {
        "user_id": "u393512980",
        "problem_id": "p03326",
        "submission1_id": "s568910407",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n N, M = map(int, input().split())\n xyz = [None] * N\n for i in range(N):\n     _x, _y, _z = map(int, input().split())\n     xyz[i] = [_x, _y, _z]\n ans = 0\n-for i in range(2):\n-    for j in range(2):\n-        for k in range(2):\n-            sx, sy, sz = (-1)**i, (-1)**j, (-1)**k\n-            xyz.sort(key = lambda v : -(sx * v[0] + sy * v[1] + sz * v[2]))\n             X, Y, Z = 0, 0, 0\n             for i in range(M):\n                 X += xyz[i][0]\n                 Y += xyz[i][1]\n                 Z += xyz[i][2]\n             ans = max(ans, abs(X) + abs(Y) + abs(Z))\n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n N, M = map(int, input().split())\n xyz = [None] * N\n for i in range(N):\n     _x, _y, _z = map(int, input().split())\n     xyz[i] = [_x, _y, _z]\n ans = 0\n-for i in range(2):\n-    for j in range(2):\n-        for k in range(2):\n-            sx, sy, sz = (-1)**i, (-1)**j, (-1)**k\n-            xyz.sort(key = lambda v : -(sx * v[0] + sy * v[1] + sz * v[2]))\n             X, Y, Z = 0, 0, 0\n             for i in range(M):\n                 X += xyz[i][0]\n                 Y += xyz[i][1]\n                 Z += xyz[i][2]\n             ans = max(ans, abs(X) + abs(Y) + abs(Z))\n print(ans)\n```\n "
    },
    {
        "user_id": "u869265610",
        "problem_id": "p03206",
        "submission1_id": "s071277962",
        "crp_content": "\n a=int(input())\n-print(\"christmas\"+\"Eve\"*(25-a))\n",
        "origin_generated_text": "\n```\n a=int(input())\n-print(\"christmas\"+\"Eve\"*(25-a))\n```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p04019",
        "submission1_id": "s718686408",
        "crp_content": "\n s = list(input())\n N = 0\n W = 0\n S = 0\n E = 0\n for i in s:\n   if i == 'N':\n     N = 1\n   if i == 'W':\n     W = 1\n   if i == 'S':\n     S = 1\n   if i == 'E':\n     E = 1\n-if ((N == 0 and S == 0) or (N == 1 and S == 1)) and ((W == 0 and E == 0) or (N == 1 and S == 1)):\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n s = list(input())\n N = 0\n W = 0\n S = 0\n E = 0\n for i in s:\n   if i == 'N':\n     N = 1\n   if i == 'W':\n     W = 1\n   if i == 'S':\n     S = 1\n   if i == 'E':\n     E = 1\n-if ((N == 0 and S == 0) or (N == 1 and S == 1)) and ((W == 0 and E == 0) or (N == 1 and S == 1)):\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u910295650",
        "problem_id": "p03102",
        "submission1_id": "s903620377",
        "crp_content": "\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n A=[]\n ans=0\n a=0\n for i in range(N):\n     A.append([int(j) for j in input().split()])\n for i in range(N):\n     for j in range(M):\n          a+=A[i][j]*B[j]\n     if a+C>0:\n         ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n N,M,C=map(int, input().split())\n B=list(map(int, input().split()))\n A=[]\n ans=0\n a=0\n for i in range(N):\n     A.append([int(j) for j in input().split()])\n for i in range(N):\n     for j in range(M):\n          a+=A[i][j]*B[j]\n     if a+C>0:\n         ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u832039789",
        "problem_id": "p03318",
        "submission1_id": "s082526760",
        "crp_content": "\n res = []\n for digit in range(1,16):\n     if digit<=3:\n         for i in range(2,11):\n             res.append(10**(digit-1)*i-1)\n     elif 4<=digit<=12:\n         for i in range(11,(digit-2)*10):\n             res.append(i*10**(digit-2)-1)\n         for i in range(digit-2,11):\n             res.append(i*10**(digit-1)-1)\n     elif digit==15:\n         for i in range(101,110):\n             res.append(i*10**(digit-3)-1)\n         for i in range(11,101):\n             res.append(i*10**(digit-2)-1)\n     else:\n         for i in range(11,101):\n             res.append(i*10**(digit-2)-1)\n-print(res)\n \n",
        "origin_generated_text": "\n```\n res = []\n for digit in range(1,16):\n     if digit<=3:\n         for i in range(2,11):\n             res.append(10**(digit-1)*i-1)\n     elif 4<=digit<=12:\n         for i in range(11,(digit-2)*10):\n             res.append(i*10**(digit-2)-1)\n         for i in range(digit-2,11):\n             res.append(i*10**(digit-1)-1)\n     elif digit==15:\n         for i in range(101,110):\n             res.append(i*10**(digit-3)-1)\n         for i in range(11,101):\n             res.append(i*10**(digit-2)-1)\n     else:\n         for i in range(11,101):\n             res.append(i*10**(digit-2)-1)\n-print(res)\n \n```\n "
    },
    {
        "user_id": "u071868443",
        "problem_id": "p03998",
        "submission1_id": "s802018438",
        "crp_content": "\n sa = list(str(input()))\n sb = list(str(input()))\n sc = list(str(input()))\n pa, pb, pc = 0, 0, 0\n \n read = sa[0]\n while True:\n   if read == 'a':\n     pa += 1\n     if pa == len(sa):\n       print('A')\n       break\n     read = sa[pa]\n   elif read == 'b':\n     pb += 1\n     if pb == len(sb):\n       print('B')\n       break\n     read = sb[pb]\n   else:\n     pc += 1\n     if pc == len(sc):\n       print('C')\n       break\n     read = sc[pc]\n \n",
        "origin_generated_text": "\n```\n sa = list(str(input()))\n sb = list(str(input()))\n sc = list(str(input()))\n pa, pb, pc = 0, 0, 0\n \n read = sa[0]\n while True:\n   if read == 'a':\n     pa += 1\n     if pa == len(sa):\n       print('A')\n       break\n     read = sa[pa]\n   elif read == 'b':\n     pb += 1\n     if pb == len(sb):\n       print('B')\n       break\n     read = sb[pb]\n   else:\n     pc += 1\n     if pc == len(sc):\n       print('C')\n       break\n     read = sc[pc]\n \n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02327",
        "submission1_id": "s680898323",
        "crp_content": "\n \n \n \n \n \n import sys\n \n \n \n \n \n class Rectangle(object):\n     __slots__ = ('pos', 'height')\n \n     def __init__(self, pos=float('inf'), height=-1):\n         \n         self.pos = pos\n         self.height = height\n \n \n def gen_rec_info(_carpet_info):\n     dp = [[0] * (W + 1) for _ in range(H + 1)]\n \n     for i in range(H):\n         for j in range(W):\n             if not int(_carpet_info[i][j]):\n                 dp[i + 1][j + 1] = dp[i][j + 1] + 1\n \n     return dp\n \n \n def get_largest_area(_hi_info):\n     hi_max_area = 0\n     rec_stack = []\n     for i, v in enumerate(_hi_info):\n         rect = Rectangle(pos=i, height=int(v))\n         if not rec_stack:\n             rec_stack.append(rect)\n         else:\n             last_height = rec_stack[-1].height\n             if last_height < rect.height:\n                 rec_stack.append(rect)\n             elif last_height > rect.height:\n                 target = i\n                 while rec_stack and rec_stack[-1].height >= rect.height:\n                     pre = rec_stack.pop()\n                     area = pre.height * (i - pre.pos)\n                     hi_max_area = max(hi_max_area, area)\n                 rec_stack.append(rect)\n \n     return hi_max_area\n \n \n def solve(_rec_info):\n     overall_max_area = 0\n     for hi_info in _rec_info:\n         overall_max_area = max(overall_max_area, get_largest_area(hi_info))\n \n     return overall_max_area\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     H, W = map(int, _input[0].split())\n     carpet_info = list(map(lambda x: x.split(), _input[1:]))\n     \n \n     rec_info = gen_rec_info(carpet_info)\n     ans = solve(rec_info)\n     print(ans)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n \n \n \n \n \n class Rectangle(object):\n     __slots__ = ('pos', 'height')\n \n     def __init__(self, pos=float('inf'), height=-1):\n         \n         self.pos = pos\n         self.height = height\n \n \n def gen_rec_info(_carpet_info):\n     dp = [[0] * (W + 1) for _ in range(H + 1)]\n \n     for i in range(H):\n         for j in range(W):\n             if not int(_carpet_info[i][j]):\n                 dp[i + 1][j + 1] = dp[i][j + 1] + 1\n \n     return dp\n \n \n def get_largest_area(_hi_info):\n     hi_max_area = 0\n     rec_stack = []\n     for i, v in enumerate(_hi_info):\n         rect = Rectangle(pos=i, height=int(v))\n         if not rec_stack:\n             rec_stack.append(rect)\n         else:\n             last_height = rec_stack[-1].height\n             if last_height < rect.height:\n                 rec_stack.append(rect)\n             elif last_height > rect.height:\n                 target = i\n                 while rec_stack and rec_stack[-1].height >= rect.height:\n                     pre = rec_stack.pop()\n                     area = pre.height * (i - pre.pos)\n                     hi_max_area = max(hi_max_area, area)\n                 rec_stack.append(rect)\n \n     return hi_max_area\n \n \n def solve(_rec_info):\n     overall_max_area = 0\n     for hi_info in _rec_info:\n         overall_max_area = max(overall_max_area, get_largest_area(hi_info))\n \n     return overall_max_area\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     H, W = map(int, _input[0].split())\n     carpet_info = list(map(lambda x: x.split(), _input[1:]))\n     \n \n     rec_info = gen_rec_info(carpet_info)\n     ans = solve(rec_info)\n     print(ans)\n```\n "
    },
    {
        "user_id": "u705427370",
        "problem_id": "p02880",
        "submission1_id": "s988790729",
        "crp_content": "\n n = int(input())\n \n L = set()\n for i in range(1,10):\n     for j in range(1,10):\n         result = i*j\n         L.add(result)\n-print(L)\n \n if n in L:\n     print(\"Yes\")\n elif n not in L:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n L = set()\n for i in range(1,10):\n     for j in range(1,10):\n         result = i*j\n         L.add(result)\n-print(L)\n \n if n in L:\n     print(\"Yes\")\n elif n not in L:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u037098269",
        "problem_id": "p03479",
        "submission1_id": "s200733280",
        "crp_content": "\n x,y = map(int, input().split())\n count = 0\n-while x*2 <= y:\n     x = x*2\n     count += 1\n print(count)\n",
        "origin_generated_text": "\n```\n x,y = map(int, input().split())\n count = 0\n-while x*2 <= y:\n     x = x*2\n     count += 1\n print(count)\n```\n "
    },
    {
        "user_id": "u485319545",
        "problem_id": "p03036",
        "submission1_id": "s400511684",
        "crp_content": "\n r,D,x_2000 = map(int,input().split())\n \n \n X=[x_2000]\n for i in range(10):\n-    X.append(r*X[i] - D)\n \n \n print(*X,sep=\"\\n\")\n     \n",
        "origin_generated_text": "\n```\n r,D,x_2000 = map(int,input().split())\n \n \n X=[x_2000]\n for i in range(10):\n-    X.append(r*X[i] - D)\n \n \n print(*X,sep=\"\\n\")\n     \n```\n "
    },
    {
        "user_id": "u228232845",
        "problem_id": "p03998",
        "submission1_id": "s284671020",
        "crp_content": "\n from collections import deque\n import sys\n \n \n def input(): return sys.stdin.readline().strip()\n def I(): return int(input())\n def LI(): return list(map(int, input().split()))\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def S(): return input()\n def LS(): return input().split()\n \n \n sa = deque(list(S()))\n sb = deque(list(S()))\n sc = deque(list(S()))\n \n turn = 'a'\n while True:\n     if len(sa) == 0 or len(sb) == 0 or len(sc) == 0:\n         break\n     if turn == 'a':\n-        turn = sa.popleft()\n     if turn == 'b':\n-        turn = sb.popleft()\n     if turn == 'c':\n-        turn = sc.popleft()\n print(turn.upper())\n \n",
        "origin_generated_text": "\n```\n from collections import deque\n import sys\n \n \n def input(): return sys.stdin.readline().strip()\n def I(): return int(input())\n def LI(): return list(map(int, input().split()))\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def S(): return input()\n def LS(): return input().split()\n \n \n sa = deque(list(S()))\n sb = deque(list(S()))\n sc = deque(list(S()))\n \n turn = 'a'\n while True:\n     if len(sa) == 0 or len(sb) == 0 or len(sc) == 0:\n         break\n     if turn == 'a':\n-        turn = sa.popleft()\n     if turn == 'b':\n-        turn = sb.popleft()\n     if turn == 'c':\n-        turn = sc.popleft()\n print(turn.upper())\n \n```\n "
    },
    {
        "user_id": "u458617779",
        "problem_id": "p03734",
        "submission1_id": "s864034470",
        "crp_content": "\n ints = input().split(\" \")\n N = int(ints[0])\n maxW = int(ints[1])\n ints = input().split(\" \")\n a = int(ints[0])\n b = int(ints[1])\n-weight = [a, a+1, a+2, a+3] \n-va = [[0,b],[0],[0],[0]]\n for i in range(1, N):\n \tins = input().split(\" \")\n \tw = int(ins[0])\n \tv = int(ins[1])\n \tfor j in range(0, 4):\n \t\tif w == weight[j]:\n \t\t\tva[j].append(v)\n-va.sort()\n-sum = [[0],[0],[0],[0]]\n-for j in range(0, 4):\n-\tfor i in range(1, len(va[j])):\n-\t\ttry:\n-\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n-\t\texcept:\n-\t\t\tpass\n ans = 0\n for i in range(0, len(va[0])):\n \tfor j in range(0, len(va[1])):\n \t\tfor k in range(0, len(va[2])):\n \t\t\tfor l in range(0, len(va[3])):\n \t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n \t\t\t\tif(sumw <= maxW):\n \t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n ints = input().split(\" \")\n N = int(ints[0])\n maxW = int(ints[1])\n ints = input().split(\" \")\n a = int(ints[0])\n b = int(ints[1])\n-weight = [a, a+1, a+2, a+3] \n-va = [[0,b],[0],[0],[0]]\n for i in range(1, N):\n \tins = input().split(\" \")\n \tw = int(ins[0])\n \tv = int(ins[1])\n \tfor j in range(0, 4):\n \t\tif w == weight[j]:\n \t\t\tva[j].append(v)\n-va.sort()\n-sum = [[0],[0],[0],[0]]\n-for j in range(0, 4):\n-\tfor i in range(1, len(va[j])):\n-\t\ttry:\n-\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n-\t\texcept:\n-\t\t\tpass\n ans = 0\n for i in range(0, len(va[0])):\n \tfor j in range(0, len(va[1])):\n \t\tfor k in range(0, len(va[2])):\n \t\t\tfor l in range(0, len(va[3])):\n \t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n \t\t\t\tif(sumw <= maxW):\n \t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s860102445",
        "crp_content": "\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n \n-s = s*3\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n print(ans1)\n",
        "origin_generated_text": "\n```\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n \n-s = s*3\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n print(ans1)\n```\n "
    },
    {
        "user_id": "u647999897",
        "problem_id": "p03625",
        "submission1_id": "s758070047",
        "crp_content": "\n from collections import Counter\n def solve():\n     N = int(input())\n     A = list(map(int, input().split()))\n     cnter = Counter(A)\n     cnter_list = list(cnter.items())\n     cnter_list.sort(key=lambda x:x[0], reverse=True)\n \n     double_cnt = 0\n     ans = 1\n     for elem in cnter_list:\n         if elem[1] >= 2:\n             double_cnt += 1\n             ans *= elem[0]\n         if double_cnt >= 2:\n             break\n     else:\n         print(0)\n         return\n     \n     print(ans)\n \n if __name__ == '__main__':\n     solve()\n",
        "origin_generated_text": "\n```\n from collections import Counter\n def solve():\n     N = int(input())\n     A = list(map(int, input().split()))\n     cnter = Counter(A)\n     cnter_list = list(cnter.items())\n     cnter_list.sort(key=lambda x:x[0], reverse=True)\n \n     double_cnt = 0\n     ans = 1\n     for elem in cnter_list:\n         if elem[1] >= 2:\n             double_cnt += 1\n             ans *= elem[0]\n         if double_cnt >= 2:\n             break\n     else:\n         print(0)\n         return\n     \n     print(ans)\n \n if __name__ == '__main__':\n     solve()\n```\n "
    },
    {
        "user_id": "u691238759",
        "problem_id": "p03036",
        "submission1_id": "s696618979",
        "crp_content": "\n INPUT = input().split()\n r = int(INPUT[0])\n D = int(INPUT[1])\n X = int(INPUT[2])\n \n XX = []\n \n ans = \"\"\n XX.append(X)\n \n i = 0\n while i <= 10:\n     v = r * XX[i] - D\n     XX.append(v)\n-    ans = ans + str(XX[i + 1]) + '\\n'\n     i += 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n INPUT = input().split()\n r = int(INPUT[0])\n D = int(INPUT[1])\n X = int(INPUT[2])\n \n XX = []\n \n ans = \"\"\n XX.append(X)\n \n i = 0\n while i <= 10:\n     v = r * XX[i] - D\n     XX.append(v)\n-    ans = ans + str(XX[i + 1]) + '\\n'\n     i += 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03970",
        "submission1_id": "s531556877",
        "crp_content": "\n S = input()\n T = \"CODEFESTIVAL2016\"\n c = 0\n for i in range(16):\n-  if S[i]==T[i]:\n     c += 1\n print(c)\n",
        "origin_generated_text": "\n```\n S = input()\n T = \"CODEFESTIVAL2016\"\n c = 0\n for i in range(16):\n-  if S[i]==T[i]:\n     c += 1\n print(c)\n```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03080",
        "submission1_id": "s986830621",
        "crp_content": "\n N=int(input())\n-s=list(input().split())\n for i in s:\n      n=0\n      if i=='R':\n          n+=1\n-if N/2<n:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N=int(input())\n-s=list(input().split())\n for i in s:\n      n=0\n      if i=='R':\n          n+=1\n-if N/2<n:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u840988663",
        "problem_id": "p02886",
        "submission1_id": "s504259615",
        "crp_content": "\n n=int(input())\n-d=map(int,input().split())\n-d=list(d)\n kotae=0\n for i in range(n):\n   for j in range(n-i-1):\n     kotae=kotae+d[i]*d[j]\n print(kotae)\n",
        "origin_generated_text": "\n```\n n=int(input())\n-d=map(int,input().split())\n-d=list(d)\n kotae=0\n for i in range(n):\n   for j in range(n-i-1):\n     kotae=kotae+d[i]*d[j]\n print(kotae)\n```\n "
    },
    {
        "user_id": "u209620426",
        "problem_id": "p03264",
        "submission1_id": "s435216119",
        "crp_content": "\n import math\n \n-k = 50\n \n if k%2:\n     print(math.floor(k/2)*math.ceil(k/2))\n else:\n     print(int((k/2)**2))\n",
        "origin_generated_text": "\n```\n import math\n \n-k = 50\n \n if k%2:\n     print(math.floor(k/2)*math.ceil(k/2))\n else:\n     print(int((k/2)**2))\n```\n "
    },
    {
        "user_id": "u566159623",
        "problem_id": "p02727",
        "submission1_id": "s496517204",
        "crp_content": "\n x, y, a, b, c = map(int, input().split())\n p =list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n p = sorted(p)\n-p = sorted(p)\n \n p = p[(len(p)-x):]\n q = q[(len(q)-y):]\n-r=r+p\n-r=r+q\n-r = sorted(r)\n-print(sum(r[(len(r)-x-y):]))\n \n",
        "origin_generated_text": "\n```\n x, y, a, b, c = map(int, input().split())\n p =list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n p = sorted(p)\n-p = sorted(p)\n \n p = p[(len(p)-x):]\n q = q[(len(q)-y):]\n-r=r+p\n-r=r+q\n-r = sorted(r)\n-print(sum(r[(len(r)-x-y):]))\n \n```\n "
    },
    {
        "user_id": "u855380359",
        "problem_id": "p03264",
        "submission1_id": "s086505323",
        "crp_content": "\n k = int(input())\n \n if k%2 == 0:\n-  print(k*k/4)\n else:\n-  print(k**2/4-1/4)\n",
        "origin_generated_text": "\n```\n k = int(input())\n \n if k%2 == 0:\n-  print(k*k/4)\n else:\n-  print(k**2/4-1/4)\n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s120109688",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n for i in range(n):\n     j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n     for j in range(n):\n-        par[i][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n         if par[i][x] < y:\n             k += 1<<i\n             x = par[i][x]\n         elif i == 0 and par[i][x] >= y:\n             k += 1<<i\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     print(hoge(a,b))\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n from bisect import bisect\n \n n = int(input())\n x = list(map(int, input().split()))\n l = int(input())\n \n-m = 20\n-par = [[-1]*n for i in range(m)]\n-\n for i in range(n):\n     j = bisect(x, x[i]+l)-1\n-    par[0][i] = j\n \n-for i in range(m-1):\n     for j in range(n):\n-        par[i][j]=par[i][par[i][j]]\n \n def hoge(x, y):\n     k = 0\n     for i in range(m)[::-1]:\n         if par[i][x] < y:\n             k += 1<<i\n             x = par[i][x]\n         elif i == 0 and par[i][x] >= y:\n             k += 1<<i\n     return k\n \n q = int(input())\n ans = []\n for i in range(q):\n     a,b = map(int, input().split())\n-    a,b = a-1,b-1\n-    if a > b:\n-        a,b = b,a\n     print(hoge(a,b))\n```\n "
    },
    {
        "user_id": "u994988729",
        "problem_id": "p03734",
        "submission1_id": "s128842224",
        "crp_content": "\n from itertools import accumulate\n \n N, W = map(int, input().split())\n-d = {i: [0] for i in range(4)}\n for i in range(N):\n     w, v = map(int, input().split())\n-    if i == 0:\n-        w0 = w\n-    w -= w0\n-    d[w].append(v)\n \n wv = [[] for _ in range(4)]\n for k, v in d.items():\n     v.sort()\n     wv[k] = tuple(accumulate(v))\n \n \n \n ans = 0\n for c0, v0 in enumerate(wv[0]):\n     for c1, v1 in enumerate(wv[1]):\n         for c2, v2 in enumerate(wv[2]):\n             for c3, v3 in enumerate(wv[3]):\n-                weight = w0 * (c0 + c1 + c2 + c3) + c1 + c2 * 2 + c3 * 3\n                 val = v0 + v1 + v2 + v3\n                 if weight > W:\n                     continue\n                 ans = max(ans, val)\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n N, W = map(int, input().split())\n-d = {i: [0] for i in range(4)}\n for i in range(N):\n     w, v = map(int, input().split())\n-    if i == 0:\n-        w0 = w\n-    w -= w0\n-    d[w].append(v)\n \n wv = [[] for _ in range(4)]\n for k, v in d.items():\n     v.sort()\n     wv[k] = tuple(accumulate(v))\n \n \n \n ans = 0\n for c0, v0 in enumerate(wv[0]):\n     for c1, v1 in enumerate(wv[1]):\n         for c2, v2 in enumerate(wv[2]):\n             for c3, v3 in enumerate(wv[3]):\n-                weight = w0 * (c0 + c1 + c2 + c3) + c1 + c2 * 2 + c3 * 3\n                 val = v0 + v1 + v2 + v3\n                 if weight > W:\n                     continue\n                 ans = max(ans, val)\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u096983897",
        "problem_id": "p02912",
        "submission1_id": "s495725218",
        "crp_content": "\n import heapq\n \n mnum, gnum = map(int, input().split())\n array = list(map(lambda a: -int(a), input().split()))\n \n array.sort()\n heapq.heapify(array)\n \n for i in range(gnum):\n \ttemp = heapq.heappop(array)\n \ttemp = temp/2\n \theapq.heappush(array, temp)\n     \n-print(sum(array)*-1)\n",
        "origin_generated_text": "\n```\n import heapq\n \n mnum, gnum = map(int, input().split())\n array = list(map(lambda a: -int(a), input().split()))\n \n array.sort()\n heapq.heapify(array)\n \n for i in range(gnum):\n \ttemp = heapq.heappop(array)\n \ttemp = temp/2\n \theapq.heappush(array, temp)\n     \n-print(sum(array)*-1)\n```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s356872301",
        "crp_content": "\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1:\n-        count = w\n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n     else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n     h, w = map(int, input().split())\n-    dy = h \n-    if h == 1:\n-        count = w\n-    elif h % 2 == 1:\n-        count = w * dy + (w-1)\n     else:\n-        count = w * dy\n \n     print(count)\n \n if __name__ == '__main__':\n     resolve()\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s040795031",
        "crp_content": "\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = (ra-rb) ** 2\n \n     if d1 <= d2:\n         if d2 > d1 > dr:\n             print(1)\n         elif dr > d1:\n             print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n     d2 = ra ** 2 + rb ** 2\n     dr = (ra-rb) ** 2\n \n     if d1 <= d2:\n         if d2 > d1 > dr:\n             print(1)\n         elif dr > d1:\n             print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u559315737",
        "problem_id": "p02580",
        "submission1_id": "s152544099",
        "crp_content": "\n from collections import defaultdict\n row=defaultdict(int)\n col=defaultdict(int)\n H,W,M=map(int,input().split())\n \n matrix=defaultdict(bool)\n for i in range(M):\n     h,w=map(int,input().split())\n     row[h-1]+=1\n     col[w-1]+=1\n     matrix[(h-1,w-1)]=True\n \n \n \n \n temp=list(row.items())\n temp.sort(key=lambda x:x[1])\n a,b=temp[-1][0],temp[-1][1]\n cnt=0\n for i in range(W):\n     temp=0\n     if matrix[(a,i)]:\n         temp=(b+col[i]-1)\n     else:\n         temp=(b+col[i])\n     cnt=max(cnt,temp)\n \n temp=list(col.items())\n temp.sort(key=lambda x:x[1])\n a,b=temp[-1][0],temp[-1][1]\n cnt2=0\n for i in range(H):\n     temp=0\n     if matrix[(a,i)]:\n         temp=(b+row[i]-1)\n     else:\n         temp=(b+row[i])\n     cnt2=max(cnt2,temp)\n-print(max(cnt,cnt2))\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n row=defaultdict(int)\n col=defaultdict(int)\n H,W,M=map(int,input().split())\n \n matrix=defaultdict(bool)\n for i in range(M):\n     h,w=map(int,input().split())\n     row[h-1]+=1\n     col[w-1]+=1\n     matrix[(h-1,w-1)]=True\n \n \n \n \n temp=list(row.items())\n temp.sort(key=lambda x:x[1])\n a,b=temp[-1][0],temp[-1][1]\n cnt=0\n for i in range(W):\n     temp=0\n     if matrix[(a,i)]:\n         temp=(b+col[i]-1)\n     else:\n         temp=(b+col[i])\n     cnt=max(cnt,temp)\n \n temp=list(col.items())\n temp.sort(key=lambda x:x[1])\n a,b=temp[-1][0],temp[-1][1]\n cnt2=0\n for i in range(H):\n     temp=0\n     if matrix[(a,i)]:\n         temp=(b+row[i]-1)\n     else:\n         temp=(b+row[i])\n     cnt2=max(cnt2,temp)\n-print(max(cnt,cnt2))\n```\n "
    },
    {
        "user_id": "u935254309",
        "problem_id": "p03416",
        "submission1_id": "s890304064",
        "crp_content": "\n A,B = map(int,input().split())\n \n cnt = 0\n \n for i in range(A,B+1):\n     \n     Str = str(i)\n     \n-    if Str[:2] == Str[3:]:\n         cnt += 1\n         \n print(cnt)\n",
        "origin_generated_text": "\n```\n A,B = map(int,input().split())\n \n cnt = 0\n \n for i in range(A,B+1):\n     \n     Str = str(i)\n     \n-    if Str[:2] == Str[3:]:\n         cnt += 1\n         \n print(cnt)\n```\n "
    },
    {
        "user_id": "u869919400",
        "problem_id": "p03475",
        "submission1_id": "s325276465",
        "crp_content": "\n N = int(input())\n CSF = [list(map(int, input().split())) for i in range(N-1)]\n for i in range(N-1):\n     ans = 0\n     for j in range(i, N-1):\n         C, S, F = CSF[j]\n         if ans <= S:\n             ans = S\n         else:\n             diff = ans - S\n             if diff % F != 0:\n                 ans += F - diff\n         ans += C\n     print(ans)\n print(0)\n",
        "origin_generated_text": "\n```\n N = int(input())\n CSF = [list(map(int, input().split())) for i in range(N-1)]\n for i in range(N-1):\n     ans = 0\n     for j in range(i, N-1):\n         C, S, F = CSF[j]\n         if ans <= S:\n             ans = S\n         else:\n             diff = ans - S\n             if diff % F != 0:\n                 ans += F - diff\n         ans += C\n     print(ans)\n print(0)\n```\n "
    },
    {
        "user_id": "u135346354",
        "problem_id": "p02556",
        "submission1_id": "s919485248",
        "crp_content": "\n from collections import deque\n N = int(input())\n \n AM, Am, BM, Bm = 0, 10**18, 0, 10**18\n for _ in range(N):\n     x, y = map(int, input().split())\n     AM = max(AM, x+y)\n     Am = min(Am, x+y)\n     BM = max(BM, x-y)\n     Bm = min(Bm, x-y)\n \n \n-print(max(AM-Am, BM-Bm))\n",
        "origin_generated_text": "\n```\n from collections import deque\n N = int(input())\n \n AM, Am, BM, Bm = 0, 10**18, 0, 10**18\n for _ in range(N):\n     x, y = map(int, input().split())\n     AM = max(AM, x+y)\n     Am = min(Am, x+y)\n     BM = max(BM, x-y)\n     Bm = min(Bm, x-y)\n \n \n-print(max(AM-Am, BM-Bm))\n```\n "
    },
    {
        "user_id": "u534527715",
        "problem_id": "p02699",
        "submission1_id": "s290871851",
        "crp_content": "\n \n \n H, O = map(int, input().split())\n \n-if (H < O):\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n \n \n H, O = map(int, input().split())\n \n-if (H < O):\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u093041722",
        "problem_id": "p02727",
        "submission1_id": "s393716473",
        "crp_content": "\n from collections import deque\n X,Y,A,B,C = (int(x) for x in input().split())\n p = [[int(x), 'r'] for x in input().split()]\n q = [[int(x), 'g'] for x in input().split()]\n r = [[int(x), 'c'] for x in input().split()]\n pqr = p + q + r\n pqr.sort(reverse=True)\n d = deque(pqr)\n rem = X + Y\n picked = 0\n ans = 0\n if len(d) <= rem:\n     print(sum([apple[0] for apple in pqr]))\n else:\n     while rem > picked:\n         pop = d.popleft()\n         if pop[1] == 'r':\n             if X > 0:\n                 X -= 1\n                 ans += pop[0]\n                 picked += 1\n         elif pop[1] == 'g':\n-            if Y > 0:\n                 Y -= 1\n                 ans += pop[0]\n                 picked += 1\n         else:\n             rem -= 1\n             ans += pop[0]\n             picked += 1\n     print(ans)\n",
        "origin_generated_text": "\n```\n from collections import deque\n X,Y,A,B,C = (int(x) for x in input().split())\n p = [[int(x), 'r'] for x in input().split()]\n q = [[int(x), 'g'] for x in input().split()]\n r = [[int(x), 'c'] for x in input().split()]\n pqr = p + q + r\n pqr.sort(reverse=True)\n d = deque(pqr)\n rem = X + Y\n picked = 0\n ans = 0\n if len(d) <= rem:\n     print(sum([apple[0] for apple in pqr]))\n else:\n     while rem > picked:\n         pop = d.popleft()\n         if pop[1] == 'r':\n             if X > 0:\n                 X -= 1\n                 ans += pop[0]\n                 picked += 1\n         elif pop[1] == 'g':\n-            if Y > 0:\n                 Y -= 1\n                 ans += pop[0]\n                 picked += 1\n         else:\n             rem -= 1\n             ans += pop[0]\n             picked += 1\n     print(ans)\n```\n "
    },
    {
        "user_id": "u826785572",
        "problem_id": "p02718",
        "submission1_id": "s619670929",
        "crp_content": "\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n \n total = sum(a)\n \n count = 0\n \n valid = total / (4 * m)\n \n for i in a:\n-    if i > valid:\n         count += 1\n \n if count > m:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n \n total = sum(a)\n \n count = 0\n \n valid = total / (4 * m)\n \n for i in a:\n-    if i > valid:\n         count += 1\n \n if count > m:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u124873669",
        "problem_id": "p03106",
        "submission1_id": "s787524090",
        "crp_content": "\n A,B,K=(int(x) for x in input().split())\n \n val = 1\n lcnt = 0\n while True:\n   if A % val == 0 and B % val == 0:\n     lcnt += 1\n   if lcnt == K:\n     break\n   val += 1\n-print(val)\n",
        "origin_generated_text": "\n```\n A,B,K=(int(x) for x in input().split())\n \n val = 1\n lcnt = 0\n while True:\n   if A % val == 0 and B % val == 0:\n     lcnt += 1\n   if lcnt == K:\n     break\n   val += 1\n-print(val)\n```\n "
    },
    {
        "user_id": "u943004959",
        "problem_id": "p02625",
        "submission1_id": "s692670191",
        "crp_content": "\n MOD = 10**9 + 7\n MAX = 5*10**5 + 1\n \n fact = [0 for _ in range(MAX)]\n factinv = [0 for _ in range(MAX)]\n \n fact[0] = 1\n for k in range(1, MAX):\n     fact[k] = fact[k - 1]*k\n     fact[k] %= MOD\n \n factinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\n for k in range(MAX - 1, 0, -1):\n     factinv[k - 1] = fact[k]*k\n     factinv[k - 1] %= MOD\n \n def nCk(n, k):\n     return fact[n]*factinv[k]*factinv[n - k] % MOD\n \n def nPk(n, k):\n     return fact[n]*factinv[n - k] % MOD\n \n n, m = map(int, input().split(' '))\n \n ans = 0\n for k in range(n + 1):\n-    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n     if k % 2: ans += tmp\n     else: ans -= tmp\n     ans %= MOD\n \n print(ans)\n",
        "origin_generated_text": "\n```\n MOD = 10**9 + 7\n MAX = 5*10**5 + 1\n \n fact = [0 for _ in range(MAX)]\n factinv = [0 for _ in range(MAX)]\n \n fact[0] = 1\n for k in range(1, MAX):\n     fact[k] = fact[k - 1]*k\n     fact[k] %= MOD\n \n factinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\n for k in range(MAX - 1, 0, -1):\n     factinv[k - 1] = fact[k]*k\n     factinv[k - 1] %= MOD\n \n def nCk(n, k):\n     return fact[n]*factinv[k]*factinv[n - k] % MOD\n \n def nPk(n, k):\n     return fact[n]*factinv[n - k] % MOD\n \n n, m = map(int, input().split(' '))\n \n ans = 0\n for k in range(n + 1):\n-    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n     if k % 2: ans += tmp\n     else: ans -= tmp\n     ans %= MOD\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u694402282",
        "problem_id": "p03041",
        "submission1_id": "s323754770",
        "crp_content": "\n n, k = map(int, input().split())\n s = input()\n t = s[k-1]\n ans = s[:k-1] + t.lower() + s[k:]\n \n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n s = input()\n t = s[k-1]\n ans = s[:k-1] + t.lower() + s[k:]\n \n```\n "
    },
    {
        "user_id": "u989326345",
        "problem_id": "p03023",
        "submission1_id": "s601490111",
        "crp_content": "\n N=int(input())\n-ans=180*(N-1)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N=int(input())\n-ans=180*(N-1)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p02963",
        "submission1_id": "s906247788",
        "crp_content": "\n import math\n S = int(input())\n X1 = 0\n Y1 = 0\n X2 = 0\n Y2 = 0\n X3 = 0\n Y3 = 0\n if  S <= 10 ** 9:\n     X2 = S\n     Y3 = 1\n else:\n     X2 = int(math.sqrt(S) + 1)\n-    Y3 = X2\n     s = X2 ** 2  - S \n     for i in range(1, int(math.sqrt(s) + 1)):\n         if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8:\n                 X3 = i\n                 Y2 = s\n                 break\n \n print (X1, Y1, X2, Y2, X3, Y3)\n \n",
        "origin_generated_text": "\n```\n import math\n S = int(input())\n X1 = 0\n Y1 = 0\n X2 = 0\n Y2 = 0\n X3 = 0\n Y3 = 0\n if  S <= 10 ** 9:\n     X2 = S\n     Y3 = 1\n else:\n     X2 = int(math.sqrt(S) + 1)\n-    Y3 = X2\n     s = X2 ** 2  - S \n     for i in range(1, int(math.sqrt(s) + 1)):\n         if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8:\n                 X3 = i\n                 Y2 = s\n                 break\n \n print (X1, Y1, X2, Y2, X3, Y3)\n \n```\n "
    },
    {
        "user_id": "u641722141",
        "problem_id": "p03036",
        "submission1_id": "s077747385",
        "crp_content": "\n a,b,c=map(int,input().split())\n for i in range(10):\n-  s1=(a*c) -b\n   print(s1)\n   a=s1\n",
        "origin_generated_text": "\n```\n a,b,c=map(int,input().split())\n for i in range(10):\n-  s1=(a*c) -b\n   print(s1)\n   a=s1\n```\n "
    },
    {
        "user_id": "u210718367",
        "problem_id": "p03568",
        "submission1_id": "s121127956",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n-ans=1\n for k in a:\n   if k&1:\n-    ans*=2\n-print(ans)\n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n-ans=1\n for k in a:\n   if k&1:\n-    ans*=2\n-print(ans)\n```\n "
    },
    {
        "user_id": "u741612283",
        "problem_id": "p02727",
        "submission1_id": "s949782484",
        "crp_content": "\n x,y,a,b,c = (int(x) for x in input().split())\n \n from bisect import insort\n \n p_list = []\n q_list = []\n r_list = []\n \n for value in input().split():\n   insort(p_list,  int(value))\n \n for value in input().split():\n   insort(q_list,  int(value))\n   \n for value in input().split():\n   insort(r_list,  int(value))\n   \n red = 0\n green = 0\n white = 0\n \n sum_num = 0\n \n-print(sum_num)\n for i in range(1,x+y+1):\n   if red < x:\n   \tred_num = p_list[(red*-1)-1]\n   else:\n     red_num = 0\n   if green < y:\n   \tgreen_num = q_list[(green*-1)-1]\n   else:\n     green_num = 0\n   if white < c:\n   \twhite_num = r_list[(white*-1)-1]\n   else:\n     white_num = 0\n   \n   max_p = max([red_num,green_num,white_num])\n   sum_num += max_p\n   if max_p == white_num:\n     white += 1\n   elif max_p == red_num:\n     red += 1\n   elif max_p == green_num:\n     green += 1\n",
        "origin_generated_text": "\n```\n x,y,a,b,c = (int(x) for x in input().split())\n \n from bisect import insort\n \n p_list = []\n q_list = []\n r_list = []\n \n for value in input().split():\n   insort(p_list,  int(value))\n \n for value in input().split():\n   insort(q_list,  int(value))\n   \n for value in input().split():\n   insort(r_list,  int(value))\n   \n red = 0\n green = 0\n white = 0\n \n sum_num = 0\n \n-print(sum_num)\n for i in range(1,x+y+1):\n   if red < x:\n   \tred_num = p_list[(red*-1)-1]\n   else:\n     red_num = 0\n   if green < y:\n   \tgreen_num = q_list[(green*-1)-1]\n   else:\n     green_num = 0\n   if white < c:\n   \twhite_num = r_list[(white*-1)-1]\n   else:\n     white_num = 0\n   \n   max_p = max([red_num,green_num,white_num])\n   sum_num += max_p\n   if max_p == white_num:\n     white += 1\n   elif max_p == red_num:\n     red += 1\n   elif max_p == green_num:\n     green += 1\n```\n "
    },
    {
        "user_id": "u659034691",
        "problem_id": "p02385",
        "submission1_id": "s222774258",
        "crp_content": "\n \n def r(D,s):\n     if s==0:\n         t=D[0]\n         D[0]=D[1]\n         D[1]=D[5]\n         D[5]=D[4]\n         D[4]=t\n     elif s==2:\n         t=D[0]\n         D[0]=D[4]\n         D[4]=D[5]\n         D[5]=D[1]\n         D[1]=t        \n     elif s==3:\n         t=D[0]\n         D[0]=D[3]\n         D[3]=D[5]\n         D[5]=D[2]\n         D[2]=t        \n     elif s==1:\n         t=D[0]\n         D[0]=D[2]\n         D[2]=D[5]\n         D[5]=D[3]\n         D[3]=t\n     elif s==4:\n         D=r(r(D,1),1)\n     return D\n def ch(C,D):\n     k=0\n     while k<6 and C[k]==D[k]:\n         k+=1\n     if k==6:\n         return 1\n     else:\n         return 0\n C=[int(i) for i in input().split()]\n D=[int(i) for i in input().split()]\n nd=0\n if ch(C,D)==1:\n     nd=1\n i=0\n while i<4 and nd==0:\n     D=r(D,i)\n     j=i+1\n     j\n     D=r(D,j)\n     if ch(C,D)==1:\n         nd=1\n     k=0\n     while k<3 and nd==0:\n         D=r(D,j)\n         if ch(C,D)==1:\n             nd=1\n         k+=1\n     D=r(D,j)\n     m=i+2\n-    m\n     D=r(D,m)\n     i+=1\n i=0\n while nd==0 and i<4:\n     D=r(r(D,i),i)\n     if ch(C,D)==1:\n         nd=1\n     D=r(r(D,i),i)\n     i+=1\n if nd==1:\n     p=\"Yes\"\n else:\n     p=\"No\"\n print(p)\n",
        "origin_generated_text": "\n```\n \n def r(D,s):\n     if s==0:\n         t=D[0]\n         D[0]=D[1]\n         D[1]=D[5]\n         D[5]=D[4]\n         D[4]=t\n     elif s==2:\n         t=D[0]\n         D[0]=D[4]\n         D[4]=D[5]\n         D[5]=D[1]\n         D[1]=t        \n     elif s==3:\n         t=D[0]\n         D[0]=D[3]\n         D[3]=D[5]\n         D[5]=D[2]\n         D[2]=t        \n     elif s==1:\n         t=D[0]\n         D[0]=D[2]\n         D[2]=D[5]\n         D[5]=D[3]\n         D[3]=t\n     elif s==4:\n         D=r(r(D,1),1)\n     return D\n def ch(C,D):\n     k=0\n     while k<6 and C[k]==D[k]:\n         k+=1\n     if k==6:\n         return 1\n     else:\n         return 0\n C=[int(i) for i in input().split()]\n D=[int(i) for i in input().split()]\n nd=0\n if ch(C,D)==1:\n     nd=1\n i=0\n while i<4 and nd==0:\n     D=r(D,i)\n     j=i+1\n     j\n     D=r(D,j)\n     if ch(C,D)==1:\n         nd=1\n     k=0\n     while k<3 and nd==0:\n         D=r(D,j)\n         if ch(C,D)==1:\n             nd=1\n         k+=1\n     D=r(D,j)\n     m=i+2\n-    m\n     D=r(D,m)\n     i+=1\n i=0\n while nd==0 and i<4:\n     D=r(r(D,i),i)\n     if ch(C,D)==1:\n         nd=1\n     D=r(r(D,i),i)\n     i+=1\n if nd==1:\n     p=\"Yes\"\n else:\n     p=\"No\"\n print(p)\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s208413754",
        "crp_content": "\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"x\":\n     return (a<=mi and ma<=c and mi<b<=d<=ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<=ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"x\":\n     return (a<=mi and ma<=c and mi<b<=d<=ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<=ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u457901067",
        "problem_id": "p03959",
        "submission1_id": "s101038802",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n T = list(map(int, input().split()))\n \n mod = int(1e9+7)\n \n dp = [0] * (N)\n dp[0] = 1\n \n \n Amax = max(A)\n Aleft = -1\n Tmax = max(T)\n for i in range(N):\n   if Amax == A[i]:\n     Aleft = i\n     break\n for i in range(N-1,-1,-1):\n   if Tmax == T[i]:\n     Tright = i\n     break\n if Aleft > Tright:\n   print(0)\n   exit(0)\n   \n-for i in range(1,N-1):\n   if A[i-1] < A[i] or T[i] > T[i+1]:\n     dp[i] = dp[i-1]\n     if A[i] != T[i]:\n       print(0)\n       exit(0)\n   else:\n     dp[i] = dp[i-1] * min(A[i], T[i]) % mod\n     \n print(dp[N-2])\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n T = list(map(int, input().split()))\n \n mod = int(1e9+7)\n \n dp = [0] * (N)\n dp[0] = 1\n \n \n Amax = max(A)\n Aleft = -1\n Tmax = max(T)\n for i in range(N):\n   if Amax == A[i]:\n     Aleft = i\n     break\n for i in range(N-1,-1,-1):\n   if Tmax == T[i]:\n     Tright = i\n     break\n if Aleft > Tright:\n   print(0)\n   exit(0)\n   \n-for i in range(1,N-1):\n   if A[i-1] < A[i] or T[i] > T[i+1]:\n     dp[i] = dp[i-1]\n     if A[i] != T[i]:\n       print(0)\n       exit(0)\n   else:\n     dp[i] = dp[i-1] * min(A[i], T[i]) % mod\n     \n print(dp[N-2])\n \n```\n "
    },
    {
        "user_id": "u841531687",
        "problem_id": "p03272",
        "submission1_id": "s849389589",
        "crp_content": "\n a, b = map(int, input().split())\n-print(b - a + 1)\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n-print(b - a + 1)\n```\n "
    },
    {
        "user_id": "u536717874",
        "problem_id": "p03477",
        "submission1_id": "s626619088",
        "crp_content": "\n \n import sys\n \n \n def main(argv=sys.argv):\n   a, b, c, d = map(int, input().split(' '))\n   \n   if a + b > c + d:\n-    print('left')\n   elif a + b < c + d:\n-    print('Right')\n   else:\n-    print('Balanced')\n-    \n-    \n   return 0\n \n \n if __name__ == '__main__':\n   sys.exit(main())\n",
        "origin_generated_text": "\n```\n \n import sys\n \n \n def main(argv=sys.argv):\n   a, b, c, d = map(int, input().split(' '))\n   \n   if a + b > c + d:\n-    print('left')\n   elif a + b < c + d:\n-    print('Right')\n   else:\n-    print('Balanced')\n-    \n-    \n   return 0\n \n \n if __name__ == '__main__':\n   sys.exit(main())\n```\n "
    },
    {
        "user_id": "u050584166",
        "problem_id": "p02640",
        "submission1_id": "s159268133",
        "crp_content": "\n n, m = map(int,input().split())\n-if m <= 2**n and m%2 == 0 and m != 0:\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n n, m = map(int,input().split())\n-if m <= 2**n and m%2 == 0 and m != 0:\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03272",
        "submission1_id": "s482869407",
        "crp_content": "\n-N, i = [int(n) for n in range(2)]\n \n print(N + 1 - i)\n",
        "origin_generated_text": "\n```\n-N, i = [int(n) for n in range(2)]\n \n print(N + 1 - i)\n```\n "
    },
    {
        "user_id": "u688375653",
        "problem_id": "p03479",
        "submission1_id": "s703248447",
        "crp_content": "\n def input_int():\n     return map(int, input().split())\n \n def one_int():\n     return int(input())\n \n def one_str():\n     return input()\n \n def many_int():\n     return list(map(int, input().split()))\n \n X,Y=input_int()\n count=0\n-while X<Y:\n     count+=1\n     X*=2\n print(count)\n",
        "origin_generated_text": "\n```\n def input_int():\n     return map(int, input().split())\n \n def one_int():\n     return int(input())\n \n def one_str():\n     return input()\n \n def many_int():\n     return list(map(int, input().split()))\n \n X,Y=input_int()\n count=0\n-while X<Y:\n     count+=1\n     X*=2\n print(count)\n```\n "
    },
    {
        "user_id": "u883048396",
        "problem_id": "p03296",
        "submission1_id": "s851092520",
        "crp_content": "\n iN = int(input())\n aS = [int(x) for x in input().rstrip().split()]\n \n \n \n \n \n \n \n iCounter = 0\n if iN == 2:\n     if aS[0] == aS[1]:\n         iCounter += 1\n else:\n     for i in range(1,iN-1):\n         if aS[i] == aS[i-1]:\n             if aS[i] == aS[i+1]:\n                 if aS[i] < 10000:\n                     aS[i] += 1\n                 else:\n                     aS[i] -= 1\n                 iCounter += 1\n             else:\n                 iU = max(aS[i],aS[i+1])\n                 if iU < 10000:\n                     iU += 1\n                 else:\n                     iU -= 1\n-                    if iU == min(aS[1],aS[i+1]):\n-                        iU -= 1\n                 aS[i] = iU\n                 iCounter += 1\n print(iCounter)\n \n",
        "origin_generated_text": "\n```\n iN = int(input())\n aS = [int(x) for x in input().rstrip().split()]\n \n \n \n \n \n \n \n iCounter = 0\n if iN == 2:\n     if aS[0] == aS[1]:\n         iCounter += 1\n else:\n     for i in range(1,iN-1):\n         if aS[i] == aS[i-1]:\n             if aS[i] == aS[i+1]:\n                 if aS[i] < 10000:\n                     aS[i] += 1\n                 else:\n                     aS[i] -= 1\n                 iCounter += 1\n             else:\n                 iU = max(aS[i],aS[i+1])\n                 if iU < 10000:\n                     iU += 1\n                 else:\n                     iU -= 1\n-                    if iU == min(aS[1],aS[i+1]):\n-                        iU -= 1\n                 aS[i] = iU\n                 iCounter += 1\n print(iCounter)\n \n```\n "
    },
    {
        "user_id": "u038408819",
        "problem_id": "p03716",
        "submission1_id": "s077575791",
        "crp_content": "\n N = int(input())\n a = list(map(int, input().split()))\n \n import heapq\n que1 = []\n heapq.heapify(que1)\n S = [0] * (2*N + 1)\n for i in range(N):\n     S[i + 1] = S[i] + a[i]\n     \n     heapq.heappush(que1, a[i])\n que2 = []\n heapq.heapify(que2)\n T = [0] * (2*N + 1)\n for i in range(N):\n     T[i + 1] = T[i] + a[3*N - i - 1]\n     \n     heapq.heappush(que2, -a[3*N - i - 1])\n \n for i in range(N, 2*N):\n     mi = heapq.heappop(que1)\n-    print(mi)\n     if a[i] > mi:\n         S[i + 1] = S[i] - mi + a[i]\n         \n         heapq.heappush(que1, a[i])\n     else:\n         S[i + 1] = S[i]\n         heapq.heappush(que1, mi)\n for i in range(N, 2*N):\n     ma = heapq.heappop(que2) * -1\n-    print(ma)\n     if a[3*N - i - 1] < ma:\n         T[i + 1] = T[i] - ma + a[3*N - i - 1]\n         \n         \n         heapq.heappush(que2, -a[3*N - i - 1])\n     else:\n         T[i + 1] = T[i]\n         heapq.heappush(que2, -ma)\n \n res = -float('Inf')\n for i in range(N, 2*N + 1):\n     res = max(res, S[i] - T[3*N - i])\n print(res)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n a = list(map(int, input().split()))\n \n import heapq\n que1 = []\n heapq.heapify(que1)\n S = [0] * (2*N + 1)\n for i in range(N):\n     S[i + 1] = S[i] + a[i]\n     \n     heapq.heappush(que1, a[i])\n que2 = []\n heapq.heapify(que2)\n T = [0] * (2*N + 1)\n for i in range(N):\n     T[i + 1] = T[i] + a[3*N - i - 1]\n     \n     heapq.heappush(que2, -a[3*N - i - 1])\n \n for i in range(N, 2*N):\n     mi = heapq.heappop(que1)\n-    print(mi)\n     if a[i] > mi:\n         S[i + 1] = S[i] - mi + a[i]\n         \n         heapq.heappush(que1, a[i])\n     else:\n         S[i + 1] = S[i]\n         heapq.heappush(que1, mi)\n for i in range(N, 2*N):\n     ma = heapq.heappop(que2) * -1\n-    print(ma)\n     if a[3*N - i - 1] < ma:\n         T[i + 1] = T[i] - ma + a[3*N - i - 1]\n         \n         \n         heapq.heappush(que2, -a[3*N - i - 1])\n     else:\n         T[i + 1] = T[i]\n         heapq.heappush(que2, -ma)\n \n res = -float('Inf')\n for i in range(N, 2*N + 1):\n     res = max(res, S[i] - T[3*N - i])\n print(res)\n \n```\n "
    },
    {
        "user_id": "u328755070",
        "problem_id": "p03992",
        "submission1_id": "s580081854",
        "crp_content": "\n s = input()\n \n-ans = s[:5] + ' ' + s[5:]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n s = input()\n \n-ans = s[:5] + ' ' + s[5:]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u037430802",
        "problem_id": "p03714",
        "submission1_id": "s016407859",
        "crp_content": "\n import heapq\n \n N = int(input())\n \n A = list(map(int, input().split()))\n \n left = A[:N]\n left_total = [(sum(left))]\n heapq.heapify(left)\n \n for i in range(N, 2*N):\n     l = heapq.heappop(left)\n     \n     if l >= A[i]:\n         heapq.heappush(left,l)\n         left_total.append(left_total[-1])\n     \n     else:\n         heapq.heappush(left,A[i])\n         left_total.append(left_total[-1] - l + A[i])\n \n \n right = [-i for i in A[2*N:]]\n right_total = [sum(right)]\n heapq.heapify(right)\n \n for i in reversed(range(N, 2*N)):\n     r = heapq.heappop(right)\n     \n     if r >= -1*A[i]:\n         heapq.heappush(right, r)\n         right_total.append(right_total[-1])\n     else:\n         heapq.heappush(right, A[i])\n         right_total.append(right_total[-1] - r - A[i])\n \n \n right_total = right_total[::-1]\n \n ans = -float(\"inf\")\n for i in range(len(left_total)):\n     ans = max(ans, left_total[i] + right_total[i])\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import heapq\n \n N = int(input())\n \n A = list(map(int, input().split()))\n \n left = A[:N]\n left_total = [(sum(left))]\n heapq.heapify(left)\n \n for i in range(N, 2*N):\n     l = heapq.heappop(left)\n     \n     if l >= A[i]:\n         heapq.heappush(left,l)\n         left_total.append(left_total[-1])\n     \n     else:\n         heapq.heappush(left,A[i])\n         left_total.append(left_total[-1] - l + A[i])\n \n \n right = [-i for i in A[2*N:]]\n right_total = [sum(right)]\n heapq.heapify(right)\n \n for i in reversed(range(N, 2*N)):\n     r = heapq.heappop(right)\n     \n     if r >= -1*A[i]:\n         heapq.heappush(right, r)\n         right_total.append(right_total[-1])\n     else:\n         heapq.heappush(right, A[i])\n         right_total.append(right_total[-1] - r - A[i])\n \n \n right_total = right_total[::-1]\n \n ans = -float(\"inf\")\n for i in range(len(left_total)):\n     ans = max(ans, left_total[i] + right_total[i])\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u991134049",
        "problem_id": "p03568",
        "submission1_id": "s550529663",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n kisuu = 0\n for i in range(N):\n   if A[i] % 2 == 0:\n     kisuu += 2\n-print(2**N-kisuu)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n kisuu = 0\n for i in range(N):\n   if A[i] % 2 == 0:\n     kisuu += 2\n-print(2**N-kisuu)\n```\n "
    },
    {
        "user_id": "u945181840",
        "problem_id": "p02954",
        "submission1_id": "s884452679",
        "crp_content": "\n S = input()\n \n even = 0\n odd = 0\n l = S.index('L')\n r = S.index('R')\n-ans = [0] * len(S)\n \n for i in range(len(S) - 1):\n     if i % 2 == 0:\n         even += 1\n     else:\n         odd += 1\n     if S[i] == 'R' and S[i + 1] == 'L':\n         l = i\n         r = i + 1\n         if i % 2 == 0:\n             ans[i] += even\n             ans[i + 1] += odd\n         else:\n             ans[i] += odd\n             ans[i + 1] += even\n         even = 0\n         odd = 0\n     elif S[i] == 'L' and S[i + 1] == 'R':\n         if l % 2 == 0:\n             ans[l] += even\n             ans[l + 1] += odd\n         else:\n             ans[l] += odd\n             ans[l + 1] += even\n         even = 0\n         odd = 0\n \n \n if (len(S) - 1 - l) % 2 == 0:\n     ans[l] += 1\n else:\n     ans[r] += 1\n \n if l % 2 == 0:\n     ans[l] += even\n     ans[l + 1] += odd\n else:\n     ans[l] += odd\n     ans[l + 1] += even\n \n-print(''.join(map(str, ans)))\n",
        "origin_generated_text": "\n```\n S = input()\n \n even = 0\n odd = 0\n l = S.index('L')\n r = S.index('R')\n-ans = [0] * len(S)\n \n for i in range(len(S) - 1):\n     if i % 2 == 0:\n         even += 1\n     else:\n         odd += 1\n     if S[i] == 'R' and S[i + 1] == 'L':\n         l = i\n         r = i + 1\n         if i % 2 == 0:\n             ans[i] += even\n             ans[i + 1] += odd\n         else:\n             ans[i] += odd\n             ans[i + 1] += even\n         even = 0\n         odd = 0\n     elif S[i] == 'L' and S[i + 1] == 'R':\n         if l % 2 == 0:\n             ans[l] += even\n             ans[l + 1] += odd\n         else:\n             ans[l] += odd\n             ans[l + 1] += even\n         even = 0\n         odd = 0\n \n \n if (len(S) - 1 - l) % 2 == 0:\n     ans[l] += 1\n else:\n     ans[r] += 1\n \n if l % 2 == 0:\n     ans[l] += even\n     ans[l + 1] += odd\n else:\n     ans[l] += odd\n     ans[l + 1] += even\n \n-print(''.join(map(str, ans)))\n```\n "
    },
    {
        "user_id": "u238504302",
        "problem_id": "p02642",
        "submission1_id": "s853036969",
        "crp_content": "\n from collections import Counter as c\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n \n count, a_max = 0, a[-1]\n li = [-1] * (a_max+1)\n \n for i in a:\n   if li[i] == -1:\n     count += 1\n     li[i] = 0\n   li[i] += 1\n   j = 2\n   while i * j <= a_max:\n     li[i*j] = 0\n     j += 1\n \n li.sort(reverse=True)\n for i in li:\n-  if i == 1 or i == 0 or i == -1: break\n   count -= 1\n \n print(count)\n",
        "origin_generated_text": "\n```\n from collections import Counter as c\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n \n count, a_max = 0, a[-1]\n li = [-1] * (a_max+1)\n \n for i in a:\n   if li[i] == -1:\n     count += 1\n     li[i] = 0\n   li[i] += 1\n   j = 2\n   while i * j <= a_max:\n     li[i*j] = 0\n     j += 1\n \n li.sort(reverse=True)\n for i in li:\n-  if i == 1 or i == 0 or i == -1: break\n   count -= 1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s486221148",
        "crp_content": "\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 1\n right = W\n up = 1\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             if down != H:\n                 down -= 1\n         elif T[i] == \"D\":\n             if up != 1:\n                 up += 1\n         elif T[i] == \"L\":\n             if right != W:\n                 right += 1\n         else:\n             if left != 1:\n                 left -= 1\n     if S[i] == \"U\":\n         up -= 1\n     elif S[i] == \"D\":\n         down += 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n if left <= sr <= right and up <= sc <= down:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n",
        "origin_generated_text": "\n```\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 1\n right = W\n up = 1\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             if down != H:\n                 down -= 1\n         elif T[i] == \"D\":\n             if up != 1:\n                 up += 1\n         elif T[i] == \"L\":\n             if right != W:\n                 right += 1\n         else:\n             if left != 1:\n                 left -= 1\n     if S[i] == \"U\":\n         up -= 1\n     elif S[i] == \"D\":\n         down += 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n if left <= sr <= right and up <= sc <= down:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s436421003",
        "crp_content": "\n N, K = map(int, input().split())\n-m = 1000000007\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] = dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k] % m\n       dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] = dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k] % m\n print(dp[N][0][K])\n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n-m = 1000000007\n \n dp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n \n dp[0][0][0] = 1\n for i in range(0, N):\n   for j in range(0, i+1):\n     for k in range(0, K+1):\n       dp[i+1][j+1][k+2*(j+1)] = dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k] % m\n       dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + dp[i][j][k] % m\n-      dp[i+1][j][k+2*j] = dp[i+1][j][k+2*j] + 2*j * dp[i][j][k] % m\n       if j > 0:\n-      \tdp[i+1][j-1][k+2*(j-1)] = dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k] % m\n print(dp[N][0][K])\n```\n "
    },
    {
        "user_id": "u528807020",
        "problem_id": "p03573",
        "submission1_id": "s069412762",
        "crp_content": "\n \n A,B,C  = [int(i) for i in input().split()]\n if A == B:\n-    print(\"C\")\n elif A == C:\n-    print(\"B\")\n elif B == C:\n-    print(\"A\")\n",
        "origin_generated_text": "\n```\n \n A,B,C  = [int(i) for i in input().split()]\n if A == B:\n-    print(\"C\")\n elif A == C:\n-    print(\"B\")\n elif B == C:\n-    print(\"A\")\n```\n "
    },
    {
        "user_id": "u946090308",
        "problem_id": "p03264",
        "submission1_id": "s096238727",
        "crp_content": "\n k = int(input())        \n if (k%2) == 1:\n     oe = ((k+1) * (k-3)) / 8\n     print(2 * oe)\n else:\n     o = (k+2) * (k-2)/8\n     e = k * (k-4) / 8\n     print(o+e)\n",
        "origin_generated_text": "\n```\n k = int(input())        \n if (k%2) == 1:\n     oe = ((k+1) * (k-3)) / 8\n     print(2 * oe)\n else:\n     o = (k+2) * (k-2)/8\n     e = k * (k-4) / 8\n     print(o+e)\n```\n "
    },
    {
        "user_id": "u022871813",
        "problem_id": "p03264",
        "submission1_id": "s951128304",
        "crp_content": "\n k = int(input())\n if k%2 == 0:\n-    a = (k/2)**2\n     print(a)\n else:\n-    a = ((k-1)/2)*((k-1)/2 + 1)\n     print(int(a))\n \n",
        "origin_generated_text": "\n```\n k = int(input())\n if k%2 == 0:\n-    a = (k/2)**2\n     print(a)\n else:\n-    a = ((k-1)/2)*((k-1)/2 + 1)\n     print(int(a))\n \n```\n "
    },
    {
        "user_id": "u808280993",
        "problem_id": "p03318",
        "submission1_id": "s154360269",
        "crp_content": "\n \n \n K = int(input())\n \n \n-Sunuke = [1, 2, 3, 4, 5, 6, 7, 8]\n \n \n-if K <= len(Sunuke):\n     for i in range(K):\n         print(Sunuke[i])\n \n else:\n     \n     resi = K - len(Sunuke)\n     \n     digit = 1\n \n     while resi > 0:\n         \n         for i in range(1, 10):\n             num = i * (10**digit) - 1\n             Sunuke.append(num)\n \n             resi -= 1\n             \n             \n \n         digit += 1\n \n \n for i in range(K):\n     print(Sunuke[i])\n",
        "origin_generated_text": "\n```\n \n \n K = int(input())\n \n \n-Sunuke = [1, 2, 3, 4, 5, 6, 7, 8]\n \n \n-if K <= len(Sunuke):\n     for i in range(K):\n         print(Sunuke[i])\n \n else:\n     \n     resi = K - len(Sunuke)\n     \n     digit = 1\n \n     while resi > 0:\n         \n         for i in range(1, 10):\n             num = i * (10**digit) - 1\n             Sunuke.append(num)\n \n             resi -= 1\n             \n             \n \n         digit += 1\n \n \n for i in range(K):\n     print(Sunuke[i])\n```\n "
    },
    {
        "user_id": "u944209426",
        "problem_id": "p03106",
        "submission1_id": "s335297490",
        "crp_content": "\n a,b,k=map(int,input().split())\n res=[]\n-for i in range(1,min(a,b)+1):\n     if a%i==0 and b%i==0:\n         res.append(i)\n print(res[k-1])\n",
        "origin_generated_text": "\n```\n a,b,k=map(int,input().split())\n res=[]\n-for i in range(1,min(a,b)+1):\n     if a%i==0 and b%i==0:\n         res.append(i)\n print(res[k-1])\n```\n "
    },
    {
        "user_id": "u836737505",
        "problem_id": "p03992",
        "submission1_id": "s661590698",
        "crp_content": "\n s = input()\n-print(s[:4]+\" \"+s[5:])\n",
        "origin_generated_text": "\n```\n s = input()\n-print(s[:4]+\" \"+s[5:])\n```\n "
    },
    {
        "user_id": "u412197640",
        "problem_id": "p02556",
        "submission1_id": "s034440107",
        "crp_content": "\n from sys import *\n N = int(stdin.readline())\n a = []\n \n for i in range(N):\n     tmp = list(map(int, stdin.readline().split()))\n     a.append(tmp)\n-a.sort(key = lambda k: k[0]+k[1])\n best = 0\n for i in range(N-1):\n     best = max(best, abs(a[i][0] - a[-1][0]) + abs(a[i][1] - a[-1][1]))\n \n print(best)\n \n",
        "origin_generated_text": "\n```\n from sys import *\n N = int(stdin.readline())\n a = []\n \n for i in range(N):\n     tmp = list(map(int, stdin.readline().split()))\n     a.append(tmp)\n-a.sort(key = lambda k: k[0]+k[1])\n best = 0\n for i in range(N-1):\n     best = max(best, abs(a[i][0] - a[-1][0]) + abs(a[i][1] - a[-1][1]))\n \n print(best)\n \n```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s329819305",
        "crp_content": "\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n     x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    y3 = s \n-    x3 = y3 * (10 ** 9) - s\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n     x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    y3 = s \n-    x3 = y3 * (10 ** 9) - s\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u734548018",
        "problem_id": "p02919",
        "submission1_id": "s958610435",
        "crp_content": "\n \n \n \n \n \n N = int(input())\n Pn = list(map(int, input().split()))\n \n In = [0] * (N+1)\n for i in range(N):\n   In[Pn[i]] = i+1\n-print(Pn)\n-print(In)\n \n cnt = 0\n l = [0] + [i for i in range(N+1)]\n r = [i+1 for i in range((N+1))] + [N+1]\n \n for v in range(1, N+1):\n   i = In[v]\n   \n   l1 = l[i]\n   l2 = l[l1]\n   r1 = r[i]\n   r2 = r[r1]\n   cnt += ((l1-l2) * (r1-i) + (i-l1) * (r2-r1)) * v\n   \n   l[r1] = l1\n   r[l1] = r1\n     \n print(cnt)\n \n",
        "origin_generated_text": "\n```\n \n \n \n \n \n N = int(input())\n Pn = list(map(int, input().split()))\n \n In = [0] * (N+1)\n for i in range(N):\n   In[Pn[i]] = i+1\n-print(Pn)\n-print(In)\n \n cnt = 0\n l = [0] + [i for i in range(N+1)]\n r = [i+1 for i in range((N+1))] + [N+1]\n \n for v in range(1, N+1):\n   i = In[v]\n   \n   l1 = l[i]\n   l2 = l[l1]\n   r1 = r[i]\n   r2 = r[r1]\n   cnt += ((l1-l2) * (r1-i) + (i-l1) * (r2-r1)) * v\n   \n   l[r1] = l1\n   r[l1] = r1\n     \n print(cnt)\n \n```\n "
    },
    {
        "user_id": "u729627789",
        "problem_id": "p02640",
        "submission1_id": "s723803678",
        "crp_content": "\n x, y = map(int, input().split())\n ret = 'No'\n-for i in range(x):\n     rem = y - 2*i\n     if rem%4 == 0:\n         ret = 'Yes'\n         break\n print(ret)\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n ret = 'No'\n-for i in range(x):\n     rem = y - 2*i\n     if rem%4 == 0:\n         ret = 'Yes'\n         break\n print(ret)\n```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p03573",
        "submission1_id": "s363270435",
        "crp_content": "\n a=list(input())\n a.sort()\n-print(a[4] if a[2]==a[3] else a[2])\n",
        "origin_generated_text": "\n```\n a=list(input())\n a.sort()\n-print(a[4] if a[2]==a[3] else a[2])\n```\n "
    },
    {
        "user_id": "u587213169",
        "problem_id": "p03416",
        "submission1_id": "s879327354",
        "crp_content": "\n a, b =map(int, input().split())\n count=0\n-for i in range(a,b):\n     m = list(str(i))\n     if m[0]==m[3]:\n         if m[1]==m[2]:\n             count+=1\n print(count)\n",
        "origin_generated_text": "\n```\n a, b =map(int, input().split())\n count=0\n-for i in range(a,b):\n     m = list(str(i))\n     if m[0]==m[3]:\n         if m[1]==m[2]:\n             count+=1\n print(count)\n```\n "
    },
    {
        "user_id": "u453623947",
        "problem_id": "p02730",
        "submission1_id": "s240659326",
        "crp_content": "\n S = list(input())\n N = len(S)\n s1 = S[:int((N-1)/2):]\n s2 = S[int(((N+3)/2)-1):int(N):]\n if S == S[::-1] :\n-    if s1 == s1[::-1] and s2 == s2[::-1] :\n         print(\"Yes\")\n     else :\n           print(\"No\")\n \n",
        "origin_generated_text": "\n```\n S = list(input())\n N = len(S)\n s1 = S[:int((N-1)/2):]\n s2 = S[int(((N+3)/2)-1):int(N):]\n if S == S[::-1] :\n-    if s1 == s1[::-1] and s2 == s2[::-1] :\n         print(\"Yes\")\n     else :\n           print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u626337957",
        "problem_id": "p02887",
        "submission1_id": "s043133447",
        "crp_content": "\n N = int(input())\n colors = list(input())\n-before = \"\"\n ans = 0\n for color in colors:\n   if color != before:\n     ans += 1\n   else:\n     before = color\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n colors = list(input())\n-before = \"\"\n ans = 0\n for color in colors:\n   if color != before:\n     ans += 1\n   else:\n     before = color\n print(ans)\n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s784331640",
        "crp_content": "\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n \n \n \n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s657097526",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(5e20 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = int(5e20 + 1)\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n```\n "
    },
    {
        "user_id": "u599547273",
        "problem_id": "p02963",
        "submission1_id": "s082779680",
        "crp_content": "\n S = int(input())\n \n X1, Y1 = 0, 0\n \n X2 = 10**9\n-Y3 = S\n \n X3 = 1\n-Y2 = (10**9) - S%(10**9)\n \n print(X1, Y1, X2, Y2, X3, Y3)\n",
        "origin_generated_text": "\n```\n S = int(input())\n \n X1, Y1 = 0, 0\n \n X2 = 10**9\n-Y3 = S\n \n X3 = 1\n-Y2 = (10**9) - S%(10**9)\n \n print(X1, Y1, X2, Y2, X3, Y3)\n```\n "
    },
    {
        "user_id": "u965581346",
        "problem_id": "p02917",
        "submission1_id": "s341719029",
        "crp_content": "\n \n  \n N = int(input())\n \n B = [int(e) for e in input().split()]\n \n A = [0] * N\n-A[N - 1] = B[N - 2]\n-A[N - 2] = B[N -2]\n \n \n for i in reversed(range(0, N - 1)):\n \tA[i] = min(A[i], B[i - 1])\n \tA[i - 1] = B[i - 1]\n \n \n print(sum(A))\n \n",
        "origin_generated_text": "\n```\n \n  \n N = int(input())\n \n B = [int(e) for e in input().split()]\n \n A = [0] * N\n-A[N - 1] = B[N - 2]\n-A[N - 2] = B[N -2]\n \n \n for i in reversed(range(0, N - 1)):\n \tA[i] = min(A[i], B[i - 1])\n \tA[i - 1] = B[i - 1]\n \n \n print(sum(A))\n \n```\n "
    },
    {
        "user_id": "u285443936",
        "problem_id": "p03633",
        "submission1_id": "s064383062",
        "crp_content": "\n N = int(input())\n T = [int(input()) for i in range(N)]\n \n dvs = []\n dvs_all = []\n \n def gcd(m,n):\n   x = max(m,n)\n   y = min(m,n)\n   if x%y == 0:\n     return y\n   else:\n     while x%y != 0:\n       z = x%y\n       x = y\n       y = z\n     else:\n       return z\n \n def lcm(m,n):\n   return m * n / gcd(m,n)\n \n if N == 1:\n   ans = T[0]\n else:\n   for i in range(N - 1):\n     T[i+1] = lcm(T[i], T[i+1])\n-    ans = T[i+1]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n T = [int(input()) for i in range(N)]\n \n dvs = []\n dvs_all = []\n \n def gcd(m,n):\n   x = max(m,n)\n   y = min(m,n)\n   if x%y == 0:\n     return y\n   else:\n     while x%y != 0:\n       z = x%y\n       x = y\n       y = z\n     else:\n       return z\n \n def lcm(m,n):\n   return m * n / gcd(m,n)\n \n if N == 1:\n   ans = T[0]\n else:\n   for i in range(N - 1):\n     T[i+1] = lcm(T[i], T[i+1])\n-    ans = T[i+1]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u928329738",
        "problem_id": "p00023",
        "submission1_id": "s008316601",
        "crp_content": "\n for i in range(int(input())):\n     points = input().split()\n     p = list(map(float,points))\n-    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n         print(2)\n-    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n         print(-2)\n-    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= (p[2]+p[5])**2:\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n for i in range(int(input())):\n     points = input().split()\n     p = list(map(float,points))\n-    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n         print(2)\n-    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n         print(-2)\n-    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= (p[2]+p[5])**2:\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u483722302",
        "problem_id": "p03475",
        "submission1_id": "s951061822",
        "crp_content": "\n \n N = int(input())\n C = []\n S = []\n F = []\n for i in range(N-1):\n     Ci, Si, Fi = list(map(int, input().split((\" \"))))\n     C.append(Ci)\n     S.append(Si)\n     F.append(Fi)\n \n ans = []\n for i in range(N):\n     t = 0\n     for j in range(i, N-1):\n         if t < S[j]:\n             t = S[j]\n         elif t % F[j] == 0:\n             pass\n         else:\n-            t += t + F[j] - (t % F[j])\n         t += C[j]\n     print(t)\n \n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n C = []\n S = []\n F = []\n for i in range(N-1):\n     Ci, Si, Fi = list(map(int, input().split((\" \"))))\n     C.append(Ci)\n     S.append(Si)\n     F.append(Fi)\n \n ans = []\n for i in range(N):\n     t = 0\n     for j in range(i, N-1):\n         if t < S[j]:\n             t = S[j]\n         elif t % F[j] == 0:\n             pass\n         else:\n-            t += t + F[j] - (t % F[j])\n         t += C[j]\n     print(t)\n \n \n```\n "
    },
    {
        "user_id": "u266014018",
        "problem_id": "p02642",
        "submission1_id": "s158015966",
        "crp_content": "\n def main():\n     import sys\n     def input(): return sys.stdin.readline().rstrip()\n     n = int(input())\n     a = list(map(int, input().split()))\n-    a = list(set(a))\n-    a_max = max(a)\n-    is_divable = [True]*(a_max+1)\n-    ans = 0\n-    is_divable[0],is_divable[1] = False,False\n-    for el in a:\n-        if is_divable[el]:\n-            ans +=1\n-            k = 2\n-            while k*el <= a_max:\n-                is_divable[k*el] = False\n-                k+=1\n-    print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     import sys\n     def input(): return sys.stdin.readline().rstrip()\n     n = int(input())\n     a = list(map(int, input().split()))\n-    a = list(set(a))\n-    a_max = max(a)\n-    is_divable = [True]*(a_max+1)\n-    ans = 0\n-    is_divable[0],is_divable[1] = False,False\n-    for el in a:\n-        if is_divable[el]:\n-            ans +=1\n-            k = 2\n-            while k*el <= a_max:\n-                is_divable[k*el] = False\n-                k+=1\n-    print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u500297289",
        "problem_id": "p03675",
        "submission1_id": "s321809466",
        "crp_content": "\n n = int(input())\n-a = list(input().split())\n \n b = []\n for i in range(n):\n     if i % 2 == 0:\n         b.append(a[i])\n     else:\n         b.insert(0, a[i])\n \n print(' '.join(b))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n-a = list(input().split())\n \n b = []\n for i in range(n):\n     if i % 2 == 0:\n         b.append(a[i])\n     else:\n         b.insert(0, a[i])\n \n print(' '.join(b))\n \n```\n "
    },
    {
        "user_id": "u763249708",
        "problem_id": "p03416",
        "submission1_id": "s018720992",
        "crp_content": "\n a, b = map(int, input().split())\n \n ans = 0\n for i in range(a, b+1):\n     s = str(i)\n     sl = len(s) \n     \n-    if s[:sl] == s[-sl:]: ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n \n ans = 0\n for i in range(a, b+1):\n     s = str(i)\n     sl = len(s) \n     \n-    if s[:sl] == s[-sl:]: ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u608726540",
        "problem_id": "p03943",
        "submission1_id": "s598114851",
        "crp_content": "\n a,b,c=map(int,input().split())\n-if (a+b+c)%2==0:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n a,b,c=map(int,input().split())\n-if (a+b+c)%2==0:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u170324846",
        "problem_id": "p03200",
        "submission1_id": "s195667734",
        "crp_content": "\n S = input()\n N = len(S)\n A = []\n \n for i, s in enumerate(S):\n   if s == \"W\":\n     A.append(i)\n \n-print(max(sum(A)-len(A), 0))\n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n A = []\n \n for i, s in enumerate(S):\n   if s == \"W\":\n     A.append(i)\n \n-print(max(sum(A)-len(A), 0))\n```\n "
    },
    {
        "user_id": "u226155577",
        "problem_id": "p03783",
        "submission1_id": "s224915491",
        "crp_content": "\n \n N = int(input())\n P = [list(map(int, input().split())) for i in range(N)]\n \n INF = 10**18\n \n from heapq import heappush, heappop\n \n l0, r0 = P[0]\n \n L = [-l0+1]\n R = [l0-1]\n s = t = 0\n \n def debug(L, s, t, R):\n     L0 = L[:]\n     Q1 = []; Q2 = []\n     while L0:\n         Q1.append(-s-heappop(L0))\n     R0 = R[:]\n     while R0:\n         Q2.append(t+heappop(R0))\n     print(\"debug:\", *Q1[::-1]+Q2)\n \n \n \n res = 0\n for i in range(N-1):\n     l0, r0 = P[i]\n     l1, r1 = P[i+1]\n     \n     s += (r1 - l1); t += (r0 - l0)\n     if -s-L[0] <= l1-1 <= t+R[0]:\n         \n         heappush(L, -l1+1-s)\n         heappush(R, l1-1-t)\n         \n     elif l1-1 < -s-L[0]:\n         \n         heappush(L, -l1+1-s)\n         heappush(L, -l1+1-s)\n         p = -heappop(L)-s\n         d = p - (-L[0]-s)\n         heappush(R, p-t)\n         \n         if d == 0:\n             res += p - (l1-1)\n         else:\n             res += d\n     elif t+R[0] < l1-1:\n         \n         heappush(R, l1-1-t)\n         heappush(R, l1-1-t)\n         p = heappop(R) + t\n         d = R[0]+t - p\n         heappush(L, -p-s)\n         \n         if d == 0:\n             res += (l1-1) - p\n         else:\n             res += d\n     \n     \n print(res)\n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n P = [list(map(int, input().split())) for i in range(N)]\n \n INF = 10**18\n \n from heapq import heappush, heappop\n \n l0, r0 = P[0]\n \n L = [-l0+1]\n R = [l0-1]\n s = t = 0\n \n def debug(L, s, t, R):\n     L0 = L[:]\n     Q1 = []; Q2 = []\n     while L0:\n         Q1.append(-s-heappop(L0))\n     R0 = R[:]\n     while R0:\n         Q2.append(t+heappop(R0))\n     print(\"debug:\", *Q1[::-1]+Q2)\n \n \n \n res = 0\n for i in range(N-1):\n     l0, r0 = P[i]\n     l1, r1 = P[i+1]\n     \n     s += (r1 - l1); t += (r0 - l0)\n     if -s-L[0] <= l1-1 <= t+R[0]:\n         \n         heappush(L, -l1+1-s)\n         heappush(R, l1-1-t)\n         \n     elif l1-1 < -s-L[0]:\n         \n         heappush(L, -l1+1-s)\n         heappush(L, -l1+1-s)\n         p = -heappop(L)-s\n         d = p - (-L[0]-s)\n         heappush(R, p-t)\n         \n         if d == 0:\n             res += p - (l1-1)\n         else:\n             res += d\n     elif t+R[0] < l1-1:\n         \n         heappush(R, l1-1-t)\n         heappush(R, l1-1-t)\n         p = heappop(R) + t\n         d = R[0]+t - p\n         heappush(L, -p-s)\n         \n         if d == 0:\n             res += (l1-1) - p\n         else:\n             res += d\n     \n     \n print(res)\n \n```\n "
    },
    {
        "user_id": "u703823201",
        "problem_id": "p02959",
        "submission1_id": "s125837125",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n \n cnt = 0\n for n in range(N):\n     if A[n] < B[n]:\n         cnt += A[n]\n         B[n] -= A[n]\n-        if A[n+1] < B[n]:\n             cnt += A[n+1]\n             B[n] -= A[n+1]\n         else:\n             cnt += B[n]\n             A[n+1] -= B[n]\n     else:\n         cnt += B[n]\n         \n print(cnt)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n B = list(map(int, input().split()))\n \n cnt = 0\n for n in range(N):\n     if A[n] < B[n]:\n         cnt += A[n]\n         B[n] -= A[n]\n-        if A[n+1] < B[n]:\n             cnt += A[n+1]\n             B[n] -= A[n+1]\n         else:\n             cnt += B[n]\n             A[n+1] -= B[n]\n     else:\n         cnt += B[n]\n         \n print(cnt)\n```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s645705480",
        "crp_content": "\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n             parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n-        if left_index < len(target_list) and right_index < len(target_list):\n             leaf = \" left key = {}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n             parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n-        if left_index < len(target_list) and right_index < len(target_list):\n             leaf = \" left key = {}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u547167033",
        "problem_id": "p03480",
        "submission1_id": "s733491833",
        "crp_content": "\n s=input()\n n=len(s)\n ans=-1\n-for i in range(n-1):\n   if s[i+1]!=s[i]:   \n     ans=max(ans,max(i,n-i-1))\n if ans==-1:\n   ans=n\n print(ans)\n",
        "origin_generated_text": "\n```\n s=input()\n n=len(s)\n ans=-1\n-for i in range(n-1):\n   if s[i+1]!=s[i]:   \n     ans=max(ans,max(i,n-i-1))\n if ans==-1:\n   ans=n\n print(ans)\n```\n "
    },
    {
        "user_id": "u600402037",
        "problem_id": "p03274",
        "submission1_id": "s997281529",
        "crp_content": "\n N, K = map(int, input().split())\n X = list(map(int, input().split()))\n \n answer = 10 ** 9\n for i in range(N-K+1):\n     b, c = X[i], X[i+K-1]\n     if b * c >= 0:\n-        answer = min(answer, max(abs(b), abs(c)))\n     else:\n         answer = min(answer, abs(b)*2+abs(c))\n print(answer)\n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n X = list(map(int, input().split()))\n \n answer = 10 ** 9\n for i in range(N-K+1):\n     b, c = X[i], X[i+K-1]\n     if b * c >= 0:\n-        answer = min(answer, max(abs(b), abs(c)))\n     else:\n         answer = min(answer, abs(b)*2+abs(c))\n print(answer)\n```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p03475",
        "submission1_id": "s700309976",
        "crp_content": "\n N = int(input())\n l = [list(map(int, input().split())) for j in range(N-1)]\n \n t = []\n for i in range(N-1):\n     t.append(l[i][0]+l[i][1])\n     for j in range(1, N-i-1):\n         if t[i] < l[i+j][1]:\n             t[i] = l[i+j][1] + l[i+j][0]\n            \n         else: \n-            t[i] += -(t[i]%(l[i+j][2])) + l[i+j][2] + l[i+j][0] \n \n t.append(0)\n for i in range(N):\n     print(t[i])\n \n \n",
        "origin_generated_text": "\n```\n N = int(input())\n l = [list(map(int, input().split())) for j in range(N-1)]\n \n t = []\n for i in range(N-1):\n     t.append(l[i][0]+l[i][1])\n     for j in range(1, N-i-1):\n         if t[i] < l[i+j][1]:\n             t[i] = l[i+j][1] + l[i+j][0]\n            \n         else: \n-            t[i] += -(t[i]%(l[i+j][2])) + l[i+j][2] + l[i+j][0] \n \n t.append(0)\n for i in range(N):\n     print(t[i])\n \n \n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p03087",
        "submission1_id": "s130037485",
        "crp_content": "\n N,Q=list(map(int, input().split()))\n S=input()\n \n \n dp=[[False, 0] for _ in range(N+1)]\n for i in range(1,N+1):\n     if S[i-1]=='A':\n         dp[i][0]=True\n         dp[i][1]=dp[i-1][1]\n     elif S[i-1]=='C':\n         dp[i][1]=dp[i-1][1]+int(dp[i-1][0])\n     else:\n         dp[i][1]=dp[i-1][1]\n \n \n \n for i in range(Q):\n     l,r=list(map(int, input().split()))\n     l-=1\n-    print(dp[r][1]-dp[l][1]-int(dp[l][0]))\n",
        "origin_generated_text": "\n```\n N,Q=list(map(int, input().split()))\n S=input()\n \n \n dp=[[False, 0] for _ in range(N+1)]\n for i in range(1,N+1):\n     if S[i-1]=='A':\n         dp[i][0]=True\n         dp[i][1]=dp[i-1][1]\n     elif S[i-1]=='C':\n         dp[i][1]=dp[i-1][1]+int(dp[i-1][0])\n     else:\n         dp[i][1]=dp[i-1][1]\n \n \n \n for i in range(Q):\n     l,r=list(map(int, input().split()))\n     l-=1\n-    print(dp[r][1]-dp[l][1]-int(dp[l][0]))\n```\n "
    },
    {
        "user_id": "u619458041",
        "problem_id": "p03626",
        "submission1_id": "s117133146",
        "crp_content": "\n import sys\n \n def main():\n     input = sys.stdin.readline\n     N = int(input())\n     A = [list(map(str, input().strip())) for _ in range(2)]\n     MOD = 10**9 + 7\n \n     D = []\n     flag = False\n     for i in range(N):\n         if A[0][i] != A[1][i] and flag:\n             D.append('h')\n             flag = False\n         elif A[0][i] != A[1][i]:\n             flag = True\n         else:\n             D.append('v')\n \n-    if N == 1:\n-        return 3\n-    if N == 2:\n-        return 6\n-    if N == 3:\n-        return 6\n-\n-    ans = 3\n-    for i in range(1, len(D)):\n-        if D[i-1] == 'v' and D[i] == 'h':\n-            ans *= 2\n-        elif D[i-1] == 'v' and D[i] == 'v':\n-            ans *= 2\n-        elif D[i-1] == 'h' and D[i] == 'h':\n-            ans *= 3\n-        else:\n-            ans *= 1\n-\n-\n-    return ans % MOD\n \n \n if __name__ == '__main__':\n     print(main())\n \n",
        "origin_generated_text": "\n```\n import sys\n \n def main():\n     input = sys.stdin.readline\n     N = int(input())\n     A = [list(map(str, input().strip())) for _ in range(2)]\n     MOD = 10**9 + 7\n \n     D = []\n     flag = False\n     for i in range(N):\n         if A[0][i] != A[1][i] and flag:\n             D.append('h')\n             flag = False\n         elif A[0][i] != A[1][i]:\n             flag = True\n         else:\n             D.append('v')\n \n-    if N == 1:\n-        return 3\n-    if N == 2:\n-        return 6\n-    if N == 3:\n-        return 6\n-\n-    ans = 3\n-    for i in range(1, len(D)):\n-        if D[i-1] == 'v' and D[i] == 'h':\n-            ans *= 2\n-        elif D[i-1] == 'v' and D[i] == 'v':\n-            ans *= 2\n-        elif D[i-1] == 'h' and D[i] == 'h':\n-            ans *= 3\n-        else:\n-            ans *= 1\n-\n-\n-    return ans % MOD\n \n \n if __name__ == '__main__':\n     print(main())\n \n```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s422722224",
        "crp_content": "\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                       \", left key =\"+str(plist[1][0])+\n                       \", right key =\"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                       str(plist[i-1][l])+\", left key =\"+str(plist[i+1][2*j])+\n                       \", right key =\"+str(plist[i+1][2*j+1]))\n         except:\n             l = int(j/2)\n             print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                   \", parent key =\"+str(plist[i-1][l]))\n         k += 1\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                       \", left key =\"+str(plist[1][0])+\n                       \", right key =\"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                       str(plist[i-1][l])+\", left key =\"+str(plist[i+1][2*j])+\n                       \", right key =\"+str(plist[i+1][2*j+1]))\n         except:\n             l = int(j/2)\n             print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                   \", parent key =\"+str(plist[i-1][l]))\n         k += 1\n \n```\n "
    },
    {
        "user_id": "u467307100",
        "problem_id": "p03573",
        "submission1_id": "s070918481",
        "crp_content": "\n a,  b, c = map(int,input().split())\n if a == b:\n-  print(a)\n-if b == c:\n-  print(b)\n-if a ==c:\n-  print(c)\n",
        "origin_generated_text": "\n```\n a,  b, c = map(int,input().split())\n if a == b:\n-  print(a)\n-if b == c:\n-  print(b)\n-if a ==c:\n-  print(c)\n```\n "
    },
    {
        "user_id": "u568576853",
        "problem_id": "p03546",
        "submission1_id": "s611541731",
        "crp_content": "\n h,w=map(int,input().split())\n wlist=[[0]*10 for _  in range(10)]\n for i in range(10):\n     b=list(map(int,input().split()))\n     for j in range(10):\n         wlist[i][j]=b[j]\n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             wlist[i][j]=min(wlist[i][j],wlist[i][k]+wlist[k][j])\n ans=0\n for _ in range(h):\n     t=list(map(int,input().split()))\n     for i in t:\n         if i==-1 or i==1:\n             continue\n         else:\n-            ans+=wlist[i][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n wlist=[[0]*10 for _  in range(10)]\n for i in range(10):\n     b=list(map(int,input().split()))\n     for j in range(10):\n         wlist[i][j]=b[j]\n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             wlist[i][j]=min(wlist[i][j],wlist[i][k]+wlist[k][j])\n ans=0\n for _ in range(h):\n     t=list(map(int,input().split()))\n     for i in t:\n         if i==-1 or i==1:\n             continue\n         else:\n-            ans+=wlist[i][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u411353821",
        "problem_id": "p02922",
        "submission1_id": "s871152411",
        "crp_content": "\n (A, B), = [list(map(int, s.split())) for s in open(0)]\n if A >= B:\n     print(1)\n else:\n-    if (B - A)%(A - 1) == 0:\n-        print(int((B - A)/(A - 1) + 1))\n-    else:\n-        t = (B - A)\n-        while A + (A - 1)*(t - 1) < B:\n-            t += 1\n-        print(int(t))\n",
        "origin_generated_text": "\n```\n (A, B), = [list(map(int, s.split())) for s in open(0)]\n if A >= B:\n     print(1)\n else:\n-    if (B - A)%(A - 1) == 0:\n-        print(int((B - A)/(A - 1) + 1))\n-    else:\n-        t = (B - A)\n-        while A + (A - 1)*(t - 1) < B:\n-            t += 1\n-        print(int(t))\n```\n "
    },
    {
        "user_id": "u327466606",
        "problem_id": "p02642",
        "submission1_id": "s558420596",
        "crp_content": "\n from itertools import islice\n def solve(A):\n     memo = [0]*(10**6+1)\n \n     for a in A:\n         memo[a] += 1\n     if memo[1] > 0:\n         return 1 if memo[1] == 1 else 0\n \n     res = 0\n     for i,v in enumerate(islice(memo,2,None),start=2):\n         if v > 0:\n             res += v\n             j = i\n             while j <= 10**6:\n                 memo[j] = 0\n                 j += i\n     return res\n \n if __name__ == '__main__':\n     N = int(input())\n     A = list(map(int,input().split()))\n     print(solve(A))\n \n",
        "origin_generated_text": "\n```\n from itertools import islice\n def solve(A):\n     memo = [0]*(10**6+1)\n \n     for a in A:\n         memo[a] += 1\n     if memo[1] > 0:\n         return 1 if memo[1] == 1 else 0\n \n     res = 0\n     for i,v in enumerate(islice(memo,2,None),start=2):\n         if v > 0:\n             res += v\n             j = i\n             while j <= 10**6:\n                 memo[j] = 0\n                 j += i\n     return res\n \n if __name__ == '__main__':\n     N = int(input())\n     A = list(map(int,input().split()))\n     print(solve(A))\n \n```\n "
    },
    {
        "user_id": "u352394527",
        "problem_id": "p02327",
        "submission1_id": "s686242624",
        "crp_content": "\n h, w = map(int, input().split())\n \n mp = []\n for _ in range(h):\n   lst = list(map(int, input().split()))\n   cum = []\n   acc = 0\n   for i in lst:\n     if not i:\n       acc += 1\n     else:\n       acc = 0\n     cum.append(acc)\n   mp.append(cum)\n mp.append([-1] * w)\n ans = 0\n \n for i in range(w - 1, -1, -1):\n   stack = []\n \n   for j in range(h + 1):\n \n     score = mp[j][i]\n     if not stack:\n       stack.append((score, j))\n     else:\n       last_score, last_ind = stack[-1][0], stack[-1][1]\n       if score > last_score:\n         stack.append((score, j))\n       elif score == last_score:\n         continue\n       else:\n         while stack and last_score > score:\n           last_score, last_ind = stack.pop()\n           ans = max(ans, last_score * (j - last_ind))\n         stack.append((score, last_ind))\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n \n mp = []\n for _ in range(h):\n   lst = list(map(int, input().split()))\n   cum = []\n   acc = 0\n   for i in lst:\n     if not i:\n       acc += 1\n     else:\n       acc = 0\n     cum.append(acc)\n   mp.append(cum)\n mp.append([-1] * w)\n ans = 0\n \n for i in range(w - 1, -1, -1):\n   stack = []\n \n   for j in range(h + 1):\n \n     score = mp[j][i]\n     if not stack:\n       stack.append((score, j))\n     else:\n       last_score, last_ind = stack[-1][0], stack[-1][1]\n       if score > last_score:\n         stack.append((score, j))\n       elif score == last_score:\n         continue\n       else:\n         while stack and last_score > score:\n           last_score, last_ind = stack.pop()\n           ans = max(ans, last_score * (j - last_ind))\n         stack.append((score, last_ind))\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u295294832",
        "problem_id": "p02963",
        "submission1_id": "s089158769",
        "crp_content": "\n N =int(input())\n-print(0,0,1,10**9,0,N%10**9)\n",
        "origin_generated_text": "\n```\n N =int(input())\n-print(0,0,1,10**9,0,N%10**9)\n```\n "
    },
    {
        "user_id": "u847923740",
        "problem_id": "p02718",
        "submission1_id": "s874811528",
        "crp_content": "\n \n \n import sys\n input=sys.stdin.readline\n \n def main():\n     n,m=map(int,input().split())\n     A=list(map(int,input().split()))\n     cnt=0\n     for i in range(n):\n-        if A[i]>=1/(4*m):\n             cnt+=1\n     if cnt>=m:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     \n     \n     \n if __name__==\"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n input=sys.stdin.readline\n \n def main():\n     n,m=map(int,input().split())\n     A=list(map(int,input().split()))\n     cnt=0\n     for i in range(n):\n-        if A[i]>=1/(4*m):\n             cnt+=1\n     if cnt>=m:\n         print(\"Yes\")\n     else:\n         print(\"No\")\n     \n     \n     \n if __name__==\"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s378701862",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(0)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tmaxhoge=max(maxhoge,a+b+c)\n \tif(hoge[i]!=hoge[i+1]):\n \t\ta=b\n \t\tb=c\n \t\tc=1\n \telse:\n \t\tc+=1\n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(0)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tmaxhoge=max(maxhoge,a+b+c)\n \tif(hoge[i]!=hoge[i+1]):\n \t\ta=b\n \t\tb=c\n \t\tc=1\n \telse:\n \t\tc+=1\n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u413165887",
        "problem_id": "p03096",
        "submission1_id": "s371351230",
        "crp_content": "\n n = int(input())\n c = [int(input()) for _i in range(n)]\n c.append(-1)\n dic = {}\n dp = [0 for _i in range(n+1)]\n dp[n] = 1\n mod = 10**9 +7\n for i in range(n):\n     if c[i-1] != c[i]:\n         if c[i] in dic:\n             dp[i] = (dp[i-1] + dic[c[i]])%mod\n         else:\n             dp[i] = dp[i-1]\n-        dic[c[i]] = dp[i-1]\n     else:\n         dp[i] = dp[i-1]\n     \n print(dp[n-1])\n",
        "origin_generated_text": "\n```\n n = int(input())\n c = [int(input()) for _i in range(n)]\n c.append(-1)\n dic = {}\n dp = [0 for _i in range(n+1)]\n dp[n] = 1\n mod = 10**9 +7\n for i in range(n):\n     if c[i-1] != c[i]:\n         if c[i] in dic:\n             dp[i] = (dp[i-1] + dic[c[i]])%mod\n         else:\n             dp[i] = dp[i-1]\n-        dic[c[i]] = dp[i-1]\n     else:\n         dp[i] = dp[i-1]\n     \n print(dp[n-1])\n```\n "
    },
    {
        "user_id": "u626337957",
        "problem_id": "p02553",
        "submission1_id": "s227447881",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n-print(max(a*c, b*c, b*c, a*d))\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n-print(max(a*c, b*c, b*c, a*d))\n```\n "
    },
    {
        "user_id": "u560464565",
        "problem_id": "p03080",
        "submission1_id": "s645915524",
        "crp_content": "\n \n \n import sys\n \n input = sys.stdin.readline\n N = int(input())\n-s = input().split()\n r = 0\n b = 0\n \n for i in range(0, len(s)):\n     if s[i] == 'R':\n         r += 1\n     else:\n         b += 1\n \n if r > b:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n \n input = sys.stdin.readline\n N = int(input())\n-s = input().split()\n r = 0\n b = 0\n \n for i in range(0, len(s)):\n     if s[i] == 'R':\n         r += 1\n     else:\n         b += 1\n \n if r > b:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u297109012",
        "problem_id": "p03096",
        "submission1_id": "s466991840",
        "crp_content": "\n def solve(N, Cs):\n     counts = [-1 for _ in Cs] + [1]\n     latest_c = {}\n     ans = 1\n     d = 10**9 + 7\n     for i, c in enumerate(Cs):\n         if c not in latest_c:\n             latest_c[c] = i\n             counts[i] = ans\n         else:\n             previous_i = latest_c[c]\n             if previous_i != i - 1:\n                 ans += counts[previous_i - 1]\n             ans %= d\n             latest_c[c] = i\n             counts[i] = ans\n     return ans % d\n \n if __name__ == \"__main__\":\n     N = int(input())\n     Cs = [int(input()) for _ in range(N)]\n     print(solve(N, Cs))\n \n",
        "origin_generated_text": "\n```\n def solve(N, Cs):\n     counts = [-1 for _ in Cs] + [1]\n     latest_c = {}\n     ans = 1\n     d = 10**9 + 7\n     for i, c in enumerate(Cs):\n         if c not in latest_c:\n             latest_c[c] = i\n             counts[i] = ans\n         else:\n             previous_i = latest_c[c]\n             if previous_i != i - 1:\n                 ans += counts[previous_i - 1]\n             ans %= d\n             latest_c[c] = i\n             counts[i] = ans\n     return ans % d\n \n if __name__ == \"__main__\":\n     N = int(input())\n     Cs = [int(input()) for _ in range(N)]\n     print(solve(N, Cs))\n \n```\n "
    },
    {
        "user_id": "u552176911",
        "problem_id": "p03475",
        "submission1_id": "s799920919",
        "crp_content": "\n import math\n \n n = int(input())\n cL = []\n sL = []\n fL = []\n for i in range(n - 1):\n     c, s, f = map(int, input().split(\" \"))\n     cL.append(c)\n     sL.append(s)\n     fL.append(f)\n \n ans = 0\n for i in range(n - 1):\n     sm = 0\n     for j in range(i, n - 1):\n         c = cL[j]\n         s = sL[j]\n         f = fL[j]\n         if sm < s:\n             sm = s\n         sm += c + (f - ((sm - s) % f) % f)\n     print(sm)\n print(0)\n",
        "origin_generated_text": "\n```\n import math\n \n n = int(input())\n cL = []\n sL = []\n fL = []\n for i in range(n - 1):\n     c, s, f = map(int, input().split(\" \"))\n     cL.append(c)\n     sL.append(s)\n     fL.append(f)\n \n ans = 0\n for i in range(n - 1):\n     sm = 0\n     for j in range(i, n - 1):\n         c = cL[j]\n         s = sL[j]\n         f = fL[j]\n         if sm < s:\n             sm = s\n         sm += c + (f - ((sm - s) % f) % f)\n     print(sm)\n print(0)\n```\n "
    },
    {
        "user_id": "u188916636",
        "problem_id": "p02917",
        "submission1_id": "s405952669",
        "crp_content": "\n N = int(input())\n B = list(map(int, input().split()))\n \n A=[0 for i in range(N)] \n A[0]=B[0]\n-A[N-2]=min(B[N-2],B[N-3])\n-A[N-1]=B[N-2]\n \n-for i in range(1,N-2):\n-  A[i] = min(B[i-1],B[i],B[i+1])\n-  \n print(sum(A))\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int, input().split()))\n \n A=[0 for i in range(N)] \n A[0]=B[0]\n-A[N-2]=min(B[N-2],B[N-3])\n-A[N-1]=B[N-2]\n \n-for i in range(1,N-2):\n-  A[i] = min(B[i-1],B[i],B[i+1])\n-  \n print(sum(A))\n```\n "
    },
    {
        "user_id": "u062691227",
        "problem_id": "p03970",
        "submission1_id": "s648631440",
        "crp_content": "\n s = input()\n-sum(a!=b for a, b in zip(s, 'CODEFESTIVAL2016'))\n",
        "origin_generated_text": "\n```\n s = input()\n-sum(a!=b for a, b in zip(s, 'CODEFESTIVAL2016'))\n```\n "
    },
    {
        "user_id": "u360116509",
        "problem_id": "p03626",
        "submission1_id": "s542694879",
        "crp_content": "\n def main():\n     N = int(input())\n     S1 = input()\n     S2 = input()\n-    ans = 3\n     i = 0\n-    while N - 1 > i:\n-        print(S1[i], S2[i])\n         if S1[i] == S2[i]:\n             if S1[i + 1] == S2[i + 1]:\n                 ans *= 2\n             i += 1\n         else:\n             if N > i + 2 and S1[i + 2] != S2[i + 2]:\n                 ans *= 3\n             else:\n                 ans *= 2\n             i += 2\n     print(ans % 1000000007)\n \n \n main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     N = int(input())\n     S1 = input()\n     S2 = input()\n-    ans = 3\n     i = 0\n-    while N - 1 > i:\n-        print(S1[i], S2[i])\n         if S1[i] == S2[i]:\n             if S1[i + 1] == S2[i + 1]:\n                 ans *= 2\n             i += 1\n         else:\n             if N > i + 2 and S1[i + 2] != S2[i + 2]:\n                 ans *= 3\n             else:\n                 ans *= 2\n             i += 2\n     print(ans % 1000000007)\n \n \n main()\n \n```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s941592048",
        "crp_content": "\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k]:\n                     dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                 else:\n                     dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n             else:\n                 dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n, W = map(int, input().split())\n dp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\n li = [list(map(int, input().split())) for _ in range(n)]\n p = li[0][0]\n for i, x in enumerate(li):\n     w, v = x\n     w -= p\n     for j in range(i + 1):\n         for k in range(301):\n             if k >= w:\n                 if dp[i][j][k - w] + v > dp[i][j][k]:\n                     dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                 else:\n                     dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n             else:\n                 dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n ans = 0\n for i in range(n + 1):\n     for k in range(301):\n         if i * p + k <= W:\n             ans = max(dp[n][i][k], ans)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u278379520",
        "problem_id": "p03477",
        "submission1_id": "s334659691",
        "crp_content": "\n a,b,c,d=map(int,input().split())\n if a+b<c+d:\n     print('Right')\n elif a+b>c+d:\n     print('Left')\n else:\n-    ('Balanced')\n \n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int,input().split())\n if a+b<c+d:\n     print('Right')\n elif a+b>c+d:\n     print('Left')\n else:\n-    ('Balanced')\n \n```\n "
    },
    {
        "user_id": "u095192632",
        "problem_id": "p02742",
        "submission1_id": "s770535226",
        "crp_content": "\n H, W = map(int, input().split())\n-if W > 0:\n \tHW = H*W\n \tprint(sum(divmod(HW, 2)))\n else:\n   print(0)\n",
        "origin_generated_text": "\n```\n H, W = map(int, input().split())\n-if W > 0:\n \tHW = H*W\n \tprint(sum(divmod(HW, 2)))\n else:\n   print(0)\n```\n "
    },
    {
        "user_id": "u941438707",
        "problem_id": "p02854",
        "submission1_id": "s459380367",
        "crp_content": "\n n,*a=map(int,open(0).read().split())\n b=sum(a)\n c=b\n d=200000\n for i in a:\n     c-=i\n     if c<0:\n         break\n     d=min(d,c)\n print(d)\n",
        "origin_generated_text": "\n```\n n,*a=map(int,open(0).read().split())\n b=sum(a)\n c=b\n d=200000\n for i in a:\n     c-=i\n     if c<0:\n         break\n     d=min(d,c)\n print(d)\n```\n "
    },
    {
        "user_id": "u043236471",
        "problem_id": "p03206",
        "submission1_id": "s044476386",
        "crp_content": "\n D = int(input())\n res = 'Christmas'\n-for _ in range(D, 25):\n     res += 'Eve'\n print(res)\n",
        "origin_generated_text": "\n```\n D = int(input())\n res = 'Christmas'\n-for _ in range(D, 25):\n     res += 'Eve'\n print(res)\n```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03796",
        "submission1_id": "s317598015",
        "crp_content": "\n N = int(input())\n s = 1\n for i in range(1, N+1):\n   s *= i\n-  s %= (7 + 1E+9)\n-print(s)\n",
        "origin_generated_text": "\n```\n N = int(input())\n s = 1\n for i in range(1, N+1):\n   s *= i\n-  s %= (7 + 1E+9)\n-print(s)\n```\n "
    },
    {
        "user_id": "u623231048",
        "problem_id": "p02642",
        "submission1_id": "s139844960",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n \n a.sort()\n li = [True] * (10**6 + 10)\n ans = 0\n \n for i in range(n):\n     if not li[a[i]]:\n         continue\n     li[a[i]] = False\n     if i < n-1:\n         if a[i+1] == a[i]:\n             continue\n     ans += 1\n     tmp = a[i]\n     while tmp < len(li):\n         li[tmp] = False\n         tmp += a[i]\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n \n a.sort()\n li = [True] * (10**6 + 10)\n ans = 0\n \n for i in range(n):\n     if not li[a[i]]:\n         continue\n     li[a[i]] = False\n     if i < n-1:\n         if a[i+1] == a[i]:\n             continue\n     ans += 1\n     tmp = a[i]\n     while tmp < len(li):\n         li[tmp] = False\n         tmp += a[i]\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u271176141",
        "problem_id": "p03573",
        "submission1_id": "s493924891",
        "crp_content": "\n \n A,B,C = map(int,input().split())\n \n if A == B:\n     print(C)\n elif A == C:\n     print(B)\n else:\n-    print(C)\n",
        "origin_generated_text": "\n```\n \n A,B,C = map(int,input().split())\n \n if A == B:\n     print(C)\n elif A == C:\n     print(B)\n else:\n-    print(C)\n```\n "
    },
    {
        "user_id": "u691018832",
        "problem_id": "p03023",
        "submission1_id": "s422331517",
        "crp_content": "\n \n import sys\n input = sys.stdin.readline\n \n n = int(input())\n-print(360+(n-3)*180)\n",
        "origin_generated_text": "\n```\n \n import sys\n input = sys.stdin.readline\n \n n = int(input())\n-print(360+(n-3)*180)\n```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03716",
        "submission1_id": "s522750953",
        "crp_content": "\n import heapq\n \n N = int(input())\n A = list(map(int,input().split()))\n C = A[N:(2*N)]\n \n L = []\n R = []\n for i in range(N):\n   heapq.heappush(L,A[i]) \n   heapq.heappush(R,-A[-1-i]) \n   \n \n \n lp = 0 \n rp = 0\n for i in range(N):\n   \n   if C[lp] - L[0] >= -C[-1-rp] - R[0]: \n     heapq.heappush(L, C[lp]) \n     temp = heapq.heappop(L)\n     lp += 1\n   else:\n     heapq.heappush(R, -C[-1-rp])\n     temp = heapq.heappop(R)    \n     rp += 1\n-print(L,R,lp,rp)\n ans = sum(L) + sum(R)\n print(ans)\n-    \n",
        "origin_generated_text": "\n```\n import heapq\n \n N = int(input())\n A = list(map(int,input().split()))\n C = A[N:(2*N)]\n \n L = []\n R = []\n for i in range(N):\n   heapq.heappush(L,A[i]) \n   heapq.heappush(R,-A[-1-i]) \n   \n \n \n lp = 0 \n rp = 0\n for i in range(N):\n   \n   if C[lp] - L[0] >= -C[-1-rp] - R[0]: \n     heapq.heappush(L, C[lp]) \n     temp = heapq.heappop(L)\n     lp += 1\n   else:\n     heapq.heappush(R, -C[-1-rp])\n     temp = heapq.heappop(R)    \n     rp += 1\n-print(L,R,lp,rp)\n ans = sum(L) + sum(R)\n print(ans)\n-    \n```\n "
    },
    {
        "user_id": "u062484507",
        "problem_id": "p03475",
        "submission1_id": "s546551993",
        "crp_content": "\n import sys\n read = sys.stdin.buffer.read\n readline = sys.stdin.buffer.readline\n readlines = sys.stdin.buffer.readlines\n \n \n n = int(readline())\n csf = [tuple(map(int, readline().split())) for _ in range(n-1)]\n \n for i in range(n):\n     now = 0\n     for c, s, f in csf[i::]:\n         if now <= s:\n-            now += s - now + c\n         else:\n             now += (now-s) % f + c\n     print(now)\n \n",
        "origin_generated_text": "\n```\n import sys\n read = sys.stdin.buffer.read\n readline = sys.stdin.buffer.readline\n readlines = sys.stdin.buffer.readlines\n \n \n n = int(readline())\n csf = [tuple(map(int, readline().split())) for _ in range(n-1)]\n \n for i in range(n):\n     now = 0\n     for c, s, f in csf[i::]:\n         if now <= s:\n-            now += s - now + c\n         else:\n             now += (now-s) % f + c\n     print(now)\n \n```\n "
    },
    {
        "user_id": "u255595446",
        "problem_id": "p02880",
        "submission1_id": "s720811989",
        "crp_content": "\n num = int(input())\n Flag = False\n for x in range(1,10):\n     for y in range(x,10):\n-        print(\"x\"+str(x)+\":y\"+str(y))\n         if x * y == num:\n             Flag = True\n             break\n     if Flag == True:\n         break\n \n if Flag:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n num = int(input())\n Flag = False\n for x in range(1,10):\n     for y in range(x,10):\n-        print(\"x\"+str(x)+\":y\"+str(y))\n         if x * y == num:\n             Flag = True\n             break\n     if Flag == True:\n         break\n \n if Flag:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u625729943",
        "problem_id": "p02887",
        "submission1_id": "s886436298",
        "crp_content": "\n N = int(input())\n S = input()\n \n S = S + 'A'\n last = S[0]\n cnt = 0\n for s in S[1:]:\n     if last == s:\n         continue\n     else:\n         cnt += 1\n         last = s\n-print(cnt-1)\n",
        "origin_generated_text": "\n```\n N = int(input())\n S = input()\n \n S = S + 'A'\n last = S[0]\n cnt = 0\n for s in S[1:]:\n     if last == s:\n         continue\n     else:\n         cnt += 1\n         last = s\n-print(cnt-1)\n```\n "
    },
    {
        "user_id": "u692632484",
        "problem_id": "p03087",
        "submission1_id": "s626075266",
        "crp_content": "\n N,Q = [int(i) for i in input().split()]\n S=input()\n lr = [[int(j)-1 for j in input().split()] for i in range(Q)]\n \n imos = [0 for i in range(N)]\n for i in range(N-1):\n     if S[i]=='A' and S[i+1]=='C':\n         imos[i]=1\n for i in range(N-1):\n     imos[i+1]+=imos[i]\n for l,r in lr:\n     res = imos[r]\n     if l>0:\n         res-=imos[l-1]\n     if S[r]=='A':\n         res-=1\n     print(res)\n \n",
        "origin_generated_text": "\n```\n N,Q = [int(i) for i in input().split()]\n S=input()\n lr = [[int(j)-1 for j in input().split()] for i in range(Q)]\n \n imos = [0 for i in range(N)]\n for i in range(N-1):\n     if S[i]=='A' and S[i+1]=='C':\n         imos[i]=1\n for i in range(N-1):\n     imos[i+1]+=imos[i]\n for l,r in lr:\n     res = imos[r]\n     if l>0:\n         res-=imos[l-1]\n     if S[r]=='A':\n         res-=1\n     print(res)\n \n```\n "
    },
    {
        "user_id": "u692746605",
        "problem_id": "p03087",
        "submission1_id": "s227728523",
        "crp_content": "\n N,Q=[int(i) for i in input().split()]\n S=input()\n \n c=[0]\n t = 0\n for i in range(1,N):\n    t += 1 if  (S[i-1]=='A' and S[i] == 'C') else 0\n    c.append(t)\n c.append(t)\n \n for _ in range(Q):\n     l,r=[int(x)-1 for x in input().split()]\n-    print(c[r]-c[l+1])\n \n",
        "origin_generated_text": "\n```\n N,Q=[int(i) for i in input().split()]\n S=input()\n \n c=[0]\n t = 0\n for i in range(1,N):\n    t += 1 if  (S[i-1]=='A' and S[i] == 'C') else 0\n    c.append(t)\n c.append(t)\n \n for _ in range(Q):\n     l,r=[int(x)-1 for x in input().split()]\n-    print(c[r]-c[l+1])\n \n```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s358030975",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     for _ in range(int.bit_length(N - 1) + 1):\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while a < b - 1:\n             u = bisect(Unreachs[a], b) - 1\n             ans += 2 ** u\n             a = Unreachs[a][u]\n         ans += 1\n-        print(ans)\n     return 0\n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     for _ in range(int.bit_length(N - 1) + 1):\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while a < b - 1:\n             u = bisect(Unreachs[a], b) - 1\n             ans += 2 ** u\n             a = Unreachs[a][u]\n         ans += 1\n-        print(ans)\n     return 0\n \n main()\n```\n "
    },
    {
        "user_id": "u253952966",
        "problem_id": "p03036",
        "submission1_id": "s784524952",
        "crp_content": "\n r,d,x = map(int, input().split())\n for i in range(10):\n   x =r*x-d\n-print(x)\n",
        "origin_generated_text": "\n```\n r,d,x = map(int, input().split())\n for i in range(10):\n   x =r*x-d\n-print(x)\n```\n "
    },
    {
        "user_id": "u137226361",
        "problem_id": "p02580",
        "submission1_id": "s293915255",
        "crp_content": "\n import collections\n \n h, w, m = map(int, input().split())\n lsh = [0] * h\n lsw = [0] * w\n \n bom = []\n for _ in range(m):\n     m1, m2 = map(int, input().split())\n     lsh[m1 - 1] += 1\n     lsw[m2 - 1] += 1\n     bom.append((m1-1, m2-1))\n \n lshmax = max(lsh)\n lswmax = max(lsw)\n-hin = [i for i in lsh if i == lshmax]\n-win = [i for i in lsw if i == lswmax]\n \n \n jd= False\n \n for i in hin:\n     for j in win:\n         if (i, j) not in bom:\n                     jd= True\n                     \n if jd:\n     print(lshmax+lswmax)\n else:\n     print(lshmax + lswmax -1)\n",
        "origin_generated_text": "\n```\n import collections\n \n h, w, m = map(int, input().split())\n lsh = [0] * h\n lsw = [0] * w\n \n bom = []\n for _ in range(m):\n     m1, m2 = map(int, input().split())\n     lsh[m1 - 1] += 1\n     lsw[m2 - 1] += 1\n     bom.append((m1-1, m2-1))\n \n lshmax = max(lsh)\n lswmax = max(lsw)\n-hin = [i for i in lsh if i == lshmax]\n-win = [i for i in lsw if i == lswmax]\n \n \n jd= False\n \n for i in hin:\n     for j in win:\n         if (i, j) not in bom:\n                     jd= True\n                     \n if jd:\n     print(lshmax+lswmax)\n else:\n     print(lshmax + lswmax -1)\n```\n "
    },
    {
        "user_id": "u863397945",
        "problem_id": "p03087",
        "submission1_id": "s641909806",
        "crp_content": "\n \n \n \n N,Q = map(int,input().split())\n S = input()\n \n l = [0]*N \n ans = 0\n \n for i in range(N-1):\n     if S[i] == \"A\" and S[i+1] == \"C\":\n         l[i] = 1\n-print(l)\n \n for i in range(Q):\n     lef,rig = map(int,input().split())\n-    print(l[lef-1:rig-1].count(1))\n",
        "origin_generated_text": "\n```\n \n \n \n N,Q = map(int,input().split())\n S = input()\n \n l = [0]*N \n ans = 0\n \n for i in range(N-1):\n     if S[i] == \"A\" and S[i+1] == \"C\":\n         l[i] = 1\n-print(l)\n \n for i in range(Q):\n     lef,rig = map(int,input().split())\n-    print(l[lef-1:rig-1].count(1))\n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03677",
        "submission1_id": "s657822891",
        "crp_content": "\n n,m=map(int,input().split())\n arr=list(map(int,input().split()))\n imos1=[0]*(m*2+2)\n imos2=[0]*(m*2+2)\n imos3=[0]*(m*2+2)\n for i in range(n-1):\n   cost=(m+arr[i+1]-arr[i])%m\n   if arr[i]<arr[i+1]:\n     imos1[arr[i]]+=1+cost\n     imos1[arr[i+1]+1]-=1+cost\n     imos2[arr[i]+1]+=-1\n     imos2[arr[i+1]+1]+=1\n     imos3[arr[i+1]+1]+=cost\n     if arr[i]!=1:\n       imos1[1]+=cost\n       imos1[arr[i]]-=cost\n     if arr[i+1]!=m:\n       imos1[arr[i+1]+1]+=cost\n       imos1[m+1]-=cost    \n   else:\n     imos1[arr[i]]+=1+cost\n     imos1[m+arr[i+1]+1]-=1+cost\n     imos2[arr[i]+1]+=-1\n     imos2[m+arr[i+1]+1]+=1\n     imos3[m+arr[i+1]+1]+=cost\n     imos1[arr[i+1]+1]+=cost\n     imos1[arr[i]]-=cost\n for i in range(1,m*2+2):\n   imos2[i]+=imos2[i-1]\n for i in range(m*2+2):\n   imos1[i]+=imos2[i]\n   imos1[i]+=imos3[i]\n for i in range(1,m*2+2):\n   imos1[i]+=imos1[i-1]\n xs=[0]*(m+1)\n xs[0]=10**18\n for i in range(1,m+1):\n   xs[i]=imos1[i]+imos1[m+i]\n print(min(xs))\n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n arr=list(map(int,input().split()))\n imos1=[0]*(m*2+2)\n imos2=[0]*(m*2+2)\n imos3=[0]*(m*2+2)\n for i in range(n-1):\n   cost=(m+arr[i+1]-arr[i])%m\n   if arr[i]<arr[i+1]:\n     imos1[arr[i]]+=1+cost\n     imos1[arr[i+1]+1]-=1+cost\n     imos2[arr[i]+1]+=-1\n     imos2[arr[i+1]+1]+=1\n     imos3[arr[i+1]+1]+=cost\n     if arr[i]!=1:\n       imos1[1]+=cost\n       imos1[arr[i]]-=cost\n     if arr[i+1]!=m:\n       imos1[arr[i+1]+1]+=cost\n       imos1[m+1]-=cost    \n   else:\n     imos1[arr[i]]+=1+cost\n     imos1[m+arr[i+1]+1]-=1+cost\n     imos2[arr[i]+1]+=-1\n     imos2[m+arr[i+1]+1]+=1\n     imos3[m+arr[i+1]+1]+=cost\n     imos1[arr[i+1]+1]+=cost\n     imos1[arr[i]]-=cost\n for i in range(1,m*2+2):\n   imos2[i]+=imos2[i-1]\n for i in range(m*2+2):\n   imos1[i]+=imos2[i]\n   imos1[i]+=imos3[i]\n for i in range(1,m*2+2):\n   imos1[i]+=imos1[i-1]\n xs=[0]*(m+1)\n xs[0]=10**18\n for i in range(1,m+1):\n   xs[i]=imos1[i]+imos1[m+i]\n print(min(xs))\n```\n "
    },
    {
        "user_id": "u315703650",
        "problem_id": "p03079",
        "submission1_id": "s604184355",
        "crp_content": "\n a = list(map(int,input().split()))\n a.sort()\n-if a[0]>a[1]+a[2]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n a = list(map(int,input().split()))\n a.sort()\n-if a[0]>a[1]+a[2]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u299257375",
        "problem_id": "p02407",
        "submission1_id": "s411274558",
        "crp_content": "\n-n = input()\n-print(list(map(int, input().split()))[::-1])\n \n",
        "origin_generated_text": "\n```\n-n = input()\n-print(list(map(int, input().split()))[::-1])\n \n```\n "
    },
    {
        "user_id": "u692632484",
        "problem_id": "p03764",
        "submission1_id": "s481632788",
        "crp_content": "\n INF=10**9+7\n L=[int(i)-1 for i in input().split()]\n x=[int(i)   for i in input().split()]\n y=[int(i)   for i in input().split()]\n x.sort()\n y.sort()\n \n X=[x[i+1]-x[i] for i in range(L[0])]\n Y=[y[i+1]-y[i] for i in range(L[1])]\n \n usingX=[0 for i in range(L[0])]\n usingY=[0 for i in range(L[1])]\n \n if L[0]%2==0:\n \tfor i in range(L[0]):\n \t\ttemp=min(i,L[0]-i-1)\n \t\ttemp+=1\n \t\tusingX[i]+=int(temp*(temp+1)/2)\n \t\t\n \t\tusingX[i]+=temp*int(L[0]/2-temp)\n \t\t\n \t\tusingX[i]*=2\n \t\t\n else:\n \tfor i in range(L[0]):\n \t\ttemp=min(i,L[0]-i-1)\n \t\ttemp+=1\n \t\tusingX[i]+=int(temp*(temp+1)/2)\n \t\tusingX[i]+=temp*int((L[0]-1)/2-temp)\n \t\tusingX[i]*=2\n \t\t\n \t\tusingX[i]+=temp\n \n \t\n \n \n if L[1]%2==0:\n \tfor i in range(L[1]):\n \t\ttemp=min(i,L[1]-i-1)\n \t\ttemp+=1\n \t\tusingY[i]+=int(temp*(temp+1)/2)\n \t\t\n \t\tusingY[i]+=temp*int(L[1]/2-temp)\n \t\t\n \t\tusingY[i]*=2\n \t\t\n else:\n \tfor i in range(L[1]):\n \t\ttemp=min(i,L[1]-i-1)\n \t\ttemp+=1\n \t\tusingY[i]+=int(temp*(temp+1)/2)\n \t\tusingY[i]+=temp*int((L[1]-1)/2-temp)\n \t\tusingY[i]*=2\n \t\t\n \t\tusingY[i]+=temp\n \n \t\n \n-print(usingX)\n-print(usingY)\n for i in range(L[0]):\n \tX[i]*=usingX[i]\n for j in range(L[1]):\n \tY[j]*=usingY[j]\n ans=sum(X)*sum(Y)\n print(ans%INF)\n",
        "origin_generated_text": "\n```\n INF=10**9+7\n L=[int(i)-1 for i in input().split()]\n x=[int(i)   for i in input().split()]\n y=[int(i)   for i in input().split()]\n x.sort()\n y.sort()\n \n X=[x[i+1]-x[i] for i in range(L[0])]\n Y=[y[i+1]-y[i] for i in range(L[1])]\n \n usingX=[0 for i in range(L[0])]\n usingY=[0 for i in range(L[1])]\n \n if L[0]%2==0:\n \tfor i in range(L[0]):\n \t\ttemp=min(i,L[0]-i-1)\n \t\ttemp+=1\n \t\tusingX[i]+=int(temp*(temp+1)/2)\n \t\t\n \t\tusingX[i]+=temp*int(L[0]/2-temp)\n \t\t\n \t\tusingX[i]*=2\n \t\t\n else:\n \tfor i in range(L[0]):\n \t\ttemp=min(i,L[0]-i-1)\n \t\ttemp+=1\n \t\tusingX[i]+=int(temp*(temp+1)/2)\n \t\tusingX[i]+=temp*int((L[0]-1)/2-temp)\n \t\tusingX[i]*=2\n \t\t\n \t\tusingX[i]+=temp\n \n \t\n \n \n if L[1]%2==0:\n \tfor i in range(L[1]):\n \t\ttemp=min(i,L[1]-i-1)\n \t\ttemp+=1\n \t\tusingY[i]+=int(temp*(temp+1)/2)\n \t\t\n \t\tusingY[i]+=temp*int(L[1]/2-temp)\n \t\t\n \t\tusingY[i]*=2\n \t\t\n else:\n \tfor i in range(L[1]):\n \t\ttemp=min(i,L[1]-i-1)\n \t\ttemp+=1\n \t\tusingY[i]+=int(temp*(temp+1)/2)\n \t\tusingY[i]+=temp*int((L[1]-1)/2-temp)\n \t\tusingY[i]*=2\n \t\t\n \t\tusingY[i]+=temp\n \n \t\n \n-print(usingX)\n-print(usingY)\n for i in range(L[0]):\n \tX[i]*=usingX[i]\n for j in range(L[1]):\n \tY[j]*=usingY[j]\n ans=sum(X)*sum(Y)\n print(ans%INF)\n```\n "
    },
    {
        "user_id": "u331226975",
        "problem_id": "p03079",
        "submission1_id": "s358100691",
        "crp_content": "\n ABC = list(map(int, input().split()))\n-if ABC[0] + ABC[1] < ABC[2] or ABC[1] + ABC[2] < ABC[0] or ABC[0] + ABC[2] < ABC[1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n ABC = list(map(int, input().split()))\n-if ABC[0] + ABC[1] < ABC[2] or ABC[1] + ABC[2] < ABC[0] or ABC[0] + ABC[2] < ABC[1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s400383604",
        "crp_content": "\n n = int(input())\n tree = [[-1, -1, True] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     if left != -1:\n         tree[id][0] = left\n         tree[left][2] = False\n     if right != -1:\n         tree[id][1] = right\n         tree[right][2] = False\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n root = 0\n for i, node in enumerate(tree):\n     if node[2] == True:\n         root = i\n \n print('Preoder')\n preoder(root)\n print('')\n print('Inorder')\n inorder(root)\n print('')\n print('Postorder')\n postorder(root)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n tree = [[-1, -1, True] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     if left != -1:\n         tree[id][0] = left\n         tree[left][2] = False\n     if right != -1:\n         tree[id][1] = right\n         tree[right][2] = False\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n root = 0\n for i, node in enumerate(tree):\n     if node[2] == True:\n         root = i\n \n print('Preoder')\n preoder(root)\n print('')\n print('Inorder')\n inorder(root)\n print('')\n print('Postorder')\n postorder(root)\n \n \n```\n "
    },
    {
        "user_id": "u564105430",
        "problem_id": "p02274",
        "submission1_id": "s685915082",
        "crp_content": "\n \n \n \n global cnt\n cnt=0\n \n def merge(A,left,mid,right):\n     L=A[left:mid]\n     R=A[mid:right]\n     L.append(float(\"inf\"))\n     R.append(float(\"inf\"))\n     \n     i=0\n     j=0\n     for k in range(left,right):\n         global cnt\n         if L[i]<=R[j]:\n             A[k]=L[i]\n             i=i+1\n         else:\n             A[k]=R[j]\n             j=j+1\n             cnt+=mid-left-i\n \n def mergeSort(A,left,right):\n     if left+1<right:\n         mid=(int)((left+right)/2)\n         mergeSort(A,left,mid)\n         mergeSort(A,mid,right)\n         merge(A,left,mid,right)\n \n n=int(input())\n S=list(map(int,input().split()))\n \n mergeSort(S,0,n)\n-print(*S)\n print(cnt)\n \n",
        "origin_generated_text": "\n```\n \n \n \n global cnt\n cnt=0\n \n def merge(A,left,mid,right):\n     L=A[left:mid]\n     R=A[mid:right]\n     L.append(float(\"inf\"))\n     R.append(float(\"inf\"))\n     \n     i=0\n     j=0\n     for k in range(left,right):\n         global cnt\n         if L[i]<=R[j]:\n             A[k]=L[i]\n             i=i+1\n         else:\n             A[k]=R[j]\n             j=j+1\n             cnt+=mid-left-i\n \n def mergeSort(A,left,right):\n     if left+1<right:\n         mid=(int)((left+right)/2)\n         mergeSort(A,left,mid)\n         mergeSort(A,mid,right)\n         merge(A,left,mid,right)\n \n n=int(input())\n S=list(map(int,input().split()))\n \n mergeSort(S,0,n)\n-print(*S)\n print(cnt)\n \n```\n "
    },
    {
        "user_id": "u793174294",
        "problem_id": "p03102",
        "submission1_id": "s721923233",
        "crp_content": "\n \n \n N,M,C=map(int, input().split())\n \n B=list(map(int, input().split()))\n count=total=0\n \n for j in range(N):\n   A=list(map(int, input().split()))\n   for k in range(M):\n     total=total+(A[k]*B[k])\n   else:\n     if total+C>0:\n       count+=1\n-      total=0\n \n print(count)\n",
        "origin_generated_text": "\n```\n \n \n N,M,C=map(int, input().split())\n \n B=list(map(int, input().split()))\n count=total=0\n \n for j in range(N):\n   A=list(map(int, input().split()))\n   for k in range(M):\n     total=total+(A[k]*B[k])\n   else:\n     if total+C>0:\n       count+=1\n-      total=0\n \n print(count)\n```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03677",
        "submission1_id": "s939773903",
        "crp_content": "\n from collections import defaultdict,deque\n import sys,heapq,bisect,math,itertools,string,queue,datetime\n sys.setrecursionlimit(10**8)\n INF = float('inf')\n mod = 10**9+7\n eps = 10**-7\n def inpl(): return list(map(int, input().split()))\n def inpl_s(): return list(input().split())\n \n N,M = inpl()\n aa = inpl()\n \n yama_height = [0]*(2*M)\n yama_num = [0]*(2*M)\n SUM = 0\n for i in range(1,N):\n \tna = aa[i]\n \tba = aa[i-1]\n \tif na < ba:\n \t\tna += M\n \tSUM += (na-ba)\n \tyama_height[na] = na - (ba + 1)\n \tyama_num[na] -= 1\n \tyama_num[ba+1] += 1\n \n tmp = 0\n for i in range(2*M):\n \ttmp += yama_num[i]\n \tyama_num[i] = tmp\n \n ans_list = [0]*(M)\n tmp = 0\n for i in reversed(range(2*M)):\n \ttmp += yama_height[i]\n \ttmp -= yama_num[i]\n \tans_list[i%M] += tmp\n \n print(SUM-max(ans_list))\n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict,deque\n import sys,heapq,bisect,math,itertools,string,queue,datetime\n sys.setrecursionlimit(10**8)\n INF = float('inf')\n mod = 10**9+7\n eps = 10**-7\n def inpl(): return list(map(int, input().split()))\n def inpl_s(): return list(input().split())\n \n N,M = inpl()\n aa = inpl()\n \n yama_height = [0]*(2*M)\n yama_num = [0]*(2*M)\n SUM = 0\n for i in range(1,N):\n \tna = aa[i]\n \tba = aa[i-1]\n \tif na < ba:\n \t\tna += M\n \tSUM += (na-ba)\n \tyama_height[na] = na - (ba + 1)\n \tyama_num[na] -= 1\n \tyama_num[ba+1] += 1\n \n tmp = 0\n for i in range(2*M):\n \ttmp += yama_num[i]\n \tyama_num[i] = tmp\n \n ans_list = [0]*(M)\n tmp = 0\n for i in reversed(range(2*M)):\n \ttmp += yama_height[i]\n \ttmp -= yama_num[i]\n \tans_list[i%M] += tmp\n \n print(SUM-max(ans_list))\n \n```\n "
    },
    {
        "user_id": "u852110531",
        "problem_id": "p02718",
        "submission1_id": "s821722284",
        "crp_content": "\n n, m = map(int, input().split())\n arr = list(map(int, input().split()))\n-temp = sum(arr)\n arr.sort()\n arr = arr[::-1]\n cnt = 0\n for i in range(n):\n-    if arr[i] >= temp:\n         cnt += 1\n if cnt >= m:\n     print(\"Yes\")\n     exit()\n print(\"No\")\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n arr = list(map(int, input().split()))\n-temp = sum(arr)\n arr.sort()\n arr = arr[::-1]\n cnt = 0\n for i in range(n):\n-    if arr[i] >= temp:\n         cnt += 1\n if cnt >= m:\n     print(\"Yes\")\n     exit()\n print(\"No\")\n```\n "
    },
    {
        "user_id": "u046158516",
        "problem_id": "p03943",
        "submission1_id": "s862208104",
        "crp_content": "\n a=list(map(int,input().split()))\n a.sort()\n-if a[0]+a[1]>a[2]:\n   print('No')\n else:\n   print('Yes')\n \n",
        "origin_generated_text": "\n```\n a=list(map(int,input().split()))\n a.sort()\n-if a[0]+a[1]>a[2]:\n   print('No')\n else:\n   print('Yes')\n \n```\n "
    },
    {
        "user_id": "u645250356",
        "problem_id": "p04019",
        "submission1_id": "s963392513",
        "crp_content": "\n from collections import Counter,defaultdict,deque\n from heapq import heappop,heappush,heapify\n import sys,bisect,math,itertools\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n mod2 = 998244353\n INF = float('inf')\n def inp(): return int(sys.stdin.readline())\n def inpl(): return list(map(int, sys.stdin.readline().split()))\n def inpln(n): return list(int(sys.stdin.readline()) for i in range(n))\n \n s = input()\n n = len(s)\n u = 0\n l = 0\n for i in s:\n     if i == 'N':\n         u += 1\n     elif i == 'S':\n         u -= 1\n     elif i == 'E':\n         l += 1\n     else:\n         l -= 1\n-    if u == 0 and l == 0:\n         print('Yes')\n         break\n else:\n     print('No')\n \n     \n",
        "origin_generated_text": "\n```\n from collections import Counter,defaultdict,deque\n from heapq import heappop,heappush,heapify\n import sys,bisect,math,itertools\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n mod2 = 998244353\n INF = float('inf')\n def inp(): return int(sys.stdin.readline())\n def inpl(): return list(map(int, sys.stdin.readline().split()))\n def inpln(n): return list(int(sys.stdin.readline()) for i in range(n))\n \n s = input()\n n = len(s)\n u = 0\n l = 0\n for i in s:\n     if i == 'N':\n         u += 1\n     elif i == 'S':\n         u -= 1\n     elif i == 'E':\n         l += 1\n     else:\n         l -= 1\n-    if u == 0 and l == 0:\n         print('Yes')\n         break\n else:\n     print('No')\n \n     \n```\n "
    },
    {
        "user_id": "u225528554",
        "problem_id": "p03480",
        "submission1_id": "s612105241",
        "crp_content": "\n if __name__==\"__main__\":\n     l = list(input())\n     N = len(l)\n-    results = [1]\n-    for i in range(0,N-1):\n-        if not l[i]==l[i+1]:\n-            results.append(max(i+1,N-i-1))\n-    print(min(results))\n",
        "origin_generated_text": "\n```\n if __name__==\"__main__\":\n     l = list(input())\n     N = len(l)\n-    results = [1]\n-    for i in range(0,N-1):\n-        if not l[i]==l[i+1]:\n-            results.append(max(i+1,N-i-1))\n-    print(min(results))\n```\n "
    },
    {
        "user_id": "u225388820",
        "problem_id": "p03568",
        "submission1_id": "s444693788",
        "crp_content": "\n n=int(input())\n a=list(map(int,input().split()))\n f=1\n for i in a:\n   if i&1:\n     f=0\n-print(3**n-1-f)\n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(int,input().split()))\n f=1\n for i in a:\n   if i&1:\n     f=0\n-print(3**n-1-f)\n```\n "
    },
    {
        "user_id": "u163703551",
        "problem_id": "p03716",
        "submission1_id": "s419310295",
        "crp_content": "\n import sys\n import heapq\n \n \n def solve(n, a):\n     res = -10 ** 20\n     for i in range(n, 2 * n + 1):\n         l = a[0:i]\n         r = a[i:3 * n]\n         l.sort(reverse=True)\n         r.sort()\n         res0 = sum(l[0:n]) - sum(r[0:n])\n         if res0 > res:\n             res = res0\n     return res\n \n \n def find_best(n, a):\n     h = list()\n     s = 0\n     best_s = 0\n     res = list()\n     for i in range(0, 2 * n):\n         heapq.heappush(h, a[i])\n         s += a[i]\n         if len(h) > n:\n             m = heapq.heappop(h)\n             s -= m\n         if len(h) == n:\n             if best_s < s:\n                 best_s = s\n             res.append(best_s)\n     return res\n \n \n def solve_large(n, a):\n     res = -10 ** 20\n     max_l = find_best(n, a)\n     b = [-x for x in reversed(a)]\n     max_r = find_best(n, b)\n     max_r.reverse()\n     for l, r in zip(max_l, max_r):\n         res0 = l + r\n         if res < res0:\n             res = res0\n     return res\n \n \n \n n = int(input())\n a = list(map(int, input().split()))\n print(solve_large(n, a))\n \n",
        "origin_generated_text": "\n```\n import sys\n import heapq\n \n \n def solve(n, a):\n     res = -10 ** 20\n     for i in range(n, 2 * n + 1):\n         l = a[0:i]\n         r = a[i:3 * n]\n         l.sort(reverse=True)\n         r.sort()\n         res0 = sum(l[0:n]) - sum(r[0:n])\n         if res0 > res:\n             res = res0\n     return res\n \n \n def find_best(n, a):\n     h = list()\n     s = 0\n     best_s = 0\n     res = list()\n     for i in range(0, 2 * n):\n         heapq.heappush(h, a[i])\n         s += a[i]\n         if len(h) > n:\n             m = heapq.heappop(h)\n             s -= m\n         if len(h) == n:\n             if best_s < s:\n                 best_s = s\n             res.append(best_s)\n     return res\n \n \n def solve_large(n, a):\n     res = -10 ** 20\n     max_l = find_best(n, a)\n     b = [-x for x in reversed(a)]\n     max_r = find_best(n, b)\n     max_r.reverse()\n     for l, r in zip(max_l, max_r):\n         res0 = l + r\n         if res < res0:\n             res = res0\n     return res\n \n \n \n n = int(input())\n a = list(map(int, input().split()))\n print(solve_large(n, a))\n \n```\n "
    },
    {
        "user_id": "u197427401",
        "problem_id": "p03023",
        "submission1_id": "s455254931",
        "crp_content": "\n-(int(input())-2) * 180\n",
        "origin_generated_text": "\n```\n-(int(input())-2) * 180\n```\n "
    },
    {
        "user_id": "u518042385",
        "problem_id": "p03264",
        "submission1_id": "s978781518",
        "crp_content": "\n i=int(input())\n if i%2==0:\n-  print((i/2)**2)\n else:\n-  print((i+1)*(i-1)/4)\n",
        "origin_generated_text": "\n```\n i=int(input())\n if i%2==0:\n-  print((i/2)**2)\n else:\n-  print((i+1)*(i-1)/4)\n```\n "
    },
    {
        "user_id": "u716641520",
        "problem_id": "p02556",
        "submission1_id": "s765500891",
        "crp_content": "\n n = int(input())\n maxx, minx, maxy, miny = -1**10, 1**10, -1**10, 1**10\n for _ in range(n):\n \tx, y = map(int, input().split())\n-\tx, y = x+y, x-y\n \tmaxx = max(maxx, x)\n \tminx = min(minx, x)\n \tmaxy = max(maxy, y)\n \tminy = min(miny, y)\n print(max(maxx - minx, maxy - miny))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n maxx, minx, maxy, miny = -1**10, 1**10, -1**10, 1**10\n for _ in range(n):\n \tx, y = map(int, input().split())\n-\tx, y = x+y, x-y\n \tmaxx = max(maxx, x)\n \tminx = min(minx, x)\n \tmaxy = max(maxy, y)\n \tminy = min(miny, y)\n print(max(maxx - minx, maxy - miny))\n \n```\n "
    },
    {
        "user_id": "u011555727",
        "problem_id": "p02887",
        "submission1_id": "s383581698",
        "crp_content": "\n n=int(input())\n s=input()\n k=0\n l=set(s)\n if len(l)==1:\n     print(len(l))\n     exit()\n for i in range(n-1):\n     if s[i]==s[i+1]:\n         k+=1\n-print(k)\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=input()\n k=0\n l=set(s)\n if len(l)==1:\n     print(len(l))\n     exit()\n for i in range(n-1):\n     if s[i]==s[i+1]:\n         k+=1\n-print(k)\n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s942807243",
        "crp_content": "\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n   if cou > 0 and lis[i] == \"g\":\n     cou -= 1\n     ans += 1\n   else:\n     cou += 1\n     if lis[i] == \"p\":\n       ans -= 1\n-print(ans - cou)\n",
        "origin_generated_text": "\n```\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n   if cou > 0 and lis[i] == \"g\":\n     cou -= 1\n     ans += 1\n   else:\n     cou += 1\n     if lis[i] == \"p\":\n       ans -= 1\n-print(ans - cou)\n```\n "
    },
    {
        "user_id": "u888548672",
        "problem_id": "p00375",
        "submission1_id": "s466298205",
        "crp_content": "\n-print((int(input())-30)/2)\n \n",
        "origin_generated_text": "\n```\n-print((int(input())-30)/2)\n \n```\n "
    },
    {
        "user_id": "u300538442",
        "problem_id": "p02912",
        "submission1_id": "s590096809",
        "crp_content": "\n import heapq\n X = list(map(int, input().split()))\n A = list(map(int, input().split()))\n heapq.heapify(A)\n \n for i in range(X[1]):\n   x = heapq.heappop(A) * (-1)\n-  heapq.heappush(A, int(x/2) * (-1))\n \n ans = 0\n for i in range(X[0]):\n   ans += A[i]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import heapq\n X = list(map(int, input().split()))\n A = list(map(int, input().split()))\n heapq.heapify(A)\n \n for i in range(X[1]):\n   x = heapq.heappop(A) * (-1)\n-  heapq.heappush(A, int(x/2) * (-1))\n \n ans = 0\n for i in range(X[0]):\n   ans += A[i]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u637175065",
        "problem_id": "p03734",
        "submission1_id": "s525440127",
        "crp_content": "\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n \n sys.setrecursionlimit(10**7)\n inf = 10**20\n mod = 10**9 + 7\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def S(): return input()\n \n \n def main():\n     n,W = LI()\n     a = [LI() for _ in range(n)]\n     r = 0\n     d = collections.defaultdict(int)\n     d[0] = 0\n     for w,v in a:\n         for e,f in list(d.items()):\n             if e+w > W:\n                 continue\n             if d[e+w] < d[e] + v:\n                 d[e+w] = d[e] + v\n \n     return max(d.values())\n \n \n print(main())\n \n",
        "origin_generated_text": "\n```\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n \n sys.setrecursionlimit(10**7)\n inf = 10**20\n mod = 10**9 + 7\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def S(): return input()\n \n \n def main():\n     n,W = LI()\n     a = [LI() for _ in range(n)]\n     r = 0\n     d = collections.defaultdict(int)\n     d[0] = 0\n     for w,v in a:\n         for e,f in list(d.items()):\n             if e+w > W:\n                 continue\n             if d[e+w] < d[e] + v:\n                 d[e+w] = d[e] + v\n \n     return max(d.values())\n \n \n print(main())\n \n```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03477",
        "submission1_id": "s131498746",
        "crp_content": "\n-a,b,c,d = map(str,input().split())\n-print(\"Left\" if a+b > c+d else \"Balanced\" if (a+b) == (c+d) else \"Right\")\n \n",
        "origin_generated_text": "\n```\n-a,b,c,d = map(str,input().split())\n-print(\"Left\" if a+b > c+d else \"Balanced\" if (a+b) == (c+d) else \"Right\")\n \n```\n "
    },
    {
        "user_id": "u471684875",
        "problem_id": "p02954",
        "submission1_id": "s726314930",
        "crp_content": "\n s=str(input())\n \n l=[0]*len(s)\n \n for i in range(len(s)):\n         if s[i]=='R' and i%2==1:\n                 a=s.find('L',i)\n                 l[a-1]+=1\n         elif s[i]=='R' and i%2==0:\n                 a=s.find('L',i)\n                 l[a]+=1\n         elif s[i]=='L' and i%2==1:\n-                a=s.rfind('R',0,i)\n                 l[a]+=1\n         elif s[i]=='L' and i%2==0:\n-                a=s.rfind('R',0,i)\n                 l[a+1]+=1\n print(' '.join(map(str,l)))\n         \n",
        "origin_generated_text": "\n```\n s=str(input())\n \n l=[0]*len(s)\n \n for i in range(len(s)):\n         if s[i]=='R' and i%2==1:\n                 a=s.find('L',i)\n                 l[a-1]+=1\n         elif s[i]=='R' and i%2==0:\n                 a=s.find('L',i)\n                 l[a]+=1\n         elif s[i]=='L' and i%2==1:\n-                a=s.rfind('R',0,i)\n                 l[a]+=1\n         elif s[i]=='L' and i%2==0:\n-                a=s.rfind('R',0,i)\n                 l[a+1]+=1\n print(' '.join(map(str,l)))\n         \n```\n "
    },
    {
        "user_id": "u395202850",
        "problem_id": "p02854",
        "submission1_id": "s333024052",
        "crp_content": "\n import sys\n import collections\n import bisect\n \n \n def main():\n     n = int(input())\n     AList = list(map(int, input().split()))\n-    sumAList = AList\n-    sumA = sum(AList)\n-    for i in range(n):\n-        if i != 0:\n-            AList[i] = AList[i] + AList[i - 1]\n-        if sumA - AList[i] <= AList[i]:\n-            print(abs(sumA - 2 * AList[i]))\n-            return\n \n-    print(sumAList)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n import sys\n import collections\n import bisect\n \n \n def main():\n     n = int(input())\n     AList = list(map(int, input().split()))\n-    sumAList = AList\n-    sumA = sum(AList)\n-    for i in range(n):\n-        if i != 0:\n-            AList[i] = AList[i] + AList[i - 1]\n-        if sumA - AList[i] <= AList[i]:\n-            print(abs(sumA - 2 * AList[i]))\n-            return\n \n-    print(sumAList)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u614917104",
        "problem_id": "p03729",
        "submission1_id": "s372167378",
        "crp_content": "\n a,b,c = input().split()\n n = 0\n if a[len(a)-1] == b[0] and b[len(b)-1] == c[0]:\n-    print('Yes')\n else:\n-    print('No')\n",
        "origin_generated_text": "\n```\n a,b,c = input().split()\n n = 0\n if a[len(a)-1] == b[0] and b[len(b)-1] == c[0]:\n-    print('Yes')\n else:\n-    print('No')\n```\n "
    },
    {
        "user_id": "u372144784",
        "problem_id": "p03272",
        "submission1_id": "s477328991",
        "crp_content": "\n n,i = map(int,input().split())\n \n-print(n-1+1)\n \n",
        "origin_generated_text": "\n```\n n,i = map(int,input().split())\n \n-print(n-1+1)\n \n```\n "
    },
    {
        "user_id": "u170201762",
        "problem_id": "p02962",
        "submission1_id": "s527201853",
        "crp_content": "\n def Z(S):\n     res = [0]*len(S)\n     res[0] = len(S)\n     i = 1\n     j = 0\n     while i < len(S):\n         while i+j < len(S) and S[j] == S[i+j]:\n             j += 1\n         res[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i+k < len(S) and k+res[k] < j:\n             res[i+k] = res[k]\n             k += 1\n         i += k\n         j -= k\n     return res\n \n from collections import defaultdict\n class UnionFind:\n     def __init__(self, num):\n         self.table = [-1 for _ in range(num)]\n         self.sz = defaultdict(lambda:1)\n \n     def find(self, x):\n         if self.table[x] < 0:\n             return x\n         else:\n             self.table[x] = self.find(self.table[x])\n             return self.table[x]\n \n     def union(self, x, y):\n         s1 = self.find(x)\n         s2 = self.find(y)\n \n         if s1 != s2:\n             size = self.sz[s1]+self.sz[s2]\n             if self.table[s1] <= self.table[s2]:\n                 self.table[s1] += self.table[s2]\n                 self.table[s2] = s1\n             else:\n                 self.table[s2] += self.table[s1]\n                 self.table[s1] = s2\n             s = self.find(x)\n             self.sz[s] = size\n             return True\n         return False\n \n     def size(self, x):\n         s = self.find(x)\n         return self.sz[s]\n \n s = input()\n t = input()\n \n S = ''\n while len(S) <= len(t):\n     S = S + s\n S = S + S\n z = Z(t+'*'+S+S)\n z = z[len(t)+1:]\n u = UnionFind(len(z))\n ans = 0\n for i in range(len(z)-len(t)):\n     if z[i]==len(t) and z[i+len(t)]==len(t):\n         u.union(i,i+len(t))\n         if i+len(t) < len(S):\n             ans = max(u.size(i),ans)\n         else:\n             if u.size(i) > ans:\n                 ans = -1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n def Z(S):\n     res = [0]*len(S)\n     res[0] = len(S)\n     i = 1\n     j = 0\n     while i < len(S):\n         while i+j < len(S) and S[j] == S[i+j]:\n             j += 1\n         res[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i+k < len(S) and k+res[k] < j:\n             res[i+k] = res[k]\n             k += 1\n         i += k\n         j -= k\n     return res\n \n from collections import defaultdict\n class UnionFind:\n     def __init__(self, num):\n         self.table = [-1 for _ in range(num)]\n         self.sz = defaultdict(lambda:1)\n \n     def find(self, x):\n         if self.table[x] < 0:\n             return x\n         else:\n             self.table[x] = self.find(self.table[x])\n             return self.table[x]\n \n     def union(self, x, y):\n         s1 = self.find(x)\n         s2 = self.find(y)\n \n         if s1 != s2:\n             size = self.sz[s1]+self.sz[s2]\n             if self.table[s1] <= self.table[s2]:\n                 self.table[s1] += self.table[s2]\n                 self.table[s2] = s1\n             else:\n                 self.table[s2] += self.table[s1]\n                 self.table[s1] = s2\n             s = self.find(x)\n             self.sz[s] = size\n             return True\n         return False\n \n     def size(self, x):\n         s = self.find(x)\n         return self.sz[s]\n \n s = input()\n t = input()\n \n S = ''\n while len(S) <= len(t):\n     S = S + s\n S = S + S\n z = Z(t+'*'+S+S)\n z = z[len(t)+1:]\n u = UnionFind(len(z))\n ans = 0\n for i in range(len(z)-len(t)):\n     if z[i]==len(t) and z[i+len(t)]==len(t):\n         u.union(i,i+len(t))\n         if i+len(t) < len(S):\n             ans = max(u.size(i),ans)\n         else:\n             if u.size(i) > ans:\n                 ans = -1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u391731808",
        "problem_id": "p03952",
        "submission1_id": "s794959673",
        "crp_content": "\n N,x = map(int,input().split())\n-if N in {1,2*N-1}:print(\"No\")\n else:\n     print(\"Yes\")\n     if x>=N:\n-        ans = list(range(N,x))+list(range(x+1,2*N)) + [x] + list(range(1,N))\n     else:\n-        ans = list(range(N+1,2*N)) + [x] + list(range(1,x)) + list(range(x+1,N+1))\n     print(\"\\n\".join(map(str,ans)))\n",
        "origin_generated_text": "\n```\n N,x = map(int,input().split())\n-if N in {1,2*N-1}:print(\"No\")\n else:\n     print(\"Yes\")\n     if x>=N:\n-        ans = list(range(N,x))+list(range(x+1,2*N)) + [x] + list(range(1,N))\n     else:\n-        ans = list(range(N+1,2*N)) + [x] + list(range(1,x)) + list(range(x+1,N+1))\n     print(\"\\n\".join(map(str,ans)))\n```\n "
    },
    {
        "user_id": "u307028468",
        "problem_id": "p02727",
        "submission1_id": "s520069102",
        "crp_content": "\n X, Y, A, B, C = (int(x) for x in input().split())\n R = [int(i) for i in input().split()]\n G = [int(i) for i in input().split()]\n M = [int(i) for i in input().split()]\n \n-print(R, G, M)\n-\n R.sort(reverse=True)\n G.sort(reverse=True)\n \n for i in range(X):\n   M.append(R[i])\n \n for i in range(Y):\n   M.append(G[i])\n \n M.sort(reverse=True)\n \n ans = 0\n for i in range(X + Y):\n   ans = M[i] + ans\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n X, Y, A, B, C = (int(x) for x in input().split())\n R = [int(i) for i in input().split()]\n G = [int(i) for i in input().split()]\n M = [int(i) for i in input().split()]\n \n-print(R, G, M)\n-\n R.sort(reverse=True)\n G.sort(reverse=True)\n \n for i in range(X):\n   M.append(R[i])\n \n for i in range(Y):\n   M.append(G[i])\n \n M.sort(reverse=True)\n \n ans = 0\n for i in range(X + Y):\n   ans = M[i] + ans\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u704001626",
        "problem_id": "p03206",
        "submission1_id": "s983851982",
        "crp_content": "\n \n-a = 25 - int(input())\n print(\"Christmas \" + \"Eve\" * a)\n \n",
        "origin_generated_text": "\n```\n \n-a = 25 - int(input())\n print(\"Christmas \" + \"Eve\" * a)\n \n```\n "
    },
    {
        "user_id": "u567124995",
        "problem_id": "p03272",
        "submission1_id": "s834711031",
        "crp_content": "\n l = list(map(int, input().split()))\n-print((l[0] + l[1]) -1)\n \n",
        "origin_generated_text": "\n```\n l = list(map(int, input().split()))\n-print((l[0] + l[1]) -1)\n \n```\n "
    },
    {
        "user_id": "u888092736",
        "problem_id": "p02854",
        "submission1_id": "s500089526",
        "crp_content": "\n from itertools import accumulate\n \n \n N = int(input())\n A = [0] + list(accumulate(map(int, input().split())))\n-print(A)\n min_diff = float(\"inf\")\n for i in range(N - 1):\n     if abs(A[N] - 2 * A[i + 1]) < min_diff:\n         min_diff = abs(A[N] - 2 * A[i + 1])\n print(abs(min_diff))\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n \n N = int(input())\n A = [0] + list(accumulate(map(int, input().split())))\n-print(A)\n min_diff = float(\"inf\")\n for i in range(N - 1):\n     if abs(A[N] - 2 * A[i + 1]) < min_diff:\n         min_diff = abs(A[N] - 2 * A[i + 1])\n print(abs(min_diff))\n \n```\n "
    },
    {
        "user_id": "u156815136",
        "problem_id": "p02954",
        "submission1_id": "s180699724",
        "crp_content": "\n S = input()\n n = len(S)\n maze = [1] * n\n \n for i in range(0,n-1):\n     if S[i] == S[i+1] == 'R':\n-        print('before',maze)\n         maze[i+2] += maze[i]\n         maze[i] = 0\n-        print('after',maze)\n \n for i in range(n-1,0,-1):\n     if S[i] == S[i-1] == 'L':\n         maze[i-2] += maze[i]\n         maze[i] = 0\n \n print(*maze)\n \n",
        "origin_generated_text": "\n```\n S = input()\n n = len(S)\n maze = [1] * n\n \n for i in range(0,n-1):\n     if S[i] == S[i+1] == 'R':\n-        print('before',maze)\n         maze[i+2] += maze[i]\n         maze[i] = 0\n-        print('after',maze)\n \n for i in range(n-1,0,-1):\n     if S[i] == S[i-1] == 'L':\n         maze[i-2] += maze[i]\n         maze[i] = 0\n \n print(*maze)\n \n```\n "
    },
    {
        "user_id": "u580806822",
        "problem_id": "p03296",
        "submission1_id": "s773308466",
        "crp_content": "\n n=int(input())\n a=[int(i)for i in input().split()]\n \n count=0\n p=1\n while p<n-1:\n     if a[p-1] == a[p]:\n         if a[p-1] == a[p] == a[p+1]:\n             a[p]=a[p-1]+a[p]+a[p+1]\n             p+=2\n             count+=1\n         else:\n             a[p]=a[p-1]+a[p]+a[p+1]\n             p+=2\n             count+=1\n     else:\n         p+=1\n print(count)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n a=[int(i)for i in input().split()]\n \n count=0\n p=1\n while p<n-1:\n     if a[p-1] == a[p]:\n         if a[p-1] == a[p] == a[p+1]:\n             a[p]=a[p-1]+a[p]+a[p+1]\n             p+=2\n             count+=1\n         else:\n             a[p]=a[p-1]+a[p]+a[p+1]\n             p+=2\n             count+=1\n     else:\n         p+=1\n print(count)\n \n```\n "
    },
    {
        "user_id": "u591779169",
        "problem_id": "p03970",
        "submission1_id": "s810367927",
        "crp_content": "\n s = input()\n S = \"CODEFESTIVAL2016\"\n count = 0\n-for i in range(15):\n     if s[i] != S[i]:\n         count+=1\n print(count)\n",
        "origin_generated_text": "\n```\n s = input()\n S = \"CODEFESTIVAL2016\"\n count = 0\n-for i in range(15):\n     if s[i] != S[i]:\n         count+=1\n print(count)\n```\n "
    },
    {
        "user_id": "u365013885",
        "problem_id": "p02886",
        "submission1_id": "s433917335",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split())) \n X = 0\n for a in range(1,N+1):\n     if a < N:\n-        X += A[a]*(sum(A[(a+1):(N+1)]))\n print(X)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split())) \n X = 0\n for a in range(1,N+1):\n     if a < N:\n-        X += A[a]*(sum(A[(a+1):(N+1)]))\n print(X)\n```\n "
    },
    {
        "user_id": "u081688405",
        "problem_id": "p03103",
        "submission1_id": "s028846453",
        "crp_content": "\n N, M = map(int, input().split(\" \"))\n stores = []\n \n for i in range(N):\n     Ai, Bi = map(int, input().split(\" \"))\n     stores.append((Ai, Bi))    \n \n price = 0\n for a, b in stores:\n-    if M <= b:\n         price += a * M\n         break\n     else:\n         price += a * b\n         M -= b\n print(price)\n \n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split(\" \"))\n stores = []\n \n for i in range(N):\n     Ai, Bi = map(int, input().split(\" \"))\n     stores.append((Ai, Bi))    \n \n price = 0\n for a, b in stores:\n-    if M <= b:\n         price += a * M\n         break\n     else:\n         price += a * b\n         M -= b\n print(price)\n \n```\n "
    },
    {
        "user_id": "u287500079",
        "problem_id": "p02854",
        "submission1_id": "s273156127",
        "crp_content": "\n n = int(input())\n a = [int(i) for i in input().split()]\n l = sum(a)\n l2 = l / 2\n tmp = 0\n err = [l,l]\n errindex = [0,0]\n for i in range(n):\n     tmp += a[i]\n     if err[0] > l2 - tmp and l2 - tmp >= 0:\n         err[0] = l2 - tmp\n-    if err[1] < tmp - l2 and l2 - tmp <= 0:\n         err[1] = tmp - l2\n ans = min(err)\n if ans != int(ans):\n     ans += 1\n print(int(ans))\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = [int(i) for i in input().split()]\n l = sum(a)\n l2 = l / 2\n tmp = 0\n err = [l,l]\n errindex = [0,0]\n for i in range(n):\n     tmp += a[i]\n     if err[0] > l2 - tmp and l2 - tmp >= 0:\n         err[0] = l2 - tmp\n-    if err[1] < tmp - l2 and l2 - tmp <= 0:\n         err[1] = tmp - l2\n ans = min(err)\n if ans != int(ans):\n     ans += 1\n print(int(ans))\n \n```\n "
    },
    {
        "user_id": "u566159623",
        "problem_id": "p02556",
        "submission1_id": "s969936353",
        "crp_content": "\n N = int(input())\n z = []\n zz = []\n for _ in range(N):\n     x, y = map(int, input().split())\n-    zz.append(x-y)\n-    z.append(x+y)\n z.sort()\n zz.sort()\n-ans = z[-1]-z[0]\n-ans = max(ans, zz[-1]+zz[0])\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n z = []\n zz = []\n for _ in range(N):\n     x, y = map(int, input().split())\n-    zz.append(x-y)\n-    z.append(x+y)\n z.sort()\n zz.sort()\n-ans = z[-1]-z[0]\n-ans = max(ans, zz[-1]+zz[0])\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u170324846",
        "problem_id": "p03200",
        "submission1_id": "s210584047",
        "crp_content": "\n S = input()\n N = len(S)\n A = []\n \n for i, s in enumerate(S):\n   if s == \"W\":\n     A.append(i)\n \n-if len(A) == 1:\n   print(sum(A))\n else:\n   print(sum(A)-len(A))\n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n A = []\n \n for i, s in enumerate(S):\n   if s == \"W\":\n     A.append(i)\n \n-if len(A) == 1:\n   print(sum(A))\n else:\n   print(sum(A)-len(A))\n```\n "
    },
    {
        "user_id": "u328199937",
        "problem_id": "p02407",
        "submission1_id": "s854109348",
        "crp_content": "\n n = int(input())\n-a = str(input())\n-list = a.split()\n-for i in list[4:0:-1]:\n     print(i, end = ' ')\n-print(list[0])\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n-a = str(input())\n-list = a.split()\n-for i in list[4:0:-1]:\n     print(i, end = ' ')\n-print(list[0])\n \n```\n "
    },
    {
        "user_id": "u181431922",
        "problem_id": "p04019",
        "submission1_id": "s236956216",
        "crp_content": "\n ins = input().strip()\n-if not ('S' in ins and 'N' in ins) and ('S' in ins or 'N' in ins):\n         print('No')\n \n-if not ('E' in ins and 'W' in ins) and ('E' in ins or 'W' in ins):\n         print('No')\n \n  \n print('Yes')\n",
        "origin_generated_text": "\n```\n ins = input().strip()\n-if not ('S' in ins and 'N' in ins) and ('S' in ins or 'N' in ins):\n         print('No')\n \n-if not ('E' in ins and 'W' in ins) and ('E' in ins or 'W' in ins):\n         print('No')\n \n  \n print('Yes')\n```\n "
    },
    {
        "user_id": "u628581330",
        "problem_id": "p03041",
        "submission1_id": "s743787260",
        "crp_content": "\n def character(n,k,s):\n-    res = str(s).replace(s[k-1],s[k-1].lower())\n     return res\n n,k = map(int, input().split())\n s = input()\n print(character(n,k,s))\n",
        "origin_generated_text": "\n```\n def character(n,k,s):\n-    res = str(s).replace(s[k-1],s[k-1].lower())\n     return res\n n,k = map(int, input().split())\n s = input()\n print(character(n,k,s))\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s765625510",
        "crp_content": "\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n-print(1)\n-exit()\n-\n s = s*3\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n s += s\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans2 = 0\n for i in range(len(li)):\n     ans2 = max(ans2, solve(i, li))\n \n if ans1 == ans2:\n     print(ans1)\n else:\n     print(-1)\n \n",
        "origin_generated_text": "\n```\n s = input()\n t = input()\n \n def z_algorithm(s):\n     a = [0] * len(s)\n     i = 1\n     j = 0\n     a[0] = len(s)\n     while i < len(s):\n         while i + j < len(s) and s[j] == s[i+j]:\n             j += 1\n         a[i] = j\n         if j == 0:\n             i += 1\n             continue\n         k = 1\n         while i + k < len(s) and k + a[k] < j:\n             a[i+k] = a[k]\n             k += 1\n         i += k\n         j -= k\n     return a\n \n def solve(i, li):\n     ans = 0\n     while True:\n         if i < 0 or len(li) <= i or visited[i]:\n             break\n         if li[i] < len(t):\n             visited[i] = True\n             break\n         if li[i] >= len(t):\n             visited[i] = True\n             ans += 1\n             i += len(t)\n     return ans\n \n \n new_s = \"\"\n while True:\n     new_s += s\n     if len(new_s) > len(t):\n         s = new_s\n         break\n-print(1)\n-exit()\n-\n s = s*3\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans1 = 0\n for i in range(len(li)):\n     ans1 = max(ans1, solve(i, li))\n \n s += s\n li = z_algorithm(t + s)[len(t):]\n visited = [False] * len(li)\n ans2 = 0\n for i in range(len(li)):\n     ans2 = max(ans2, solve(i, li))\n \n if ans1 == ans2:\n     print(ans1)\n else:\n     print(-1)\n \n```\n "
    },
    {
        "user_id": "u411435121",
        "problem_id": "p03264",
        "submission1_id": "s225396120",
        "crp_content": "\n k = int(input())\n \n if k % 2 == 0:\n-  \tprint((k / 2)**2)\n else:\n-\tprint(k * (k - 1))  \n",
        "origin_generated_text": "\n```\n k = int(input())\n \n if k % 2 == 0:\n-  \tprint((k / 2)**2)\n else:\n-\tprint(k * (k - 1))  \n```\n "
    },
    {
        "user_id": "u850491413",
        "problem_id": "p03716",
        "submission1_id": "s232463726",
        "crp_content": "\n \n import sys\n from collections import deque, defaultdict\n import copy\n import bisect\n \n import math\n import heapq\n from itertools import combinations, permutations\n \n import sys\n def input():\n \treturn sys.stdin.readline().strip()\n \n N = int(input())\n a = list(map(int, input().split()))\n \n a_max = a[:N]\n a_min = a[2*N:]\n \n a_max_sum = sum(a_max)\n score = [a_max_sum]\n heapq.heapify(a_max)\n for i in range(N):\n \theapq.heappush(a_max, a[N + i])\n \ta_max_sum += a[N + i]\n \ta_max_sum -= heapq.heappop(a_max)\n \tscore.append(a_max_sum)\n-print(score)\n \n a_min_sum = sum(a_min)\n score[N] -= a_min_sum\n for i in range(len(a_min)):\n \ta_min[i] *= -1\n heapq.heapify(a_min)\n for i in range(N):\n \theapq.heappush(a_min, -a[2*N - 1 - i])\n \ta_min_sum += a[2*N - 1 - i]\n \ta_min_sum += heapq.heappop(a_min)\n \tscore[N - i - 1] -=a_min_sum\n-print(score)\n \n print(max(score))\n",
        "origin_generated_text": "\n```\n \n import sys\n from collections import deque, defaultdict\n import copy\n import bisect\n \n import math\n import heapq\n from itertools import combinations, permutations\n \n import sys\n def input():\n \treturn sys.stdin.readline().strip()\n \n N = int(input())\n a = list(map(int, input().split()))\n \n a_max = a[:N]\n a_min = a[2*N:]\n \n a_max_sum = sum(a_max)\n score = [a_max_sum]\n heapq.heapify(a_max)\n for i in range(N):\n \theapq.heappush(a_max, a[N + i])\n \ta_max_sum += a[N + i]\n \ta_max_sum -= heapq.heappop(a_max)\n \tscore.append(a_max_sum)\n-print(score)\n \n a_min_sum = sum(a_min)\n score[N] -= a_min_sum\n for i in range(len(a_min)):\n \ta_min[i] *= -1\n heapq.heapify(a_min)\n for i in range(N):\n \theapq.heappush(a_min, -a[2*N - 1 - i])\n \ta_min_sum += a[2*N - 1 - i]\n \ta_min_sum += heapq.heappop(a_min)\n \tscore[N - i - 1] -=a_min_sum\n-print(score)\n \n print(max(score))\n```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p03103",
        "submission1_id": "s658794787",
        "crp_content": "\n N, M = map(int, input().split())  \n \n ans = 0\n \n \n \n \n \n shop_list = []\n for _ in range(N):\n     hoge = {}\n     A, B = map(int, input().split())\n     hoge['price'] = A\n     hoge['amount'] = B\n     shop_list.append(hoge)\n     hoge = {}\n \n shop_list.sort(key=lambda x: x['price'])\n \n quontity = 0\n money = 0\n for i in range(len(shop_list)):\n     money += shop_list[i]['price']*shop_list[i]['amount']\n     \n     quontity += shop_list[i]['amount']\n     \n     if quontity >= M:\n-        money -= shop_list[i]['price']*(quontity-M)\n \n print(money)\n \n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())  \n \n ans = 0\n \n \n \n \n \n shop_list = []\n for _ in range(N):\n     hoge = {}\n     A, B = map(int, input().split())\n     hoge['price'] = A\n     hoge['amount'] = B\n     shop_list.append(hoge)\n     hoge = {}\n \n shop_list.sort(key=lambda x: x['price'])\n \n quontity = 0\n money = 0\n for i in range(len(shop_list)):\n     money += shop_list[i]['price']*shop_list[i]['amount']\n     \n     quontity += shop_list[i]['amount']\n     \n     if quontity >= M:\n-        money -= shop_list[i]['price']*(quontity-M)\n \n print(money)\n \n```\n "
    },
    {
        "user_id": "u090068671",
        "problem_id": "p02660",
        "submission1_id": "s188461069",
        "crp_content": "\n def resolve():\n \tanswer = 0\n \tN = int(input())\n \tif N==1:\n \t\tprint(answer)\n \telse:\n \t\t\n-\t\tfor p in range(2, int(N**0.5)+2):\n \t\t\te = 0\n \t\t\twhile (N % p == 0):\n \t\t\t\tN /= p\n \t\t\t\te += 1\n \t\t\t\n \t\t\tif e>0:\n \t\t\t\t\n \t\t\t\tfor i in range(1, e+1):\n \t\t\t\t\tif e >= i:\n \t\t\t\t\t\te -= i\n \t\t\t\t\t\tanswer += 1\n \t\t\n \t\tif answer==0:\n \t\t\tanswer = 1\n \t\tprint(answer)\n         \n resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n \tanswer = 0\n \tN = int(input())\n \tif N==1:\n \t\tprint(answer)\n \telse:\n \t\t\n-\t\tfor p in range(2, int(N**0.5)+2):\n \t\t\te = 0\n \t\t\twhile (N % p == 0):\n \t\t\t\tN /= p\n \t\t\t\te += 1\n \t\t\t\n \t\t\tif e>0:\n \t\t\t\t\n \t\t\t\tfor i in range(1, e+1):\n \t\t\t\t\tif e >= i:\n \t\t\t\t\t\te -= i\n \t\t\t\t\t\tanswer += 1\n \t\t\n \t\tif answer==0:\n \t\t\tanswer = 1\n \t\tprint(answer)\n         \n resolve()\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03972",
        "submission1_id": "s039085301",
        "crp_content": "\n h, w = map(int, input().split())\n \n w_cost = [int(input()) for i in range(w)]\n h_cost = [int(input()) for i in range(h)]\n \n w_cost = sorted(w_cost, reverse = True)\n h_cost = sorted(h_cost, reverse = True)\n w_cnt = 0\n h_cnt = 0\n ans = 0\n \n while True:\n     if (not w_cost) and (not h_cost):\n         break\n     elif not w_cost:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1    \n         del h_cost[-1]\n     elif not h_cost:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     elif w_cost[-1] < h_cost[-1]:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     else:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1    \n         del h_cost[-1]\n-        \n print(ans)\n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n \n w_cost = [int(input()) for i in range(w)]\n h_cost = [int(input()) for i in range(h)]\n \n w_cost = sorted(w_cost, reverse = True)\n h_cost = sorted(h_cost, reverse = True)\n w_cnt = 0\n h_cnt = 0\n ans = 0\n \n while True:\n     if (not w_cost) and (not h_cost):\n         break\n     elif not w_cost:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1    \n         del h_cost[-1]\n     elif not h_cost:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     elif w_cost[-1] < h_cost[-1]:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     else:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1    \n         del h_cost[-1]\n-        \n print(ans)\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s378038585",
        "crp_content": "\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(11)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n \n for i in list(reversed(ans))[:k]:\n     print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(11)):\n-    for j in reversed(range(1,10**4)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n \n for i in list(reversed(ans))[:k]:\n     print(i)\n```\n "
    },
    {
        "user_id": "u752898745",
        "problem_id": "p03041",
        "submission1_id": "s871954842",
        "crp_content": "\n-n,k=map(int,input().split());s=input();print(s[k-1].lower())\n",
        "origin_generated_text": "\n```\n-n,k=map(int,input().split());s=input();print(s[k-1].lower())\n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s537796398",
        "crp_content": "\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 0\n-x3 = S\n-y3 = S%x2\n print(x1,y1,x2,y2,x3,y3)\n",
        "origin_generated_text": "\n```\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 0\n-x3 = S\n-y3 = S%x2\n print(x1,y1,x2,y2,x3,y3)\n```\n "
    },
    {
        "user_id": "u492749916",
        "problem_id": "p02887",
        "submission1_id": "s416360263",
        "crp_content": "\n N = int(input())\n S = str(input())\n \n ans = \"\"\n ans += S[0]\n \n-for i in range(1,N-1):\n   if S[i] != S[i+1]:\n     ans += S[i+1]\n print(len(ans))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n S = str(input())\n \n ans = \"\"\n ans += S[0]\n \n-for i in range(1,N-1):\n   if S[i] != S[i+1]:\n     ans += S[i+1]\n print(len(ans))\n \n```\n "
    },
    {
        "user_id": "u389679466",
        "problem_id": "p03023",
        "submission1_id": "s274266723",
        "crp_content": "\n N = int(input())\n \n rtn = 180 *  (N-2) /N\n-print(rtn*N)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n rtn = 180 *  (N-2) /N\n-print(rtn*N)\n \n```\n "
    },
    {
        "user_id": "u869301406",
        "problem_id": "p02385",
        "submission1_id": "s454944635",
        "crp_content": "\n class Dice(object):\n  \n     def __init__(self, d):\n \n         self.rows = [d[0], d[4], d[5], d[1]]\n         self.cols = [d[0], d[2], d[5], d[3]]\n  \n     def move_next_rows(self):\n         temp = self.rows.pop(0)\n         self.rows.append(temp)\n         self.__update(self.cols, self.rows)\n \n     def move_prev_rows(self):\n         temp = self.rows.pop(3)\n         self.rows.insert(0, temp)\n         self.__update(self.cols, self.rows)\n     \n     def move_next_cols(self):\n         temp = self.cols.pop(0)\n         self.cols.append(temp)\n         self.__update(self.rows, self.cols)\n  \n     def move_prev_cols(self):\n         temp = self.cols.pop(3)\n         self.cols.insert(0, temp)\n         self.__update(self.rows, self.cols)\n \n     def __update(self, x, y):\n         x[0] = y[0]\n         x[2] = y[2]\n  \n class DiceChecker(object):\n \n     def __init__(self, dice1, dice2):\n         self.dice1 = dice1\n         self.dice2 = dice2\n         self.dice1_top = self.dice1.rows[0]\n         self.dice1_front = self.dice1.rows[3]\n         \n     def check_same_dice(self):\n \n         \n         \n         \n         \n         \n         \n-        print(self.dice1.rows)\n-        print(self.dice1.cols)\n         is_same = False\n         for _ in range(4):\n             for _ in range(4):\n                 is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 self.__rot(self.dice2)\n                 is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 \n                 if is_same_element or is_rot_same: \n                     is_same = True\n                     break\n                 self.dice2.move_next_cols()\n                 \n-                print(self.dice2.rows)\n-\n             else:     \n                 self.dice2.move_next_rows()\n                 continue\n             break\n         if is_same:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     \n     def __find_num(self, x, dice):\n         i = 0\n         while x != dice.rows[0]:\n             dice.move_next_rows()\n             if i > 3:\n                 dice.move_next_cols()\n                 i = 0\n             i+=1\n     \n     def __rot(self, dice):\n         temp = dice.rows[1]\n         dice.rows[1] = dice.rows[3]\n         dice.rows[3] = temp\n \n         temp = dice.cols[1]\n         dice.cols[1] = dice.cols[3]\n         dice.cols[3] = temp\n \n         \n dice1 = list(map(int, input().split(\" \")))\n dice2 = list(map(int, input().split(\" \")))\n dice1 = Dice(dice1)\n dice2 = Dice(dice2)\n \n dice_checker = DiceChecker(dice1, dice2)\n dice_checker.check_same_dice()\n \n \n",
        "origin_generated_text": "\n```\n class Dice(object):\n  \n     def __init__(self, d):\n \n         self.rows = [d[0], d[4], d[5], d[1]]\n         self.cols = [d[0], d[2], d[5], d[3]]\n  \n     def move_next_rows(self):\n         temp = self.rows.pop(0)\n         self.rows.append(temp)\n         self.__update(self.cols, self.rows)\n \n     def move_prev_rows(self):\n         temp = self.rows.pop(3)\n         self.rows.insert(0, temp)\n         self.__update(self.cols, self.rows)\n     \n     def move_next_cols(self):\n         temp = self.cols.pop(0)\n         self.cols.append(temp)\n         self.__update(self.rows, self.cols)\n  \n     def move_prev_cols(self):\n         temp = self.cols.pop(3)\n         self.cols.insert(0, temp)\n         self.__update(self.rows, self.cols)\n \n     def __update(self, x, y):\n         x[0] = y[0]\n         x[2] = y[2]\n  \n class DiceChecker(object):\n \n     def __init__(self, dice1, dice2):\n         self.dice1 = dice1\n         self.dice2 = dice2\n         self.dice1_top = self.dice1.rows[0]\n         self.dice1_front = self.dice1.rows[3]\n         \n     def check_same_dice(self):\n \n         \n         \n         \n         \n         \n         \n-        print(self.dice1.rows)\n-        print(self.dice1.cols)\n         is_same = False\n         for _ in range(4):\n             for _ in range(4):\n                 is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 self.__rot(self.dice2)\n                 is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 \n                 if is_same_element or is_rot_same: \n                     is_same = True\n                     break\n                 self.dice2.move_next_cols()\n                 \n-                print(self.dice2.rows)\n-\n             else:     \n                 self.dice2.move_next_rows()\n                 continue\n             break\n         if is_same:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     \n     def __find_num(self, x, dice):\n         i = 0\n         while x != dice.rows[0]:\n             dice.move_next_rows()\n             if i > 3:\n                 dice.move_next_cols()\n                 i = 0\n             i+=1\n     \n     def __rot(self, dice):\n         temp = dice.rows[1]\n         dice.rows[1] = dice.rows[3]\n         dice.rows[3] = temp\n \n         temp = dice.cols[1]\n         dice.cols[1] = dice.cols[3]\n         dice.cols[3] = temp\n \n         \n dice1 = list(map(int, input().split(\" \")))\n dice2 = list(map(int, input().split(\" \")))\n dice1 = Dice(dice1)\n dice2 = Dice(dice2)\n \n dice_checker = DiceChecker(dice1, dice2)\n dice_checker.check_same_dice()\n \n \n```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s410984562",
        "crp_content": "\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n edges = []\n for p in P:\n     edges.append((p, 'P'))\n for q in Q:\n     edges.append((q, 'Q'))\n edges.sort()\n \n ans = 0\n-v_nodes = W + 1\n-h_nodes = H + 1\n for e, pq in edges:\n     if pq == 'P':\n         ans += e * h_nodes\n         v_nodes -= 1\n     else:\n         ans += e * v_nodes\n         h_nodes -= 1\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n edges = []\n for p in P:\n     edges.append((p, 'P'))\n for q in Q:\n     edges.append((q, 'Q'))\n edges.sort()\n \n ans = 0\n-v_nodes = W + 1\n-h_nodes = H + 1\n for e, pq in edges:\n     if pq == 'P':\n         ans += e * h_nodes\n         v_nodes -= 1\n     else:\n         ans += e * v_nodes\n         h_nodes -= 1\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u499381410",
        "problem_id": "p04017",
        "submission1_id": "s990284860",
        "crp_content": "\n from collections import defaultdict, deque, Counter\n from heapq import heappush, heappop, heapify\n import math\n import bisect\n import random\n from itertools import permutations, accumulate, combinations, product\n import sys\n import string\n from bisect import bisect_left, bisect_right\n from math import factorial, ceil, floor\n from operator import mul\n from functools import reduce\n from operator import mul\n \n \n sys.setrecursionlimit(2147483647)\n INF = 10 ** 20\n def LI(): return list(map(int, sys.stdin.buffer.readline().split()))\n def I(): return int(sys.stdin.buffer.readline())\n def LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\n def S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def LSR(n): return [LS() for i in range(n)]\n def SRL(n): return [list(S()) for i in range(n)]\n def MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n mod = 1000000007\n \n n = I()\n X = LI()\n l = I()\n log_n = (n - 1).bit_length()\n doubling = [[n] * n for _ in range(log_n)]\n for i in range(n - 1):\n     doubling[0][i] = bisect_right(X, X[i] + l) - 1\n \n for j in range(1, log_n):\n     for k in range(n):\n         if doubling[j - 1][k] == n:\n             continue\n         doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\n q = I()\n for _ in range(q):\n     a, b = LI()\n     if a > b:\n         a, b = b, a\n     a -= 1\n     b -= 1\n     ans = 0\n     for m in range(log_n - 1, -1, -1):\n         if doubling[m][a] <= b:\n             a = doubling[m][a]\n             ans += 2 ** m\n     print(ans)\n \n \n \n \n \n \n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict, deque, Counter\n from heapq import heappush, heappop, heapify\n import math\n import bisect\n import random\n from itertools import permutations, accumulate, combinations, product\n import sys\n import string\n from bisect import bisect_left, bisect_right\n from math import factorial, ceil, floor\n from operator import mul\n from functools import reduce\n from operator import mul\n \n \n sys.setrecursionlimit(2147483647)\n INF = 10 ** 20\n def LI(): return list(map(int, sys.stdin.buffer.readline().split()))\n def I(): return int(sys.stdin.buffer.readline())\n def LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\n def S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\n def IR(n): return [I() for i in range(n)]\n def LIR(n): return [LI() for i in range(n)]\n def SR(n): return [S() for i in range(n)]\n def LSR(n): return [LS() for i in range(n)]\n def SRL(n): return [list(S()) for i in range(n)]\n def MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n mod = 1000000007\n \n n = I()\n X = LI()\n l = I()\n log_n = (n - 1).bit_length()\n doubling = [[n] * n for _ in range(log_n)]\n for i in range(n - 1):\n     doubling[0][i] = bisect_right(X, X[i] + l) - 1\n \n for j in range(1, log_n):\n     for k in range(n):\n         if doubling[j - 1][k] == n:\n             continue\n         doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\n q = I()\n for _ in range(q):\n     a, b = LI()\n     if a > b:\n         a, b = b, a\n     a -= 1\n     b -= 1\n     ans = 0\n     for m in range(log_n - 1, -1, -1):\n         if doubling[m][a] <= b:\n             a = doubling[m][a]\n             ans += 2 ** m\n     print(ans)\n \n \n \n \n \n \n \n```\n "
    },
    {
        "user_id": "u747602774",
        "problem_id": "p02642",
        "submission1_id": "s816759502",
        "crp_content": "\n import sys\n readline = sys.stdin.readline\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n \n INF = 10**18\n eps = 10**-7\n \n import itertools\n \n N = int(readline())\n A = list(map(int,readline().split()))\n \n A.sort()\n \n from collections import Counter\n Ac = Counter(A)\n A = []\n for k,v in Ac.items():\n     if v == 1:\n         A.append(k)\n \n check = [[True,False] for i in range(10**6+1)]\n ans = 0\n for a in A:\n     if not check[a][0]:\n         continue\n     for j in range(2*a,10**6+1,a):\n         check[j][0] = False\n \n for a in A:\n     if check[a][0]:\n         ans += 1\n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n import sys\n readline = sys.stdin.readline\n sys.setrecursionlimit(10**8)\n mod = 10**9+7\n \n INF = 10**18\n eps = 10**-7\n \n import itertools\n \n N = int(readline())\n A = list(map(int,readline().split()))\n \n A.sort()\n \n from collections import Counter\n Ac = Counter(A)\n A = []\n for k,v in Ac.items():\n     if v == 1:\n         A.append(k)\n \n check = [[True,False] for i in range(10**6+1)]\n ans = 0\n for a in A:\n     if not check[a][0]:\n         continue\n     for j in range(2*a,10**6+1,a):\n         check[j][0] = False\n \n for a in A:\n     if check[a][0]:\n         ans += 1\n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u172569352",
        "problem_id": "p02917",
        "submission1_id": "s248785872",
        "crp_content": "\n N = int(input())\n B = [int(i) for i in input().split()]\n \n     \n A = [0] * N\n-for i in range(1, N - 1):\n-    A[i] = min(B[i - 1], B[i])\n \n-A[N - 1] = B[N - 2]\n print(sum(A))\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = [int(i) for i in input().split()]\n \n     \n A = [0] * N\n-for i in range(1, N - 1):\n-    A[i] = min(B[i - 1], B[i])\n \n-A[N - 1] = B[N - 2]\n print(sum(A))\n```\n "
    },
    {
        "user_id": "u111473084",
        "problem_id": "p02642",
        "submission1_id": "s177558617",
        "crp_content": "\n def main():\n     import sys\n     sys.setrecursionlimit(10**9)\n     input = sys.stdin.readline\n     from collections import Counter\n \n     N = int(input())\n     A = list(map(int, input().split()))\n     A.sort()\n     counter_A = Counter(A)\n     flag = [True] * 1000001\n \n     count = 0\n     for i in A:\n         if counter_A[i] > 1:\n             continue\n         if flag[i]:\n             count += 1\n         multiple = i\n         while multiple < 1000001:\n             flag[multiple] = False\n             multiple += i\n \n     print(count)\n \n \n main()\n",
        "origin_generated_text": "\n```\n def main():\n     import sys\n     sys.setrecursionlimit(10**9)\n     input = sys.stdin.readline\n     from collections import Counter\n \n     N = int(input())\n     A = list(map(int, input().split()))\n     A.sort()\n     counter_A = Counter(A)\n     flag = [True] * 1000001\n \n     count = 0\n     for i in A:\n         if counter_A[i] > 1:\n             continue\n         if flag[i]:\n             count += 1\n         multiple = i\n         while multiple < 1000001:\n             flag[multiple] = False\n             multiple += i\n \n     print(count)\n \n \n main()\n```\n "
    },
    {
        "user_id": "u675918663",
        "problem_id": "p03200",
        "submission1_id": "s680229180",
        "crp_content": "\n import sys\n \n line = next(map(str.strip, sys.stdin))\n \n count = 0\n nb_bs = 0\n for i, c in enumerate(line):\n-    if c == 'W' and nb_bs:\n-        count += nb_bs\n-    else:\n         nb_bs += 1\n \n print(count)\n",
        "origin_generated_text": "\n```\n import sys\n \n line = next(map(str.strip, sys.stdin))\n \n count = 0\n nb_bs = 0\n for i, c in enumerate(line):\n-    if c == 'W' and nb_bs:\n-        count += nb_bs\n-    else:\n         nb_bs += 1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u239342230",
        "problem_id": "p03943",
        "submission1_id": "s697170928",
        "crp_content": "\n a,b,c=map(int,input().split())\n-print('YES' if a==(b+c) or b==(a+c) or c==(a+b) else 'NO')\n",
        "origin_generated_text": "\n```\n a,b,c=map(int,input().split())\n-print('YES' if a==(b+c) or b==(a+c) or c==(a+b) else 'NO')\n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s185096903",
        "crp_content": "\n i = input().split()\n if (float(i[0]) ==float(i[1])) and (float(i[0]) ==float(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n",
        "origin_generated_text": "\n```\n i = input().split()\n if (float(i[0]) ==float(i[1])) and (float(i[0]) ==float(i[2])):\n-  print('YES')\n else:\n-  print('NO')\n```\n "
    },
    {
        "user_id": "u531436689",
        "problem_id": "p03714",
        "submission1_id": "s358041239",
        "crp_content": "\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n from collections import deque\n \n sys.setrecursionlimit(10**7)\n inf = 10**20\n mod = 10**9 + 7\n \n DR = [1, -1, 0, 0]\n DC = [0, 0, 1, -1]\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def S(): return input()\n      \n def main():\n     N = I()\n     A = LI()\n-    wakeme = N\n     Aleftsum = [0 for _ in range(3*N+1)]\n     leftA = [x for x in A[:N]]\n     heapq.heapify(leftA)\n     subsum = sum(leftA)\n     Aleftsum[wakeme] = subsum\n     for i in range(N):\n         heapq.heappush(leftA, A[wakeme + i])\n         subsum += A[wakeme + i]\n         subsum -= heapq.heappop(leftA)\n         Aleftsum[wakeme+i+1] = subsum\n \n     Arightsum = [0 for _ in range(3*N+1)]\n     rightA = [-x for x in A[-N:]]\n     heapq.heapify(rightA)\n     subsum = sum(rightA)\n-    wakeme = 2*N\n     Arightsum[wakeme] = -subsum\n     for i in range(1, N+1):\n         heapq.heappush(rightA, -A[wakeme-i])\n         subsum -= A[wakeme - i]\n         subsum -= heapq.heappop(rightA)\n         Arightsum[wakeme - i] = -subsum\n     ans = -inf\n     for i in range(N, 2*N):\n         ans = max(ans, Aleftsum[i] - Arightsum[i])\n     print(ans)\n main()\n \n \n",
        "origin_generated_text": "\n```\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n from collections import deque\n \n sys.setrecursionlimit(10**7)\n inf = 10**20\n mod = 10**9 + 7\n \n DR = [1, -1, 0, 0]\n DC = [0, 0, 1, -1]\n \n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def S(): return input()\n      \n def main():\n     N = I()\n     A = LI()\n-    wakeme = N\n     Aleftsum = [0 for _ in range(3*N+1)]\n     leftA = [x for x in A[:N]]\n     heapq.heapify(leftA)\n     subsum = sum(leftA)\n     Aleftsum[wakeme] = subsum\n     for i in range(N):\n         heapq.heappush(leftA, A[wakeme + i])\n         subsum += A[wakeme + i]\n         subsum -= heapq.heappop(leftA)\n         Aleftsum[wakeme+i+1] = subsum\n \n     Arightsum = [0 for _ in range(3*N+1)]\n     rightA = [-x for x in A[-N:]]\n     heapq.heapify(rightA)\n     subsum = sum(rightA)\n-    wakeme = 2*N\n     Arightsum[wakeme] = -subsum\n     for i in range(1, N+1):\n         heapq.heappush(rightA, -A[wakeme-i])\n         subsum -= A[wakeme - i]\n         subsum -= heapq.heappop(rightA)\n         Arightsum[wakeme - i] = -subsum\n     ans = -inf\n     for i in range(N, 2*N):\n         ans = max(ans, Aleftsum[i] - Arightsum[i])\n     print(ans)\n main()\n \n \n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s593109485",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 3\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and last_i > 0:\n                 cnt = 0\n                 f = True\n     if f:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 3\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and last_i > 0:\n                 cnt = 0\n                 f = True\n     if f:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u464205401",
        "problem_id": "p03106",
        "submission1_id": "s325177849",
        "crp_content": "\n a,b,k=list(map(int,input().split()))\n cnt=1\n-for i in range(1,min(a,b)+1):\n   if a%i==0 and b%i==0:\n     if cnt==k:\n       print(i)\n       break\n     cnt+=1\n",
        "origin_generated_text": "\n```\n a,b,k=list(map(int,input().split()))\n cnt=1\n-for i in range(1,min(a,b)+1):\n   if a%i==0 and b%i==0:\n     if cnt==k:\n       print(i)\n       break\n     cnt+=1\n```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03998",
        "submission1_id": "s531289077",
        "crp_content": "\n sa = list(input())\n sb = list(input())\n sc = list(input())\n \n d = 'a'\n \n while 1:\n     if d == 'a':\n         d = sa.pop(0)\n         if sa == []:\n             print('A')\n             break\n         d = sa[0]\n     elif d == 'b':\n         d = sb.pop(0)\n         if sb == []:\n             print('B')\n             break\n         d = sb[0]\n     else:\n         d = sc.pop(0)\n         if sc == []:\n             print('C')\n             break\n         d = sc[0]\n",
        "origin_generated_text": "\n```\n sa = list(input())\n sb = list(input())\n sc = list(input())\n \n d = 'a'\n \n while 1:\n     if d == 'a':\n         d = sa.pop(0)\n         if sa == []:\n             print('A')\n             break\n         d = sa[0]\n     elif d == 'b':\n         d = sb.pop(0)\n         if sb == []:\n             print('B')\n             break\n         d = sb[0]\n     else:\n         d = sc.pop(0)\n         if sc == []:\n             print('C')\n             break\n         d = sc[0]\n```\n "
    },
    {
        "user_id": "u641357568",
        "problem_id": "p02407",
        "submission1_id": "s619354124",
        "crp_content": "\n import sys\n \n length = int(sys.stdin.readline())\n-num_seq = sys.stdin.readline().split()\n-print(num_seq)\n \n for i in range(1,length):\n     print(num_seq[length - i],end=' ')\n print(num_seq[0])\n \n",
        "origin_generated_text": "\n```\n import sys\n \n length = int(sys.stdin.readline())\n-num_seq = sys.stdin.readline().split()\n-print(num_seq)\n \n for i in range(1,length):\n     print(num_seq[length - i],end=' ')\n print(num_seq[0])\n \n```\n "
    },
    {
        "user_id": "u846372029",
        "problem_id": "p03613",
        "submission1_id": "s752503336",
        "crp_content": "\n \n \n N = int(input())\n a = list(map(int, input().split()))\n \n b = []\n \n for ai in a:\n     b.append(ai-1)\n     b.append(ai)\n     b.append(ai+1)\n \n \n import collections\n cnt = collections.Counter(b)\n \n-max(cnt.values())\n",
        "origin_generated_text": "\n```\n \n \n N = int(input())\n a = list(map(int, input().split()))\n \n b = []\n \n for ai in a:\n     b.append(ai-1)\n     b.append(ai)\n     b.append(ai+1)\n \n \n import collections\n cnt = collections.Counter(b)\n \n-max(cnt.values())\n```\n "
    },
    {
        "user_id": "u442788381",
        "problem_id": "p03416",
        "submission1_id": "s981743319",
        "crp_content": "\n A, B = map(int, input().split())\n count = 0\n-for i in range(A, B):\n   i = str(i)\n-  if i[:2] == i[-2:] :\n     count += 1\n print(count)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n count = 0\n-for i in range(A, B):\n   i = str(i)\n-  if i[:2] == i[-2:] :\n     count += 1\n print(count)\n```\n "
    },
    {
        "user_id": "u366996583",
        "problem_id": "p02553",
        "submission1_id": "s328444809",
        "crp_content": "\n a,b,c,d=map(int,input().split())\n-print(max(a*b,a*c,b*c,b*d))\n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int,input().split())\n-print(max(a*b,a*c,b*c,b*d))\n```\n "
    },
    {
        "user_id": "u022215787",
        "problem_id": "p03760",
        "submission1_id": "s869976106",
        "crp_content": "\n o = input()\n e = input()\n ans = ''\n for i,j in zip(o,e):\n     ans+= i+j\n-if len(o) != len(e):\n-    ans+=e[-1]\n print(ans)\n",
        "origin_generated_text": "\n```\n o = input()\n e = input()\n ans = ''\n for i,j in zip(o,e):\n     ans+= i+j\n-if len(o) != len(e):\n-    ans+=e[-1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u334712262",
        "problem_id": "p03734",
        "submission1_id": "s568317192",
        "crp_content": "\n \n import bisect\n import heapq\n import math\n import random\n from collections import Counter, defaultdict, deque\n from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\n from fractions import Fraction\n from functools import lru_cache, reduce\n from itertools import combinations, combinations_with_replacement, product, permutations, accumulate\n from operator import add, mul, sub, itemgetter, attrgetter\n \n \n import sys\n \n \n readline = sys.stdin.readline\n \n INF = 2**62-1\n \n \n def read_int():\n     return int(readline())\n \n \n def read_int_n():\n     return list(map(int, readline().split()))\n \n \n def read_float():\n     return float(readline())\n \n \n def read_float_n():\n     return list(map(float, readline().split()))\n \n \n def read_str():\n     return readline().strip()\n \n \n def read_str_n():\n     return readline().strip().split()\n \n \n def ep(*args):\n     print(*args, file=sys.stderr)\n \n \n def mt(f):\n     import time\n \n     def wrap(*args, **kwargs):\n         s = time.perf_counter()\n         ret = f(*args, **kwargs)\n         e = time.perf_counter()\n \n         ep(e - s, 'sec')\n         return ret\n \n     return wrap\n \n \n @mt\n def slv(N, W, WV):\n     vl = {}\n     vl[WV[0][0]] = list()\n     vl[WV[0][0]+1] = list()\n     vl[WV[0][0]+2] = list()\n     vl[WV[0][0]+3] = list()\n     for w, v in WV:\n         vl[w].append(v)\n \n     for v in vl.values():\n         v.sort(reverse=True)\n         v.insert(0, 0)\n \n \n     wi, wj, wk, wl = vl.keys()\n     ans = 0\n     vis = 0\n     for i, vi in enumerate(vl[wi]):\n         if wi * i > W:\n             break\n         vis += vi\n         vjs = 0\n         for j, vj in enumerate(vl[wj]):\n-            if wi * i + wj * j > W:\n                 break\n             vjs += vj\n             vks = 0\n             for k, vk in enumerate(vl[wk]):\n-                if wi*i + wj*j + wk*k> W:\n                     break\n                 vks += vk\n                 ans = max(ans, vis+vjs+vks)\n     return ans\n \n \n \n \n \n def main():\n     N, W = read_int_n()\n     WV = [read_int_n() for _ in range(N)]\n     print(slv(N, W, WV))\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import bisect\n import heapq\n import math\n import random\n from collections import Counter, defaultdict, deque\n from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\n from fractions import Fraction\n from functools import lru_cache, reduce\n from itertools import combinations, combinations_with_replacement, product, permutations, accumulate\n from operator import add, mul, sub, itemgetter, attrgetter\n \n \n import sys\n \n \n readline = sys.stdin.readline\n \n INF = 2**62-1\n \n \n def read_int():\n     return int(readline())\n \n \n def read_int_n():\n     return list(map(int, readline().split()))\n \n \n def read_float():\n     return float(readline())\n \n \n def read_float_n():\n     return list(map(float, readline().split()))\n \n \n def read_str():\n     return readline().strip()\n \n \n def read_str_n():\n     return readline().strip().split()\n \n \n def ep(*args):\n     print(*args, file=sys.stderr)\n \n \n def mt(f):\n     import time\n \n     def wrap(*args, **kwargs):\n         s = time.perf_counter()\n         ret = f(*args, **kwargs)\n         e = time.perf_counter()\n \n         ep(e - s, 'sec')\n         return ret\n \n     return wrap\n \n \n @mt\n def slv(N, W, WV):\n     vl = {}\n     vl[WV[0][0]] = list()\n     vl[WV[0][0]+1] = list()\n     vl[WV[0][0]+2] = list()\n     vl[WV[0][0]+3] = list()\n     for w, v in WV:\n         vl[w].append(v)\n \n     for v in vl.values():\n         v.sort(reverse=True)\n         v.insert(0, 0)\n \n \n     wi, wj, wk, wl = vl.keys()\n     ans = 0\n     vis = 0\n     for i, vi in enumerate(vl[wi]):\n         if wi * i > W:\n             break\n         vis += vi\n         vjs = 0\n         for j, vj in enumerate(vl[wj]):\n-            if wi * i + wj * j > W:\n                 break\n             vjs += vj\n             vks = 0\n             for k, vk in enumerate(vl[wk]):\n-                if wi*i + wj*j + wk*k> W:\n                     break\n                 vks += vk\n                 ans = max(ans, vis+vjs+vks)\n     return ans\n \n \n \n \n \n def main():\n     N, W = read_int_n()\n     WV = [read_int_n() for _ in range(N)]\n     print(slv(N, W, WV))\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u301729341",
        "problem_id": "p00026",
        "submission1_id": "s570127393",
        "crp_content": "\n Masu = []\n def access(x,y):\n     if x < 0 or y < 0 or x > 9 or y > 9:\n         return\n     Masu[y][x] += 1\n \n for i in range(10):\n     Masu.append([0,0,0,0,0,0,0,0,0,0])\n kosu = 0\n komax = 0\n while True:\n     try:\n         \n         x,y,s = map(int,input().split(\",\"))\n         if s == 1:\n             for j in range(3):\n                 access(y +1 - j,x)\n             access(y,x - 1)\n             access(y,x + 1)\n \n         elif s == 2:\n             for k in range(3):\n                 for l in range(3):\n                     access(y + 1 - k,x + 1 -l)\n         elif s == 3:\n             for k in range(3):\n                 for l in range(3):\n                     access(y + 1 - k,x + 1 -l)\n             access(y - 2,x)\n             access(y + 2,x)\n             access(y,x + 2)\n             access(y,x - 2)\n-        print(Masu)\n                \n     except (EOFError,ValueError):\n         for i in range(10):\n             kosu += Masu[i].count(0)\n         for j in range(10):\n             if komax < max(Masu[j]):\n                 komax = max(Masu[j])\n         print(kosu)\n         print(komax)\n         break\n",
        "origin_generated_text": "\n```\n Masu = []\n def access(x,y):\n     if x < 0 or y < 0 or x > 9 or y > 9:\n         return\n     Masu[y][x] += 1\n \n for i in range(10):\n     Masu.append([0,0,0,0,0,0,0,0,0,0])\n kosu = 0\n komax = 0\n while True:\n     try:\n         \n         x,y,s = map(int,input().split(\",\"))\n         if s == 1:\n             for j in range(3):\n                 access(y +1 - j,x)\n             access(y,x - 1)\n             access(y,x + 1)\n \n         elif s == 2:\n             for k in range(3):\n                 for l in range(3):\n                     access(y + 1 - k,x + 1 -l)\n         elif s == 3:\n             for k in range(3):\n                 for l in range(3):\n                     access(y + 1 - k,x + 1 -l)\n             access(y - 2,x)\n             access(y + 2,x)\n             access(y,x + 2)\n             access(y,x - 2)\n-        print(Masu)\n                \n     except (EOFError,ValueError):\n         for i in range(10):\n             kosu += Masu[i].count(0)\n         for j in range(10):\n             if komax < max(Masu[j]):\n                 komax = max(Masu[j])\n         print(kosu)\n         print(komax)\n         break\n```\n "
    },
    {
        "user_id": "u497592162",
        "problem_id": "p02660",
        "submission1_id": "s643464177",
        "crp_content": "\n import math\n \n \n def is_prime(n):\n     for i in range(2, int(math.sqrt(n))+1):\n         if n%i == 0:\n             return False\n     return True\n \n def getPrimeExp(n):\n     n_sqrt = int(math.sqrt(n))\n     array = [True]*(n_sqrt+1)\n     result = []\n     for i in range(2, n_sqrt+1):\n         if array[i]:\n             array[i] = False\n             result.append(i)\n             for j in range(2, n_sqrt+1):\n                 ij = i**j\n                 if ij <= n_sqrt and array[ij]:\n                     result.append(ij)\n                     array[ij] = False\n                 elif ij > n:\n                     break\n             for j in range(i*2, n_sqrt+1, i):\n                 array[j] = False\n \n             \n             \n             \n             \n             \n     return sorted(result)\n \n N = int(input())\n if N == 1:\n     print(0)\n elif is_prime(N) and N != 1:\n     print(1)\n else:\n     cnt = 0\n     primeExp = getPrimeExp(N) \n     n = N\n     \n     for z in primeExp:\n         if n%z == 0:\n             n = int(n/z)\n             cnt += 1\n     print(cnt)\n",
        "origin_generated_text": "\n```\n import math\n \n \n def is_prime(n):\n     for i in range(2, int(math.sqrt(n))+1):\n         if n%i == 0:\n             return False\n     return True\n \n def getPrimeExp(n):\n     n_sqrt = int(math.sqrt(n))\n     array = [True]*(n_sqrt+1)\n     result = []\n     for i in range(2, n_sqrt+1):\n         if array[i]:\n             array[i] = False\n             result.append(i)\n             for j in range(2, n_sqrt+1):\n                 ij = i**j\n                 if ij <= n_sqrt and array[ij]:\n                     result.append(ij)\n                     array[ij] = False\n                 elif ij > n:\n                     break\n             for j in range(i*2, n_sqrt+1, i):\n                 array[j] = False\n \n             \n             \n             \n             \n             \n     return sorted(result)\n \n N = int(input())\n if N == 1:\n     print(0)\n elif is_prime(N) and N != 1:\n     print(1)\n else:\n     cnt = 0\n     primeExp = getPrimeExp(N) \n     n = N\n     \n     for z in primeExp:\n         if n%z == 0:\n             n = int(n/z)\n             cnt += 1\n     print(cnt)\n```\n "
    },
    {
        "user_id": "u099450021",
        "problem_id": "p02934",
        "submission1_id": "s082533355",
        "crp_content": "\n N = int(input())\n A = [int(s) for s in input().split(' ')]\n \n ret = 1\n for a in A:\n     ret *= a\n \n-print(ret / sum(A))\n \n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = [int(s) for s in input().split(' ')]\n \n ret = 1\n for a in A:\n     ret *= a\n \n-print(ret / sum(A))\n \n \n```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s896519791",
        "crp_content": "\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>2:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if g>=s:\n         if ans>s:\n             val+=1+(g-ans)%m\n         else:\n             val+=(g-ans)%m\n     else:\n         if ans>s or g>=ans:\n             val+=1+(g-ans)%m\n         else:\n             val+=(g-s)%m\n \n print(val)\n \n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n a=list(map(int,input().split()))\n a=[a[i]-1 for i in range(n)]\n \n imos=[0 for i in range(m+1)]\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     val=(g-s)%m\n     if val>2:\n         s=(s+2)%m\n         if s>g:\n             imos[s]+=-1\n             imos[m]+=1\n             imos[0]+=-1\n             imos[g+1]+=1\n         else:\n             imos[s]+=-1\n             imos[g+1]+=1\n         imos[(g+1)%m]+=val-1\n         imos[(g+1)%m+1]+=-(val-1)\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n for i in range(1,m+1):\n     imos[i]+=imos[i-1]\n \n ans=-1\n val=0\n for i in range(m):\n     if val>imos[i]:\n         ans=i\n         val=imos[i]\n \n val=0\n for i in range(0,n-1):\n     s,g=a[i],a[i+1]\n     if g>=s:\n         if ans>s:\n             val+=1+(g-ans)%m\n         else:\n             val+=(g-ans)%m\n     else:\n         if ans>s or g>=ans:\n             val+=1+(g-ans)%m\n         else:\n             val+=(g-s)%m\n \n print(val)\n \n```\n "
    },
    {
        "user_id": "u527993431",
        "problem_id": "p03272",
        "submission1_id": "s297902701",
        "crp_content": "\n N,i=map(int,input().split())\n-print(N-1+1)\n",
        "origin_generated_text": "\n```\n N,i=map(int,input().split())\n-print(N-1+1)\n```\n "
    },
    {
        "user_id": "u995102075",
        "problem_id": "p03023",
        "submission1_id": "s832521060",
        "crp_content": "\n N = int(input())\n \n-print(180 * (N - 3))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n-print(180 * (N - 3))\n \n```\n "
    },
    {
        "user_id": "u661983922",
        "problem_id": "p03079",
        "submission1_id": "s459165530",
        "crp_content": "\n lst = input().split()\n \n cor_lst = sorted(lst)\n \n \n \n-if int(cor_lst[0])+int(cor_lst[1]) > int(cor_lst[2]):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n lst = input().split()\n \n cor_lst = sorted(lst)\n \n \n \n-if int(cor_lst[0])+int(cor_lst[1]) > int(cor_lst[2]):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03480",
        "submission1_id": "s273926453",
        "crp_content": "\n \n \n \n S = list(map(int, input()))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n N = len(S)\n \n-if sum(S) < 1:\n     min_T = 0\n else:\n     min_T = N\n     for i in range(1, N):\n         if S[i]!=S[i-1]:\n             min_T = min(min_T, max(i, N-i))\n \n print(min_T)\n \n \n \n \n",
        "origin_generated_text": "\n```\n \n \n \n S = list(map(int, input()))\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n N = len(S)\n \n-if sum(S) < 1:\n     min_T = 0\n else:\n     min_T = N\n     for i in range(1, N):\n         if S[i]!=S[i-1]:\n             min_T = min(min_T, max(i, N-i))\n \n print(min_T)\n \n \n \n \n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s123927127",
        "crp_content": "\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(13)):\n-    for j in reversed(range(1,1000)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n for i in list(reversed(ans))[:k]:\n     print(i)\n",
        "origin_generated_text": "\n```\n \n \n k = int(input())\n \n count = 0\n ans = []\n minN = 10**15\n \n-for i in reversed(range(13)):\n-    for j in reversed(range(1,1000)):\n-        num = str(j)+\"9\"*i\n-        n = sum([int(k) for k in num])\n-        n = int(num)/n\n-        if(minN > n or n==1):\n-            minN = n\n-            ans.append(num)\n             \n for i in list(reversed(ans))[:k]:\n     print(i)\n```\n "
    },
    {
        "user_id": "u066455063",
        "problem_id": "p03573",
        "submission1_id": "s748937333",
        "crp_content": "\n A, B, C = map(int, input().split())\n \n if A == B:\n     print(C)\n \n elif B == C:\n     print(A)\n \n else:\n-    print(A)\n \n",
        "origin_generated_text": "\n```\n A, B, C = map(int, input().split())\n \n if A == B:\n     print(C)\n \n elif B == C:\n     print(A)\n \n else:\n-    print(A)\n \n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s306671428",
        "crp_content": "\n h,w,n=[int(j) for j in input().split()]\n R,C=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=C\n l,r=1,w\n for i in range(n)[::-1]:\n     if t[i]==\"R\":\n         l-=1\n     elif t[i]==\"L\":\n         r+=1\n \n     if s[i]==\"R\":\n         r-=1\n     elif s[i]==\"L\":\n         l+=1\n     if not l<=x<=r:\n         print(\"NO\")\n         exit()\n     \n \n \n \n x=R\n l,r=1,h\n for i in range(n)[::-1]:\n     if t[i]==\"U\":\n         l-=1\n     elif t[i]==\"D\":\n         r+=1\n     if s[i]==\"U\":\n         r-=1\n     elif s[i]==\"D\":\n         l+=1\n     if not l<=x<=r:\n         print(\"NO\")\n         exit()\n \n \n print(\"YES\")\n",
        "origin_generated_text": "\n```\n h,w,n=[int(j) for j in input().split()]\n R,C=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=C\n l,r=1,w\n for i in range(n)[::-1]:\n     if t[i]==\"R\":\n         l-=1\n     elif t[i]==\"L\":\n         r+=1\n \n     if s[i]==\"R\":\n         r-=1\n     elif s[i]==\"L\":\n         l+=1\n     if not l<=x<=r:\n         print(\"NO\")\n         exit()\n     \n \n \n \n x=R\n l,r=1,h\n for i in range(n)[::-1]:\n     if t[i]==\"U\":\n         l-=1\n     elif t[i]==\"D\":\n         r+=1\n     if s[i]==\"U\":\n         r-=1\n     elif s[i]==\"D\":\n         l+=1\n     if not l<=x<=r:\n         print(\"NO\")\n         exit()\n \n \n print(\"YES\")\n```\n "
    },
    {
        "user_id": "u570944601",
        "problem_id": "p03326",
        "submission1_id": "s923978206",
        "crp_content": "\n n,m = map(int, input().split())\n x = [tuple(map(int, input().split())) for _ in range(n)]\n from itertools import *\n res = 0\n for a in product([-1, 1], [-1, 1], [-1, 1]):\n-  res = max(res, sum(sorted((max(0, sum(i*j for i,j in zip(a,t))) for t in x),reverse=True)[:m]))\n print(res)\n",
        "origin_generated_text": "\n```\n n,m = map(int, input().split())\n x = [tuple(map(int, input().split())) for _ in range(n)]\n from itertools import *\n res = 0\n for a in product([-1, 1], [-1, 1], [-1, 1]):\n-  res = max(res, sum(sorted((max(0, sum(i*j for i,j in zip(a,t))) for t in x),reverse=True)[:m]))\n print(res)\n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p03343",
        "submission1_id": "s214407245",
        "crp_content": "\n from heapq import *\n \n n,k,q = map(int, input().split())\n a = list(map(int, input().split()))\n num_set = set(a)\n \n def parse(b):\n     ret = []\n     cnt = 0\n     tmp = []\n     for ai in a:\n         if ai >= b:\n             tmp.append(ai)\n         else:\n             if len(tmp) >= k:\n                 tmp.sort(reverse=True)\n                 tmp = tmp[k-1:]\n                 heapify(tmp)\n                 ret.append(tmp)\n                 tmp = []\n     else:\n         if len(tmp) >= k:\n             tmp.sort(reverse=True)\n             tmp = tmp[k-1:]\n             heapify(tmp)\n             ret.append(tmp)\n     return ret\n \n ans = 10**10\n \n for b in num_set:\n     heap = parse(b)\n     heapify(heap)\n     tmp = []\n     i = 0\n     while i<q and heap:\n         lis = heappop(heap)\n         tmp.append(heappop(lis))\n         if lis:\n             heappush(heap, lis)\n         i += 1\n     if i == q:\n         ans = min(ans, max(tmp)-min(tmp))\n print(ans)\n \n",
        "origin_generated_text": "\n```\n from heapq import *\n \n n,k,q = map(int, input().split())\n a = list(map(int, input().split()))\n num_set = set(a)\n \n def parse(b):\n     ret = []\n     cnt = 0\n     tmp = []\n     for ai in a:\n         if ai >= b:\n             tmp.append(ai)\n         else:\n             if len(tmp) >= k:\n                 tmp.sort(reverse=True)\n                 tmp = tmp[k-1:]\n                 heapify(tmp)\n                 ret.append(tmp)\n                 tmp = []\n     else:\n         if len(tmp) >= k:\n             tmp.sort(reverse=True)\n             tmp = tmp[k-1:]\n             heapify(tmp)\n             ret.append(tmp)\n     return ret\n \n ans = 10**10\n \n for b in num_set:\n     heap = parse(b)\n     heapify(heap)\n     tmp = []\n     i = 0\n     while i<q and heap:\n         lis = heappop(heap)\n         tmp.append(heappop(lis))\n         if lis:\n             heappush(heap, lis)\n         i += 1\n     if i == q:\n         ans = min(ans, max(tmp)-min(tmp))\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u326775883",
        "problem_id": "p02727",
        "submission1_id": "s536073074",
        "crp_content": "\n x, y, a, b, c = [int(i) for i in input().split()]\n pa = [int(i) for i in input().split()]\n pb = [int(i) for i in input().split()]\n pc = [int(i) for i in input().split()]\n \n pa = sorted(pa, reverse=True)\n pa = pa[:x]\n pb = sorted(pb, reverse=True)\n pb = pb[:y]\n pc = sorted(pc, reverse=True)\n \n l = pa + pb\n l = sorted(l, reverse=True)\n \n-for i in range(len(pc)):\n-  for j in range(len(l)):\n-    if pc[i] > l[j]:\n-      l[j] = pc[i]\n-  if j == len(l)-1:\n-    break\n       \n print(sum(l))\n   \n",
        "origin_generated_text": "\n```\n x, y, a, b, c = [int(i) for i in input().split()]\n pa = [int(i) for i in input().split()]\n pb = [int(i) for i in input().split()]\n pc = [int(i) for i in input().split()]\n \n pa = sorted(pa, reverse=True)\n pa = pa[:x]\n pb = sorted(pb, reverse=True)\n pb = pb[:y]\n pc = sorted(pc, reverse=True)\n \n l = pa + pb\n l = sorted(l, reverse=True)\n \n-for i in range(len(pc)):\n-  for j in range(len(l)):\n-    if pc[i] > l[j]:\n-      l[j] = pc[i]\n-  if j == len(l)-1:\n-    break\n       \n print(sum(l))\n   \n```\n "
    },
    {
        "user_id": "u185948224",
        "problem_id": "p02887",
        "submission1_id": "s904461337",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n N = int(input())\n s= list(input())\n \n-s0 = s.pop()\n \n cnt = 1\n \n while s:\n-    s1 = s.pop()\n-    if s1!=s0:\n         cnt += 1\n-        s0 = s1\n print(cnt)\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n N = int(input())\n s= list(input())\n \n-s0 = s.pop()\n \n cnt = 1\n \n while s:\n-    s1 = s.pop()\n-    if s1!=s0:\n         cnt += 1\n-        s0 = s1\n print(cnt)\n \n```\n "
    },
    {
        "user_id": "u664481257",
        "problem_id": "p03568",
        "submission1_id": "s632278234",
        "crp_content": "\n \n \n \n \n \n from functools import reduce\n from itertools import repeat\n \n \n def multipler(x, y):\n     return x*y\n \n def hundred_or_one(l: list):\n     return [True if x == 100 else False for x in l]\n     \n \n def check_odds(l :list):\n     return [True if x % 2 == 0 else False for x in l]\n \n def check_hun(l: list):\n     return [True if x == 100 else False for x in l]\n \n def main(num, data:list):\n     \n     hun_one = hundred_or_one(data)\n     odds = check_odds(data)  \n     huns = check_hun(data)\n \n     basis = [2 if t else 3 for t in hun_one]\n     remover = [2 if o else 1 for o in odds]\n \n     remover_num = int(reduce(multipler, remover))\n     \n     \n \n     basic_answer = reduce(multipler, basis)\n     \n     \n     return basic_answer - remover_num\n \n if __name__ == '__main__':\n     \n     \n     num = int(input())\n     data = input().split(\" \")\n     data = [int(i) for i in data]\n \n     print(main(num, data))\n \n",
        "origin_generated_text": "\n```\n \n \n \n \n \n from functools import reduce\n from itertools import repeat\n \n \n def multipler(x, y):\n     return x*y\n \n def hundred_or_one(l: list):\n     return [True if x == 100 else False for x in l]\n     \n \n def check_odds(l :list):\n     return [True if x % 2 == 0 else False for x in l]\n \n def check_hun(l: list):\n     return [True if x == 100 else False for x in l]\n \n def main(num, data:list):\n     \n     hun_one = hundred_or_one(data)\n     odds = check_odds(data)  \n     huns = check_hun(data)\n \n     basis = [2 if t else 3 for t in hun_one]\n     remover = [2 if o else 1 for o in odds]\n \n     remover_num = int(reduce(multipler, remover))\n     \n     \n \n     basic_answer = reduce(multipler, basis)\n     \n     \n     return basic_answer - remover_num\n \n if __name__ == '__main__':\n     \n     \n     num = int(input())\n     data = input().split(\" \")\n     data = [int(i) for i in data]\n \n     print(main(num, data))\n \n```\n "
    },
    {
        "user_id": "u021916304",
        "problem_id": "p02742",
        "submission1_id": "s520196898",
        "crp_content": "\n h,w=map(int,input().split())\n if h%2 == 0 or w%2 == 0:\n-  print(h*w/2)\n else:\n   print(int(h*w/2)+1)\n   \n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n if h%2 == 0 or w%2 == 0:\n-  print(h*w/2)\n else:\n   print(int(h*w/2)+1)\n   \n```\n "
    },
    {
        "user_id": "u871596687",
        "problem_id": "p03023",
        "submission1_id": "s248119377",
        "crp_content": "\n n = int(input())\n \n-print((180-360/n)*n)\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n-print((180-360/n)*n)\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p03546",
        "submission1_id": "s346148977",
        "crp_content": "\n H, W = map(int, input().split())\n c = [[0]*10 for i in range(10)]\n for i in range(10):\n     a = list(map(int, input().split()))\n     for j in range(10):\n         c[i][j] = a[j]\n \n A = [[0]*W for i in range(H)]\n for i in range(H):\n     a = list(map(int, input().split()))\n     for j in range(W):\n         A[i][j] = a[j]\n \n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             if i != j:\n                 c[i][j] = min(c[i][j], c[i][k]+c[k][j])\n \n ans = 0\n for i in range(H):\n     for j in range(W):\n         if A[i][j] != -1 and A[i][j] != 1:\n             ans += c[A[i][j]][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n H, W = map(int, input().split())\n c = [[0]*10 for i in range(10)]\n for i in range(10):\n     a = list(map(int, input().split()))\n     for j in range(10):\n         c[i][j] = a[j]\n \n A = [[0]*W for i in range(H)]\n for i in range(H):\n     a = list(map(int, input().split()))\n     for j in range(W):\n         A[i][j] = a[j]\n \n for i in range(10):\n     for j in range(10):\n         for k in range(10):\n             if i != j:\n                 c[i][j] = min(c[i][j], c[i][k]+c[k][j])\n \n ans = 0\n for i in range(H):\n     for j in range(W):\n         if A[i][j] != -1 and A[i][j] != 1:\n             ans += c[A[i][j]][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u846694620",
        "problem_id": "p03764",
        "submission1_id": "s459514238",
        "crp_content": "\n import itertools\n \n \n def main():\n     n, m = map(int, input().split())\n \n     x = list(map(int, input().split()))\n     y = list(map(int, input().split()))\n \n     x_len = 0\n     y_len = 0\n \n     for i in range(n):\n         x_len += (2 * i - n + 1) * x[i] % (10 ** 9 + 7)\n-        print(x_len)\n \n     for j in range(m):\n         y_len += (2 * j - m + 1) * y[j] % (10 ** 9 + 7)\n-        print(y_len)\n \n     print(x_len * y_len % (10 ** 9 + 7))\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n import itertools\n \n \n def main():\n     n, m = map(int, input().split())\n \n     x = list(map(int, input().split()))\n     y = list(map(int, input().split()))\n \n     x_len = 0\n     y_len = 0\n \n     for i in range(n):\n         x_len += (2 * i - n + 1) * x[i] % (10 ** 9 + 7)\n-        print(x_len)\n \n     for j in range(m):\n         y_len += (2 * j - m + 1) * y[j] % (10 ** 9 + 7)\n-        print(y_len)\n \n     print(x_len * y_len % (10 ** 9 + 7))\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s819338587",
        "crp_content": "\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n             parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n         if left_index < len(target_list) and right_index < len(target_list):\n-            leaf = \" left key ={}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n             parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n         if left_index < len(target_list) and right_index < len(target_list):\n-            leaf = \" left key ={}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u383450070",
        "problem_id": "p03998",
        "submission1_id": "s263211116",
        "crp_content": "\n a = list(input())\n b = list(input())\n c = list(input())\n select = \"a\"\n lengtha = len(a)\n lengthb = len(b)\n lengthc = len(c)\n while True:\n   if select == \"a\":\n     del a[0]\n     lengtha -= 1\n     if lengtha == 0:\n       print(\"A\")\n       break;\n     else:\n       select = a[0]\n   elif select == \"b\":\n     del b[0]\n     lengthb -= 1\n     if lengthb == 0:\n       print(\"B\")\n       break;\n     else:\n       select = b[0]\n   else:\n     del c[0]\n     lengthc -= 1\n     if lengthc==0:\n       print(\"C\")\n       break;\n     else:\n       select = c[0]\n",
        "origin_generated_text": "\n```\n a = list(input())\n b = list(input())\n c = list(input())\n select = \"a\"\n lengtha = len(a)\n lengthb = len(b)\n lengthc = len(c)\n while True:\n   if select == \"a\":\n     del a[0]\n     lengtha -= 1\n     if lengtha == 0:\n       print(\"A\")\n       break;\n     else:\n       select = a[0]\n   elif select == \"b\":\n     del b[0]\n     lengthb -= 1\n     if lengthb == 0:\n       print(\"B\")\n       break;\n     else:\n       select = b[0]\n   else:\n     del c[0]\n     lengthc -= 1\n     if lengthc==0:\n       print(\"C\")\n       break;\n     else:\n       select = c[0]\n```\n "
    },
    {
        "user_id": "u365156087",
        "problem_id": "p03206",
        "submission1_id": "s753879111",
        "crp_content": "\n D = int(input())\n-print('Chrismas' + \" Eve\"*(25-D))\n",
        "origin_generated_text": "\n```\n D = int(input())\n-print('Chrismas' + \" Eve\"*(25-D))\n```\n "
    },
    {
        "user_id": "u137704841",
        "problem_id": "p03796",
        "submission1_id": "s602907488",
        "crp_content": "\n inN = int(input())\n \n D=1000000000 + 7\n p=0\n for i in range(inN):\n-  p*=i\n-  if (D < p): p=p%D\n \n print(str(p))\n",
        "origin_generated_text": "\n```\n inN = int(input())\n \n D=1000000000 + 7\n p=0\n for i in range(inN):\n-  p*=i\n-  if (D < p): p=p%D\n \n print(str(p))\n```\n "
    },
    {
        "user_id": "u403301154",
        "problem_id": "p03729",
        "submission1_id": "s945443957",
        "crp_content": "\n a, b, c = input().split()\n if a[-1]==b[0] and b[-1]==c[0]:\n-  print(\"Yes\")\n else:\n-  print(\"No\")\n",
        "origin_generated_text": "\n```\n a, b, c = input().split()\n if a[-1]==b[0] and b[-1]==c[0]:\n-  print(\"Yes\")\n else:\n-  print(\"No\")\n```\n "
    },
    {
        "user_id": "u796842765",
        "problem_id": "p02880",
        "submission1_id": "s782257638",
        "crp_content": "\n N = int(input())\n kuku = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n-kuku1 = [a * b for a in kuku for b in kuku]\n-if N in kuku:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n N = int(input())\n kuku = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n-kuku1 = [a * b for a in kuku for b in kuku]\n-if N in kuku:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u619819312",
        "problem_id": "p03675",
        "submission1_id": "s662305420",
        "crp_content": "\n n=int(input())\n a=list(map(str,input().split()))\n-s=list(reversed(a[1::2]))+a[::2]\n c=\"\"\n for i in range(n):\n     c+=s[i]+\" \"\n print(c)\n",
        "origin_generated_text": "\n```\n n=int(input())\n a=list(map(str,input().split()))\n-s=list(reversed(a[1::2]))+a[::2]\n c=\"\"\n for i in range(n):\n     c+=s[i]+\" \"\n print(c)\n```\n "
    },
    {
        "user_id": "u840310460",
        "problem_id": "p03752",
        "submission1_id": "s908106740",
        "crp_content": "\n N, K = [int(i)for i in input().split()]\n A = [int(i) for i in input().split()]\n \n \n ans = float(\"inf\")\n for b in range(2 ** N):\n     cnt = 0\n     cost = 0\n     height = A[0]\n     for i in range(N):\n         if i == 0:\n             continue\n         if (b >> i) & 1:\n             cnt += 1\n             cost += height - A[i] + 1\n             height += 1\n     if cnt + 1 == K:\n         ans = min(ans, cost)\n \n-print(ans)\n \n",
        "origin_generated_text": "\n```\n N, K = [int(i)for i in input().split()]\n A = [int(i) for i in input().split()]\n \n \n ans = float(\"inf\")\n for b in range(2 ** N):\n     cnt = 0\n     cost = 0\n     height = A[0]\n     for i in range(N):\n         if i == 0:\n             continue\n         if (b >> i) & 1:\n             cnt += 1\n             cost += height - A[i] + 1\n             height += 1\n     if cnt + 1 == K:\n         ans = min(ans, cost)\n \n-print(ans)\n \n```\n "
    },
    {
        "user_id": "u792720861",
        "problem_id": "p03760",
        "submission1_id": "s434429520",
        "crp_content": "\n O = input()\n E = input()\n-print(*[o+e for o,e in zip(O,E)], sep=\"\")\n \n",
        "origin_generated_text": "\n```\n O = input()\n E = input()\n-print(*[o+e for o,e in zip(O,E)], sep=\"\")\n \n```\n "
    },
    {
        "user_id": "u617440820",
        "problem_id": "p03416",
        "submission1_id": "s995609846",
        "crp_content": "\n input_one = input().split()\n i = int(input_one[0])\n two = input_one[1]\n \n \n \n \n while  i <= int(two):\n     \n     i = str(i)\n-    if i[0] == i[4]:\n-        if i[1] == i[3]:\n-            print(int(i))\n \n     i = int(i) + 1\n",
        "origin_generated_text": "\n```\n input_one = input().split()\n i = int(input_one[0])\n two = input_one[1]\n \n \n \n \n while  i <= int(two):\n     \n     i = str(i)\n-    if i[0] == i[4]:\n-        if i[1] == i[3]:\n-            print(int(i))\n \n     i = int(i) + 1\n```\n "
    },
    {
        "user_id": "u707444776",
        "problem_id": "p03752",
        "submission1_id": "s559550952",
        "crp_content": "\n def dfs(index):\n     global ans\n     if index == N:\n         if blst.count(1) == K - 1:\n             tmp = a[0]\n             anstmp = 0\n             for i in range(1, N):\n                 if blst[i - 1] == 0:continue\n                 if tmp >= a[i]:\n                     anstmp += tmp - a[i] + 1\n                     tmp += 1\n                 else:\n                     tmp = a[i]\n             ans = min(ans, anstmp)\n         return\n     for i in range(2):\n         blst[index - 1] = i\n         dfs(index + 1)\n     return\n \n N, K = map(int, input().split())\n a = list(map(int, input().split()))\n blst = [0] * (N - 1)\n ans = float('inf')\n dfs(1)\n \n-print(0)\n",
        "origin_generated_text": "\n```\n def dfs(index):\n     global ans\n     if index == N:\n         if blst.count(1) == K - 1:\n             tmp = a[0]\n             anstmp = 0\n             for i in range(1, N):\n                 if blst[i - 1] == 0:continue\n                 if tmp >= a[i]:\n                     anstmp += tmp - a[i] + 1\n                     tmp += 1\n                 else:\n                     tmp = a[i]\n             ans = min(ans, anstmp)\n         return\n     for i in range(2):\n         blst[index - 1] = i\n         dfs(index + 1)\n     return\n \n N, K = map(int, input().split())\n a = list(map(int, input().split()))\n blst = [0] * (N - 1)\n ans = float('inf')\n dfs(1)\n \n-print(0)\n```\n "
    },
    {
        "user_id": "u353797797",
        "problem_id": "p03625",
        "submission1_id": "s797592306",
        "crp_content": "\n from collections import Counter\n import sys\n \n sys.setrecursionlimit(10 ** 6)\n int1 = lambda x: int(x) - 1\n p2D = lambda x: print(*x, sep=\"\\n\")\n def MI(): return map(int, sys.stdin.readline().split())\n def LI(): return list(map(int, sys.stdin.readline().split()))\n def LLI(rows_number): return [LI() for _ in range(rows_number)]\n \n def main():\n     n=int(input())\n     aa=LI()\n     cnt=Counter(aa)\n     mx=-1\n     for a,an in sorted(cnt.items(),reverse=True):\n         if an>3 and mx==-1:\n             print(a*a)\n         elif an>1:\n             if mx==-1:mx=a\n             else:\n                 print(mx*a)\n                 break\n     else:\n         print(0)\n \n \n \n main()\n",
        "origin_generated_text": "\n```\n from collections import Counter\n import sys\n \n sys.setrecursionlimit(10 ** 6)\n int1 = lambda x: int(x) - 1\n p2D = lambda x: print(*x, sep=\"\\n\")\n def MI(): return map(int, sys.stdin.readline().split())\n def LI(): return list(map(int, sys.stdin.readline().split()))\n def LLI(rows_number): return [LI() for _ in range(rows_number)]\n \n def main():\n     n=int(input())\n     aa=LI()\n     cnt=Counter(aa)\n     mx=-1\n     for a,an in sorted(cnt.items(),reverse=True):\n         if an>3 and mx==-1:\n             print(a*a)\n         elif an>1:\n             if mx==-1:mx=a\n             else:\n                 print(mx*a)\n                 break\n     else:\n         print(0)\n \n \n \n main()\n```\n "
    },
    {
        "user_id": "u820351940",
        "problem_id": "p03760",
        "submission1_id": "s975162949",
        "crp_content": "\n-a = input(); b = input(); \"\".join(map(\"\".join, zip(a, b))) + (a[-1] if len(a) is not len(b) else \"\")\n",
        "origin_generated_text": "\n```\n-a = input(); b = input(); \"\".join(map(\"\".join, zip(a, b))) + (a[-1] if len(a) is not len(b) else \"\")\n```\n "
    },
    {
        "user_id": "u472534477",
        "problem_id": "p03274",
        "submission1_id": "s729839721",
        "crp_content": "\n N,K = map(int,input().split())\n x = list(map(int,input().split()))\n ans=float(\"inf\")\n \n for i in range(K):\n     if i + K >= N+1:\n         break\n     else:\n-        a = min(abs(x[K+i-1]),abs(x[i])) \n         ans = min(ans,x[K+i-1]-x[i]+a)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N,K = map(int,input().split())\n x = list(map(int,input().split()))\n ans=float(\"inf\")\n \n for i in range(K):\n     if i + K >= N+1:\n         break\n     else:\n-        a = min(abs(x[K+i-1]),abs(x[i])) \n         ans = min(ans,x[K+i-1]-x[i]+a)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u098240946",
        "problem_id": "p03343",
        "submission1_id": "s256556489",
        "crp_content": "\n N,K,Q = a = map(int,input().split())\n a = list(map(int,input().split()))\n inf = 10**10\n ans = inf\n for i in range(N):\n     small = a[i]\n     seq = []\n     seqq = []\n     for j in range(N):\n         if a[j] < small:\n             seq.append(seqq)\n             seqq = []\n         else:\n             seqq.append(a[j])\n     seq.append(seqq)\n     aaa = []\n     for s in seq:\n         if len(s)>=K:\n             s.sort()\n             aaa += s[:len(s)-K+1]\n     if len(aaa)>=Q:\n         aaa.sort()\n         ans = min(ans,aaa[Q-1]-aaa[0])\n-        print(i,a[i],aaa,ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n N,K,Q = a = map(int,input().split())\n a = list(map(int,input().split()))\n inf = 10**10\n ans = inf\n for i in range(N):\n     small = a[i]\n     seq = []\n     seqq = []\n     for j in range(N):\n         if a[j] < small:\n             seq.append(seqq)\n             seqq = []\n         else:\n             seqq.append(a[j])\n     seq.append(seqq)\n     aaa = []\n     for s in seq:\n         if len(s)>=K:\n             s.sort()\n             aaa += s[:len(s)-K+1]\n     if len(aaa)>=Q:\n         aaa.sort()\n         ans = min(ans,aaa[Q-1]-aaa[0])\n-        print(i,a[i],aaa,ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u858670323",
        "problem_id": "p03568",
        "submission1_id": "s628453262",
        "crp_content": "\n n=int(input())\n A=list(map(int,input().rstrip().split(' ')))\n ans=1\n for a in A:\n   if(a%2==1):\n-    ans*=3\n     \n print(ans)\n",
        "origin_generated_text": "\n```\n n=int(input())\n A=list(map(int,input().rstrip().split(' ')))\n ans=1\n for a in A:\n   if(a%2==1):\n-    ans*=3\n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u191874006",
        "problem_id": "p03965",
        "submission1_id": "s010305547",
        "crp_content": "\n \n \n \n import sys\n import math\n import bisect\n sys.setrecursionlimit(1000000000)\n from heapq import heappush, heappop\n from collections import defaultdict\n from itertools import accumulate\n from collections import Counter\n from collections import deque\n from operator import itemgetter\n from itertools import permutations\n mod = 10**9 + 7\n \n s = input()\n n = len(s)\n ans = 0\n cnt = 0\n for i in range(n):\n     if s[i] == 'g':\n         if cnt > 0:\n             ans += 1\n             cnt -= 1\n         else:\n             cnt += 1\n     else:\n         cnt -= 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n \n \n import sys\n import math\n import bisect\n sys.setrecursionlimit(1000000000)\n from heapq import heappush, heappop\n from collections import defaultdict\n from itertools import accumulate\n from collections import Counter\n from collections import deque\n from operator import itemgetter\n from itertools import permutations\n mod = 10**9 + 7\n \n s = input()\n n = len(s)\n ans = 0\n cnt = 0\n for i in range(n):\n     if s[i] == 'g':\n         if cnt > 0:\n             ans += 1\n             cnt -= 1\n         else:\n             cnt += 1\n     else:\n         cnt -= 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p03992",
        "submission1_id": "s791130027",
        "crp_content": "\n s=input()\n-print(s[:4]+\" \"+s[5:])\n",
        "origin_generated_text": "\n```\n s=input()\n-print(s[:4]+\" \"+s[5:])\n```\n "
    },
    {
        "user_id": "u667189155",
        "problem_id": "p02917",
        "submission1_id": "s883337779",
        "crp_content": "\n n = int(input())\n b = list(map(int, input().split()))\n \n sum = b[0]*2\n if n >= 4:\n     for i in range(n-2):\n-        if b[i] > b[i+1]:\n-            b[i] = b[i+1]\n         sum += b[i]\n \n sum += b[-1]\n print(sum)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n b = list(map(int, input().split()))\n \n sum = b[0]*2\n if n >= 4:\n     for i in range(n-2):\n-        if b[i] > b[i+1]:\n-            b[i] = b[i+1]\n         sum += b[i]\n \n sum += b[-1]\n print(sum)\n \n```\n "
    },
    {
        "user_id": "u867848444",
        "problem_id": "p02625",
        "submission1_id": "s611449886",
        "crp_content": "\n \n def pre_c(n, mod):\n     f = [0] * (n + 1)\n     g = [0] * (n + 1)\n     for i in range(n + 1):\n         if i == 0:\n             f[i] = 1\n             g[i] = 1\n         else:\n             f[i] = (f[i - 1] * i) % mod\n             g[i] = pow(f[i], mod - 2, mod)\n \n     return f, g\n \n n, m = map(int,input().split())\n mod = 10 ** 9 + 7\n f, g = pre_c(m, mod)\n mCn = (f[m] * g[m - n] * g[n])\n \n temp1 = (f[n] * f[n - 1])\n temp2 = (f[n] * f[n])\n \n if m < 2*n:\n     res = (mCn ** 2 * temp1) %mod\n else:\n     m_nCn = (f[m - n] * g[n] * g[m - 2*n])\n     execept = (mCn * m_nCn * temp2)\n     res = (execept + ((mCn ** 2 - mCn * m_nCn) * temp1)) %mod\n print(res)\n",
        "origin_generated_text": "\n```\n \n def pre_c(n, mod):\n     f = [0] * (n + 1)\n     g = [0] * (n + 1)\n     for i in range(n + 1):\n         if i == 0:\n             f[i] = 1\n             g[i] = 1\n         else:\n             f[i] = (f[i - 1] * i) % mod\n             g[i] = pow(f[i], mod - 2, mod)\n \n     return f, g\n \n n, m = map(int,input().split())\n mod = 10 ** 9 + 7\n f, g = pre_c(m, mod)\n mCn = (f[m] * g[m - n] * g[n])\n \n temp1 = (f[n] * f[n - 1])\n temp2 = (f[n] * f[n])\n \n if m < 2*n:\n     res = (mCn ** 2 * temp1) %mod\n else:\n     m_nCn = (f[m - n] * g[n] * g[m - 2*n])\n     execept = (mCn * m_nCn * temp2)\n     res = (execept + ((mCn ** 2 - mCn * m_nCn) * temp1)) %mod\n print(res)\n```\n "
    },
    {
        "user_id": "u465652095",
        "problem_id": "p02730",
        "submission1_id": "s982477875",
        "crp_content": "\n S = input()\n N = len(S)\n SF_num = int((N-1)/2)\n SF = S[:SF_num]\n SF_rev = SF[::-1]\n SB = S[-SF_num:]\n SB_rev = SB[::-1]\n \n if SF == SB_rev:\n     if SF[:SF_num] == SF_rev[:SF_num]:\n         if SB[-SF_num:] == SB_rev[-SF_num:]:\n             print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n SF_num = int((N-1)/2)\n SF = S[:SF_num]\n SF_rev = SF[::-1]\n SB = S[-SF_num:]\n SB_rev = SB[::-1]\n \n if SF == SB_rev:\n     if SF[:SF_num] == SF_rev[:SF_num]:\n         if SB[-SF_num:] == SB_rev[-SF_num:]:\n             print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u657221245",
        "problem_id": "p03106",
        "submission1_id": "s774215225",
        "crp_content": "\n a = list(map(int, input().split()))\n num1 = a[0]\n num2 = a[1]\n list1 = []\n list2 = []\n-max = a[2]\n for i in range(1, num1 + 1):\n   if num1 % i == 0:\n     list1.append(i)\n     \n for i in range(1, num2 + 1):\n   if num2 % i == 0:\n     list2.append(i)\n \n list3 = list(set(list1) & set(list2))\n list3.sort()\n \n-print(list3[max -1])\n",
        "origin_generated_text": "\n```\n a = list(map(int, input().split()))\n num1 = a[0]\n num2 = a[1]\n list1 = []\n list2 = []\n-max = a[2]\n for i in range(1, num1 + 1):\n   if num1 % i == 0:\n     list1.append(i)\n     \n for i in range(1, num2 + 1):\n   if num2 % i == 0:\n     list2.append(i)\n \n list3 = list(set(list1) & set(list2))\n list3.sort()\n \n-print(list3[max -1])\n```\n "
    },
    {
        "user_id": "u960237860",
        "problem_id": "p02553",
        "submission1_id": "s570786641",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n \n-ans = -2e20\n-for x in [a, b, 0]:\n-    for y in [c,d, 0]:\n         if x * y > ans:\n             ans = x * y\n print(ans)\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n \n-ans = -2e20\n-for x in [a, b, 0]:\n-    for y in [c,d, 0]:\n         if x * y > ans:\n             ans = x * y\n print(ans)\n```\n "
    },
    {
        "user_id": "u470542271",
        "problem_id": "p02886",
        "submission1_id": "s623286367",
        "crp_content": "\n-n = input(int())\n d = list(map(int, input().split()))\n \n ans = 0\n for i in range(len(d)):\n     for j in range(i+1, len(d)):\n         ans += d[i] * d[j]\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n-n = input(int())\n d = list(map(int, input().split()))\n \n ans = 0\n for i in range(len(d)):\n     for j in range(i+1, len(d)):\n         ans += d[i] * d[j]\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u912652535",
        "problem_id": "p02959",
        "submission1_id": "s447349072",
        "crp_content": "\n n = int(input())\n a = list(map(int,input().split()))\n b = list(map(int,input().split()))\n \n \n c = []\n count = 0\n \n for i in range(n):\n \n     if a[i] - b[i] >= 0:\n         count += b[i]\n     elif a[i] - b[i] < 0:\n         count += a[i]\n-        if a[i+1] + (a[i] - b[i]) >0:\n-            a[i+1] = a[i+1] + (a[i] - b[i])\n-            count += (a[i]-b[i])\n-        elif a[i+1] + (a[i]-b[i]) <=0:\n-            count += a[i+1]\n-            a[i+1] = 0\n-            \n print(count)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int,input().split()))\n b = list(map(int,input().split()))\n \n \n c = []\n count = 0\n \n for i in range(n):\n \n     if a[i] - b[i] >= 0:\n         count += b[i]\n     elif a[i] - b[i] < 0:\n         count += a[i]\n-        if a[i+1] + (a[i] - b[i]) >0:\n-            a[i+1] = a[i+1] + (a[i] - b[i])\n-            count += (a[i]-b[i])\n-        elif a[i+1] + (a[i]-b[i]) <=0:\n-            count += a[i+1]\n-            a[i+1] = 0\n-            \n print(count)\n```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s745581223",
        "crp_content": "\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n P.sort(reverse=True)\n Q.sort(reverse=True)\n \n ans = 0\n v_nodes = W + 1\n h_nodes = H + 1\n while P or Q:\n     if P and Q:\n         if P[-1] < Q[-1]:\n             ans += P.pop() * h_nodes\n             v_nodes -= 1\n         else:\n             ans += Q.pop() * v_nodes\n             h_nodes -= 1\n     elif P:\n         ans += P.pop() * h_nodes\n         v_nodes -= 1\n     elif Q:\n-        ans += Q.pop() * v_nodes\n         h_nodes -= 1\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n P.sort(reverse=True)\n Q.sort(reverse=True)\n \n ans = 0\n v_nodes = W + 1\n h_nodes = H + 1\n while P or Q:\n     if P and Q:\n         if P[-1] < Q[-1]:\n             ans += P.pop() * h_nodes\n             v_nodes -= 1\n         else:\n             ans += Q.pop() * v_nodes\n             h_nodes -= 1\n     elif P:\n         ans += P.pop() * h_nodes\n         v_nodes -= 1\n     elif Q:\n-        ans += Q.pop() * v_nodes\n         h_nodes -= 1\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u377989038",
        "problem_id": "p03477",
        "submission1_id": "s453804547",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n if a + b == c + d:\n-    print(\"Balance\")\n elif a + b < c + d:\n     print(\"Right\")\n else:\n     print(\"Left\")\n \n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n if a + b == c + d:\n-    print(\"Balance\")\n elif a + b < c + d:\n     print(\"Right\")\n else:\n     print(\"Left\")\n \n```\n "
    },
    {
        "user_id": "u578501242",
        "problem_id": "p03296",
        "submission1_id": "s352105312",
        "crp_content": "\n a =int(input())\n b =list(map(int,input().split()))\n-print(a)\n-print(b)\n x=0\n for i in range(a-1):\n \tif b[i]==b[i+1]:\n \t\tb[i+1]=11111\n \t\tx=x+1\n print(x)\n",
        "origin_generated_text": "\n```\n a =int(input())\n b =list(map(int,input().split()))\n-print(a)\n-print(b)\n x=0\n for i in range(a-1):\n \tif b[i]==b[i+1]:\n \t\tb[i+1]=11111\n \t\tx=x+1\n print(x)\n```\n "
    },
    {
        "user_id": "u587589241",
        "problem_id": "p03475",
        "submission1_id": "s655746235",
        "crp_content": "\n import sys\n n=int(input())\n c=[]\n s=[]\n f=[]\n if n==1:\n     print(0)\n     sys.exit()\n for i in range(n-1):\n     C,S,F=map(int,input().split())\n     c.append(C)\n     s.append(S)\n     f.append(F)\n for i in range(n-1):\n     tmp=0\n     while i<n-1:\n         if tmp<=s[i]:\n             a=s[i]\n         elif tmp%f[i]==0:\n             a=s[i]+f[i]\n         elif tmp>s[i]:\n             b=(tmp-s[i])%f[i]\n             a=tmp+b\n         tmp=a+c[i]\n         i+=1\n     print(tmp)\n print(0)\n",
        "origin_generated_text": "\n```\n import sys\n n=int(input())\n c=[]\n s=[]\n f=[]\n if n==1:\n     print(0)\n     sys.exit()\n for i in range(n-1):\n     C,S,F=map(int,input().split())\n     c.append(C)\n     s.append(S)\n     f.append(F)\n for i in range(n-1):\n     tmp=0\n     while i<n-1:\n         if tmp<=s[i]:\n             a=s[i]\n         elif tmp%f[i]==0:\n             a=s[i]+f[i]\n         elif tmp>s[i]:\n             b=(tmp-s[i])%f[i]\n             a=tmp+b\n         tmp=a+c[i]\n         i+=1\n     print(tmp)\n print(0)\n```\n "
    },
    {
        "user_id": "u518064858",
        "problem_id": "p03626",
        "submission1_id": "s628006376",
        "crp_content": "\n n=int(input())\n s1=input()\n s2=input()\n if n==1:\n     print(3)\n     exit()\n s=\"\"\n i=0\n while i<n:\n     if s1[i]==s2[i]:\n         s+=\"1\"\n         i+=1\n     else:\n         s+=\"2\"\n         i+=2\n ans=0\n if s[0]==\"1\":\n     ans+=3\n else:\n     ans+=6\n before=s[0]\n for j in range(1,len(s)):\n     if before==\"1\":\n         if s[j]==\"1\":\n             ans*=2\n         else:\n             ans*=2\n     else:\n         if s[j]==\"2\":\n             ans*=3\n     before=s[j]\n-print(ans%(10**7+9))\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n s1=input()\n s2=input()\n if n==1:\n     print(3)\n     exit()\n s=\"\"\n i=0\n while i<n:\n     if s1[i]==s2[i]:\n         s+=\"1\"\n         i+=1\n     else:\n         s+=\"2\"\n         i+=2\n ans=0\n if s[0]==\"1\":\n     ans+=3\n else:\n     ans+=6\n before=s[0]\n for j in range(1,len(s)):\n     if before==\"1\":\n         if s[j]==\"1\":\n             ans*=2\n         else:\n             ans*=2\n     else:\n         if s[j]==\"2\":\n             ans*=3\n     before=s[j]\n-print(ans%(10**7+9))\n \n```\n "
    },
    {
        "user_id": "u519227872",
        "problem_id": "p02299",
        "submission1_id": "s020243394",
        "crp_content": "\n n = int(input())\n g = []\n for i in range(n):\n     g.append([int(i) for i in input().split()])\n q = int(input())\n \n def dot(a, b):\n     return sum([i * j for i,j in zip(a, b)])\n def sub(a, b):\n     return [a[0] - b[0],a[1] - b[1]]\n def cross(a, b):\n     return  a[0] * b[1] - a[1] * b[0]\n def contains(g, p):\n     x = False\n     for i in range(n):\n         a = sub(g[i], p)\n         b = sub(g[(i+1)%n], p)\n         if abs(cross(a, b)) == 0 and dot(a, b) < 0: \n             return 1\n         if a[1] > b[1]:\n             a,b=b,a\n         if a[1] < 0 and 0 < b[1] and abs(cross(a,b)) > 0:\n             x = not x\n     return 2 if x else 0\n for i in range(q):\n     x,y = map(int, input().split())\n     print(contains(g, [x,y]))\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n g = []\n for i in range(n):\n     g.append([int(i) for i in input().split()])\n q = int(input())\n \n def dot(a, b):\n     return sum([i * j for i,j in zip(a, b)])\n def sub(a, b):\n     return [a[0] - b[0],a[1] - b[1]]\n def cross(a, b):\n     return  a[0] * b[1] - a[1] * b[0]\n def contains(g, p):\n     x = False\n     for i in range(n):\n         a = sub(g[i], p)\n         b = sub(g[(i+1)%n], p)\n         if abs(cross(a, b)) == 0 and dot(a, b) < 0: \n             return 1\n         if a[1] > b[1]:\n             a,b=b,a\n         if a[1] < 0 and 0 < b[1] and abs(cross(a,b)) > 0:\n             x = not x\n     return 2 if x else 0\n for i in range(q):\n     x,y = map(int, input().split())\n     print(contains(g, [x,y]))\n \n \n```\n "
    },
    {
        "user_id": "u663438907",
        "problem_id": "p02665",
        "submission1_id": "s211772377",
        "crp_content": "\n import sys\n N = int(input())\n A = list(map(int, input().split()))\n \n l = []\n \n if A[0] != 0:\n     print(-1)\n     sys.exit()\n \n for i in range(N):\n     if A[i] > A[i+1]+1:\n         print(-1)\n         sys.exit()\n \n temp = 1\n for i in range(N+1):\n     l.append(temp-A[i])\n     temp = (temp-A[i])*2\n \n ans = 1\n node = 0\n for i in range(N, 0, -1):\n     if l[i-1] >= node + A[i]:\n         node += A[i]\n         ans += node\n     else:\n         ans += node + A[i]\n         node = l[i-1]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n N = int(input())\n A = list(map(int, input().split()))\n \n l = []\n \n if A[0] != 0:\n     print(-1)\n     sys.exit()\n \n for i in range(N):\n     if A[i] > A[i+1]+1:\n         print(-1)\n         sys.exit()\n \n temp = 1\n for i in range(N+1):\n     l.append(temp-A[i])\n     temp = (temp-A[i])*2\n \n ans = 1\n node = 0\n for i in range(N, 0, -1):\n     if l[i-1] >= node + A[i]:\n         node += A[i]\n         ans += node\n     else:\n         ans += node + A[i]\n         node = l[i-1]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u460245024",
        "problem_id": "p03274",
        "submission1_id": "s457874313",
        "crp_content": "\n N, K = map(int, input().split())\n X = list(map(int, input().split()))\n INF = 1000000000\n-distances = [INF]*(2*(N-K+1))\n for l in range(N-K+1):\n-    distances[l]=abs(X[l]) + abs(X[l] - X[l+K-1])\n-    distances[l+1]=abs(X[l+K-1]) + abs(X[l] - X[l+K-1])\n \n print(min(distances))\n \n",
        "origin_generated_text": "\n```\n N, K = map(int, input().split())\n X = list(map(int, input().split()))\n INF = 1000000000\n-distances = [INF]*(2*(N-K+1))\n for l in range(N-K+1):\n-    distances[l]=abs(X[l]) + abs(X[l] - X[l+K-1])\n-    distances[l+1]=abs(X[l+K-1]) + abs(X[l] - X[l+K-1])\n \n print(min(distances))\n \n```\n "
    },
    {
        "user_id": "u361381049",
        "problem_id": "p04019",
        "submission1_id": "s476655014",
        "crp_content": "\n s = input()\n ans = 'Yes'\n n = 0\n w = 0\n sow = 0\n e = 0\n \n for i in range(len(s)):\n     if s[i] == 'N':\n         n += 1\n     elif s[i] == 'W':\n         w += 1\n     elif s[i] == 'S':\n         sow += 1\n     else:\n         e += 1\n \n \n \n-if (n == 0 and w != 0) or (n != 0 and w == 0):\n     ans = 'No'\n-if (sow == 0 and e != 0) or (sow != 0 and e == 0):\n-    ans = 'NO'\n print(ans)\n",
        "origin_generated_text": "\n```\n s = input()\n ans = 'Yes'\n n = 0\n w = 0\n sow = 0\n e = 0\n \n for i in range(len(s)):\n     if s[i] == 'N':\n         n += 1\n     elif s[i] == 'W':\n         w += 1\n     elif s[i] == 'S':\n         sow += 1\n     else:\n         e += 1\n \n \n \n-if (n == 0 and w != 0) or (n != 0 and w == 0):\n     ans = 'No'\n-if (sow == 0 and e != 0) or (sow != 0 and e == 0):\n-    ans = 'NO'\n print(ans)\n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03080",
        "submission1_id": "s633612254",
        "crp_content": "\n n=int(input())\n s=input()\n count=0\n for i in s:\n   if i=='B':\n     count+=1\n-if count>(n-count):\n   print('Yes')\n else:\n   print('No')\n",
        "origin_generated_text": "\n```\n n=int(input())\n s=input()\n count=0\n for i in s:\n   if i=='B':\n     count+=1\n-if count>(n-count):\n   print('Yes')\n else:\n   print('No')\n```\n "
    },
    {
        "user_id": "u056977516",
        "problem_id": "p02556",
        "submission1_id": "s206605779",
        "crp_content": "\n \n \n \n from math import *\n from copy import *                      \n from heapq import *                     \n from string import *                    \n from random import *                    \n from bisect import *                    \n from sys import stdin                   \n from sys import maxsize                 \n from operator import *                  \n from itertools import *                 \n from decimal import Decimal             \n from collections import Counter         \n from collections import defaultdict     \n \n \n \n def solve(l):\n \tn = len(l)\n-\td = defaultdict(int)\n \tll = []\n \tfor x,y in l:\n \t\tll.append(x+y)\n \treturn abs(min(ll) - max(ll))\n \n N = int(stdin.readline())\n L = []\n for i in range(N):\n \ta,b = map(int, input().split())\n \tL.append([a,b])\n ans = solve(L)\n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n \n \n \n from math import *\n from copy import *                      \n from heapq import *                     \n from string import *                    \n from random import *                    \n from bisect import *                    \n from sys import stdin                   \n from sys import maxsize                 \n from operator import *                  \n from itertools import *                 \n from decimal import Decimal             \n from collections import Counter         \n from collections import defaultdict     \n \n \n \n def solve(l):\n \tn = len(l)\n-\td = defaultdict(int)\n \tll = []\n \tfor x,y in l:\n \t\tll.append(x+y)\n \treturn abs(min(ll) - max(ll))\n \n N = int(stdin.readline())\n L = []\n for i in range(N):\n \ta,b = map(int, input().split())\n \tL.append([a,b])\n ans = solve(L)\n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u424241608",
        "problem_id": "p02642",
        "submission1_id": "s078460641",
        "crp_content": "\n n = int(input())\n arr = [int(x) for x in input().split()]\n d = {}\n for x in arr:\n   d[x] = d.get(x,0)+1\n \n mxN = 10**6 + 1\n rp = [True]*mxN\n \n \n for i in range(2,len(rp)):\n   if i not in d or not rp[i]:continue\n   for j in range(i+i,mxN,i):\n     if j in d: rp[j] = False\n \n \n \n \n \n for k,v in d.items():\n   if v > 1:rp[k] = False\n \n ans = sum([(1 if rp[x] else 0) for x in arr])\n print(ans)\n \n \n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n arr = [int(x) for x in input().split()]\n d = {}\n for x in arr:\n   d[x] = d.get(x,0)+1\n \n mxN = 10**6 + 1\n rp = [True]*mxN\n \n \n for i in range(2,len(rp)):\n   if i not in d or not rp[i]:continue\n   for j in range(i+i,mxN,i):\n     if j in d: rp[j] = False\n \n \n \n \n \n for k,v in d.items():\n   if v > 1:rp[k] = False\n \n ans = sum([(1 if rp[x] else 0) for x in arr])\n print(ans)\n \n \n \n \n```\n "
    },
    {
        "user_id": "u623687794",
        "problem_id": "p03546",
        "submission1_id": "s020138649",
        "crp_content": "\n h,w=map(int,input().split())\n cost=[list(map(int,input().split())) for i in range(10)]\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n       cost[i][j]=min(cost[i][j],cost[i][k]+cost[k][j])\n wall=[list(map(int,input().split())) for i in range(h)]\n ans=0\n for i in range(h):\n   for j in wall[i]:\n     if j==-1:continue\n-    ans+=cost[j][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n cost=[list(map(int,input().split())) for i in range(10)]\n for i in range(10):\n   for j in range(10):\n     for k in range(10):\n       cost[i][j]=min(cost[i][j],cost[i][k]+cost[k][j])\n wall=[list(map(int,input().split())) for i in range(h)]\n ans=0\n for i in range(h):\n   for j in wall[i]:\n     if j==-1:continue\n-    ans+=cost[j][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u617384447",
        "problem_id": "p02660",
        "submission1_id": "s005859528",
        "crp_content": "\n n = int(input())\n \n def divGame(N=n):\n   if N == 1:\n     return 0\n   if N == 2:\n     return 1\n   \n   factors = []\n   \n   count = 0\n   while N % 2 == 0:\n     N /= 2\n     count += 1\n   if count != 0:\n     factors.append(count)\n \n   for i in range(3, int(N**0.5 + 1), 2):\n     count = 0\n     while N % i == 0:\n       N /= i\n       count += 1\n     if count != 0:\n       factors.append(count)\n   if N != 1:\n     factors.append(1)\n \n   factors.sort()\n \n   answer = 0\n   accum = 1\n   count = 1\n   for i in range(len(factors)):\n     while factors[i] > accum:\n       count += 1\n       accum += count\n     answer += count\n \n   return answer\n \n print(divGame())\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n def divGame(N=n):\n   if N == 1:\n     return 0\n   if N == 2:\n     return 1\n   \n   factors = []\n   \n   count = 0\n   while N % 2 == 0:\n     N /= 2\n     count += 1\n   if count != 0:\n     factors.append(count)\n \n   for i in range(3, int(N**0.5 + 1), 2):\n     count = 0\n     while N % i == 0:\n       N /= i\n       count += 1\n     if count != 0:\n       factors.append(count)\n   if N != 1:\n     factors.append(1)\n \n   factors.sort()\n \n   answer = 0\n   accum = 1\n   count = 1\n   for i in range(len(factors)):\n     while factors[i] > accum:\n       count += 1\n       accum += count\n     answer += count\n \n   return answer\n \n print(divGame())\n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p03054",
        "submission1_id": "s981406022",
        "crp_content": "\n h,w,n = map(int, input().split())\n sr, sc = map(int, input().split())\n s = input()\n t = input()\n \n left = 1\n right = w\n bot = 1\n top = h\n \n \n if s[-1] == \"L\":\n     left += 1\n elif s[-1] == \"R\":\n     right -= 1\n elif s[-1] == \"U\":\n     top -= 1\n elif s[-1] == \"D\":\n     bot += 1\n \n for i in range(n-2, -1, -1):\n     \n     \n     if t[i] == \"L\":\n         right = min(w, right+1)\n     elif t[i] == \"R\":\n         left = max(0, left-1)\n     elif t[i] == \"U\":\n         bot = max(0, bot-1)\n     elif t[i] == \"D\":\n         top = min(h, top+1)\n     \n     \n     if s[i] == \"L\":\n         left += 1\n     elif s[i] == \"R\":\n         right -= 1\n     elif s[i] == \"U\":\n         top -= 1\n     elif s[i] == \"D\":\n         bot += 1\n-    if left >= right or bot >= top:\n         print(\"NO\")\n         exit()\n \n \n if left <= sc <= right and bot <= sr <=top:\n     print(\"YES\")\n else:\n     print(\"NO\")\n",
        "origin_generated_text": "\n```\n h,w,n = map(int, input().split())\n sr, sc = map(int, input().split())\n s = input()\n t = input()\n \n left = 1\n right = w\n bot = 1\n top = h\n \n \n if s[-1] == \"L\":\n     left += 1\n elif s[-1] == \"R\":\n     right -= 1\n elif s[-1] == \"U\":\n     top -= 1\n elif s[-1] == \"D\":\n     bot += 1\n \n for i in range(n-2, -1, -1):\n     \n     \n     if t[i] == \"L\":\n         right = min(w, right+1)\n     elif t[i] == \"R\":\n         left = max(0, left-1)\n     elif t[i] == \"U\":\n         bot = max(0, bot-1)\n     elif t[i] == \"D\":\n         top = min(h, top+1)\n     \n     \n     if s[i] == \"L\":\n         left += 1\n     elif s[i] == \"R\":\n         right -= 1\n     elif s[i] == \"U\":\n         top -= 1\n     elif s[i] == \"D\":\n         bot += 1\n-    if left >= right or bot >= top:\n         print(\"NO\")\n         exit()\n \n \n if left <= sc <= right and bot <= sr <=top:\n     print(\"YES\")\n else:\n     print(\"NO\")\n```\n "
    },
    {
        "user_id": "u441320782",
        "problem_id": "p02922",
        "submission1_id": "s620128204",
        "crp_content": "\n A,B=map(int,input().split())\n count = 0\n total = 0\n if B==1:\n   print(0)\n else:\n   while True:\n     total += A\n     count += 1\n     if total>=B:\n       break\n-      total -= 1\n   print(count)\n",
        "origin_generated_text": "\n```\n A,B=map(int,input().split())\n count = 0\n total = 0\n if B==1:\n   print(0)\n else:\n   while True:\n     total += A\n     count += 1\n     if total>=B:\n       break\n-      total -= 1\n   print(count)\n```\n "
    },
    {
        "user_id": "u775681539",
        "problem_id": "p03752",
        "submission1_id": "s351186241",
        "crp_content": "\n from itertools import combinations\n INF = int(1e18)\n def main():\n     n, k = map(int, input().split())\n     a = [int(i) for i in input().split()]\n-    p = [i for i in range(1,n)]\n     \n     \n     ans = INF\n     for i in combinations(p, k-1):\n         s = set(i)\n         cost = 0\n         mx = a[0]\n         for j in range(1, n):\n             if j in s:\n                 if a[j] > mx:\n                     continue\n                 mx += 1\n                 cost += mx-a[j]\n             mx = max(mx, a[j])\n         ans = min(cost, ans)                \n     print(ans)\n main()\n",
        "origin_generated_text": "\n```\n from itertools import combinations\n INF = int(1e18)\n def main():\n     n, k = map(int, input().split())\n     a = [int(i) for i in input().split()]\n-    p = [i for i in range(1,n)]\n     \n     \n     ans = INF\n     for i in combinations(p, k-1):\n         s = set(i)\n         cost = 0\n         mx = a[0]\n         for j in range(1, n):\n             if j in s:\n                 if a[j] > mx:\n                     continue\n                 mx += 1\n                 cost += mx-a[j]\n             mx = max(mx, a[j])\n         ans = min(cost, ans)                \n     print(ans)\n main()\n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03952",
        "submission1_id": "s779071513",
        "crp_content": "\n N, x = [int(i) for i in input().split()]\n import sys\n \n if x == 1 or x == 2*N-1:\n     if N != 1:\n-        print(-1)\n         sys.exit()\n     else:\n         print(1)\n         sys.exit()\n \n smaller = True\n if x > N:\n     smaller = False\n     x = 2*N-x\n \n ans = list(range(2*N-1,N+x-1,-1))+list(range(1,N+x))\n if not smaller:\n     ans =[2*N - ans[i] for i in range(2*N-1)]\n \n print(*ans)\n",
        "origin_generated_text": "\n```\n N, x = [int(i) for i in input().split()]\n import sys\n \n if x == 1 or x == 2*N-1:\n     if N != 1:\n-        print(-1)\n         sys.exit()\n     else:\n         print(1)\n         sys.exit()\n \n smaller = True\n if x > N:\n     smaller = False\n     x = 2*N-x\n \n ans = list(range(2*N-1,N+x-1,-1))+list(range(1,N+x))\n if not smaller:\n     ans =[2*N - ans[i] for i in range(2*N-1)]\n \n print(*ans)\n```\n "
    },
    {
        "user_id": "u134019875",
        "problem_id": "p02854",
        "submission1_id": "s383072838",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n L = sum(a)\n l = 0\n i = 0\n-while l < L / 2:\n     l += a[i]\n     i += 1\n if i + 1 <= len(a):\n     ans = min(abs(sum(a[:i]) - sum(a[i:])), abs(sum(a[:i + 1]) - sum(a[i + 1:])))\n else:\n     ans = abs(sum(a[:i]) - sum(a[i:]))\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n L = sum(a)\n l = 0\n i = 0\n-while l < L / 2:\n     l += a[i]\n     i += 1\n if i + 1 <= len(a):\n     ans = min(abs(sum(a[:i]) - sum(a[i:])), abs(sum(a[:i + 1]) - sum(a[i + 1:])))\n else:\n     ans = abs(sum(a[:i]) - sum(a[i:]))\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u989306199",
        "problem_id": "p03568",
        "submission1_id": "s393761427",
        "crp_content": "\n n = int(input())\n A = list(map(int, input().split()))\n \n ans = 1\n for a in A:\n     if a == 1:\n         ans *= 2\n     else:\n-        ans *= 3\n \n odd = 1\n for a in A:\n     if a%2 == 0:\n         odd *= 2\n \n print(ans-odd)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n A = list(map(int, input().split()))\n \n ans = 1\n for a in A:\n     if a == 1:\n         ans *= 2\n     else:\n-        ans *= 3\n \n odd = 1\n for a in A:\n     if a%2 == 0:\n         odd *= 2\n \n print(ans-odd)\n \n```\n "
    },
    {
        "user_id": "u474514603",
        "problem_id": "p03023",
        "submission1_id": "s835586464",
        "crp_content": "\n \n \n \n from collections import defaultdict\n import sys\n import math\n from datetime import datetime\n \n def sol(n):\n     \n     \n     \n     \n     \n \n-    return (180 - (360 / n)) * n\n \n \n do_submit = True\n \n \n def input_parse(input_str):\n     lines = [x.strip() for x in input_str.split(\"\\n\") if x.strip()]\n     parsed_lines = [list(map(str, line.split())) for line in lines]\n     print(parsed_lines)\n     n = int(parsed_lines[0][0])\n     \n     \n     \n     return n\n \n \n if not do_submit:\n     n = input_parse()\n     print(sol(n))\n \n     n = input_parse()\n     print(sol(n))\n \n else:\n     \n     \n     \n     n = int(input().strip())\n     \n     print(sol(n))\n \n \n",
        "origin_generated_text": "\n```\n \n \n \n from collections import defaultdict\n import sys\n import math\n from datetime import datetime\n \n def sol(n):\n     \n     \n     \n     \n     \n \n-    return (180 - (360 / n)) * n\n \n \n do_submit = True\n \n \n def input_parse(input_str):\n     lines = [x.strip() for x in input_str.split(\"\\n\") if x.strip()]\n     parsed_lines = [list(map(str, line.split())) for line in lines]\n     print(parsed_lines)\n     n = int(parsed_lines[0][0])\n     \n     \n     \n     return n\n \n \n if not do_submit:\n     n = input_parse()\n     print(sol(n))\n \n     n = input_parse()\n     print(sol(n))\n \n else:\n     \n     \n     \n     n = int(input().strip())\n     \n     print(sol(n))\n \n \n```\n "
    },
    {
        "user_id": "u833416137",
        "problem_id": "p02742",
        "submission1_id": "s577535454",
        "crp_content": "\n h,w = (int(i) for i in input().split())\n \n q_h,m_h = divmod(h,2)\n \n if m_h == 0: \t\n \tprint(w * q_h)\n else:\n-\tq_w,q_w = divmod(w,2)\n-\tif q_w == 0:\n-\t\tprint(w * q_h + q_w)\n-\telse:\n-\t\tprint(w * q_h + q_w + 1)\n",
        "origin_generated_text": "\n```\n h,w = (int(i) for i in input().split())\n \n q_h,m_h = divmod(h,2)\n \n if m_h == 0: \t\n \tprint(w * q_h)\n else:\n-\tq_w,q_w = divmod(w,2)\n-\tif q_w == 0:\n-\t\tprint(w * q_h + q_w)\n-\telse:\n-\t\tprint(w * q_h + q_w + 1)\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03972",
        "submission1_id": "s305953044",
        "crp_content": "\n h, w = map(int, input().split())\n \n w_cost = [int(input()) for i in range(w)]\n h_cost = [int(input()) for i in range(h)]\n \n w_cost = sorted(w_cost, reverse = True)\n h_cost = sorted(h_cost, reverse = True)\n w_cnt = 0\n h_cnt = 0\n ans = 0\n \n while True:\n     if not w_cost:\n         ans += sum(h_cost)   \n         break\n     elif not h_cost:\n         ans += sum(w_cost)\n         break\n     elif w_cost[-1] < h_cost[-1]:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     else:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1\n         del h_cost[-1]\n         \n print(ans)\n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n \n w_cost = [int(input()) for i in range(w)]\n h_cost = [int(input()) for i in range(h)]\n \n w_cost = sorted(w_cost, reverse = True)\n h_cost = sorted(h_cost, reverse = True)\n w_cnt = 0\n h_cnt = 0\n ans = 0\n \n while True:\n     if not w_cost:\n         ans += sum(h_cost)   \n         break\n     elif not h_cost:\n         ans += sum(w_cost)\n         break\n     elif w_cost[-1] < h_cost[-1]:\n         ans += w_cost[-1] * (h+1-h_cnt)\n         w_cnt += 1\n         del w_cost[-1]\n     else:\n         ans += h_cost[-1] * (w+1-w_cnt)\n         h_cnt += 1\n         del h_cost[-1]\n         \n print(ans)\n```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p03416",
        "submission1_id": "s137413469",
        "crp_content": "\n A, B = map(int, input().split())\n count = 0\n \n for i in range(A, B+1):\n     i = str(i)\n-    if i[:2] == i[-2:]:\n         count += 1\n     \n print(count)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n count = 0\n \n for i in range(A, B+1):\n     i = str(i)\n-    if i[:2] == i[-2:]:\n         count += 1\n     \n print(count)\n```\n "
    },
    {
        "user_id": "u940279019",
        "problem_id": "p03264",
        "submission1_id": "s140894702",
        "crp_content": "\n K = int(input())\n if(K%2 == 0):\n-  print(int((K/2)**2))\n else:\n-  print(int((K/2)*(K/2+1)))\n",
        "origin_generated_text": "\n```\n K = int(input())\n if(K%2 == 0):\n-  print(int((K/2)**2))\n else:\n-  print(int((K/2)*(K/2+1)))\n```\n "
    },
    {
        "user_id": "u125269142",
        "problem_id": "p03102",
        "submission1_id": "s744002162",
        "crp_content": "\n n, m, c = map(int, input().split())\n b_lists = list(map(int, input().split()))\n a_lists = []\n for _ in range(n):\n     tmp = list(map(int, input().split()))\n     a_lists.append(tmp)\n \n cond = c\n ans = 0\n for i in a_lists:\n     for j in range(m):\n-        cond = c\n         cond += i[j]*b_lists[j]\n     if cond > 0:\n         ans += 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n n, m, c = map(int, input().split())\n b_lists = list(map(int, input().split()))\n a_lists = []\n for _ in range(n):\n     tmp = list(map(int, input().split()))\n     a_lists.append(tmp)\n \n cond = c\n ans = 0\n for i in a_lists:\n     for j in range(m):\n-        cond = c\n         cond += i[j]*b_lists[j]\n     if cond > 0:\n         ans += 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s757537734",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     u = SI()\n     t = SI()\n     s = u * 2\n     while len(s) < len(t):\n         s = s + u\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and i >= lent:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     u = SI()\n     t = SI()\n     s = u * 2\n     while len(s) < len(t):\n         s = s + u\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and i >= lent:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p02886",
        "submission1_id": "s464995952",
        "crp_content": "\n N = int(input())\n D = list(map(int, input().split()))\n \n sum_all = 0\n for i in range(N):\n-  for s in range(i, N):\n     sum_all += D[i] * D[s]\n     \n print(sum_all)\n",
        "origin_generated_text": "\n```\n N = int(input())\n D = list(map(int, input().split()))\n \n sum_all = 0\n for i in range(N):\n-  for s in range(i, N):\n     sum_all += D[i] * D[s]\n     \n print(sum_all)\n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03714",
        "submission1_id": "s179135610",
        "crp_content": "\n import heapq\n \n n=int(input())\n arr=list(map(int,input().split()))\n q1=[]\n tmp=0\n for val in arr[:n]:\n   heapq.heappush(q1,val)\n   tmp+=val\n sum1=[tmp]\n for val in arr[n:2*n]:\n   tmp=heapq.heappop(q1)\n   if val>tmp:\n     heapq.heappush(q1,val)\n     sum1.append(sum1[-1]+(val-tmp))\n   else:\n     heapq.heappush(q1,tmp)\n     sum1.append(sum1[-1])\n-print(sum1)\n q2=[]\n tmp=0\n for val in arr[2*n:]:\n   heapq.heappush(q2,-val)\n   tmp+=val\n sum2=[tmp]\n for val in arr[2*n-1:n-1:-1]:\n   tmp=-heapq.heappop(q2)\n   if val<tmp:\n     heapq.heappush(q2,-val)\n     sum2.append(sum2[-1]+(val-tmp))\n   else:\n     heapq.heappush(q2,-tmp)\n     sum2.append(sum2[-1])\n sum2=sum2[::-1]\n-print(sum2)\n ans=-10**18\n for i in range(n+1):\n   tmp=sum1[i]-sum2[i]\n   ans=max(ans,tmp)\n print(ans)\n",
        "origin_generated_text": "\n```\n import heapq\n \n n=int(input())\n arr=list(map(int,input().split()))\n q1=[]\n tmp=0\n for val in arr[:n]:\n   heapq.heappush(q1,val)\n   tmp+=val\n sum1=[tmp]\n for val in arr[n:2*n]:\n   tmp=heapq.heappop(q1)\n   if val>tmp:\n     heapq.heappush(q1,val)\n     sum1.append(sum1[-1]+(val-tmp))\n   else:\n     heapq.heappush(q1,tmp)\n     sum1.append(sum1[-1])\n-print(sum1)\n q2=[]\n tmp=0\n for val in arr[2*n:]:\n   heapq.heappush(q2,-val)\n   tmp+=val\n sum2=[tmp]\n for val in arr[2*n-1:n-1:-1]:\n   tmp=-heapq.heappop(q2)\n   if val<tmp:\n     heapq.heappush(q2,-val)\n     sum2.append(sum2[-1]+(val-tmp))\n   else:\n     heapq.heappush(q2,-tmp)\n     sum2.append(sum2[-1])\n sum2=sum2[::-1]\n-print(sum2)\n ans=-10**18\n for i in range(n+1):\n   tmp=sum1[i]-sum2[i]\n   ans=max(ans,tmp)\n print(ans)\n```\n "
    },
    {
        "user_id": "u309977459",
        "problem_id": "p03714",
        "submission1_id": "s069521748",
        "crp_content": "\n import heapq\n from collections import deque\n N = int(input())\n A = list(map(int, input().split()))\n \n al = A[:N]\n ar = [-a for a in A[2*N:]]\n ac = deque(A[N:2*N])\n heapq.heapify(al)\n heapq.heapify(ar)\n for i in range(N):\n     gl = ac[0] - al[0]\n     gr = -ar[0] - ac[-1]\n     if gl < 0 and gr < 0:\n         ac.pop()\n     elif gl > gr:\n         heapq.heappop(al)\n         tmp = ac.popleft()\n         heapq.heappush(al, tmp)\n     else:\n         heapq.heappop(ar)\n         tmp = ac.pop()\n         heapq.heappush(ar, -tmp)\n-print(sum(al)+sum(ar))\n \n",
        "origin_generated_text": "\n```\n import heapq\n from collections import deque\n N = int(input())\n A = list(map(int, input().split()))\n \n al = A[:N]\n ar = [-a for a in A[2*N:]]\n ac = deque(A[N:2*N])\n heapq.heapify(al)\n heapq.heapify(ar)\n for i in range(N):\n     gl = ac[0] - al[0]\n     gr = -ar[0] - ac[-1]\n     if gl < 0 and gr < 0:\n         ac.pop()\n     elif gl > gr:\n         heapq.heappop(al)\n         tmp = ac.popleft()\n         heapq.heappush(al, tmp)\n     else:\n         heapq.heappop(ar)\n         tmp = ac.pop()\n         heapq.heappush(ar, -tmp)\n-print(sum(al)+sum(ar))\n \n```\n "
    },
    {
        "user_id": "u136284779",
        "problem_id": "p02699",
        "submission1_id": "s214093185",
        "crp_content": "\n S,W=map(int,input().split())\n-if S<W:\n   print('unsafe')\n else:\n   print('safe')\n",
        "origin_generated_text": "\n```\n S,W=map(int,input().split())\n-if S<W:\n   print('unsafe')\n else:\n   print('safe')\n```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p03096",
        "submission1_id": "s505010763",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n INF = 10 ** 9\n MOD = 10 **9 + 7\n \n N = int(input())\n \n C = [int(input()) for _ in range(N)]\n lst = [INF] * (2 * 10 ** 5 + 10) \n ans = [1] * N\n  \n lst[C[-1]] = N - 1\n \n for i in range(N - 2, -1, -1):\n     c = C[i]\n     if lst[c] == INF or lst[c] == i + 1:\n         ans[i] = ans[i + 1]\n     else:\n         ans[i] = ans[i + 1] + ans[lst[c]]\n     lst[c] = i\n \n-print (ans)\n print (ans[0] % MOD)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n INF = 10 ** 9\n MOD = 10 **9 + 7\n \n N = int(input())\n \n C = [int(input()) for _ in range(N)]\n lst = [INF] * (2 * 10 ** 5 + 10) \n ans = [1] * N\n  \n lst[C[-1]] = N - 1\n \n for i in range(N - 2, -1, -1):\n     c = C[i]\n     if lst[c] == INF or lst[c] == i + 1:\n         ans[i] = ans[i + 1]\n     else:\n         ans[i] = ans[i + 1] + ans[lst[c]]\n     lst[c] = i\n \n-print (ans)\n print (ans[0] % MOD)\n```\n "
    },
    {
        "user_id": "u288087195",
        "problem_id": "p03943",
        "submission1_id": "s588860606",
        "crp_content": "\n a = [int(i) for i in input().split()] \n a.sort()\n-print(a[0])\n c = a[0] + a[1]\n if (a[2] == c):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n a = [int(i) for i in input().split()] \n a.sort()\n-print(a[0])\n c = a[0] + a[1]\n if (a[2] == c):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u969190727",
        "problem_id": "p02950",
        "submission1_id": "s243982871",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n p=int(input())\n A=[int(i) for i in input().split()]\n B=[0]*p\n \n P=[[0]*p for _ in range(p)]\n for i in range(1,p): \n   for j in range(p):\n     if j==0:\n       P[i][j]=i\n     else:\n       P[i][j]=(P[i][j-1]*i)%p\n PP=[0]*p\n for i in range(1,p):\n   for j in range(1,p):\n     PP[j]=(PP[j]+P[i][j])%p\n for i in range(p):\n   a=A[i]\n-  B[0]-=a\n   for j in range(1,p):\n     B[j]-=a*PP[j]\n     if j==p-1:\n       B[j]+=a\n B=B[::-1]\n for i in range(p):\n   B[i]%=p\n print(*B)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n p=int(input())\n A=[int(i) for i in input().split()]\n B=[0]*p\n \n P=[[0]*p for _ in range(p)]\n for i in range(1,p): \n   for j in range(p):\n     if j==0:\n       P[i][j]=i\n     else:\n       P[i][j]=(P[i][j-1]*i)%p\n PP=[0]*p\n for i in range(1,p):\n   for j in range(1,p):\n     PP[j]=(PP[j]+P[i][j])%p\n for i in range(p):\n   a=A[i]\n-  B[0]-=a\n   for j in range(1,p):\n     B[j]-=a*PP[j]\n     if j==p-1:\n       B[j]+=a\n B=B[::-1]\n for i in range(p):\n   B[i]%=p\n print(*B)\n```\n "
    },
    {
        "user_id": "u686036872",
        "problem_id": "p03103",
        "submission1_id": "s129916145",
        "crp_content": "\n N, M = map(int, input().split())\n \n A = []\n for i in range(N):\n     a, b = map(int, input().split())\n     A.append([a, b])\n \n A.sort(key=lambda x:x[0])\n \n money = 0\n-cnt = 0\n for i in range(N):\n     for j in range(A[i][1]):\n         money += A[i][0]\n-        if cnt == N:\n-            print(money)\n-            break\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n \n A = []\n for i in range(N):\n     a, b = map(int, input().split())\n     A.append([a, b])\n \n A.sort(key=lambda x:x[0])\n \n money = 0\n-cnt = 0\n for i in range(N):\n     for j in range(A[i][1]):\n         money += A[i][0]\n-        if cnt == N:\n-            print(money)\n-            break\n```\n "
    },
    {
        "user_id": "u567225946",
        "problem_id": "p02580",
        "submission1_id": "s441413219",
        "crp_content": "\n from collections import defaultdict\n n,m,k=map(int,input().split())\n points=set()\n row=defaultdict(int)\n col=defaultdict(int)\n for i in range(k):\n     a,b=map(int,input().split())\n     points.add((a,b))\n     row[a]+=1\n     col[b]+=1\n m1=max(row.values())\n m2=max(col.values())\n l1=[]\n l2=[]\n for i in row:\n     if row[i]==m1:\n         l1.append(i)\n for i in col:\n     if col[i]==m2:\n         l2.append(i)\n ans=m2+m1-1\n for i in l1:\n     for j in l2:\n         if (i,j) not in points:\n-            print(i,j)\n             ans+=1\n-            print(ans)\n             quit()\n print(ans)\n \n \n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n n,m,k=map(int,input().split())\n points=set()\n row=defaultdict(int)\n col=defaultdict(int)\n for i in range(k):\n     a,b=map(int,input().split())\n     points.add((a,b))\n     row[a]+=1\n     col[b]+=1\n m1=max(row.values())\n m2=max(col.values())\n l1=[]\n l2=[]\n for i in row:\n     if row[i]==m1:\n         l1.append(i)\n for i in col:\n     if col[i]==m2:\n         l2.append(i)\n ans=m2+m1-1\n for i in l1:\n     for j in l2:\n         if (i,j) not in points:\n-            print(i,j)\n             ans+=1\n-            print(ans)\n             quit()\n print(ans)\n \n \n \n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p02887",
        "submission1_id": "s585172341",
        "crp_content": "\n N=int(input())\n S=input()\n ct=0\n for i in range(N-1):\n-  if S[i]!=S[i+1]:\n     ct+=1\n print(ct)\n",
        "origin_generated_text": "\n```\n N=int(input())\n S=input()\n ct=0\n for i in range(N-1):\n-  if S[i]!=S[i+1]:\n     ct+=1\n print(ct)\n```\n "
    },
    {
        "user_id": "u430937688",
        "problem_id": "p03326",
        "submission1_id": "s776742151",
        "crp_content": "\n n, m = map(int, input().split())\n lis = [list(map(int, input().split())) for i in range(n)]\n \n def arr_multiply( lis2):\n     def inner(lis1):\n         return sum([l1*l2 for l1, l2 in zip(lis1, lis2)])\n     return inner\n \n if m == 0:\n     print(0)\n \n max_score = 0\n for a in (-1, 1):\n     for b in (-1, 1):\n         for c in (-1, 1):\n             func = arr_multiply([a, b, c])\n             score = sum(sorted(list(map(func, lis)))[-m:])\n             if score > max_score:\n                 max_score = score\n print(max_score)\n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n lis = [list(map(int, input().split())) for i in range(n)]\n \n def arr_multiply( lis2):\n     def inner(lis1):\n         return sum([l1*l2 for l1, l2 in zip(lis1, lis2)])\n     return inner\n \n if m == 0:\n     print(0)\n \n max_score = 0\n for a in (-1, 1):\n     for b in (-1, 1):\n         for c in (-1, 1):\n             func = arr_multiply([a, b, c])\n             score = sum(sorted(list(map(func, lis)))[-m:])\n             if score > max_score:\n                 max_score = score\n print(max_score)\n```\n "
    },
    {
        "user_id": "u759651152",
        "problem_id": "p03274",
        "submission1_id": "s955852285",
        "crp_content": "\n \n \n def main():\n     n, k = map(int, input().split())\n     x_list = list(map(int, input().split()))\n \n     ans = float('inf')\n \n     for i in range(n - k + 1):\n         if x_list[i] >= 0 and x_list[i+k-1] >= 0:\n             ans = min(ans, x_list[i+k-1])\n         elif x_list[i] < 0 and x_list[i+k-1] < 0:\n             ans = min(ans, -x_list[i])\n         else:\n-            ans = min(ans, -x_list[i] * 2 + x_list[i+k-1])\n     print(ans)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n \n \n def main():\n     n, k = map(int, input().split())\n     x_list = list(map(int, input().split()))\n \n     ans = float('inf')\n \n     for i in range(n - k + 1):\n         if x_list[i] >= 0 and x_list[i+k-1] >= 0:\n             ans = min(ans, x_list[i+k-1])\n         elif x_list[i] < 0 and x_list[i+k-1] < 0:\n             ans = min(ans, -x_list[i])\n         else:\n-            ans = min(ans, -x_list[i] * 2 + x_list[i+k-1])\n     print(ans)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03200",
        "submission1_id": "s326323555",
        "crp_content": "\n s=input()\n m=[s[i]==\"B\" for i in range(len(s))]\n m1=[None for i in range(len(s))]\n m1[0]=m[0]\n for i in range(1,len(s)):\n   m1[i]=m1[i-1]+m[i]\n m2=[None for i in range(len(s))]\n m2[len(s)-1]=m[len(s)-1]\n for i in range(len(s)-1,0,-1):\n   m2[i-1]=m2[i]+m[i]\n   \n ans1=0\n ans2=0\n for i in range(1,len(s)):\n-  if s[i]==\"W\":\n     ans1+=m1[i]\n     ans2+=m2[i]\n     \n print(max(ans1,ans2))\n",
        "origin_generated_text": "\n```\n s=input()\n m=[s[i]==\"B\" for i in range(len(s))]\n m1=[None for i in range(len(s))]\n m1[0]=m[0]\n for i in range(1,len(s)):\n   m1[i]=m1[i-1]+m[i]\n m2=[None for i in range(len(s))]\n m2[len(s)-1]=m[len(s)-1]\n for i in range(len(s)-1,0,-1):\n   m2[i-1]=m2[i]+m[i]\n   \n ans1=0\n ans2=0\n for i in range(1,len(s)):\n-  if s[i]==\"W\":\n     ans1+=m1[i]\n     ans2+=m2[i]\n     \n print(max(ans1,ans2))\n```\n "
    },
    {
        "user_id": "u814986259",
        "problem_id": "p03959",
        "submission1_id": "s457703246",
        "crp_content": "\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n M = [[-1, 10**9] for i in range(N)]\n \n for i in range(N):\n     if i == 0:\n         M[i][0] = T[i]\n     else:\n         if T[i] != T[i-1]:\n             M[i][0] = T[i]\n         else:\n             M[i][1] = T[i]\n \n for i in range(N-1, -1, -1):\n     if i == N-1:\n         if M[i][0] != -1 and M[i][0] != A[i]:\n             print(0)\n             exit(0)\n         else:\n             M[i][0] = A[i]\n \n     else:\n         if A[i] != A[i+1]:\n             if M[i][0] != -1 and M[i][0] != A[i]:\n                 print(0)\n                 exit(0)\n             else:\n                 M[i][0] = A[i]\n         else:\n             M[i][1] = min(M[i][1], A[i])\n-print(M)\n ans = 1\n mod = (10 ** 9) + 7\n for x, y in M:\n     if x == -1:\n         ans *= y\n         ans %= mod\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n M = [[-1, 10**9] for i in range(N)]\n \n for i in range(N):\n     if i == 0:\n         M[i][0] = T[i]\n     else:\n         if T[i] != T[i-1]:\n             M[i][0] = T[i]\n         else:\n             M[i][1] = T[i]\n \n for i in range(N-1, -1, -1):\n     if i == N-1:\n         if M[i][0] != -1 and M[i][0] != A[i]:\n             print(0)\n             exit(0)\n         else:\n             M[i][0] = A[i]\n \n     else:\n         if A[i] != A[i+1]:\n             if M[i][0] != -1 and M[i][0] != A[i]:\n                 print(0)\n                 exit(0)\n             else:\n                 M[i][0] = A[i]\n         else:\n             M[i][1] = min(M[i][1], A[i])\n-print(M)\n ans = 1\n mod = (10 ** 9) + 7\n for x, y in M:\n     if x == -1:\n         ans *= y\n         ans %= mod\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u007270338",
        "problem_id": "p02281",
        "submission1_id": "s939698139",
        "crp_content": "\n \n N = int(input())\n T = [None for i in range(N)]\n class Tree:\n     def __init__(self, ID,p=-1):\n         self.ID = ID\n \n     def makeTree(self, tree):\n         ID = tree.ID\n         if ID == -1:\n             return\n         else:\n             for i in range(N):\n                 if trees[i][0] == ID:\n                     [ID,l,r] = trees[i]\n                     tree.l = Tree(l)\n                     tree.r = Tree(r)\n                     treeL = tree.l\n                     treeR = tree.r\n                     treeL.p = tree\n                     treeR.p = tree\n \n                     self.makeTree(self,treeL)\n                     self.makeTree(self,treeR)\n \n def preParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global preList\n         preList.append(ID)\n         treeL = tree.l\n         treeR = tree.r\n         preParse(treeL)\n         preParse(treeR)\n         \n def inParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global inList\n         treeL = tree.l\n         treeR = tree.r\n         inParse(treeL)\n         inList.append(ID)\n         inParse(treeR)\n \n def posParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global posList\n         treeL = tree.l\n         treeR = tree.r\n         posParse(treeL)\n         posParse(treeR)\n         posList.append(ID)\n         \n     \n trees = [list(map(int,input().split())) for i in range(N)]\n ID = trees[0][0]\n tree = Tree(ID)\n Tree.makeTree(Tree,tree)\n \n preList = []\n inList = []\n posList = []\n preParse(tree)\n inParse(tree)\n posParse(tree)\n \n def convert(List, order):\n     a =  \" \" + \" \".join([str(num) for num in List])\n     print(\"{}\".format(order))\n     print(a)\n convert(preList, \"Preorder\")\n convert(inList, \"Inorder\")\n convert(posList, \"Postorder\")\n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n T = [None for i in range(N)]\n class Tree:\n     def __init__(self, ID,p=-1):\n         self.ID = ID\n \n     def makeTree(self, tree):\n         ID = tree.ID\n         if ID == -1:\n             return\n         else:\n             for i in range(N):\n                 if trees[i][0] == ID:\n                     [ID,l,r] = trees[i]\n                     tree.l = Tree(l)\n                     tree.r = Tree(r)\n                     treeL = tree.l\n                     treeR = tree.r\n                     treeL.p = tree\n                     treeR.p = tree\n \n                     self.makeTree(self,treeL)\n                     self.makeTree(self,treeR)\n \n def preParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global preList\n         preList.append(ID)\n         treeL = tree.l\n         treeR = tree.r\n         preParse(treeL)\n         preParse(treeR)\n         \n def inParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global inList\n         treeL = tree.l\n         treeR = tree.r\n         inParse(treeL)\n         inList.append(ID)\n         inParse(treeR)\n \n def posParse(tree):\n     ID = tree.ID\n     if ID == -1:\n         return\n     else:\n         global posList\n         treeL = tree.l\n         treeR = tree.r\n         posParse(treeL)\n         posParse(treeR)\n         posList.append(ID)\n         \n     \n trees = [list(map(int,input().split())) for i in range(N)]\n ID = trees[0][0]\n tree = Tree(ID)\n Tree.makeTree(Tree,tree)\n \n preList = []\n inList = []\n posList = []\n preParse(tree)\n inParse(tree)\n posParse(tree)\n \n def convert(List, order):\n     a =  \" \" + \" \".join([str(num) for num in List])\n     print(\"{}\".format(order))\n     print(a)\n convert(preList, \"Preorder\")\n convert(inList, \"Inorder\")\n convert(posList, \"Postorder\")\n \n```\n "
    },
    {
        "user_id": "u112317104",
        "problem_id": "p02922",
        "submission1_id": "s133553051",
        "crp_content": "\n def solve():\n     N, M = map(int, input().split())\n \n     c = 0\n     if M == 1:\n         return c\n \n     c += 1\n     if N >= M:\n         return c\n     \n     M -= N\n-    for i in range(2, 100):\n         if M - N <= 0:\n             return i\n         M -= (N-1)\n \n print(solve())\n",
        "origin_generated_text": "\n```\n def solve():\n     N, M = map(int, input().split())\n \n     c = 0\n     if M == 1:\n         return c\n \n     c += 1\n     if N >= M:\n         return c\n     \n     M -= N\n-    for i in range(2, 100):\n         if M - N <= 0:\n             return i\n         M -= (N-1)\n \n print(solve())\n```\n "
    },
    {
        "user_id": "u050708958",
        "problem_id": "p02917",
        "submission1_id": "s729619343",
        "crp_content": "\n n = int(input())\n a = [0] * n\n b = [int(i) for i in input().split()]\n ans = 0\n a[0] = b[0]\n a[1] = b[0]\n \n for i in range(2, n-1):\n-    a[i] = min(b[i], b[i-1])\n a += [b[-1]]\n print(sum(a))\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = [0] * n\n b = [int(i) for i in input().split()]\n ans = 0\n a[0] = b[0]\n a[1] = b[0]\n \n for i in range(2, n-1):\n-    a[i] = min(b[i], b[i-1])\n a += [b[-1]]\n print(sum(a))\n \n \n```\n "
    },
    {
        "user_id": "u450883456",
        "problem_id": "p03563",
        "submission1_id": "s325532931",
        "crp_content": "\n a = int(input())\n b = int(input())\n-print(2*a-b)\n",
        "origin_generated_text": "\n```\n a = int(input())\n b = int(input())\n-print(2*a-b)\n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s861255622",
        "crp_content": "\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 0\n right = W\n up = 0\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             down = min(H, down+1)\n         elif T[i] == \"D\":\n             up = max(0, up-1)\n         elif T[i] == \"L\":\n             right = min(W, right+1)\n         else:\n             left = max(0, left-1)\n     if S[i] == \"U\":\n         up += 1\n     elif S[i] == \"D\":\n         down -= 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n \n \n if left <= sr <= right and up <= sc <= down:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n",
        "origin_generated_text": "\n```\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 0\n right = W\n up = 0\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             down = min(H, down+1)\n         elif T[i] == \"D\":\n             up = max(0, up-1)\n         elif T[i] == \"L\":\n             right = min(W, right+1)\n         else:\n             left = max(0, left-1)\n     if S[i] == \"U\":\n         up += 1\n     elif S[i] == \"D\":\n         down -= 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n \n \n if left <= sr <= right and up <= sc <= down:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n```\n "
    },
    {
        "user_id": "u102223485",
        "problem_id": "p03760",
        "submission1_id": "s973338297",
        "crp_content": "\n \n O = input()\n E = input()\n \n for o, e in zip(O, E):\n-    print(o + e, end=\"\")\n",
        "origin_generated_text": "\n```\n \n O = input()\n E = input()\n \n for o, e in zip(O, E):\n-    print(o + e, end=\"\")\n```\n "
    },
    {
        "user_id": "u905715926",
        "problem_id": "p03633",
        "submission1_id": "s876093087",
        "crp_content": "\n def gcd(a,b):\n   r = a%b\n   while(r!=0):\n     a=b\n     b=r\n     r=a%b\n   return b\n def lcm(a,b):\n     return (a*b)/gcd(a,b)\n n = int(input())\n ans = int(input())\n for i in range(n-1):\n   num = int(input())\n-  ans = lcm(max(ans,num),min(ans,num))\n print(int(ans))\n \n",
        "origin_generated_text": "\n```\n def gcd(a,b):\n   r = a%b\n   while(r!=0):\n     a=b\n     b=r\n     r=a%b\n   return b\n def lcm(a,b):\n     return (a*b)/gcd(a,b)\n n = int(input())\n ans = int(input())\n for i in range(n-1):\n   num = int(input())\n-  ans = lcm(max(ans,num),min(ans,num))\n print(int(ans))\n \n```\n "
    },
    {
        "user_id": "u188745744",
        "problem_id": "p02922",
        "submission1_id": "s772451444",
        "crp_content": "\n import math\n A = list(map(int,input().split(\" \")))\n-B = math.ceil(A[1] / A[0])\n print(B)\n",
        "origin_generated_text": "\n```\n import math\n A = list(map(int,input().split(\" \")))\n-B = math.ceil(A[1] / A[0])\n print(B)\n```\n "
    },
    {
        "user_id": "u703886980",
        "problem_id": "p02699",
        "submission1_id": "s424643693",
        "crp_content": "\n a,b = map(int, input().split())\n \n-if a<b:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n",
        "origin_generated_text": "\n```\n a,b = map(int, input().split())\n \n-if a<b:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s129561496",
        "crp_content": "\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     for _ in range(int.bit_length(N - 1) + 1):\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while True:\n             u = bisect(Unreachs[a], b) - 1\n             if u == -1:\n                 break\n             ans += 2 ** u\n             a = Unreachs[a][u]\n         ans += 1\n         print(ans)\n     return 0\n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(10**7)\n INF = 10 ** 18\n MOD = 10 ** 9 + 7\n from functools import partial, reduce\n from operator import mul\n prod = partial(reduce, mul)\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def II(): return int(sys.stdin.readline())\n def SI(): return input()\n \n from bisect import bisect\n \n def main():\n     N = II()\n     X = LI()  \n     X.append(INF)  \n     L = II()  \n     Q = II()\n     AB = []  \n     for _ in range(Q):\n         AB.append(LI_())\n     Unreachs = [[] for _ in range(N)]\n     \n     for i, x in enumerate(X[:-1]):\n         u = bisect(X, x + L)\n         Unreachs[i].append(u)\n     \n     for _ in range(int.bit_length(N - 1) + 1):\n         for i in range(N):\n             u = Unreachs[Unreachs[i][-1] - 1][-1]\n             Unreachs[i].append(u)\n     \n     for a, b in AB:\n         if a > b:\n             a, b = b, a\n         ans = 0\n         while True:\n             u = bisect(Unreachs[a], b) - 1\n             if u == -1:\n                 break\n             ans += 2 ** u\n             a = Unreachs[a][u]\n         ans += 1\n         print(ans)\n     return 0\n \n main()\n```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03343",
        "submission1_id": "s149094671",
        "crp_content": "\n N, K, Q = map(int, input().split())\n A = list(map(int, input().split()))\n \n def find_maximum(y):\n   C = [[]]\n   for a in A:\n     if a < y and len(C[-1]) > 0:\n       C.append([])\n     else:\n       C[-1].append(a)\n   cand_x = []\n   for Ci in C:\n     m = len(Ci)\n     if m >= K:\n       Ci.sort()\n       cand_x += Ci[:m-K+1]\n   cand_x.sort()\n   if len(cand_x) >= Q and cand_x[0] == y:\n     return cand_x[Q-1]\n   else:\n     return float('inf')\n \n ans = float('inf')\n for a in A:\n   x = find_maximum(a)\n   ans = min(ans, x-a)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n N, K, Q = map(int, input().split())\n A = list(map(int, input().split()))\n \n def find_maximum(y):\n   C = [[]]\n   for a in A:\n     if a < y and len(C[-1]) > 0:\n       C.append([])\n     else:\n       C[-1].append(a)\n   cand_x = []\n   for Ci in C:\n     m = len(Ci)\n     if m >= K:\n       Ci.sort()\n       cand_x += Ci[:m-K+1]\n   cand_x.sort()\n   if len(cand_x) >= Q and cand_x[0] == y:\n     return cand_x[Q-1]\n   else:\n     return float('inf')\n \n ans = float('inf')\n for a in A:\n   x = find_maximum(a)\n   ans = min(ans, x-a)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u119983020",
        "problem_id": "p03080",
        "submission1_id": "s619346986",
        "crp_content": "\n s = input()\n if s.count(\"R\")>s.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n s = input()\n if s.count(\"R\")>s.count(\"B\"):\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u347502437",
        "problem_id": "p02553",
        "submission1_id": "s567041215",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n-print(max(a*c, b*d, a*d, b*d))\n \n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n-print(max(a*c, b*d, a*d, b*d))\n \n```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03970",
        "submission1_id": "s488628806",
        "crp_content": "\n a=input()\n b='CODEFESTIVAL2016'\n ans=0\n for i in range(16):\n-  ans+=(a[i]==b[i])\n print(ans)\n",
        "origin_generated_text": "\n```\n a=input()\n b='CODEFESTIVAL2016'\n ans=0\n for i in range(16):\n-  ans+=(a[i]==b[i])\n print(ans)\n```\n "
    },
    {
        "user_id": "u647999897",
        "problem_id": "p02854",
        "submission1_id": "s009497090",
        "crp_content": "\n def solve():\n     N = int(input())\n     A = list(map(int,input().split()))\n \n     sm = sum(A)\n     agg = 0\n     idx = 0\n     mid = sm / 2\n     shrink_cnt = 0\n     while agg < mid and idx < N-1:\n         shrink_cnt += A[idx] - 1\n         \n         agg += A[idx]\n         idx += 1\n     \n     shrink = (agg-mid) / 0.5\n     expand = (mid - (agg-A[idx]))/0.5\n \n     if shrink <= shrink_cnt:\n         ans = min(shrink, expand)\n     else:\n         ans = expand\n     \n     print(int(ans))\n \n if __name__ == '__main__':\n     solve()\n",
        "origin_generated_text": "\n```\n def solve():\n     N = int(input())\n     A = list(map(int,input().split()))\n \n     sm = sum(A)\n     agg = 0\n     idx = 0\n     mid = sm / 2\n     shrink_cnt = 0\n     while agg < mid and idx < N-1:\n         shrink_cnt += A[idx] - 1\n         \n         agg += A[idx]\n         idx += 1\n     \n     shrink = (agg-mid) / 0.5\n     expand = (mid - (agg-A[idx]))/0.5\n \n     if shrink <= shrink_cnt:\n         ans = min(shrink, expand)\n     else:\n         ans = expand\n     \n     print(int(ans))\n \n if __name__ == '__main__':\n     solve()\n```\n "
    },
    {
        "user_id": "u292810930",
        "problem_id": "p03054",
        "submission1_id": "s607883024",
        "crp_content": "\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n l = 0\n r = W+1\n u = 0\n d = H+1\n for s,t in zip(S[::-1],T[::-1]):\n     if s == 'L' and t != 'R':\n         l += 1\n     if s == 'R' and t != 'L':\n         r -= 1\n     if s == 'U' and t != 'D':\n         u += 1\n     if s == 'D' and t != 'U':\n         d -= 1\n     if l == r-1 or u == d-1:\n         break\n-if l < sc < r and u < sr < d:\n     print('YES')\n else:\n     print('NO')\n",
        "origin_generated_text": "\n```\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n l = 0\n r = W+1\n u = 0\n d = H+1\n for s,t in zip(S[::-1],T[::-1]):\n     if s == 'L' and t != 'R':\n         l += 1\n     if s == 'R' and t != 'L':\n         r -= 1\n     if s == 'U' and t != 'D':\n         u += 1\n     if s == 'D' and t != 'U':\n         d -= 1\n     if l == r-1 or u == d-1:\n         break\n-if l < sc < r and u < sr < d:\n     print('YES')\n else:\n     print('NO')\n```\n "
    },
    {
        "user_id": "u940061594",
        "problem_id": "p02727",
        "submission1_id": "s269300334",
        "crp_content": "\n \n X, Y, A, B, C = map(int,input().split())\n p0 = list(map(int,input().split()))\n q0 = list(map(int,input().split()))\n r0 = list(map(int,input().split()))\n p = sorted(p0, reverse = True); p.append(0)\n q = sorted(q0, reverse = True); q.append(0)\n r = sorted(r0, reverse = True); r.append(0)\n \n happy = 0\n i = 0\n j = 0\n k = 0\n red = 0\n green = 0\n white = 0\n \n for _ in range(X+Y):\n     if r[k] >= p[i] and r[k] >= q[j]:\n         happy += r[k]\n         white += 1\n         k += 1\n     elif p[i] > q[j]:\n         if red != X:\n             happy += p[i]\n             red += 1\n             i += 1\n         elif q[j] >= r[k] and green != Y:\n             happy += q[j]\n             green += 1\n             j += 1\n     elif p[i] <= q[j]:\n         if green != Y:\n             happy += q[j]\n             green += 1\n             j += 1\n         elif p[i] >= r[k] and red != X:\n             happy += p[i]\n             red += 1\n             i += 1\n             \n print(happy)\n",
        "origin_generated_text": "\n```\n \n X, Y, A, B, C = map(int,input().split())\n p0 = list(map(int,input().split()))\n q0 = list(map(int,input().split()))\n r0 = list(map(int,input().split()))\n p = sorted(p0, reverse = True); p.append(0)\n q = sorted(q0, reverse = True); q.append(0)\n r = sorted(r0, reverse = True); r.append(0)\n \n happy = 0\n i = 0\n j = 0\n k = 0\n red = 0\n green = 0\n white = 0\n \n for _ in range(X+Y):\n     if r[k] >= p[i] and r[k] >= q[j]:\n         happy += r[k]\n         white += 1\n         k += 1\n     elif p[i] > q[j]:\n         if red != X:\n             happy += p[i]\n             red += 1\n             i += 1\n         elif q[j] >= r[k] and green != Y:\n             happy += q[j]\n             green += 1\n             j += 1\n     elif p[i] <= q[j]:\n         if green != Y:\n             happy += q[j]\n             green += 1\n             j += 1\n         elif p[i] >= r[k] and red != X:\n             happy += p[i]\n             red += 1\n             i += 1\n             \n print(happy)\n```\n "
    },
    {
        "user_id": "u690536347",
        "problem_id": "p03374",
        "submission1_id": "s022630174",
        "crp_content": "\n n,c=map(int,input().split())\n l=[list(map(int,input().split())) for i in range(n)]\n \n rev=[None]*(n+1)\n norm=[None]*(n+1)\n rev[0]=(0,0)\n norm[0]=(0,0)\n ans=0\n \n \n for i in range(1,n+1):\n     x,v=l[i-1]\n     norm[i]=(x,v+norm[i-1][1])\n \n \n for i in range(1,n+1)[::-1]:\n     x,v=l[i-1]\n     if i==n:\n         rev[i]=(c-x,v)\n     else:\n         rev[i]=(c-x,v+rev[i+1][1])\n \n for i in range(n+1):\n     for j in range(n-i):\n-        cost=min(norm[i][0]+2*rev[-j][0],2*norm[i][0]+rev[-j][0])\n         ans=max(ans,rev[-j][1]+norm[i][1]-cost)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n n,c=map(int,input().split())\n l=[list(map(int,input().split())) for i in range(n)]\n \n rev=[None]*(n+1)\n norm=[None]*(n+1)\n rev[0]=(0,0)\n norm[0]=(0,0)\n ans=0\n \n \n for i in range(1,n+1):\n     x,v=l[i-1]\n     norm[i]=(x,v+norm[i-1][1])\n \n \n for i in range(1,n+1)[::-1]:\n     x,v=l[i-1]\n     if i==n:\n         rev[i]=(c-x,v)\n     else:\n         rev[i]=(c-x,v+rev[i+1][1])\n \n for i in range(n+1):\n     for j in range(n-i):\n-        cost=min(norm[i][0]+2*rev[-j][0],2*norm[i][0]+rev[-j][0])\n         ans=max(ans,rev[-j][1]+norm[i][1]-cost)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u174603263",
        "problem_id": "p03079",
        "submission1_id": "s408282187",
        "crp_content": "\n a, b, c = input().split()\n \n if(a+b > c and a+c > b and b+c > a):\n-    print('yes')\n else:\n-    print('no')\n \n",
        "origin_generated_text": "\n```\n a, b, c = input().split()\n \n if(a+b > c and a+c > b and b+c > a):\n-    print('yes')\n else:\n-    print('no')\n \n```\n "
    },
    {
        "user_id": "u445983356",
        "problem_id": "p02854",
        "submission1_id": "s631988534",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n \n-print(int(N/2))\n-\n left_length = sum(A[:int(N/2)])\n right_length = sum(A[int(N/2):])\n if left_length > right_length :\n   price = left_length - right_length\n   for i in range(int(N/2)-1,0,-1) :\n     var = sum(A[i:]) - sum(A[:i])\n     if price > var :\n       price = var\n     else :\n       break\n else :\n   price = right_length - left_length\n   for i in range(int(N/2)+1,N) :\n     var = sum(A[:i]) - sum(A[i:])\n     if price > var :\n       price = var\n     else :\n       break\n \n print(price)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n \n-print(int(N/2))\n-\n left_length = sum(A[:int(N/2)])\n right_length = sum(A[int(N/2):])\n if left_length > right_length :\n   price = left_length - right_length\n   for i in range(int(N/2)-1,0,-1) :\n     var = sum(A[i:]) - sum(A[:i])\n     if price > var :\n       price = var\n     else :\n       break\n else :\n   price = right_length - left_length\n   for i in range(int(N/2)+1,N) :\n     var = sum(A[:i]) - sum(A[i:])\n     if price > var :\n       price = var\n     else :\n       break\n \n print(price)\n```\n "
    },
    {
        "user_id": "u540761833",
        "problem_id": "p02959",
        "submission1_id": "s507936785",
        "crp_content": "\n N = int(input())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n dp = [0 for i in range(N+1)]\n if A[0] <= B[0]:\n     dp[0] = A[0]\n     B[0] -= A[0]\n else:\n     dp[0] = B[0]\n     B[0] = 0\n \n \n \n for i in range(1,N):\n-    if A[i] - B[i-1] >= B[i]:\n         dp[i] = B[i-1] + B[i]\n         B[i] = 0\n     else:\n         dp[i] = A[i]\n         B[i] -= A[i] - B[i-1]\n if A[-1] <= B[-1]:\n     dp[-1] = A[-1]\n     B[-1] -= A[-1]\n else:\n     dp[-1] = B[-1]\n     B[-1] = 0\n print(sum(dp))\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n dp = [0 for i in range(N+1)]\n if A[0] <= B[0]:\n     dp[0] = A[0]\n     B[0] -= A[0]\n else:\n     dp[0] = B[0]\n     B[0] = 0\n \n \n \n for i in range(1,N):\n-    if A[i] - B[i-1] >= B[i]:\n         dp[i] = B[i-1] + B[i]\n         B[i] = 0\n     else:\n         dp[i] = A[i]\n         B[i] -= A[i] - B[i-1]\n if A[-1] <= B[-1]:\n     dp[-1] = A[-1]\n     B[-1] -= A[-1]\n else:\n     dp[-1] = B[-1]\n     B[-1] = 0\n print(sum(dp))\n```\n "
    },
    {
        "user_id": "u533885955",
        "problem_id": "p03734",
        "submission1_id": "s834786551",
        "crp_content": "\n \n N,W = map(int,input().split())\n WV = [list(map(int,input().split())) for i in range(N)]\n \n \n w1 = WV[0][0]\n WV.sort()\n \n vlist = [[] for i in range(4)]\n for i in range(N):\n     w,v = WV[i][0],WV[i][1]\n     d = w-w1\n     vlist[d].append(v)\n     \n vrui = [[0] for i in range(4)]\n for i in range(4):\n     vlist[i].sort(reverse=True)\n     for v in vlist[i]:\n         vrui[i].append(vrui[i][-1]+v)\n         \n \n \n MAX = 0\n for i in range(min(N+1,len(vlist[0])+1)):\n     for j in range(min(N-i+1,len(vlist[1])+1)):\n         for k in range(min(N-i-j+1,len(vlist[2])+1)):\n-            l = min(N-(i+j+k),len(vlist[3]))\n             \n             \n             if (w1*i+(w1+1)*j+(w1+2)*k+(w1+3)*l) <= W:\n                 MAX = max(MAX,(vrui[0][i]+vrui[1][j]+vrui[2][k]+vrui[3][l]))\n \n print(MAX)\n             \n",
        "origin_generated_text": "\n```\n \n N,W = map(int,input().split())\n WV = [list(map(int,input().split())) for i in range(N)]\n \n \n w1 = WV[0][0]\n WV.sort()\n \n vlist = [[] for i in range(4)]\n for i in range(N):\n     w,v = WV[i][0],WV[i][1]\n     d = w-w1\n     vlist[d].append(v)\n     \n vrui = [[0] for i in range(4)]\n for i in range(4):\n     vlist[i].sort(reverse=True)\n     for v in vlist[i]:\n         vrui[i].append(vrui[i][-1]+v)\n         \n \n \n MAX = 0\n for i in range(min(N+1,len(vlist[0])+1)):\n     for j in range(min(N-i+1,len(vlist[1])+1)):\n         for k in range(min(N-i-j+1,len(vlist[2])+1)):\n-            l = min(N-(i+j+k),len(vlist[3]))\n             \n             \n             if (w1*i+(w1+1)*j+(w1+2)*k+(w1+3)*l) <= W:\n                 MAX = max(MAX,(vrui[0][i]+vrui[1][j]+vrui[2][k]+vrui[3][l]))\n \n print(MAX)\n             \n```\n "
    },
    {
        "user_id": "u492049124",
        "problem_id": "p03475",
        "submission1_id": "s377065541",
        "crp_content": "\n N = int(input())\n lines = []\n \n for i in range(N-1):\n     lines.append(input())\n \n C = []\n S = []\n F = []\n \n for line in lines:\n \tc, s, f = line.split()\n \tC.append(int(c))\n \tS.append(int(s))\n \tF.append(int(f))\n \n A = []\n \n for i in range(N-1):\n \ta = C[i] + S[i]\n-\tfor j in range(i + 1, N - 1):\n-\t\t\n-\t\tn = S[j] - a if a <= S[j] else a % F[j]\n-\t\ta = a + C[j] + n\n-\tA.append(a)\n \n for a in A:\n \tprint(a)\n print(0)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n lines = []\n \n for i in range(N-1):\n     lines.append(input())\n \n C = []\n S = []\n F = []\n \n for line in lines:\n \tc, s, f = line.split()\n \tC.append(int(c))\n \tS.append(int(s))\n \tF.append(int(f))\n \n A = []\n \n for i in range(N-1):\n \ta = C[i] + S[i]\n-\tfor j in range(i + 1, N - 1):\n-\t\t\n-\t\tn = S[j] - a if a <= S[j] else a % F[j]\n-\t\ta = a + C[j] + n\n-\tA.append(a)\n \n for a in A:\n \tprint(a)\n print(0)\n \n```\n "
    },
    {
        "user_id": "u663710122",
        "problem_id": "p02886",
        "submission1_id": "s679041750",
        "crp_content": "\n N = int(input())\n D = list(map(int, input().split()))\n \n ret = 0\n \n for i in range(N):\n     for j in range(N):\n-        if i == j:\n-            continue\n-        \n-        ret += D[i] * D[j]\n         \n print(ret)\n",
        "origin_generated_text": "\n```\n N = int(input())\n D = list(map(int, input().split()))\n \n ret = 0\n \n for i in range(N):\n     for j in range(N):\n-        if i == j:\n-            continue\n-        \n-        ret += D[i] * D[j]\n         \n print(ret)\n```\n "
    },
    {
        "user_id": "u536325690",
        "problem_id": "p03103",
        "submission1_id": "s378176943",
        "crp_content": "\n N, M = map(int, input().split())\n AB = []\n for i in range(N):\n     a, b = map(int, input().split())\n     AB.append([a,b])\n \n sortedAB = sorted(AB, key=lambda x:x[0])\n \n ans = 0\n for i in range(N):\n     a = sortedAB[i][0]\n     b = sortedAB[i][1]\n     if M == 0:\n         print(ans)\n         exit()\n     if b <= M:\n         M -= b\n         ans += a*b\n     else:\n         ans += a*M\n \n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n AB = []\n for i in range(N):\n     a, b = map(int, input().split())\n     AB.append([a,b])\n \n sortedAB = sorted(AB, key=lambda x:x[0])\n \n ans = 0\n for i in range(N):\n     a = sortedAB[i][0]\n     b = sortedAB[i][1]\n     if M == 0:\n         print(ans)\n         exit()\n     if b <= M:\n         M -= b\n         ans += a*b\n     else:\n         ans += a*M\n \n```\n "
    },
    {
        "user_id": "u975719989",
        "problem_id": "p03036",
        "submission1_id": "s611076664",
        "crp_content": "\n r, D, x = map(int,input().split())\n-for i in range(0,D):\n     x = r*x-D\n     print(x)\n",
        "origin_generated_text": "\n```\n r, D, x = map(int,input().split())\n-for i in range(0,D):\n     x = r*x-D\n     print(x)\n```\n "
    },
    {
        "user_id": "u941884460",
        "problem_id": "p03475",
        "submission1_id": "s470874498",
        "crp_content": "\n N = int(input())-1\n timeLine = [[0 for x in range(3)] for y in range(N)]\n for i in range(N):\n     tmp = input().split()\n     timeLine[i][0],timeLine[i][1],timeLine[i][2] = int(tmp[0]),int(tmp[1]),int(tmp[2])\n for j in range(N):\n     total = timeLine[j][0] + timeLine[j][1]\n     now = j+1\n     while now <= (N-1):\n         if timeLine[now][1] >= total:\n             total = timeLine[now][1] + timeLine[now][0]\n         else:\n             wait = int((total - timeLine[now][1]) % timeLine[now][2])\n             total += (wait + timeLine[now][0])\n         now +=1\n     print(total)\n-print(0)\n",
        "origin_generated_text": "\n```\n N = int(input())-1\n timeLine = [[0 for x in range(3)] for y in range(N)]\n for i in range(N):\n     tmp = input().split()\n     timeLine[i][0],timeLine[i][1],timeLine[i][2] = int(tmp[0]),int(tmp[1]),int(tmp[2])\n for j in range(N):\n     total = timeLine[j][0] + timeLine[j][1]\n     now = j+1\n     while now <= (N-1):\n         if timeLine[now][1] >= total:\n             total = timeLine[now][1] + timeLine[now][0]\n         else:\n             wait = int((total - timeLine[now][1]) % timeLine[now][2])\n             total += (wait + timeLine[now][0])\n         now +=1\n     print(total)\n-print(0)\n```\n "
    },
    {
        "user_id": "u086138398",
        "problem_id": "p02665",
        "submission1_id": "s087686149",
        "crp_content": "\n N = int(input())\n \n A = list(map(int,input().split()))\n \n B = [0] * (N+1)\n B[0] = 1 - A[0]\n for i in range(0,N):\n     if 2*B[i] < A[i+1]:\n         print(\"-1\")\n         exit()\n-    B_max = sum(A[i+2:])\n     B[i+1] = min(2*B[i]-1,B_max)\n if B[-1] != 0:\n     print(\"-1\")\n else:\n     print(sum(A)+sum(B))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n A = list(map(int,input().split()))\n \n B = [0] * (N+1)\n B[0] = 1 - A[0]\n for i in range(0,N):\n     if 2*B[i] < A[i+1]:\n         print(\"-1\")\n         exit()\n-    B_max = sum(A[i+2:])\n     B[i+1] = min(2*B[i]-1,B_max)\n if B[-1] != 0:\n     print(\"-1\")\n else:\n     print(sum(A)+sum(B))\n \n```\n "
    },
    {
        "user_id": "u506910932",
        "problem_id": "p02660",
        "submission1_id": "s419625362",
        "crp_content": "\n import math\n \n \n \n def is_prime(n):\n     if n == 1:\n         return 0\n \n     for k in range(2, int(math.sqrt(n)) + 1):\n         if n % k == 0:\n             if k not in check:\n                 check[k] = 0\n                 return n / k\n             else:\n                 continue\n     if n in check:\n         return 0\n     else:\n         return 1\n \n \n check = {}\n n = int(input())\n if n == 1:\n     print(0)\n else:\n     ans = 0\n     while (1):\n         n = is_prime(n)\n         if n == 0:\n             break\n         else:\n             ans += 1\n     print(ans)\n \n",
        "origin_generated_text": "\n```\n import math\n \n \n \n def is_prime(n):\n     if n == 1:\n         return 0\n \n     for k in range(2, int(math.sqrt(n)) + 1):\n         if n % k == 0:\n             if k not in check:\n                 check[k] = 0\n                 return n / k\n             else:\n                 continue\n     if n in check:\n         return 0\n     else:\n         return 1\n \n \n check = {}\n n = int(input())\n if n == 1:\n     print(0)\n else:\n     ans = 0\n     while (1):\n         n = is_prime(n)\n         if n == 0:\n             break\n         else:\n             ans += 1\n     print(ans)\n \n```\n "
    },
    {
        "user_id": "u185966380",
        "problem_id": "p03036",
        "submission1_id": "s430597677",
        "crp_content": "\n r, D, x = map(int, input().split())\n-def mo(r, D, x, i):\n-  out = rx - D\n-  print(int(out))\n-  if i<9:\n-  \treturn mo(r, D, out, i+1)\n   else:\n-    return 0\n-  \n-  mo(r, D, x, 0)\n",
        "origin_generated_text": "\n```\n r, D, x = map(int, input().split())\n-def mo(r, D, x, i):\n-  out = rx - D\n-  print(int(out))\n-  if i<9:\n-  \treturn mo(r, D, out, i+1)\n   else:\n-    return 0\n-  \n-  mo(r, D, x, 0)\n```\n "
    },
    {
        "user_id": "u088552457",
        "problem_id": "p02767",
        "submission1_id": "s524814910",
        "crp_content": "\n n = int(input())\n x = list(map(int, input().split()))\n \n max_x = max(x)\n min_x = min(x)\n \n ans = []\n-for i in range(1, 101):\n   a = 0\n   for xi in x:\n-    a += (xi - (i+1))*(xi - (i+1))\n   ans.append(a)\n   \n print(min(ans))\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int, input().split()))\n \n max_x = max(x)\n min_x = min(x)\n \n ans = []\n-for i in range(1, 101):\n   a = 0\n   for xi in x:\n-    a += (xi - (i+1))*(xi - (i+1))\n   ans.append(a)\n   \n print(min(ans))\n```\n "
    },
    {
        "user_id": "u121921603",
        "problem_id": "p03318",
        "submission1_id": "s361261858",
        "crp_content": "\n m=float(\"INF\")\n sunukes=[]\n for i in range(15,-1,-1):\n     for j in range(100,10,-1):\n         \n         sunuke=j*(10**i)-1\n         s=str(sunuke)\n         sn=0\n         for k in range(len(s)):\n             sn+=int(s[k])\n         x=sunuke/sn\n         \n         if x<=m :\n             m=x\n             sunukes.append(sunuke)\n for i in range(9,0,-1):\n     sunukes.append(i)\n k=int(input())\n \n-print(sunukes[-k])\n \n",
        "origin_generated_text": "\n```\n m=float(\"INF\")\n sunukes=[]\n for i in range(15,-1,-1):\n     for j in range(100,10,-1):\n         \n         sunuke=j*(10**i)-1\n         s=str(sunuke)\n         sn=0\n         for k in range(len(s)):\n             sn+=int(s[k])\n         x=sunuke/sn\n         \n         if x<=m :\n             m=x\n             sunukes.append(sunuke)\n for i in range(9,0,-1):\n     sunukes.append(i)\n k=int(input())\n \n-print(sunukes[-k])\n \n```\n "
    },
    {
        "user_id": "u995109095",
        "problem_id": "p02553",
        "submission1_id": "s614804602",
        "crp_content": "\n import sys\n import collections as cc\n import math as mt\n I=lambda:list(map(int,input().split()))\n a,b,c,d=I()\n-print(max(a*c,a*d,b*d,b*d))\n",
        "origin_generated_text": "\n```\n import sys\n import collections as cc\n import math as mt\n I=lambda:list(map(int,input().split()))\n a,b,c,d=I()\n-print(max(a*c,a*d,b*d,b*d))\n```\n "
    },
    {
        "user_id": "u776189585",
        "problem_id": "p03568",
        "submission1_id": "s188085057",
        "crp_content": "\n def get_result(A):\n     res = 1\n     total = 1\n     for i, ai in enumerate(A):\n         res *= 2 if ai % 2 == 0 else 1\n-        total *= 3 if ai > 1 else 2\n     return total - res\n n = input()\n A = [int(ai) for ai in input().split()]\n print(get_result(A))\n",
        "origin_generated_text": "\n```\n def get_result(A):\n     res = 1\n     total = 1\n     for i, ai in enumerate(A):\n         res *= 2 if ai % 2 == 0 else 1\n-        total *= 3 if ai > 1 else 2\n     return total - res\n n = input()\n A = [int(ai) for ai in input().split()]\n print(get_result(A))\n```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p02556",
        "submission1_id": "s005619017",
        "crp_content": "\n n=int(input())\n \n x=[]\n y=[]\n for _ in range(n):\n     xx,yy=map(int,input().split())\n     x.append(xx)\n     y.append(yy)\n \n def maxAbsValExpr(arr1, arr2):\n     minX, maxX = min(arr1), max(arr1)\n     minY, maxY = min(arr2), max(arr2)\n     \n     ans = 0\n     \n     for point in [(minX, minY), (maxX, minY), (minX, maxY), (maxX, maxY)]:\n         minD = float('inf')\n         maxD = float('-inf')\n         for i in range(0, len(arr1)):\n-            distance = abs(arr1[i]-point[0]) + abs(arr2[i]-point[1]) + i\n             minD = min(minD, distance)\n             maxD = max(maxD, distance)\n             ans = max(ans, maxD - minD)\n     return ans\n \n \n print(maxAbsValExpr(x, y)-1)\n \n \n",
        "origin_generated_text": "\n```\n n=int(input())\n \n x=[]\n y=[]\n for _ in range(n):\n     xx,yy=map(int,input().split())\n     x.append(xx)\n     y.append(yy)\n \n def maxAbsValExpr(arr1, arr2):\n     minX, maxX = min(arr1), max(arr1)\n     minY, maxY = min(arr2), max(arr2)\n     \n     ans = 0\n     \n     for point in [(minX, minY), (maxX, minY), (minX, maxY), (maxX, maxY)]:\n         minD = float('inf')\n         maxD = float('-inf')\n         for i in range(0, len(arr1)):\n-            distance = abs(arr1[i]-point[0]) + abs(arr2[i]-point[1]) + i\n             minD = min(minD, distance)\n             maxD = max(maxD, distance)\n             ans = max(ans, maxD - minD)\n     return ans\n \n \n print(maxAbsValExpr(x, y)-1)\n \n \n```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p03959",
        "submission1_id": "s732888358",
        "crp_content": "\n n = int(input())\n arr = [[1] * n for _ in range(4)]\n t = list(map(int, input().split()))\n a = list(map(int, input().split()))[::-1]\n \n MOD = 10**9 + 7\n \n max_t = 0\n max_a = 0\n \n for i in range(n):\n     if max_t < t[i]:\n         arr[0][i] = t[i]\n         arr[1][i] = t[i]\n         max_t = t[i]\n     else:\n         arr[1][i] = t[i]\n     if max_a < a[i]:\n         arr[2][i] = a[i]\n         arr[3][i] = a[i]\n         max_a = a[i]\n     else:\n         arr[3][i] = a[i]\n \n arr[2] = arr[2][::-1]\n arr[3] = arr[3][::-1]\n \n ans = 1\n for i in range(n):\n-    ans *= (min(arr[1][i], arr[3][i]) - max(arr[0][i], arr[2][i]) + 1)\n     ans %= MOD\n \n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n arr = [[1] * n for _ in range(4)]\n t = list(map(int, input().split()))\n a = list(map(int, input().split()))[::-1]\n \n MOD = 10**9 + 7\n \n max_t = 0\n max_a = 0\n \n for i in range(n):\n     if max_t < t[i]:\n         arr[0][i] = t[i]\n         arr[1][i] = t[i]\n         max_t = t[i]\n     else:\n         arr[1][i] = t[i]\n     if max_a < a[i]:\n         arr[2][i] = a[i]\n         arr[3][i] = a[i]\n         max_a = a[i]\n     else:\n         arr[3][i] = a[i]\n \n arr[2] = arr[2][::-1]\n arr[3] = arr[3][::-1]\n \n ans = 1\n for i in range(n):\n-    ans *= (min(arr[1][i], arr[3][i]) - max(arr[0][i], arr[2][i]) + 1)\n     ans %= MOD\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u835482198",
        "problem_id": "p03675",
        "submission1_id": "s736316789",
        "crp_content": "\n N = int(input())\n s = input().split()\n \n \n \n \n \n \n \n \n ans = []\n if N % 2 == 1:\n     for ss in s[::-1][0::2]:\n         ans.append(ss[::-1])\n     for ss in s[1::2]:\n         ans.append(ss)\n else:\n     for ss in s[::-1][0::2]:\n         ans.append(ss[::-1])\n     for ss in s[0::2]:\n         ans.append(ss)\n print(\" \".join(ans))\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n s = input().split()\n \n \n \n \n \n \n \n \n ans = []\n if N % 2 == 1:\n     for ss in s[::-1][0::2]:\n         ans.append(ss[::-1])\n     for ss in s[1::2]:\n         ans.append(ss)\n else:\n     for ss in s[::-1][0::2]:\n         ans.append(ss[::-1])\n     for ss in s[0::2]:\n         ans.append(ss)\n print(\" \".join(ans))\n \n```\n "
    },
    {
        "user_id": "u726615467",
        "problem_id": "p03200",
        "submission1_id": "s621442079",
        "crp_content": "\n \n S = input()\n \n ans = 0\n state = 0\n marker = 0\n for i, Si in enumerate(S):\n     \n     if state < 1 and Si == 'B':\n         state += 1\n     elif state > 0 and Si == 'W':\n         ans += i - marker\n         marker += 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n \n S = input()\n \n ans = 0\n state = 0\n marker = 0\n for i, Si in enumerate(S):\n     \n     if state < 1 and Si == 'B':\n         state += 1\n     elif state > 0 and Si == 'W':\n         ans += i - marker\n         marker += 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u309141201",
        "problem_id": "p03023",
        "submission1_id": "s189175464",
        "crp_content": "\n n = int(input())\n-print(90*n)\n",
        "origin_generated_text": "\n```\n n = int(input())\n-print(90*n)\n```\n "
    },
    {
        "user_id": "u664228906",
        "problem_id": "p02407",
        "submission1_id": "s192578819",
        "crp_content": "\n N = int(input())\n Arr = list(map(int, input().split()))\n for i in range(N):\n- if i==N-1:\n-  print(Arr[0])\n  else:\n   print(str(Arr[N-1-i]) + \" \")\n",
        "origin_generated_text": "\n```\n N = int(input())\n Arr = list(map(int, input().split()))\n for i in range(N):\n- if i==N-1:\n-  print(Arr[0])\n  else:\n   print(str(Arr[N-1-i]) + \" \")\n```\n "
    },
    {
        "user_id": "u482157295",
        "problem_id": "p03303",
        "submission1_id": "s573039788",
        "crp_content": "\n s = input()\n n = int(input())\n-print(s[0::3])\n",
        "origin_generated_text": "\n```\n s = input()\n n = int(input())\n-print(s[0::3])\n```\n "
    },
    {
        "user_id": "u785205215",
        "problem_id": "p03568",
        "submission1_id": "s831671657",
        "crp_content": "\n from sys import stdin\n def readLine_int_list():return list(map(int, stdin.readline().split()))\n \n n = int(input())\n a = readLine_int_list()\n even = [i for i in a if i%2 == 0]\n e = len(even)\n one = a.count(1)\n \n \n if e == 0:\n     if n == 1:\n         print(2-one)\n     else:\n         print(n**3 - 1 - one)\n else:\n-    print(3**n - (2**e) - one)\n",
        "origin_generated_text": "\n```\n from sys import stdin\n def readLine_int_list():return list(map(int, stdin.readline().split()))\n \n n = int(input())\n a = readLine_int_list()\n even = [i for i in a if i%2 == 0]\n e = len(even)\n one = a.count(1)\n \n \n if e == 0:\n     if n == 1:\n         print(2-one)\n     else:\n         print(n**3 - 1 - one)\n else:\n-    print(3**n - (2**e) - one)\n```\n "
    },
    {
        "user_id": "u607074939",
        "problem_id": "p02730",
        "submission1_id": "s896817388",
        "crp_content": "\n s = list(str(input()))\n n = len(s)\n N = int((n-1)/2)\n M = int((n+3)/2)\n l = []\n m = []\n for i in range(N):\n     l.append(s[i])\n-for i in range (M-2,N-1):\n     m.append(s[i])\n a = ''.join(l)\n b = ''.join(m)\n l.reverse()\n m.reverse()\n A = ''.join(l)\n B = ''.join(m)\n if (a==A and b==B):\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n s = list(str(input()))\n n = len(s)\n N = int((n-1)/2)\n M = int((n+3)/2)\n l = []\n m = []\n for i in range(N):\n     l.append(s[i])\n-for i in range (M-2,N-1):\n     m.append(s[i])\n a = ''.join(l)\n b = ''.join(m)\n l.reverse()\n m.reverse()\n A = ''.join(l)\n B = ''.join(m)\n if (a==A and b==B):\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u919730120",
        "problem_id": "p03343",
        "submission1_id": "s712530371",
        "crp_content": "\n n,k,q=list(map(int,input().split()))\n a=list(map(int,input().split()))\n sorta=sorted(a)\n ans=10**9\n for i in sorta:\n     A=[]\n     l=[]\n     flg=1\n     for j in a:\n       if i>j:\n         flg*=-1\n       if flg==1:\n         l.append(j)\n       if flg==-1:\n         flg=1\n         if len(l)<k:\n           l=[]\n           continue\n         else:\n           l.sort()\n           A=A+l[:len(l)-k+1]\n     if l:\n       l.sort()\n       A=A+l[:len(l)-k+1]\n     if len(A)<q:\n       continue\n     else:\n       A.sort()\n       ans=min(ans,A[q-1]-A[0])\n print(ans)\n",
        "origin_generated_text": "\n```\n n,k,q=list(map(int,input().split()))\n a=list(map(int,input().split()))\n sorta=sorted(a)\n ans=10**9\n for i in sorta:\n     A=[]\n     l=[]\n     flg=1\n     for j in a:\n       if i>j:\n         flg*=-1\n       if flg==1:\n         l.append(j)\n       if flg==-1:\n         flg=1\n         if len(l)<k:\n           l=[]\n           continue\n         else:\n           l.sort()\n           A=A+l[:len(l)-k+1]\n     if l:\n       l.sort()\n       A=A+l[:len(l)-k+1]\n     if len(A)<q:\n       continue\n     else:\n       A.sort()\n       ans=min(ans,A[q-1]-A[0])\n print(ans)\n```\n "
    },
    {
        "user_id": "u385826034",
        "problem_id": "p02699",
        "submission1_id": "s966688665",
        "crp_content": "\n a, b = map(int, input().split())\n-if b  > a:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n-if b  > a:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u969080040",
        "problem_id": "p02699",
        "submission1_id": "s967271834",
        "crp_content": "\n-s,w=input().split()\n-if s<=w:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n-s,w=input().split()\n-if s<=w:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p03480",
        "submission1_id": "s686474925",
        "crp_content": "\n-s=input();n=len(s);print(min([max(i,n-i)for i in range(1,n)if s[i-1]!=s[i]]or[0]))\n",
        "origin_generated_text": "\n```\n-s=input();n=len(s);print(min([max(i,n-i)for i in range(1,n)if s[i-1]!=s[i]]or[0]))\n```\n "
    },
    {
        "user_id": "u543954314",
        "problem_id": "p03264",
        "submission1_id": "s658246064",
        "crp_content": "\n k = int(input())\n if k % 2 == 0:\n-  print(k**2/4)\n else:\n-  print((k+1)*(k-1)/4)\n",
        "origin_generated_text": "\n```\n k = int(input())\n if k % 2 == 0:\n-  print(k**2/4)\n else:\n-  print((k+1)*(k-1)/4)\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s369726960",
        "crp_content": "\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n dp = {}\n \n dp[(0, 0, 0)] = 1\n \n def perm(i, j, k):\n   if (i, j, k) in dp:\n     return dp[(i, j, k)]\n   \n   if i < 0 or j < 0 or k < 0:\n     return 0\n   \n-  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n-                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n-                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n   return dp[(i, j, k)]\n \n print(perm(n, 0, k))\n```\n "
    },
    {
        "user_id": "u252729807",
        "problem_id": "p03200",
        "submission1_id": "s476729753",
        "crp_content": "\n S = input()\n \n \n idx_w = 0\n idxes_b = []\n \n for i, s in enumerate(S):\n     if s == 'B':\n         idxes_b.append(i)\n     elif s == 'W':\n         idx_w = i\n \n \n ans = 0\n for i, b in enumerate(idxes_b[::-1]):\n     ans += idx_w - b - i\n \n-print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n \n \n idx_w = 0\n idxes_b = []\n \n for i, s in enumerate(S):\n     if s == 'B':\n         idxes_b.append(i)\n     elif s == 'W':\n         idx_w = i\n \n \n ans = 0\n for i, b in enumerate(idxes_b[::-1]):\n     ans += idx_w - b - i\n \n-print(ans)\n```\n "
    },
    {
        "user_id": "u607074939",
        "problem_id": "p02730",
        "submission1_id": "s823065914",
        "crp_content": "\n s = list(str(input()))\n n = len(s)\n N = int((n-1)/2)\n M = int((n+3)/2)\n l = []\n m = []\n for i in range(N):\n     l.append(s[i])\n-for i in range (M-1,N):\n     m.append(s[i])\n a = ''.join(l)\n b = ''.join(m)\n l.reverse()\n m.reverse()\n A = ''.join(l)\n B = ''.join(m)\n if (a==A and b==B):\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n s = list(str(input()))\n n = len(s)\n N = int((n-1)/2)\n M = int((n+3)/2)\n l = []\n m = []\n for i in range(N):\n     l.append(s[i])\n-for i in range (M-1,N):\n     m.append(s[i])\n a = ''.join(l)\n b = ''.join(m)\n l.reverse()\n m.reverse()\n A = ''.join(l)\n B = ''.join(m)\n if (a==A and b==B):\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u850266651",
        "problem_id": "p03080",
        "submission1_id": "s802658580",
        "crp_content": "\n N = int(input())\n S = input()\n \n a = 0\n for s in S:\n   if s==\"B\":\n   \t  a += 1\n-if a > N-a:\n \tprint(\"Yes\")\n else:\n   \tprint(\"No\")\n",
        "origin_generated_text": "\n```\n N = int(input())\n S = input()\n \n a = 0\n for s in S:\n   if s==\"B\":\n   \t  a += 1\n-if a > N-a:\n \tprint(\"Yes\")\n else:\n   \tprint(\"No\")\n```\n "
    },
    {
        "user_id": "u331036636",
        "problem_id": "p03563",
        "submission1_id": "s764346379",
        "crp_content": "\n nr = float(input())\n p = float(input())\n-print((p-nr)+p)\n",
        "origin_generated_text": "\n```\n nr = float(input())\n p = float(input())\n-print((p-nr)+p)\n```\n "
    },
    {
        "user_id": "u396976991",
        "problem_id": "p03296",
        "submission1_id": "s605909545",
        "crp_content": "\n N=int(input())\n a=[]\n a=input().split()\n sum=0\n \n-for i in range (1,N-2):\n-  if a[i-1]==a[i] or a[i+1]==a[i]:\n-    i=i+1\n     sum=sum+1\n \n print(sum)\n",
        "origin_generated_text": "\n```\n N=int(input())\n a=[]\n a=input().split()\n sum=0\n \n-for i in range (1,N-2):\n-  if a[i-1]==a[i] or a[i+1]==a[i]:\n-    i=i+1\n     sum=sum+1\n \n print(sum)\n```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p02963",
        "submission1_id": "s089948663",
        "crp_content": "\n import sys,collections as cl,bisect as bs\n sys.setrecursionlimit(100000)\n input = sys.stdin.readline\n mod = 10**9+7\n Max = sys.maxsize\n def l(): \n   return list(map(int,input().split()))\n def m(): \n   return map(int,input().split())\n def onem(): \n   return int(input())\n def s(x): \n   a = []\n   if len(x) == 0:\n     return []\n   aa = x[0]\n   su = 1\n   for i in range(len(x)-1):\n     if aa != x[i+1]:\n       a.append([aa,su])\n       aa = x[i+1]\n       su = 1\n     else:\n       su += 1\n   a.append([aa,su])\n   return a\n def jo(x): \n   return \" \".join(map(str,x))\n def max2(x): \n   return max(map(max,x))\n def In(x,a): \n     k = bs.bisect_left(a,x)\n     if k != len(a) and a[k] ==  x:\n         return True\n     else:\n         return False\n \n def pow_k(x, n):\n     ans = 1\n     while n:\n         if n % 2:\n             ans *= x\n         x *= x\n         n >>= 1\n     return ans\n \n \n \n s = onem()\n \n x = [0,10**9,0]\n y = [0,1,0]\n \n x[-1] = s % 10**9\n y[-1] = s \n \n print(x[0],y[0],x[1],y[1],x[2],y[2])\n \n \n",
        "origin_generated_text": "\n```\n import sys,collections as cl,bisect as bs\n sys.setrecursionlimit(100000)\n input = sys.stdin.readline\n mod = 10**9+7\n Max = sys.maxsize\n def l(): \n   return list(map(int,input().split()))\n def m(): \n   return map(int,input().split())\n def onem(): \n   return int(input())\n def s(x): \n   a = []\n   if len(x) == 0:\n     return []\n   aa = x[0]\n   su = 1\n   for i in range(len(x)-1):\n     if aa != x[i+1]:\n       a.append([aa,su])\n       aa = x[i+1]\n       su = 1\n     else:\n       su += 1\n   a.append([aa,su])\n   return a\n def jo(x): \n   return \" \".join(map(str,x))\n def max2(x): \n   return max(map(max,x))\n def In(x,a): \n     k = bs.bisect_left(a,x)\n     if k != len(a) and a[k] ==  x:\n         return True\n     else:\n         return False\n \n def pow_k(x, n):\n     ans = 1\n     while n:\n         if n % 2:\n             ans *= x\n         x *= x\n         n >>= 1\n     return ans\n \n \n \n s = onem()\n \n x = [0,10**9,0]\n y = [0,1,0]\n \n x[-1] = s % 10**9\n y[-1] = s \n \n print(x[0],y[0],x[1],y[1],x[2],y[2])\n \n \n```\n "
    },
    {
        "user_id": "u941434715",
        "problem_id": "p03965",
        "submission1_id": "s384931577",
        "crp_content": "\n \n import math\n \n s = input()\n-ans = math.ceil(len(s)/2) - s.count(\"p\")\n print(ans)\n",
        "origin_generated_text": "\n```\n \n import math\n \n s = input()\n-ans = math.ceil(len(s)/2) - s.count(\"p\")\n print(ans)\n```\n "
    },
    {
        "user_id": "u393881437",
        "problem_id": "p03729",
        "submission1_id": "s106014910",
        "crp_content": "\n a, b, c = list(input().split())\n-print('Yes' if a[len(a)-1] == b[0] and b[len(b)-1] == c[0] else 'No')\n \n",
        "origin_generated_text": "\n```\n a, b, c = list(input().split())\n-print('Yes' if a[len(a)-1] == b[0] and b[len(b)-1] == c[0] else 'No')\n \n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03416",
        "submission1_id": "s188034348",
        "crp_content": "\n a, b = map(int, input().split())\n cnt = 0\n for i in range(a,b+1):\n \ts = str(i)\n-\tif s[:2] == s[-2:]:\n \t\tcnt += 1\n print (cnt)\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n cnt = 0\n for i in range(a,b+1):\n \ts = str(i)\n-\tif s[:2] == s[-2:]:\n \t\tcnt += 1\n print (cnt)\n```\n "
    },
    {
        "user_id": "u648212584",
        "problem_id": "p03959",
        "submission1_id": "s924297868",
        "crp_content": "\n import sys\n input = sys.stdin.buffer.readline\n from operator import itemgetter\n \n def main():\n     N = int(input())\n     \n     t = list(map(int,input().split()))\n     a = list(map(int,input().split()))\n     MOD = 10**9+7\n     \n     tt,tl = 0,[False for _ in range(N)]\n     for x,num in enumerate(t):\n         if num > tt:\n             tl[x] = True\n             tt = num\n             \n     at,al = 0,[False for _ in range(N)]\n     for x,num in enumerate(a[::-1]):\n         if num > at:\n             al[-x-1] = True\n             at = num\n             \n-    print(tl,al)\n     ans,now = 1,0\n     for i in range(N):\n-        print(i,now)\n         if tl[i] == True and al[i] == True:\n             if now < t[i] == a[i]:\n                 now = min(t[i],a[i])\n             else:\n                 print(-1)\n                 exit()\n         elif tl[i] == True and al[i] == False:\n             if now > t[i]:\n                 print(-1)\n                 exit()\n             else:\n                 now = t[i]\n         elif tl[i] == False and al[i] == True:\n             if now < a[i]:\n                 print(-1)\n                 exit()\n             else:\n                 now = a[i]\n         else:\n             ans *= min(t[i],a[i])\n             ans %= MOD\n     \n     print(ans)\n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.buffer.readline\n from operator import itemgetter\n \n def main():\n     N = int(input())\n     \n     t = list(map(int,input().split()))\n     a = list(map(int,input().split()))\n     MOD = 10**9+7\n     \n     tt,tl = 0,[False for _ in range(N)]\n     for x,num in enumerate(t):\n         if num > tt:\n             tl[x] = True\n             tt = num\n             \n     at,al = 0,[False for _ in range(N)]\n     for x,num in enumerate(a[::-1]):\n         if num > at:\n             al[-x-1] = True\n             at = num\n             \n-    print(tl,al)\n     ans,now = 1,0\n     for i in range(N):\n-        print(i,now)\n         if tl[i] == True and al[i] == True:\n             if now < t[i] == a[i]:\n                 now = min(t[i],a[i])\n             else:\n                 print(-1)\n                 exit()\n         elif tl[i] == True and al[i] == False:\n             if now > t[i]:\n                 print(-1)\n                 exit()\n             else:\n                 now = t[i]\n         elif tl[i] == False and al[i] == True:\n             if now < a[i]:\n                 print(-1)\n                 exit()\n             else:\n                 now = a[i]\n         else:\n             ans *= min(t[i],a[i])\n             ans %= MOD\n     \n     print(ans)\n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u498486375",
        "problem_id": "p03264",
        "submission1_id": "s082258519",
        "crp_content": "\n K=int(input())\n if K%2==0:\n     m=(K/2)**2\n else:\n     m=((K-1)/2)*(((K-1)/2)+1)\n-print(m)\n",
        "origin_generated_text": "\n```\n K=int(input())\n if K%2==0:\n     m=(K/2)**2\n else:\n     m=((K-1)/2)*(((K-1)/2)+1)\n-print(m)\n```\n "
    },
    {
        "user_id": "u846226907",
        "problem_id": "p02954",
        "submission1_id": "s794442504",
        "crp_content": "\n S = list(input())\n-print(S)\n \n N = len(S)\n \n ans = [0]*N\n \n for _ in range(2):\n     cnt = 0\n     for i in  range(len(S)):\n         if S[i] =='R':cnt +=1\n         else:\n             ans[i] += int(cnt/2)\n             ans[i-1] += int((cnt+1)/2)\n             cnt = 0\n \n     S.reverse()\n     ans.reverse()\n     for i in range(len(S)):\n         if S[i] == 'L':\n             S[i] ='R'\n         else:\n             S[i] = 'L'\n \n print(*ans)\n",
        "origin_generated_text": "\n```\n S = list(input())\n-print(S)\n \n N = len(S)\n \n ans = [0]*N\n \n for _ in range(2):\n     cnt = 0\n     for i in  range(len(S)):\n         if S[i] =='R':cnt +=1\n         else:\n             ans[i] += int(cnt/2)\n             ans[i-1] += int((cnt+1)/2)\n             cnt = 0\n \n     S.reverse()\n     ans.reverse()\n     for i in range(len(S)):\n         if S[i] == 'L':\n             S[i] ='R'\n         else:\n             S[i] = 'L'\n \n print(*ans)\n```\n "
    },
    {
        "user_id": "u489762173",
        "problem_id": "p03087",
        "submission1_id": "s317498789",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n def main():\n     N, Q = map(int, input().split())\n     S = list(input().rstrip())\n \n     dec_a = [0] * (N)\n     for x in range(1, N):\n         if S[x] == 'C' and S[x-1] == 'A':\n             S[x-1] = 'a'\n         dec_a[x] = S[:x+1].count('a')\n \n \n     L = [0] * Q\n     R = [0] * Q\n     for i in range(Q):\n         L[i], R[i] = map(int, input().split())\n \n-    print(dec_a)\n     for j in range(Q):\n         print(dec_a[R[j]-1] - dec_a[L[j]-1])\n \n main()\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n def main():\n     N, Q = map(int, input().split())\n     S = list(input().rstrip())\n \n     dec_a = [0] * (N)\n     for x in range(1, N):\n         if S[x] == 'C' and S[x-1] == 'A':\n             S[x-1] = 'a'\n         dec_a[x] = S[:x+1].count('a')\n \n \n     L = [0] * Q\n     R = [0] * Q\n     for i in range(Q):\n         L[i], R[i] = map(int, input().split())\n \n-    print(dec_a)\n     for j in range(Q):\n         print(dec_a[R[j]-1] - dec_a[L[j]-1])\n \n main()\n```\n "
    },
    {
        "user_id": "u307083029",
        "problem_id": "p02640",
        "submission1_id": "s592284084",
        "crp_content": "\n x, y = map(int, input().split())\n-ans = 'no'\n for a in range(x + 1):\n     b = x - a\n     if 2*a + 4*b == y:\n-        ans = 'yes'\n print(ans)\n",
        "origin_generated_text": "\n```\n x, y = map(int, input().split())\n-ans = 'no'\n for a in range(x + 1):\n     b = x - a\n     if 2*a + 4*b == y:\n-        ans = 'yes'\n print(ans)\n```\n "
    },
    {
        "user_id": "u846150137",
        "problem_id": "p03096",
        "submission1_id": "s112086377",
        "crp_content": "\n m = 10 ** 9 + 7\n d = {}\n r = 1\n p = 0\n for _ in range(int(input())):\n   c = int(input())\n   if c == p:\n     continue\n   if c in d:\n     r += d[c]\n   r %= m\n   d[c] = r\n   p = c\n-\n",
        "origin_generated_text": "\n```\n m = 10 ** 9 + 7\n d = {}\n r = 1\n p = 0\n for _ in range(int(input())):\n   c = int(input())\n   if c == p:\n     continue\n   if c in d:\n     r += d[c]\n   r %= m\n   d[c] = r\n   p = c\n-\n```\n "
    },
    {
        "user_id": "u686989171",
        "problem_id": "p02699",
        "submission1_id": "s776065719",
        "crp_content": "\n \n s, w = map(int, input().split())\n-if s<w:\n     print('safe')\n else:\n     print('unsafe')\n",
        "origin_generated_text": "\n```\n \n s, w = map(int, input().split())\n-if s<w:\n     print('safe')\n else:\n     print('unsafe')\n```\n "
    },
    {
        "user_id": "u143492911",
        "problem_id": "p03943",
        "submission1_id": "s962387074",
        "crp_content": "\n a,b,c=map(int,input().split())\n if a+b==c:\n     print(\"Yes\")\n-    exit()\n if b+c==a:\n     print(\"Yes\")\n if a+c==b:\n     print(\"Yes\")\n print(\"No\")\n \n",
        "origin_generated_text": "\n```\n a,b,c=map(int,input().split())\n if a+b==c:\n     print(\"Yes\")\n-    exit()\n if b+c==a:\n     print(\"Yes\")\n if a+c==b:\n     print(\"Yes\")\n print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u395894569",
        "problem_id": "p02880",
        "submission1_id": "s030907335",
        "crp_content": "\n n = int(input())\n for i in range(1, 10):\n     for j in range(1, 10):\n-        print(i,j)\n         if i * j == n:\n             print('Yes')\n             exit()\n else:print('No')\n",
        "origin_generated_text": "\n```\n n = int(input())\n for i in range(1, 10):\n     for j in range(1, 10):\n-        print(i,j)\n         if i * j == n:\n             print('Yes')\n             exit()\n else:print('No')\n```\n "
    },
    {
        "user_id": "u223904637",
        "problem_id": "p03200",
        "submission1_id": "s617975653",
        "crp_content": "\n s=list(input())\n ans=0\n wf=0\n bf=0\n for i in range(len(s)):\n     if s[i]=='W':\n-        ans+=i\n         wf=1\n     else:\n         bf=1\n if wf==0 or bf==0:\n     print(0)\n else:\n     print(ans)\n",
        "origin_generated_text": "\n```\n s=list(input())\n ans=0\n wf=0\n bf=0\n for i in range(len(s)):\n     if s[i]=='W':\n-        ans+=i\n         wf=1\n     else:\n         bf=1\n if wf==0 or bf==0:\n     print(0)\n else:\n     print(ans)\n```\n "
    },
    {
        "user_id": "u948374595",
        "problem_id": "p03475",
        "submission1_id": "s172674675",
        "crp_content": "\n n = int(input())\n def gcd(a, b):\n   while b:\n     a,b = b,a%b\n   return a\n def lcm(a, b):\n    return a*b\n CSF = []\n for i in range(n-1):\n   CSF.append(list(map(int, input().split())))\n for i in range(n-1):\n   s = CSF[i][1]\n-  for j in range(i,n-1):\n     s += CSF[j][0]\n     if j < n-2:\n       if s < CSF[j+1][1]:\n         s = CSF[j+1][1]\n       if s%CSF[j+1][2] != 0:\n         s = lcm(s, CSF[j+1][2])\n   print(s)\n print(0)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n def gcd(a, b):\n   while b:\n     a,b = b,a%b\n   return a\n def lcm(a, b):\n    return a*b\n CSF = []\n for i in range(n-1):\n   CSF.append(list(map(int, input().split())))\n for i in range(n-1):\n   s = CSF[i][1]\n-  for j in range(i,n-1):\n     s += CSF[j][0]\n     if j < n-2:\n       if s < CSF[j+1][1]:\n         s = CSF[j+1][1]\n       if s%CSF[j+1][2] != 0:\n         s = lcm(s, CSF[j+1][2])\n   print(s)\n print(0)\n \n```\n "
    },
    {
        "user_id": "u717626627",
        "problem_id": "p03563",
        "submission1_id": "s833652489",
        "crp_content": "\n r = int(input())\n g = int(input())\n \n-print(abs(g - r)*2 + min(g,r))\n",
        "origin_generated_text": "\n```\n r = int(input())\n g = int(input())\n \n-print(abs(g - r)*2 + min(g,r))\n```\n "
    },
    {
        "user_id": "u827141374",
        "problem_id": "p03272",
        "submission1_id": "s637670968",
        "crp_content": "\n N, i = map(int, input().split())\n-print(i - N + 1)\n",
        "origin_generated_text": "\n```\n N, i = map(int, input().split())\n-print(i - N + 1)\n```\n "
    },
    {
        "user_id": "u343977188",
        "problem_id": "p02730",
        "submission1_id": "s169990183",
        "crp_content": "\n S=str(input())\n N=len(S)\n \n S1 = S[0:int((N-1)/2)]\n S2 = S[int((N+3)/2)-1:N]\n \n-if S1==S1[::-1] and S2==S2[::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n S=str(input())\n N=len(S)\n \n S1 = S[0:int((N-1)/2)]\n S2 = S[int((N+3)/2)-1:N]\n \n-if S1==S1[::-1] and S2==S2[::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u329407311",
        "problem_id": "p03734",
        "submission1_id": "s571689901",
        "crp_content": "\n N,W = map(int,input().split())\n dic = {\"0\":[],\"1\":[],\"2\":[],\"3\":[]}\n for i in range(N):\n   w,v = map(int,input().split())\n   if i == 0:\n     Min = w\n   if w == Min:\n     dic[\"0\"].append(v)\n   elif w == Min+1:\n     dic[\"1\"].append(v)\n   elif w == Min+2:\n     dic[\"2\"].append(v)\n   elif w == Min+3:\n     dic[\"3\"].append(v)\n     \n dic[\"0\"].sort()\n dic[\"1\"].sort()\n dic[\"2\"].sort()\n dic[\"3\"].sort()\n \n ans = 0\n for i in range(len(dic[\"0\"])+1):\n   for j in range(len(dic[\"1\"])+1):\n     for k in range(len(dic[\"2\"])+1):\n       for l in range(len(dic[\"3\"])+1): \n         a = int(sum(dic[\"0\"][:i])+sum(dic[\"1\"][:j])+sum(dic[\"2\"][:k])+sum(dic[\"3\"][:l])) \n         b = int(i*Min+j*(Min+1)+k*(Min+2)+l*(Min+3))\n         if a > ans and b <= W:\n           ans = a\n print(int(ans))\n",
        "origin_generated_text": "\n```\n N,W = map(int,input().split())\n dic = {\"0\":[],\"1\":[],\"2\":[],\"3\":[]}\n for i in range(N):\n   w,v = map(int,input().split())\n   if i == 0:\n     Min = w\n   if w == Min:\n     dic[\"0\"].append(v)\n   elif w == Min+1:\n     dic[\"1\"].append(v)\n   elif w == Min+2:\n     dic[\"2\"].append(v)\n   elif w == Min+3:\n     dic[\"3\"].append(v)\n     \n dic[\"0\"].sort()\n dic[\"1\"].sort()\n dic[\"2\"].sort()\n dic[\"3\"].sort()\n \n ans = 0\n for i in range(len(dic[\"0\"])+1):\n   for j in range(len(dic[\"1\"])+1):\n     for k in range(len(dic[\"2\"])+1):\n       for l in range(len(dic[\"3\"])+1): \n         a = int(sum(dic[\"0\"][:i])+sum(dic[\"1\"][:j])+sum(dic[\"2\"][:k])+sum(dic[\"3\"][:l])) \n         b = int(i*Min+j*(Min+1)+k*(Min+2)+l*(Min+3))\n         if a > ans and b <= W:\n           ans = a\n print(int(ans))\n```\n "
    },
    {
        "user_id": "u948779457",
        "problem_id": "p02727",
        "submission1_id": "s138611232",
        "crp_content": "\n X,Y,A,B,C = map(int,input().split())\n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort(reverse=True)\n Z = X+Y\n P = p[:X]\n Q = q[:Y]\n R = r[:Z]\n ans = 0\n if X <= Y:\n   S = P + R\n   S.sort(reverse=True)\n   a = S[:X]\n   b = S[X:]\n   ans += sum(a)\n   T = Q + b\n   T.sort(reverse=True)\n   c = T[:Y]\n   ans += sum(c)\n else:\n   S = Q + R\n   S.sort(reverse=True)\n   a = S[:Y]\n   b = S[Y:]\n   ans += sum(a)\n   T = P + b\n   T.sort(reverse=True)\n   c = T[:X]\n   ans += sum(c)\n print(ans)\n-print(a,b)\n",
        "origin_generated_text": "\n```\n X,Y,A,B,C = map(int,input().split())\n p = list(map(int,input().split()))\n q = list(map(int,input().split()))\n r = list(map(int,input().split()))\n p.sort(reverse=True)\n q.sort(reverse=True)\n r.sort(reverse=True)\n Z = X+Y\n P = p[:X]\n Q = q[:Y]\n R = r[:Z]\n ans = 0\n if X <= Y:\n   S = P + R\n   S.sort(reverse=True)\n   a = S[:X]\n   b = S[X:]\n   ans += sum(a)\n   T = Q + b\n   T.sort(reverse=True)\n   c = T[:Y]\n   ans += sum(c)\n else:\n   S = Q + R\n   S.sort(reverse=True)\n   a = S[:Y]\n   b = S[Y:]\n   ans += sum(a)\n   T = P + b\n   T.sort(reverse=True)\n   c = T[:X]\n   ans += sum(c)\n print(ans)\n-print(a,b)\n```\n "
    },
    {
        "user_id": "u171132311",
        "problem_id": "p02742",
        "submission1_id": "s772137072",
        "crp_content": "\n h,w=map(int,input().split())\n result = h*w\n if result%2==0:\n-    print(result/2)\n else:\n-    print(int(result/2)+1)\n",
        "origin_generated_text": "\n```\n h,w=map(int,input().split())\n result = h*w\n if result%2==0:\n-    print(result/2)\n else:\n-    print(int(result/2)+1)\n```\n "
    },
    {
        "user_id": "u136090046",
        "problem_id": "p03626",
        "submission1_id": "s238758260",
        "crp_content": "\n n = int(input())\n \n s1 = input()\n s2 = input()\n \n INF = 1000000009\n \n left = None\n index = 0\n cnt = 0\n while index < n:\n     \n     if s1[index] == s2[index]:\n         index += 1\n         if left is None:\n             left = 1\n             cnt = 3\n         \n         elif left == 1:\n             cnt *= 2\n         \n         else:\n             cnt *= 1\n         left = 1\n \n     \n     else:\n         index += 2\n         if left is None:\n             left = 2\n             cnt = 6\n         \n         elif left == 1:\n             cnt *= 2\n         \n         else:\n             cnt *= 3\n         left = 2\n     cnt = cnt % INF\n print(cnt)\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n s1 = input()\n s2 = input()\n \n INF = 1000000009\n \n left = None\n index = 0\n cnt = 0\n while index < n:\n     \n     if s1[index] == s2[index]:\n         index += 1\n         if left is None:\n             left = 1\n             cnt = 3\n         \n         elif left == 1:\n             cnt *= 2\n         \n         else:\n             cnt *= 1\n         left = 1\n \n     \n     else:\n         index += 2\n         if left is None:\n             left = 2\n             cnt = 6\n         \n         elif left == 1:\n             cnt *= 2\n         \n         else:\n             cnt *= 3\n         left = 2\n     cnt = cnt % INF\n print(cnt)\n```\n "
    },
    {
        "user_id": "u072717685",
        "problem_id": "p03477",
        "submission1_id": "s902664120",
        "crp_content": "\n A, B, C, D = map(int, input().split())\n  \n if A + B == C + D:\n   r = 'Balanced'\n-if A + B > C + D:\n   r = 'Left'\n else:\n   r = 'Right'\n print(r)\n",
        "origin_generated_text": "\n```\n A, B, C, D = map(int, input().split())\n  \n if A + B == C + D:\n   r = 'Balanced'\n-if A + B > C + D:\n   r = 'Left'\n else:\n   r = 'Right'\n print(r)\n```\n "
    },
    {
        "user_id": "u167681750",
        "problem_id": "p03546",
        "submission1_id": "s359552769",
        "crp_content": "\n h, w = map(int, input().split())\n \n table = [list(map(int, input().split())) for _ in range(10)]\n \n def wf(table):\n     from itertools import product\n     for i, j, k in product(range(len(table)), repeat=3):\n         table[i][j] = min(table[i][j], table[i][k] + table[k][j])\n \n     return table\n \n table = wf(table)\n \n ans = 0\n for _ in range(h):\n     for i in map(int, input().split()):\n         if i != -1:\n-            ans += table[i][1]\n \n print(ans)\n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n \n table = [list(map(int, input().split())) for _ in range(10)]\n \n def wf(table):\n     from itertools import product\n     for i, j, k in product(range(len(table)), repeat=3):\n         table[i][j] = min(table[i][j], table[i][k] + table[k][j])\n \n     return table\n \n table = wf(table)\n \n ans = 0\n for _ in range(h):\n     for i in map(int, input().split()):\n         if i != -1:\n-            ans += table[i][1]\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u364386647",
        "problem_id": "p02553",
        "submission1_id": "s028386806",
        "crp_content": "\n def resolve():\n     a, b, c, d = list(map(int, input().split()))\n-    ans = -10 ** 9\n \n-    for x in (a, b):\n-        for y in (c, d):\n-            ans = max(ans, x * y)\n-    if (b == 0 and d > 0) or (b > 0 and d == 0):\n-        ans = 0\n \n     print(ans)\n \n resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n     a, b, c, d = list(map(int, input().split()))\n-    ans = -10 ** 9\n \n-    for x in (a, b):\n-        for y in (c, d):\n-            ans = max(ans, x * y)\n-    if (b == 0 and d > 0) or (b > 0 and d == 0):\n-        ans = 0\n \n     print(ans)\n \n resolve()\n```\n "
    },
    {
        "user_id": "u500279510",
        "problem_id": "p03573",
        "submission1_id": "s863571828",
        "crp_content": "\n A, B, C = map(int,input().split())\n-if A!=B and B==C:\n     print(A)\n-if A!=B and A==C:\n     print(B)\n else:\n     print(C) \n",
        "origin_generated_text": "\n```\n A, B, C = map(int,input().split())\n-if A!=B and B==C:\n     print(A)\n-if A!=B and A==C:\n     print(B)\n else:\n     print(C) \n```\n "
    },
    {
        "user_id": "u933096856",
        "problem_id": "p02469",
        "submission1_id": "s573042137",
        "crp_content": "\n def gcd(x,y):\n     p=min(x,y)\n     q=max(x,y)\n     while True:\n             m=q%p\n             if m==0:\n \n                 break\n             p=m\n             q=p\n \n     if p==q:\n         g=1\n     else:\n         g=p\n     return g\n \n c=0\n n=int(input())\n-a=sorted(set(list(map(int, input().split()))))\n b=[]\n while len(a) > 1:\n     n=len(a)\n     for i in range(n-1):\n         p=a[i]\n         q=a[i+1]\n         g=gcd(p,q)\n \n         r=a[i]*a[i+1]\n         b.append(r)\n     a=sorted(b)\n     b=[]\n print(*a)\n",
        "origin_generated_text": "\n```\n def gcd(x,y):\n     p=min(x,y)\n     q=max(x,y)\n     while True:\n             m=q%p\n             if m==0:\n \n                 break\n             p=m\n             q=p\n \n     if p==q:\n         g=1\n     else:\n         g=p\n     return g\n \n c=0\n n=int(input())\n-a=sorted(set(list(map(int, input().split()))))\n b=[]\n while len(a) > 1:\n     n=len(a)\n     for i in range(n-1):\n         p=a[i]\n         q=a[i+1]\n         g=gcd(p,q)\n \n         r=a[i]*a[i+1]\n         b.append(r)\n     a=sorted(b)\n     b=[]\n print(*a)\n```\n "
    },
    {
        "user_id": "u363836311",
        "problem_id": "p03970",
        "submission1_id": "s185874266",
        "crp_content": "\n-S=list(str(input().split()))\n G='CODEFESTIVAL2016'\n t=0\n for i in range(16):\n   if S[i]!=G[i]:\n     t+=1\n print(t)\n",
        "origin_generated_text": "\n```\n-S=list(str(input().split()))\n G='CODEFESTIVAL2016'\n t=0\n for i in range(16):\n   if S[i]!=G[i]:\n     t+=1\n print(t)\n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p02922",
        "submission1_id": "s613269513",
        "crp_content": "\n import math\n a,b = map(int,input().split())\n-print(math.ceil(a/b))\n",
        "origin_generated_text": "\n```\n import math\n a,b = map(int,input().split())\n-print(math.ceil(a/b))\n```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s038199979",
        "crp_content": "\n n = int(input())\n tree = [[-1, -1, True] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     if left != -1:\n         tree[id][0] = left\n         tree[left][2] = False\n     if right != -1:\n         tree[id][1] = right\n         tree[right][2] = False\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n for i, node in enumerate(tree):\n     if node[2] == True:\n         root = i\n \n print('Preoder')\n preoder(root)\n print('')\n print('Inorder')\n inorder(root)\n print('')\n print('Postorder')\n postorder(root)\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n tree = [[-1, -1, True] for i in range(n)]\n for i in range(n):\n     id, left, right = map(int, input().split())\n     if left != -1:\n         tree[id][0] = left\n         tree[left][2] = False\n     if right != -1:\n         tree[id][1] = right\n         tree[right][2] = False\n \n def preoder(id):\n     if id == -1:\n         return\n     print(' ' + str(id), end='')\n     preoder(tree[id][0])\n     preoder(tree[id][1])\n \n def inorder(id):\n     if id == -1:\n         return\n     inorder(tree[id][0])\n     print(' ' + str(id), end='')\n     inorder(tree[id][1])\n \n def postorder(id):\n     if id == -1:\n         return\n     postorder(tree[id][0])\n     postorder(tree[id][1])\n     print(' ' + str(id), end='')\n \n for i, node in enumerate(tree):\n     if node[2] == True:\n         root = i\n \n print('Preoder')\n preoder(root)\n print('')\n print('Inorder')\n inorder(root)\n print('')\n print('Postorder')\n postorder(root)\n \n \n```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03625",
        "submission1_id": "s683036892",
        "crp_content": "\n N = int(input())\n A = [int(x) for x in input().split()]\n A.sort(reverse=True)\n pre = 0\n e1, e2 = 0, 0\n for a in A:\n   if pre == a:\n     if e1 == 0:\n       e1 = a\n     elif e2 == 0:\n-      e2 == a\n     pre = 0\n   else:\n     pre = a\n print(e1 * e2)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = [int(x) for x in input().split()]\n A.sort(reverse=True)\n pre = 0\n e1, e2 = 0, 0\n for a in A:\n   if pre == a:\n     if e1 == 0:\n       e1 = a\n     elif e2 == 0:\n-      e2 == a\n     pre = 0\n   else:\n     pre = a\n print(e1 * e2)\n```\n "
    },
    {
        "user_id": "u460386402",
        "problem_id": "p03103",
        "submission1_id": "s747729727",
        "crp_content": "\n n,m=map(int,input().split())\n dic={}\n doll=0\n for i in range(n):\n   a,b=map(int,input().split())\n   dic[a]=b\n   \n con=sorted(dic.items())\n \n for k,v in con:\n-  if v<m:\n     doll+=k*v\n     m-=v\n   else:\n     doll+=k*m\n     break\n print(doll)\n",
        "origin_generated_text": "\n```\n n,m=map(int,input().split())\n dic={}\n doll=0\n for i in range(n):\n   a,b=map(int,input().split())\n   dic[a]=b\n   \n con=sorted(dic.items())\n \n for k,v in con:\n-  if v<m:\n     doll+=k*v\n     m-=v\n   else:\n     doll+=k*m\n     break\n print(doll)\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s203927452",
        "crp_content": "\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n \tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n-print(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0]%m)\n",
        "origin_generated_text": "\n```\n def mat_dot(one, two, mod):\n \treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n \n def mat_pow(mat, exp, mod):\n \tsize = len(mat)\n \tres = [[0 for _ in range(size)] for _ in range(size)]\n \tfor i in range(size):\n \t\tres[i][i] = 1\n \tcnt = 0\n \twhile (1<<cnt) <= exp:\n \t\tif (exp>>cnt)&1:\n \t\t\tres = mat_dot(res, mat, mod)\n \t\tmat = mat_dot(mat, mat, mod)\n \t\tcnt += 1\n \treturn res\n \n l, a, b, m = map(int, input().split())\n c = a + (l-1)*b\n n = len(str(c))\n dgt = [0 for _ in range(n+1)]\n for i in range(1, n):\n \tdgt[i] = (10**i -a+b-1) \n dgt[n] = l-sum(dgt)\n-print(dgt)\n d_sum = [0 for _ in range(n+1)]\n for i in range(n-1, 0, -1):\n \td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\n \n fr = [0 for _ in range(n+1)]\n fr[1] = a\n for i in range(2, n+1):\n \tfr[i] = fr[i-1] + b*dgt[i-1]\n \n l = [[0, a%m, 1]]\n for d in range(1, n+1):\n \tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n \tj = mat_pow(k, dgt[d], m)\n \t\n \t\n \tl = mat_dot(l, j, m)\n \t\n \n print(l[0][0]%m)\n```\n "
    },
    {
        "user_id": "u377036395",
        "problem_id": "p03272",
        "submission1_id": "s217659524",
        "crp_content": "\n n,i = map(int,input().split())\n-print(i-n+1)\n",
        "origin_generated_text": "\n```\n n,i = map(int,input().split())\n-print(i-n+1)\n```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p03479",
        "submission1_id": "s868027988",
        "crp_content": "\n a = list(map(int,input().split()))\n \n-k = a[1]\n i = 1\n-l = a[0]\n while True:\n-  l *= i\n-  if k < l:\n     break\n   i += 1\n print(i-1)\n \n",
        "origin_generated_text": "\n```\n a = list(map(int,input().split()))\n \n-k = a[1]\n i = 1\n-l = a[0]\n while True:\n-  l *= i\n-  if k < l:\n     break\n   i += 1\n print(i-1)\n \n```\n "
    },
    {
        "user_id": "u581707881",
        "problem_id": "p03626",
        "submission1_id": "s880939931",
        "crp_content": "\n n = int(input())\n s1 = str(input())\n s2 = str(input())\n if s1[0] == s2[0]:\n   c = 3\n   state = True\n   i = 1\n else:\n   c = 6\n   state = False\n   i = 2\n while i < n:\n   if s1[i] == s2[i]:\n     i += 1\n     if state:\n       c *= 2\n     else:\n       state = True\n   else:\n     i += 2\n     if state:\n       c *= 2\n       state = False\n     else:\n       c *= 3\n print(c)\n   \n   \n",
        "origin_generated_text": "\n```\n n = int(input())\n s1 = str(input())\n s2 = str(input())\n if s1[0] == s2[0]:\n   c = 3\n   state = True\n   i = 1\n else:\n   c = 6\n   state = False\n   i = 2\n while i < n:\n   if s1[i] == s2[i]:\n     i += 1\n     if state:\n       c *= 2\n     else:\n       state = True\n   else:\n     i += 2\n     if state:\n       c *= 2\n       state = False\n     else:\n       c *= 3\n print(c)\n   \n   \n```\n "
    },
    {
        "user_id": "u432098488",
        "problem_id": "p02767",
        "submission1_id": "s395283504",
        "crp_content": "\n n = int(input())\n x = list(map(int, input().split()))\n \n mini, maxi = min(x), maxi\n min2, max2 = mini**2, maxi**2\n ans = max2 if max2 > min2 else min2\n \n-for p in range(mini, maxi):\n   suma = 0\n   for z in x:\n     suma += (z-p)**2\n   if ans > suma:\n     ans = suma\n     \n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int, input().split()))\n \n mini, maxi = min(x), maxi\n min2, max2 = mini**2, maxi**2\n ans = max2 if max2 > min2 else min2\n \n-for p in range(mini, maxi):\n   suma = 0\n   for z in x:\n     suma += (z-p)**2\n   if ans > suma:\n     ans = suma\n     \n print(ans)\n```\n "
    },
    {
        "user_id": "u680851063",
        "problem_id": "p03087",
        "submission1_id": "s771549860",
        "crp_content": "\n from itertools import accumulate\n \n n, q = map(int, input().split())\n s = list(input())\n \n z = []\n for i in range(n-1):\n     if s[i] + s[i+1] == 'AC':\n         z.append(1)\n     else:\n         z.append(0)\n-print(z)\n \n z = [0] + list(accumulate(z))\n-print(z)\n \n for j in range(q):\n     l, r =  map(int, input().split())\n     print(z[r-1] - z[l-1])\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n n, q = map(int, input().split())\n s = list(input())\n \n z = []\n for i in range(n-1):\n     if s[i] + s[i+1] == 'AC':\n         z.append(1)\n     else:\n         z.append(0)\n-print(z)\n \n z = [0] + list(accumulate(z))\n-print(z)\n \n for j in range(q):\n     l, r =  map(int, input().split())\n     print(z[r-1] - z[l-1])\n \n```\n "
    },
    {
        "user_id": "u084357428",
        "problem_id": "p03943",
        "submission1_id": "s727177772",
        "crp_content": "\n a = [int(_) for _ in input().split()]\n-print('Yes' if a[0] == a[1] + a[2] else 'Yes' if a[1] == a[0] + a[2] else 'yes' if a[2] == a[0] + a[1] else 'No')\n",
        "origin_generated_text": "\n```\n a = [int(_) for _ in input().split()]\n-print('Yes' if a[0] == a[1] + a[2] else 'Yes' if a[1] == a[0] + a[2] else 'yes' if a[2] == a[0] + a[1] else 'No')\n```\n "
    },
    {
        "user_id": "u740284863",
        "problem_id": "p04019",
        "submission1_id": "s332643124",
        "crp_content": "\n k = str(input())\n \n \n n = 0\n w = 0\n s = 0\n e = 0\n for i in range(len(k)):\n     if k[i] == \"N\":\n         n += 1\n     elif k[i] == \"W\":\n         w += 1\n     elif k[i] == \"S\":\n         s += 1\n     else:\n         e += 1\n-if (n == 0 and s > 0) or (s == 0 and n > 0) or (e == 0 and w > 0) or (w == 0 and e > 0):\n     print(\"No\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n k = str(input())\n \n \n n = 0\n w = 0\n s = 0\n e = 0\n for i in range(len(k)):\n     if k[i] == \"N\":\n         n += 1\n     elif k[i] == \"W\":\n         w += 1\n     elif k[i] == \"S\":\n         s += 1\n     else:\n         e += 1\n-if (n == 0 and s > 0) or (s == 0 and n > 0) or (e == 0 and w > 0) or (w == 0 and e > 0):\n     print(\"No\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u681444474",
        "problem_id": "p03625",
        "submission1_id": "s923626047",
        "crp_content": "\n \n N=int(input())\n A=list(map(int,input().split()))\n A.sort(reverse=True)\n cnt=1\n ans=[]\n for i in range(N-1):\n     \n     if A[i]==A[i+1]:\n         cnt+=1\n     elif cnt>=2:\n-        ans.append(A[i-1])\n         cnt=1\n         if len(ans)==2:\n             break\n \n if len(ans)<=1:\n     print(0)\n else:\n     print(ans[0]*ans[1])\n",
        "origin_generated_text": "\n```\n \n N=int(input())\n A=list(map(int,input().split()))\n A.sort(reverse=True)\n cnt=1\n ans=[]\n for i in range(N-1):\n     \n     if A[i]==A[i+1]:\n         cnt+=1\n     elif cnt>=2:\n-        ans.append(A[i-1])\n         cnt=1\n         if len(ans)==2:\n             break\n \n if len(ans)<=1:\n     print(0)\n else:\n     print(ans[0]*ans[1])\n```\n "
    },
    {
        "user_id": "u528470578",
        "problem_id": "p02665",
        "submission1_id": "s914957160",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n \n ans, cnt, node = 0, sum(a), 1\n for i in range(n + 1):\n     ans += node\n-    if node <= 0:\n         print(-1)\n         break\n     cnt -= a[i]\n     node = min(cnt, (node - a[i]) * 2)\n else:\n     print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n \n ans, cnt, node = 0, sum(a), 1\n for i in range(n + 1):\n     ans += node\n-    if node <= 0:\n         print(-1)\n         break\n     cnt -= a[i]\n     node = min(cnt, (node - a[i]) * 2)\n else:\n     print(ans)\n \n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03343",
        "submission1_id": "s794503661",
        "crp_content": "\n import bisect\n n,k,q = map(int,input().split())\n a = list(map(int,input().split()))\n if q == 1:\n   print(0)\n   exit()\n ls = [-1,n]\n b = sorted(((a[i],i) for i in range(n)))\n ansls = [b[q-1][0]-b[0][0]]\n space = [n]\n qc = q\n for i,x in enumerate(b):\n   if n-i < k+q-1:\n     break\n   for j in range(i,n):\n     idx = bisect.bisect_left(ls,b[j][1])\n     if space[idx-1] < k:\n       continue\n     qc -= 1\n     space[idx-1] -= 1\n     if qc == 0:\n       ansls.append(b[j][0]-x[0])\n       break\n   ins = bisect.bisect_left(ls,i)\n   ls.insert(ins,x[1])\n   space = []\n   qc = q\n-  for j in range(1,i+3):\n     space.append(ls[j]-ls[j-1]-1)\n print(min(ansls))\n",
        "origin_generated_text": "\n```\n import bisect\n n,k,q = map(int,input().split())\n a = list(map(int,input().split()))\n if q == 1:\n   print(0)\n   exit()\n ls = [-1,n]\n b = sorted(((a[i],i) for i in range(n)))\n ansls = [b[q-1][0]-b[0][0]]\n space = [n]\n qc = q\n for i,x in enumerate(b):\n   if n-i < k+q-1:\n     break\n   for j in range(i,n):\n     idx = bisect.bisect_left(ls,b[j][1])\n     if space[idx-1] < k:\n       continue\n     qc -= 1\n     space[idx-1] -= 1\n     if qc == 0:\n       ansls.append(b[j][0]-x[0])\n       break\n   ins = bisect.bisect_left(ls,i)\n   ls.insert(ins,x[1])\n   space = []\n   qc = q\n-  for j in range(1,i+3):\n     space.append(ls[j]-ls[j-1]-1)\n print(min(ansls))\n```\n "
    },
    {
        "user_id": "u874333466",
        "problem_id": "p03106",
        "submission1_id": "s151490277",
        "crp_content": "\n A, B, K = map(int,input().split())\n \n count = 0\n \n-for i in range(1, min(A, B) + 1, 1):\n-  if A % i and B % i:\n-    count += 1\n-    \n-  if count == K:\n-    print(i)\n",
        "origin_generated_text": "\n```\n A, B, K = map(int,input().split())\n \n count = 0\n \n-for i in range(1, min(A, B) + 1, 1):\n-  if A % i and B % i:\n-    count += 1\n-    \n-  if count == K:\n-    print(i)\n```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03633",
        "submission1_id": "s161876678",
        "crp_content": "\n \n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a,b):\n   mi = min(a,b)\n   ma = max(a,b)\n   ans = 1\n   \n   while True:\n-    print(ma,mi)\n     if (ma % mi) == 0:\n       ans = mi\n       break\n     else:\n       mi = ma%mi\n       ma = mi\n       \n   return ans\n \n \n \n def lcm(a,b):\n   \n   g = gcd(a,b)\n-  print(g)\n   return int(a*b/g)\n ans = T[0]\n for i in range(1,len(T)):\n   ans = lcm(ans,T[i])\n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a,b):\n   mi = min(a,b)\n   ma = max(a,b)\n   ans = 1\n   \n   while True:\n-    print(ma,mi)\n     if (ma % mi) == 0:\n       ans = mi\n       break\n     else:\n       mi = ma%mi\n       ma = mi\n       \n   return ans\n \n \n \n def lcm(a,b):\n   \n   g = gcd(a,b)\n-  print(g)\n   return int(a*b/g)\n ans = T[0]\n for i in range(1,len(T)):\n   ans = lcm(ans,T[i])\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s594644708",
        "crp_content": "\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n-    d2 = math.fabs(ra + rb)\n \n     if d1 <= d2:\n-        if d1 < ra or d1 < rb:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n-    d2 = math.fabs(ra + rb)\n \n     if d1 <= d2:\n-        if d1 < ra or d1 < rb:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u819048695",
        "problem_id": "p03714",
        "submission1_id": "s724831910",
        "crp_content": "\n from heapq import heappop,heappush,heapify\n n=int(input())\n a=list(map(int,input().split()))\n left=[0]*n\n lst=a[:n]\n s=sum(lst)\n heapify(lst)\n for i in range(n):\n     heappush(lst,a[n+i])\n     x=heappop(lst)\n     if i==0:\n         left[0]=s+a[n]-x\n     else:\n         left[i]=left[i-1]+a[n+i]-x\n left=[s]+left\n right=[0]*n\n lst=[]\n for i in range(2*n,3*n):\n     lst.append(-a[i])\n s=-sum(lst)\n heapify(lst)\n for i in range(n):\n     heappush(lst,-a[2*n-1-i])\n     x=-heappop(lst)\n     if i==0:\n         right[n-1]=s+a[2*n-1]-x\n     else:\n         right[n-1-i]=right[n-i]+a[2*n-1-i]-x\n right+=[s]\n ans=-float(\"inf\")\n for i in range(n):\n     ans=max(ans,left[i]-right[i])\n print(ans)\n",
        "origin_generated_text": "\n```\n from heapq import heappop,heappush,heapify\n n=int(input())\n a=list(map(int,input().split()))\n left=[0]*n\n lst=a[:n]\n s=sum(lst)\n heapify(lst)\n for i in range(n):\n     heappush(lst,a[n+i])\n     x=heappop(lst)\n     if i==0:\n         left[0]=s+a[n]-x\n     else:\n         left[i]=left[i-1]+a[n+i]-x\n left=[s]+left\n right=[0]*n\n lst=[]\n for i in range(2*n,3*n):\n     lst.append(-a[i])\n s=-sum(lst)\n heapify(lst)\n for i in range(n):\n     heappush(lst,-a[2*n-1-i])\n     x=-heappop(lst)\n     if i==0:\n         right[n-1]=s+a[2*n-1]-x\n     else:\n         right[n-1-i]=right[n-i]+a[2*n-1-i]-x\n right+=[s]\n ans=-float(\"inf\")\n for i in range(n):\n     ans=max(ans,left[i]-right[i])\n print(ans)\n```\n "
    },
    {
        "user_id": "u514894322",
        "problem_id": "p02886",
        "submission1_id": "s119298528",
        "crp_content": "\n \n n=int(input())\n *l,=map(int,input().split())\n ans=0\n for i in range(n-1):\n   for j in range(i+1,n):\n     ans+=l[i]+l[j]\n print(ans)\n",
        "origin_generated_text": "\n```\n \n n=int(input())\n *l,=map(int,input().split())\n ans=0\n for i in range(n-1):\n   for j in range(i+1,n):\n     ans+=l[i]+l[j]\n print(ans)\n```\n "
    },
    {
        "user_id": "u164898518",
        "problem_id": "p03475",
        "submission1_id": "s191604475",
        "crp_content": "\n N = int(input())\n C = []\n S = []\n F = []\n for i in range(N-1):\n     c, s, f = map(int, input().split())\n     C.append(c)\n     S.append(s)\n     F.append(f)\n \n-for i in range(0, N-1):\n     t = S[i]\n     for j in range(i, N-1):\n         if t <= S[j]:\n             t = S[j]\n         else:\n             t += F[j] - t%F[j]\n         t += C[j]\n     print(t)\n print(0)\n",
        "origin_generated_text": "\n```\n N = int(input())\n C = []\n S = []\n F = []\n for i in range(N-1):\n     c, s, f = map(int, input().split())\n     C.append(c)\n     S.append(s)\n     F.append(f)\n \n-for i in range(0, N-1):\n     t = S[i]\n     for j in range(i, N-1):\n         if t <= S[j]:\n             t = S[j]\n         else:\n             t += F[j] - t%F[j]\n         t += C[j]\n     print(t)\n print(0)\n```\n "
    },
    {
        "user_id": "u266014018",
        "problem_id": "p02665",
        "submission1_id": "s752377186",
        "crp_content": "\n def main():\n     import sys\n     import math\n     input = sys.stdin.buffer.readline\n     n = int(input())\n     A = list(map(int, input().split()))\n     ans = 0\n     nodes = 0\n     for i in range(n,-1,-1):\n         if i == 0:\n             ans +=1 \n             break\n-        if math.ceil(nodes/2) + A[i] > 2**i:\n-           \n             print(-1)\n             exit(0)\n-        nodes += A[i]\n-        nodes = min(2**i,nodes)\n-        ans += nodes\n     print(ans)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n def main():\n     import sys\n     import math\n     input = sys.stdin.buffer.readline\n     n = int(input())\n     A = list(map(int, input().split()))\n     ans = 0\n     nodes = 0\n     for i in range(n,-1,-1):\n         if i == 0:\n             ans +=1 \n             break\n-        if math.ceil(nodes/2) + A[i] > 2**i:\n-           \n             print(-1)\n             exit(0)\n-        nodes += A[i]\n-        nodes = min(2**i,nodes)\n-        ans += nodes\n     print(ans)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u316464887",
        "problem_id": "p03714",
        "submission1_id": "s062626531",
        "crp_content": "\n import heapq\n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     fl = [i for i in A[:N]]\n     f = [sum(A[:N])]\n     heapq.heapify(fl)\n     ll = [-i for i in A[2*N:]]\n     l = [sum(A[2*N:])]\n     heapq.heapify(ll)\n     for i in range(N):\n         s = f[-1]\n         if A[N+i] > fl[0]:\n             s = s - fl[0] + A[N+i]\n             heapq.heappushpop(fl, A[N+i])\n         f.append(s)\n         s = l[-1]\n         if - A[2*N-1-i] > ll[0]:\n             s = s + ll[0] + A[2*N-1-i]\n             heapq.heappushpop(ll, -A[2*N-1-i])\n         l.append(s)\n     r = -pow(10, 100)\n-    for i in range(N):\n         r = max(r, f[i] - l[-1-i])\n     return r\n print(main())\n \n",
        "origin_generated_text": "\n```\n import heapq\n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     fl = [i for i in A[:N]]\n     f = [sum(A[:N])]\n     heapq.heapify(fl)\n     ll = [-i for i in A[2*N:]]\n     l = [sum(A[2*N:])]\n     heapq.heapify(ll)\n     for i in range(N):\n         s = f[-1]\n         if A[N+i] > fl[0]:\n             s = s - fl[0] + A[N+i]\n             heapq.heappushpop(fl, A[N+i])\n         f.append(s)\n         s = l[-1]\n         if - A[2*N-1-i] > ll[0]:\n             s = s + ll[0] + A[2*N-1-i]\n             heapq.heappushpop(ll, -A[2*N-1-i])\n         l.append(s)\n     r = -pow(10, 100)\n-    for i in range(N):\n         r = max(r, f[i] - l[-1-i])\n     return r\n print(main())\n \n```\n "
    },
    {
        "user_id": "u572002343",
        "problem_id": "p02880",
        "submission1_id": "s478144128",
        "crp_content": "\n-avail_numbers = [(i + 1) * (j + 1) for i, j in zip(range(9), range(9))]\n \n if int(input()) in avail_numbers:\n   print(\"Yes\")\n else:\n   print(\"No\")\n \n",
        "origin_generated_text": "\n```\n-avail_numbers = [(i + 1) * (j + 1) for i, j in zip(range(9), range(9))]\n \n if int(input()) in avail_numbers:\n   print(\"Yes\")\n else:\n   print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u433532588",
        "problem_id": "p02922",
        "submission1_id": "s675601682",
        "crp_content": "\n \n \n import sys\n input = sys.stdin.readline\n sys.setrecursionlimit(10**6)\n \n \n A, B = map(int, input().split())\n \n if A == B:\n     print(1)\n     exit()\n \n count = 1\n B -= A\n while True:\n     count += 1\n     if A > B:\n         print(count)\n         exit()\n \n-    B -= A\n",
        "origin_generated_text": "\n```\n \n \n import sys\n input = sys.stdin.readline\n sys.setrecursionlimit(10**6)\n \n \n A, B = map(int, input().split())\n \n if A == B:\n     print(1)\n     exit()\n \n count = 1\n B -= A\n while True:\n     count += 1\n     if A > B:\n         print(count)\n         exit()\n \n-    B -= A\n```\n "
    },
    {
        "user_id": "u125666426",
        "problem_id": "p03264",
        "submission1_id": "s041059636",
        "crp_content": "\n import math\n \n K = int(input())\n if K % 2 == 0:\n-    print((K / 2) ** 2)\n else:\n-    print((K / 2) * ((K / 2) + 1))\n",
        "origin_generated_text": "\n```\n import math\n \n K = int(input())\n if K % 2 == 0:\n-    print((K / 2) ** 2)\n else:\n-    print((K / 2) * ((K / 2) + 1))\n```\n "
    },
    {
        "user_id": "u252729807",
        "problem_id": "p04019",
        "submission1_id": "s875825842",
        "crp_content": "\n s = input()\n if 'N' in s and 'W' in s and 'S' in s and 'E' in s:\n     print('Yes')\n-elif 'N' in s and 'W' in s and 'S' not in s and 'E' not in s:\n     print('Yes')\n-elif 'N' not in s and 'W' not in s and 'S' in s and 'E' in s:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n s = input()\n if 'N' in s and 'W' in s and 'S' in s and 'E' in s:\n     print('Yes')\n-elif 'N' in s and 'W' in s and 'S' not in s and 'E' not in s:\n     print('Yes')\n-elif 'N' not in s and 'W' not in s and 'S' in s and 'E' in s:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u941407962",
        "problem_id": "p03343",
        "submission1_id": "s882685265",
        "crp_content": "\n N, K, Q = map(int, input().split())\n X = list(map(int, input().split()))\n Y = sorted(X)\n \n \n \n \n \n r = Y[Q-1] - Y[0]\n for y in Y[1:]:\n     tmp = []\n     tmp2 = []\n     for x in X:\n         if x < y:\n             tmp.sort()\n             tn = len(tmp)\n             if tn-K+1 > 0:\n                 tmp2 += tmp[:tn-K+1]\n             tmp = []\n             continue\n         tmp.append(x)\n     tmp2.sort()\n     if len(tmp2) >= Q:\n         r = min(r, tmp2[Q-1] - y)\n print(r)\n \n",
        "origin_generated_text": "\n```\n N, K, Q = map(int, input().split())\n X = list(map(int, input().split()))\n Y = sorted(X)\n \n \n \n \n \n r = Y[Q-1] - Y[0]\n for y in Y[1:]:\n     tmp = []\n     tmp2 = []\n     for x in X:\n         if x < y:\n             tmp.sort()\n             tn = len(tmp)\n             if tn-K+1 > 0:\n                 tmp2 += tmp[:tn-K+1]\n             tmp = []\n             continue\n         tmp.append(x)\n     tmp2.sort()\n     if len(tmp2) >= Q:\n         r = min(r, tmp2[Q-1] - y)\n print(r)\n \n```\n "
    },
    {
        "user_id": "u261103969",
        "problem_id": "p03952",
        "submission1_id": "s069861249",
        "crp_content": "\n import sys\n \n readline = sys.stdin.readline\n MOD = 10 ** 9 + 7\n INF = float('INF')\n sys.setrecursionlimit(10 ** 5)\n \n \n def main():\n     n, x = map(int, readline().split())\n     ans = [0] * (2 * n - 1)\n \n     if x == 1 or x == (2 * n - 1):\n-        print(-1)\n         return\n \n     for i in range(1, n + 1):\n         if i % 2 == 1:\n             ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n         else:\n             ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n     ans[n] = x\n \n     for i in range(n + 1, 2 * n):\n         if i % 2 == 0:\n             ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n         else:\n             ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n \n     print(*ans, sep=\"\\n\")\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n import sys\n \n readline = sys.stdin.readline\n MOD = 10 ** 9 + 7\n INF = float('INF')\n sys.setrecursionlimit(10 ** 5)\n \n \n def main():\n     n, x = map(int, readline().split())\n     ans = [0] * (2 * n - 1)\n \n     if x == 1 or x == (2 * n - 1):\n-        print(-1)\n         return\n \n     for i in range(1, n + 1):\n         if i % 2 == 1:\n             ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n         else:\n             ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n     ans[n] = x\n \n     for i in range(n + 1, 2 * n):\n         if i % 2 == 0:\n             ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n         else:\n             ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n \n     print(*ans, sep=\"\\n\")\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u019685451",
        "problem_id": "p02633",
        "submission1_id": "s030099739",
        "crp_content": "\n X = int(input())\n \n-for k in range(1, 361):\n     if ((180 - X) * k) % 360 == 0:\n         print(k)\n         break\n",
        "origin_generated_text": "\n```\n X = int(input())\n \n-for k in range(1, 361):\n     if ((180 - X) * k) % 360 == 0:\n         print(k)\n         break\n```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s806612982",
        "crp_content": "\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n P.sort(reverse=True)\n Q.sort(reverse=True)\n \n ans = 0\n v_nodes = W + 1\n h_nodes = H + 1\n while P or Q:\n     if not Q or (P and P[-1] < Q[-1]):\n         ans += P.pop() * h_nodes\n         v_nodes -= 1\n     else:\n         ans += Q.pop() * v_nodes\n         h_nodes -= 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n import os\n import sys\n \n if os.getenv(\"LOCAL\"):\n     sys.stdin = open(\"_in.txt\", \"r\")\n \n sys.setrecursionlimit(2147483647)\n INF = float(\"inf\")\n IINF = 10 ** 18\n MOD = 10 ** 9 + 7\n \n H, W = list(map(int, sys.stdin.readline().split()))\n P = [int(sys.stdin.readline()) for _ in range(W)]\n Q = [int(sys.stdin.readline()) for _ in range(H)]\n \n P.sort(reverse=True)\n Q.sort(reverse=True)\n \n ans = 0\n v_nodes = W + 1\n h_nodes = H + 1\n while P or Q:\n     if not Q or (P and P[-1] < Q[-1]):\n         ans += P.pop() * h_nodes\n         v_nodes -= 1\n     else:\n         ans += Q.pop() * v_nodes\n         h_nodes -= 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u936985471",
        "problem_id": "p03970",
        "submission1_id": "s479565829",
        "crp_content": "\n-a=\"C0DEFESTIVAL2O16\"\n s=input()\n ans=0\n for i in range(len(a)):\n   if a[i]!=s[i]:\n     ans+=1\n print(ans)\n",
        "origin_generated_text": "\n```\n-a=\"C0DEFESTIVAL2O16\"\n s=input()\n ans=0\n for i in range(len(a)):\n   if a[i]!=s[i]:\n     ans+=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u142023109",
        "problem_id": "p03796",
        "submission1_id": "s017517087",
        "crp_content": "\n N = int(input())\n \n ans = 1\n for i in range(1,N+1):\n-    ans = (ans%(1000000007)) * i\n \n-print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n ans = 1\n for i in range(1,N+1):\n-    ans = (ans%(1000000007)) * i\n \n-print(ans)\n \n```\n "
    },
    {
        "user_id": "u238876549",
        "problem_id": "p03303",
        "submission1_id": "s218713674",
        "crp_content": "\n \n strings=[input() for string in range(2)]\n string=strings[0]\n num=int(strings[1])\n i=0\n check=True\n \n while check:\n     s=string[i:i+num]\n-    if len(s)<num:\n         check=False\n     print(s)\n     i=i+num\n",
        "origin_generated_text": "\n```\n \n strings=[input() for string in range(2)]\n string=strings[0]\n num=int(strings[1])\n i=0\n check=True\n \n while check:\n     s=string[i:i+num]\n-    if len(s)<num:\n         check=False\n     print(s)\n     i=i+num\n```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s123383134",
        "crp_content": "\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = {}\n for i in range(N):\n     C[i] = int(input())\n     if not C[i] in dic:\n         dic[C[i]] = [ i ]\n     else:\n         dic[C[i]].append(i)\n \n dp = [0] * N\n dp[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1]\n     if C[i] == C[i-1]:\n         continue\n     for prev in dic[C[i]]:\n         if prev < i:\n-            if prev > 0:\n                 dp[i] += dp[prev-1]\n             else:\n                 dp[i] += 1\n         dp[i] %= mod\n \n print(dp[N-1] % mod)\n",
        "origin_generated_text": "\n```\n N = int(input())\n C = [0] * N\n mod = 10 ** 9 + 7\n dic = {}\n for i in range(N):\n     C[i] = int(input())\n     if not C[i] in dic:\n         dic[C[i]] = [ i ]\n     else:\n         dic[C[i]].append(i)\n \n dp = [0] * N\n dp[0] = 1\n for i in range(1,N):\n     dp[i] = dp[i-1]\n     if C[i] == C[i-1]:\n         continue\n     for prev in dic[C[i]]:\n         if prev < i:\n-            if prev > 0:\n                 dp[i] += dp[prev-1]\n             else:\n                 dp[i] += 1\n         dp[i] %= mod\n \n print(dp[N-1] % mod)\n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03959",
        "submission1_id": "s748200265",
        "crp_content": "\n n=int(input())\n t=[int(j) for j in input().split()]\n a=[int(j) for j in input().split()]\n tmp=0\n l=[]\n for i in t:\n     if tmp<i:\n         l.append(-i)\n         tmp=i\n     else:\n         l.append(i)\n tmp=0\n ans=1\n mod=10**9+7\n for i in range(n)[::-1]:\n     if tmp<a[i]:\n         if l[i]>=a[i]:\n             tmp=a[i]\n         else:\n             if l[i]>0:\n                 print(0)\n                 exit()\n     else:\n         if l[i]>0:\n-            ans=(ans*min(a[i],l[i]))%mod\n print(ans)\n",
        "origin_generated_text": "\n```\n n=int(input())\n t=[int(j) for j in input().split()]\n a=[int(j) for j in input().split()]\n tmp=0\n l=[]\n for i in t:\n     if tmp<i:\n         l.append(-i)\n         tmp=i\n     else:\n         l.append(i)\n tmp=0\n ans=1\n mod=10**9+7\n for i in range(n)[::-1]:\n     if tmp<a[i]:\n         if l[i]>=a[i]:\n             tmp=a[i]\n         else:\n             if l[i]>0:\n                 print(0)\n                 exit()\n     else:\n         if l[i]>0:\n-            ans=(ans*min(a[i],l[i]))%mod\n print(ans)\n```\n "
    },
    {
        "user_id": "u923172145",
        "problem_id": "p02633",
        "submission1_id": "s668552665",
        "crp_content": "\n X = int(input())\n \n K = 1\n-dire = X\n while True:\n-  if (dire % 180) == 0:\n     break\n   K+=1\n-  dire+=X\n \n   \n print(K)\n",
        "origin_generated_text": "\n```\n X = int(input())\n \n K = 1\n-dire = X\n while True:\n-  if (dire % 180) == 0:\n     break\n   K+=1\n-  dire+=X\n \n   \n print(K)\n```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p00026",
        "submission1_id": "s344383441",
        "crp_content": "\n t = [[0 for i in range(10)] for j in range(10)]\n case1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\n case2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\n case3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     for c in [case1, case2, case3][:s]:\n         for _x, _y in c:\n             try:\n                 t[y+_y][x+_x] += 1\n             except IndexError:\n                 continue\n print(sum(1 for l in t for v in l if not v))\n print(max(v for l in t for v in l))\n",
        "origin_generated_text": "\n```\n t = [[0 for i in range(10)] for j in range(10)]\n case1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\n case2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\n case3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     for c in [case1, case2, case3][:s]:\n         for _x, _y in c:\n             try:\n                 t[y+_y][x+_x] += 1\n             except IndexError:\n                 continue\n print(sum(1 for l in t for v in l if not v))\n print(max(v for l in t for v in l))\n```\n "
    },
    {
        "user_id": "u480200603",
        "problem_id": "p02912",
        "submission1_id": "s676564889",
        "crp_content": "\n import heapq, math\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n ar = [-i for i in a]\n heapq.heapify(ar)\n \n while m > 0:\n     discount = heapq.heappop(ar)\n     heapq.heappush(ar, discount/2)\n     m -= 1\n \n-print(math.floor(-sum(ar)))\n \n",
        "origin_generated_text": "\n```\n import heapq, math\n n, m = map(int, input().split())\n a = list(map(int, input().split()))\n ar = [-i for i in a]\n heapq.heapify(ar)\n \n while m > 0:\n     discount = heapq.heappop(ar)\n     heapq.heappush(ar, discount/2)\n     m -= 1\n \n-print(math.floor(-sum(ar)))\n \n```\n "
    },
    {
        "user_id": "u977661421",
        "problem_id": "p03760",
        "submission1_id": "s551383921",
        "crp_content": "\n \n \n o = list(input())\n e = list(input())\n \n if len(o) == len(e):\n-    for i in range(len(o) - 1):\n-        print(o[i], end = '')\n-        print(e[i], end = '')\n-    print(o[len(o) - 1], end = '')\n-    print(e[len(e) - 1])\n \n for i in range(min(len(o), len(e))):\n     print(o[i], end = '')\n     print(e[i], end = '')\n if len(e) > len(o):\n     print(e[len(e) - 1])\n if len(o) < len(e):\n     print(o[len(o) - 1])\n \n",
        "origin_generated_text": "\n```\n \n \n o = list(input())\n e = list(input())\n \n if len(o) == len(e):\n-    for i in range(len(o) - 1):\n-        print(o[i], end = '')\n-        print(e[i], end = '')\n-    print(o[len(o) - 1], end = '')\n-    print(e[len(e) - 1])\n \n for i in range(min(len(o), len(e))):\n     print(o[i], end = '')\n     print(e[i], end = '')\n if len(e) > len(o):\n     print(e[len(e) - 1])\n if len(o) < len(e):\n     print(o[len(o) - 1])\n \n```\n "
    },
    {
        "user_id": "u504256702",
        "problem_id": "p02730",
        "submission1_id": "s123530775",
        "crp_content": "\n S = input()\n n = len(S)\n \n \n-if S[:int((n-1)/2)] == S[:int((n-1)/2)][::-1] and S[int((n+1)/2):]== S[int((n+1)/2):][::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n S = input()\n n = len(S)\n \n \n-if S[:int((n-1)/2)] == S[:int((n-1)/2)][::-1] and S[int((n+1)/2):]== S[int((n+1)/2):][::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u552533086",
        "problem_id": "p02699",
        "submission1_id": "s799973620",
        "crp_content": "\n S, W = map(int, input().split())\n-S = int(S / 2)\n \n-if S < W:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n",
        "origin_generated_text": "\n```\n S, W = map(int, input().split())\n-S = int(S / 2)\n \n-if S < W:\n     print(\"unsafe\")\n else:\n     print(\"safe\")\n```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p04017",
        "submission1_id": "s009716954",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n x = list(map(int, input().split()))\n L = int(input())\n n = N.bit_length()\n next_hotel = [[0]*n for _ in range(N)]\n for i in range(N):\n     index = bisect_right(x, x[i]+L)-1\n     \n     next_hotel[i][0] = index\n for i in range(1, n):\n     for j in range(N):\n         next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\n def count(a, b):\n     if a>b:\n         a, b = b, a\n     res = 0\n     for i in range(n):\n         if a == b:\n             return  res\n         c = bisect_right(next_hotel[a], b)-1\n         a = next_hotel[a][c]\n         res+=2**c\n Q = int(input())\n for _ in range(Q):\n     a, b = map(int, input().split())\n-    print(count(a-1, b-1))\n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n x = list(map(int, input().split()))\n L = int(input())\n n = N.bit_length()\n next_hotel = [[0]*n for _ in range(N)]\n for i in range(N):\n     index = bisect_right(x, x[i]+L)-1\n     \n     next_hotel[i][0] = index\n for i in range(1, n):\n     for j in range(N):\n         next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\n def count(a, b):\n     if a>b:\n         a, b = b, a\n     res = 0\n     for i in range(n):\n         if a == b:\n             return  res\n         c = bisect_right(next_hotel[a], b)-1\n         a = next_hotel[a][c]\n         res+=2**c\n Q = int(input())\n for _ in range(Q):\n     a, b = map(int, input().split())\n-    print(count(a-1, b-1))\n```\n "
    },
    {
        "user_id": "u663958857",
        "problem_id": "p02917",
        "submission1_id": "s459864427",
        "crp_content": "\n def main():\n     n = int(input())\n     array = list(map(int, input().split()))\n     sum_value = array[-1]\n     for i in reversed(range(n-1)):\n-        if array[i - 1] <= array[i]:\n-            sum_value += array[i - 1]\n-        else:\n-            array[i - 1] = array[i]\n-            sum_value += array[i - 1]\n     print(sum_value)\n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     n = int(input())\n     array = list(map(int, input().split()))\n     sum_value = array[-1]\n     for i in reversed(range(n-1)):\n-        if array[i - 1] <= array[i]:\n-            sum_value += array[i - 1]\n-        else:\n-            array[i - 1] = array[i]\n-            sum_value += array[i - 1]\n     print(sum_value)\n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u168333670",
        "problem_id": "p02880",
        "submission1_id": "s634521435",
        "crp_content": "\n N = int(input())\n \n able = False\n for i in range(1, 10):\n     for j in range(1, 10):\n         if N == i * j:\n             able = True\n             break\n     if able == True:\n         break\n \n if able == True:\n-    print('YES')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N = int(input())\n \n able = False\n for i in range(1, 10):\n     for j in range(1, 10):\n         if N == i * j:\n             able = True\n             break\n     if able == True:\n         break\n \n if able == True:\n-    print('YES')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u927357863",
        "problem_id": "p02640",
        "submission1_id": "s241914799",
        "crp_content": "\n X, Y = map(int, input().split())\n \n-crane = (4 * X - Y) / 2\n-\n-\n-def is_integer_num(n):\n-    if isinstance(n, int):\n-        return True\n-    if isinstance(n, float):\n-        return n.is_integer()\n-    return False\n-\n-\n-if is_integer_num(crane) and crane > 0:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n X, Y = map(int, input().split())\n \n-crane = (4 * X - Y) / 2\n-\n-\n-def is_integer_num(n):\n-    if isinstance(n, int):\n-        return True\n-    if isinstance(n, float):\n-        return n.is_integer()\n-    return False\n-\n-\n-if is_integer_num(crane) and crane > 0:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u161164709",
        "problem_id": "p02580",
        "submission1_id": "s251761174",
        "crp_content": "\n \n \n h, w, m = map(int, input().split())\n hw_array = [list(map(int, input().split())) for _ in range(m)]\n \n h_array = [0]*h\n w_array = [0]*w\n \n for hw in hw_array:\n     h, w = hw\n     h_array[h - 1] += 1\n     w_array[w - 1] += 1\n \n h_max = max(h_array)\n h_argmax_array = [i for i in h_array if i == h_max]\n w_max = max(w_array)\n w_argmax_array = [j for j in w_array if j == w_max]\n \n flag = False\n for h_argmax in h_argmax_array:\n     for w_argmax in w_argmax_array:\n         if not [h_argmax + 1, w_argmax + 1] in hw_array:\n             flag = True\n             break\n \n ans = h_max + w_max\n if not flag:\n     ans -= 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n \n \n h, w, m = map(int, input().split())\n hw_array = [list(map(int, input().split())) for _ in range(m)]\n \n h_array = [0]*h\n w_array = [0]*w\n \n for hw in hw_array:\n     h, w = hw\n     h_array[h - 1] += 1\n     w_array[w - 1] += 1\n \n h_max = max(h_array)\n h_argmax_array = [i for i in h_array if i == h_max]\n w_max = max(w_array)\n w_argmax_array = [j for j in w_array if j == w_max]\n \n flag = False\n for h_argmax in h_argmax_array:\n     for w_argmax in w_argmax_array:\n         if not [h_argmax + 1, w_argmax + 1] in hw_array:\n             flag = True\n             break\n \n ans = h_max + w_max\n if not flag:\n     ans -= 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u247976584",
        "problem_id": "p02281",
        "submission1_id": "s707945101",
        "crp_content": "\n from collections import namedtuple\n \n class TreeWalk:\n     def __init__(self, t):\n         self.t = t\n \n     def preParse(self, u):\n         if u == -1:\n             return \n         print(\" \", str(u), end = \"\")\n         self.preParse(self.t[u].l)\n         self.preParse(self.t[u].r)\n \n     def inParse(self, u):\n         if u == -1:\n             return \n         self.inParse(self.t[u].l)\n         print(\" \", str(u), end = \"\")\n         self.inParse(self.t[u].r)\n \n     def postParse(self, u):\n         if u == -1:\n             return \n-        self.inParse(self.t[u].l)\n-        self.inParse(self.t[u].r)\n         print(\" \", str(u), end = \"\")\n     \n if __name__ == '__main__':\n     n = int(input().rstrip())\n     Node = namedtuple('Node', ['p', 'l', 'r'])\n     t = [Node(-1, -1, -1)] * n\n     root = -1\n     for i in range(n):\n         v, l, r = [int(i) for i in input().rstrip().split(\" \")]\n         t[v] = t[v]._replace(l = l, r = r)\n         if l != -1:\n             t[l] = t[l]._replace(p = v)\n         if r != -1:\n             t[r] = t[r]._replace(p = v)\n     for i in range(n):\n         if (t[i].p == -1):\n             root = i\n \n     x = TreeWalk(t)\n     print(\"Preorder\")\n     x.preParse(root)\n     print()\n     print(\"Inorder\")\n     x.inParse(root)\n     print()\n     print(\"Postorder\")\n     x.postParse(root)\n",
        "origin_generated_text": "\n```\n from collections import namedtuple\n \n class TreeWalk:\n     def __init__(self, t):\n         self.t = t\n \n     def preParse(self, u):\n         if u == -1:\n             return \n         print(\" \", str(u), end = \"\")\n         self.preParse(self.t[u].l)\n         self.preParse(self.t[u].r)\n \n     def inParse(self, u):\n         if u == -1:\n             return \n         self.inParse(self.t[u].l)\n         print(\" \", str(u), end = \"\")\n         self.inParse(self.t[u].r)\n \n     def postParse(self, u):\n         if u == -1:\n             return \n-        self.inParse(self.t[u].l)\n-        self.inParse(self.t[u].r)\n         print(\" \", str(u), end = \"\")\n     \n if __name__ == '__main__':\n     n = int(input().rstrip())\n     Node = namedtuple('Node', ['p', 'l', 'r'])\n     t = [Node(-1, -1, -1)] * n\n     root = -1\n     for i in range(n):\n         v, l, r = [int(i) for i in input().rstrip().split(\" \")]\n         t[v] = t[v]._replace(l = l, r = r)\n         if l != -1:\n             t[l] = t[l]._replace(p = v)\n         if r != -1:\n             t[r] = t[r]._replace(p = v)\n     for i in range(n):\n         if (t[i].p == -1):\n             root = i\n \n     x = TreeWalk(t)\n     print(\"Preorder\")\n     x.preParse(root)\n     print()\n     print(\"Inorder\")\n     x.inParse(root)\n     print()\n     print(\"Postorder\")\n     x.postParse(root)\n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s407361684",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u264632995",
        "problem_id": "p02407",
        "submission1_id": "s657346479",
        "crp_content": "\n input()\n a = input().split()\n \n-print(a)\n a.reverse()\n print(\" \".join(a))\n",
        "origin_generated_text": "\n```\n input()\n a = input().split()\n \n-print(a)\n a.reverse()\n print(\" \".join(a))\n```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03264",
        "submission1_id": "s868645901",
        "crp_content": "\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n def lcm(x, y):\n     return (x * y) \n \n if __name__ == '__main__':\n     a = [int(i) for i in input().split()]\n \n     if a[0] %2 ==1:\n-        print(a[0]*(a[0]-1))\n     else:\n-        print(a[0]*(a[0]))\n \n",
        "origin_generated_text": "\n```\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n def lcm(x, y):\n     return (x * y) \n \n if __name__ == '__main__':\n     a = [int(i) for i in input().split()]\n \n     if a[0] %2 ==1:\n-        print(a[0]*(a[0]-1))\n     else:\n-        print(a[0]*(a[0]))\n \n```\n "
    },
    {
        "user_id": "u044632922",
        "problem_id": "p03264",
        "submission1_id": "s294311700",
        "crp_content": "\n k=int(input())\n if k%2==0:\n-  print(k/2*k/2)\n else:\n   print(int(((k-1)/2+1)*(k-1)/2))\n",
        "origin_generated_text": "\n```\n k=int(input())\n if k%2==0:\n-  print(k/2*k/2)\n else:\n   print(int(((k-1)/2+1)*(k-1)/2))\n```\n "
    },
    {
        "user_id": "u546074985",
        "problem_id": "p03303",
        "submission1_id": "s842855549",
        "crp_content": "\n st = input()\n skpe = int(input())\n st_len = len(st)\n count = st_len \n top_list = []\n \n for i in range(count):\n     top_list.append(st[3 * i:3 * i + 3])\n \n \n for x in top_list:\n     try:\n         print(x[0], end=\"\")\n     except IndexError:\n         pass\n \n",
        "origin_generated_text": "\n```\n st = input()\n skpe = int(input())\n st_len = len(st)\n count = st_len \n top_list = []\n \n for i in range(count):\n     top_list.append(st[3 * i:3 * i + 3])\n \n \n for x in top_list:\n     try:\n         print(x[0], end=\"\")\n     except IndexError:\n         pass\n \n```\n "
    },
    {
        "user_id": "u397384480",
        "problem_id": "p03965",
        "submission1_id": "s760305680",
        "crp_content": "\n import bisect\n import collections\n import copy\n import functools\n import heapq\n import math\n import sys\n from collections import deque\n from collections import defaultdict\n input = sys.stdin.readline\n MOD = 10**9+7\n \n s = list(input().rstrip())\n g = 0\n p = 0\n res = []\n ans = 0\n \n for i in range(len(s)):\n     c = g-p\n     if s[i] == \"g\":\n         if c > 0:\n             \n             p += 1\n             ans += 1\n         else:\n             \n             g += 1\n     else:\n         \n         p += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n import bisect\n import collections\n import copy\n import functools\n import heapq\n import math\n import sys\n from collections import deque\n from collections import defaultdict\n input = sys.stdin.readline\n MOD = 10**9+7\n \n s = list(input().rstrip())\n g = 0\n p = 0\n res = []\n ans = 0\n \n for i in range(len(s)):\n     c = g-p\n     if s[i] == \"g\":\n         if c > 0:\n             \n             p += 1\n             ans += 1\n         else:\n             \n             g += 1\n     else:\n         \n         p += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u282652245",
        "problem_id": "p02718",
        "submission1_id": "s238116946",
        "crp_content": "\n NM = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n count = 0\n sumA = sum(A)\n-board = sumA \n \n \n \n \n \n for i in range(len(A)):\n-    if A[i] > board:\n         count += 1\n     else:\n         continue\n \n \n-if count >= NM[1]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n NM = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n count = 0\n sumA = sum(A)\n-board = sumA \n \n \n \n \n \n for i in range(len(A)):\n-    if A[i] > board:\n         count += 1\n     else:\n         continue\n \n \n-if count >= NM[1]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p03079",
        "submission1_id": "s167662321",
        "crp_content": "\n A = list(map(int,input().split()))\n-if A[0] + A[1] > A[2]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n",
        "origin_generated_text": "\n```\n A = list(map(int,input().split()))\n-if A[0] + A[1] > A[2]:\n     print(\"Yes\")\n else:\n     print(\"No\")\n```\n "
    },
    {
        "user_id": "u430771494",
        "problem_id": "p03479",
        "submission1_id": "s792242129",
        "crp_content": "\n X,Y=list(map(int, input().split()))\n present=[X]\n i=0\n-while present[i]<Y:\n     present.append(present[i]*2)\n     i=i+1\n \n print(len(present)-1)\n",
        "origin_generated_text": "\n```\n X,Y=list(map(int, input().split()))\n present=[X]\n i=0\n-while present[i]<Y:\n     present.append(present[i]*2)\n     i=i+1\n \n print(len(present)-1)\n```\n "
    },
    {
        "user_id": "u095478438",
        "problem_id": "p02959",
        "submission1_id": "s952938654",
        "crp_content": "\n N = int(input())\n A_list = list(map(int, input().split()))\n B_list = list(map(int, input().split()))\n \n A_0 = A_list.pop(0)\n \n \n A_list[0] = A_list[0] + A_0\n \n \n taos = 0\n nokori = 0\n keep = 0\n \n for i, (a, b) in enumerate(zip(A_list, B_list)):\n   if i == 0:\n     if a >= b:\n       taos += b\n     else:\n       taos += b-a\n   else: \n     if (a + nokori) >= (b + keep) :\n       taos += (b + keep)\n       nokori = (a + nokori) - (b + keep)\n       keep = 0\n     else:\n       taos += (a + nokori)\n       nokori = 0\n       keep = (b + keep) - (a + nokori)\n  \n print(taos)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A_list = list(map(int, input().split()))\n B_list = list(map(int, input().split()))\n \n A_0 = A_list.pop(0)\n \n \n A_list[0] = A_list[0] + A_0\n \n \n taos = 0\n nokori = 0\n keep = 0\n \n for i, (a, b) in enumerate(zip(A_list, B_list)):\n   if i == 0:\n     if a >= b:\n       taos += b\n     else:\n       taos += b-a\n   else: \n     if (a + nokori) >= (b + keep) :\n       taos += (b + keep)\n       nokori = (a + nokori) - (b + keep)\n       keep = 0\n     else:\n       taos += (a + nokori)\n       nokori = 0\n       keep = (b + keep) - (a + nokori)\n  \n print(taos)\n```\n "
    },
    {
        "user_id": "u583285098",
        "problem_id": "p02665",
        "submission1_id": "s636931553",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n last = A[-1]\n count = last\n root = 1\n for i in range(N):\n-  if i+1 == N and root > A[i+1]:\n-    root = last + A[i]\n-  elif root > (last + A[i+1])*2:\n-    root = (last + A[i+1])*2\n   count+=root\n-  root = (root-A[i])*2\n-  if root < A[i+1]:\n     print(-1)\n     break\n else:\n   print(count)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n last = A[-1]\n count = last\n root = 1\n for i in range(N):\n-  if i+1 == N and root > A[i+1]:\n-    root = last + A[i]\n-  elif root > (last + A[i+1])*2:\n-    root = (last + A[i+1])*2\n   count+=root\n-  root = (root-A[i])*2\n-  if root < A[i+1]:\n     print(-1)\n     break\n else:\n   print(count)\n \n```\n "
    },
    {
        "user_id": "u508141157",
        "problem_id": "p03760",
        "submission1_id": "s034953432",
        "crp_content": "\n o=list(input())\n e=list(input())\n-for i,j in zip(o,e):print(i+j,end=\"\")\n",
        "origin_generated_text": "\n```\n o=list(input())\n e=list(input())\n-for i,j in zip(o,e):print(i+j,end=\"\")\n```\n "
    },
    {
        "user_id": "u138577439",
        "problem_id": "p02243",
        "submission1_id": "s737418505",
        "crp_content": "\n V=int(input())\n \n G=[[] for i in range(V)]\n d=[1001001001 for i in range(V)]\n \n import heapq\n \n def dijkstra(s):\n     q=[]\n     d[s]=0\n     heapq.heappush(q,(0, s))\n     \n     while(len(q)):\n-        print(q)\n         p=heapq.heappop(q)\n         v=p[1]\n         if d[v]<p[0]:\n             continue\n         for e in G[v]:\n             if d[e[0]]>d[v]+e[1]:\n                 d[e[0]]=d[v]+e[1]\n                 \n                 heapq.heappush(q, (d[e[0]], e[0]))\n \n import sys\n for l in sys.stdin:\n     l=list(map(int,l.split()))\n     u=l[0]\n     k=l[1]\n     G[u]=zip(*[iter(l[2:])]*2)\n     \n dijkstra(0)\n for i in range(V):\n     print(i, d[i])\n     \n \n     \n",
        "origin_generated_text": "\n```\n V=int(input())\n \n G=[[] for i in range(V)]\n d=[1001001001 for i in range(V)]\n \n import heapq\n \n def dijkstra(s):\n     q=[]\n     d[s]=0\n     heapq.heappush(q,(0, s))\n     \n     while(len(q)):\n-        print(q)\n         p=heapq.heappop(q)\n         v=p[1]\n         if d[v]<p[0]:\n             continue\n         for e in G[v]:\n             if d[e[0]]>d[v]+e[1]:\n                 d[e[0]]=d[v]+e[1]\n                 \n                 heapq.heappush(q, (d[e[0]], e[0]))\n \n import sys\n for l in sys.stdin:\n     l=list(map(int,l.split()))\n     u=l[0]\n     k=l[1]\n     G[u]=zip(*[iter(l[2:])]*2)\n     \n dijkstra(0)\n for i in range(V):\n     print(i, d[i])\n     \n \n     \n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s571426162",
        "crp_content": "\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)**2 + (ay * by)**2\n-    if d < abs(br - ar):\n-        if ar > br:\n             print(2)\n         else:\n             print(-2)\n-    elif d <= ar + br:\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)**2 + (ay * by)**2\n-    if d < abs(br - ar):\n-        if ar > br:\n             print(2)\n         else:\n             print(-2)\n-    elif d <= ar + br:\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u854175276",
        "problem_id": "p02886",
        "submission1_id": "s348742076",
        "crp_content": "\n n = int(input())\n d = list(map(int, input().split()))\n ans = 0\n for i in range(n - 1):\n   for j in range(i + 1, n):\n-    print(i, j)\n     ans += d[i] * d[j]\n print(ans)\n     \n",
        "origin_generated_text": "\n```\n n = int(input())\n d = list(map(int, input().split()))\n ans = 0\n for i in range(n - 1):\n   for j in range(i + 1, n):\n-    print(i, j)\n     ans += d[i] * d[j]\n print(ans)\n     \n```\n "
    },
    {
        "user_id": "u867763103",
        "problem_id": "p02887",
        "submission1_id": "s442780225",
        "crp_content": "\n def solve():\n     N = int(input())\n     S = input()\n \n     ans = 1\n     pre = S[0]\n-    for i in range(2,int(len(S))):\n         if S[i] != pre:\n             ans += 1\n             pre = S[i]\n     \n     print(ans)\n \n solve()\n",
        "origin_generated_text": "\n```\n def solve():\n     N = int(input())\n     S = input()\n \n     ans = 1\n     pre = S[0]\n-    for i in range(2,int(len(S))):\n         if S[i] != pre:\n             ans += 1\n             pre = S[i]\n     \n     print(ans)\n \n solve()\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s298574570",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and last_i > 0:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     s = s * 2\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hash = 0\n     for x in t:\n         hash = (hash * 26 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     for i in range(lens):\n         if i >= lent:\n             h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n         h = (h * 26 + cx(s[i])) % MOD\n         if h == hash:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and last_i > 0:\n                 cnt = 0\n                 f = True\n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u214434454",
        "problem_id": "p03477",
        "submission1_id": "s963705782",
        "crp_content": "\n a, b, c, d = map(int, input().split())\n if a + b > c + d:\n-    print(\"left\")\n elif a + b == c + d:\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n",
        "origin_generated_text": "\n```\n a, b, c, d = map(int, input().split())\n if a + b > c + d:\n-    print(\"left\")\n elif a + b == c + d:\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n```\n "
    },
    {
        "user_id": "u396391104",
        "problem_id": "p03970",
        "submission1_id": "s771540514",
        "crp_content": "\n S = input()\n T = \"CODEFESTIVAL2016\"\n ans = 0\n \n for i in range(len(S)):\n-  if S[i] == T[i]:\n     ans += 1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n T = \"CODEFESTIVAL2016\"\n ans = 0\n \n for i in range(len(S)):\n-  if S[i] == T[i]:\n     ans += 1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u905510147",
        "problem_id": "p03633",
        "submission1_id": "s242129472",
        "crp_content": "\n import sys\n sys.setrecursionlimit(100000)\n \n N = int(input())\n T = []\n for i in range(N):\n     T.append(int(input()))\n \n def gcd(a, b):\n     while b:\n         a, b = b, a % b\n     return a\n \n lcm = 1\n for i in T:\n     lcm = lcm * i / gcd(lcm, i)\n \n-print(lcm)\n",
        "origin_generated_text": "\n```\n import sys\n sys.setrecursionlimit(100000)\n \n N = int(input())\n T = []\n for i in range(N):\n     T.append(int(input()))\n \n def gcd(a, b):\n     while b:\n         a, b = b, a % b\n     return a\n \n lcm = 1\n for i in T:\n     lcm = lcm * i / gcd(lcm, i)\n \n-print(lcm)\n```\n "
    },
    {
        "user_id": "u115877451",
        "problem_id": "p03477",
        "submission1_id": "s765001388",
        "crp_content": "\n a,b,c,d=map(int,input().split())\n if a+b>c+d:\n-  print('Right')\n elif (a+b)==(c+d):\n   print('Balanced')\n else:\n-  print('Left')\n  \n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int,input().split())\n if a+b>c+d:\n-  print('Right')\n elif (a+b)==(c+d):\n   print('Balanced')\n else:\n-  print('Left')\n  \n```\n "
    },
    {
        "user_id": "u688055251",
        "problem_id": "p03080",
        "submission1_id": "s739370397",
        "crp_content": "\n N=int(input())\n-s=input().split()\n y=0\n v=0\n for i in s:\n     if i=='R':\n         y+=1\n     else:\n         v+=1\n if y>v:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N=int(input())\n-s=input().split()\n y=0\n v=0\n for i in s:\n     if i=='R':\n         y+=1\n     else:\n         v+=1\n if y>v:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03752",
        "submission1_id": "s127943507",
        "crp_content": "\n import copy\n \n N,K = map(int,input().split())\n A = list(map(int,input().split()))\n \n-ans = [10 ** 12 for i in range(2 ** (N - 1))]\n-seen = 1  \n \n for i in range(2 ** (N - 1)):\n   AA = copy.deepcopy(A)\n   cost = 0\n   con = 0\n   for j in range(N - 1):\n     m = max(AA[:j + 1])\n     a = AA[j + 1]\n     if ((i >> j) & 1) and a <= m:\n       cost += (m - a + 1)\n       AA[j + 1] = m + 1\n       con += 1\n     if con == K - 1:\n       break\n   \n   if len([AA[i] for i in range(1,N) if AA[i] > A[0]]) >= K - 1:\n     ans[i] = cost\n   \n print(min(ans))\n",
        "origin_generated_text": "\n```\n import copy\n \n N,K = map(int,input().split())\n A = list(map(int,input().split()))\n \n-ans = [10 ** 12 for i in range(2 ** (N - 1))]\n-seen = 1  \n \n for i in range(2 ** (N - 1)):\n   AA = copy.deepcopy(A)\n   cost = 0\n   con = 0\n   for j in range(N - 1):\n     m = max(AA[:j + 1])\n     a = AA[j + 1]\n     if ((i >> j) & 1) and a <= m:\n       cost += (m - a + 1)\n       AA[j + 1] = m + 1\n       con += 1\n     if con == K - 1:\n       break\n   \n   if len([AA[i] for i in range(1,N) if AA[i] > A[0]]) >= K - 1:\n     ans[i] = cost\n   \n print(min(ans))\n```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p02912",
        "submission1_id": "s535721522",
        "crp_content": "\n from sys import stdin\n import heapq\n \n \n def main():\n     N, M = [int(x) for x in stdin.readline().rstrip().split()]\n     As = []\n     for i in [int(x) for x in stdin.readline().rstrip().split()]:\n         heapq.heappush(As, i)\n     for _ in range(M):\n         x = heapq.heappop(As)\n-        heapq.heappush(As, x / 2)\n     print(sum([int(x) for x in As]))\n \n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n from sys import stdin\n import heapq\n \n \n def main():\n     N, M = [int(x) for x in stdin.readline().rstrip().split()]\n     As = []\n     for i in [int(x) for x in stdin.readline().rstrip().split()]:\n         heapq.heappush(As, i)\n     for _ in range(M):\n         x = heapq.heappop(As)\n-        heapq.heappush(As, x / 2)\n     print(sum([int(x) for x in As]))\n \n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u082945913",
        "problem_id": "p02660",
        "submission1_id": "s842535380",
        "crp_content": "\n import math\n n = int(input())\n N = n\n \n if(n == 1):\n     print(0)\n     exit()\n \n yakusu = []\n multi = []\n \n i = 2\n while(i <= int(math.sqrt(N))):\n     \n     if(n % i == 0):\n         if(i in yakusu):\n             multi[yakusu.index(i)] += 1\n         else:\n             yakusu.append(i)\n             multi.append(1)\n         n = int(n / i)\n         continue\n     \n     if(n == 1):\n         break\n     \n     i += 1\n \n if(len(yakusu) == 0):\n     yakusu.append(n)\n     multi.append(1)\n     \n ans = 0\n \n for j in range(len(multi)):\n-    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n     ans += int(h)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n import math\n n = int(input())\n N = n\n \n if(n == 1):\n     print(0)\n     exit()\n \n yakusu = []\n multi = []\n \n i = 2\n while(i <= int(math.sqrt(N))):\n     \n     if(n % i == 0):\n         if(i in yakusu):\n             multi[yakusu.index(i)] += 1\n         else:\n             yakusu.append(i)\n             multi.append(1)\n         n = int(n / i)\n         continue\n     \n     if(n == 1):\n         break\n     \n     i += 1\n \n if(len(yakusu) == 0):\n     yakusu.append(n)\n     multi.append(1)\n     \n ans = 0\n \n for j in range(len(multi)):\n-    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n     ans += int(h)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u790710233",
        "problem_id": "p02633",
        "submission1_id": "s620363982",
        "crp_content": "\n x = int(input())\n \n for n in range(1, 10000):\n-    k, y = divmod(360*n, (180-x))\n-    if y == 0:\n         print(k)\n         break\n \n",
        "origin_generated_text": "\n```\n x = int(input())\n \n for n in range(1, 10000):\n-    k, y = divmod(360*n, (180-x))\n-    if y == 0:\n         print(k)\n         break\n \n```\n "
    },
    {
        "user_id": "u366939485",
        "problem_id": "p02922",
        "submission1_id": "s524697124",
        "crp_content": "\n a, b = (int(i) for i in input().split())\n count = 0\n while True:\n-    b -= a\n-    count += 1\n-    if b <= 0: break\n-    b -= 1\n print(count)\n",
        "origin_generated_text": "\n```\n a, b = (int(i) for i in input().split())\n count = 0\n while True:\n-    b -= a\n-    count += 1\n-    if b <= 0: break\n-    b -= 1\n print(count)\n```\n "
    },
    {
        "user_id": "u467736898",
        "problem_id": "p03959",
        "submission1_id": "s825004808",
        "crp_content": "\n mod = 10**9 + 7\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n Min = [1] * N\n Max = [float(\"inf\")] * N\n tp = 0\n for i, t in enumerate(T):\n     if t != tp:\n         Min[i] = max(Min[i], t)\n     Max[i] = min(Max[i], t)\n     tp = t\n ap = 0\n for i, a in zip(range(N-1, -1, -1), A[::-1]):\n     if a != ap:\n         Min[i] = max(Min[i], a)\n     Max[i] = min(Max[i], a)\n     ap = a\n ans = 1\n for mi, ma in zip(Min, Max):\n-    ans = ans * (ma-mi+1) % mod\n print(ans)\n \n",
        "origin_generated_text": "\n```\n mod = 10**9 + 7\n N = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n Min = [1] * N\n Max = [float(\"inf\")] * N\n tp = 0\n for i, t in enumerate(T):\n     if t != tp:\n         Min[i] = max(Min[i], t)\n     Max[i] = min(Max[i], t)\n     tp = t\n ap = 0\n for i, a in zip(range(N-1, -1, -1), A[::-1]):\n     if a != ap:\n         Min[i] = max(Min[i], a)\n     Max[i] = min(Max[i], a)\n     ap = a\n ans = 1\n for mi, ma in zip(Min, Max):\n-    ans = ans * (ma-mi+1) % mod\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u764860452",
        "problem_id": "p03479",
        "submission1_id": "s010449043",
        "crp_content": "\n X,Y=map(int,input().split())\n \n cnt=0\n-while(X<Y):\n     X*=2\n     cnt+=1\n print(cnt)\n",
        "origin_generated_text": "\n```\n X,Y=map(int,input().split())\n \n cnt=0\n-while(X<Y):\n     X*=2\n     cnt+=1\n print(cnt)\n```\n "
    },
    {
        "user_id": "u912164574",
        "problem_id": "p03479",
        "submission1_id": "s215915684",
        "crp_content": "\n \n \n \n def main(min_limit, max_limit):\n     result = []\n     i = min_limit\n \n     while(i < max_limit + 1):\n         result.append(i)\n         i = i * 2\n-    print(len(result))\n-    print(result)\n \n \n if __name__ == \"__main__\":\n     min_limit, max_limit = [int(val) for val in input().split()]\n     main(min_limit, max_limit)\n",
        "origin_generated_text": "\n```\n \n \n \n def main(min_limit, max_limit):\n     result = []\n     i = min_limit\n \n     while(i < max_limit + 1):\n         result.append(i)\n         i = i * 2\n-    print(len(result))\n-    print(result)\n \n \n if __name__ == \"__main__\":\n     min_limit, max_limit = [int(val) for val in input().split()]\n     main(min_limit, max_limit)\n```\n "
    },
    {
        "user_id": "u281334626",
        "problem_id": "p02718",
        "submission1_id": "s386099712",
        "crp_content": "\n N, M = map(int, input().split())\n A = list(map(int, input().split()))\n  \n sum_A =0\n for i in range(N):\n     sum_A += A[i]\n  \n ans = 1\n for i in range(N):\n-    if (4*M*A[i] < sum_A):\n         ans= ans*1\n     else:\n     \tans =ans*0\n  \n if (ans != 0):\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n A = list(map(int, input().split()))\n  \n sum_A =0\n for i in range(N):\n     sum_A += A[i]\n  \n ans = 1\n for i in range(N):\n-    if (4*M*A[i] < sum_A):\n         ans= ans*1\n     else:\n     \tans =ans*0\n  \n if (ans != 0):\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u917013605",
        "problem_id": "p03102",
        "submission1_id": "s225893945",
        "crp_content": "\n n, m , c = map(int, input().split())\n b_li = list(map(int, input().split()))\n ans = 0\n for i in range(n):\n     a_li = list(map(int, input().split()))\n-    if (0 < a * b + c for a, b in zip(a_li, b_li)):\n         ans += 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n n, m , c = map(int, input().split())\n b_li = list(map(int, input().split()))\n ans = 0\n for i in range(n):\n     a_li = list(map(int, input().split()))\n-    if (0 < a * b + c for a, b in zip(a_li, b_li)):\n         ans += 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u864197622",
        "problem_id": "p03677",
        "submission1_id": "s760253586",
        "crp_content": "\n from itertools import accumulate\n def acc(X): return list(accumulate(X))\n \n N, M = map(int, input().split())\n A = [int(a)-1 for a in input().split()]\n \n X = [0] * M \n Y = [0] * M \n \n def tri(l, r, a = 1):\n     if l < M:\n         Y[l] += a\n     if r + 1 < M:\n         Y[r+1] -= a\n         X[r+1] -= (r-l+1) * a\n \n def box(l, r, a = 1):\n     if l < M:\n         X[l] += a\n     if r + 1< M:\n         X[r+1] -= a\n     \n def calc(a, b):\n     if a <= b - 2:\n         tri(a+2, b)\n     elif a > b and a <= b + M - 2:\n         tri(a+1, M-1)\n         tri(0, b)\n         box(0, b, b-a-1)\n \n ans = 0\n for i in range(1, N):\n     ans += (A[i] - A[i-1]) % M\n     calc(A[i-1], A[i])\n \n Y = acc(Y)\n X = [X[i] + Y[i] for i in range(M)]\n X = acc(X)\n \n-ans -= max(X)\n print(ans)\n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n def acc(X): return list(accumulate(X))\n \n N, M = map(int, input().split())\n A = [int(a)-1 for a in input().split()]\n \n X = [0] * M \n Y = [0] * M \n \n def tri(l, r, a = 1):\n     if l < M:\n         Y[l] += a\n     if r + 1 < M:\n         Y[r+1] -= a\n         X[r+1] -= (r-l+1) * a\n \n def box(l, r, a = 1):\n     if l < M:\n         X[l] += a\n     if r + 1< M:\n         X[r+1] -= a\n     \n def calc(a, b):\n     if a <= b - 2:\n         tri(a+2, b)\n     elif a > b and a <= b + M - 2:\n         tri(a+1, M-1)\n         tri(0, b)\n         box(0, b, b-a-1)\n \n ans = 0\n for i in range(1, N):\n     ans += (A[i] - A[i-1]) % M\n     calc(A[i-1], A[i])\n \n Y = acc(Y)\n X = [X[i] + Y[i] for i in range(M)]\n X = acc(X)\n \n-ans -= max(X)\n print(ans)\n```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02287",
        "submission1_id": "s800126504",
        "crp_content": "\n n = int(input())\n H = list(map(int, input().split(' ')))\n \n for i in range(n):\n     node = i+1\n     key = H[i]\n-    parent = H[int(node/2)] if node != 1 else None\n-    left = H[node*2-1] if node*2 <= n else None\n-    right = H[node*2] if node*2+1 <= n else None\n     print('node %d: key = %d,'%(node, key), end='')\n     if parent != None: print(' parent key = %d,'%parent, end='')\n     if left != None: print(' left key = %d,'%left, end='')\n     if right != None: print(' right key = %d,'%right, end='')\n     print('')\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n H = list(map(int, input().split(' ')))\n \n for i in range(n):\n     node = i+1\n     key = H[i]\n-    parent = H[int(node/2)] if node != 1 else None\n-    left = H[node*2-1] if node*2 <= n else None\n-    right = H[node*2] if node*2+1 <= n else None\n     print('node %d: key = %d,'%(node, key), end='')\n     if parent != None: print(' parent key = %d,'%parent, end='')\n     if left != None: print(' left key = %d,'%left, end='')\n     if right != None: print(' right key = %d,'%right, end='')\n     print('')\n \n```\n "
    },
    {
        "user_id": "u875361824",
        "problem_id": "p03296",
        "submission1_id": "s755452833",
        "crp_content": "\n def main():\n     \n     N = int(input())\n     *A, = map(int, input().split())\n \n     \n     ans = 0\n     i = 0\n     while i < N:\n-        if A[i-1] == A[i]:\n             ans += 1\n             i += 2\n         else:\n             i += 1\n     print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     \n     N = int(input())\n     *A, = map(int, input().split())\n \n     \n     ans = 0\n     i = 0\n     while i < N:\n-        if A[i-1] == A[i]:\n             ans += 1\n             i += 2\n         else:\n             i += 1\n     print(ans)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u043424727",
        "problem_id": "p03959",
        "submission1_id": "s425516946",
        "crp_content": "\n \n \n def main():\n     N = int(input())\n     t = list(map(int, input().split()))\n     a = list(reversed(list(map(int, input().split()))))\n \n     m = [0] * N\n \n     b = 0\n     for i,h in enumerate(t):\n         if b != h:\n             m[i] = h\n         b = h\n     b = 0\n     for j,h in enumerate(a):\n         if b != h:\n             if m[N-j-1] != 0 and m[N-j-1] != h:\n                 print(0)\n                 return\n             else:\n                 m[N-j-1] = h\n         b = h\n     res = 1\n     for k,h in enumerate(m):\n         if h == 0:\n-            print(a[N-k-1], t[k])\n             res = res * min(a[N-k-1], t[k]) % (pow(10, 9) + 7)\n     print(res)\n \n main()\n \n",
        "origin_generated_text": "\n```\n \n \n def main():\n     N = int(input())\n     t = list(map(int, input().split()))\n     a = list(reversed(list(map(int, input().split()))))\n \n     m = [0] * N\n \n     b = 0\n     for i,h in enumerate(t):\n         if b != h:\n             m[i] = h\n         b = h\n     b = 0\n     for j,h in enumerate(a):\n         if b != h:\n             if m[N-j-1] != 0 and m[N-j-1] != h:\n                 print(0)\n                 return\n             else:\n                 m[N-j-1] = h\n         b = h\n     res = 1\n     for k,h in enumerate(m):\n         if h == 0:\n-            print(a[N-k-1], t[k])\n             res = res * min(a[N-k-1], t[k]) % (pow(10, 9) + 7)\n     print(res)\n \n main()\n \n```\n "
    },
    {
        "user_id": "u453815934",
        "problem_id": "p02886",
        "submission1_id": "s364858162",
        "crp_content": "\n import math\n import sys\n from collections import deque\n import heapq\n import copy\n import itertools\n from itertools import permutations\n def mi() : return map(int,sys.stdin.readline().split())\n def ii() : return int(sys.stdin.readline().rstrip())\n def i() : return sys.stdin.readline().rstrip()\n a=ii()\n l=list(mi())\n s=0\n t=0\n for i in l:\n   s+=i\n   t+=i**2\n-print(s**2-t)\n",
        "origin_generated_text": "\n```\n import math\n import sys\n from collections import deque\n import heapq\n import copy\n import itertools\n from itertools import permutations\n def mi() : return map(int,sys.stdin.readline().split())\n def ii() : return int(sys.stdin.readline().rstrip())\n def i() : return sys.stdin.readline().rstrip()\n a=ii()\n l=list(mi())\n s=0\n t=0\n for i in l:\n   s+=i\n   t+=i**2\n-print(s**2-t)\n```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p03563",
        "submission1_id": "s465535063",
        "crp_content": "\n R = int(input())\n G = int(input())\n-print(3*G -2*R)\n",
        "origin_generated_text": "\n```\n R = int(input())\n G = int(input())\n-print(3*G -2*R)\n```\n "
    },
    {
        "user_id": "u678167152",
        "problem_id": "p03096",
        "submission1_id": "s857388528",
        "crp_content": "\n from collections import defaultdict\n from bisect import *\n def solve():\n     d = defaultdict(lambda: [])\n     N = int(input())\n     for i in range(N):\n         a = int(input())\n         d[a].append(i)\n     selist = []\n     for l in d.values():\n         for i in range(len(l)-1):\n             if l[i+1]-1>l[i]:\n                 selist.append([l[i],l[i+1]])\n     start_sort = sorted(selist)\n     e_ind = {}\n     for i,(s,e) in enumerate(start_sort):\n         e_ind[e] = i\n     ends = list(e_ind.keys())\n     ends.sort()\n     dp = [0]*(len(selist)+1)\n     for i in range(1,len(selist)+1):\n         dp[i] = dp[i-1]+1\n-        ind = bisect_right(ends,selist[i-1][0])\n-        if ind>0:\n-            j = e_ind[ends[ind-1]]\n-            dp[i] += dp[j+1]\n     ans = dp[-1]+1\n     return ans\n print(solve())\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n from bisect import *\n def solve():\n     d = defaultdict(lambda: [])\n     N = int(input())\n     for i in range(N):\n         a = int(input())\n         d[a].append(i)\n     selist = []\n     for l in d.values():\n         for i in range(len(l)-1):\n             if l[i+1]-1>l[i]:\n                 selist.append([l[i],l[i+1]])\n     start_sort = sorted(selist)\n     e_ind = {}\n     for i,(s,e) in enumerate(start_sort):\n         e_ind[e] = i\n     ends = list(e_ind.keys())\n     ends.sort()\n     dp = [0]*(len(selist)+1)\n     for i in range(1,len(selist)+1):\n         dp[i] = dp[i-1]+1\n-        ind = bisect_right(ends,selist[i-1][0])\n-        if ind>0:\n-            j = e_ind[ends[ind-1]]\n-            dp[i] += dp[j+1]\n     ans = dp[-1]+1\n     return ans\n print(solve())\n```\n "
    },
    {
        "user_id": "u771710924",
        "problem_id": "p02553",
        "submission1_id": "s096502721",
        "crp_content": "\n a = list(map(int, input().split()))\n ans = -float('inf')\n for i, v in enumerate(a):\n-  for j in a[i + 1:]:\n     ans = max(ans, v * j)\n print(ans)\n",
        "origin_generated_text": "\n```\n a = list(map(int, input().split()))\n ans = -float('inf')\n for i, v in enumerate(a):\n-  for j in a[i + 1:]:\n     ans = max(ans, v * j)\n print(ans)\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s277494570",
        "crp_content": "\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hsh = 0\n     for x in t:\n         hsh = (hsh * 27 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     i = 0\n     while True:\n         if i >= lent:\n             h -= cx(s[(i - lent)%lens]) * pow(27,lent-1,MOD)\n         h = (h * 27 + cx(s[i % lens])) % MOD\n         if h == hsh:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and ans > 0:\n                 cnt = 0\n                 f = True\n         if i > lens*2 and i > lent:\n             break\n         i += 1\n \n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys,queue,math,copy,itertools,bisect,collections,heapq\n \n def main():\n     MOD = 2**61-1\n     SI = lambda : sys.stdin.readline().rstrip()\n \n     s = SI()\n     t = SI()\n     lens = len(s)\n     lent = len(t)\n \n     def cx(x):\n         return ord(x) - ord('a') + 1\n \n     hsh = 0\n     for x in t:\n         hsh = (hsh * 27 + cx(x)) % MOD\n \n     cnt = 0\n     f = False\n     h = 0\n     last_i = 0\n     ans = 0\n     i = 0\n     while True:\n         if i >= lent:\n             h -= cx(s[(i - lent)%lens]) * pow(27,lent-1,MOD)\n         h = (h * 27 + cx(s[i % lens])) % MOD\n         if h == hsh:\n             cnt += 1\n             ans = max(ans,cnt)\n             last_i = i\n         else:\n             if i - last_i >= lent and ans > 0:\n                 cnt = 0\n                 f = True\n         if i > lens*2 and i > lent:\n             break\n         i += 1\n \n     if f or ans == 0:\n         print(ans)\n     else:\n         print(-1)\n \n if __name__ == '__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u611090896",
        "problem_id": "p02922",
        "submission1_id": "s261376288",
        "crp_content": "\n import math\n A,B = map(int,input().split())\n-print(math.ceil(B/A))\n",
        "origin_generated_text": "\n```\n import math\n A,B = map(int,input().split())\n-print(math.ceil(B/A))\n```\n "
    },
    {
        "user_id": "u132434645",
        "problem_id": "p03343",
        "submission1_id": "s350195074",
        "crp_content": "\n n, k, q = map(int, input().split())\n a = [int(x) for x in input().split()]\n m = None\n for x in a:\n     b = []\n     c = []\n     for y in a:\n         if y < x:\n             if len(c) > k:\n                 c.sort()\n                 b.extend(c[:len(c) - k + 1])\n             c = []\n         else:\n             c.append(y)\n     if len(c) > k:\n         c.sort()\n         b.extend(c[:len(c) - k + 1])\n     if len(b) >= q:\n         b.sort()\n         if m is None or m > b[q - 1]: m = b[q - 1] - x\n print(m)\n \n",
        "origin_generated_text": "\n```\n n, k, q = map(int, input().split())\n a = [int(x) for x in input().split()]\n m = None\n for x in a:\n     b = []\n     c = []\n     for y in a:\n         if y < x:\n             if len(c) > k:\n                 c.sort()\n                 b.extend(c[:len(c) - k + 1])\n             c = []\n         else:\n             c.append(y)\n     if len(c) > k:\n         c.sort()\n         b.extend(c[:len(c) - k + 1])\n     if len(b) >= q:\n         b.sort()\n         if m is None or m > b[q - 1]: m = b[q - 1] - x\n print(m)\n \n```\n "
    },
    {
        "user_id": "u092278825",
        "problem_id": "p03970",
        "submission1_id": "s495087607",
        "crp_content": "\n S = input()\n s = \"CODEFESTIVAL2016\"\n c = 0\n-for i in range (15):\n   if S[i]!= s[i]:\n     c += 1\n     \n print(c)\n",
        "origin_generated_text": "\n```\n S = input()\n s = \"CODEFESTIVAL2016\"\n c = 0\n-for i in range (15):\n   if S[i]!= s[i]:\n     c += 1\n     \n print(c)\n```\n "
    },
    {
        "user_id": "u934566927",
        "problem_id": "p02718",
        "submission1_id": "s638700361",
        "crp_content": "\n a,a1 = input().split()\n b = input().split()\n sum = 0\n for _ in b:\n     sum += int(_)\n-if int(b[int(a1) - 1]) < sum/4:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n",
        "origin_generated_text": "\n```\n a,a1 = input().split()\n b = input().split()\n sum = 0\n for _ in b:\n     sum += int(_)\n-if int(b[int(a1) - 1]) < sum/4:\n     print(\"Yes\")\n else:\n     print(\"No\")\n \n```\n "
    },
    {
        "user_id": "u825027400",
        "problem_id": "p03103",
        "submission1_id": "s462617945",
        "crp_content": "\n N, M = map(int, input().split())\n \n shop_dic = {}\n for _ in range(N):\n     a, b = map(int, input().split())\n     shop_dic[a] = b\n \n total = 0\n for a in sorted(shop_dic.keys()):\n     b = shop_dic[a]\n-    if M < b:\n         total += a * M\n         break\n     else:\n         total += a * b\n         M -= b\n print(total)\n \n",
        "origin_generated_text": "\n```\n N, M = map(int, input().split())\n \n shop_dic = {}\n for _ in range(N):\n     a, b = map(int, input().split())\n     shop_dic[a] = b\n \n total = 0\n for a in sorted(shop_dic.keys()):\n     b = shop_dic[a]\n-    if M < b:\n         total += a * M\n         break\n     else:\n         total += a * b\n         M -= b\n print(total)\n \n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03300",
        "submission1_id": "s547021953",
        "crp_content": "\n from itertools import accumulate\n \n \n def search_ab(sss, cursor):\n     \n     ai = aaa.index(cursor)\n     tmp_cur = bbb[ai]\n     max_cur = sss.index(0, cursor)\n     repeat = 1\n     while tmp_cur < max_cur:\n         cur = s.find('a', tmp_cur, max_cur)\n         if cur == -1:\n             tmp_cur = max_cur\n             break\n         ai = aaa.index(cur)\n         tmp_cur = bbb[ai]\n         repeat += 1\n     return repeat, tmp_cur + 1\n \n \n def search_ba(sss, cursor):\n     \n     first_bi = bbb.index(cursor)\n     last_cursor = sss.index(0, cursor)\n     last_bi = aaa.index(last_cursor)\n \n     tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n     tmp_max = ''\n     for i in range(last_bi, first_bi - 1, -1):\n         tmp_buf[aaa[i] - cursor] = 'a'\n         tmp_buf[bbb[i] - cursor] = 'b'\n         tmp = ''.join(tmp_buf)\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max, last_cursor + 1\n \n \n def integrate(parts_b):\n     tmp_max = ''\n     for pb in reversed(parts_b):\n         tmp = pb + tmp_max\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max\n \n \n n = int(input())\n s = input()\n \n n2 = n * 2\n sss = []\n aaa, bbb = [], []\n for i, c in enumerate(s):\n     if c == 'a':\n         aaa.append(i)\n         sss.append(-1)\n     else:\n         bbb.append(i)\n         sss.append(1)\n sss = list(accumulate(sss))\n repeat_a = 0\n parts_b = []\n cursor = 0\n while cursor < n2:\n     c = sss[cursor]\n     if c < 0:\n         repeat, cursor = search_ab(sss, cursor)\n         repeat_a += repeat\n     else:\n         tmp, cursor = search_ba(sss, cursor)\n         parts_b.append(tmp)\n if parts_b:\n     print(integrate(parts_b))\n else:\n-    print('ab' * repeat_a)\n \n",
        "origin_generated_text": "\n```\n from itertools import accumulate\n \n \n def search_ab(sss, cursor):\n     \n     ai = aaa.index(cursor)\n     tmp_cur = bbb[ai]\n     max_cur = sss.index(0, cursor)\n     repeat = 1\n     while tmp_cur < max_cur:\n         cur = s.find('a', tmp_cur, max_cur)\n         if cur == -1:\n             tmp_cur = max_cur\n             break\n         ai = aaa.index(cur)\n         tmp_cur = bbb[ai]\n         repeat += 1\n     return repeat, tmp_cur + 1\n \n \n def search_ba(sss, cursor):\n     \n     first_bi = bbb.index(cursor)\n     last_cursor = sss.index(0, cursor)\n     last_bi = aaa.index(last_cursor)\n \n     tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n     tmp_max = ''\n     for i in range(last_bi, first_bi - 1, -1):\n         tmp_buf[aaa[i] - cursor] = 'a'\n         tmp_buf[bbb[i] - cursor] = 'b'\n         tmp = ''.join(tmp_buf)\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max, last_cursor + 1\n \n \n def integrate(parts_b):\n     tmp_max = ''\n     for pb in reversed(parts_b):\n         tmp = pb + tmp_max\n         if tmp > tmp_max:\n             tmp_max = tmp\n     return tmp_max\n \n \n n = int(input())\n s = input()\n \n n2 = n * 2\n sss = []\n aaa, bbb = [], []\n for i, c in enumerate(s):\n     if c == 'a':\n         aaa.append(i)\n         sss.append(-1)\n     else:\n         bbb.append(i)\n         sss.append(1)\n sss = list(accumulate(sss))\n repeat_a = 0\n parts_b = []\n cursor = 0\n while cursor < n2:\n     c = sss[cursor]\n     if c < 0:\n         repeat, cursor = search_ab(sss, cursor)\n         repeat_a += repeat\n     else:\n         tmp, cursor = search_ba(sss, cursor)\n         parts_b.append(tmp)\n if parts_b:\n     print(integrate(parts_b))\n else:\n-    print('ab' * repeat_a)\n \n```\n "
    },
    {
        "user_id": "u976420902",
        "problem_id": "p02633",
        "submission1_id": "s405458206",
        "crp_content": "\n from math import ceil\n x = int(input())\n-print(ceil(360/x))\n \n",
        "origin_generated_text": "\n```\n from math import ceil\n x = int(input())\n-print(ceil(360/x))\n \n```\n "
    },
    {
        "user_id": "u682153677",
        "problem_id": "p02385",
        "submission1_id": "s418882082",
        "crp_content": "\n \n \n \n class Dice:\n     def __init__(self, n):\n         self.upper    = n[0]\n         self.backward = n[1]\n         self.right    = n[2]\n         self.left     = n[3]\n         self.ahead    = n[4]\n         self.bottom   = n[5]\n \n     def roll_north(self):\n         self.upper, self.ahead, self.bottom, self.backward = self.backward, self.upper, self.ahead, self.bottom\n \n     def roll_south(self):\n         self.upper, self.ahead, self.bottom, self.backward = self.ahead, self.bottom, self.backward, self.upper\n \n     def roll_east(self):\n         self.upper, self.right, self.bottom, self.left = self.left, self.upper, self.right, self.bottom\n \n     def roll_west(self):\n         self.upper, self.right, self.bottom, self.left = self.right, self.bottom, self.left, self.upper\n \n     def roll_side(self):\n         self.ahead, self.right, self.backward, self.left = self.left, self.ahead, self.right, self.backward\n \n \n def match_dice(dice1, dice2):\n     for i in range(4):\n         dice1.roll_north()\n \n         for j in range(4):\n             dice1.roll_east()\n \n             for k in range(4):\n                 dice1.roll_side()\n \n-                if dice1 is dice2:\n-                    return 0\n-    return 1\n \n \n dice1 = Dice(list(map(int, input().split())))\n dice2 = Dice(list(map(int, input().split())))\n result = match_dice(dice1, dice2)\n \n if result is 0:\n     print('Yes')\n else:\n     print('No')\n     \n \n",
        "origin_generated_text": "\n```\n \n \n \n class Dice:\n     def __init__(self, n):\n         self.upper    = n[0]\n         self.backward = n[1]\n         self.right    = n[2]\n         self.left     = n[3]\n         self.ahead    = n[4]\n         self.bottom   = n[5]\n \n     def roll_north(self):\n         self.upper, self.ahead, self.bottom, self.backward = self.backward, self.upper, self.ahead, self.bottom\n \n     def roll_south(self):\n         self.upper, self.ahead, self.bottom, self.backward = self.ahead, self.bottom, self.backward, self.upper\n \n     def roll_east(self):\n         self.upper, self.right, self.bottom, self.left = self.left, self.upper, self.right, self.bottom\n \n     def roll_west(self):\n         self.upper, self.right, self.bottom, self.left = self.right, self.bottom, self.left, self.upper\n \n     def roll_side(self):\n         self.ahead, self.right, self.backward, self.left = self.left, self.ahead, self.right, self.backward\n \n \n def match_dice(dice1, dice2):\n     for i in range(4):\n         dice1.roll_north()\n \n         for j in range(4):\n             dice1.roll_east()\n \n             for k in range(4):\n                 dice1.roll_side()\n \n-                if dice1 is dice2:\n-                    return 0\n-    return 1\n \n \n dice1 = Dice(list(map(int, input().split())))\n dice2 = Dice(list(map(int, input().split())))\n result = match_dice(dice1, dice2)\n \n if result is 0:\n     print('Yes')\n else:\n     print('No')\n     \n \n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s860031279",
        "crp_content": "\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n-  if cou > 0 and lis[i] == \"g\":\n-    cou -= 1\n-    ans += 1\n   else:\n-    cou += 1\n-    if lis[i] == \"p\":\n-      ans -= 1\n print(ans)\n",
        "origin_generated_text": "\n```\n lis = list(input())\n cou = 0\n ans = 0\n for i in range(len(lis)):\n-  if cou > 0 and lis[i] == \"g\":\n-    cou -= 1\n-    ans += 1\n   else:\n-    cou += 1\n-    if lis[i] == \"p\":\n-      ans -= 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u249218427",
        "problem_id": "p02556",
        "submission1_id": "s461037170",
        "crp_content": "\n N = int(input())\n \n XY_max = -10**10\n XY_min = 10**10\n YX_max = -10**10\n YX_min = 10**10\n \n for _ in range(N):\n   x,y = map(int, input().split())\n   XY_max = max(XY_max,x+y)\n   XY_min = min(XY_min,x+y)\n   YX_max = max(YX_max,x-y)\n-  YX_min = max(YX_min,x-y)\n \n print(max(XY_max-XY_min,YX_max-YX_min))\n",
        "origin_generated_text": "\n```\n N = int(input())\n \n XY_max = -10**10\n XY_min = 10**10\n YX_max = -10**10\n YX_min = 10**10\n \n for _ in range(N):\n   x,y = map(int, input().split())\n   XY_max = max(XY_max,x+y)\n   XY_min = min(XY_min,x+y)\n   YX_max = max(YX_max,x-y)\n-  YX_min = max(YX_min,x-y)\n \n print(max(XY_max-XY_min,YX_max-YX_min))\n```\n "
    },
    {
        "user_id": "u936035004",
        "problem_id": "p03943",
        "submission1_id": "s490246821",
        "crp_content": "\n a,b,c = map(int,input().split())\n if a+b==c:\n-\tprint(\"YES\")\n elif b+c==a:\n-\tprint(\"YES\")\n elif a+c==b:\n-\tprint(\"YES\")\n else:\n-\tprint(\"NO\")\n",
        "origin_generated_text": "\n```\n a,b,c = map(int,input().split())\n if a+b==c:\n-\tprint(\"YES\")\n elif b+c==a:\n-\tprint(\"YES\")\n elif a+c==b:\n-\tprint(\"YES\")\n else:\n-\tprint(\"NO\")\n```\n "
    },
    {
        "user_id": "u279493135",
        "problem_id": "p03318",
        "submission1_id": "s465268223",
        "crp_content": "\n import sys, re\n from collections import deque, defaultdict, Counter\n from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\n from itertools import permutations, combinations, product\n from operator import itemgetter, mul\n from copy import deepcopy\n from string import ascii_lowercase, ascii_uppercase, digits\n \n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n sys.setrecursionlimit(10 ** 9)\n INF = float('inf')\n MOD = 10 ** 9 + 7\n \n K = INT()\n \n if K <= 9:\n \tfor i in range(1, K+1):\n \t\tprint(i)\n else:\n \tfor i in range(1, 10):\n \t\tprint(i)\n-\tfor i in range(1, K-8):\n-\t\tprint(10*i + 9)\n",
        "origin_generated_text": "\n```\n import sys, re\n from collections import deque, defaultdict, Counter\n from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\n from itertools import permutations, combinations, product\n from operator import itemgetter, mul\n from copy import deepcopy\n from string import ascii_lowercase, ascii_uppercase, digits\n \n def input(): return sys.stdin.readline().strip()\n def INT(): return int(input())\n def MAP(): return map(int, input().split())\n def LIST(): return list(map(int, input().split()))\n sys.setrecursionlimit(10 ** 9)\n INF = float('inf')\n MOD = 10 ** 9 + 7\n \n K = INT()\n \n if K <= 9:\n \tfor i in range(1, K+1):\n \t\tprint(i)\n else:\n \tfor i in range(1, 10):\n \t\tprint(i)\n-\tfor i in range(1, K-8):\n-\t\tprint(10*i + 9)\n```\n "
    },
    {
        "user_id": "u647634615",
        "problem_id": "p02385",
        "submission1_id": "s695248762",
        "crp_content": "\n dice_1 = input().split()\n dice_2 = input().split()\n \n rolls = {' ':[0, 1, 2, 3, 4, 5], \n          'W':[2, 1, 5, 0, 4, 3], \n          'N':[1, 5, 2, 3, 0, 4], \n          'E':[3, 1, 0, 5, 4, 2], \n          'S':[4, 0, 2, 3, 5, 1]\n         }\n orders = [' ', 'N', 'W', 'E', 'S', 'SS']\n tf = 0\n for order in orders:\n     for d in order:\n         roll = rolls[d]\n         copy_2 = [dice_2[i] for i in roll]\n     \n     l = [1, 2, 4, 3]\n     a0 = copy_2[0] == dice_1[0]\n     a1 = copy_2[5] == dice_1[5]\n     a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n     if  a0 and a1 and a2:\n         tf += 1\n     else:\n-        print(order)\n-        print(dice_1)\n-        print(copy_2)\n \n if tf>0:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n dice_1 = input().split()\n dice_2 = input().split()\n \n rolls = {' ':[0, 1, 2, 3, 4, 5], \n          'W':[2, 1, 5, 0, 4, 3], \n          'N':[1, 5, 2, 3, 0, 4], \n          'E':[3, 1, 0, 5, 4, 2], \n          'S':[4, 0, 2, 3, 5, 1]\n         }\n orders = [' ', 'N', 'W', 'E', 'S', 'SS']\n tf = 0\n for order in orders:\n     for d in order:\n         roll = rolls[d]\n         copy_2 = [dice_2[i] for i in roll]\n     \n     l = [1, 2, 4, 3]\n     a0 = copy_2[0] == dice_1[0]\n     a1 = copy_2[5] == dice_1[5]\n     a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n     if  a0 and a1 and a2:\n         tf += 1\n     else:\n-        print(order)\n-        print(dice_1)\n-        print(copy_2)\n \n if tf>0:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u328099989",
        "problem_id": "p02727",
        "submission1_id": "s538703262",
        "crp_content": "\n X, Y, A, B, C = map(int, input().split())\n P = list(map(int, input().split()))\n Q = list(map(int, input().split()))\n R = list(map(int, input().split()))\n \n P = sorted(P, reverse=True)[:X]\n Q = sorted(P, reverse=True)[:Y]\n-R = sorted(P, reverse=True)[:X+Y]\n \n print(sum(sorted(P+Q+R, reverse=True)[:X+Y]))\n \n",
        "origin_generated_text": "\n```\n X, Y, A, B, C = map(int, input().split())\n P = list(map(int, input().split()))\n Q = list(map(int, input().split()))\n R = list(map(int, input().split()))\n \n P = sorted(P, reverse=True)[:X]\n Q = sorted(P, reverse=True)[:Y]\n-R = sorted(P, reverse=True)[:X+Y]\n \n print(sum(sorted(P+Q+R, reverse=True)[:X+Y]))\n \n```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03633",
        "submission1_id": "s252908653",
        "crp_content": "\n import math\n import functools\n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a, b):\n   if a < b:\n     a, b = b, a\n   if b == 0:\n     return a\n   return gcd(b, b % a)\n  \n def lcm(A, B):\n-  return A * B \n  \n print(functools.reduce(lcm, sorted(T, reverse=True)))\n",
        "origin_generated_text": "\n```\n import math\n import functools\n N = int(input())\n T = []\n for i in range(N):\n   T.append(int(input()))\n \n def gcd(a, b):\n   if a < b:\n     a, b = b, a\n   if b == 0:\n     return a\n   return gcd(b, b % a)\n  \n def lcm(A, B):\n-  return A * B \n  \n print(functools.reduce(lcm, sorted(T, reverse=True)))\n```\n "
    },
    {
        "user_id": "u707444776",
        "problem_id": "p03752",
        "submission1_id": "s759257805",
        "crp_content": "\n def dfs(index):\n     global ans\n     if index == N :\n         if blst.count(1) >= K - 1:\n             tmp = a1\n             anstmp = 0\n             for i in range(1, N):\n                 if blst[i - 1] == 0:continue\n                 if tmp >= a[i]:\n                     anstmp += tmp - a[i] + 1\n                     tmp += 1\n             ans = min(ans, anstmp)\n         return\n     for i in range(2):\n         blst[index - 1] = i\n         dfs(index + 1)\n     return\n \n N, K = map(int, input().split())\n a = list(map(int, input().split()))\n blst = [0] * (N - 1)\n a1 = a[0]\n ans = 10 ** 18\n dfs(1)\n \n print(ans)\n",
        "origin_generated_text": "\n```\n def dfs(index):\n     global ans\n     if index == N :\n         if blst.count(1) >= K - 1:\n             tmp = a1\n             anstmp = 0\n             for i in range(1, N):\n                 if blst[i - 1] == 0:continue\n                 if tmp >= a[i]:\n                     anstmp += tmp - a[i] + 1\n                     tmp += 1\n             ans = min(ans, anstmp)\n         return\n     for i in range(2):\n         blst[index - 1] = i\n         dfs(index + 1)\n     return\n \n N, K = map(int, input().split())\n a = list(map(int, input().split()))\n blst = [0] * (N - 1)\n a1 = a[0]\n ans = 10 ** 18\n dfs(1)\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u716530146",
        "problem_id": "p03096",
        "submission1_id": "s621470879",
        "crp_content": "\n import sys, math, itertools, collections, bisect\n input = lambda: sys.stdin.buffer.readline().rstrip().decode('utf-8')\n inf = float('inf') ;mod = 10**9+7\n mans = inf ;ans = 0 ;count = 0 ;pro = 1\n \n n = int(input())\n C = [int(input()) for i in range(n)]\n pairs = [-1]*(n+1)\n data = [-1]*(2*10**5+1)\n for i,ci in enumerate(C):\n   if data[ci] != -1 and abs(i-data[ci]) != 1:\n     pairs[data[ci]] = i\n   data[ci] = i\n imos = [0] * (n+1)\n for i in range(n-1,-1,-1):\n   \n   if pairs[i] == -1: continue\n   j = pairs[i]\n-  ans += pow(2,imos[j])\n   ans %= mod\n   imos[i] += 1\n   imos[i-1] += imos[i]\n \n print((ans+1)%mod)\n \n",
        "origin_generated_text": "\n```\n import sys, math, itertools, collections, bisect\n input = lambda: sys.stdin.buffer.readline().rstrip().decode('utf-8')\n inf = float('inf') ;mod = 10**9+7\n mans = inf ;ans = 0 ;count = 0 ;pro = 1\n \n n = int(input())\n C = [int(input()) for i in range(n)]\n pairs = [-1]*(n+1)\n data = [-1]*(2*10**5+1)\n for i,ci in enumerate(C):\n   if data[ci] != -1 and abs(i-data[ci]) != 1:\n     pairs[data[ci]] = i\n   data[ci] = i\n imos = [0] * (n+1)\n for i in range(n-1,-1,-1):\n   \n   if pairs[i] == -1: continue\n   j = pairs[i]\n-  ans += pow(2,imos[j])\n   ans %= mod\n   imos[i] += 1\n   imos[i-1] += imos[i]\n \n print((ans+1)%mod)\n \n```\n "
    },
    {
        "user_id": "u023231878",
        "problem_id": "p03303",
        "submission1_id": "s534868957",
        "crp_content": "\n s=input()\n x=''\n for i in range(len(s)):\n-        if i%3==0:\n                 x+=s[i]\n print(x)\n",
        "origin_generated_text": "\n```\n s=input()\n x=''\n for i in range(len(s)):\n-        if i%3==0:\n                 x+=s[i]\n print(x)\n```\n "
    },
    {
        "user_id": "u057415180",
        "problem_id": "p02767",
        "submission1_id": "s106727943",
        "crp_content": "\n n = int(input())\n x = list(map(int, input().split()))\n ans = 10 ** 9\n for p in range(0, n+1):\n     cnt = 0\n     for i in x:\n-        cnt += (i-p)**2\n     ans = min(ans, cnt)\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int, input().split()))\n ans = 10 ** 9\n for p in range(0, n+1):\n     cnt = 0\n     for i in x:\n-        cnt += (i-p)**2\n     ans = min(ans, cnt)\n print(ans)\n```\n "
    },
    {
        "user_id": "u328733599",
        "problem_id": "p00006",
        "submission1_id": "s455234194",
        "crp_content": "\n txt = input(\"\")\n for i in range(0,len(txt)):\n- print(txt[(len(txt)-i-1)],end=\"\")\n- print()\n \n",
        "origin_generated_text": "\n```\n txt = input(\"\")\n for i in range(0,len(txt)):\n- print(txt[(len(txt)-i-1)],end=\"\")\n- print()\n \n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s070815222",
        "crp_content": "\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"y\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)+1\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)+1\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"y\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)+1\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)+1\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u567434159",
        "problem_id": "p03965",
        "submission1_id": "s548796857",
        "crp_content": "\n s = input()\n score = 0\n toUse = 0\n for it in s:\n   if it == 'g' and toUse > 0:\n     toUse -= 1\n     score += 1\n     continue\n   if it == 'g':\n     toUse += 1\n     continue\n   if toUse > 0:\n     toUse -= 1\n   else:\n     score -=1\n     \n print(score)\n \n",
        "origin_generated_text": "\n```\n s = input()\n score = 0\n toUse = 0\n for it in s:\n   if it == 'g' and toUse > 0:\n     toUse -= 1\n     score += 1\n     continue\n   if it == 'g':\n     toUse += 1\n     continue\n   if toUse > 0:\n     toUse -= 1\n   else:\n     score -=1\n     \n print(score)\n \n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s306795269",
        "crp_content": "\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < (ar - br):\n             print(2)\n-    if d < (br - ar):\n             print(-2)\n-    elif d <= (ar + br):\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n \n \n import math\n \n \n num = int(input())\n \n for i in range(num):\n     ax,ay,ar,bx,by,br = map(float,input().split(' '))\n-    d = (ax - bx)*(ax - bx) + (ay * by)\n-    if d < (ar - br):\n             print(2)\n-    if d < (br - ar):\n             print(-2)\n-    elif d <= (ar + br):\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u548492494",
        "problem_id": "p02730",
        "submission1_id": "s287489311",
        "crp_content": "\n s = input()\n n = len(s)\n a = int((n-1)/2)\n b = int((n+3)/2)\n f=0\n x=s[:a]\n y = s[b-1:]\n-if x==x[::-1] and y==y[::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n a = int((n-1)/2)\n b = int((n+3)/2)\n f=0\n x=s[:a]\n y = s[b-1:]\n-if x==x[::-1] and y==y[::-1]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u179169725",
        "problem_id": "p03103",
        "submission1_id": "s786314208",
        "crp_content": "\n import sys\n read = sys.stdin.readline\n \n \n def readln():\n     return list(map(int, read().split()))\n \n \n N, M = readln()\n \n data = {}\n for _ in range(N):\n     a, b = readln()\n     data[a] = b\n \n ans = 0\n drink = 0\n for k, v in sorted(data.items()):\n     ans += k * v\n     drink += v\n     if drink > M:\n         break\n-print(ans-k*(drink-M))\n \n",
        "origin_generated_text": "\n```\n import sys\n read = sys.stdin.readline\n \n \n def readln():\n     return list(map(int, read().split()))\n \n \n N, M = readln()\n \n data = {}\n for _ in range(N):\n     a, b = readln()\n     data[a] = b\n \n ans = 0\n drink = 0\n for k, v in sorted(data.items()):\n     ans += k * v\n     drink += v\n     if drink > M:\n         break\n-print(ans-k*(drink-M))\n \n```\n "
    },
    {
        "user_id": "u980492406",
        "problem_id": "p03264",
        "submission1_id": "s078287074",
        "crp_content": "\n a = int(input())\n if a%2  == 0 :\n-    print(a**2/4)\n else :\n-    print((a+1)/2*(a-1)/2)\n   \n",
        "origin_generated_text": "\n```\n a = int(input())\n if a%2  == 0 :\n-    print(a**2/4)\n else :\n-    print((a+1)/2*(a-1)/2)\n   \n```\n "
    },
    {
        "user_id": "u556477263",
        "problem_id": "p03264",
        "submission1_id": "s797417820",
        "crp_content": "\n s = int(input())\n-print(s/2 * (s+1)/2)\n",
        "origin_generated_text": "\n```\n s = int(input())\n-print(s/2 * (s+1)/2)\n```\n "
    },
    {
        "user_id": "u299798926",
        "problem_id": "p00026",
        "submission1_id": "s663219549",
        "crp_content": "\n A=[[int(0) for i in range(10)]for j in range(10)]\n count=0\n while 1:\n     try:\n         x,y,s = map(int, input().split(','))\n         if s==1:\n             for i in range(x-1,x+1):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]+1\n             for i in range(y-1,y+1):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]+1\n             A[x][y]=A[x][y]-1                    \n         elif s==2:\n             for i in range(x-1,x+1):\n                 for j in range(y-1,y+1):\n                     if i>=0 and i<=9 and j>=0 and j<=9:\n                         A[i][j]=A[i][j]+1\n         else:\n             for i in range(x-2,x+2):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]+1\n             for i in range(y-2,y+2):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]+1\n             for i in range(x-1,x+1):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]-1\n             for i in range(y-1,y+1):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]-1\n             for i in range(x-1,x+1):\n                 for j in range(y-1,y+1):\n                     if i>=0 and i<=9 and j>=0 and j<=9:\n                         A[i][j]=A[i][j]+1\n     except EOFError:\n         break\n         \n for i in range(10):\n     for j in range(10):\n         if A[i][j]==0:\n             count=count+1\n print(count)\n-print(max(A))\n",
        "origin_generated_text": "\n```\n A=[[int(0) for i in range(10)]for j in range(10)]\n count=0\n while 1:\n     try:\n         x,y,s = map(int, input().split(','))\n         if s==1:\n             for i in range(x-1,x+1):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]+1\n             for i in range(y-1,y+1):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]+1\n             A[x][y]=A[x][y]-1                    \n         elif s==2:\n             for i in range(x-1,x+1):\n                 for j in range(y-1,y+1):\n                     if i>=0 and i<=9 and j>=0 and j<=9:\n                         A[i][j]=A[i][j]+1\n         else:\n             for i in range(x-2,x+2):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]+1\n             for i in range(y-2,y+2):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]+1\n             for i in range(x-1,x+1):\n                 if i>=0 and i<=9:\n                     A[i][y]=A[i][y]-1\n             for i in range(y-1,y+1):\n                 if i>=0 and i<=9:\n                     A[x][i]=A[x][i]-1\n             for i in range(x-1,x+1):\n                 for j in range(y-1,y+1):\n                     if i>=0 and i<=9 and j>=0 and j<=9:\n                         A[i][j]=A[i][j]+1\n     except EOFError:\n         break\n         \n for i in range(10):\n     for j in range(10):\n         if A[i][j]==0:\n             count=count+1\n print(count)\n-print(max(A))\n```\n "
    },
    {
        "user_id": "u579699847",
        "problem_id": "p03752",
        "submission1_id": "s228254997",
        "crp_content": "\n def LI(): return list(map(int,input().split()))\n N,K = LI()\n a = LI()\n ans = float('INF')\n for i in range(2**(N-1)):\n     bit = [i>>j&1 for j in range(N-1)]\n     if K-1!=bit.count(1):\n         continue\n     NO_bit1 = [k for k in range(N-1) if bit[k]==1]\n     temp = 0\n     for l,x in enumerate(NO_bit1,1):\n-        if a[x+1]>=a[0]+l:\n             continue\n         temp += (a[0]+l)-a[x+1]\n     ans = min(ans,temp)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n def LI(): return list(map(int,input().split()))\n N,K = LI()\n a = LI()\n ans = float('INF')\n for i in range(2**(N-1)):\n     bit = [i>>j&1 for j in range(N-1)]\n     if K-1!=bit.count(1):\n         continue\n     NO_bit1 = [k for k in range(N-1) if bit[k]==1]\n     temp = 0\n     for l,x in enumerate(NO_bit1,1):\n-        if a[x+1]>=a[0]+l:\n             continue\n         temp += (a[0]+l)-a[x+1]\n     ans = min(ans,temp)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u255067135",
        "problem_id": "p03087",
        "submission1_id": "s501450188",
        "crp_content": "\n N, Q = map(int, input().split())\n S = str(input())\n \n count = [0]*(N)\n for i in range(1, N):\n     if S[i]=='C' and S[i-1]=='A':\n         count[i] = count[i-1] + 1\n     else:\n         count[i] = count[i-1]\n-print(count)\n LR = [list(map(int, input().split())) for _ in range(Q)]\n for l, r in LR:\n     print(count[r-1]-count[l-1])\n",
        "origin_generated_text": "\n```\n N, Q = map(int, input().split())\n S = str(input())\n \n count = [0]*(N)\n for i in range(1, N):\n     if S[i]=='C' and S[i-1]=='A':\n         count[i] = count[i-1] + 1\n     else:\n         count[i] = count[i-1]\n-print(count)\n LR = [list(map(int, input().split())) for _ in range(Q)]\n for l, r in LR:\n     print(count[r-1]-count[l-1])\n```\n "
    },
    {
        "user_id": "u252805217",
        "problem_id": "p02917",
        "submission1_id": "s930200691",
        "crp_content": "\n n = int(input())\n bs = list(map(int, input().split()))\n \n res = bs[0]\n for i in range(n - 2):\n-\tres += min(bs[i], bs[i + 1])\n \n if n == 2:\n \tres += bs[-1]\n else:\n-\tres += max(bs[-1], bs[-2])\n \n print(res)\n",
        "origin_generated_text": "\n```\n n = int(input())\n bs = list(map(int, input().split()))\n \n res = bs[0]\n for i in range(n - 2):\n-\tres += min(bs[i], bs[i + 1])\n \n if n == 2:\n \tres += bs[-1]\n else:\n-\tres += max(bs[-1], bs[-2])\n \n print(res)\n```\n "
    },
    {
        "user_id": "u545411641",
        "problem_id": "p03303",
        "submission1_id": "s202162876",
        "crp_content": "\n s = input()\n step = int(input())\n for i in range(0, len(s), step):\n-  print(s[i])\n-\n",
        "origin_generated_text": "\n```\n s = input()\n step = int(input())\n for i in range(0, len(s), step):\n-  print(s[i])\n-\n```\n "
    },
    {
        "user_id": "u485566817",
        "problem_id": "p03563",
        "submission1_id": "s198766719",
        "crp_content": "\n r = float(input())\n g = float(input())\n-print(2*g - r)\n",
        "origin_generated_text": "\n```\n r = float(input())\n g = float(input())\n-print(2*g - r)\n```\n "
    },
    {
        "user_id": "u072279123",
        "problem_id": "p02640",
        "submission1_id": "s075615060",
        "crp_content": "\n x,y = map(int,input().split())\n-if x==1 and y==2 and y==4:\n   print(\"Yes\")\n else:\n-  if y%2==1:\n-    print(\"No\")\n-  else:\n-    if y<=x*4:\n-      print(\"Yes\")\n-    else:\n-      print(\"No\")\n",
        "origin_generated_text": "\n```\n x,y = map(int,input().split())\n-if x==1 and y==2 and y==4:\n   print(\"Yes\")\n else:\n-  if y%2==1:\n-    print(\"No\")\n-  else:\n-    if y<=x*4:\n-      print(\"Yes\")\n-    else:\n-      print(\"No\")\n```\n "
    },
    {
        "user_id": "u178192749",
        "problem_id": "p03796",
        "submission1_id": "s696467127",
        "crp_content": "\n n = int(input())\n p = 1\n-mod  = int(10e9+7)\n for i in range(1,n+1):\n     p *=i\n     p = p%mod\n-print(p)\n",
        "origin_generated_text": "\n```\n n = int(input())\n p = 1\n-mod  = int(10e9+7)\n for i in range(1,n+1):\n     p *=i\n     p = p%mod\n-print(p)\n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p02950",
        "submission1_id": "s908723991",
        "crp_content": "\n p = int(input())\n mod = p\n \n \n def frac(limit):\n     frac = [1]*limit\n     for i in range(2,limit):\n         frac[i] = i * frac[i-1]%mod\n     fraci = [None]*limit\n     fraci[-1] = pow(frac[-1], mod -2, mod)\n     for i in range(-2, -limit-1, -1):\n         fraci[i] = fraci[i+1] * (limit + i + 1) % mod\n     return frac, fraci\n \n frac, fraci = frac(p)\n \n \n \n A = list(map(int, input().split()))\n \n C = [0]*p\n for i in range(p):\n     a = A[i]\n     for j in range(i):\n         a = (a-C[j]*frac[i]*fraci[i-j])\n     C[i] = fraci[i]*a%p\n \n B = [0]*p\n t = [0]*p\n t[0] = 1\n for i in range(1, p):\n     t2 = ([0] + t)[::-1]\n     t2 = [a-b*i for a, b in zip(t2, t)]\n     for j in range(p):\n         B[j] += t2[j]*C[i]\n     t = t2[:]\n \n B = [b%p for b in B]\n print(*B)\n \n",
        "origin_generated_text": "\n```\n p = int(input())\n mod = p\n \n \n def frac(limit):\n     frac = [1]*limit\n     for i in range(2,limit):\n         frac[i] = i * frac[i-1]%mod\n     fraci = [None]*limit\n     fraci[-1] = pow(frac[-1], mod -2, mod)\n     for i in range(-2, -limit-1, -1):\n         fraci[i] = fraci[i+1] * (limit + i + 1) % mod\n     return frac, fraci\n \n frac, fraci = frac(p)\n \n \n \n A = list(map(int, input().split()))\n \n C = [0]*p\n for i in range(p):\n     a = A[i]\n     for j in range(i):\n         a = (a-C[j]*frac[i]*fraci[i-j])\n     C[i] = fraci[i]*a%p\n \n B = [0]*p\n t = [0]*p\n t[0] = 1\n for i in range(1, p):\n     t2 = ([0] + t)[::-1]\n     t2 = [a-b*i for a, b in zip(t2, t)]\n     for j in range(p):\n         B[j] += t2[j]*C[i]\n     t = t2[:]\n \n B = [b%p for b in B]\n print(*B)\n \n```\n "
    },
    {
        "user_id": "u639390371",
        "problem_id": "p02553",
        "submission1_id": "s005093798",
        "crp_content": "\n-a,b,c,d=list(map(int, input(\"Enter a multiple value: \").split())) \n prod=[]\n \n prod.append(a*c)\n prod.append(a*d)\n prod.append(b*c)\n prod.append(b*d)\n \n print(max(prod))\n",
        "origin_generated_text": "\n```\n-a,b,c,d=list(map(int, input(\"Enter a multiple value: \").split())) \n prod=[]\n \n prod.append(a*c)\n prod.append(a*d)\n prod.append(b*c)\n prod.append(b*d)\n \n print(max(prod))\n```\n "
    },
    {
        "user_id": "u622847899",
        "problem_id": "p02730",
        "submission1_id": "s699506475",
        "crp_content": "\n s=input()\n \n def judge_palindrome(x):\n \t\n \tflag=True\n \tif len(x)%2==0:\n \t\tflag=False\n \tfor i in range(int((len(x)-1)/2)):\n \t\tif x[i]!=x[len(x)-1-i]:\n \t\t\tflag=False\n \tif flag:\n \t\treturn True\n \telse:\n \t\treturn False\n \n if judge_palindrome(s) and judge_palindrome(s[:int((len(s)-1)/2)]) and judge_palindrome(s[int((len(s)+3)/2):]):\n \tprint('Yes')\n else:\n \tprint('No')\n",
        "origin_generated_text": "\n```\n s=input()\n \n def judge_palindrome(x):\n \t\n \tflag=True\n \tif len(x)%2==0:\n \t\tflag=False\n \tfor i in range(int((len(x)-1)/2)):\n \t\tif x[i]!=x[len(x)-1-i]:\n \t\t\tflag=False\n \tif flag:\n \t\treturn True\n \telse:\n \t\treturn False\n \n if judge_palindrome(s) and judge_palindrome(s[:int((len(s)-1)/2)]) and judge_palindrome(s[int((len(s)+3)/2):]):\n \tprint('Yes')\n else:\n \tprint('No')\n```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00023",
        "submission1_id": "s286489685",
        "crp_content": "\n n = input()\n for i in range(int(n)):\n     xa, ya, ra, xb, rb, yb = list(map(float, input().split(\" \")))\n-    d = abs(complex(xb-xa, yb-ya))\n-    if ra + rb < d:\n         print(\"0\")\n-    elif abs(rb-ra) <= d <= ra+rb:\n         print(\"1\")\n-    elif d < abs(ra-rb):\n-        print(\"2\" if ra > rb else \"-2\")\n",
        "origin_generated_text": "\n```\n n = input()\n for i in range(int(n)):\n     xa, ya, ra, xb, rb, yb = list(map(float, input().split(\" \")))\n-    d = abs(complex(xb-xa, yb-ya))\n-    if ra + rb < d:\n         print(\"0\")\n-    elif abs(rb-ra) <= d <= ra+rb:\n         print(\"1\")\n-    elif d < abs(ra-rb):\n-        print(\"2\" if ra > rb else \"-2\")\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00026",
        "submission1_id": "s391579770",
        "crp_content": "\n d = [[0] * 10 for i in range(10)]\n \n def b(x, y):\n     for i in range(x - 2, x + 3):\n         a = 3 - abs(x - i)\n         for a in range(y - a + 1, y + a):\n             if 0 <= i < 10 and 0 <= a < 10:\n                 d[a][i] += 1\n \n \n def m(x, y):\n     for i in range(x - 1, x + 2):\n         for j in range(y - 1, y + 2):\n             if 0 <= i < 10 and 0 <= j < 10:\n                 d[j][i] += 1\n \n \n def s(x, y):\n     r = (1, 0)\n     for i in range(x - 1, x + 2):\n         a = abs(x - i)\n         for j in range(y - r[a], y + r[a] + 1):\n             if 0 <= i < 10 and 0 <= j < 10:\n                 d[j][i] += 1\n \n while 1:\n     try:\n         f = (None, s, m, b)\n         x, y, size = list(map(int, input().split(',')))\n         f[size](x, y)\n \n     except:\n         break\n \n \n r1 = r2 = 0\n for i in range(10):\n     for j in range(10):\n         r1 += 1 if d[i][j] == 0 else 0\n         r2 = max(r2, d[i][j])\n \n-print(r1, r2)\n",
        "origin_generated_text": "\n```\n d = [[0] * 10 for i in range(10)]\n \n def b(x, y):\n     for i in range(x - 2, x + 3):\n         a = 3 - abs(x - i)\n         for a in range(y - a + 1, y + a):\n             if 0 <= i < 10 and 0 <= a < 10:\n                 d[a][i] += 1\n \n \n def m(x, y):\n     for i in range(x - 1, x + 2):\n         for j in range(y - 1, y + 2):\n             if 0 <= i < 10 and 0 <= j < 10:\n                 d[j][i] += 1\n \n \n def s(x, y):\n     r = (1, 0)\n     for i in range(x - 1, x + 2):\n         a = abs(x - i)\n         for j in range(y - r[a], y + r[a] + 1):\n             if 0 <= i < 10 and 0 <= j < 10:\n                 d[j][i] += 1\n \n while 1:\n     try:\n         f = (None, s, m, b)\n         x, y, size = list(map(int, input().split(',')))\n         f[size](x, y)\n \n     except:\n         break\n \n \n r1 = r2 = 0\n for i in range(10):\n     for j in range(10):\n         r1 += 1 if d[i][j] == 0 else 0\n         r2 = max(r2, d[i][j])\n \n-print(r1, r2)\n```\n "
    },
    {
        "user_id": "u458617779",
        "problem_id": "p03734",
        "submission1_id": "s833364379",
        "crp_content": "\n ints = input().split(\" \")\n N = int(ints[0])\n maxW = int(ints[1])\n ints = input().split(\" \")\n a = int(ints[0])\n b = int(ints[1])\n-weight = [a, a+1, a+2, a+3] \n-va = [[0,b],[0],[0],[0]]\n for i in range(1, N):\n \tins = input().split(\" \")\n \tw = int(ins[0])\n \tv = int(ins[1])\n \tfor j in range(0, 4):\n \t\tif w == weight[j]:\n \t\t\tva[j].append(v)\n sum = [[0],[0],[0],[0]]\n for j in range(0, 4):\n \tfor i in range(1, len(va[j])):\n \t\ttry:\n \t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n \t\texcept:\n \t\t\tpass\n ans = 0\n for i in range(0, len(va[0])):\n \tfor j in range(0, len(va[1])):\n \t\tfor k in range(0, len(va[2])):\n \t\t\tfor l in range(0, len(va[3])):\n \t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n \t\t\t\tif(sumw <= maxW):\n \t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\n print(ans)\n",
        "origin_generated_text": "\n```\n ints = input().split(\" \")\n N = int(ints[0])\n maxW = int(ints[1])\n ints = input().split(\" \")\n a = int(ints[0])\n b = int(ints[1])\n-weight = [a, a+1, a+2, a+3] \n-va = [[0,b],[0],[0],[0]]\n for i in range(1, N):\n \tins = input().split(\" \")\n \tw = int(ins[0])\n \tv = int(ins[1])\n \tfor j in range(0, 4):\n \t\tif w == weight[j]:\n \t\t\tva[j].append(v)\n sum = [[0],[0],[0],[0]]\n for j in range(0, 4):\n \tfor i in range(1, len(va[j])):\n \t\ttry:\n \t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n \t\texcept:\n \t\t\tpass\n ans = 0\n for i in range(0, len(va[0])):\n \tfor j in range(0, len(va[1])):\n \t\tfor k in range(0, len(va[2])):\n \t\t\tfor l in range(0, len(va[3])):\n \t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n \t\t\t\tif(sumw <= maxW):\n \t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\n print(ans)\n```\n "
    },
    {
        "user_id": "u628538573",
        "problem_id": "p03296",
        "submission1_id": "s254868178",
        "crp_content": "\n n = int(input())\n a = input().split()\n count = 0\n for i in range(n - 1):\n \tif a[i] == a[i + 1]:\n \t\tif i + 1 < n - 2:\n \t\t\tif a[i] != 1 and a[i + 2] != 1:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 2 and a[i + 2] != 2:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 3 and a[i + 2] != 3:\n \t\t\t\ta[i + 1] = 3\n \t\t\t\tcount += 1\n \t\tif i == n - 2:\n \t\t\tif a[i] == 1:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\t\tflag = 1\n \t\t\telse:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\t\tflag = 1\n \n print(count)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = input().split()\n count = 0\n for i in range(n - 1):\n \tif a[i] == a[i + 1]:\n \t\tif i + 1 < n - 2:\n \t\t\tif a[i] != 1 and a[i + 2] != 1:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 2 and a[i + 2] != 2:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\telif a[i] != 3 and a[i + 2] != 3:\n \t\t\t\ta[i + 1] = 3\n \t\t\t\tcount += 1\n \t\tif i == n - 2:\n \t\t\tif a[i] == 1:\n \t\t\t\ta[i + 1] = 2\n \t\t\t\tcount += 1\n \t\t\t\tflag = 1\n \t\t\telse:\n \t\t\t\ta[i + 1] = 1\n \t\t\t\tcount += 1\n \t\t\t\tflag = 1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u212502386",
        "problem_id": "p03200",
        "submission1_id": "s773870702",
        "crp_content": "\n S=input()\n \n start=0\n for i in range(len(S)):\n     if S[i]=='B':\n         break\n \n     start=i\n \n left_W=start\n ans=0\n if start<len(S)-1:\n     for i in range(start+1,len(S)):\n         if S[i]=='W':\n-            ans+=i-left_W\n             left_W+=1\n \n print(ans)\n",
        "origin_generated_text": "\n```\n S=input()\n \n start=0\n for i in range(len(S)):\n     if S[i]=='B':\n         break\n \n     start=i\n \n left_W=start\n ans=0\n if start<len(S)-1:\n     for i in range(start+1,len(S)):\n         if S[i]=='W':\n-            ans+=i-left_W\n             left_W+=1\n \n print(ans)\n```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03008",
        "submission1_id": "s929744662",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n \n n = int(input())\n a1, a2, a3 = map(int, input().split())\n b1, b2, b3 = map(int, input().split())\n def f(n, a1, a2, a3, b1, b2, b3):\n   dp = [0]*(n+1)\n   for i in range(n):\n     for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n       if i+a <= n:\n         dp[i+a] = max(dp[i+a], dp[i]+b)\n   return max(dp)\n m = f(n, a1, a2, a3, b1, b2, b3)\n-ans = f(m, b1, b2, b3, a1, a2, a3)\n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n \n n = int(input())\n a1, a2, a3 = map(int, input().split())\n b1, b2, b3 = map(int, input().split())\n def f(n, a1, a2, a3, b1, b2, b3):\n   dp = [0]*(n+1)\n   for i in range(n):\n     for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n       if i+a <= n:\n         dp[i+a] = max(dp[i+a], dp[i]+b)\n   return max(dp)\n m = f(n, a1, a2, a3, b1, b2, b3)\n-ans = f(m, b1, b2, b3, a1, a2, a3)\n print(ans)\n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s665650813",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \tif(i==n-1):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \tif(i==n-1):\n \t\tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u947883560",
        "problem_id": "p03480",
        "submission1_id": "s127055808",
        "crp_content": "\n \n import sys\n INF = float(\"inf\")\n \n \n def solve(S: str):\n \n-    if int(S) == 0:\n-        print(len(S))\n-        return\n \n     N = len(S)\n     ts = INF\n     for i, c in enumerate(S):\n         if i == 0:\n             continue\n         if S[i-1] != S[i]:\n             ts = min(ts, max(i, N-i))\n     print(ts)\n     return\n \n \n def main():\n \n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S = str(next(tokens))  \n     solve(S)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n INF = float(\"inf\")\n \n \n def solve(S: str):\n \n-    if int(S) == 0:\n-        print(len(S))\n-        return\n \n     N = len(S)\n     ts = INF\n     for i, c in enumerate(S):\n         if i == 0:\n             continue\n         if S[i-1] != S[i]:\n             ts = min(ts, max(i, N-i))\n     print(ts)\n     return\n \n \n def main():\n \n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     S = str(next(tokens))  \n     solve(S)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p03625",
        "submission1_id": "s597083599",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n S = sorted(A, reverse=True)\n w, h = 0, 0\n \n cnt = 0\n tmp = 0\n l = S[0]\n for i in range(N):\n   if S[i] != l:\n     if cnt == 0:\n       if tmp > 3:\n         w, h = l, l\n         break\n       elif tmp > 1:\n         w = l\n         tmp = 1\n         l = S[i]\n         cnt += 1\n       else:\n         tmp = 1\n         l = S[i]\n     else:\n       h = l\n       break\n   else:\n     tmp += 1\n     if i == N-1:\n       h = l\n ans = w * h\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n S = sorted(A, reverse=True)\n w, h = 0, 0\n \n cnt = 0\n tmp = 0\n l = S[0]\n for i in range(N):\n   if S[i] != l:\n     if cnt == 0:\n       if tmp > 3:\n         w, h = l, l\n         break\n       elif tmp > 1:\n         w = l\n         tmp = 1\n         l = S[i]\n         cnt += 1\n       else:\n         tmp = 1\n         l = S[i]\n     else:\n       h = l\n       break\n   else:\n     tmp += 1\n     if i == N-1:\n       h = l\n ans = w * h\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u982896977",
        "problem_id": "p02727",
        "submission1_id": "s517039276",
        "crp_content": "\n x,y,a,b,c = map(int,input().split())\n p_ = list(map(int,input().split()))\n q_ = list(map(int,input().split()))\n r_ = list(map(int,input().split()))\n p_.sort(reverse=True)\n q_.sort(reverse=True)\n r_.sort(reverse=True)\n red = x-1\n gre = y-1\n mu = 0\n while True:\n     if red < 0 or gre < 0 or mu == c:\n         break\n     else:\n         badr = p_[red]\n         badg = q_[gre]\n         badmu = r_[mu]\n         if badr <= badg:\n             if badr < badmu:\n                 red = red-1\n                 mu = mu+1\n             else:\n                 break\n         else:\n             if badg < badmu:\n                 gre = gre-1\n                 mu = mu+1\n             else:\n                 break\n ans = 0\n for i in range(red+1):\n     ans += p_[i]\n for i in range(gre+1):\n     ans += q_[i]\n for i in range(mu):\n     ans += r_[i]\n print(ans)\n",
        "origin_generated_text": "\n```\n x,y,a,b,c = map(int,input().split())\n p_ = list(map(int,input().split()))\n q_ = list(map(int,input().split()))\n r_ = list(map(int,input().split()))\n p_.sort(reverse=True)\n q_.sort(reverse=True)\n r_.sort(reverse=True)\n red = x-1\n gre = y-1\n mu = 0\n while True:\n     if red < 0 or gre < 0 or mu == c:\n         break\n     else:\n         badr = p_[red]\n         badg = q_[gre]\n         badmu = r_[mu]\n         if badr <= badg:\n             if badr < badmu:\n                 red = red-1\n                 mu = mu+1\n             else:\n                 break\n         else:\n             if badg < badmu:\n                 gre = gre-1\n                 mu = mu+1\n             else:\n                 break\n ans = 0\n for i in range(red+1):\n     ans += p_[i]\n for i in range(gre+1):\n     ans += q_[i]\n for i in range(mu):\n     ans += r_[i]\n print(ans)\n```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03080",
        "submission1_id": "s914142925",
        "crp_content": "\n N=int(input())\n-s=list(input().split())\n n=0\n for i in range(N):\n-     if i=='R':\n         n+=1\n      else:\n         n+=0\n-if N/2<n:\n     print('Yes')\n else:\n     print('No')\n",
        "origin_generated_text": "\n```\n N=int(input())\n-s=list(input().split())\n n=0\n for i in range(N):\n-     if i=='R':\n         n+=1\n      else:\n         n+=0\n-if N/2<n:\n     print('Yes')\n else:\n     print('No')\n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s982941533",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-res = pow(10, 10)\n-for x in sorted(a):\n-  t = sorted(a)\n-  if t[Q - 1] == pow(10, 10): break\n-  res = min(res, t[Q - 1] - t[0])\n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          a[j] = pow(10, 10)\n-      break\n-print(res)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n N, K, Q = map(int, input().split())\n a = list(map(int, input().split()))\n-res = pow(10, 10)\n-for x in sorted(a):\n-  t = sorted(a)\n-  if t[Q - 1] == pow(10, 10): break\n-  res = min(res, t[Q - 1] - t[0])\n-  for i in range(N):\n-    if a[i] == x:\n-      for j in range(i - K + 1, i + K):\n-        if j in range(N):\n-          a[j] = pow(10, 10)\n-      break\n-print(res)\n```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s710213511",
        "crp_content": "\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S\n-y3 = (x2-S%x2)%x2\n print(x1,y1,x2,y2,x3,y3)\n",
        "origin_generated_text": "\n```\n S = int(input())\n x1 = 0\n y1 = 0\n x2 = 10**9\n y2 = 1\n-x3 = S\n-y3 = (x2-S%x2)%x2\n print(x1,y1,x2,y2,x3,y3)\n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03343",
        "submission1_id": "s940783359",
        "crp_content": "\n N, K, Q = [int(i) for i in input().split()]\n A = [(int(v),i) for i,v in enumerate(input().split())]\n A.sort()\n B = [0]*(N)\n for i in range(N):\n     B[A[i][1]] = i\n C = [A[B[i]][0] for i in range(N)]\n Candi = set(range(N))\n ctr = 0\n ans = []\n while len(Candi) >= Q:\n     T = sorted(Candi)\n     ans.append((list(T)[0],list(T)[Q-1]))\n     x = B.index(ctr)\n     Candi = Candi - set(B[x-K+1:x+K])\n     ctr += 1\n print(min([A[j][0]-A[i][0] for i,j in ans]))\n",
        "origin_generated_text": "\n```\n N, K, Q = [int(i) for i in input().split()]\n A = [(int(v),i) for i,v in enumerate(input().split())]\n A.sort()\n B = [0]*(N)\n for i in range(N):\n     B[A[i][1]] = i\n C = [A[B[i]][0] for i in range(N)]\n Candi = set(range(N))\n ctr = 0\n ans = []\n while len(Candi) >= Q:\n     T = sorted(Candi)\n     ans.append((list(T)[0],list(T)[Q-1]))\n     x = B.index(ctr)\n     Candi = Candi - set(B[x-K+1:x+K])\n     ctr += 1\n print(min([A[j][0]-A[i][0] for i,j in ans]))\n```\n "
    },
    {
        "user_id": "u175590965",
        "problem_id": "p03036",
        "submission1_id": "s695093609",
        "crp_content": "\n r,d,x = map(int,input().split())\n for i in range(10):\n     x = r*x-d\n-print(x)\n \n",
        "origin_generated_text": "\n```\n r,d,x = map(int,input().split())\n for i in range(10):\n     x = r*x-d\n-print(x)\n \n```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03573",
        "submission1_id": "s888617582",
        "crp_content": "\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n if __name__ == '__main__':\n     a = [int(i) for i in input().split()]\n     bf =999\n     for i in a:\n         if bf == 999:\n             bf =i\n         elif bf != i:\n             print(i)\n",
        "origin_generated_text": "\n```\n import sys\n import copy\n import math\n import bisect\n import pprint\n import bisect\n from functools import reduce\n from copy import deepcopy\n from collections import deque\n \n if __name__ == '__main__':\n     a = [int(i) for i in input().split()]\n     bf =999\n     for i in a:\n         if bf == 999:\n             bf =i\n         elif bf != i:\n             print(i)\n```\n "
    },
    {
        "user_id": "u869301406",
        "problem_id": "p02385",
        "submission1_id": "s023054269",
        "crp_content": "\n class Dice(object):\n  \n     def __init__(self, d):\n \n         self.rows = [d[0], d[4], d[5], d[1]]\n         self.cols = [d[0], d[2], d[5], d[3]]\n  \n     def move_next_rows(self):\n         temp = self.rows.pop(0)\n         self.rows.append(temp)\n         self.__update(self.cols, self.rows)\n \n     def move_prev_rows(self):\n         temp = self.rows.pop(3)\n         self.rows.insert(0, temp)\n         self.__update(self.cols, self.rows)\n     \n     def move_next_cols(self):\n         temp = self.cols.pop(0)\n         self.cols.append(temp)\n         self.__update(self.rows, self.cols)\n  \n     def move_prev_cols(self):\n         temp = self.cols.pop(3)\n         self.cols.insert(0, temp)\n         self.__update(self.rows, self.cols)\n \n     def __update(self, x, y):\n         x[0] = y[0]\n         x[2] = y[2]\n  \n class DiceChecker(object):\n \n     def __init__(self, dice1, dice2):\n         self.dice1 = dice1\n         self.dice2 = dice2\n         self.dice1_top = self.dice1.rows[0]\n         self.dice1_front = self.dice1.rows[3]\n         \n     def check_same_dice(self):\n \n         \n         \n         \n         \n         \n         \n         is_same = False\n         for _ in range(4):\n             for _ in range(4):\n                 is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 self.__rot(self.dice2)\n                 is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 \n                 if is_same_element or is_rot_same: \n                     is_same = True\n                     break\n                 self.dice2.move_next_cols()\n                 \n-                print(self.dice2.rows)\n-\n             else:     \n                 self.dice2.move_next_rows()\n                 continue\n             break\n         if is_same:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     \n     def __find_num(self, x, dice):\n         i = 0\n         while x != dice.rows[0]:\n             dice.move_next_rows()\n             if i > 3:\n                 dice.move_next_cols()\n                 i = 0\n             i+=1\n     \n     def __rot(self, dice):\n         temp = dice.rows[1]\n         dice.rows[1] = dice.rows[3]\n         dice.rows[3] = temp\n \n         temp = dice.cols[1]\n         dice.cols[1] = dice.cols[3]\n         dice.cols[3] = temp\n \n         \n dice1 = list(map(int, input().split(\" \")))\n dice2 = list(map(int, input().split(\" \")))\n dice1 = Dice(dice1)\n dice2 = Dice(dice2)\n \n dice_checker = DiceChecker(dice1, dice2)\n dice_checker.check_same_dice()\n \n \n",
        "origin_generated_text": "\n```\n class Dice(object):\n  \n     def __init__(self, d):\n \n         self.rows = [d[0], d[4], d[5], d[1]]\n         self.cols = [d[0], d[2], d[5], d[3]]\n  \n     def move_next_rows(self):\n         temp = self.rows.pop(0)\n         self.rows.append(temp)\n         self.__update(self.cols, self.rows)\n \n     def move_prev_rows(self):\n         temp = self.rows.pop(3)\n         self.rows.insert(0, temp)\n         self.__update(self.cols, self.rows)\n     \n     def move_next_cols(self):\n         temp = self.cols.pop(0)\n         self.cols.append(temp)\n         self.__update(self.rows, self.cols)\n  \n     def move_prev_cols(self):\n         temp = self.cols.pop(3)\n         self.cols.insert(0, temp)\n         self.__update(self.rows, self.cols)\n \n     def __update(self, x, y):\n         x[0] = y[0]\n         x[2] = y[2]\n  \n class DiceChecker(object):\n \n     def __init__(self, dice1, dice2):\n         self.dice1 = dice1\n         self.dice2 = dice2\n         self.dice1_top = self.dice1.rows[0]\n         self.dice1_front = self.dice1.rows[3]\n         \n     def check_same_dice(self):\n \n         \n         \n         \n         \n         \n         \n         is_same = False\n         for _ in range(4):\n             for _ in range(4):\n                 is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 self.__rot(self.dice2)\n                 is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                 \n                 if is_same_element or is_rot_same: \n                     is_same = True\n                     break\n                 self.dice2.move_next_cols()\n                 \n-                print(self.dice2.rows)\n-\n             else:     \n                 self.dice2.move_next_rows()\n                 continue\n             break\n         if is_same:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     \n     def __find_num(self, x, dice):\n         i = 0\n         while x != dice.rows[0]:\n             dice.move_next_rows()\n             if i > 3:\n                 dice.move_next_cols()\n                 i = 0\n             i+=1\n     \n     def __rot(self, dice):\n         temp = dice.rows[1]\n         dice.rows[1] = dice.rows[3]\n         dice.rows[3] = temp\n \n         temp = dice.cols[1]\n         dice.cols[1] = dice.cols[3]\n         dice.cols[3] = temp\n \n         \n dice1 = list(map(int, input().split(\" \")))\n dice2 = list(map(int, input().split(\" \")))\n dice1 = Dice(dice1)\n dice2 = Dice(dice2)\n \n dice_checker = DiceChecker(dice1, dice2)\n dice_checker.check_same_dice()\n \n \n```\n "
    },
    {
        "user_id": "u480300350",
        "problem_id": "p03714",
        "submission1_id": "s103417578",
        "crp_content": "\n \n \n import sys\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n from heapq import heapify, heappush, heappop \n \n \n \n \n \n \n \n from operator import itemgetter              \n \n \n \n \n def main():\n     mod = 1000000007                \n     inf = float('inf')              \n     \n     sys.setrecursionlimit(10**6)    \n     def input(): return sys.stdin.readline().rstrip()\n     def ii():    return int(input())\n     def mi():    return map(int, input().split())\n     def mi_0():  return map(lambda x: int(x)-1, input().split())\n     def lmi():   return list(map(int, input().split()))\n     def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n     def li():    return list(input())\n     \n     \n     n = ii()\n     L = lmi()\n     \n     left = sum(L[:n])\n     l_h = L[:n]    \n \n     right = 0\n     tmp = [[i, L[i]] for i in range(n, 3*n)]\n     tmp.sort()\n     latter_min_nth = [False] * 3 * n    \n     sub_member_r_h = []    \n     for ind in range(n):\n         i, num = tmp[ind]\n         right += num\n         latter_min_nth[i] = True\n     for ind in range(n, 2*n):\n         i, num = tmp[ind]\n         sub_member_r_h.append([num, i])\n     \n     max_score = left - right\n     heapify(l_h)\n     heapify(sub_member_r_h)\n     for i in range(n, 2*n):\n         \n         if l_h[0] < L[i]:\n             \n             left -= heappop(l_h)\n             left += L[i]\n             heappush(l_h, L[i])\n         if latter_min_nth[i]:\n             \n             right -= L[i]\n             while sub_member_r_h[0][1] <= i:\n                 heappop(sub_member_r_h)    \n             num, ind = heappop(sub_member_r_h)\n             assert (ind > i)\n             right += num\n             latter_min_nth[ind] = True\n         max_score = max(max_score, left - right)\n     \n     print(max_score)\n \n \n \n \n \n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n from heapq import heapify, heappush, heappop \n \n \n \n \n \n \n \n from operator import itemgetter              \n \n \n \n \n def main():\n     mod = 1000000007                \n     inf = float('inf')              \n     \n     sys.setrecursionlimit(10**6)    \n     def input(): return sys.stdin.readline().rstrip()\n     def ii():    return int(input())\n     def mi():    return map(int, input().split())\n     def mi_0():  return map(lambda x: int(x)-1, input().split())\n     def lmi():   return list(map(int, input().split()))\n     def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n     def li():    return list(input())\n     \n     \n     n = ii()\n     L = lmi()\n     \n     left = sum(L[:n])\n     l_h = L[:n]    \n \n     right = 0\n     tmp = [[i, L[i]] for i in range(n, 3*n)]\n     tmp.sort()\n     latter_min_nth = [False] * 3 * n    \n     sub_member_r_h = []    \n     for ind in range(n):\n         i, num = tmp[ind]\n         right += num\n         latter_min_nth[i] = True\n     for ind in range(n, 2*n):\n         i, num = tmp[ind]\n         sub_member_r_h.append([num, i])\n     \n     max_score = left - right\n     heapify(l_h)\n     heapify(sub_member_r_h)\n     for i in range(n, 2*n):\n         \n         if l_h[0] < L[i]:\n             \n             left -= heappop(l_h)\n             left += L[i]\n             heappush(l_h, L[i])\n         if latter_min_nth[i]:\n             \n             right -= L[i]\n             while sub_member_r_h[0][1] <= i:\n                 heappop(sub_member_r_h)    \n             num, ind = heappop(sub_member_r_h)\n             assert (ind > i)\n             right += num\n             latter_min_nth[ind] = True\n         max_score = max(max_score, left - right)\n     \n     print(max_score)\n \n \n \n \n \n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s123805855",
        "crp_content": "\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n",
        "origin_generated_text": "\n```\n \n \n import copy\n import sys\n import math\n \n n = int(input())\n tmp = input().split()\n hoge = list(map(lambda a: int(a), tmp))\n \n hoge.sort()\n hoge.append(-1)\n a=0\n b=0\n c=1\n maxhoge=0\n for i in range(0,n):\n \tif(hoge[i]!=hoge[i+1]):\n \t\ta=b\n \t\tb=c\n-\t\tc=1\n \telse:\n \t\tc+=1\n \tmaxhoge=max(maxhoge,a+b+c)\n \n \n \n \n print(maxhoge)\n \n \n```\n "
    },
    {
        "user_id": "u307124824",
        "problem_id": "p03079",
        "submission1_id": "s044587225",
        "crp_content": "\n import sys\n \n A, B, C = input().split()\n a = int(A)\n b = int(B)\n c = int(C)\n \n if a == b:\n     if a == c:\n-        print('YES')\n         sys.exit()\n         \n-print('NO')\n \n",
        "origin_generated_text": "\n```\n import sys\n \n A, B, C = input().split()\n a = int(A)\n b = int(B)\n c = int(C)\n \n if a == b:\n     if a == c:\n-        print('YES')\n         sys.exit()\n         \n-print('NO')\n \n```\n "
    },
    {
        "user_id": "u251075661",
        "problem_id": "p02854",
        "submission1_id": "s482839205",
        "crp_content": "\n n = int(input())\n aaa = map(int, input().split())\n \n length = 0\n lengths = []\n for a in aaa:\n   length += a\n   lengths.append(length)\n   \n-diff = 999999\n for l in lengths:\n-  if abs(l - (length - l)) < diff:\n-    diff = abs(l - (length - l))\n-  else:\n-    break\n     \n print(diff)\n",
        "origin_generated_text": "\n```\n n = int(input())\n aaa = map(int, input().split())\n \n length = 0\n lengths = []\n for a in aaa:\n   length += a\n   lengths.append(length)\n   \n-diff = 999999\n for l in lengths:\n-  if abs(l - (length - l)) < diff:\n-    diff = abs(l - (length - l))\n-  else:\n-    break\n     \n print(diff)\n```\n "
    },
    {
        "user_id": "u341736906",
        "problem_id": "p02742",
        "submission1_id": "s884374129",
        "crp_content": "\n import math\n H,W=map(int,input().split())\n if (H*W)%2==0:\n     print(int(H*W/2))\n else:\n-    print(math.ceil(H*W/2))\n",
        "origin_generated_text": "\n```\n import math\n H,W=map(int,input().split())\n if (H*W)%2==0:\n     print(int(H*W/2))\n else:\n-    print(math.ceil(H*W/2))\n```\n "
    },
    {
        "user_id": "u701318346",
        "problem_id": "p03970",
        "submission1_id": "s169677894",
        "crp_content": "\n S = input()\n A = 'CODEFESTIVAL2016'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == A[i]:\n     ans += 1\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n S = input()\n A = 'CODEFESTIVAL2016'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == A[i]:\n     ans += 1\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u357267874",
        "problem_id": "p02281",
        "submission1_id": "s014941305",
        "crp_content": "\n class Node:\n     def __init__(self, id):\n         self.id = id\n         self.left = None\n         self.right = None\n \n root = None\n n = int(input())\n node_list = []\n for i in range(n):\n     node_list.append(Node(i))\n \n for i in range(n):\n     id, left, right = list(map(int, input().split()))\n     node = node_list[id]\n     if left > -1:\n         node.left = node_list[left]\n     if right > -1:\n         node.right = node_list[right]\n-    if id == 0:\n-        root = node\n \n def preorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     preorder(node.left)\n     preorder(node.right)\n \n def inorder(node):\n     if node is None:\n         return\n     \n     inorder(node.left)\n     print(' ' + str(node.id), end='')\n     inorder(node.right)\n \n def postorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     postorder(node.left)\n     postorder(node.right)\n \n print('Preorder')\n preorder(root)\n print('')\n \n print('Inorder')\n inorder(root)\n print('')\n \n print('Postorder')\n postorder(root)\n print('')\n \n",
        "origin_generated_text": "\n```\n class Node:\n     def __init__(self, id):\n         self.id = id\n         self.left = None\n         self.right = None\n \n root = None\n n = int(input())\n node_list = []\n for i in range(n):\n     node_list.append(Node(i))\n \n for i in range(n):\n     id, left, right = list(map(int, input().split()))\n     node = node_list[id]\n     if left > -1:\n         node.left = node_list[left]\n     if right > -1:\n         node.right = node_list[right]\n-    if id == 0:\n-        root = node\n \n def preorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     preorder(node.left)\n     preorder(node.right)\n \n def inorder(node):\n     if node is None:\n         return\n     \n     inorder(node.left)\n     print(' ' + str(node.id), end='')\n     inorder(node.right)\n \n def postorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     postorder(node.left)\n     postorder(node.right)\n \n print('Preorder')\n preorder(root)\n print('')\n \n print('Inorder')\n inorder(root)\n print('')\n \n print('Postorder')\n postorder(root)\n print('')\n \n```\n "
    },
    {
        "user_id": "u445983356",
        "problem_id": "p02854",
        "submission1_id": "s371315429",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n \n now_length = sum(A)\n-half = now_length / 2\n-low_price = now_length - sum(A[:int(N/2)])\n \n-if half > low_price :\n-  for i in range(int(N/2),0,-1) :\n-    var = now_length - sum(A[:i])\n-    if half == low_price :\n-      break\n-    elif low_price > var :\n-      low_price = var\n-    else :\n-      break\n-else :\n-  for i in range(int(N/2)+1,N) :\n-    var = now_length - sum(A[:i])\n-    if half == low_price :\n-      break\n-    elif low_price > var :\n-      low_price = var\n-    else :\n-      break\n \n-if low_price == half :\n   print(0)\n else :\n-  print(low_price)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n \n now_length = sum(A)\n-half = now_length / 2\n-low_price = now_length - sum(A[:int(N/2)])\n \n-if half > low_price :\n-  for i in range(int(N/2),0,-1) :\n-    var = now_length - sum(A[:i])\n-    if half == low_price :\n-      break\n-    elif low_price > var :\n-      low_price = var\n-    else :\n-      break\n-else :\n-  for i in range(int(N/2)+1,N) :\n-    var = now_length - sum(A[:i])\n-    if half == low_price :\n-      break\n-    elif low_price > var :\n-      low_price = var\n-    else :\n-      break\n \n-if low_price == half :\n   print(0)\n else :\n-  print(low_price)\n \n```\n "
    },
    {
        "user_id": "u657208344",
        "problem_id": "p03023",
        "submission1_id": "s381291269",
        "crp_content": "\n n=int(input())\n-print(n*180)\n",
        "origin_generated_text": "\n```\n n=int(input())\n-print(n*180)\n```\n "
    },
    {
        "user_id": "u434664398",
        "problem_id": "p03103",
        "submission1_id": "s182277830",
        "crp_content": "\n N,M = [int(x) for x in input().split(' ')]\n AB = {}\n for i in range(N):\n   a,b = [int(x) for x in input().split(' ')]\n   AB[a] = b\n   \n dc = sorted(AB.items())\n \n c = 0\n m = M\n for s in dc:\n   d = m - s[1]\n   if d >= 0:\n     m -= s[1]\n     c += s[0] * s[1]\n     \n     if d == 0:\n       break\n   else:\n-    print(s[1] + d,\"xx\")\n     c += s[0] * (s[1] + d)\n     \n     break\n print(c)\n",
        "origin_generated_text": "\n```\n N,M = [int(x) for x in input().split(' ')]\n AB = {}\n for i in range(N):\n   a,b = [int(x) for x in input().split(' ')]\n   AB[a] = b\n   \n dc = sorted(AB.items())\n \n c = 0\n m = M\n for s in dc:\n   d = m - s[1]\n   if d >= 0:\n     m -= s[1]\n     c += s[0] * s[1]\n     \n     if d == 0:\n       break\n   else:\n-    print(s[1] + d,\"xx\")\n     c += s[0] * (s[1] + d)\n     \n     break\n print(c)\n```\n "
    },
    {
        "user_id": "u964299793",
        "problem_id": "p03714",
        "submission1_id": "s302652555",
        "crp_content": "\n import copy\n n=int(input())\n a=list(map(int,input().split()))\n import heapq as hq\n f1=[0]*(3*n)\n f1[n-1]=sum(a[:n])\n h=copy.deepcopy(a[:n])\n hq.heapify(h)\n su=f1[n-1]\n for i in range(n,2*n):\n     cur=a[i]\n     x=hq.heappop(h)\n     if cur>x:\n         su-=x\n         su+=cur\n         hq.heappush(h,cur)\n     else:\n         hq.heappush(h,x)\n     f1[i]=su\n f2=[0]*(3*n)\n f2[2*n]=sum(a[2*n:])\n su=f2[2*n]\n h2=[]\n for i in a[2*n:]:\n     h2.append(-i)\n hq.heapify(h2)\n for i in range(2*n-1,n-1,-1):\n     cur=a[i]\n     x=-1*hq.heappop(h2)\n     if cur<x:\n         su-=x\n         su+=cur\n         hq.heappush(h2,cur)\n     else:\n         hq.heappush(h2,-x)\n     f2[i]=su\n ans=-float('inf')\n for i in range(n-1,2*n):\n     ans=max(ans,f1[i]-f2[i+1])\n print(ans)\n \n \n \n \n",
        "origin_generated_text": "\n```\n import copy\n n=int(input())\n a=list(map(int,input().split()))\n import heapq as hq\n f1=[0]*(3*n)\n f1[n-1]=sum(a[:n])\n h=copy.deepcopy(a[:n])\n hq.heapify(h)\n su=f1[n-1]\n for i in range(n,2*n):\n     cur=a[i]\n     x=hq.heappop(h)\n     if cur>x:\n         su-=x\n         su+=cur\n         hq.heappush(h,cur)\n     else:\n         hq.heappush(h,x)\n     f1[i]=su\n f2=[0]*(3*n)\n f2[2*n]=sum(a[2*n:])\n su=f2[2*n]\n h2=[]\n for i in a[2*n:]:\n     h2.append(-i)\n hq.heapify(h2)\n for i in range(2*n-1,n-1,-1):\n     cur=a[i]\n     x=-1*hq.heappop(h2)\n     if cur<x:\n         su-=x\n         su+=cur\n         hq.heappush(h2,cur)\n     else:\n         hq.heappush(h2,-x)\n     f2[i]=su\n ans=-float('inf')\n for i in range(n-1,2*n):\n     ans=max(ans,f1[i]-f2[i+1])\n print(ans)\n \n \n \n \n```\n "
    },
    {
        "user_id": "u047102107",
        "problem_id": "p03752",
        "submission1_id": "s485132794",
        "crp_content": "\n from itertools import combinations\n \n N, K = map(int, input().split())\n A = list(map(int, input().split()))\n \n best_score = float(\"inf\")\n for sel in combinations(range(N), K):\n     cost = 0\n \n     \n     \n     first = sel[0]\n     first_max = A[first]\n     for k in range(first):\n         first_max = max(first_max, A[k])\n     current = first_max\n     if first_max > 0:\n         cost += abs(A[first] - current) \n     \n     for i in range(1, K):\n         if current > A[sel[i]]:\n             cost += abs(A[sel[i]] - current) + 1\n             current += 1\n         else:\n             current = A[sel[i]] + 1\n     \n     best_score = min(best_score, cost)\n print(best_score)\n",
        "origin_generated_text": "\n```\n from itertools import combinations\n \n N, K = map(int, input().split())\n A = list(map(int, input().split()))\n \n best_score = float(\"inf\")\n for sel in combinations(range(N), K):\n     cost = 0\n \n     \n     \n     first = sel[0]\n     first_max = A[first]\n     for k in range(first):\n         first_max = max(first_max, A[k])\n     current = first_max\n     if first_max > 0:\n         cost += abs(A[first] - current) \n     \n     for i in range(1, K):\n         if current > A[sel[i]]:\n             cost += abs(A[sel[i]] - current) + 1\n             current += 1\n         else:\n             current = A[sel[i]] + 1\n     \n     best_score = min(best_score, cost)\n print(best_score)\n```\n "
    },
    {
        "user_id": "u916242112",
        "problem_id": "p02633",
        "submission1_id": "s071660631",
        "crp_content": "\n X=int(input())\n Y =360\n while 1:\n \tif Y % X == 0:\n-\t\tprint(Y/X)\n \t\tbreak\n \telse:\n \t\tY += 360\n",
        "origin_generated_text": "\n```\n X=int(input())\n Y =360\n while 1:\n \tif Y % X == 0:\n-\t\tprint(Y/X)\n \t\tbreak\n \telse:\n \t\tY += 360\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s399239959",
        "crp_content": "\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   aa=0--a\n   bb=0--b\n   cc=0--c\n   dd=0--d\n   if xy==\"y\":\n     if bb==dd and bb%3==2:return False\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     if aa==cc and cc%3==2:return False\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   aa=0--a\n   bb=0--b\n   cc=0--c\n   dd=0--d\n   if xy==\"y\":\n     if bb==dd and bb%3==2:return False\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     if aa==cc and cc%3==2:return False\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u386819480",
        "problem_id": "p02854",
        "submission1_id": "s274276869",
        "crp_content": "\n \n import sys\n sys.setrecursionlimit(10000000)\n INF = 1<<32\n \n \n def solve(N: int, A: \"List[int]\"):\n     r = [0] * (N+1)\n     rr = [0] * (N+1)\n \n     for i in range(1,N+1):\n         r[i] = r[i-1] + A[i-1]\n         rr[i] = rr[i-1] + A[i-1]-1\n \n     from bisect import bisect_left\n     c = sum(A)/2\n     p = bisect_left(r, c)\n-    t = (r[p] - c)/0.5\n     print(int(t))\n \n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     A = [int(next(tokens)) for _ in range(N)]  \n     solve(N, A)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n sys.setrecursionlimit(10000000)\n INF = 1<<32\n \n \n def solve(N: int, A: \"List[int]\"):\n     r = [0] * (N+1)\n     rr = [0] * (N+1)\n \n     for i in range(1,N+1):\n         r[i] = r[i-1] + A[i-1]\n         rr[i] = rr[i-1] + A[i-1]-1\n \n     from bisect import bisect_left\n     c = sum(A)/2\n     p = bisect_left(r, c)\n-    t = (r[p] - c)/0.5\n     print(int(t))\n \n     return\n \n \n \n def main():\n     def iterate_tokens():\n         for line in sys.stdin:\n             for word in line.split():\n                 yield word\n     tokens = iterate_tokens()\n     N = int(next(tokens))  \n     A = [int(next(tokens)) for _ in range(N)]  \n     solve(N, A)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u075317232",
        "problem_id": "p02633",
        "submission1_id": "s055747935",
        "crp_content": "\n \n import math\n  \n def Strider():\n  \n     NumA = int(input())\n  \n-    count = 360/NumA\n     \n     NumB = 1\n     \n-    while (count == 0):\n         NumB = NumB + 1\n-        count = 360*NumB/NumA\n     \n     print(int(count))\n  \n if __name__ == '__main__':\n     Strider()\n",
        "origin_generated_text": "\n```\n \n import math\n  \n def Strider():\n  \n     NumA = int(input())\n  \n-    count = 360/NumA\n     \n     NumB = 1\n     \n-    while (count == 0):\n         NumB = NumB + 1\n-        count = 360*NumB/NumA\n     \n     print(int(count))\n  \n if __name__ == '__main__':\n     Strider()\n```\n "
    },
    {
        "user_id": "u787456042",
        "problem_id": "p03480",
        "submission1_id": "s521166656",
        "crp_content": "\n s=input();l=[]\n for i in range(len(s)-1):\n- if s[i]!=s[i+1]:l+=[max(i+1,len(s)-i-1)]\n-print(min(l)if l else 1)\n",
        "origin_generated_text": "\n```\n s=input();l=[]\n for i in range(len(s)-1):\n- if s[i]!=s[i+1]:l+=[max(i+1,len(s)-i-1)]\n-print(min(l)if l else 1)\n```\n "
    },
    {
        "user_id": "u242757684",
        "problem_id": "p02625",
        "submission1_id": "s255631660",
        "crp_content": "\n MOD = 10 ** 9 + 7\n N,M = map(int,input().split())\n ans1 = 1\n for i in range(N):\n     ans1 *= M - i\n     ans1 %= MOD\n ans2 = [1,M-N]\n for i in range(2,N+1):\n-    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\n print(ans1 * ans2[N] % MOD)\n",
        "origin_generated_text": "\n```\n MOD = 10 ** 9 + 7\n N,M = map(int,input().split())\n ans1 = 1\n for i in range(N):\n     ans1 *= M - i\n     ans1 %= MOD\n ans2 = [1,M-N]\n for i in range(2,N+1):\n-    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\n print(ans1 * ans2[N] % MOD)\n```\n "
    },
    {
        "user_id": "u647634615",
        "problem_id": "p02385",
        "submission1_id": "s193501930",
        "crp_content": "\n dice_1 = input().split()\n dice_2 = input().split()\n \n rolls = {' ':[0, 1, 2, 3, 4, 5], \n          'W':[2, 1, 5, 0, 4, 3], \n          'N':[1, 5, 2, 3, 0, 4], \n          'E':[3, 1, 0, 5, 4, 2], \n          'S':[4, 0, 2, 3, 5, 1]\n         }\n orders = [' ', 'N', 'W', 'E', 'S', 'SS']\n tf = 0\n for order in orders:\n     for d in order:\n         roll = rolls[d]\n         copy_2 = [dice_2[i] for i in roll]\n     \n     l = [1, 2, 4, 3]\n     a0 = copy_2[0] == dice_1[0]\n     a1 = copy_2[5] == dice_1[5]\n-    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n     if  a0 and a1 and a2:\n         tf += 1\n \n \n \n \n \n if tf>0:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n dice_1 = input().split()\n dice_2 = input().split()\n \n rolls = {' ':[0, 1, 2, 3, 4, 5], \n          'W':[2, 1, 5, 0, 4, 3], \n          'N':[1, 5, 2, 3, 0, 4], \n          'E':[3, 1, 0, 5, 4, 2], \n          'S':[4, 0, 2, 3, 5, 1]\n         }\n orders = [' ', 'N', 'W', 'E', 'S', 'SS']\n tf = 0\n for order in orders:\n     for d in order:\n         roll = rolls[d]\n         copy_2 = [dice_2[i] for i in roll]\n     \n     l = [1, 2, 4, 3]\n     a0 = copy_2[0] == dice_1[0]\n     a1 = copy_2[5] == dice_1[5]\n-    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n     if  a0 and a1 and a2:\n         tf += 1\n \n \n \n \n \n if tf>0:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u075155299",
        "problem_id": "p03563",
        "submission1_id": "s126662027",
        "crp_content": "\n r=int(input())\n g=int(input())\n \n-print((g-r)/2)\n",
        "origin_generated_text": "\n```\n r=int(input())\n g=int(input())\n \n-print((g-r)/2)\n```\n "
    },
    {
        "user_id": "u059727354",
        "problem_id": "p03343",
        "submission1_id": "s872750015",
        "crp_content": "\n n, k, q = map(int, input().split())\n a = list(map(int, input().split()))\n \n-d = [a]\n a = sorted(a)\n ans = a[q - 1] - a[0]\n \n while True:\n     newd = list()\n     li = list()\n     for sub in d:\n         for c in sub:\n             if c != a[0]:\n                 li.append(c)\n             else:\n                 newd.append(li)\n                 li = list()\n     newd.append(li)\n \n     d = list()\n     mi = list()\n     for li in newd:\n         if len(li) < k:\n             continue\n         else:\n             d.append(li)\n             li = sorted(li)\n             mi.extend(li[0:len(li) - k + 1])\n  \n     mi.sort()\n \n     if len(mi) >= q:\n         a.pop(0)\n         ans = min(mi[q - 1] - mi[0], ans)\n     else:\n         break\n print(ans)\n",
        "origin_generated_text": "\n```\n n, k, q = map(int, input().split())\n a = list(map(int, input().split()))\n \n-d = [a]\n a = sorted(a)\n ans = a[q - 1] - a[0]\n \n while True:\n     newd = list()\n     li = list()\n     for sub in d:\n         for c in sub:\n             if c != a[0]:\n                 li.append(c)\n             else:\n                 newd.append(li)\n                 li = list()\n     newd.append(li)\n \n     d = list()\n     mi = list()\n     for li in newd:\n         if len(li) < k:\n             continue\n         else:\n             d.append(li)\n             li = sorted(li)\n             mi.extend(li[0:len(li) - k + 1])\n  \n     mi.sort()\n \n     if len(mi) >= q:\n         a.pop(0)\n         ans = min(mi[q - 1] - mi[0], ans)\n     else:\n         break\n print(ans)\n```\n "
    },
    {
        "user_id": "u197300773",
        "problem_id": "p03318",
        "submission1_id": "s676634434",
        "crp_content": "\n def f(n):\n     s=str(n)\n     return sum([int(s[i]) for i in range(len(s))])\n \n sunuke=[]\n for i in range(100):\n     for j in range(2,11):\n         sunuke.append(j*(10**i)-1)\n L=len(sunuke)\n tmp=sunuke[L-1]/f(sunuke[L-1])\n ans=[sunuke[L-1]]\n for i in range(len(sunuke)-2,-1,-1):\n     x=sunuke[i]/f(sunuke[i])\n     if x<=tmp:\n         ans.append(sunuke[i])\n         tmp=x\n ans=ans[::-1]\n \n     \n \n for i in range(int(input())):\n     print(ans[i])\n \n",
        "origin_generated_text": "\n```\n def f(n):\n     s=str(n)\n     return sum([int(s[i]) for i in range(len(s))])\n \n sunuke=[]\n for i in range(100):\n     for j in range(2,11):\n         sunuke.append(j*(10**i)-1)\n L=len(sunuke)\n tmp=sunuke[L-1]/f(sunuke[L-1])\n ans=[sunuke[L-1]]\n for i in range(len(sunuke)-2,-1,-1):\n     x=sunuke[i]/f(sunuke[i])\n     if x<=tmp:\n         ans.append(sunuke[i])\n         tmp=x\n ans=ans[::-1]\n \n     \n \n for i in range(int(input())):\n     print(ans[i])\n \n```\n "
    },
    {
        "user_id": "u583285098",
        "problem_id": "p02665",
        "submission1_id": "s431028962",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n last = A[-1]\n count = last\n root = 1\n for i in range(N):\n   if root > last + A[i]:\n     root = last + A[i]\n-  count+=root\n   root = (root-A[i])*2\n   if root < A[i+1]:\n     print(-1)\n     break\n else:\n   print(count)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n last = A[-1]\n count = last\n root = 1\n for i in range(N):\n   if root > last + A[i]:\n     root = last + A[i]\n-  count+=root\n   root = (root-A[i])*2\n   if root < A[i+1]:\n     print(-1)\n     break\n else:\n   print(count)\n```\n "
    },
    {
        "user_id": "u396553339",
        "problem_id": "p03729",
        "submission1_id": "s581780979",
        "crp_content": "\n a, b, c = map(str, input().split())\n \n a_last = a[len(a) - 1]\n b_last = b[len(b) - 1]\n \n if a_last == b[0] and b_last == c[0] :\n     print('YES')\n else :\n-    print('No')\n",
        "origin_generated_text": "\n```\n a, b, c = map(str, input().split())\n \n a_last = a[len(a) - 1]\n b_last = b[len(b) - 1]\n \n if a_last == b[0] and b_last == c[0] :\n     print('YES')\n else :\n-    print('No')\n```\n "
    },
    {
        "user_id": "u375282392",
        "problem_id": "p03103",
        "submission1_id": "s187794140",
        "crp_content": "\n n,m = map(int,input().split())\n ab = []\n for i in range(n):\n \tab.append(list(map(int,input().split())))\n     \n sab = sorted(ab,key=lambda x:x[0])\n cost = 0\n for i in sab:\n-\tprint(cost,m)\n \tif m - i[1] > 0:\n \t\tm -= i[1]\n \t\tcost += i[0] * i[1]\n \telse:\n \t\tfor j in range(m):\n \t\t\tcost += i[0]\n \t\tbreak\n print(cost)\n",
        "origin_generated_text": "\n```\n n,m = map(int,input().split())\n ab = []\n for i in range(n):\n \tab.append(list(map(int,input().split())))\n     \n sab = sorted(ab,key=lambda x:x[0])\n cost = 0\n for i in sab:\n-\tprint(cost,m)\n \tif m - i[1] > 0:\n \t\tm -= i[1]\n \t\tcost += i[0] * i[1]\n \telse:\n \t\tfor j in range(m):\n \t\t\tcost += i[0]\n \t\tbreak\n print(cost)\n```\n "
    },
    {
        "user_id": "u535171899",
        "problem_id": "p03568",
        "submission1_id": "s590949576",
        "crp_content": "\n \n \n \n n = int(input())\n a_inputs = list(map(int,input().split()))\n \n all_pair = 1\n odd_pair = 1\n \n for i in range(n):\n     if a_inputs[i]==1:\n         all_pair*=2\n         odd_pair*=1\n     else:\n         if a_inputs[i]%2==0:\n             odd_pair*=2\n         else:\n             odd_pair*=1\n         all_pair*=3\n \n-print(all_pair-odd_pair)\n \n \n \n",
        "origin_generated_text": "\n```\n \n \n \n n = int(input())\n a_inputs = list(map(int,input().split()))\n \n all_pair = 1\n odd_pair = 1\n \n for i in range(n):\n     if a_inputs[i]==1:\n         all_pair*=2\n         odd_pair*=1\n     else:\n         if a_inputs[i]%2==0:\n             odd_pair*=2\n         else:\n             odd_pair*=1\n         all_pair*=3\n \n-print(all_pair-odd_pair)\n \n \n \n```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s567335714",
        "crp_content": "\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n-            parent = \" parent key = \" + str(target_list[parent_index]) + \" \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n         if left_index < len(target_list) and right_index < len(target_list):\n             leaf = \" left key ={}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n \n \n def decode_heap(target_list):\n     for i, key in enumerate(target_list):\n         node_index = i + 1\n         parent_index = int(node_index / 2) - 1\n         parent = \"\"\n         if not parent_index < 0:\n-            parent = \" parent key = \" + str(target_list[parent_index]) + \" \"\n             \n         left_index = node_index * 2 - 1\n         right_index = node_index * 2\n         leaf = \"\"\n         if left_index < len(target_list) and right_index < len(target_list):\n             leaf = \" left key ={}, right key = {}, \".format(target_list[left_index], target_list[right_index])\n \n         print(\"node {}: key = {},{}{}\".format(node_index, key, parent, leaf))\n \n         \n def main():\n     n_nodes = int(input())\n     target_list = [int(a) for a in input().split()]\n     decode_heap(target_list)\n     \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u254088063",
        "problem_id": "p02665",
        "submission1_id": "s465691989",
        "crp_content": "\n N = int(input())\n A = list(map(int, input().split()))\n bottom = sum(A)\n \n if A[0] >= 2:\n   print(-1)\n else:\n-  print(1)\n \n exit()\n ret = 1\n children = 1 - A[0]\n bottom -= A[0]\n  \n for i in range(N):\n     children = children * 2 - A[i+1]\n     if children <= -1:\n       ret = -1\n       break\n     \n     bottom -= A[i+1]\n     if children >= bottom:\n       children = bottom\n     ret += children + A[i+1]\n print(ret)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int, input().split()))\n bottom = sum(A)\n \n if A[0] >= 2:\n   print(-1)\n else:\n-  print(1)\n \n exit()\n ret = 1\n children = 1 - A[0]\n bottom -= A[0]\n  \n for i in range(N):\n     children = children * 2 - A[i+1]\n     if children <= -1:\n       ret = -1\n       break\n     \n     bottom -= A[i+1]\n     if children >= bottom:\n       children = bottom\n     ret += children + A[i+1]\n print(ret)\n \n```\n "
    },
    {
        "user_id": "u224488911",
        "problem_id": "p03760",
        "submission1_id": "s637709004",
        "crp_content": "\n o = list(input())\n e = list(input())\n-for (x,y) in zip(o,e) :print(x+y,end = \"\")\n",
        "origin_generated_text": "\n```\n o = list(input())\n e = list(input())\n-for (x,y) in zip(o,e) :print(x+y,end = \"\")\n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03343",
        "submission1_id": "s351299238",
        "crp_content": "\n N, K, Q = [int(i) for i in input().split()]\n A = [(int(v),i) for i,v in enumerate(input().split())]\n A.sort()\n B = [0]*(N)\n for i in range(N):\n     B[A[i][1]] = i\n C = [A[B[i]][0] for i in range(N)]\n Candi = set(range(N))\n ctr = 0\n ans = []\n while len(Candi) >= Q:\n     ans.append((list(Candi)[0],list(Candi)[Q-1]))\n     x = B.index(ctr)\n     Candi = Candi - set(B[x-K+1:x+K])\n     ctr += 1\n print(min([A[j][0]-A[i][0] for i,j in ans]))\n \n",
        "origin_generated_text": "\n```\n N, K, Q = [int(i) for i in input().split()]\n A = [(int(v),i) for i,v in enumerate(input().split())]\n A.sort()\n B = [0]*(N)\n for i in range(N):\n     B[A[i][1]] = i\n C = [A[B[i]][0] for i in range(N)]\n Candi = set(range(N))\n ctr = 0\n ans = []\n while len(Candi) >= Q:\n     ans.append((list(Candi)[0],list(Candi)[Q-1]))\n     x = B.index(ctr)\n     Candi = Candi - set(B[x-K+1:x+K])\n     ctr += 1\n print(min([A[j][0]-A[i][0] for i,j in ans]))\n \n```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p03752",
        "submission1_id": "s199281832",
        "crp_content": "\n n, k = map(int, input().split())\n li = list(map(int, input().split()))\n min_ = 10**12\n for i in range(1<<n):\n     max_height = li[0]\n     money = 0\n     can_look = 0\n     li_h = []\n     for j in range(n):\n         if j != 0:\n             max_height = max(max_height, li_h[j-1])\n         \n         if j == 0:\n             can_look += 1\n             li_h.append(li[0])\n             continue\n         if (i>>j)&1:\n             can_look += 1\n             if li[j] <= max_height:\n                 li_h.append(max_height+1)\n             else:\n                 li_h.append(li[j])\n         else:\n             li_h.append(li[j])\n     if can_look >= k:\n         money = sum(li_h) - sum(li)\n         min_ = min(min_, money)\n-        print(li_h)\n-        print(li)\n         \n print(min_)\n",
        "origin_generated_text": "\n```\n n, k = map(int, input().split())\n li = list(map(int, input().split()))\n min_ = 10**12\n for i in range(1<<n):\n     max_height = li[0]\n     money = 0\n     can_look = 0\n     li_h = []\n     for j in range(n):\n         if j != 0:\n             max_height = max(max_height, li_h[j-1])\n         \n         if j == 0:\n             can_look += 1\n             li_h.append(li[0])\n             continue\n         if (i>>j)&1:\n             can_look += 1\n             if li[j] <= max_height:\n                 li_h.append(max_height+1)\n             else:\n                 li_h.append(li[j])\n         else:\n             li_h.append(li[j])\n     if can_look >= k:\n         money = sum(li_h) - sum(li)\n         min_ = min(min_, money)\n-        print(li_h)\n-        print(li)\n         \n print(min_)\n```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03546",
        "submission1_id": "s744104540",
        "crp_content": "\n H,W=map(int,input().split())\n \n A=[]\n for i in range(10):\n     B=list(map(int,input().split()))\n     A.append(B)\n \n \n for a in range(10):\n     for b in range(10):\n         for c in range(10):\n             A[a][b]=min(A[a][b],A[a][c]+A[c][b])\n \n ans=0\n D=[]\n for j in range(H):\n     C=list(map(int,input().split()))\n     D.append(C)\n         \n for k in range(H):\n     for l in range(W):\n         if D[k][l]!=(-1):\n-            ans+=A[D[k][l]][1]\n print(ans)\n",
        "origin_generated_text": "\n```\n H,W=map(int,input().split())\n \n A=[]\n for i in range(10):\n     B=list(map(int,input().split()))\n     A.append(B)\n \n \n for a in range(10):\n     for b in range(10):\n         for c in range(10):\n             A[a][b]=min(A[a][b],A[a][c]+A[c][b])\n \n ans=0\n D=[]\n for j in range(H):\n     C=list(map(int,input().split()))\n     D.append(C)\n         \n for k in range(H):\n     for l in range(W):\n         if D[k][l]!=(-1):\n-            ans+=A[D[k][l]][1]\n print(ans)\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03480",
        "submission1_id": "s793205258",
        "crp_content": "\n \n from collections import defaultdict\n from collections import deque\n from heapq import heappush, heappop\n import sys\n import math\n import bisect\n import random\n import itertools\n sys.setrecursionlimit(10**5)\n stdin = sys.stdin\n bisect_left = bisect.bisect_left\n bisect_right = bisect.bisect_right\n def LI(): return list(map(int, stdin.readline().split()))\n def LF(): return list(map(float, stdin.readline().split()))\n def LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\n def II(): return int(stdin.readline())\n def IF(): return float(stdin.readline())\n def LS(): return list(map(list, stdin.readline().split()))\n def S(): return list(stdin.readline().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     a, b, c, d = LI()\n     a += b\n     c += d\n     ans = [\"Left\", \"Right\"]\n     if a == c:\n         print(\"Balanced\")\n         return\n     print(ans[a < c])\n     return\n \n \n def B():\n     n, a, b = LI()\n     ans = 0\n     for i in range(1, n + 1):\n         if a <= sum(list(map(int, list(str(i))))) <= b:\n            ans += i\n     print(ans) \n     \n     return\n \n \n def C():\n     x, y = LI()\n     ans = 0\n     while x <= y:\n         ans += 1\n         x *= 2\n     print(ans)\n     return\n \n \n def D():\n     s = S()\n     lis = [0]\n     i = 0\n     while i < len(s):\n         si = s[i]\n         b = 0\n         for k in range(i, len(s)):\n             if si == s[k]:\n                 b += 1\n                 continue\n             i = k\n             lis.append(b)\n             break\n         else:\n             i = k\n             lis.append(b)\n             if i == len(s) - 1:\n                 lis.append(0)\n                 i += 1\n     if len(lis) == 4:\n         print(max(lis[1:3]))\n     else:\n         ans = inf\n         for i in range(1, len(lis) - 2):\n             ans = min(ans, lis[i] + lis[i + 1])\n         print(ans)\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict\n from collections import deque\n from heapq import heappush, heappop\n import sys\n import math\n import bisect\n import random\n import itertools\n sys.setrecursionlimit(10**5)\n stdin = sys.stdin\n bisect_left = bisect.bisect_left\n bisect_right = bisect.bisect_right\n def LI(): return list(map(int, stdin.readline().split()))\n def LF(): return list(map(float, stdin.readline().split()))\n def LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\n def II(): return int(stdin.readline())\n def IF(): return float(stdin.readline())\n def LS(): return list(map(list, stdin.readline().split()))\n def S(): return list(stdin.readline().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     a, b, c, d = LI()\n     a += b\n     c += d\n     ans = [\"Left\", \"Right\"]\n     if a == c:\n         print(\"Balanced\")\n         return\n     print(ans[a < c])\n     return\n \n \n def B():\n     n, a, b = LI()\n     ans = 0\n     for i in range(1, n + 1):\n         if a <= sum(list(map(int, list(str(i))))) <= b:\n            ans += i\n     print(ans) \n     \n     return\n \n \n def C():\n     x, y = LI()\n     ans = 0\n     while x <= y:\n         ans += 1\n         x *= 2\n     print(ans)\n     return\n \n \n def D():\n     s = S()\n     lis = [0]\n     i = 0\n     while i < len(s):\n         si = s[i]\n         b = 0\n         for k in range(i, len(s)):\n             if si == s[k]:\n                 b += 1\n                 continue\n             i = k\n             lis.append(b)\n             break\n         else:\n             i = k\n             lis.append(b)\n             if i == len(s) - 1:\n                 lis.append(0)\n                 i += 1\n     if len(lis) == 4:\n         print(max(lis[1:3]))\n     else:\n         ans = inf\n         for i in range(1, len(lis) - 2):\n             ans = min(ans, lis[i] + lis[i + 1])\n         print(ans)\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s400182570",
        "crp_content": "\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n-    x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    y3, x3 = divmod(s, 10**9)\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n import sys\n sys.setrecursionlimit(12345678)\n import itertools\n from collections import Counter\n from collections import defaultdict\n from collections import deque\n import bisect\n from heapq import heappush, heappop\n \n \n def main():\n     s = int(input())\n-    x1, y1, x2, y2 = 0, 0, 10 ** 9, 1\n \n-    y3, x3 = divmod(s, 10**9)\n \n     print(x1, y1, x2, y2, x3, y3)\n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03959",
        "submission1_id": "s379070612",
        "crp_content": "\n \n \n \n \n \n \n \n \n n = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n Tsa = [0]*n\n Asa = [0]*n\n \n if n == 1:\n \tif T[0] != A[0]:\n \t\tprint(0)\n \telse:\n \t\tprint(1)\n elif T[0] != A[-1]:\n \tprint(0)\n else:\n \t\n \tdai = T[0]\n \tshou = T[0]\n \tTsa[0] = (shou, dai)\n \n \tfor i in range(1, n):\n \t\tif T[i] == dai:\n \t\t\tTsa[i] = (shou, dai)\n \t\telse:\n \t\t\tshou = dai\n \t\t\tdai = T[i]\n \t\t\tTsa[i] = (dai, dai)\n \n \t\n \tdai = A[-1]\n \tshou = A[-1]\n \tAsa[-1] = (shou, dai)\n \n \tfor i in reversed(range(-n, -1)):\n \t\tif A[i] == dai:\n \t\t\tAsa[i] = (shou, dai)\n \t\telse:\n \t\t\tshou = dai\n \t\t\tdai = A[i]\n \t\t\tAsa[i] = (dai, dai)\n \n \tans = 1\n \tfor i in range(n):\n \t\td = max(Tsa[i][0], Asa[i][0])\n \t\tu = min(Tsa[i][1], Asa[i][1])\n \n \t\tif d > u:\n \t\t\tans = 0\n \t\t\tbreak\n \t\telse:\n \t\t\tans *= u - d + 1\n \tprint(ans)\n \n",
        "origin_generated_text": "\n```\n \n \n \n \n \n \n \n \n n = int(input())\n T = list(map(int, input().split()))\n A = list(map(int, input().split()))\n \n Tsa = [0]*n\n Asa = [0]*n\n \n if n == 1:\n \tif T[0] != A[0]:\n \t\tprint(0)\n \telse:\n \t\tprint(1)\n elif T[0] != A[-1]:\n \tprint(0)\n else:\n \t\n \tdai = T[0]\n \tshou = T[0]\n \tTsa[0] = (shou, dai)\n \n \tfor i in range(1, n):\n \t\tif T[i] == dai:\n \t\t\tTsa[i] = (shou, dai)\n \t\telse:\n \t\t\tshou = dai\n \t\t\tdai = T[i]\n \t\t\tTsa[i] = (dai, dai)\n \n \t\n \tdai = A[-1]\n \tshou = A[-1]\n \tAsa[-1] = (shou, dai)\n \n \tfor i in reversed(range(-n, -1)):\n \t\tif A[i] == dai:\n \t\t\tAsa[i] = (shou, dai)\n \t\telse:\n \t\t\tshou = dai\n \t\t\tdai = A[i]\n \t\t\tAsa[i] = (dai, dai)\n \n \tans = 1\n \tfor i in range(n):\n \t\td = max(Tsa[i][0], Asa[i][0])\n \t\tu = min(Tsa[i][1], Asa[i][1])\n \n \t\tif d > u:\n \t\t\tans = 0\n \t\t\tbreak\n \t\telse:\n \t\t\tans *= u - d + 1\n \tprint(ans)\n \n```\n "
    },
    {
        "user_id": "u127499732",
        "problem_id": "p03272",
        "submission1_id": "s820880957",
        "crp_content": "\n a,b=map(int,input().split())\n-print(b-a-1)\n",
        "origin_generated_text": "\n```\n a,b=map(int,input().split())\n-print(b-a-1)\n```\n "
    },
    {
        "user_id": "u210827208",
        "problem_id": "p03087",
        "submission1_id": "s372193696",
        "crp_content": "\n n,q=map(int,input().split())\n s=input()\n V=[0]*n\n X=[]\n for i in range(q):\n     l,r=map(int,input().split())\n     X.append([l,r])\n \n-for i in range(n-1):\n-    if s[i:i+2]=='AC':\n-        V[i]+=1\n \n for i in range(q):\n     ans=sum(V[X[i][0]-1:X[i][1]])\n-    if V[X[i][1]-1]==1:\n-        ans-=1\n print(ans)\n",
        "origin_generated_text": "\n```\n n,q=map(int,input().split())\n s=input()\n V=[0]*n\n X=[]\n for i in range(q):\n     l,r=map(int,input().split())\n     X.append([l,r])\n \n-for i in range(n-1):\n-    if s[i:i+2]=='AC':\n-        V[i]+=1\n \n for i in range(q):\n     ans=sum(V[X[i][0]-1:X[i][1]])\n-    if V[X[i][1]-1]==1:\n-        ans-=1\n print(ans)\n```\n "
    },
    {
        "user_id": "u329865314",
        "problem_id": "p02633",
        "submission1_id": "s118468146",
        "crp_content": "\n a=int(input())\n x = 0\n i = 1\n while(1):\n   x += a\n   i += 1\n-  x %= 360\n   if x:\n     continue\n   else:\n     print(i)\n     quit()\n",
        "origin_generated_text": "\n```\n a=int(input())\n x = 0\n i = 1\n while(1):\n   x += a\n   i += 1\n-  x %= 360\n   if x:\n     continue\n   else:\n     print(i)\n     quit()\n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03096",
        "submission1_id": "s508708196",
        "crp_content": "\n import sys\n from bisect import bisect_right as br\n input = sys.stdin.readline\n N = int(input())\n-table = [[] for _ in range(2 * pow(10, 5) + 1)]\n-a = []\n-t = 0\n mod = 10 ** 9 + 7\n for i in range(N):\n   x = int(input())\n-  if t != x:\n-    table[x].append(i)\n-    t = x\n-  a.append(x)\n \n-dp = [0] * N\n-dp[0] = 1\n-for i in range(N):\n-  j = br(table[a[i]], i)\n-  if j < len(table[a[i]]):\n-    dp[table[a[i]][j]] += dp[i]\n-    dp[table[a[i]][j]] %= mod\n-  if i + 1 < N: \n-    dp[i + 1] += dp[i]\n-    dp[i + 1] %= mod\n-  \n-print(dp[-1])\n",
        "origin_generated_text": "\n```\n import sys\n from bisect import bisect_right as br\n input = sys.stdin.readline\n N = int(input())\n-table = [[] for _ in range(2 * pow(10, 5) + 1)]\n-a = []\n-t = 0\n mod = 10 ** 9 + 7\n for i in range(N):\n   x = int(input())\n-  if t != x:\n-    table[x].append(i)\n-    t = x\n-  a.append(x)\n \n-dp = [0] * N\n-dp[0] = 1\n-for i in range(N):\n-  j = br(table[a[i]], i)\n-  if j < len(table[a[i]]):\n-    dp[table[a[i]][j]] += dp[i]\n-    dp[table[a[i]][j]] %= mod\n-  if i + 1 < N: \n-    dp[i + 1] += dp[i]\n-    dp[i + 1] %= mod\n-  \n-print(dp[-1])\n```\n "
    },
    {
        "user_id": "u843932857",
        "problem_id": "p03080",
        "submission1_id": "s660588211",
        "crp_content": "\n n=int(input())\n-s = input().split()\n \n r = 0\n b = 0\n for i in s:\n     if i == \"R\":\n         r += 1\n     if i == \"B\":\n         b += 1\n \n if r <= b:\n     print(\"No\")\n else:\n     print(\"Yes\")\n",
        "origin_generated_text": "\n```\n n=int(input())\n-s = input().split()\n \n r = 0\n b = 0\n for i in s:\n     if i == \"R\":\n         r += 1\n     if i == \"B\":\n         b += 1\n \n if r <= b:\n     print(\"No\")\n else:\n     print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u090225501",
        "problem_id": "p03625",
        "submission1_id": "s237224257",
        "crp_content": "\n def main():\n     n = int(input())\n     a = [int(s) for s in input().split()]\n     print(solve(a))\n \n def solve(a):\n     cands = set()\n     s = set()\n     for i in a:\n         if i in s:\n             cands.add(i)\n         else:\n             s.add(i)\n     \n     x = sorted(cands, reverse=True)\n     if len(x) < 2:\n         return 0\n     \n     return x[0] * x[1]\n \n main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     n = int(input())\n     a = [int(s) for s in input().split()]\n     print(solve(a))\n \n def solve(a):\n     cands = set()\n     s = set()\n     for i in a:\n         if i in s:\n             cands.add(i)\n         else:\n             s.add(i)\n     \n     x = sorted(cands, reverse=True)\n     if len(x) < 2:\n         return 0\n     \n     return x[0] * x[1]\n \n main()\n \n```\n "
    },
    {
        "user_id": "u983918956",
        "problem_id": "p03959",
        "submission1_id": "s351734526",
        "crp_content": "\n mod = 10 ** 9 + 7\n \n N = int(input())\n T = [0] + list(map(int, input().split()))\n A = list(map(int, input().split())) + [0]\n \n H = [0] * N\n for i in range(1, N):\n     if T[i - 1] < T[i]:\n         H[i - 1] = T[i]\n for i in range(N - 1, -1, -1):\n     if A[i + 1] < A[i]:\n         if H[i] == 0 or H[i] == A[i]:\n             H[i] = A[i]\n         else:\n             print(0)\n             exit()\n \n ans = 1\n T.pop(0)\n A.pop(-1)\n for h, t, a in zip(H, T, A):\n     if h == 0:\n         ans *= min(t, a)\n         ans %= mod\n print(ans)\n",
        "origin_generated_text": "\n```\n mod = 10 ** 9 + 7\n \n N = int(input())\n T = [0] + list(map(int, input().split()))\n A = list(map(int, input().split())) + [0]\n \n H = [0] * N\n for i in range(1, N):\n     if T[i - 1] < T[i]:\n         H[i - 1] = T[i]\n for i in range(N - 1, -1, -1):\n     if A[i + 1] < A[i]:\n         if H[i] == 0 or H[i] == A[i]:\n             H[i] = A[i]\n         else:\n             print(0)\n             exit()\n \n ans = 1\n T.pop(0)\n A.pop(-1)\n for h, t, a in zip(H, T, A):\n     if h == 0:\n         ans *= min(t, a)\n         ans %= mod\n print(ans)\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s127182110",
        "crp_content": "\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"x\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n",
        "origin_generated_text": "\n```\n \n def check(lv,aa,bb,cc,dd,xy):\n   a,b,c,d=aa,bb,cc,dd\n   if a>c:a,c=c,a\n   if b>d:b,d=d,b\n   mi=3**(lv-1)\n   ma=2*3**(lv-1)+1\n   if xy==\"x\":\n     return (a<=mi and ma<=c and mi<b<=d<ma)\n   else:\n     return (b<=mi and ma<=d and mi<a<=c<ma)\n def solve(a,b,c,d):\n   mx=my=0\n   for i in range(1,31):\n     if check(i,a,b,c,d,\"x\"):mx=i\n     if check(i,a,b,c,d,\"y\"):my=i\n   if mx<my:\n     ans=abs(a-c)\n     mi=3**(my-1)\n     ma=2*3**(my-1)+1\n     ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n     return ans\n   if mx>my:\n     ans=abs(b-d)\n     mi=3**(mx-1)\n     ma=2*3**(mx-1)+1\n     ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n     return ans\n   if mx==my==0:return abs(a-c)+abs(b-d)\n   ans=1/0\n q=int(input())\n for _ in range(q):\n   a,b,c,d=map(int,input().split())\n   print(solve(a,b,c,d))\n \n```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02633",
        "submission1_id": "s563696661",
        "crp_content": "\n x = int(input())\n-for i in range(1, 360):\n     if (x*i)%360 == 0:\n         print(i)\n         exit()\n-        \n",
        "origin_generated_text": "\n```\n x = int(input())\n-for i in range(1, 360):\n     if (x*i)%360 == 0:\n         print(i)\n         exit()\n-        \n```\n "
    },
    {
        "user_id": "u998733244",
        "problem_id": "p02633",
        "submission1_id": "s404472021",
        "crp_content": "\n \n \n X = int(input())\n \n index = 1\n while True:\n-    if X * index % 180 == 0:\n         print(index*2)\n         break\n     index += 1\n \n",
        "origin_generated_text": "\n```\n \n \n X = int(input())\n \n index = 1\n while True:\n-    if X * index % 180 == 0:\n         print(index*2)\n         break\n     index += 1\n \n```\n "
    },
    {
        "user_id": "u063073794",
        "problem_id": "p03036",
        "submission1_id": "s646624169",
        "crp_content": "\n a,b,c = map(int, input().split())\n x0=c\n x1=a*c-b\n x2=2*(x1-x0)+x1\n x3=2*(x2-x1)+x2\n x4=2*(x3-x2)+x3\n x5=2*(x4-x3)+x4\n x6=2*(x5-x4)+x5\n x7=2*(x6-x5)+x6\n x8=2*(x7-x6)+x7\n x9=2*(x8-x7)+x8\n x10=2*(x9-x8)+x9\n \n-print(x1)\n-print(x2)\n-print(x3)\n-print(x4)\n-print(x5)\n-print(x6)\n-print(x7)\n-print(x8)\n-print(x9)\n-print(x10)\n \n",
        "origin_generated_text": "\n```\n a,b,c = map(int, input().split())\n x0=c\n x1=a*c-b\n x2=2*(x1-x0)+x1\n x3=2*(x2-x1)+x2\n x4=2*(x3-x2)+x3\n x5=2*(x4-x3)+x4\n x6=2*(x5-x4)+x5\n x7=2*(x6-x5)+x6\n x8=2*(x7-x6)+x7\n x9=2*(x8-x7)+x8\n x10=2*(x9-x8)+x9\n \n-print(x1)\n-print(x2)\n-print(x3)\n-print(x4)\n-print(x5)\n-print(x6)\n-print(x7)\n-print(x8)\n-print(x9)\n-print(x10)\n \n```\n "
    },
    {
        "user_id": "u211706121",
        "problem_id": "p02580",
        "submission1_id": "s231820315",
        "crp_content": "\n \n from collections import defaultdict\n \n H,W,M=map(int,input().split())\n AB=[tuple(map(int,input().split()))for i in range(M)]\n AB=[(a-1,b-1)for a,b in AB]\n st=set(AB)\n \n Wc=defaultdict(lambda :0)\n Hc=defaultdict(lambda :0)\n for a,b in AB:\n     Hc[a]+=1\n     Wc[b]+=1\n \n Hm=max(Hc.values())\n for i in Hc.keys():\n     if Hc[i]==Hm:\n         x=i\n         break\n Wm=max(Wc.values())\n for j in Wc.keys():\n     if Wc[j]==Wm:\n         y=j\n         break\n \n \n-ans=Hc[x] + Wc[y] +(-1 if (x,y) in st else 0)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict\n \n H,W,M=map(int,input().split())\n AB=[tuple(map(int,input().split()))for i in range(M)]\n AB=[(a-1,b-1)for a,b in AB]\n st=set(AB)\n \n Wc=defaultdict(lambda :0)\n Hc=defaultdict(lambda :0)\n for a,b in AB:\n     Hc[a]+=1\n     Wc[b]+=1\n \n Hm=max(Hc.values())\n for i in Hc.keys():\n     if Hc[i]==Hm:\n         x=i\n         break\n Wm=max(Wc.values())\n for j in Wc.keys():\n     if Wc[j]==Wm:\n         y=j\n         break\n \n \n-ans=Hc[x] + Wc[y] +(-1 if (x,y) in st else 0)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u584174687",
        "problem_id": "p03200",
        "submission1_id": "s749260039",
        "crp_content": "\n data = list(input())[::-1]\n \n count = 0\n \n \n count_b = 0\n for i in range(len(data)):\n     \n     if data[i] == 'W':\n         count += count_b\n         \n         \n         \n     else:\n         count_b += 1\n     \n     \n print(count)\n \n",
        "origin_generated_text": "\n```\n data = list(input())[::-1]\n \n count = 0\n \n \n count_b = 0\n for i in range(len(data)):\n     \n     if data[i] == 'W':\n         count += count_b\n         \n         \n         \n     else:\n         count_b += 1\n     \n     \n print(count)\n \n```\n "
    },
    {
        "user_id": "u957957759",
        "problem_id": "p03998",
        "submission1_id": "s593502386",
        "crp_content": "\n a=input()\n b=input()\n c=input()\n \n \n \n \n \n n='a'\n while True:\n     \n     if n=='a':\n         if len(a)==0:\n             print('A')\n             break\n         else:\n             n=a[0]\n-            a=a.lstrip(a[0])\n     elif n=='b':\n         if len(b)==0:\n             print('B')\n             break\n         else:\n             n=b[0]\n-            b=b.lstrip(b[0])\n     else:\n         if len(c)==0:\n             print('C')\n             break\n         else:\n             n=c[0]\n-            c=c.lstrip(c[0])\n \n \n",
        "origin_generated_text": "\n```\n a=input()\n b=input()\n c=input()\n \n \n \n \n \n n='a'\n while True:\n     \n     if n=='a':\n         if len(a)==0:\n             print('A')\n             break\n         else:\n             n=a[0]\n-            a=a.lstrip(a[0])\n     elif n=='b':\n         if len(b)==0:\n             print('B')\n             break\n         else:\n             n=b[0]\n-            b=b.lstrip(b[0])\n     else:\n         if len(c)==0:\n             print('C')\n             break\n         else:\n             n=c[0]\n-            c=c.lstrip(c[0])\n \n \n```\n "
    },
    {
        "user_id": "u064505481",
        "problem_id": "p02642",
        "submission1_id": "s180627575",
        "crp_content": "\n from sys import stdin, stdout, setrecursionlimit\n from collections import deque, defaultdict, Counter\n import math\n \n rl = lambda: stdin.readline()\n rll = lambda: stdin.readline().split()\n rli = lambda: map(int, stdin.readline().split())\n rlf = lambda: map(float, stdin.readline().split())\n \n INF, NINF = float('inf'), float('-inf')\n \n def main():\n \tn = int(rl())\n \tA = list(rli())\n \tAset = set(A)\n \tif 1 in Aset:\n \t\tprint(1)\n \t\treturn\n \tAcnt = Counter(A)\n \tans = 0\n \tfor i, num in enumerate(A):\n \t\tdiv = 2\n \t\tflag = True\n \t\tif Acnt[num] > 1:\n \t\t\tcontinue\n \t\twhile div*div <= num:\n \t\t\tif num % div == 0:\n \t\t\t\tother = num\n-\t\t\t\tif div in Aset or other in Aset:\n \t\t\t\t\tflag = False\n \t\t\t\t\tbreak\n \t\t\tdiv += 1\n \t\tif flag:\n \t\t\tans += 1\n \tprint(ans)\n \tstdout.close()\n \n if __name__ == \"__main__\":\n \tmain()\n",
        "origin_generated_text": "\n```\n from sys import stdin, stdout, setrecursionlimit\n from collections import deque, defaultdict, Counter\n import math\n \n rl = lambda: stdin.readline()\n rll = lambda: stdin.readline().split()\n rli = lambda: map(int, stdin.readline().split())\n rlf = lambda: map(float, stdin.readline().split())\n \n INF, NINF = float('inf'), float('-inf')\n \n def main():\n \tn = int(rl())\n \tA = list(rli())\n \tAset = set(A)\n \tif 1 in Aset:\n \t\tprint(1)\n \t\treturn\n \tAcnt = Counter(A)\n \tans = 0\n \tfor i, num in enumerate(A):\n \t\tdiv = 2\n \t\tflag = True\n \t\tif Acnt[num] > 1:\n \t\t\tcontinue\n \t\twhile div*div <= num:\n \t\t\tif num % div == 0:\n \t\t\t\tother = num\n-\t\t\t\tif div in Aset or other in Aset:\n \t\t\t\t\tflag = False\n \t\t\t\t\tbreak\n \t\t\tdiv += 1\n \t\tif flag:\n \t\t\tans += 1\n \tprint(ans)\n \tstdout.close()\n \n if __name__ == \"__main__\":\n \tmain()\n```\n "
    },
    {
        "user_id": "u357267874",
        "problem_id": "p02281",
        "submission1_id": "s879594741",
        "crp_content": "\n class Node:\n     def __init__(self, id):\n         self.id = id\n         self.parent = None\n         self.left = None\n         self.right = None\n \n root = None\n n = int(input())\n node_list = []\n for i in range(n):\n     node_list.append(Node(i))\n \n for i in range(n):\n     id, left, right = list(map(int, input().split()))\n     node = node_list[id]\n     if left > -1:\n         node_list[left].parent = node\n         node.left = node_list[left]\n     if right > -1:\n         node_list[right].parent = node\n         node.right = node_list[right]\n \n root = None\n for node in node_list:\n     if node.parent is None:\n         root = node\n         break\n \n def preorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     preorder(node.left)\n     preorder(node.right)\n \n def inorder(node):\n     if node is None:\n         return\n     \n     inorder(node.left)\n     print(' ' + str(node.id), end='')\n     inorder(node.right)\n \n def postorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     postorder(node.left)\n     postorder(node.right)\n \n print('Preorder')\n preorder(root)\n print('')\n \n print('Inorder')\n inorder(root)\n print('')\n \n print('Postorder')\n postorder(root)\n print('')\n \n",
        "origin_generated_text": "\n```\n class Node:\n     def __init__(self, id):\n         self.id = id\n         self.parent = None\n         self.left = None\n         self.right = None\n \n root = None\n n = int(input())\n node_list = []\n for i in range(n):\n     node_list.append(Node(i))\n \n for i in range(n):\n     id, left, right = list(map(int, input().split()))\n     node = node_list[id]\n     if left > -1:\n         node_list[left].parent = node\n         node.left = node_list[left]\n     if right > -1:\n         node_list[right].parent = node\n         node.right = node_list[right]\n \n root = None\n for node in node_list:\n     if node.parent is None:\n         root = node\n         break\n \n def preorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     preorder(node.left)\n     preorder(node.right)\n \n def inorder(node):\n     if node is None:\n         return\n     \n     inorder(node.left)\n     print(' ' + str(node.id), end='')\n     inorder(node.right)\n \n def postorder(node):\n     if node is None:\n         return\n     print(' ' + str(node.id), end='')\n     postorder(node.left)\n     postorder(node.right)\n \n print('Preorder')\n preorder(root)\n print('')\n \n print('Inorder')\n inorder(root)\n print('')\n \n print('Postorder')\n postorder(root)\n print('')\n \n```\n "
    },
    {
        "user_id": "u106311097",
        "problem_id": "p02886",
        "submission1_id": "s383080756",
        "crp_content": "\n \n \n import sys\n from itertools import product\n \n s2nn = lambda s: [int(c) for c in s.split(' ')]\n ss2nn = lambda ss: [int(s) for s in list(ss)]\n ss2nnn = lambda ss: [s2nn(s) for s in list(ss)]\n i2s = lambda: sys.stdin.readline().rstrip()\n i2n = lambda: int(i2s())\n i2nn = lambda: s2nn(i2s())\n ii2ss = lambda n: [i2s() for _ in range(n)]\n ii2nn = lambda n: ss2nn(ii2ss(n))\n ii2nnn = lambda n: ss2nnn(ii2ss(n))\n \n def main():\n     N = i2n()\n     d = i2nn()\n     r = 0\n     for i, j in product(range(N), range(N)):\n-        r += d[i] * d[j] if i == j else 0\n     print(r)\n main()\n \n",
        "origin_generated_text": "\n```\n \n \n import sys\n from itertools import product\n \n s2nn = lambda s: [int(c) for c in s.split(' ')]\n ss2nn = lambda ss: [int(s) for s in list(ss)]\n ss2nnn = lambda ss: [s2nn(s) for s in list(ss)]\n i2s = lambda: sys.stdin.readline().rstrip()\n i2n = lambda: int(i2s())\n i2nn = lambda: s2nn(i2s())\n ii2ss = lambda n: [i2s() for _ in range(n)]\n ii2nn = lambda n: ss2nn(ii2ss(n))\n ii2nnn = lambda n: ss2nnn(ii2ss(n))\n \n def main():\n     N = i2n()\n     d = i2nn()\n     r = 0\n     for i, j in product(range(N), range(N)):\n-        r += d[i] * d[j] if i == j else 0\n     print(r)\n main()\n \n```\n "
    },
    {
        "user_id": "u523781418",
        "problem_id": "p03477",
        "submission1_id": "s484773932",
        "crp_content": "\n a,b,c,d=map(int, input().split())\n if(a+b)>(c+d):\n     print(\"Left\")\n-if(a+b)==(c+d):\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n",
        "origin_generated_text": "\n```\n a,b,c,d=map(int, input().split())\n if(a+b)>(c+d):\n     print(\"Left\")\n-if(a+b)==(c+d):\n     print(\"Balanced\")\n else:\n     print(\"Right\")\n```\n "
    },
    {
        "user_id": "u182139295",
        "problem_id": "p03041",
        "submission1_id": "s420716449",
        "crp_content": "\n \n \n \n n, k = map(int, input().split())\n \n \n s = list(input())\n \n a = s[k:k+1]\n \n-a = ','.join(a)\n-\n-a = a.lower()\n-\n-s[k:k+1] = a\n-\n-s = ','.join(s)\n print(s)\n \n \n",
        "origin_generated_text": "\n```\n \n \n \n n, k = map(int, input().split())\n \n \n s = list(input())\n \n a = s[k:k+1]\n \n-a = ','.join(a)\n-\n-a = a.lower()\n-\n-s[k:k+1] = a\n-\n-s = ','.join(s)\n print(s)\n \n \n```\n "
    },
    {
        "user_id": "u868577139",
        "problem_id": "p02767",
        "submission1_id": "s908496794",
        "crp_content": "\n N=int(input())\n X=list(map(int,input().split()))\n-p=sum(X)\n ans=0\n for i in range(len(X)):\n     ans+=(X[i]-p)**2\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N=int(input())\n X=list(map(int,input().split()))\n-p=sum(X)\n ans=0\n for i in range(len(X)):\n     ans+=(X[i]-p)**2\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u408375121",
        "problem_id": "p03613",
        "submission1_id": "s174600321",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n d = [0] * (10**5 + 2)\n neg_count = 0\n for i in range(len(a)):\n   d[a[i] - 1] += 1\n   d[a[i]] += 1\n   d[a[i] + 1] += 1\n ans = max(d)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n d = [0] * (10**5 + 2)\n neg_count = 0\n for i in range(len(a)):\n   d[a[i] - 1] += 1\n   d[a[i]] += 1\n   d[a[i] + 1] += 1\n ans = max(d)\n```\n "
    },
    {
        "user_id": "u785213188",
        "problem_id": "p02917",
        "submission1_id": "s373310397",
        "crp_content": "\n N = int(input())\n B = list(map(int, input().split()))\n \n sum = 0\n if N==2:\n     sum += B[0]*2\n else:\n     sum += min([B[0], B[1]])\n     for i in range(N-2):\n         sum += min([B[i], B[i+1]])\n-    sum += B[N-2]\n \n print(sum)\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int, input().split()))\n \n sum = 0\n if N==2:\n     sum += B[0]*2\n else:\n     sum += min([B[0], B[1]])\n     for i in range(N-2):\n         sum += min([B[i], B[i+1]])\n-    sum += B[N-2]\n \n print(sum)\n```\n "
    },
    {
        "user_id": "u872887731",
        "problem_id": "p02954",
        "submission1_id": "s507614135",
        "crp_content": "\n S = input()\n a = []\n r_ = 0 \n l_ = 0\n flag = 0\n for i in range(len(S)):\n     if flag == 0:\n         if S[i]==\"R\":\n             r_ = r_ +1\n             continue\n         else:\n             flag = 1\n             l_ = l_ +1\n             continue\n     if flag == 1:\n         if S[i] == \"L\"   :\n             l_ = l_ +1\n         else:\n-            al = l_ + r_\n             a.append([al,r_])\n             r_ = 1\n             l_ = 0 \n             flag = 0\n         if i == len(S) -1:\n-            al = l_ + r_\n             a.append([al,r_])\n  \n \n ans = []\n for i in range(len(a)):\n     n = a[i][0]\n     r = a[i][1]\n     odd = n \n     eve = n - odd\n     for j in range(r -1):\n         ans.append(0)\n     ans.append(eve)\n     ans.append(odd)\n     for j in range(n -r -1):\n         ans.append(0)\n print(*ans)\n     \n             \n",
        "origin_generated_text": "\n```\n S = input()\n a = []\n r_ = 0 \n l_ = 0\n flag = 0\n for i in range(len(S)):\n     if flag == 0:\n         if S[i]==\"R\":\n             r_ = r_ +1\n             continue\n         else:\n             flag = 1\n             l_ = l_ +1\n             continue\n     if flag == 1:\n         if S[i] == \"L\"   :\n             l_ = l_ +1\n         else:\n-            al = l_ + r_\n             a.append([al,r_])\n             r_ = 1\n             l_ = 0 \n             flag = 0\n         if i == len(S) -1:\n-            al = l_ + r_\n             a.append([al,r_])\n  \n \n ans = []\n for i in range(len(a)):\n     n = a[i][0]\n     r = a[i][1]\n     odd = n \n     eve = n - odd\n     for j in range(r -1):\n         ans.append(0)\n     ans.append(eve)\n     ans.append(odd)\n     for j in range(n -r -1):\n         ans.append(0)\n print(*ans)\n     \n             \n```\n "
    },
    {
        "user_id": "u265506056",
        "problem_id": "p03039",
        "submission1_id": "s768582534",
        "crp_content": "\n N,M,K=map(int,input().split())\n MOD=10**9+7\n ans=0\n x,y=1,1\n k=min(K-2,N*M-K)\n for i in range(k):\n     x*=N*M-2-i\n     y*=K-2-i\n     x%=MOD\n     y%=MOD\n comb=x*pow(y,MOD-2,MOD)\n comb%=MOD\n for i in range(1,N):\n     a=i*comb*(N-i)*M**2\n     ans+=a\n     ans%=MOD\n for i in range(1,M):\n     a=i*comb*(M-i)*N**2\n     ans+=a\n     ans%=MOD\n-print(ans%MOD)\n",
        "origin_generated_text": "\n```\n N,M,K=map(int,input().split())\n MOD=10**9+7\n ans=0\n x,y=1,1\n k=min(K-2,N*M-K)\n for i in range(k):\n     x*=N*M-2-i\n     y*=K-2-i\n     x%=MOD\n     y%=MOD\n comb=x*pow(y,MOD-2,MOD)\n comb%=MOD\n for i in range(1,N):\n     a=i*comb*(N-i)*M**2\n     ans+=a\n     ans%=MOD\n for i in range(1,M):\n     a=i*comb*(M-i)*N**2\n     ans+=a\n     ans%=MOD\n-print(ans%MOD)\n```\n "
    },
    {
        "user_id": "u575396065",
        "problem_id": "p03272",
        "submission1_id": "s086155166",
        "crp_content": "\n info = input()\n info = info.split()\n-print(info)\n backward = int(info[0]) - int(info[1]) + 1\n print(backward)\n",
        "origin_generated_text": "\n```\n info = input()\n info = info.split()\n-print(info)\n backward = int(info[0]) - int(info[1]) + 1\n print(backward)\n```\n "
    },
    {
        "user_id": "u893063840",
        "problem_id": "p02727",
        "submission1_id": "s206965098",
        "crp_content": "\n from heapq import heappush, heappop\n \n x, y, a, b, c = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n hp = []\n for e in p:\n     heappush(hp, [-e, 0])\n for e in q:\n     heappush(hp, [-e, 1])\n for e in r:\n     heappush(hp, [-e, 2])\n \n ans = 0\n cnt = [0] * 3\n sm = 0\n mx = [c, x, y]\n while hp:\n     yum, col = heappop(hp)\n     yum = -yum\n \n     if cnt[col] >= mx[col]:\n         continue\n \n     ans += yum\n     cnt[col] += 1\n     sm += 1\n \n     if sm == x + y:\n         break\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n from heapq import heappush, heappop\n \n x, y, a, b, c = map(int, input().split())\n p = list(map(int, input().split()))\n q = list(map(int, input().split()))\n r = list(map(int, input().split()))\n \n hp = []\n for e in p:\n     heappush(hp, [-e, 0])\n for e in q:\n     heappush(hp, [-e, 1])\n for e in r:\n     heappush(hp, [-e, 2])\n \n ans = 0\n cnt = [0] * 3\n sm = 0\n mx = [c, x, y]\n while hp:\n     yum, col = heappop(hp)\n     yum = -yum\n \n     if cnt[col] >= mx[col]:\n         continue\n \n     ans += yum\n     cnt[col] += 1\n     sm += 1\n \n     if sm == x + y:\n         break\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u025363805",
        "problem_id": "p02633",
        "submission1_id": "s866307059",
        "crp_content": "\n a = int(input())\n b = 0\n-for i in range(1,361):\n     i += 1\n-    ans = i * a\n-    if ans == 360:\n-        print(int(i))\n \n",
        "origin_generated_text": "\n```\n a = int(input())\n b = 0\n-for i in range(1,361):\n     i += 1\n-    ans = i * a\n-    if ans == 360:\n-        print(int(i))\n \n```\n "
    },
    {
        "user_id": "u368796742",
        "problem_id": "p03714",
        "submission1_id": "s712760286",
        "crp_content": "\n import heapq\n \n n = int(input())\n A = list(map(int,input().split()))\n \n sa = 0\n sb = 0\n hf = []\n hb = []\n for i in range(n):\n     sa += A[i]\n     heapq.heappush(hf,A[i])\n for i in range(2*n,3*n):\n     sb += A[i]\n     heapq.heappush(hb,-A[i])\n \n ans = sa-sb\n for i in range(n,2*n):\n     now = A[i]\n     \n     l = -heapq.heappop(hb)\n     \n     if now < l:\n         ans = sa-sb+l-now\n     heapq.heappush(hb,-l)\n     h = heapq.heappop(hf)\n     \n     if now > h:\n         sa += now-h\n         heapq.heappush(hf,now)\n         ans = max(ans,sa-sb)\n     else:\n         heapq.heappush(hf,h)\n     \n ans = max(ans,sa-sb)\n print(ans)\n \n",
        "origin_generated_text": "\n```\n import heapq\n \n n = int(input())\n A = list(map(int,input().split()))\n \n sa = 0\n sb = 0\n hf = []\n hb = []\n for i in range(n):\n     sa += A[i]\n     heapq.heappush(hf,A[i])\n for i in range(2*n,3*n):\n     sb += A[i]\n     heapq.heappush(hb,-A[i])\n \n ans = sa-sb\n for i in range(n,2*n):\n     now = A[i]\n     \n     l = -heapq.heappop(hb)\n     \n     if now < l:\n         ans = sa-sb+l-now\n     heapq.heappush(hb,-l)\n     h = heapq.heappop(hf)\n     \n     if now > h:\n         sa += now-h\n         heapq.heappush(hf,now)\n         ans = max(ans,sa-sb)\n     else:\n         heapq.heappush(hf,h)\n     \n ans = max(ans,sa-sb)\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u069868485",
        "problem_id": "p03633",
        "submission1_id": "s631496608",
        "crp_content": "\n def uq(a,c):\n     while(a%c!=0):\n         newa=c\n         c=a%c\n         a=newa\n     return c\n         \n \n n=(int)(input())\n \n result = 1\n \n for j in range(0,n):\n     f=(int)(input())\n-    result=((result/uq(result,f)))*f\n     \n print((int)(result))\n",
        "origin_generated_text": "\n```\n def uq(a,c):\n     while(a%c!=0):\n         newa=c\n         c=a%c\n         a=newa\n     return c\n         \n \n n=(int)(input())\n \n result = 1\n \n for j in range(0,n):\n     f=(int)(input())\n-    result=((result/uq(result,f)))*f\n     \n print((int)(result))\n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03343",
        "submission1_id": "s031448521",
        "crp_content": "\n n,k,q=map(int,input().split())\n arr=list(map(int,input().split()))\n arr2=sorted(arr)\n ans=10**18\n m=arr2[0]\n for val in arr:\n   tmp=[]\n   vals=[]\n   for i in range(n):\n     if arr[i]>=val:\n       tmp.append(arr[i])\n     else:\n       if len(tmp)>=k:\n         tmp=sorted(tmp)\n         vals.extend(tmp[:len(tmp)-k+1])\n         tmp=[]\n   if len(tmp)>=k:\n     tmp=sorted(tmp)\n     vals.extend(tmp[:len(tmp)-k+1])\n   if len(vals)<q:\n     continue\n   else:\n     vals=sorted(vals)\n     ans=min(ans,vals[q-1]-vals[0])\n print(ans)\n",
        "origin_generated_text": "\n```\n n,k,q=map(int,input().split())\n arr=list(map(int,input().split()))\n arr2=sorted(arr)\n ans=10**18\n m=arr2[0]\n for val in arr:\n   tmp=[]\n   vals=[]\n   for i in range(n):\n     if arr[i]>=val:\n       tmp.append(arr[i])\n     else:\n       if len(tmp)>=k:\n         tmp=sorted(tmp)\n         vals.extend(tmp[:len(tmp)-k+1])\n         tmp=[]\n   if len(tmp)>=k:\n     tmp=sorted(tmp)\n     vals.extend(tmp[:len(tmp)-k+1])\n   if len(vals)<q:\n     continue\n   else:\n     vals=sorted(vals)\n     ans=min(ans,vals[q-1]-vals[0])\n print(ans)\n```\n "
    },
    {
        "user_id": "u045408189",
        "problem_id": "p03563",
        "submission1_id": "s405617852",
        "crp_content": "\n r=float(input())\n g=float(input())\n-print(2*g-r)\n",
        "origin_generated_text": "\n```\n r=float(input())\n g=float(input())\n-print(2*g-r)\n```\n "
    },
    {
        "user_id": "u250026974",
        "problem_id": "p02556",
        "submission1_id": "s695438223",
        "crp_content": "\n N = int(input())\n \n max_f_0 = 0\n min_f_0 = 10**10\n max_f_1 = 0\n min_f_1 = 10**10\n \n for _ in range(N):\n     x, y = map(int, input().split(\" \"))\n-    f_0 = x - y\n-    f_1 = x + y\n     \n     if max_f_0 < f_0:\n         max_f_0 = f_0\n     if min_f_0 > f_0:\n         min_f_0 = f_0\n     if max_f_1 < f_1:\n         max_f_1 = f_1\n     if min_f_1 > f_1:\n         min_f_1 = f_1\n-        \n print(max((max_f_0-min_f_0), (max_f_1-min_f_1)))\n     \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n max_f_0 = 0\n min_f_0 = 10**10\n max_f_1 = 0\n min_f_1 = 10**10\n \n for _ in range(N):\n     x, y = map(int, input().split(\" \"))\n-    f_0 = x - y\n-    f_1 = x + y\n     \n     if max_f_0 < f_0:\n         max_f_0 = f_0\n     if min_f_0 > f_0:\n         min_f_0 = f_0\n     if max_f_1 < f_1:\n         max_f_1 = f_1\n     if min_f_1 > f_1:\n         min_f_1 = f_1\n-        \n print(max((max_f_0-min_f_0), (max_f_1-min_f_1)))\n     \n```\n "
    },
    {
        "user_id": "u476199965",
        "problem_id": "p03374",
        "submission1_id": "s949459288",
        "crp_content": "\n n,c = list(map(int,input().split()))\n \n xv = []\n go = [0]\n goback = [0]\n back = [0]\n backgo = [0]\n \n mid = 0\n \n for i in range(n):\n     xv.append(list(map(int,input().split())))\n     if 2*xv[i][0]<= c: mid = i\n \n temp = 0\n for i in range(mid+1):\n     temp += xv[i][1]\n     go.append(temp-xv[i][0])\n     goback.append(temp-2*xv[i][0])\n temp = 0\n for i in range(mid+1,n)[::-1]:\n     temp += xv[i][1]\n     back.append(temp-(c-xv[i][0]))\n     backgo.append(temp-2*(c-xv[i][0]))\n \n print(max(max(go)+max(backgo),max(back)+max(goback)))\n \n",
        "origin_generated_text": "\n```\n n,c = list(map(int,input().split()))\n \n xv = []\n go = [0]\n goback = [0]\n back = [0]\n backgo = [0]\n \n mid = 0\n \n for i in range(n):\n     xv.append(list(map(int,input().split())))\n     if 2*xv[i][0]<= c: mid = i\n \n temp = 0\n for i in range(mid+1):\n     temp += xv[i][1]\n     go.append(temp-xv[i][0])\n     goback.append(temp-2*xv[i][0])\n temp = 0\n for i in range(mid+1,n)[::-1]:\n     temp += xv[i][1]\n     back.append(temp-(c-xv[i][0]))\n     backgo.append(temp-2*(c-xv[i][0]))\n \n print(max(max(go)+max(backgo),max(back)+max(goback)))\n \n```\n "
    },
    {
        "user_id": "u721425712",
        "problem_id": "p02917",
        "submission1_id": "s626029519",
        "crp_content": "\n n = int(input())\n b = list(map(int, input().split()))\n \n a = [0]*n\n for i in range(n-1):\n-    if n == 0:\n-        a[0] = b[0]\n-        a[1] = b[0]\n-    elif b[i] >= b[i-1]:\n         a[i+1] = b[i]\n-    elif b[i] < b[i-1]:\n         a[i+1] = b[i]\n         a[i] = b[i]\n print(sum(a))\n",
        "origin_generated_text": "\n```\n n = int(input())\n b = list(map(int, input().split()))\n \n a = [0]*n\n for i in range(n-1):\n-    if n == 0:\n-        a[0] = b[0]\n-        a[1] = b[0]\n-    elif b[i] >= b[i-1]:\n         a[i+1] = b[i]\n-    elif b[i] < b[i-1]:\n         a[i+1] = b[i]\n         a[i] = b[i]\n print(sum(a))\n```\n "
    },
    {
        "user_id": "u636311816",
        "problem_id": "p03326",
        "submission1_id": "s930111637",
        "crp_content": "\n import copy\n n,m = map(int,input().split())\n \n \n scores = list()\n for i in range(n):\n     score = list(map(int,input().split()))\n     scores.append(score)\n \n smax=None\n for x in range(2):\n     scores_=copy.deepcopy(scores)\n     \n     for i in range(n):\n         scores_[i][0] = pow(-1,x)*scores[i][0]\n     for y in range(2):\n         for i in range(n):\n             scores_[i][1] = pow(-1,x)*scores[i][1]\n         for z in range(2):\n             for i in range(n):\n                 scores_[i][2] = pow(-1,x)*scores[i][2]\n         \n             ssum=list()\n             for i in range(n):\n                 ssum.append(sum(scores_[i]))\n             ssum.sort()\n             tmp=0\n             \n             for eat in range(m):\n                 tmp+=ssum[-1]\n                 ssum.pop()\n             if smax==None or tmp>smax:\n                 smax=tmp\n print(smax)\n",
        "origin_generated_text": "\n```\n import copy\n n,m = map(int,input().split())\n \n \n scores = list()\n for i in range(n):\n     score = list(map(int,input().split()))\n     scores.append(score)\n \n smax=None\n for x in range(2):\n     scores_=copy.deepcopy(scores)\n     \n     for i in range(n):\n         scores_[i][0] = pow(-1,x)*scores[i][0]\n     for y in range(2):\n         for i in range(n):\n             scores_[i][1] = pow(-1,x)*scores[i][1]\n         for z in range(2):\n             for i in range(n):\n                 scores_[i][2] = pow(-1,x)*scores[i][2]\n         \n             ssum=list()\n             for i in range(n):\n                 ssum.append(sum(scores_[i]))\n             ssum.sort()\n             tmp=0\n             \n             for eat in range(m):\n                 tmp+=ssum[-1]\n                 ssum.pop()\n             if smax==None or tmp>smax:\n                 smax=tmp\n print(smax)\n```\n "
    },
    {
        "user_id": "u642418876",
        "problem_id": "p02887",
        "submission1_id": "s630985222",
        "crp_content": "\n n=int(input())\n s=str(input())\n same=0\n i=0\n-for i in range(n-2):\n   if s[i]==s[i+1]:\n     same+=1\n     i+=1\n print(n-same)\n \n",
        "origin_generated_text": "\n```\n n=int(input())\n s=str(input())\n same=0\n i=0\n-for i in range(n-2):\n   if s[i]==s[i+1]:\n     same+=1\n     i+=1\n print(n-same)\n \n```\n "
    },
    {
        "user_id": "u119148115",
        "problem_id": "p04017",
        "submission1_id": "s659836906",
        "crp_content": "\n import sys\n def I(): return int(sys.stdin.readline().rstrip())\n def MI(): return map(int,sys.stdin.readline().rstrip().split())\n def LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n \n \n N = I()\n x = LI()\n L = I()\n \n from bisect import bisect_right\n \n arrive = [[0]*N for _ in range(30)]  \n for k in range(30):\n     if k == 0:\n         for i in range(N):\n             arrive[0][i] = bisect_right(x,x[i]+L)-1\n     else:\n         for i in range(N):\n             arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n-print(arrive)\n \n \n def query(a,b):  \n     a -= 1\n     b -= 1\n     ans = 0\n     for k in range(29,-1,-1):\n         if arrive[k][a] > b:\n             continue\n         else:\n             a = arrive[k][a]\n             ans += 1 << k\n     print(ans)\n \n \n Q = I()\n for i in range(Q):\n     a,b = MI()\n     if a > b:\n         a,b = b,a\n     query(a,b)\n \n",
        "origin_generated_text": "\n```\n import sys\n def I(): return int(sys.stdin.readline().rstrip())\n def MI(): return map(int,sys.stdin.readline().rstrip().split())\n def LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n \n \n N = I()\n x = LI()\n L = I()\n \n from bisect import bisect_right\n \n arrive = [[0]*N for _ in range(30)]  \n for k in range(30):\n     if k == 0:\n         for i in range(N):\n             arrive[0][i] = bisect_right(x,x[i]+L)-1\n     else:\n         for i in range(N):\n             arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n-print(arrive)\n \n \n def query(a,b):  \n     a -= 1\n     b -= 1\n     ans = 0\n     for k in range(29,-1,-1):\n         if arrive[k][a] > b:\n             continue\n         else:\n             a = arrive[k][a]\n             ans += 1 << k\n     print(ans)\n \n \n Q = I()\n for i in range(Q):\n     a,b = MI()\n     if a > b:\n         a,b = b,a\n     query(a,b)\n \n```\n "
    },
    {
        "user_id": "u765590009",
        "problem_id": "p03106",
        "submission1_id": "s816907901",
        "crp_content": "\n a, b, n = map(int, input().split())\n  \n num = min(a, b)\n answer = []\n for i in range(1, num+1):\n     if (a % i == 0 and b % i == 0):\n         answer.append(i)\n         \n-print(answer[n-1])\n",
        "origin_generated_text": "\n```\n a, b, n = map(int, input().split())\n  \n num = min(a, b)\n answer = []\n for i in range(1, num+1):\n     if (a % i == 0 and b % i == 0):\n         answer.append(i)\n         \n-print(answer[n-1])\n```\n "
    },
    {
        "user_id": "u567380442",
        "problem_id": "p02299",
        "submission1_id": "s861812158",
        "crp_content": "\n from sys import stdin\n readline = stdin.readline\n \n \n def cross(a, b):\n     return a.real * b.imag - a.imag * b.real\n \n \n def dot(a, b):\n     return a.real * b.real + a.imag * b.imag\n \n \n def eq(a, b):\n     return abs(a - b) < 1e-10\n \n \n def on_line(p, s, e):\n     d = dot(p - s, e - s)\n     c = cross(p - s, e - s)\n     if c == 0 and 0 <= d <= abs(e - s) ** 2:\n         return True\n     return False\n \n \n def on_polygon_line(xy, p):\n     for i in range(len(p)):\n         j = i - 1\n         if on_line(xy, p[i], p[j]):\n             return True\n     return False\n \n \n def in_polygon(xy, p):\n     wn = 0\n     for i in range(len(p)):\n         j = i - 1\n         if 0 == (p[i] - p[j]).imag:\n             continue\n         vt = (xy - p[j]).imag / (p[i] - p[j]).imag\n         tmp = p[i] + vt * (p[i] - p[j])\n         if xy.real < tmp.real:\n             wn += 1 if p[j].imag < xy.imag <= p[i].imag else\\\n                  -1 if p[i].imag < xy.imag <= p[j].imag else 0\n     return wn\n \n n = int(readline())\n p = [map(int, readline().split()) for _ in range(n)]\n p = [x + y * 1j for x, y in p]\n \n q = int(readline())\n for _ in range(q):\n     x, y = map(int, readline().split())\n     xy = x + y * 1j\n-    print(1 if on_polygon_line(xy, p) else 2 if in_polygon(xy, p) else 0)\n",
        "origin_generated_text": "\n```\n from sys import stdin\n readline = stdin.readline\n \n \n def cross(a, b):\n     return a.real * b.imag - a.imag * b.real\n \n \n def dot(a, b):\n     return a.real * b.real + a.imag * b.imag\n \n \n def eq(a, b):\n     return abs(a - b) < 1e-10\n \n \n def on_line(p, s, e):\n     d = dot(p - s, e - s)\n     c = cross(p - s, e - s)\n     if c == 0 and 0 <= d <= abs(e - s) ** 2:\n         return True\n     return False\n \n \n def on_polygon_line(xy, p):\n     for i in range(len(p)):\n         j = i - 1\n         if on_line(xy, p[i], p[j]):\n             return True\n     return False\n \n \n def in_polygon(xy, p):\n     wn = 0\n     for i in range(len(p)):\n         j = i - 1\n         if 0 == (p[i] - p[j]).imag:\n             continue\n         vt = (xy - p[j]).imag / (p[i] - p[j]).imag\n         tmp = p[i] + vt * (p[i] - p[j])\n         if xy.real < tmp.real:\n             wn += 1 if p[j].imag < xy.imag <= p[i].imag else\\\n                  -1 if p[i].imag < xy.imag <= p[j].imag else 0\n     return wn\n \n n = int(readline())\n p = [map(int, readline().split()) for _ in range(n)]\n p = [x + y * 1j for x, y in p]\n \n q = int(readline())\n for _ in range(q):\n     x, y = map(int, readline().split())\n     xy = x + y * 1j\n-    print(1 if on_polygon_line(xy, p) else 2 if in_polygon(xy, p) else 0)\n```\n "
    },
    {
        "user_id": "u533232830",
        "problem_id": "p03106",
        "submission1_id": "s986368588",
        "crp_content": "\n a, b, k = map(int, input().split())\n l = []\n \n-for i in range((min(a,b))):\n-    if a%(i+1)==0 and b%(i+1)==0:\n-        l.append(i+1)\n \n print(l[k-1])\n",
        "origin_generated_text": "\n```\n a, b, k = map(int, input().split())\n l = []\n \n-for i in range((min(a,b))):\n-    if a%(i+1)==0 and b%(i+1)==0:\n-        l.append(i+1)\n \n print(l[k-1])\n```\n "
    },
    {
        "user_id": "u868701750",
        "problem_id": "p02730",
        "submission1_id": "s808646625",
        "crp_content": "\n S = input()\n N = len(S)\n \n cond_1 = S[:int((N-1)/2)]\n cond_1_r = cond_1[::-1]\n \n if cond_1 != cond_1_r:\n     print('No')\n     exit(0)\n \n cond_2 = S[int((N+3)/2-1]:]\n cond_2_r = cond_2[::-1]\n \n if cond_2 != cond_2_r:\n     print('No')\n     exit(0)\n \n print('Yes')\n",
        "origin_generated_text": "\n```\n S = input()\n N = len(S)\n \n cond_1 = S[:int((N-1)/2)]\n cond_1_r = cond_1[::-1]\n \n if cond_1 != cond_1_r:\n     print('No')\n     exit(0)\n \n cond_2 = S[int((N+3)/2-1]:]\n cond_2_r = cond_2[::-1]\n \n if cond_2 != cond_2_r:\n     print('No')\n     exit(0)\n \n print('Yes')\n```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03716",
        "submission1_id": "s104168854",
        "crp_content": "\n INF=10**30\n from heapq import heapify,heappop,heappush\n N=int(input())\n a=list(map(int,input().split()))\n \n right=list(map(lambda x:-x,a[2*N:]));heapify(right)\n rmin=[INF]*(3*N);rmin[2*N]=sum(right)*-1\n \n for i in reversed(range(N,2*N)):\n     p=heappop(right)*-1\n     b=min(p,a[i])\n     d=0 if b==p else b-p\n     heappush(right,b*-1)\n     rmin[i]=rmin[i+1]-d\n \n left=a[:N];heapify(left)\n lmax=[-INF]*(3*N);lmax[N-1]=sum(left)\n for i in range(N,2*N):\n     p=heappop(left)\n     b=max(p,a[i])\n     d=0 if b==p else b-p\n     heappush(left,b)\n     lmax[i]=lmax[i-1]+d\n res=-INF\n for i in range(N,2*N+1):\n     res=max(res,lmax[i-1]-rmin[i])\n print(res)\n",
        "origin_generated_text": "\n```\n INF=10**30\n from heapq import heapify,heappop,heappush\n N=int(input())\n a=list(map(int,input().split()))\n \n right=list(map(lambda x:-x,a[2*N:]));heapify(right)\n rmin=[INF]*(3*N);rmin[2*N]=sum(right)*-1\n \n for i in reversed(range(N,2*N)):\n     p=heappop(right)*-1\n     b=min(p,a[i])\n     d=0 if b==p else b-p\n     heappush(right,b*-1)\n     rmin[i]=rmin[i+1]-d\n \n left=a[:N];heapify(left)\n lmax=[-INF]*(3*N);lmax[N-1]=sum(left)\n for i in range(N,2*N):\n     p=heappop(left)\n     b=max(p,a[i])\n     d=0 if b==p else b-p\n     heappush(left,b)\n     lmax[i]=lmax[i-1]+d\n res=-INF\n for i in range(N,2*N+1):\n     res=max(res,lmax[i-1]-rmin[i])\n print(res)\n```\n "
    },
    {
        "user_id": "u883203948",
        "problem_id": "p03087",
        "submission1_id": "s848542694",
        "crp_content": "\n \n x = input().split()\n n = int(x[0]) \n q = int(x[1]) \n s = input()\n \n def ind_Multi(a,b): \n     global n\n     global s \n     index_L = []\n     for i in range(a,b):\n         if s[i] == \"A\":\n             index_L.append(i)\n     return index_L\n \n             \n         \n t = [0] * n\n if s[0] == \"A\":\n     t[0] = 1\n     \n for i in range(0,n-1):\n     if s[i:i+2] == \"AC\":\n         \n         if (i == 0) :\n             t[i] =  + 1\n         else:\n             t[i] = t[i-1] + 1\n     else :\n         if i == 0:\n             t[i] = 0\n         else:\n             t[i] = t[i-1]\n \n \n \n def sc():\n     global t\n     global s\n     global n\n     global q\n     global idbox\n     maxx = 0\n     count = 0\n     com = [int(s)-1 for s in input().split()]\n-    print(com)\n     idbox = ind_Multi(com[0],com[1])\n     print(t[com[1]-1] - t[com[0]-1])\n         \n     \n \n     \n \n for i in range(q):\n     \n     sc()\n \n",
        "origin_generated_text": "\n```\n \n x = input().split()\n n = int(x[0]) \n q = int(x[1]) \n s = input()\n \n def ind_Multi(a,b): \n     global n\n     global s \n     index_L = []\n     for i in range(a,b):\n         if s[i] == \"A\":\n             index_L.append(i)\n     return index_L\n \n             \n         \n t = [0] * n\n if s[0] == \"A\":\n     t[0] = 1\n     \n for i in range(0,n-1):\n     if s[i:i+2] == \"AC\":\n         \n         if (i == 0) :\n             t[i] =  + 1\n         else:\n             t[i] = t[i-1] + 1\n     else :\n         if i == 0:\n             t[i] = 0\n         else:\n             t[i] = t[i-1]\n \n \n \n def sc():\n     global t\n     global s\n     global n\n     global q\n     global idbox\n     maxx = 0\n     count = 0\n     com = [int(s)-1 for s in input().split()]\n-    print(com)\n     idbox = ind_Multi(com[0],com[1])\n     print(t[com[1]-1] - t[com[0]-1])\n         \n     \n \n     \n \n for i in range(q):\n     \n     sc()\n \n```\n "
    },
    {
        "user_id": "u805716376",
        "problem_id": "p02281",
        "submission1_id": "s745083285",
        "crp_content": "\n def s(x):\n     print('',x,end='')\n def p(u):\n     if u+1:s(u);p(R[u]);p(L[u])\n def i(u):\n     if u+1:i(R[u]);s(u);i(L[u])\n def o(u):\n     if u+1:o(R[u]);o(L[u]);s(u)\n         \n n = int(input())\n R, L = [0]*n, [0]*n\n for _ in range(n):\n     a, b, c = map(int, input().split())\n     R[a] = b\n     L[a] = c\n-print(R)\n-print(L)\n root = (set(range(n))-set(R)-set(L)).pop()\n print('Preorder');p(root)\n print('\\nInorder');i(root)\n print('\\nPostorder');o(root)\n print()\n      \n \n",
        "origin_generated_text": "\n```\n def s(x):\n     print('',x,end='')\n def p(u):\n     if u+1:s(u);p(R[u]);p(L[u])\n def i(u):\n     if u+1:i(R[u]);s(u);i(L[u])\n def o(u):\n     if u+1:o(R[u]);o(L[u]);s(u)\n         \n n = int(input())\n R, L = [0]*n, [0]*n\n for _ in range(n):\n     a, b, c = map(int, input().split())\n     R[a] = b\n     L[a] = c\n-print(R)\n-print(L)\n root = (set(range(n))-set(R)-set(L)).pop()\n print('Preorder');p(root)\n print('\\nInorder');i(root)\n print('\\nPostorder');o(root)\n print()\n      \n \n```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02642",
        "submission1_id": "s209905508",
        "crp_content": "\n n = int(input())\n li = list(map(int,input().split()))\n ans = 0\n \n import math\n import bisect\n import collections\n c = collections.Counter(li)\n li = list(set(li))\n \n while len(li)>0:\n     ba = li.pop(-1)\n     if c[ba]>1:\n         continue\n     \n     \n     tmp_li = li\n     \n     for tt in tmp_li:\n         if ba%tt == 0:\n             break\n     else:\n         ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n n = int(input())\n li = list(map(int,input().split()))\n ans = 0\n \n import math\n import bisect\n import collections\n c = collections.Counter(li)\n li = list(set(li))\n \n while len(li)>0:\n     ba = li.pop(-1)\n     if c[ba]>1:\n         continue\n     \n     \n     tmp_li = li\n     \n     for tt in tmp_li:\n         if ba%tt == 0:\n             break\n     else:\n         ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u009348313",
        "problem_id": "p02580",
        "submission1_id": "s401676318",
        "crp_content": "\n h,w,m = map(int,input().split())\n b = []\n x = [0 for _ in range(w)]\n y = [0 for _ in range(h)]\n for i in range(m):\n   bh,bw = map(int,input().split())\n   bh -= 1\n   bw -= 1\n   b.append((bh,bw))\n   x[bw] += 1\n   y[bh] += 1\n \n \n mxx = max(x)\n mxy = max(y)\n \n cmxb = 0\n for by,bx in b:\n   if y[by]+x[bx] == mxx+mxy-1:\n     cmxb += 1\n cmxx = 0\n for xi in x:\n   if xi == mxx:\n     cmxx += 1\n cmxy = 0\n for yi in y:\n   if yi == mxy:\n     cmxy += 1\n \n \n if cmxb >= cmxx*cmxy:\n   print(mxx+mxy-1)\n else:\n-  print(mxx+mxy)\n",
        "origin_generated_text": "\n```\n h,w,m = map(int,input().split())\n b = []\n x = [0 for _ in range(w)]\n y = [0 for _ in range(h)]\n for i in range(m):\n   bh,bw = map(int,input().split())\n   bh -= 1\n   bw -= 1\n   b.append((bh,bw))\n   x[bw] += 1\n   y[bh] += 1\n \n \n mxx = max(x)\n mxy = max(y)\n \n cmxb = 0\n for by,bx in b:\n   if y[by]+x[bx] == mxx+mxy-1:\n     cmxb += 1\n cmxx = 0\n for xi in x:\n   if xi == mxx:\n     cmxx += 1\n cmxy = 0\n for yi in y:\n   if yi == mxy:\n     cmxy += 1\n \n \n if cmxb >= cmxx*cmxy:\n   print(mxx+mxy-1)\n else:\n-  print(mxx+mxy)\n```\n "
    },
    {
        "user_id": "u211842487",
        "problem_id": "p03102",
        "submission1_id": "s840658249",
        "crp_content": "\n N,M,C = map(int,input().split())\n B = list(map(int,input().split()))\n A=[]\n for i in range(N):\n     A.append(list(map(int,input().split())))\n \n \n cnt =0\n for a in A:\n     c = 0\n     for j in range(len(a)):\n         c += a[j]*B[j]\n-    if c-abs(C) > 0:\n         cnt += 1\n \n print(cnt)\n",
        "origin_generated_text": "\n```\n N,M,C = map(int,input().split())\n B = list(map(int,input().split()))\n A=[]\n for i in range(N):\n     A.append(list(map(int,input().split())))\n \n \n cnt =0\n for a in A:\n     c = 0\n     for j in range(len(a)):\n         c += a[j]*B[j]\n-    if c-abs(C) > 0:\n         cnt += 1\n \n print(cnt)\n```\n "
    },
    {
        "user_id": "u313291636",
        "problem_id": "p02887",
        "submission1_id": "s748756442",
        "crp_content": "\n n = int(input())\n s = input()\n count = 0\n \n-for i in range(n - 1):\n     if s[i] != s[i + 1]:\n         count += 1\n \n print(count)\n",
        "origin_generated_text": "\n```\n n = int(input())\n s = input()\n count = 0\n \n-for i in range(n - 1):\n     if s[i] != s[i + 1]:\n         count += 1\n \n print(count)\n```\n "
    },
    {
        "user_id": "u945199633",
        "problem_id": "p02660",
        "submission1_id": "s152798109",
        "crp_content": "\n N = int(input())\n N_prime = []\n \n n = N\n i = 2\n-while i <= N**0.5:\n     if n%i != 0:\n         i += 1\n         continue\n     \n     N_prime.append(i)\n     n = n/i\n     if n == 1:\n         break\n \n if N_prime == []:\n     N_prime.append(N)\n elif n != 1:\n     N_prime.append(int(n))\n \n ct = []\n for i in N_prime:\n     if i not in ct:\n         ct.append(i)\n         temp_i = 1\n         continue\n     temp_i *= i\n     if temp_i not in ct:\n         ct.append(temp_i)\n         temp_i = i\n         continue\n \n print(len(ct))\n",
        "origin_generated_text": "\n```\n N = int(input())\n N_prime = []\n \n n = N\n i = 2\n-while i <= N**0.5:\n     if n%i != 0:\n         i += 1\n         continue\n     \n     N_prime.append(i)\n     n = n/i\n     if n == 1:\n         break\n \n if N_prime == []:\n     N_prime.append(N)\n elif n != 1:\n     N_prime.append(int(n))\n \n ct = []\n for i in N_prime:\n     if i not in ct:\n         ct.append(i)\n         temp_i = 1\n         continue\n     temp_i *= i\n     if temp_i not in ct:\n         ct.append(temp_i)\n         temp_i = i\n         continue\n \n print(len(ct))\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s695408269",
        "crp_content": "\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n-    d2 = math.fabs(ra + rb)\n \n     if d1 <= d2:\n-        if d1 <= ra or d1 <= rb:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n import math\n for i in range(int(input())):\n     xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n \n     d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n-    d2 = math.fabs(ra + rb)\n \n     if d1 <= d2:\n-        if d1 <= ra or d1 <= rb:\n-            print(2 if ra > rb else -2)\n         else:\n             print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u383429137",
        "problem_id": "p02640",
        "submission1_id": "s579245405",
        "crp_content": "\n X,Y = map(int, input().split())\n if Y%2==1:\n-    print(\"NO\")\n else:\n     kame=Y\n     Y-=(kame*4)\n     turu=Y\n     if (turu+kame)==X:\n         print(\"Yes\")\n     else:\n-        print('No')\n \n",
        "origin_generated_text": "\n```\n X,Y = map(int, input().split())\n if Y%2==1:\n-    print(\"NO\")\n else:\n     kame=Y\n     Y-=(kame*4)\n     turu=Y\n     if (turu+kame)==X:\n         print(\"Yes\")\n     else:\n-        print('No')\n \n```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p03475",
        "submission1_id": "s303174948",
        "crp_content": "\n N = int(input())\n l = []\n for i in range(N-1):\n   c, s, f = map(int, input().split())\n   l.append([c, s, f])\n   \n for i in range(N-1):\n   time = l[i][1] + l[i][0]\n   for j in range(i+1, N-1):\n     if time-l[j][1] >= 0:\n       wait = (time-l[j][1]) % l[j][2]\n     else:\n       wait = l[j][1]\n       time = 0\n     time += wait + l[j][0]\n   print(time)\n print(0)\n",
        "origin_generated_text": "\n```\n N = int(input())\n l = []\n for i in range(N-1):\n   c, s, f = map(int, input().split())\n   l.append([c, s, f])\n   \n for i in range(N-1):\n   time = l[i][1] + l[i][0]\n   for j in range(i+1, N-1):\n     if time-l[j][1] >= 0:\n       wait = (time-l[j][1]) % l[j][2]\n     else:\n       wait = l[j][1]\n       time = 0\n     time += wait + l[j][0]\n   print(time)\n print(0)\n```\n "
    },
    {
        "user_id": "u757777793",
        "problem_id": "p02922",
        "submission1_id": "s328986562",
        "crp_content": "\n a,b = map(int,input().split())\n-c = b \n-if ((b > 1) and (b < a)) or (a==b):\n     print(1)\n elif b == 1:\n     print(0)\n else:\n-    print(c + 1)\n",
        "origin_generated_text": "\n```\n a,b = map(int,input().split())\n-c = b \n-if ((b > 1) and (b < a)) or (a==b):\n     print(1)\n elif b == 1:\n     print(0)\n else:\n-    print(c + 1)\n```\n "
    },
    {
        "user_id": "u961247631",
        "problem_id": "p02640",
        "submission1_id": "s639190006",
        "crp_content": "\n a,b = map(int,input(). split ())\n if not a % 2 == 0 and not b % 2 == 0:\n-    print('NO')\n elif a > 100 or b > 100:\n-    print('NO')\n elif not isinstance(a, int) or not isinstance(b, int):\n-    print('NO')\n elif 2 * a <= b <= 4 * a:\n-    print('YES')\n else:\n-    print('NO')\n",
        "origin_generated_text": "\n```\n a,b = map(int,input(). split ())\n if not a % 2 == 0 and not b % 2 == 0:\n-    print('NO')\n elif a > 100 or b > 100:\n-    print('NO')\n elif not isinstance(a, int) or not isinstance(b, int):\n-    print('NO')\n elif 2 * a <= b <= 4 * a:\n-    print('YES')\n else:\n-    print('NO')\n```\n "
    },
    {
        "user_id": "u306950978",
        "problem_id": "p04019",
        "submission1_id": "s133229669",
        "crp_content": "\n s = input()\n kita = s.count(\"N\")\n mina = s.count(\"W\")\n nisi = s.count(\"S\")\n higa = s.count(\"E\")\n \n-if kita + mina != 0 and kita*mina == 0:\n     print(\"No\")\n     exit()\n-if nisi + higa != 0 and nisi*higa == 0:\n     print(\"No\")\n     exit()\n \n print(\"Yes\")\n",
        "origin_generated_text": "\n```\n s = input()\n kita = s.count(\"N\")\n mina = s.count(\"W\")\n nisi = s.count(\"S\")\n higa = s.count(\"E\")\n \n-if kita + mina != 0 and kita*mina == 0:\n     print(\"No\")\n     exit()\n-if nisi + higa != 0 and nisi*higa == 0:\n     print(\"No\")\n     exit()\n \n print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u266874640",
        "problem_id": "p03760",
        "submission1_id": "s444443884",
        "crp_content": "\n odd = input()\n even =input()\n odd_list = []\n even_list = []\n \n for (a,b) in zip(odd,even):\n     odd_list.append(a)\n     even_list.append(b)\n-even_list.append(\"\")\n \n for i in range(len(odd_list)):\n     print(odd_list[i],end = \"\")\n     print(even_list[i],end = \"\")\n \n",
        "origin_generated_text": "\n```\n odd = input()\n even =input()\n odd_list = []\n even_list = []\n \n for (a,b) in zip(odd,even):\n     odd_list.append(a)\n     even_list.append(b)\n-even_list.append(\"\")\n \n for i in range(len(odd_list)):\n     print(odd_list[i],end = \"\")\n     print(even_list[i],end = \"\")\n \n```\n "
    },
    {
        "user_id": "u177398299",
        "problem_id": "p03416",
        "submission1_id": "s562321401",
        "crp_content": "\n A, B = map(int, input().split())\n ans = 0\n for i in range(A, B + 1):\n     i = str(i)\n-    if i[:2] == i[-2:]:\n         ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n ans = 0\n for i in range(A, B + 1):\n     i = str(i)\n-    if i[:2] == i[-2:]:\n         ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u875291233",
        "problem_id": "p03716",
        "submission1_id": "s034415946",
        "crp_content": "\n \n \n n = int(input())\n a = [int(i) for i in input().split()]\n \n from heapq import *\n \n pq1 = a[:n]\n heapify(pq1)\n s = sum(pq1)\n score1 = [s]\n for i in range(n):\n     c=heappushpop(pq1, a[n+i])\n     s += a[n+i] - c\n     score1.append(s)\n \n pq2 = [-i for i in a[2*n:]]\n heapify(pq2)\n s = sum(pq2)\n score2 = [s]\n for i in range(1,n+1):\n     c=heappushpop(pq2, -a[2*n-i])\n     s += -a[2*n-i] - c\n     score2.append(s)\n \n-print(score1)\n-print(score2)\n ans = -10**17\n for i,j in zip(score1,reversed(score2)):\n     ans = max(ans, i+j)\n \n print(ans)\n     \n \n",
        "origin_generated_text": "\n```\n \n \n n = int(input())\n a = [int(i) for i in input().split()]\n \n from heapq import *\n \n pq1 = a[:n]\n heapify(pq1)\n s = sum(pq1)\n score1 = [s]\n for i in range(n):\n     c=heappushpop(pq1, a[n+i])\n     s += a[n+i] - c\n     score1.append(s)\n \n pq2 = [-i for i in a[2*n:]]\n heapify(pq2)\n s = sum(pq2)\n score2 = [s]\n for i in range(1,n+1):\n     c=heappushpop(pq2, -a[2*n-i])\n     s += -a[2*n-i] - c\n     score2.append(s)\n \n-print(score1)\n-print(score2)\n ans = -10**17\n for i,j in zip(score1,reversed(score2)):\n     ans = max(ans, i+j)\n \n print(ans)\n     \n \n```\n "
    },
    {
        "user_id": "u444349080",
        "problem_id": "p03568",
        "submission1_id": "s915873875",
        "crp_content": "\n N=int(input())\n A=list(map(int,input().split()))\n hiku=1\n ans=1\n for i in A:\n-        if i%2 == 1:hiku*=2\n-        ans*=3\n-print(ans-hiku)\n",
        "origin_generated_text": "\n```\n N=int(input())\n A=list(map(int,input().split()))\n hiku=1\n ans=1\n for i in A:\n-        if i%2 == 1:hiku*=2\n-        ans*=3\n-print(ans-hiku)\n```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03613",
        "submission1_id": "s952791601",
        "crp_content": "\n import collections\n \n N = int(input())\n A = list(map(int,input().split()))\n B = collections.Counter(A).most_common()\n \n a = B[0][0]\n b = a + 1\n c = a - 1\n \n L = [a,b,c]\n C = [0,0,0]\n \n for i in range(N):\n   for j in range(3):\n-    d = abs(A[i] - L[j])\n     if d <= 1:\n       C[j] += 1\n     \n print(max(C))\n",
        "origin_generated_text": "\n```\n import collections\n \n N = int(input())\n A = list(map(int,input().split()))\n B = collections.Counter(A).most_common()\n \n a = B[0][0]\n b = a + 1\n c = a - 1\n \n L = [a,b,c]\n C = [0,0,0]\n \n for i in range(N):\n   for j in range(3):\n-    d = abs(A[i] - L[j])\n     if d <= 1:\n       C[j] += 1\n     \n print(max(C))\n```\n "
    },
    {
        "user_id": "u150117535",
        "problem_id": "p03675",
        "submission1_id": "s919656111",
        "crp_content": "\n input()\n n=[x for x in input().split()]\n nb=n[::-1]\n bs=n[::2]\n if len(nb)%2==0:\n-    be=nb[::2]\n else:\n-    be=nb[::2]\n if len(n)==1:\n     print(n[0])\n else:\n     print(\" \".join(be+bs))\n",
        "origin_generated_text": "\n```\n input()\n n=[x for x in input().split()]\n nb=n[::-1]\n bs=n[::2]\n if len(nb)%2==0:\n-    be=nb[::2]\n else:\n-    be=nb[::2]\n if len(n)==1:\n     print(n[0])\n else:\n     print(\" \".join(be+bs))\n```\n "
    },
    {
        "user_id": "u845536647",
        "problem_id": "p03965",
        "submission1_id": "s701403813",
        "crp_content": "\n s=input()\n g=s.count('g')\n p=s.count('p')\n-a=g-p+(g+p)\n print(a)\n",
        "origin_generated_text": "\n```\n s=input()\n g=s.count('g')\n p=s.count('p')\n-a=g-p+(g+p)\n print(a)\n```\n "
    },
    {
        "user_id": "u797673668",
        "problem_id": "p02365",
        "submission1_id": "s919826151",
        "crp_content": "\n from collections import defaultdict\n from itertools import chain\n \n nv, ne, r = map(int, input().split())\n \n in_edges = defaultdict(set)\n out_edges = defaultdict(set)\n while ne:\n     s, t, w = map(int, input().split())\n     in_edges[t].add((w, s))\n     out_edges[s].add((w, t))\n     ne -= 1\n \n \n def chu_liu_edmond(vertices):\n     global in_edges, out_edges, nv, r\n \n     total_cost = 0\n     prev_v = {v: None for v in vertices}\n     next_vs = {v: set() for v in vertices}\n \n     for t in vertices:\n         if t == r:\n             continue\n         min_in_w, min_in_s = min(in_edges[t])\n         total_cost += min_in_w\n         prev_v[t] = min_in_s\n         next_vs[min_in_s].add(t)\n \n     visited = {r}\n     queue = set(next_vs[r])\n     while queue:\n         t = queue.pop()\n         visited.add(t)\n         queue.update(next_vs[t])\n \n     cycles = []\n     for i in vertices:\n         if i in visited:\n             continue\n \n         cycle_vertices = set()\n         while i not in visited:\n             visited.add(i)\n             cycle_vertices.add(i)\n             i = prev_v[i]\n \n         \n         if i not in cycle_vertices:\n             continue\n \n         \n         cycle_vertices, j = {i}, prev_v[i]\n         while j != i:\n             cycle_vertices.add(j)\n             j = prev_v[j]\n \n         cycles.append(cycle_vertices)\n \n     if not cycles:\n         return total_cost\n \n     for cycle in cycles:\n         vertices.difference_update(cycle)\n         vertices.add(nv)\n \n         for v in cycle:\n             for w, t in out_edges[v]:\n                 if t in vertices:\n                     out_edges[nv].add((w, t))\n                     in_edges[t].remove((w, v))\n                     in_edges[t].add((w, nv))\n             for w, s in in_edges[v]:\n                 if s in vertices:\n                     new_w = w + min(in_edges[v])[0]\n                     in_edges[nv].add((new_w, s))\n                     out_edges[s].remove((w, v))\n                     out_edges[s].add((new_w, nv))\n             del in_edges[v]\n             del out_edges[v]\n \n         nv += 1\n \n     return chu_liu_edmond(vertices)\n \n \n print(chu_liu_edmond(set(range(nv))))\n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n from itertools import chain\n \n nv, ne, r = map(int, input().split())\n \n in_edges = defaultdict(set)\n out_edges = defaultdict(set)\n while ne:\n     s, t, w = map(int, input().split())\n     in_edges[t].add((w, s))\n     out_edges[s].add((w, t))\n     ne -= 1\n \n \n def chu_liu_edmond(vertices):\n     global in_edges, out_edges, nv, r\n \n     total_cost = 0\n     prev_v = {v: None for v in vertices}\n     next_vs = {v: set() for v in vertices}\n \n     for t in vertices:\n         if t == r:\n             continue\n         min_in_w, min_in_s = min(in_edges[t])\n         total_cost += min_in_w\n         prev_v[t] = min_in_s\n         next_vs[min_in_s].add(t)\n \n     visited = {r}\n     queue = set(next_vs[r])\n     while queue:\n         t = queue.pop()\n         visited.add(t)\n         queue.update(next_vs[t])\n \n     cycles = []\n     for i in vertices:\n         if i in visited:\n             continue\n \n         cycle_vertices = set()\n         while i not in visited:\n             visited.add(i)\n             cycle_vertices.add(i)\n             i = prev_v[i]\n \n         \n         if i not in cycle_vertices:\n             continue\n \n         \n         cycle_vertices, j = {i}, prev_v[i]\n         while j != i:\n             cycle_vertices.add(j)\n             j = prev_v[j]\n \n         cycles.append(cycle_vertices)\n \n     if not cycles:\n         return total_cost\n \n     for cycle in cycles:\n         vertices.difference_update(cycle)\n         vertices.add(nv)\n \n         for v in cycle:\n             for w, t in out_edges[v]:\n                 if t in vertices:\n                     out_edges[nv].add((w, t))\n                     in_edges[t].remove((w, v))\n                     in_edges[t].add((w, nv))\n             for w, s in in_edges[v]:\n                 if s in vertices:\n                     new_w = w + min(in_edges[v])[0]\n                     in_edges[nv].add((new_w, s))\n                     out_edges[s].remove((w, v))\n                     out_edges[s].add((new_w, nv))\n             del in_edges[v]\n             del out_edges[v]\n \n         nv += 1\n \n     return chu_liu_edmond(vertices)\n \n \n print(chu_liu_edmond(set(range(nv))))\n```\n "
    },
    {
        "user_id": "u188745744",
        "problem_id": "p03613",
        "submission1_id": "s202165346",
        "crp_content": "\n A=int(input())\n n_l=list(map(int,input().split()))\n import collections\n ans=0\n n_l=collections.Counter(n_l)\n for i in range(1,100001):\n-   ans=max(ans,n_l[i]+n_l[i+1]+n_l[i+2])\n print(ans)\n",
        "origin_generated_text": "\n```\n A=int(input())\n n_l=list(map(int,input().split()))\n import collections\n ans=0\n n_l=collections.Counter(n_l)\n for i in range(1,100001):\n-   ans=max(ans,n_l[i]+n_l[i+1]+n_l[i+2])\n print(ans)\n```\n "
    },
    {
        "user_id": "u013629972",
        "problem_id": "p03625",
        "submission1_id": "s825046753",
        "crp_content": "\n import math, string, itertools, fractions, heapq, collections, re,  array, bisect, sys, random, time, copy, functools\n sys.setrecursionlimit(10**7)\n inf = 10 ** 20\n eps = 1.0 / 10**10\n mod = 10**9+7\n dd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\n ddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def pf(s): return print(s, flush=True)\n \n N=I()\n A=LI()\n B = []\n counts = collections.Counter(A)\n for count in counts.items():\n     if count[1] >= 2:\n         B.append(count[0])\n B.sort(reverse=True)\n-if len(B) < 2:\n     print(0)\n else:\n     print(B[0]*B[1])\n     \n",
        "origin_generated_text": "\n```\n import math, string, itertools, fractions, heapq, collections, re,  array, bisect, sys, random, time, copy, functools\n sys.setrecursionlimit(10**7)\n inf = 10 ** 20\n eps = 1.0 / 10**10\n mod = 10**9+7\n dd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\n ddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\n def LI(): return [int(x) for x in sys.stdin.readline().split()]\n def LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\n def LF(): return [float(x) for x in sys.stdin.readline().split()]\n def LS(): return sys.stdin.readline().split()\n def I(): return int(sys.stdin.readline())\n def F(): return float(sys.stdin.readline())\n def pf(s): return print(s, flush=True)\n \n N=I()\n A=LI()\n B = []\n counts = collections.Counter(A)\n for count in counts.items():\n     if count[1] >= 2:\n         B.append(count[0])\n B.sort(reverse=True)\n-if len(B) < 2:\n     print(0)\n else:\n     print(B[0]*B[1])\n     \n```\n "
    },
    {
        "user_id": "u732412551",
        "problem_id": "p02922",
        "submission1_id": "s550109421",
        "crp_content": "\n from math import ceil\n A, B = map(int, input().split())\n-print(ceil(B/A))\n",
        "origin_generated_text": "\n```\n from math import ceil\n A, B = map(int, input().split())\n-print(ceil(B/A))\n```\n "
    },
    {
        "user_id": "u664481257",
        "problem_id": "p03568",
        "submission1_id": "s870608822",
        "crp_content": "\n \n \n \n \n \n from functools import reduce\n from itertools import repeat\n \n \n def multipler(x, y):\n     return x*y\n \n def hundred_or_one(l: list):\n     return [True if x == 100 else False for x in l]\n     \n \n def check_odds(l :list):\n     return [True if x % 2 == 0 else False for x in l]\n \n def check_hun(l: list):\n     return [True if x == 100 else False for x in l]\n \n def main(num, data:list):\n     \n     hun_one = hundred_or_one(data)\n     odds = check_odds(data)  \n     huns = check_hun(data)\n \n     basis = [3 for t in hun_one]\n \n     \n     remover = [2 if o else 1 for o in odds]\n \n     remover_num = int(reduce(multipler, remover))\n     if sum(huns) > 0:\n-        remover_num = int(remover_num / 2 ** sum(huns))\n \n     basic_answer = reduce(multipler, basis)\n     \n     \n     return basic_answer - remover_num\n \n if __name__ == '__main__':\n     \n     \n     num = int(input())\n     data = input().split(\" \")\n     data = [int(i) for i in data]\n \n     print(main(num, data))\n \n",
        "origin_generated_text": "\n```\n \n \n \n \n \n from functools import reduce\n from itertools import repeat\n \n \n def multipler(x, y):\n     return x*y\n \n def hundred_or_one(l: list):\n     return [True if x == 100 else False for x in l]\n     \n \n def check_odds(l :list):\n     return [True if x % 2 == 0 else False for x in l]\n \n def check_hun(l: list):\n     return [True if x == 100 else False for x in l]\n \n def main(num, data:list):\n     \n     hun_one = hundred_or_one(data)\n     odds = check_odds(data)  \n     huns = check_hun(data)\n \n     basis = [3 for t in hun_one]\n \n     \n     remover = [2 if o else 1 for o in odds]\n \n     remover_num = int(reduce(multipler, remover))\n     if sum(huns) > 0:\n-        remover_num = int(remover_num / 2 ** sum(huns))\n \n     basic_answer = reduce(multipler, basis)\n     \n     \n     return basic_answer - remover_num\n \n if __name__ == '__main__':\n     \n     \n     num = int(input())\n     data = input().split(\" \")\n     data = [int(i) for i in data]\n \n     print(main(num, data))\n \n```\n "
    },
    {
        "user_id": "u623659526",
        "problem_id": "p02959",
        "submission1_id": "s156497911",
        "crp_content": "\n import logging\n \n logging.basicConfig(level=logging.INFO, format=\"%(message)s\")\n \n \n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     B = list(map(int, input().split()))\n     logging.info(A)\n     logging.info(B)\n \n     counter = 0\n     for i in range(N):\n         if A[i] < B[i]:\n             \n             if (A[i] + A[i + 1]) > B[i]:\n                 counter += B[i]\n                 A[i + 1] = A[i + 1] - B[i] + A[i]\n                 B[i] = 0\n             else:\n                 counter += (A[i] + A[i + 1])\n                 B[i] = B[i] - A[i] - A[i + 1]\n                 A[i + 1] = 0\n         \n         else:\n             counter += B[i]\n \n     if B[N - 1] > A[N]:\n         counter += A[N]\n     else:\n         counter += B[N - 1]\n \n     print(counter)\n             \n     \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n import logging\n \n logging.basicConfig(level=logging.INFO, format=\"%(message)s\")\n \n \n def main():\n     N = int(input())\n     A = list(map(int, input().split()))\n     B = list(map(int, input().split()))\n     logging.info(A)\n     logging.info(B)\n \n     counter = 0\n     for i in range(N):\n         if A[i] < B[i]:\n             \n             if (A[i] + A[i + 1]) > B[i]:\n                 counter += B[i]\n                 A[i + 1] = A[i + 1] - B[i] + A[i]\n                 B[i] = 0\n             else:\n                 counter += (A[i] + A[i + 1])\n                 B[i] = B[i] - A[i] - A[i + 1]\n                 A[i + 1] = 0\n         \n         else:\n             counter += B[i]\n \n     if B[N - 1] > A[N]:\n         counter += A[N]\n     else:\n         counter += B[N - 1]\n \n     print(counter)\n             \n     \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u967822229",
        "problem_id": "p03479",
        "submission1_id": "s703840520",
        "crp_content": "\n from math import floor\n from decimal import Decimal\n \n A, B = list(map(int, input().split()))\n \n num = A\n c = 0\n-while num < B:\n-    num *= 2\n     c+=1\n \n print(c)\n",
        "origin_generated_text": "\n```\n from math import floor\n from decimal import Decimal\n \n A, B = list(map(int, input().split()))\n \n num = A\n c = 0\n-while num < B:\n-    num *= 2\n     c+=1\n \n print(c)\n```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s370282604",
        "crp_content": "\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                       \", left key =\"+str(plist[1][0])+\n                       \", right key =\"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                       \", parent key =\"+str(plist[i-1][l])+\", left key =\"+\n                       str(plist[i+1][2*j]),end=\"\")\n                 try:\n                     print(\", right key =\"+str(plist[i+1][2*j+1])+\",\")\n                 except:\n                     print(\",\")\n         except:\n             l = int(j/2)\n             print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                   \", parent key =\"+str(plist[i-1][l])+\",\")\n         k += 1\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n klist = list(map(int,input().split()))\n plist = []\n i = 0\n k = 1\n a = 2**i-1\n while 1:\n     if klist[a:a+2**i] != []:\n         plist.append(klist[a:a + 2**i])\n     else: break\n     a += 2**i\n     i += 1\n-print(plist)\n-print(len(plist))\n for i in range(len(plist)):\n     for j in range(len(plist[i])):\n         try:\n             if i==0:\n                 print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                       \", left key =\"+str(plist[1][0])+\n                       \", right key =\"+str(plist[1][1])+\",\")\n             else :\n                 l = int(j/2)\n                 print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                       \", parent key =\"+str(plist[i-1][l])+\", left key =\"+\n                       str(plist[i+1][2*j]),end=\"\")\n                 try:\n                     print(\", right key =\"+str(plist[i+1][2*j+1])+\",\")\n                 except:\n                     print(\",\")\n         except:\n             l = int(j/2)\n             print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                   \", parent key =\"+str(plist[i-1][l])+\",\")\n         k += 1\n \n \n```\n "
    },
    {
        "user_id": "u911449886",
        "problem_id": "p03752",
        "submission1_id": "s000577487",
        "crp_content": "\n from itertools import combinations\n \n def getval():\n     n,k = map(int,input().split())\n     a = list(map(int,input().split()))\n     return n,k,a\n \n def main(n,k,a):\n     arr = []\n     locmax = 0\n     for i in a:\n         arr.append(locmax)\n         locmax = max(locmax,i)\n \n     ans = 2**60\n-    for c in combinations(range(1,n),k-1):\n         cost = 0\n         prev = a[0]\n         for i in c:\n             if a[i]<=prev:\n                 cost += max(prev,arr[i])+1-a[i]\n             prev = max(prev,arr[i])+1\n         ans = min(ans,cost)\n     print(ans)\n \n if __name__==\"__main__\":\n     n,k,a = getval()\n     main(n,k,a) \n",
        "origin_generated_text": "\n```\n from itertools import combinations\n \n def getval():\n     n,k = map(int,input().split())\n     a = list(map(int,input().split()))\n     return n,k,a\n \n def main(n,k,a):\n     arr = []\n     locmax = 0\n     for i in a:\n         arr.append(locmax)\n         locmax = max(locmax,i)\n \n     ans = 2**60\n-    for c in combinations(range(1,n),k-1):\n         cost = 0\n         prev = a[0]\n         for i in c:\n             if a[i]<=prev:\n                 cost += max(prev,arr[i])+1-a[i]\n             prev = max(prev,arr[i])+1\n         ans = min(ans,cost)\n     print(ans)\n \n if __name__==\"__main__\":\n     n,k,a = getval()\n     main(n,k,a) \n```\n "
    },
    {
        "user_id": "u023229441",
        "problem_id": "p03200",
        "submission1_id": "s811559395",
        "crp_content": "\n s=input()\n t=list(s).count(\"W\")\n A=[i for i,x in enumerate (list(s)) if x==\"W\"]\n-print(int(sum(A)-t*(t+1)/2))\n",
        "origin_generated_text": "\n```\n s=input()\n t=list(s).count(\"W\")\n A=[i for i,x in enumerate (list(s)) if x==\"W\"]\n-print(int(sum(A)-t*(t+1)/2))\n```\n "
    },
    {
        "user_id": "u878138257",
        "problem_id": "p03563",
        "submission1_id": "s312706721",
        "crp_content": "\n a = int(input())\n b = int(input())\n-print(b*b-a)\n",
        "origin_generated_text": "\n```\n a = int(input())\n b = int(input())\n-print(b*b-a)\n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03343",
        "submission1_id": "s976041922",
        "crp_content": "\n import bisect\n n,k,q = map(int,input().split())\n a = list(map(int,input().split()))\n if q == 1:\n   print(0)\n   exit()\n-ls = [-1,n]\n b = sorted(((a[i],i) for i in range(n)))\n-ansls = [b[q-1][0]-b[0][0]]\n for i,x in enumerate(b):\n   ins = bisect.bisect_left(ls,i)\n   ls.insert(ins,i)\n   space = []\n   qc = q-1\n   for j in range(1,i+3):\n     space.append(ls[j]-ls[j-1]-1)\n   for j in range(i+1,n):\n     idx = bisect.bisect_left(ls,b[j][1])\n     if space[idx-1] < k:\n       continue\n     qc -= 1\n     space[idx-1] -= 1\n     if qc == 0:\n       ansls.append(b[j][0]-x[0])\n       break\n print(min(ansls))\n",
        "origin_generated_text": "\n```\n import bisect\n n,k,q = map(int,input().split())\n a = list(map(int,input().split()))\n if q == 1:\n   print(0)\n   exit()\n-ls = [-1,n]\n b = sorted(((a[i],i) for i in range(n)))\n-ansls = [b[q-1][0]-b[0][0]]\n for i,x in enumerate(b):\n   ins = bisect.bisect_left(ls,i)\n   ls.insert(ins,i)\n   space = []\n   qc = q-1\n   for j in range(1,i+3):\n     space.append(ls[j]-ls[j-1]-1)\n   for j in range(i+1,n):\n     idx = bisect.bisect_left(ls,b[j][1])\n     if space[idx-1] < k:\n       continue\n     qc -= 1\n     space[idx-1] -= 1\n     if qc == 0:\n       ansls.append(b[j][0]-x[0])\n       break\n print(min(ansls))\n```\n "
    },
    {
        "user_id": "u852798899",
        "problem_id": "p03102",
        "submission1_id": "s206870174",
        "crp_content": "\n n, m, c = map(int, input().split())\n b = list(map(int, input().split()))\n a = [list(map(int, input().split())) for i in range(n)]\n \n ans = 0\n for i in range(n):\n   s = sum([a[i][j]*b[j] for j in range(m)])\n   if s+c > 0:\n-    print(i)\n     ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n n, m, c = map(int, input().split())\n b = list(map(int, input().split()))\n a = [list(map(int, input().split())) for i in range(n)]\n \n ans = 0\n for i in range(n):\n   s = sum([a[i][j]*b[j] for j in range(m)])\n   if s+c > 0:\n-    print(i)\n     ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u227476288",
        "problem_id": "p03054",
        "submission1_id": "s137459396",
        "crp_content": "\n H,W,N = map(int, input().split())\n st = [int(i) for i in input().split()]\n S = input()\n T = input()\n \n \n def simu(dim1):\n     now = [st[0],st[1]]\n \n     if dim1 == 'U':\n         dim2,L,step,dim = 'D',H,-1,0\n     if dim1 == 'D':\n         dim2,L,step,dim = 'U',H,1,0\n     if dim1 == 'R':\n         dim2,L,step,dim = 'L',W,1,1\n     if dim1 == 'L':\n         dim2,L,step,dim = 'R',W,-1,1\n \n     for i in range(N):\n         if S[i] == dim1:\n             now[dim] -= step\n         if now[dim] < 1 or now[dim] >= L+1:\n             return True\n         if T[i] == dim2:\n             if step == -1:\n                 if now[dim] < L:\n                     now[dim] += step\n             else:\n                 if now[dim] > 0:\n                     now[dim] += step\n         \n D = ['U','D','R','L']\n for d in D:\n     if simu(d):\n         print('YES')\n         exit()\n print('NO')\n",
        "origin_generated_text": "\n```\n H,W,N = map(int, input().split())\n st = [int(i) for i in input().split()]\n S = input()\n T = input()\n \n \n def simu(dim1):\n     now = [st[0],st[1]]\n \n     if dim1 == 'U':\n         dim2,L,step,dim = 'D',H,-1,0\n     if dim1 == 'D':\n         dim2,L,step,dim = 'U',H,1,0\n     if dim1 == 'R':\n         dim2,L,step,dim = 'L',W,1,1\n     if dim1 == 'L':\n         dim2,L,step,dim = 'R',W,-1,1\n \n     for i in range(N):\n         if S[i] == dim1:\n             now[dim] -= step\n         if now[dim] < 1 or now[dim] >= L+1:\n             return True\n         if T[i] == dim2:\n             if step == -1:\n                 if now[dim] < L:\n                     now[dim] += step\n             else:\n                 if now[dim] > 0:\n                     now[dim] += step\n         \n D = ['U','D','R','L']\n for d in D:\n     if simu(d):\n         print('YES')\n         exit()\n print('NO')\n```\n "
    },
    {
        "user_id": "u794250528",
        "problem_id": "p03546",
        "submission1_id": "s417407745",
        "crp_content": "\n h, w = map(int, input().split())\n c = [list(map(int, input().split())) for _ in range(10)]\n a = [list(map(int, input().split())) for _ in range(h)]\n \n for x in range(10):\n     for y in range(10):\n         for z in range(10):\n             c[y][z] = min(c[y][z], c[y][x] + c[x][z])\n \n ans = 0\n for x in range(h):\n     for y in range(w):\n-        if a[x][y] > 1:\n-            ans += c[a[x][y]][1]\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n h, w = map(int, input().split())\n c = [list(map(int, input().split())) for _ in range(10)]\n a = [list(map(int, input().split())) for _ in range(h)]\n \n for x in range(10):\n     for y in range(10):\n         for z in range(10):\n             c[y][z] = min(c[y][z], c[y][x] + c[x][z])\n \n ans = 0\n for x in range(h):\n     for y in range(w):\n-        if a[x][y] > 1:\n-            ans += c[a[x][y]][1]\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u336564899",
        "problem_id": "p02767",
        "submission1_id": "s493557554",
        "crp_content": "\n n = int(input())\n x = list(map(int, input().split()))\n \n p0 = sum(x)\n \n cost = 10**9\n-for i in range(1,101):\n     now = 0\n     for j in x:\n         now += abs(i-j)**2\n     if cost > now:\n         cost = now\n \n-print(now)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n x = list(map(int, input().split()))\n \n p0 = sum(x)\n \n cost = 10**9\n-for i in range(1,101):\n     now = 0\n     for j in x:\n         now += abs(i-j)**2\n     if cost > now:\n         cost = now\n \n-print(now)\n \n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s272138459",
        "crp_content": "\n h,w,n=[int(j) for j in input().split()]\n R,C=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=C\n l,r=1,w\n for i in range(n)[::-1]:\n     if t[i]==\"R\":\n         l-=1\n     elif t[i]==\"L\":\n         r+=1\n     if s[i]==\"R\":\n         r-=1\n     elif s[i]==\"L\":\n         l+=1\n     if  l>r:\n         print(\"NO\")\n         exit()\n if not l<=x<=r:\n     print(\"NO\")\n     exit()\n \n x=R\n l,r=1,h\n for i in range(n)[::-1]:\n     if t[i]==\"U\":\n         l-=1\n     elif t[i]==\"D\":\n         r+=1\n     if s[i]==\"U\":\n         r-=1\n     elif s[i]==\"D\":\n         l+=1\n     if l>r:\n         print(\"NO\")\n         exit()\n if not l<=x<=r:\n     print(\"NO\")\n     exit()\n print(\"YES\")\n",
        "origin_generated_text": "\n```\n h,w,n=[int(j) for j in input().split()]\n R,C=[int(j) for j in input().split()]\n s=input()\n t=input()\n \n \n x=C\n l,r=1,w\n for i in range(n)[::-1]:\n     if t[i]==\"R\":\n         l-=1\n     elif t[i]==\"L\":\n         r+=1\n     if s[i]==\"R\":\n         r-=1\n     elif s[i]==\"L\":\n         l+=1\n     if  l>r:\n         print(\"NO\")\n         exit()\n if not l<=x<=r:\n     print(\"NO\")\n     exit()\n \n x=R\n l,r=1,h\n for i in range(n)[::-1]:\n     if t[i]==\"U\":\n         l-=1\n     elif t[i]==\"D\":\n         r+=1\n     if s[i]==\"U\":\n         r-=1\n     elif s[i]==\"D\":\n         l+=1\n     if l>r:\n         print(\"NO\")\n         exit()\n if not l<=x<=r:\n     print(\"NO\")\n     exit()\n print(\"YES\")\n```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03677",
        "submission1_id": "s726192420",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n from itertools import accumulate\n \n n, m = map(int, input().split())\n A = list(map(int, input().split()))\n L = [0]*(2*m)\n B = []\n cnt = 0\n for i in range(n-1):\n   a, b = A[i], A[i+1]\n   a -= 1\n   b -= 1\n   if a < b:\n     cnt += b-a\n     if b-a == 1:\n       continue\n     L[a+2] += 1\n     L[b+1] += -1\n     B.append((b+1, -(b-a-1)))\n     a += m\n     b += m\n     L[a+2] += 1\n     if b < 2*m-1:\n       L[b+1] += -1\n       B.append((b+1, -(b-a-1)))\n   else:\n     b += m\n     cnt += b-a\n     if b-a == 1:\n       continue\n     L[a+2] += 1\n     L[b+1] += -1\n     B.append((b+1, -(b-a-1)))\n L = list(accumulate(L))\n for i, b in B:\n   L[i] += b\n L = list(accumulate(L))\n ans = cnt - max(L)\n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n from itertools import accumulate\n \n n, m = map(int, input().split())\n A = list(map(int, input().split()))\n L = [0]*(2*m)\n B = []\n cnt = 0\n for i in range(n-1):\n   a, b = A[i], A[i+1]\n   a -= 1\n   b -= 1\n   if a < b:\n     cnt += b-a\n     if b-a == 1:\n       continue\n     L[a+2] += 1\n     L[b+1] += -1\n     B.append((b+1, -(b-a-1)))\n     a += m\n     b += m\n     L[a+2] += 1\n     if b < 2*m-1:\n       L[b+1] += -1\n       B.append((b+1, -(b-a-1)))\n   else:\n     b += m\n     cnt += b-a\n     if b-a == 1:\n       continue\n     L[a+2] += 1\n     L[b+1] += -1\n     B.append((b+1, -(b-a-1)))\n L = list(accumulate(L))\n for i, b in B:\n   L[i] += b\n L = list(accumulate(L))\n ans = cnt - max(L)\n print(ans)\n```\n "
    },
    {
        "user_id": "u296518383",
        "problem_id": "p03303",
        "submission1_id": "s362582410",
        "crp_content": "\n S,w=input(),int(input())\n-print(S[0::3])\n",
        "origin_generated_text": "\n```\n S,w=input(),int(input())\n-print(S[0::3])\n```\n "
    },
    {
        "user_id": "u928329738",
        "problem_id": "p00023",
        "submission1_id": "s750065104",
        "crp_content": "\n for i in range(int(input())):\n     points = input().split()\n     p = list(map(float,points))\n-    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n         print(2)\n-    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 < p[5]**2:\n         print(-2)\n-    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 < (p[2]+p[5])**2:\n         print(1)\n     else:\n         print(0)\n",
        "origin_generated_text": "\n```\n for i in range(int(input())):\n     points = input().split()\n     p = list(map(float,points))\n-    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n         print(2)\n-    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 < p[5]**2:\n         print(-2)\n-    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 < (p[2]+p[5])**2:\n         print(1)\n     else:\n         print(0)\n```\n "
    },
    {
        "user_id": "u942697937",
        "problem_id": "p02556",
        "submission1_id": "s153656241",
        "crp_content": "\n N = int(input())\n \n P = [[int(_) for _ in input().split()] for n in range(N)]\n \n X = []\n Y = []\n for x, y in P:\n     X.append(x)\n     Y.append(y)\n-mx = (min(X) + max(X)) \n-my = (min(X) + max(X)) \n \n Q = []\n for x, y in P:\n     x, y = x-mx, y-my\n     Q.append((x+y, x-y))\n \n ans = 0\n for x, y in Q:\n     ans = max(ans, abs(x) + abs(y))\n print(ans)\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n \n P = [[int(_) for _ in input().split()] for n in range(N)]\n \n X = []\n Y = []\n for x, y in P:\n     X.append(x)\n     Y.append(y)\n-mx = (min(X) + max(X)) \n-my = (min(X) + max(X)) \n \n Q = []\n for x, y in P:\n     x, y = x-mx, y-my\n     Q.append((x+y, x-y))\n \n ans = 0\n for x, y in Q:\n     ans = max(ans, abs(x) + abs(y))\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s486773128",
        "crp_content": "\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 1\n right = W\n up = 1\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             if down != H:\n                 down -= 1\n         elif T[i] == \"D\":\n             if up != 1:\n                 up += 1\n         elif T[i] == \"L\":\n             if right != W:\n                 right += 1\n         else:\n             if left != 1:\n                 left -= 1\n     if S[i] == \"U\":\n         up -= 1\n     elif S[i] == \"D\":\n         down += 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n \n if left <= sr <= right and down <= sc <= up:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n",
        "origin_generated_text": "\n```\n H, W, N = map(int, input().split())\n sr, sc = map(int, input().split())\n S = input()\n T = input()\n \n left = 1\n right = W\n up = 1\n down = H\n \n for i in reversed(range(N)):\n     if i != N - 1:\n         if T[i] == \"U\":\n             if down != H:\n                 down -= 1\n         elif T[i] == \"D\":\n             if up != 1:\n                 up += 1\n         elif T[i] == \"L\":\n             if right != W:\n                 right += 1\n         else:\n             if left != 1:\n                 left -= 1\n     if S[i] == \"U\":\n         up -= 1\n     elif S[i] == \"D\":\n         down += 1\n     elif S[i] == \"L\":\n         left += 1\n     else:\n         right -= 1\n-    if left == right or up == down:\n         print(\"NO\")\n         exit()\n \n if left <= sr <= right and down <= sc <= up:\n     print(\"YES\")\n else:\n     print(\"NO\")\n \n```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p04019",
        "submission1_id": "s991625851",
        "crp_content": "\n a = list(input())\n-print(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) or ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")\n",
        "origin_generated_text": "\n```\n a = list(input())\n-print(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) or ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")\n```\n "
    },
    {
        "user_id": "u891217808",
        "problem_id": "p03326",
        "submission1_id": "s234435943",
        "crp_content": "\n n, m = map(int, input().split())\n l = []\n for i in range(n):\n     x, y, z = map(int, input().split())\n     l.append([x, y, z])\n ans = 0\n-for i in range(8):\n-    a = bin(i)[2:].zfill(3)\n-    xi = 1 if a[0] == '1' else - 1\n-    yi = 1 if a[1] == '1' else - 1\n-    zi = 1 if a[2] == '1' else - 1\n-    l = sorted(l, key=lambda value: value[0] * xi + value[1] * yi + value[2] + zi, reverse=True)\n     ans = max(ans, sum(j[0]*xi+j[1]*yi+j[2]*zi for j in l[:m]))\n print(ans)\n \n \n",
        "origin_generated_text": "\n```\n n, m = map(int, input().split())\n l = []\n for i in range(n):\n     x, y, z = map(int, input().split())\n     l.append([x, y, z])\n ans = 0\n-for i in range(8):\n-    a = bin(i)[2:].zfill(3)\n-    xi = 1 if a[0] == '1' else - 1\n-    yi = 1 if a[1] == '1' else - 1\n-    zi = 1 if a[2] == '1' else - 1\n-    l = sorted(l, key=lambda value: value[0] * xi + value[1] * yi + value[2] + zi, reverse=True)\n     ans = max(ans, sum(j[0]*xi+j[1]*yi+j[2]*zi for j in l[:m]))\n print(ans)\n \n \n```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p00026",
        "submission1_id": "s347239489",
        "crp_content": "\n t = [[0 for i in range(10)] for j in range(10)]\n case1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\n case2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\n case3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     for c in [case1, case2, case3][:s]:\n         for _x, _y in c:\n             try:\n                 t[x+_x][y+_y] += 1\n             except IndexError:\n                 continue\n print(sum(1 for l in t for v in l if not v))\n print(max(v for l in t for v in l))\n",
        "origin_generated_text": "\n```\n t = [[0 for i in range(10)] for j in range(10)]\n case1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\n case2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\n case3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\n while True:\n     try:\n         x, y, s = map(int, input().split(','))\n     except:\n         break\n     for c in [case1, case2, case3][:s]:\n         for _x, _y in c:\n             try:\n                 t[x+_x][y+_y] += 1\n             except IndexError:\n                 continue\n print(sum(1 for l in t for v in l if not v))\n print(max(v for l in t for v in l))\n```\n "
    },
    {
        "user_id": "u510829608",
        "problem_id": "p02281",
        "submission1_id": "s157089794",
        "crp_content": "\n N = int(input())\n tree = [None for _ in range(N)]\n root = set(range(N))\n \n for i in range(N):\n     i, l, r = map(int,input().split())\n     tree[i] = (l, r)\n     root -= {l, r}\n \n root_node = root.pop()\n \n def preorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     print(\" {}\".format(i), end = \"\")\n     preorder(l)\n     preorder(r)\n     \n def inorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     inorder(l)\n     print(\" {}\".format(i), end = \"\")\n     inorder(r)\n     \n def postorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     inorder(l)\n     inorder(r)\n     print(\" {}\".format(i), end = \"\")\n     \n print('Preorder')\n preorder(root_node)\n print()\n \n print('Inorder')\n inorder(root_node)\n print()\n \n print('Postorder')\n postorder(root_node)\n print()\n \n",
        "origin_generated_text": "\n```\n N = int(input())\n tree = [None for _ in range(N)]\n root = set(range(N))\n \n for i in range(N):\n     i, l, r = map(int,input().split())\n     tree[i] = (l, r)\n     root -= {l, r}\n \n root_node = root.pop()\n \n def preorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     print(\" {}\".format(i), end = \"\")\n     preorder(l)\n     preorder(r)\n     \n def inorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     inorder(l)\n     print(\" {}\".format(i), end = \"\")\n     inorder(r)\n     \n def postorder(i):\n     if i == -1:\n         return\n     (l, r) = tree[i]\n     inorder(l)\n     inorder(r)\n     print(\" {}\".format(i), end = \"\")\n     \n print('Preorder')\n preorder(root_node)\n print()\n \n print('Inorder')\n inorder(root_node)\n print()\n \n print('Postorder')\n postorder(root_node)\n print()\n \n```\n "
    },
    {
        "user_id": "u368249389",
        "problem_id": "p02854",
        "submission1_id": "s265682501",
        "crp_content": "\n \n \n \n N = int(input())\n a_list = list(map(int, input().split()))\n \n \n-min_cost = 10*18\n left_sum = 0\n right_sum = sum(a_list)\n \n \n for i in range(N-1):\n     left_sum += a_list[i]\n     right_sum -= a_list[i]\n     distance = abs(left_sum - right_sum)\n     min_cost = min(min_cost, distance)\n \n \n print(min_cost)\n \n",
        "origin_generated_text": "\n```\n \n \n \n N = int(input())\n a_list = list(map(int, input().split()))\n \n \n-min_cost = 10*18\n left_sum = 0\n right_sum = sum(a_list)\n \n \n for i in range(N-1):\n     left_sum += a_list[i]\n     right_sum -= a_list[i]\n     distance = abs(left_sum - right_sum)\n     min_cost = min(min_cost, distance)\n \n \n print(min_cost)\n \n```\n "
    },
    {
        "user_id": "u672475305",
        "problem_id": "p03479",
        "submission1_id": "s919195604",
        "crp_content": "\n x,y = map(int,input().split())\n cnt = 1\n while x * cnt <= y:\n     cnt += 1\n-    x *= 2\n print(cnt)\n",
        "origin_generated_text": "\n```\n x,y = map(int,input().split())\n cnt = 1\n while x * cnt <= y:\n     cnt += 1\n-    x *= 2\n print(cnt)\n```\n "
    },
    {
        "user_id": "u965259973",
        "problem_id": "p03970",
        "submission1_id": "s754060723",
        "crp_content": "\n def string_trnase(s):\n     answer = 'CODEFESTIVAL2016'\n     iters = 0\n     s = list(s)\n     for i in range(0, 16):\n         if s[i] != answer[i]:\n             iters += 1\n     print(iters)\n \n \n-print('Enter a string: ')\n string_trnase(input())\n",
        "origin_generated_text": "\n```\n def string_trnase(s):\n     answer = 'CODEFESTIVAL2016'\n     iters = 0\n     s = list(s)\n     for i in range(0, 16):\n         if s[i] != answer[i]:\n             iters += 1\n     print(iters)\n \n \n-print('Enter a string: ')\n string_trnase(input())\n```\n "
    },
    {
        "user_id": "u068142202",
        "problem_id": "p02880",
        "submission1_id": "s877429230",
        "crp_content": "\n n = int(input())\n ans = 0\n-for i in range(2, 10):\n-  for j in range(2, 10):\n-    if i * j == n:\n-      ans += 1\n-if ans >= 1:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n n = int(input())\n ans = 0\n-for i in range(2, 10):\n-  for j in range(2, 10):\n-    if i * j == n:\n-      ans += 1\n-if ans >= 1:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u724687935",
        "problem_id": "p03416",
        "submission1_id": "s994522382",
        "crp_content": "\n A, B = map(int, input().split())\n \n cnt = 0\n for n in range(A, B + 1):\n     s = str(n)\n-    if s[:2] == s[3:]:\n         cnt += 1\n \n print(cnt)\n \n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n \n cnt = 0\n for n in range(A, B + 1):\n     s = str(n)\n-    if s[:2] == s[3:]:\n         cnt += 1\n \n print(cnt)\n \n```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03959",
        "submission1_id": "s090909025",
        "crp_content": "\n N = int(input())\n T = list(map(int,input().split()))\n A = list(map(int,input().split()))\n ans = 1; MOD = pow(10,9)+7\n if N == 1:\n   if A[0] == T[0]:\n     print(1)\n   else:\n     print(0)\n   exit()\n for i in range(N):\n   if i == 0: \n     if A[i] == A[i+1]: \n       fac = T[0]\n     else: \n       if A[i] > T[0]: \n         fac = 0\n       else:\n         fac = 1\n   elif i < N-1: \n     if T[i] == T[i-1]: \n       if A[i] == A[i+1]: \n         fac = min(T[i],A[i])\n       else: \n         if A[i] > T[i]: \n           fac = 0\n         else:\n           fac = 1\n     else: \n       if A[i] == A[i+1]: \n         if T[i] > A[i]: \n           fac = 0\n         else:\n           fac = 1\n       else: \n         if T[i] == A[i]:\n           fac = 1\n         else:\n           fac = 0\n   else: \n     if T[i] == T[i-1]: \n       if A[i] > T[i]: \n         fac = 0\n       else:\n         fac = 1\n     else: \n       if T[i] == A[i]:\n         fac = 1\n       else:\n         fac = 0\n   ans = (ans*fac)%MOD\n print(ans%MOD)\n       \n       \n     \n",
        "origin_generated_text": "\n```\n N = int(input())\n T = list(map(int,input().split()))\n A = list(map(int,input().split()))\n ans = 1; MOD = pow(10,9)+7\n if N == 1:\n   if A[0] == T[0]:\n     print(1)\n   else:\n     print(0)\n   exit()\n for i in range(N):\n   if i == 0: \n     if A[i] == A[i+1]: \n       fac = T[0]\n     else: \n       if A[i] > T[0]: \n         fac = 0\n       else:\n         fac = 1\n   elif i < N-1: \n     if T[i] == T[i-1]: \n       if A[i] == A[i+1]: \n         fac = min(T[i],A[i])\n       else: \n         if A[i] > T[i]: \n           fac = 0\n         else:\n           fac = 1\n     else: \n       if A[i] == A[i+1]: \n         if T[i] > A[i]: \n           fac = 0\n         else:\n           fac = 1\n       else: \n         if T[i] == A[i]:\n           fac = 1\n         else:\n           fac = 0\n   else: \n     if T[i] == T[i-1]: \n       if A[i] > T[i]: \n         fac = 0\n       else:\n         fac = 1\n     else: \n       if T[i] == A[i]:\n         fac = 1\n       else:\n         fac = 0\n   ans = (ans*fac)%MOD\n print(ans%MOD)\n       \n       \n     \n```\n "
    },
    {
        "user_id": "u652656291",
        "problem_id": "p03970",
        "submission1_id": "s484607389",
        "crp_content": "\n S = input()\n T = 'CODEFESTIVAL2016'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == T[i]:\n     ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n S = input()\n T = 'CODEFESTIVAL2016'\n ans = 0\n for i in range(len(S)):\n-  if S[i] == T[i]:\n     ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u662418022",
        "problem_id": "p02327",
        "submission1_id": "s365957025",
        "crp_content": "\n \n \n from itertools import chain\n \n if __name__ == '__main__':\n \n     H, W = map(int, input().split())\n     C = []\n     hist = []\n     for i in range(H):\n         l = input().split()\n         C.append([int(x) for x in l])\n         hist.append([(int(x) + 1) % 2 for x in l])\n \n     for i in range(1, H):\n         for j in range(W):\n             if C[i][j] == 0:\n                 hist[i][j] = hist[i - 1][j] + 1\n                 \n     S = []\n     max_area = 0\n     for i in range(H):\n         for j in range(W):\n             rect = [j, hist[i][j]]\n             if not S:\n                 S.append(rect)\n             elif S[-1][1] < rect[1]:\n                 S.append(rect)\n             elif S[-1][1] > rect[1]:\n                 while S and S[-1][1] > rect[1]:\n                     post_rect = S.pop()\n                     area = post_rect[1] * (j - post_rect[0])\n                     max_area = max(max_area, area)\n                 S.append([post_rect[0], rect[1]])\n \n     print(max_area)\n \n \n \n \n",
        "origin_generated_text": "\n```\n \n \n from itertools import chain\n \n if __name__ == '__main__':\n \n     H, W = map(int, input().split())\n     C = []\n     hist = []\n     for i in range(H):\n         l = input().split()\n         C.append([int(x) for x in l])\n         hist.append([(int(x) + 1) % 2 for x in l])\n \n     for i in range(1, H):\n         for j in range(W):\n             if C[i][j] == 0:\n                 hist[i][j] = hist[i - 1][j] + 1\n                 \n     S = []\n     max_area = 0\n     for i in range(H):\n         for j in range(W):\n             rect = [j, hist[i][j]]\n             if not S:\n                 S.append(rect)\n             elif S[-1][1] < rect[1]:\n                 S.append(rect)\n             elif S[-1][1] > rect[1]:\n                 while S and S[-1][1] > rect[1]:\n                     post_rect = S.pop()\n                     area = post_rect[1] * (j - post_rect[0])\n                     max_area = max(max_area, area)\n                 S.append([post_rect[0], rect[1]])\n \n     print(max_area)\n \n \n \n \n```\n "
    },
    {
        "user_id": "u222859507",
        "problem_id": "p02959",
        "submission1_id": "s028812771",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n b.append(0)\n \n sum = 0\n rest_hero = 0\n \n for i in range(n+1):\n     hero = b[i] + rest_hero\n     if a[i] >= hero:\n         sum += hero\n         rest_hero = 0\n     else:\n         sum += a[i]\n-        rest_hero = b[i] - (a[i] - rest_hero)\n \n print(sum)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n b.append(0)\n \n sum = 0\n rest_hero = 0\n \n for i in range(n+1):\n     hero = b[i] + rest_hero\n     if a[i] >= hero:\n         sum += hero\n         rest_hero = 0\n     else:\n         sum += a[i]\n-        rest_hero = b[i] - (a[i] - rest_hero)\n \n print(sum)\n \n```\n "
    },
    {
        "user_id": "u054106284",
        "problem_id": "p03972",
        "submission1_id": "s308413734",
        "crp_content": "\n H, W = (int(i) for i in input().split())\n L = []\n for i in range(W):\n   L.append((int(input()), 0))\n for i in range(H):\n   L.append((int(input()), 1))\n a = W\n b = H\n ans = 0\n L.sort()\n for i in range(H + W):\n   if L[i][1] == 0:\n     ans += (b+1) * L[i][0]\n     a -= 1\n   else:\n     ans += (a+1) * L[i][0]\n     b -= 1\n print(ans)\n",
        "origin_generated_text": "\n```\n H, W = (int(i) for i in input().split())\n L = []\n for i in range(W):\n   L.append((int(input()), 0))\n for i in range(H):\n   L.append((int(input()), 1))\n a = W\n b = H\n ans = 0\n L.sort()\n for i in range(H + W):\n   if L[i][1] == 0:\n     ans += (b+1) * L[i][0]\n     a -= 1\n   else:\n     ans += (a+1) * L[i][0]\n     b -= 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u432042540",
        "problem_id": "p03568",
        "submission1_id": "s875668735",
        "crp_content": "\n n = int(input())\n a = [int(i) for i in input().split()]\n-print(a)\n \n cnt = 0\n for i in range(n):\n     if a[i] % 2 == 0:\n         cnt += 1\n \n x = 3 ** n - 2 ** cnt\n \n print(x)\n",
        "origin_generated_text": "\n```\n n = int(input())\n a = [int(i) for i in input().split()]\n-print(a)\n \n cnt = 0\n for i in range(n):\n     if a[i] % 2 == 0:\n         cnt += 1\n \n x = 3 ** n - 2 ** cnt\n \n print(x)\n```\n "
    },
    {
        "user_id": "u556589653",
        "problem_id": "p03296",
        "submission1_id": "s223409442",
        "crp_content": "\n N = int(input())\n A = list(map(int,input().split()))\n ans = 0\n K = max(A)+1\n-for i in range(N-2):\n     if A[i] == A[i+1]:\n         A[i+1] = K\n         K += 1\n         ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n A = list(map(int,input().split()))\n ans = 0\n K = max(A)+1\n-for i in range(N-2):\n     if A[i] == A[i+1]:\n         A[i+1] = K\n         K += 1\n         ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u921826483",
        "problem_id": "p03729",
        "submission1_id": "s275127230",
        "crp_content": "\n a,b,c = input().split()\n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print(\"YES\")\n else:\n-    print(\"NO\")\n",
        "origin_generated_text": "\n```\n a,b,c = input().split()\n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print(\"YES\")\n else:\n-    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u856819253",
        "problem_id": "p02640",
        "submission1_id": "s861904966",
        "crp_content": "\n import sys\n \n def I(): return int(sys.stdin.readline().rstrip())\n def LI():return list(map(int,sys.stdin.readline().rstrip().split()))\n def LS():return list(sys.stdin.readline().rstrip().split())\n \n def main():\n   X,Y = LI()[:]\n   \n \n-  if ((Y-2*X) % 2) == 0:\n-    a = (Y-2*X) / 2\n-    if a<=X:\n-      print('Yes')\n-      exit()\n   \n   print('No')\n \n if __name__ == '__main__':\n \tmain()\n \n",
        "origin_generated_text": "\n```\n import sys\n \n def I(): return int(sys.stdin.readline().rstrip())\n def LI():return list(map(int,sys.stdin.readline().rstrip().split()))\n def LS():return list(sys.stdin.readline().rstrip().split())\n \n def main():\n   X,Y = LI()[:]\n   \n \n-  if ((Y-2*X) % 2) == 0:\n-    a = (Y-2*X) / 2\n-    if a<=X:\n-      print('Yes')\n-      exit()\n   \n   print('No')\n \n if __name__ == '__main__':\n \tmain()\n \n```\n "
    },
    {
        "user_id": "u337525741",
        "problem_id": "p02950",
        "submission1_id": "s684731892",
        "crp_content": "\n p = int(input())\n b_list = [0 for _ in range(p)]\n a_list = list(map(int,input().split()))\n if a_list[0] == 1:\n     a_list[0] = 0\n     b_list[0] = 1\n     b_list[p-1] = -1\n c = 0\n for i in a_list:\n     if i == 1:\n         for j in range(p-1):\n             b_list[j+1] -= (c**(p-j-1))%p\n     c += 1\n for j in b_list:\n     print(j % p,end = ' ')\n \n",
        "origin_generated_text": "\n```\n p = int(input())\n b_list = [0 for _ in range(p)]\n a_list = list(map(int,input().split()))\n if a_list[0] == 1:\n     a_list[0] = 0\n     b_list[0] = 1\n     b_list[p-1] = -1\n c = 0\n for i in a_list:\n     if i == 1:\n         for j in range(p-1):\n             b_list[j+1] -= (c**(p-j-1))%p\n     c += 1\n for j in b_list:\n     print(j % p,end = ' ')\n \n```\n "
    },
    {
        "user_id": "u960080897",
        "problem_id": "p03970",
        "submission1_id": "s893784344",
        "crp_content": "\n s = input()\n t = \"CODEFESTIVAL2016\"\n cnt = 0\n for i, z in zip(s, t):\n-    if s != z:\n         cnt += 1\n         \n print(cnt)\n",
        "origin_generated_text": "\n```\n s = input()\n t = \"CODEFESTIVAL2016\"\n cnt = 0\n for i, z in zip(s, t):\n-    if s != z:\n         cnt += 1\n         \n print(cnt)\n```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p03573",
        "submission1_id": "s093598074",
        "crp_content": "\n a, b, c = map(int, input().split())\n-print(c if a==b else b if a==c else c)\n",
        "origin_generated_text": "\n```\n a, b, c = map(int, input().split())\n-print(c if a==b else b if a==c else c)\n```\n "
    },
    {
        "user_id": "u090032260",
        "problem_id": "p02880",
        "submission1_id": "s103344356",
        "crp_content": "\n N=int(input())\n for a in range(1,10):\n     for b in range(1,10):\n         if N==a*b:\n             print(\"Yes\")\n-        else:\n-            print(\"No\")\n",
        "origin_generated_text": "\n```\n N=int(input())\n for a in range(1,10):\n     for b in range(1,10):\n         if N==a*b:\n             print(\"Yes\")\n-        else:\n-            print(\"No\")\n```\n "
    },
    {
        "user_id": "u008323723",
        "problem_id": "p02633",
        "submission1_id": "s651616773",
        "crp_content": "\n X= int(input())\n \n-if 360 % X != 0:\n   print(360)\n else:\n   print(int(360/X))\n",
        "origin_generated_text": "\n```\n X= int(input())\n \n-if 360 % X != 0:\n   print(360)\n else:\n   print(int(360/X))\n```\n "
    },
    {
        "user_id": "u763210820",
        "problem_id": "p02730",
        "submission1_id": "s539272819",
        "crp_content": "\n n = list(input())\n nr = list(reversed(n))\n mae = []\n usiro = []\n-for i in range(int((len(n)-1)/2)):\n     mae.append(n[i])\n     usiro.append(nr[i])\n \n if mae == usiro:\n     print('Yes')\n else:\n     print('No')\n \n",
        "origin_generated_text": "\n```\n n = list(input())\n nr = list(reversed(n))\n mae = []\n usiro = []\n-for i in range(int((len(n)-1)/2)):\n     mae.append(n[i])\n     usiro.append(nr[i])\n \n if mae == usiro:\n     print('Yes')\n else:\n     print('No')\n \n```\n "
    },
    {
        "user_id": "u459419927",
        "problem_id": "p03752",
        "submission1_id": "s722051057",
        "crp_content": "\n N,K=list(map(int,input().split()))\n height=list(map(int,input().split()))\n ans=10**10\n count=0\n for x in range(1, N):\n     if height[0] < height[x]:\n         count += 1\n if count>=K:\n     print(0)\n     exit()\n for i in range(2**N):\n     cost=0\n     height2=height.copy()\n     for j in range(N):\n         if i>>j&1:\n             count=0\n             for k in range(j):\n                 if height2[k]>=height2[j]:\n                     cost+=height2[k]-height2[j]+1\n                     height2[j]+=height2[k]-height2[j]+1\n             for x in range(1,N):\n                 if height2[0]<height2[x]:\n                     count+=1\n \n             if ans>cost and count==K-1:\n                 ans=cost\n \n \n print(ans)\n",
        "origin_generated_text": "\n```\n N,K=list(map(int,input().split()))\n height=list(map(int,input().split()))\n ans=10**10\n count=0\n for x in range(1, N):\n     if height[0] < height[x]:\n         count += 1\n if count>=K:\n     print(0)\n     exit()\n for i in range(2**N):\n     cost=0\n     height2=height.copy()\n     for j in range(N):\n         if i>>j&1:\n             count=0\n             for k in range(j):\n                 if height2[k]>=height2[j]:\n                     cost+=height2[k]-height2[j]+1\n                     height2[j]+=height2[k]-height2[j]+1\n             for x in range(1,N):\n                 if height2[0]<height2[x]:\n                     count+=1\n \n             if ans>cost and count==K-1:\n                 ans=cost\n \n \n print(ans)\n```\n "
    },
    {
        "user_id": "u741579801",
        "problem_id": "p02699",
        "submission1_id": "s459784822",
        "crp_content": "\n-W, S = map(int, input().split())\n \n if W >= S:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n-W, S = map(int, input().split())\n \n if W >= S:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u464627439",
        "problem_id": "p02954",
        "submission1_id": "s948760841",
        "crp_content": "\n s = list(input())\n \n N = len(s)\n \n RL = []\n LR = [-1]\n for i in range(N-1):\n     if s[i] == 'R' and s[i+1] == 'L':\n         RL.append(i)\n     if s[i] == 'L' and s[i+1] == 'R':\n         LR.append(i)\n \n LR.append(N-1)\n \n _num = []\n for i in range(len(LR)-1):\n     _num.append(LR[i+1] - LR[i])\n \n \n ans = [0]*N\n \n for i in range(len(_num)):\n     if int(_num[i]/2) == _num[i]/2:\n         ans[RL[i]] = int(_num[i]/2)\n         ans[RL[i]+1] = int(_num[i]/2)\n     else:\n         if RL[i] - LR[i] > LR[i+1] - RL[i]:\n             if int(RL[i] - LR[i]) == RL[i] - LR[i]:\n                 ans[RL[i]] = int(_num[i]/2) + 1\n                 ans[RL[i]+1] = int(_num[i]/2)\n             else:\n                 ans[RL[i]] = int(_num[i]/2)\n                 ans[RL[i]+1] = int(_num[i]/2) + 1\n         else:\n             if int(LR[i+1] - RL[i]) == LR[i+1] - RL[i]:\n                 ans[RL[i]] = int(_num[i]/2) + 1\n                 ans[RL[i]+1] = int(_num[i]/2)\n             else:\n                 ans[RL[i]] = int(_num[i]/2)\n                 ans[RL[i]+1] = int(_num[i]/2) + 1\n                 \n-print(ans)\n",
        "origin_generated_text": "\n```\n s = list(input())\n \n N = len(s)\n \n RL = []\n LR = [-1]\n for i in range(N-1):\n     if s[i] == 'R' and s[i+1] == 'L':\n         RL.append(i)\n     if s[i] == 'L' and s[i+1] == 'R':\n         LR.append(i)\n \n LR.append(N-1)\n \n _num = []\n for i in range(len(LR)-1):\n     _num.append(LR[i+1] - LR[i])\n \n \n ans = [0]*N\n \n for i in range(len(_num)):\n     if int(_num[i]/2) == _num[i]/2:\n         ans[RL[i]] = int(_num[i]/2)\n         ans[RL[i]+1] = int(_num[i]/2)\n     else:\n         if RL[i] - LR[i] > LR[i+1] - RL[i]:\n             if int(RL[i] - LR[i]) == RL[i] - LR[i]:\n                 ans[RL[i]] = int(_num[i]/2) + 1\n                 ans[RL[i]+1] = int(_num[i]/2)\n             else:\n                 ans[RL[i]] = int(_num[i]/2)\n                 ans[RL[i]+1] = int(_num[i]/2) + 1\n         else:\n             if int(LR[i+1] - RL[i]) == LR[i+1] - RL[i]:\n                 ans[RL[i]] = int(_num[i]/2) + 1\n                 ans[RL[i]+1] = int(_num[i]/2)\n             else:\n                 ans[RL[i]] = int(_num[i]/2)\n                 ans[RL[i]+1] = int(_num[i]/2) + 1\n                 \n-print(ans)\n```\n "
    },
    {
        "user_id": "u510630535",
        "problem_id": "p02922",
        "submission1_id": "s885212911",
        "crp_content": "\n def resolve():\n     a, b = map(int, input().split())\n     ret = 0\n     if b > 1:\n-        n, m = divmod(b, a)\n-        ret = n + (1 if m > 0 else 0)\n     print(ret)\n \n \n if __name__ == '__main__':\n     resolve()\n",
        "origin_generated_text": "\n```\n def resolve():\n     a, b = map(int, input().split())\n     ret = 0\n     if b > 1:\n-        n, m = divmod(b, a)\n-        ret = n + (1 if m > 0 else 0)\n     print(ret)\n \n \n if __name__ == '__main__':\n     resolve()\n```\n "
    },
    {
        "user_id": "u319984556",
        "problem_id": "p03563",
        "submission1_id": "s837149104",
        "crp_content": "\n-print(-(int(input())+int(input()))/2)\n",
        "origin_generated_text": "\n```\n-print(-(int(input())+int(input()))/2)\n```\n "
    },
    {
        "user_id": "u609881501",
        "problem_id": "p00006",
        "submission1_id": "s211364098",
        "crp_content": "\n import sys\n-print(sys.stdin.readline()[:-1:-1])\n",
        "origin_generated_text": "\n```\n import sys\n-print(sys.stdin.readline()[:-1:-1])\n```\n "
    },
    {
        "user_id": "u046432236",
        "problem_id": "p03039",
        "submission1_id": "s501011609",
        "crp_content": "\n def cmb(n, r):\n     if n - r < r: r = n - r\n     if r == 0: return 1\n     if r == 1: return n\n \n     numerator = [n - r + k + 1 for k in range(r)]\n     denominator = [k + 1 for k in range(r)]\n \n     for p in range(2,r+1):\n         pivot = denominator[p - 1]\n         if pivot > 1:\n             offset = (n - r) % p\n             for k in range(p-1,r,p):\n                 numerator[k - offset] /= pivot\n                 denominator[k] /= pivot\n \n     result = 1\n     for k in range(r):\n         if numerator[k] > 1:\n             result *= int(numerator[k])\n \n     return result\n \n list=input().split(\" \")\n n=int(list[0])\n m=int(list[1])\n k=int(list[2])\n \n niko1=int(m*m*(n*(n+1)*(2*n+1)/6 - (n+1)*n*(n+1)/2 + n*n*(n+1)/2))\n niko2=int(n*n*(m*(m+1)*(2*m+1)/6 - (m+1)*m*(m+1)/2 + m*m*(m+1)/2))\n niko1=niko1%(10**9+7)\n niko2=niko2%(10**9+7)\n niko=niko1+niko2\n kosu=cmb(m*n-2, k-2)\n kosu=kosu%(10**9+7)\n kotae=int(niko*kosu/2)\n kotae=kotae%(10**9+7)\n print(kotae)\n",
        "origin_generated_text": "\n```\n def cmb(n, r):\n     if n - r < r: r = n - r\n     if r == 0: return 1\n     if r == 1: return n\n \n     numerator = [n - r + k + 1 for k in range(r)]\n     denominator = [k + 1 for k in range(r)]\n \n     for p in range(2,r+1):\n         pivot = denominator[p - 1]\n         if pivot > 1:\n             offset = (n - r) % p\n             for k in range(p-1,r,p):\n                 numerator[k - offset] /= pivot\n                 denominator[k] /= pivot\n \n     result = 1\n     for k in range(r):\n         if numerator[k] > 1:\n             result *= int(numerator[k])\n \n     return result\n \n list=input().split(\" \")\n n=int(list[0])\n m=int(list[1])\n k=int(list[2])\n \n niko1=int(m*m*(n*(n+1)*(2*n+1)/6 - (n+1)*n*(n+1)/2 + n*n*(n+1)/2))\n niko2=int(n*n*(m*(m+1)*(2*m+1)/6 - (m+1)*m*(m+1)/2 + m*m*(m+1)/2))\n niko1=niko1%(10**9+7)\n niko2=niko2%(10**9+7)\n niko=niko1+niko2\n kosu=cmb(m*n-2, k-2)\n kosu=kosu%(10**9+7)\n kotae=int(niko*kosu/2)\n kotae=kotae%(10**9+7)\n print(kotae)\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s380789604",
        "crp_content": "\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n",
        "origin_generated_text": "\n```\n from bisect import bisect_right\n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n \n P = [[0] * N for i in range(30)]\n for i in range(N):\n     q = bisect_right(X, X[i] + L)\n     P[0][i] = q - 1\n \n for i in range(1, 30):\n     for j in range(N):\n         P[i][j] = P[i - 1][P[i - 1][j]]\n \n \n Q = int(input())\n for i in range(Q):\n     a, b = map(int, input().split())\n     a, b = a - 1, b - 1\n     if a > b:\n         a, b = b, a\n     Y = X[b]\n     num = 0\n     for j in range(29, -1, -1):\n         if X[P[j][a]] <= Y:\n             Y -= X[P[j][a]]\n             num += 2 ** j\n         if Y <= 0:\n             print(num)\n             break\n```\n "
    },
    {
        "user_id": "u540290227",
        "problem_id": "p03729",
        "submission1_id": "s110032169",
        "crp_content": "\n a, b, c = input().split()\n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print('YES')\n else:\n-    print('NO')\n",
        "origin_generated_text": "\n```\n a, b, c = input().split()\n \n if a[-1] == b[0]:\n     if b[-1] == c[0]:\n-        print('YES')\n else:\n-    print('NO')\n```\n "
    },
    {
        "user_id": "u440975163",
        "problem_id": "p02642",
        "submission1_id": "s778394561",
        "crp_content": "\n from collections import deque \n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n a = deque(a)\n-y = [min(a)]\n t = 0\n while a:\n     v = a.popleft()\n     x = 0\n     for j in y:\n         if v % j == 0:\n             break\n         else:\n             x += 1\n         if v == j:\n             t += 1\n         if x == len(y):\n             y.append(v)\n print(len(y) - t)\n",
        "origin_generated_text": "\n```\n from collections import deque \n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n a = deque(a)\n-y = [min(a)]\n t = 0\n while a:\n     v = a.popleft()\n     x = 0\n     for j in y:\n         if v % j == 0:\n             break\n         else:\n             x += 1\n         if v == j:\n             t += 1\n         if x == len(y):\n             y.append(v)\n print(len(y) - t)\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p02912",
        "submission1_id": "s450837385",
        "crp_content": "\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     d = {\"Sunny\":1 , \"Cloudy\":2, \"Rainy\":0}\n     a = [\"Sunny\", \"Cloudy\", \"Rainy\"]\n     print(a[d[input().rstrip()]])\n     return\n \n \n def B():\n     s = S()\n     for i, si in enumerate(s):\n         if i % 2:\n             if si == \"R\":\n                 print(\"No\")\n                 return\n         else:\n             if si == \"L\":\n                 print(\"No\")\n                 return\n     print(\"Yes\")\n     return\n \n \n def C():\n     n, k, q = LI()\n     d = [0] * n\n     for _ in range(q):\n         a = II() - 1\n         d[a] += 1\n     for a in d:\n-        if k - (q - a) > 0:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     return\n \n \n def D():\n     n,m = LI()\n     a = LI()\n     q = []\n     for ai in a:\n         heappush(q, ai)\n     for _ in range(m):\n         heappush(q, heappop(q) / 2)\n     ans = 0\n     while q:\n         ans += int(heappop(q))\n     print(ans)\n     return\n \n \n def E():\n     return\n \n \n def F():\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n",
        "origin_generated_text": "\n```\n \n from collections import defaultdict,deque\n from heapq import heappush, heappop\n from bisect import bisect_left, bisect_right\n import sys, random, itertools, math\n sys.setrecursionlimit(10**5)\n input = sys.stdin.readline\n sqrt = math.sqrt\n def LI(): return list(map(int, input().split()))\n def LF(): return list(map(float, input().split()))\n def LI_(): return list(map(lambda x: int(x)-1, input().split()))\n def II(): return int(input())\n def IF(): return float(input())\n def LS(): return list(map(list, input().split()))\n def S(): return list(input().rstrip())\n def IR(n): return [II() for _ in range(n)]\n def LIR(n): return [LI() for _ in range(n)]\n def FR(n): return [IF() for _ in range(n)]\n def LFR(n): return [LI() for _ in range(n)]\n def LIR_(n): return [LI_() for _ in range(n)]\n def SR(n): return [S() for _ in range(n)]\n def LSR(n): return [LS() for _ in range(n)]\n mod = 1000000007\n inf = float('INF')\n \n \n def A():\n     d = {\"Sunny\":1 , \"Cloudy\":2, \"Rainy\":0}\n     a = [\"Sunny\", \"Cloudy\", \"Rainy\"]\n     print(a[d[input().rstrip()]])\n     return\n \n \n def B():\n     s = S()\n     for i, si in enumerate(s):\n         if i % 2:\n             if si == \"R\":\n                 print(\"No\")\n                 return\n         else:\n             if si == \"L\":\n                 print(\"No\")\n                 return\n     print(\"Yes\")\n     return\n \n \n def C():\n     n, k, q = LI()\n     d = [0] * n\n     for _ in range(q):\n         a = II() - 1\n         d[a] += 1\n     for a in d:\n-        if k - (q - a) > 0:\n             print(\"Yes\")\n         else:\n             print(\"No\")\n     return\n \n \n def D():\n     n,m = LI()\n     a = LI()\n     q = []\n     for ai in a:\n         heappush(q, ai)\n     for _ in range(m):\n         heappush(q, heappop(q) / 2)\n     ans = 0\n     while q:\n         ans += int(heappop(q))\n     print(ans)\n     return\n \n \n def E():\n     return\n \n \n def F():\n     return\n \n \n if __name__ == '__main__':\n     D()\n \n```\n "
    },
    {
        "user_id": "u629350026",
        "problem_id": "p03106",
        "submission1_id": "s038185946",
        "crp_content": "\n a,b,k=map(int,input().split())\n temp=[]\n-for i in range(1,min(a,b)+1):\n   if a%i==0 and b%i==0:\n     temp.append(i)\n print(temp[k-1])\n-  \n",
        "origin_generated_text": "\n```\n a,b,k=map(int,input().split())\n temp=[]\n-for i in range(1,min(a,b)+1):\n   if a%i==0 and b%i==0:\n     temp.append(i)\n print(temp[k-1])\n-  \n```\n "
    },
    {
        "user_id": "u366886346",
        "problem_id": "p03573",
        "submission1_id": "s834604725",
        "crp_content": "\n a=list(map(int,input().split()))\n-for i in range(2):\n     if a.count(a[i])!=1:\n         del a[i]\n print(int(a[0]))\n \n",
        "origin_generated_text": "\n```\n a=list(map(int,input().split()))\n-for i in range(2):\n     if a.count(a[i])!=1:\n         del a[i]\n print(int(a[0]))\n \n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s131154299",
        "crp_content": "\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n-drop(1,1,1)\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n lines = []\n for line in sys.stdin:\n     lines.append(line.strip().split(','))\n \n field = [[0 for i in range(10)] for j in range(10)]\n \n def drop(x, y, z):\n     if z==1:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if abs(i)+abs(j)<2 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     elif z==2:\n         for i in range(-1,2):\n             for j in range(-1,2):\n                 if 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n     else:\n         for i in range(-2,3):\n             for j in range(-2,3):\n                 if abs(i)+abs(j)<3 and 0<=y+j<=10 and 0<=x+i<=10:\n                     field[y+j][x+i] += 1\n \n-drop(1,1,1)\n \n \n```\n "
    },
    {
        "user_id": "u910536093",
        "problem_id": "p02718",
        "submission1_id": "s754139148",
        "crp_content": "\n i1 = input()\n i1 = i1.split()\n types = int(i1[0])\n select = int(i1[1])\n \n i2 = input()\n i2 = [int(n) for n in i2.split()]\n i2.sort(reverse=True)\n \n summary = sum(i2)\n-threshold = int(summary / (types * 4))\n \n-if i2[select-1] < threshold :\n     print(\"No\")\n else:\n     print(\"Yes\")\n \n",
        "origin_generated_text": "\n```\n i1 = input()\n i1 = i1.split()\n types = int(i1[0])\n select = int(i1[1])\n \n i2 = input()\n i2 = [int(n) for n in i2.split()]\n i2.sort(reverse=True)\n \n summary = sum(i2)\n-threshold = int(summary / (types * 4))\n \n-if i2[select-1] < threshold :\n     print(\"No\")\n else:\n     print(\"Yes\")\n \n```\n "
    },
    {
        "user_id": "u899909022",
        "problem_id": "p02954",
        "submission1_id": "s296521830",
        "crp_content": "\n S=input()\n ans = [0] * len(S)\n last_R=[0] * len(S)\n tmp = 0\n for i in range(len(S)):\n     if S[i] == \"R\":\n         tmp = i\n     last_R[i] = tmp\n first_L=[0] * len(S)\n tmp = 0\n for i in reversed(range(len(S))):\n     if S[i] == \"L\":\n         tmp = i\n     first_L[i] = tmp\n for i in range(len(S)):\n     if S[i] == \"L\":\n         R_index = last_R[i]\n-        if i - R_index % 2 == 1:\n             ans[R_index+1] += 1\n         else:\n             ans[R_index] += 1\n     if S[i] == \"R\":\n         L_index = first_L[i]\n-        if L_index - i %2 == 1:\n             ans[L_index-1] += 1\n         else:\n             ans[L_index] += 1\n ans = map(str, ans)\n print(\" \".join(ans))\n",
        "origin_generated_text": "\n```\n S=input()\n ans = [0] * len(S)\n last_R=[0] * len(S)\n tmp = 0\n for i in range(len(S)):\n     if S[i] == \"R\":\n         tmp = i\n     last_R[i] = tmp\n first_L=[0] * len(S)\n tmp = 0\n for i in reversed(range(len(S))):\n     if S[i] == \"L\":\n         tmp = i\n     first_L[i] = tmp\n for i in range(len(S)):\n     if S[i] == \"L\":\n         R_index = last_R[i]\n-        if i - R_index % 2 == 1:\n             ans[R_index+1] += 1\n         else:\n             ans[R_index] += 1\n     if S[i] == \"R\":\n         L_index = first_L[i]\n-        if L_index - i %2 == 1:\n             ans[L_index-1] += 1\n         else:\n             ans[L_index] += 1\n ans = map(str, ans)\n print(\" \".join(ans))\n```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03480",
        "submission1_id": "s069522556",
        "crp_content": "\n import heapq\n import sys\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n mod = 10**9 + 7\n inf = float('inf')\n \n S = str(input())\n N = len(S)\n ans = int(0)\n \n k = N\n \n for i in range(N-1):\n     if S[i]!=S[i+1]:\n-        k = max(i+1,N-1-i)\n ans = k\n print(ans)\n",
        "origin_generated_text": "\n```\n import heapq\n import sys\n def I(): return int(sys.stdin.readline())\n def LI(): return list(map(int,sys.stdin.readline().split()))\n mod = 10**9 + 7\n inf = float('inf')\n \n S = str(input())\n N = len(S)\n ans = int(0)\n \n k = N\n \n for i in range(N-1):\n     if S[i]!=S[i+1]:\n-        k = max(i+1,N-1-i)\n ans = k\n print(ans)\n```\n "
    },
    {
        "user_id": "u333139319",
        "problem_id": "p02887",
        "submission1_id": "s322858074",
        "crp_content": "\n n = int(input())\n s = input()\n a = 1\n for i in range(n-1):\n   if s[i] != s[i+1]:\n     a += 1\n",
        "origin_generated_text": "\n```\n n = int(input())\n s = input()\n a = 1\n for i in range(n-1):\n   if s[i] != s[i+1]:\n     a += 1\n```\n "
    },
    {
        "user_id": "u347184682",
        "problem_id": "p02880",
        "submission1_id": "s414640198",
        "crp_content": "\n import sys\n n=int(input())\n for i in range(1,10):\n     if n%i==0:\n         print(\"Yes\")\n         sys.exit()\n print(\"No\")\n",
        "origin_generated_text": "\n```\n import sys\n n=int(input())\n for i in range(1,10):\n     if n%i==0:\n         print(\"Yes\")\n         sys.exit()\n print(\"No\")\n```\n "
    },
    {
        "user_id": "u618107373",
        "problem_id": "p02886",
        "submission1_id": "s749880404",
        "crp_content": "\n n=int(input())\n k=list(map(int,input().split()))\n ans=0\n for i in range(n):\n   for j in range(n):\n-    if i==j:\n-      continue\n     ans+=k[i]*k[j]\n print(ans)\n",
        "origin_generated_text": "\n```\n n=int(input())\n k=list(map(int,input().split()))\n ans=0\n for i in range(n):\n   for j in range(n):\n-    if i==j:\n-      continue\n     ans+=k[i]*k[j]\n print(ans)\n```\n "
    },
    {
        "user_id": "u953379577",
        "problem_id": "p03796",
        "submission1_id": "s331139499",
        "crp_content": "\n n = int(input())\n \n ans = 1\n \n for i in range(n):\n     ans *= i+1\n-    ans = ans%10000007\n",
        "origin_generated_text": "\n```\n n = int(input())\n \n ans = 1\n \n for i in range(n):\n     ans *= i+1\n-    ans = ans%10000007\n```\n "
    },
    {
        "user_id": "u117193815",
        "problem_id": "p03573",
        "submission1_id": "s232051202",
        "crp_content": "\n a,b,c=map(int, input().split())\n if a==b:\n   print(c)\n-else:\n   print(a)\n",
        "origin_generated_text": "\n```\n a,b,c=map(int, input().split())\n if a==b:\n   print(c)\n-else:\n   print(a)\n```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03103",
        "submission1_id": "s608232405",
        "crp_content": "\n N, M = map(int,input().split())\n \n A = []\n for i in range(N):\n   a,b = map(int,input().split())\n   A.append([a,b])\n \n A.sort()\n-print(A)\n-\n nokori = M\n yen = 0\n mise = 0\n while nokori > 0:\n   if A[mise][1] >= nokori: \n     yen += A[mise][0]*nokori\n     break\n   else:\n     yen += A[mise][0]*A[mise][1]\n     nokori -= A[mise][1]\n     mise += 1\n print(yen)\n   \n",
        "origin_generated_text": "\n```\n N, M = map(int,input().split())\n \n A = []\n for i in range(N):\n   a,b = map(int,input().split())\n   A.append([a,b])\n \n A.sort()\n-print(A)\n-\n nokori = M\n yen = 0\n mise = 0\n while nokori > 0:\n   if A[mise][1] >= nokori: \n     yen += A[mise][0]*nokori\n     break\n   else:\n     yen += A[mise][0]*A[mise][1]\n     nokori -= A[mise][1]\n     mise += 1\n print(yen)\n   \n```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p02742",
        "submission1_id": "s537720414",
        "crp_content": "\n import sys\n import math\n import string\n import fractions\n import random\n from operator import itemgetter\n import itertools\n from collections import deque\n import copy\n import heapq\n import bisect\n \n MOD = 10 ** 9 + 7\n INF = float('inf')\n input = lambda: sys.stdin.readline().strip()\n \n H, W = map(int, input().split())\n-ans = math.ceil(H / 2) * math.ceil(W / 2) + H \n-print(ans - 1)\n \n",
        "origin_generated_text": "\n```\n import sys\n import math\n import string\n import fractions\n import random\n from operator import itemgetter\n import itertools\n from collections import deque\n import copy\n import heapq\n import bisect\n \n MOD = 10 ** 9 + 7\n INF = float('inf')\n input = lambda: sys.stdin.readline().strip()\n \n H, W = map(int, input().split())\n-ans = math.ceil(H / 2) * math.ceil(W / 2) + H \n-print(ans - 1)\n \n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s991372012",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = 1 << 20\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = 1 << 20\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n             init_adj_matrix[v_index][pair[0]] = pair[1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n```\n "
    },
    {
        "user_id": "u163791883",
        "problem_id": "p02880",
        "submission1_id": "s025331138",
        "crp_content": "\n N = int(input())\n for i in range(9):\n   for j in range(9):\n-    if i * j == N:\n       print('Yes')\n       exit()\n print('No')\n",
        "origin_generated_text": "\n```\n N = int(input())\n for i in range(9):\n   for j in range(9):\n-    if i * j == N:\n       print('Yes')\n       exit()\n print('No')\n```\n "
    },
    {
        "user_id": "u761062383",
        "problem_id": "p03943",
        "submission1_id": "s833143480",
        "crp_content": "\n a=[int(i) for i in input().split()]\n-if a[0]==sum(a[1:]) or sum(a[:2])==a[2]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n",
        "origin_generated_text": "\n```\n a=[int(i) for i in input().split()]\n-if a[0]==sum(a[1:]) or sum(a[:2])==a[2]:\n   print(\"Yes\")\n else:\n   print(\"No\")\n```\n "
    },
    {
        "user_id": "u652057333",
        "problem_id": "p03965",
        "submission1_id": "s382699364",
        "crp_content": "\n s = str(input().rstrip())\n \n def battle(s1, s2):\n     l = {'g': {'g': 0, 'p': -1}, 'p': {'g': 1, 'p': 0}}\n     return l[s1][s2]\n \n hist = ['g']\n \n g = 1\n p = 0\n ans = 0\n if s[0] == 'p':\n     ans = -1\n for i in range(1, len(s)):\n     cur = 'g'\n     if s[i] == 'g':\n         if p < g:\n             cur = 'p'\n     if cur == 'p':\n         p += 1\n     else:\n         g += 1\n     hist.append(cur)\n     ans += battle(cur, s[i])\n \n \n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n s = str(input().rstrip())\n \n def battle(s1, s2):\n     l = {'g': {'g': 0, 'p': -1}, 'p': {'g': 1, 'p': 0}}\n     return l[s1][s2]\n \n hist = ['g']\n \n g = 1\n p = 0\n ans = 0\n if s[0] == 'p':\n     ans = -1\n for i in range(1, len(s)):\n     cur = 'g'\n     if s[i] == 'g':\n         if p < g:\n             cur = 'p'\n     if cur == 'p':\n         p += 1\n     else:\n         g += 1\n     hist.append(cur)\n     ans += battle(cur, s[i])\n \n \n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u739721456",
        "problem_id": "p03729",
        "submission1_id": "s834914520",
        "crp_content": "\n w=input().split()\n if w[0][-1]==w[1][0] and w[1][-1]==w[2][0]:\n-    print(\"Yes\")\n else:\n-    print(\"No\")\n",
        "origin_generated_text": "\n```\n w=input().split()\n if w[0][-1]==w[1][0] and w[1][-1]==w[2][0]:\n-    print(\"Yes\")\n else:\n-    print(\"No\")\n```\n "
    },
    {
        "user_id": "u948911484",
        "problem_id": "p02963",
        "submission1_id": "s597776286",
        "crp_content": "\n s = int(input())\n-l = [0,0,10**9,1,0,0]\n-l[5] = s\n-l[4] = 10**9-(s%(10**9))\n print(*l)\n",
        "origin_generated_text": "\n```\n s = int(input())\n-l = [0,0,10**9,1,0,0]\n-l[5] = s\n-l[4] = 10**9-(s%(10**9))\n print(*l)\n```\n "
    },
    {
        "user_id": "u639989198",
        "problem_id": "p02922",
        "submission1_id": "s293526598",
        "crp_content": "\n A, B = map(int, input().split())\n a, c = 0, 1\n-while c < B:\n   c += A\n   a += 1\n print(a)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n a, c = 0, 1\n-while c < B:\n   c += A\n   a += 1\n print(a)\n```\n "
    },
    {
        "user_id": "u994935583",
        "problem_id": "p02699",
        "submission1_id": "s723755036",
        "crp_content": "\n nums = input().split()\n \n S = int(nums[0])\n W = int(nums[1])\n \n \n-if (S < W ):\n \tprint(\"unsafe\")\n else:\n \tprint(\"safe\")\n",
        "origin_generated_text": "\n```\n nums = input().split()\n \n S = int(nums[0])\n W = int(nums[1])\n \n \n-if (S < W ):\n \tprint(\"unsafe\")\n else:\n \tprint(\"safe\")\n```\n "
    },
    {
        "user_id": "u225003503",
        "problem_id": "p02699",
        "submission1_id": "s088038760",
        "crp_content": "\n-s , w = input().split()\n \n if s <= w:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n",
        "origin_generated_text": "\n```\n-s , w = input().split()\n \n if s <= w:\n   print(\"unsafe\")\n else:\n   print(\"safe\")\n```\n "
    },
    {
        "user_id": "u907607057",
        "problem_id": "p02407",
        "submission1_id": "s079454751",
        "crp_content": "\n import sys\n \n \n def main():\n     sys.stdin.readline()\n     list1 = list(map(str, sys.stdin.readline().split()))\n-    list.sort(list1, reverse=True)\n     print(' '.join(list1))\n     return\n \n \n if __name__ == '__main__':\n     main()\n \n \n",
        "origin_generated_text": "\n```\n import sys\n \n \n def main():\n     sys.stdin.readline()\n     list1 = list(map(str, sys.stdin.readline().split()))\n-    list.sort(list1, reverse=True)\n     print(' '.join(list1))\n     return\n \n \n if __name__ == '__main__':\n     main()\n \n \n```\n "
    },
    {
        "user_id": "u516554284",
        "problem_id": "p03479",
        "submission1_id": "s183037969",
        "crp_content": "\n x,y=map(int,input().split())\n ans=0\n while x<=y:\n   x=x*2\n-  ans+1\n   \n print(ans)\n",
        "origin_generated_text": "\n```\n x,y=map(int,input().split())\n ans=0\n while x<=y:\n   x=x*2\n-  ans+1\n   \n print(ans)\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p03039",
        "submission1_id": "s991424053",
        "crp_content": "\n n,m,k=map(int,input().split())\n mod=10**9+7\n f=[1]\n for i in range(2*10**5+7):f+=[f[-1]*(i+1)%mod]\n def comb(a,b):return f[a]*pow(f[b],mod-2,mod)*pow(f[a-b],mod-2,mod)%mod\n ans=0\n-for i in range(1,n):\n   ans+=(i*(n-i)*m**2)*(comb(n+m-2,k-2))\n   ans%=mod\n-for i in range(1,m):\n   ans+=(i*(m-i)*n**2)*(comb(n+m-2,k-2))\n   ans%=mod\n print(ans)\n",
        "origin_generated_text": "\n```\n n,m,k=map(int,input().split())\n mod=10**9+7\n f=[1]\n for i in range(2*10**5+7):f+=[f[-1]*(i+1)%mod]\n def comb(a,b):return f[a]*pow(f[b],mod-2,mod)*pow(f[a-b],mod-2,mod)%mod\n ans=0\n-for i in range(1,n):\n   ans+=(i*(n-i)*m**2)*(comb(n+m-2,k-2))\n   ans%=mod\n-for i in range(1,m):\n   ans+=(i*(m-i)*n**2)*(comb(n+m-2,k-2))\n   ans%=mod\n print(ans)\n```\n "
    },
    {
        "user_id": "u109879985",
        "problem_id": "p02633",
        "submission1_id": "s632306673",
        "crp_content": "\n from math import gcd\n x=int(input())\n g=gcd(360,x)\n-print(360/g)\n   \n",
        "origin_generated_text": "\n```\n from math import gcd\n x=int(input())\n g=gcd(360,x)\n-print(360/g)\n   \n```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p02742",
        "submission1_id": "s344422748",
        "crp_content": "\n import math\n h,w = map(int,(input().split()))\n-h = math.floor(h)\n-w = math.floor(w)\n sum = h * w\n \n if h == 1 and w ==1:\n     print(\"1\")\n elif h % 2 == 0:\n     result = math.floor(sum /2)\n     print(result)\n else:\n     result = math.floor(sum /2 + 1)\n     print(result)\n",
        "origin_generated_text": "\n```\n import math\n h,w = map(int,(input().split()))\n-h = math.floor(h)\n-w = math.floor(w)\n sum = h * w\n \n if h == 1 and w ==1:\n     print(\"1\")\n elif h % 2 == 0:\n     result = math.floor(sum /2)\n     print(result)\n else:\n     result = math.floor(sum /2 + 1)\n     print(result)\n```\n "
    },
    {
        "user_id": "u228223940",
        "problem_id": "p03626",
        "submission1_id": "s048587319",
        "crp_content": "\n n = int(input())\n s1 = input()\n s2 = input()\n \n mod = 10**9+7\n \n if s1[0] == s2[0]:\n     ans = 3\n     bfr = 'T'\n     idx = 1\n else:\n     ans = 6\n     bfr = 'Y'\n     idx = 2\n \n if n == 1:\n     print(ans)\n     exit()\n \n while idx <= n-1:\n     if s1[idx] == s2[idx]:\n         if bfr == 'T':\n             ans *= 2\n             ans %= mod\n         idx += 1\n         bfr = 'T'\n     else:\n         ans *= 3\n         ans %= mod\n         idx += 2\n         bfr = 'Y'\n         \n print(ans%mod)\n",
        "origin_generated_text": "\n```\n n = int(input())\n s1 = input()\n s2 = input()\n \n mod = 10**9+7\n \n if s1[0] == s2[0]:\n     ans = 3\n     bfr = 'T'\n     idx = 1\n else:\n     ans = 6\n     bfr = 'Y'\n     idx = 2\n \n if n == 1:\n     print(ans)\n     exit()\n \n while idx <= n-1:\n     if s1[idx] == s2[idx]:\n         if bfr == 'T':\n             ans *= 2\n             ans %= mod\n         idx += 1\n         bfr = 'T'\n     else:\n         ans *= 3\n         ans %= mod\n         idx += 2\n         bfr = 'Y'\n         \n print(ans%mod)\n```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p03103",
        "submission1_id": "s177122638",
        "crp_content": "\n \n import sys\n \n import heapq\n import re\n import bisect\n import random\n import math\n import itertools\n from collections import defaultdict, deque\n from copy import deepcopy\n from decimal import *\n \n a, b = map(int, input().split())\n d = defaultdict(list)\n array = []\n for i in range(a):\n     x, y = map(int, input().split())\n     d[x].append(y)\n     array.append(x)\n array.sort()\n count = 0\n for i in array:\n     if b <= d[i][0]:\n         count += max(b, 0) * i\n         break\n     else:\n         t = d[i][0]\n         b -= t\n         count += t * i\n     d[i].pop()\n print(count)\n",
        "origin_generated_text": "\n```\n \n import sys\n \n import heapq\n import re\n import bisect\n import random\n import math\n import itertools\n from collections import defaultdict, deque\n from copy import deepcopy\n from decimal import *\n \n a, b = map(int, input().split())\n d = defaultdict(list)\n array = []\n for i in range(a):\n     x, y = map(int, input().split())\n     d[x].append(y)\n     array.append(x)\n array.sort()\n count = 0\n for i in array:\n     if b <= d[i][0]:\n         count += max(b, 0) * i\n         break\n     else:\n         t = d[i][0]\n         b -= t\n         count += t * i\n     d[i].pop()\n print(count)\n```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p02959",
        "submission1_id": "s627653052",
        "crp_content": "\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n ans = 0\n \n def cal(ans, n):\n     ans += min(a[n], b[n])\n     ans += b[n] - min(a[n], b[n])\n     a[n+1] -= min(a[n], b[n])\n         \n for i in range(n):\n     cal(ans,i)\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n n = int(input())\n a = list(map(int, input().split()))\n b = list(map(int, input().split()))\n ans = 0\n \n def cal(ans, n):\n     ans += min(a[n], b[n])\n     ans += b[n] - min(a[n], b[n])\n     a[n+1] -= min(a[n], b[n])\n         \n for i in range(n):\n     cal(ans,i)\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u231530807",
        "problem_id": "p03036",
        "submission1_id": "s332147599",
        "crp_content": "\n x=input()\n xx=x.split()\n r=int(xx[0])\n x2=int(xx[1])\n D=int(xx[2])\n y=[0]*10\n for i in range(10):\n-  y[i]+=r*x2-D\n-  print(y[i])\n-  x2=y[i]\n",
        "origin_generated_text": "\n```\n x=input()\n xx=x.split()\n r=int(xx[0])\n x2=int(xx[1])\n D=int(xx[2])\n y=[0]*10\n for i in range(10):\n-  y[i]+=r*x2-D\n-  print(y[i])\n-  x2=y[i]\n```\n "
    },
    {
        "user_id": "u252828980",
        "problem_id": "p03023",
        "submission1_id": "s782807743",
        "crp_content": "\n-print((int(input())-3)*180)\n",
        "origin_generated_text": "\n```\n-print((int(input())-3)*180)\n```\n "
    },
    {
        "user_id": "u190167135",
        "problem_id": "p02959",
        "submission1_id": "s960127924",
        "crp_content": "\n N=int(input())\n A=list(map(int,input().split()))\n B=list(map(int,input().split()))\n-ans=min(A[0],B[0])\n-B[0]-=ans\n for i in range(N-1):\n-    score=min(A[i+1],B[i]+B[i+1])\n-    ans+=score\n-    B[i+1]-=min(0,score-B[i])\n-print(ans+min(B[N-1],A[N]))\n",
        "origin_generated_text": "\n```\n N=int(input())\n A=list(map(int,input().split()))\n B=list(map(int,input().split()))\n-ans=min(A[0],B[0])\n-B[0]-=ans\n for i in range(N-1):\n-    score=min(A[i+1],B[i]+B[i+1])\n-    ans+=score\n-    B[i+1]-=min(0,score-B[i])\n-print(ans+min(B[N-1],A[N]))\n```\n "
    },
    {
        "user_id": "u766684188",
        "problem_id": "p02746",
        "submission1_id": "s053182443",
        "crp_content": "\n import sys\n input=sys.stdin.readline\n \n def dist(a,b,c,d,P3):\n     for p in P3:\n         da,ma=divmod(a,p)\n         dc,mc=divmod(c,p)\n         if da!=dc:\n             return abs(a-c)+abs(b-d)\n         if da!=1:\n             a,c=ma,mc\n             continue\n         db,mb=divmod(b,p)\n         dd,md=divmod(d,p)\n         if db==dd:\n             a,c=ma,mc\n             continue\n-        return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n     return abs(b-d)\n \n def main():\n     q=int(input())\n     P3=[pow(3,i) for i in reversed(range(30))]\n     for _ in range(q):\n         a,b,c,d=map(lambda x: int(x)-1,input().split())\n         print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n \n if __name__=='__main__':\n     main()\n",
        "origin_generated_text": "\n```\n import sys\n input=sys.stdin.readline\n \n def dist(a,b,c,d,P3):\n     for p in P3:\n         da,ma=divmod(a,p)\n         dc,mc=divmod(c,p)\n         if da!=dc:\n             return abs(a-c)+abs(b-d)\n         if da!=1:\n             a,c=ma,mc\n             continue\n         db,mb=divmod(b,p)\n         dd,md=divmod(d,p)\n         if db==dd:\n             a,c=ma,mc\n             continue\n-        return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n     return abs(b-d)\n \n def main():\n     q=int(input())\n     P3=[pow(3,i) for i in reversed(range(30))]\n     for _ in range(q):\n         a,b,c,d=map(lambda x: int(x)-1,input().split())\n         print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n \n if __name__=='__main__':\n     main()\n```\n "
    },
    {
        "user_id": "u777028980",
        "problem_id": "p03200",
        "submission1_id": "s400602953",
        "crp_content": "\n hoge=input()\n ans=0\n count=0\n white=0\n for i in hoge:\n   \n   if(i==\"W\"):\n     ans+=count - white\n     white+=1\n   count+=1\n   \n-print(count)\n",
        "origin_generated_text": "\n```\n hoge=input()\n ans=0\n count=0\n white=0\n for i in hoge:\n   \n   if(i==\"W\"):\n     ans+=count - white\n     white+=1\n   count+=1\n   \n-print(count)\n```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03326",
        "submission1_id": "s917776374",
        "crp_content": "\n import sys\n input = sys.stdin.readline\n from itertools import product\n n, m = map(int, input().split())\n xyz = [list(map(int, input().split())) for _ in range(n)]\n \n ans = 0\n for p in product([1, -1], repeat=3):\n     dp = [0] * (m+1)\n     for i in range(n):\n         x, y, z = [s*t for s,t in zip(p, xyz[i])]\n         for j in list(range(m))[::-1]:\n             dp[j+1] = max(dp[j+1], dp[j]+x+y+z)\n     ans = max(ans, dp[m])\n print(ans)\n",
        "origin_generated_text": "\n```\n import sys\n input = sys.stdin.readline\n from itertools import product\n n, m = map(int, input().split())\n xyz = [list(map(int, input().split())) for _ in range(n)]\n \n ans = 0\n for p in product([1, -1], repeat=3):\n     dp = [0] * (m+1)\n     for i in range(n):\n         x, y, z = [s*t for s,t in zip(p, xyz[i])]\n         for j in list(range(m))[::-1]:\n             dp[j+1] = max(dp[j+1], dp[j]+x+y+z)\n     ans = max(ans, dp[m])\n print(ans)\n```\n "
    },
    {
        "user_id": "u587742016",
        "problem_id": "p03206",
        "submission1_id": "s039694479",
        "crp_content": "\n target = int(input())\n common_msg = \"Christmas\"\n additional_msg = \"Eve\"\n-print(common_msg + \" \".join([\"Eve\" for i in range(25 - target)]))\n \n",
        "origin_generated_text": "\n```\n target = int(input())\n common_msg = \"Christmas\"\n additional_msg = \"Eve\"\n-print(common_msg + \" \".join([\"Eve\" for i in range(25 - target)]))\n \n```\n "
    },
    {
        "user_id": "u329455846",
        "problem_id": "p03041",
        "submission1_id": "s976906064",
        "crp_content": "\n N , K = map(int,input().split())\n str_t = list(input())\n ans =''\n for i in range(len(str_t)):\n     if i == K:\n         ans += str_t[i].lower()\n     else:\n-        ans += str_t[i].upper()\n print(ans)\n",
        "origin_generated_text": "\n```\n N , K = map(int,input().split())\n str_t = list(input())\n ans =''\n for i in range(len(str_t)):\n     if i == K:\n         ans += str_t[i].lower()\n     else:\n-        ans += str_t[i].upper()\n print(ans)\n```\n "
    },
    {
        "user_id": "u584174687",
        "problem_id": "p03972",
        "submission1_id": "s390459019",
        "crp_content": "\n from collections import Counter, defaultdict\n import sys\n sys.setrecursionlimit(10 ** 5 + 10)\n \n from math import factorial\n import heapq, bisect\n import math\n import itertools\n \n \n import queue\n from collections import deque\n \n \n \n \n def main():\n     high, width = map(int, input().split())\n     cost_w = [int(input()) for i in range(width)]\n     cost_h = [int(input()) for i in range(high)]\n \n     cost_w.sort()\n     cost_h.sort()\n     check_high, check_width = 0, 0\n     width_ind = 0\n     ans = 0\n     for i in range(high):\n \n         now_high = cost_h[i]\n         while width_ind < width:\n             if now_high < cost_w[width_ind]:\n                 break\n             ans += (high + 1 - check_high) * cost_w[width_ind]\n             check_width += 1\n             width_ind += 1\n \n         ans += (width + 1 - check_width) * cost_h[i]\n         check_high += 1\n \n         \n \n     ans += sum(cost_w[width_ind:])\n \n     print(ans)\n \n \n \n \n \n \n \n if __name__ == '__main__':\n     main()\n \n \n",
        "origin_generated_text": "\n```\n from collections import Counter, defaultdict\n import sys\n sys.setrecursionlimit(10 ** 5 + 10)\n \n from math import factorial\n import heapq, bisect\n import math\n import itertools\n \n \n import queue\n from collections import deque\n \n \n \n \n def main():\n     high, width = map(int, input().split())\n     cost_w = [int(input()) for i in range(width)]\n     cost_h = [int(input()) for i in range(high)]\n \n     cost_w.sort()\n     cost_h.sort()\n     check_high, check_width = 0, 0\n     width_ind = 0\n     ans = 0\n     for i in range(high):\n \n         now_high = cost_h[i]\n         while width_ind < width:\n             if now_high < cost_w[width_ind]:\n                 break\n             ans += (high + 1 - check_high) * cost_w[width_ind]\n             check_width += 1\n             width_ind += 1\n \n         ans += (width + 1 - check_width) * cost_h[i]\n         check_high += 1\n \n         \n \n     ans += sum(cost_w[width_ind:])\n \n     print(ans)\n \n \n \n \n \n \n \n if __name__ == '__main__':\n     main()\n \n \n```\n "
    },
    {
        "user_id": "u531599639",
        "problem_id": "p02954",
        "submission1_id": "s779665395",
        "crp_content": "\n s = input()\n n = len(s)\n temp = s[0]\n group = []\n ans = [0]*n\n sec = [temp]\n rlind = []\n for i in range(1,n):\n   if temp=='L' and s[i]=='R':\n     group.append(sec)\n     sec = []\n   elif temp=='R' and s[i]=='L':\n     rlind.append(i)\n   sec.append(s[i])\n   temp = s[i]\n group.append(sec)\n \n for i in range(len(group)):\n   ind = rlind[i]\n   m = len(group[i])\n   if m%2==0:\n     p = m\n     ans[ind]=p\n     ans[ind-1]=p\n   else:\n     p = group[i].count('R')\n     q = max(p,m-p)\n     if (q-1)%2==0:\n       ans[ind]=m-p\n       ans[ind-1]=p\n     else:\n       ans[ind]=p\n       ans[ind-1]=m-p\n print(*ans)\n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n temp = s[0]\n group = []\n ans = [0]*n\n sec = [temp]\n rlind = []\n for i in range(1,n):\n   if temp=='L' and s[i]=='R':\n     group.append(sec)\n     sec = []\n   elif temp=='R' and s[i]=='L':\n     rlind.append(i)\n   sec.append(s[i])\n   temp = s[i]\n group.append(sec)\n \n for i in range(len(group)):\n   ind = rlind[i]\n   m = len(group[i])\n   if m%2==0:\n     p = m\n     ans[ind]=p\n     ans[ind-1]=p\n   else:\n     p = group[i].count('R')\n     q = max(p,m-p)\n     if (q-1)%2==0:\n       ans[ind]=m-p\n       ans[ind-1]=p\n     else:\n       ans[ind]=p\n       ans[ind-1]=m-p\n print(*ans)\n```\n "
    },
    {
        "user_id": "u215335591",
        "problem_id": "p02407",
        "submission1_id": "s814987890",
        "crp_content": "\n n = int(input())\n x = [int(i) for i in input().split()]\n x.sort()\n x.reverse()\n-for i in range(n):\n-    print(x[i],\" \",sep=\"\",end=\"\")\n-print(\"\")\n \n \n",
        "origin_generated_text": "\n```\n n = int(input())\n x = [int(i) for i in input().split()]\n x.sort()\n x.reverse()\n-for i in range(n):\n-    print(x[i],\" \",sep=\"\",end=\"\")\n-print(\"\")\n \n \n```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p03959",
        "submission1_id": "s259616694",
        "crp_content": "\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n \n sys.setrecursionlimit(10**7)\n inf=10**20\n mod=10**9+7\n \n def LI(): return list(map(int,input().split()))\n def I(): return int(input())\n def LS(): return input().split()\n def S(): return input()\n \n def main():\n   n=I()\n \n   a=LI()\n   b=LI()\n \n   if n==1 and a[0]!=b[0]:\n     return 0\n \n   if n==1 and a[0]==17 and b[0]==17:\n-    exit()\n \n   l1=[]\n   l2=[]\n \n   amx=a[0]\n   l1.append(1)\n   for i in range(1,len(a)):\n     x=a[i]\n     if amx<x:\n       \n       if x>b[i]:\n         print(0)\n         exit()\n \n       l1.append(1)\n       amx=x\n     elif amx==x:\n       l1.append(amx)\n     else:\n       print(0)\n       exit()\n \n   b.reverse()\n   l1.reverse()\n \n   bmx=b[0]\n   l2.append(1)\n   for i in range(1,len(b)):\n     x=b[i]\n     if bmx<x:\n       \n       if x>a[n-i-1]:\n         print(0)\n         exit()\n \n       l2.append(1)\n       bmx=x\n     elif bmx==x:\n       l2.append(min(bmx,l1[i]))\n     else:\n       print(0)\n       exit()\n \n   ans=1\n   for x in l2:\n     ans*=x\n     ans%=mod\n \n   return ans\n \n \n print(main())\n \n",
        "origin_generated_text": "\n```\n import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n \n sys.setrecursionlimit(10**7)\n inf=10**20\n mod=10**9+7\n \n def LI(): return list(map(int,input().split()))\n def I(): return int(input())\n def LS(): return input().split()\n def S(): return input()\n \n def main():\n   n=I()\n \n   a=LI()\n   b=LI()\n \n   if n==1 and a[0]!=b[0]:\n     return 0\n \n   if n==1 and a[0]==17 and b[0]==17:\n-    exit()\n \n   l1=[]\n   l2=[]\n \n   amx=a[0]\n   l1.append(1)\n   for i in range(1,len(a)):\n     x=a[i]\n     if amx<x:\n       \n       if x>b[i]:\n         print(0)\n         exit()\n \n       l1.append(1)\n       amx=x\n     elif amx==x:\n       l1.append(amx)\n     else:\n       print(0)\n       exit()\n \n   b.reverse()\n   l1.reverse()\n \n   bmx=b[0]\n   l2.append(1)\n   for i in range(1,len(b)):\n     x=b[i]\n     if bmx<x:\n       \n       if x>a[n-i-1]:\n         print(0)\n         exit()\n \n       l2.append(1)\n       bmx=x\n     elif bmx==x:\n       l2.append(min(bmx,l1[i]))\n     else:\n       print(0)\n       exit()\n \n   ans=1\n   for x in l2:\n     ans*=x\n     ans%=mod\n \n   return ans\n \n \n print(main())\n \n```\n "
    },
    {
        "user_id": "u539789745",
        "problem_id": "p02407",
        "submission1_id": "s148733919",
        "crp_content": "\n def main():\n     n = int(input())\n-    a = input()\n     print(a[::-1])\n \n if __name__ == \"__main__\":\n     main()\n",
        "origin_generated_text": "\n```\n def main():\n     n = int(input())\n-    a = input()\n     print(a[::-1])\n \n if __name__ == \"__main__\":\n     main()\n```\n "
    },
    {
        "user_id": "u514894322",
        "problem_id": "p03041",
        "submission1_id": "s789178306",
        "crp_content": "\n n,k = map(int,input().split())\n s = str(input())\n ans = ''\n for i in range(len(s)):\n-  if i == k:\n     ans = ans + s[i].lower()\n   else:\n     ans = ans + s[i]\n print (ans)\n",
        "origin_generated_text": "\n```\n n,k = map(int,input().split())\n s = str(input())\n ans = ''\n for i in range(len(s)):\n-  if i == k:\n     ans = ans + s[i].lower()\n   else:\n     ans = ans + s[i]\n print (ans)\n```\n "
    },
    {
        "user_id": "u150641538",
        "problem_id": "p03303",
        "submission1_id": "s937616305",
        "crp_content": "\n s = input()\n w = int(input())\n \n length = len(s)\n \n output = s[0]\n-i = w\n \n while(i<length):\n-    output += s[w]\n-    i += w\n \n print(output)\n \n",
        "origin_generated_text": "\n```\n s = input()\n w = int(input())\n \n length = len(s)\n \n output = s[0]\n-i = w\n \n while(i<length):\n-    output += s[w]\n-    i += w\n \n print(output)\n \n```\n "
    },
    {
        "user_id": "u346395915",
        "problem_id": "p03303",
        "submission1_id": "s702043102",
        "crp_content": "\n s = list(input())\n ans =[]\n \n for i in range(len(s)):\n-    if i%3 == 0:\n         ans.append(s[i])\n         \n print(\"\".join(ans))\n",
        "origin_generated_text": "\n```\n s = list(input())\n ans =[]\n \n for i in range(len(s)):\n-    if i%3 == 0:\n         ans.append(s[i])\n         \n print(\"\".join(ans))\n```\n "
    },
    {
        "user_id": "u250366438",
        "problem_id": "p02553",
        "submission1_id": "s237525316",
        "crp_content": "\n if __name__ == \"__main__\":\n     a, b, c, d = map(int, input().split())\n     x_list = [a, b]\n     y_list = [c, d]\n     ans = 0\n \n-    if x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0:\n         ans = max(x_list) * min(y_list)\n     elif (x_list[0] >= 0 and x_list[1] >= 0 and y_list[0] <= 0 and y_list[1] <= 0):\n         ans = max(y_list) * min(x_list)\n     elif (x_list[0] <= 0 or x_list[1] <= 0) and (y_list[0] <= 0 or y_list[1] <= 0):\n         ans = min(x_list) * min(y_list)\n     else:\n         ans = max(x_list) * max(y_list)\n \n     print(ans)\n",
        "origin_generated_text": "\n```\n if __name__ == \"__main__\":\n     a, b, c, d = map(int, input().split())\n     x_list = [a, b]\n     y_list = [c, d]\n     ans = 0\n \n-    if x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0:\n         ans = max(x_list) * min(y_list)\n     elif (x_list[0] >= 0 and x_list[1] >= 0 and y_list[0] <= 0 and y_list[1] <= 0):\n         ans = max(y_list) * min(x_list)\n     elif (x_list[0] <= 0 or x_list[1] <= 0) and (y_list[0] <= 0 or y_list[1] <= 0):\n         ans = min(x_list) * min(y_list)\n     else:\n         ans = max(x_list) * max(y_list)\n \n     print(ans)\n```\n "
    },
    {
        "user_id": "u272557899",
        "problem_id": "p03477",
        "submission1_id": "s347971644",
        "crp_content": "\n a,b,c,d = map(int, input().split())\n s = a+b\n t = c+d\n \n if s>t:\n   print(\"Left\")\n-if s<t:\n   print(\"Right\")\n else:\n   print(\"Balanced\")\n",
        "origin_generated_text": "\n```\n a,b,c,d = map(int, input().split())\n s = a+b\n t = c+d\n \n if s>t:\n   print(\"Left\")\n-if s<t:\n   print(\"Right\")\n else:\n   print(\"Balanced\")\n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s239420183",
        "crp_content": "\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = 1 << 20\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         \n         \n         for j in range(0, v_adj_length * 2, 2):\n             init_adj_matrix[v_index][v_adj_list[j]] = v_adj_list[j + 1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n",
        "origin_generated_text": "\n```\n \n \n \n \n \n import sys\n import heapq as hp\n \n WHITE, GRAY, BLACK = 0, 1, 2\n D_MAX = 1 << 20\n \n \n def generate_adj_matrix(v_info):\n     for each in v_info:\n         v_index, v_adj_length, *v_adj_list = map(int, each)\n         \n         \n         \n         for j in range(0, v_adj_length * 2, 2):\n             init_adj_matrix[v_index][v_adj_list[j]] = v_adj_list[j + 1]\n \n     return init_adj_matrix\n \n \n def dijkstra_path():\n     \n     path_list[init_vertex_index] = 0\n     path_heap = []\n     \n     hp.heappush(path_heap, (0, init_vertex_index))\n     while len(path_heap) >= 1:\n         current_vertex_index = hp.heappop(path_heap)[1]\n \n         color[current_vertex_index] = BLACK\n \n         current_vertex_index_info = adj_table[current_vertex_index]\n         for adj_vertex_index in current_vertex_index_info.keys():\n             current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n             if not current_adj_weight:\n                 continue\n             elif color[adj_vertex_index] is not BLACK:\n                 \n                 alt_path = path_list[current_vertex_index] + current_adj_weight\n                 if alt_path < path_list[adj_vertex_index]:\n                     \n                     path_list[adj_vertex_index] = alt_path\n                     \n                     hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                     parent_list[adj_vertex_index] = current_vertex_index\n                     color[adj_vertex_index] = GRAY\n \n     return path_list\n \n \n if __name__ == '__main__':\n     _input = sys.stdin.readlines()\n     vertices_num = int(_input[0])\n     init_vertices_table = map(lambda x: x.split(), _input[1:])\n     \n \n     parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n     color = [WHITE] * vertices_num\n     init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n     init_vertex_index = 0\n \n     adj_table = generate_adj_matrix(init_vertices_table)\n     ans = dijkstra_path()\n     for i, v in enumerate(ans):\n         print(i, v)\n```\n "
    },
    {
        "user_id": "u172111219",
        "problem_id": "p03760",
        "submission1_id": "s301904439",
        "crp_content": "\n o = list(str(input()))\n e = list(str(input()))\n \n for i,j in enumerate(e):\n     o.insert(1+2*i,j)\n-print(o)\n",
        "origin_generated_text": "\n```\n o = list(str(input()))\n e = list(str(input()))\n \n for i,j in enumerate(e):\n     o.insert(1+2*i,j)\n-print(o)\n```\n "
    },
    {
        "user_id": "u059210959",
        "problem_id": "p03625",
        "submission1_id": "s611443599",
        "crp_content": "\n \n import copy\n import random\n import bisect \n import math\n \n \n N = int(input())\n A = [int(i) for i in input().split()]\n \n A.sort()\n len_dic = {}\n for a in A:\n     if a in len_dic.keys():\n         len_dic[a] += 1\n \n     else:\n         len_dic[a] = 1\n \n ans = [0,0]\n for k, v in sorted(len_dic.items(),key=lambda x:-x[0]):\n     if v >= 4 and ans[0] == 0:\n         ans = [k,k]\n     elif v >= 2:\n         if ans[0]==0:\n             ans[0] = k\n         elif ans[1] == 0:\n             ans[1] = k\n     else:\n         break\n \n print(ans[0]*ans[1])\n \n",
        "origin_generated_text": "\n```\n \n import copy\n import random\n import bisect \n import math\n \n \n N = int(input())\n A = [int(i) for i in input().split()]\n \n A.sort()\n len_dic = {}\n for a in A:\n     if a in len_dic.keys():\n         len_dic[a] += 1\n \n     else:\n         len_dic[a] = 1\n \n ans = [0,0]\n for k, v in sorted(len_dic.items(),key=lambda x:-x[0]):\n     if v >= 4 and ans[0] == 0:\n         ans = [k,k]\n     elif v >= 2:\n         if ans[0]==0:\n             ans[0] = k\n         elif ans[1] == 0:\n             ans[1] = k\n     else:\n         break\n \n print(ans[0]*ans[1])\n \n```\n "
    },
    {
        "user_id": "u562015767",
        "problem_id": "p02718",
        "submission1_id": "s039407328",
        "crp_content": "\n import math\n N,M = map(int,input().split())\n l = [int(i) for i in input().split()]\n l.sort(reverse = True)\n l_sum = sum(l)\n d = 4*M / l_sum\n d = int(d)\n cnt = 0\n  \n for i in range(N):\n     if l[i] > d:\n         cnt += 1\n-    else:\n-        break\n  \n if cnt >= M:\n     print(\"Yes\")\n else:\n     print(\"No\")     \n",
        "origin_generated_text": "\n```\n import math\n N,M = map(int,input().split())\n l = [int(i) for i in input().split()]\n l.sort(reverse = True)\n l_sum = sum(l)\n d = 4*M / l_sum\n d = int(d)\n cnt = 0\n  \n for i in range(N):\n     if l[i] > d:\n         cnt += 1\n-    else:\n-        break\n  \n if cnt >= M:\n     print(\"Yes\")\n else:\n     print(\"No\")     \n```\n "
    },
    {
        "user_id": "u843318346",
        "problem_id": "p03206",
        "submission1_id": "s510464175",
        "crp_content": "\n n = int(input())\n-nokori = n-25\n-eve = ' Eve'*nokori\n-print('Christmas'+eve)\n",
        "origin_generated_text": "\n```\n n = int(input())\n-nokori = n-25\n-eve = ' Eve'*nokori\n-print('Christmas'+eve)\n```\n "
    },
    {
        "user_id": "u388370899",
        "problem_id": "p02742",
        "submission1_id": "s322703127",
        "crp_content": "\n \n \n \n \n def main():\n     h, w = map(int, input().split())\n     ans = (h * w) / 2\n-    if h % 2 == w % 2 == 1:\n         ans = ans + 1\n     print(\"%d\" % ans)\n \n \n if __name__ == '__main__':\n     main()\n \n",
        "origin_generated_text": "\n```\n \n \n \n \n def main():\n     h, w = map(int, input().split())\n     ans = (h * w) / 2\n-    if h % 2 == w % 2 == 1:\n         ans = ans + 1\n     print(\"%d\" % ans)\n \n \n if __name__ == '__main__':\n     main()\n \n```\n "
    },
    {
        "user_id": "u581403769",
        "problem_id": "p03200",
        "submission1_id": "s074874248",
        "crp_content": "\n s = list(input())\n \n count = 0\n white = 0\n for i in range(len(s)):\n     if s[i] == 'W':\n-        count += i\n         white += 1\n         \n-print(count - white)\n",
        "origin_generated_text": "\n```\n s = list(input())\n \n count = 0\n white = 0\n for i in range(len(s)):\n     if s[i] == 'W':\n-        count += i\n         white += 1\n         \n-print(count - white)\n```\n "
    },
    {
        "user_id": "u827202523",
        "problem_id": "p03965",
        "submission1_id": "s949440838",
        "crp_content": "\n hands = input()\n ans = 0\n for i, h in enumerate(hands):\n   if i % 2 == 1:\n     if h == \"p\":\n-      ans -= 1\n   else:\n     if h == \"g\":\n       ans += 1\n       \n print(ans)\n    \n",
        "origin_generated_text": "\n```\n hands = input()\n ans = 0\n for i, h in enumerate(hands):\n   if i % 2 == 1:\n     if h == \"p\":\n-      ans -= 1\n   else:\n     if h == \"g\":\n       ans += 1\n       \n print(ans)\n    \n```\n "
    },
    {
        "user_id": "u372144784",
        "problem_id": "p03480",
        "submission1_id": "s474066148",
        "crp_content": "\n s = input()\n n = len(s)\n k = 10**9\n if not \"1\" in s:\n     print(0)\n elif not \"0\" in s:\n     print(n)\n else:\n-    for i in range(n-1):\n-        if s[i] != s[i+1]:\n-            k = min(k,max(i+1,n-(i+1)))\n-    if k > n:\n-        print(n)\n-    else:\n-        print(k)\n \n",
        "origin_generated_text": "\n```\n s = input()\n n = len(s)\n k = 10**9\n if not \"1\" in s:\n     print(0)\n elif not \"0\" in s:\n     print(n)\n else:\n-    for i in range(n-1):\n-        if s[i] != s[i+1]:\n-            k = min(k,max(i+1,n-(i+1)))\n-    if k > n:\n-        print(n)\n-    else:\n-        print(k)\n \n```\n "
    },
    {
        "user_id": "u418527037",
        "problem_id": "p02917",
        "submission1_id": "s118689854",
        "crp_content": "\n N = int(input())\n B = list(map(int, input().split()))\n \n ans = B[-1]\n \n-for i in range(N-2):\n-    ans += min(B[i],B[i+1])\n \n if N == 2:\n     ans += B[0]\n \n \n print(ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n B = list(map(int, input().split()))\n \n ans = B[-1]\n \n-for i in range(N-2):\n-    ans += min(B[i],B[i+1])\n \n if N == 2:\n     ans += B[0]\n \n \n print(ans)\n```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02297",
        "submission1_id": "s015429141",
        "crp_content": "\n import math\n \n class Vector():\n     def __init__(self, x, y):\n         self.x = x\n         self.y = y\n \n     def inner_product(self, vec):\n         return self.x*vec.x + self.y*vec.y\n \n     def outer_product(self, vec):\n-        return self.x*vec.y - self.y*vec.x\n \n     def norm(self):\n         return math.sqrt(self.x**2 + self.y**2)\n \n n = int(input())\n points = []\n for i in range(n):\n     x, y = list(map(int, input().split(' ')))\n     points.append(Vector(x, y))\n points.append(points[0])\n \n area = 0\n for i in range(n-1):\n     a, b = points[i], points[i+1]\n-    if (a.x == 0 and a.y == 0) or (b.x == 0 and b.y == 0): continue\n-    theta = math.atan2(a.outer_product(b), a.inner_product(b))\n-    if theta > 0:\n-        area += abs(a.outer_product(b))/2\n-    elif theta < 0:\n-        area -= abs(a.outer_product(b))/2\n print(area)\n \n",
        "origin_generated_text": "\n```\n import math\n \n class Vector():\n     def __init__(self, x, y):\n         self.x = x\n         self.y = y\n \n     def inner_product(self, vec):\n         return self.x*vec.x + self.y*vec.y\n \n     def outer_product(self, vec):\n-        return self.x*vec.y - self.y*vec.x\n \n     def norm(self):\n         return math.sqrt(self.x**2 + self.y**2)\n \n n = int(input())\n points = []\n for i in range(n):\n     x, y = list(map(int, input().split(' ')))\n     points.append(Vector(x, y))\n points.append(points[0])\n \n area = 0\n for i in range(n-1):\n     a, b = points[i], points[i+1]\n-    if (a.x == 0 and a.y == 0) or (b.x == 0 and b.y == 0): continue\n-    theta = math.atan2(a.outer_product(b), a.inner_product(b))\n-    if theta > 0:\n-        area += abs(a.outer_product(b))/2\n-    elif theta < 0:\n-        area -= abs(a.outer_product(b))/2\n print(area)\n \n```\n "
    },
    {
        "user_id": "u619458041",
        "problem_id": "p03796",
        "submission1_id": "s237900280",
        "crp_content": "\n import sys\n \n def main():\n     input = sys.stdin.readline\n     N = int(input())\n     MOD = 10**9 + 7\n \n     ans = 1\n     for i in range(N):\n-        ans *= i\n         ans = ans % MOD\n \n     return ans\n \n \n if __name__ == '__main__':\n     print(main())\n \n",
        "origin_generated_text": "\n```\n import sys\n \n def main():\n     input = sys.stdin.readline\n     N = int(input())\n     MOD = 10**9 + 7\n \n     ans = 1\n     for i in range(N):\n-        ans *= i\n         ans = ans % MOD\n \n     return ans\n \n \n if __name__ == '__main__':\n     print(main())\n \n```\n "
    },
    {
        "user_id": "u047931063",
        "problem_id": "p03206",
        "submission1_id": "s807307833",
        "crp_content": "\n D = int(input())\n \n-A = [\"Chrinstmas\"]\n \n-for i in range(25 - D):\n   A.append(\"Eve\")\n \n S = ''.join(A)\n \n print(S)\n",
        "origin_generated_text": "\n```\n D = int(input())\n \n-A = [\"Chrinstmas\"]\n \n-for i in range(25 - D):\n   A.append(\"Eve\")\n \n S = ''.join(A)\n \n print(S)\n```\n "
    },
    {
        "user_id": "u924691798",
        "problem_id": "p02642",
        "submission1_id": "s118485426",
        "crp_content": "\n from collections import defaultdict\n \n N = int(input())\n A = list(map(int, input().split()))\n A.sort()\n dic = defaultdict(int)\n for a in A:\n     dic[a] += 1\n ans = 0\n for a in A:\n     if dic[a] > 1: continue\n     else:\n         ans += 1\n         idx = 1\n         while a*idx <= 10**6:\n-            dic[a*idx] += 1\n             idx += 1\n print(ans)\n \n",
        "origin_generated_text": "\n```\n from collections import defaultdict\n \n N = int(input())\n A = list(map(int, input().split()))\n A.sort()\n dic = defaultdict(int)\n for a in A:\n     dic[a] += 1\n ans = 0\n for a in A:\n     if dic[a] > 1: continue\n     else:\n         ans += 1\n         idx = 1\n         while a*idx <= 10**6:\n-            dic[a*idx] += 1\n             idx += 1\n print(ans)\n \n```\n "
    },
    {
        "user_id": "u096294926",
        "problem_id": "p02767",
        "submission1_id": "s356318047",
        "crp_content": "\n import math\n N = int(input())\n X = list(map(int,input().split()))\n a = sum(X)\n mean = a/N\n b = 0\n for i in range(N):\n     b +=(X[i]-mean)**2\n-print(math.ceil(b))\n",
        "origin_generated_text": "\n```\n import math\n N = int(input())\n X = list(map(int,input().split()))\n a = sum(X)\n mean = a/N\n b = 0\n for i in range(N):\n     b +=(X[i]-mean)**2\n-print(math.ceil(b))\n```\n "
    },
    {
        "user_id": "u223904637",
        "problem_id": "p02919",
        "submission1_id": "s292877265",
        "crp_content": "\n import bisect\n \n \n class SqrtSet:\n     def __init__(self, block_limit=201):\n         self.key = []\n         self.child = [[]]\n         self.block_limit = block_limit\n \n     def search_lower(self, key):\n         if key is None:\n             return None\n         ret = None\n         i = bisect.bisect_left(self.key, key)\n         if i != 0:\n             ret = self.key[i - 1]\n         block = self.child[i]\n         i = bisect.bisect_left(block, key)\n         if i != 0:\n             ret = block[i - 1]\n         return ret\n         \n     def search_higher(self, key):\n         if key is None:\n             return None\n         ret = None\n         i = bisect.bisect_right(self.key, key)\n         if i != len(self.key):\n             ret = self.key[i]\n         block = self.child[i]\n         i = bisect.bisect_right(block, key)\n         if i != len(block):\n             ret = block[i]\n         return ret\n \n     def insert(self, key):\n         i = bisect.bisect(self.key, key)\n         block = self.child[i]\n         bisect.insort(block, key)\n         if len(block) == self.block_limit:\n             sep = self.block_limit \n             self.key.insert(i, block[sep])\n             self.child.insert(i + 1, block[sep + 1:])\n             self.child[i] = block[:sep]\n                 \n     def dump(self):\n         for b in self.child:\n             print(len(b), end=\" \")\n         print(\"\")\n             \n             \n def main():\n     n = int(input())\n     p = list(map(int, input().split()))\n     idx = [0] * n\n     for i in range(0, n):\n         idx[i] = i\n     idx.sort(key=lambda i: -p[i])\n     t = SqrtSet()\n     t.insert(-10)\n     t.insert(n+10)\n     ans = 0\n     for i in range(n):\n         if i==0:\n             t.insert(idx[i])\n             continue\n         ri = t.search_higher(idx[i])\n         pri = t.search_higher(ri)\n         if pri==None:\n             pri=n\n             ri=n\n         if pri==n+10:\n             pri=n\n         le = t.search_lower(idx[i])\n         ple=t.search_lower(le)\n         if ple==None:\n             if le==-10:\n                 le=-1\n                 ple=-1\n         if ple==-10:\n             ple=-1\n         \n         ans+=(n-i)*((le-ple)*(ri-idx[i])+(pri-ri)*(idx[i]-le))\n         \n         t.insert(idx[i])\n     print(ans)\n \n",
        "origin_generated_text": "\n```\n import bisect\n \n \n class SqrtSet:\n     def __init__(self, block_limit=201):\n         self.key = []\n         self.child = [[]]\n         self.block_limit = block_limit\n \n     def search_lower(self, key):\n         if key is None:\n             return None\n         ret = None\n         i = bisect.bisect_left(self.key, key)\n         if i != 0:\n             ret = self.key[i - 1]\n         block = self.child[i]\n         i = bisect.bisect_left(block, key)\n         if i != 0:\n             ret = block[i - 1]\n         return ret\n         \n     def search_higher(self, key):\n         if key is None:\n             return None\n         ret = None\n         i = bisect.bisect_right(self.key, key)\n         if i != len(self.key):\n             ret = self.key[i]\n         block = self.child[i]\n         i = bisect.bisect_right(block, key)\n         if i != len(block):\n             ret = block[i]\n         return ret\n \n     def insert(self, key):\n         i = bisect.bisect(self.key, key)\n         block = self.child[i]\n         bisect.insort(block, key)\n         if len(block) == self.block_limit:\n             sep = self.block_limit \n             self.key.insert(i, block[sep])\n             self.child.insert(i + 1, block[sep + 1:])\n             self.child[i] = block[:sep]\n                 \n     def dump(self):\n         for b in self.child:\n             print(len(b), end=\" \")\n         print(\"\")\n             \n             \n def main():\n     n = int(input())\n     p = list(map(int, input().split()))\n     idx = [0] * n\n     for i in range(0, n):\n         idx[i] = i\n     idx.sort(key=lambda i: -p[i])\n     t = SqrtSet()\n     t.insert(-10)\n     t.insert(n+10)\n     ans = 0\n     for i in range(n):\n         if i==0:\n             t.insert(idx[i])\n             continue\n         ri = t.search_higher(idx[i])\n         pri = t.search_higher(ri)\n         if pri==None:\n             pri=n\n             ri=n\n         if pri==n+10:\n             pri=n\n         le = t.search_lower(idx[i])\n         ple=t.search_lower(le)\n         if ple==None:\n             if le==-10:\n                 le=-1\n                 ple=-1\n         if ple==-10:\n             ple=-1\n         \n         ans+=(n-i)*((le-ple)*(ri-idx[i])+(pri-ri)*(idx[i]-le))\n         \n         t.insert(idx[i])\n     print(ans)\n \n```\n "
    },
    {
        "user_id": "u349457050",
        "problem_id": "p02553",
        "submission1_id": "s122916710",
        "crp_content": "\n import sys\n import math\n def get_array(): return list(map(int, sys.stdin.readline().strip().split()))\n def get_ints(): return map(int, sys.stdin.readline().strip().split())\n def input(): return sys.stdin.readline().strip()\n a,b,c,d=get_ints()\n-x=max(a,b)\n-y=max(c,d)\n print(x*y)\n",
        "origin_generated_text": "\n```\n import sys\n import math\n def get_array(): return list(map(int, sys.stdin.readline().strip().split()))\n def get_ints(): return map(int, sys.stdin.readline().strip().split())\n def input(): return sys.stdin.readline().strip()\n a,b,c,d=get_ints()\n-x=max(a,b)\n-y=max(c,d)\n print(x*y)\n```\n "
    },
    {
        "user_id": "u048867491",
        "problem_id": "p03272",
        "submission1_id": "s226789066",
        "crp_content": "\n N, i = list(map(int,input().split()))\n-print(i+1 -N)\n \n",
        "origin_generated_text": "\n```\n N, i = list(map(int,input().split()))\n-print(i+1 -N)\n \n```\n "
    },
    {
        "user_id": "u601018334",
        "problem_id": "p04019",
        "submission1_id": "s162538298",
        "crp_content": "\n s = input()\n N = 0\n S = 0\n W = 0\n E = 0\n for i in range(len(s)) :\n     str = s[i]\n     if str == 'N' :\n         N = 1\n     elif str == 'S':\n         S = 1\n     elif str == 'W':\n         W = 1\n     elif str == 'E':\n         E = 1\n if (N-S)==0 and (W-E)==0 :\n-    print('YES')\n else:\n-    print('NO')\n \n",
        "origin_generated_text": "\n```\n s = input()\n N = 0\n S = 0\n W = 0\n E = 0\n for i in range(len(s)) :\n     str = s[i]\n     if str == 'N' :\n         N = 1\n     elif str == 'S':\n         S = 1\n     elif str == 'W':\n         W = 1\n     elif str == 'E':\n         E = 1\n if (N-S)==0 and (W-E)==0 :\n-    print('YES')\n else:\n-    print('NO')\n \n```\n "
    },
    {
        "user_id": "u251252118",
        "problem_id": "p03272",
        "submission1_id": "s290663893",
        "crp_content": "\n A = [int(i) for i in input().split(\" \")]\n-ans = A[0] + A[1] + 1\n \n print(ans)\n \n",
        "origin_generated_text": "\n```\n A = [int(i) for i in input().split(\" \")]\n-ans = A[0] + A[1] + 1\n \n print(ans)\n \n```\n "
    },
    {
        "user_id": "u240249402",
        "problem_id": "p02730",
        "submission1_id": "s449534327",
        "crp_content": "\n s=list(input())\n n=len(s)\n zenhan=s[0:int((n-1)/2)]\n kouhan=s[int((n+3)/2-1):n]\n-print(zenhan)\n-print(kouhan)\n-print(zenhan[::-1])\n-print(kouhan[::-1])\n if s==s[::-1] and zenhan==zenhan[::-1] and kouhan==kouhan[::-1]:\n   print('Yes')\n else:\n   print('No')\n \n",
        "origin_generated_text": "\n```\n s=list(input())\n n=len(s)\n zenhan=s[0:int((n-1)/2)]\n kouhan=s[int((n+3)/2-1):n]\n-print(zenhan)\n-print(kouhan)\n-print(zenhan[::-1])\n-print(kouhan[::-1])\n if s==s[::-1] and zenhan==zenhan[::-1] and kouhan==kouhan[::-1]:\n   print('Yes')\n else:\n   print('No')\n \n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p03087",
        "submission1_id": "s389382922",
        "crp_content": "\n N,Q=list(map(int, input().split()))\n S=input()\n \n \n dp=[[False, 0] for _ in range(N+1)]\n for i in range(1,N+1):\n     if S[i-1]=='A':\n         dp[i][0]=True\n         dp[i][1]=dp[i-1][1]\n     elif S[i-1]=='C':\n         dp[i][1]=dp[i-1][1]+int(dp[i-1][0])\n     else:\n         dp[i][1]=dp[i-1][1]\n-print(dp)\n \n \n for i in range(Q):\n     l,r=list(map(int, input().split()))\n     l-=1\n     print(dp[r][1]-dp[l][1]-int(dp[l][0]*(1-dp[l+1][0])))\n",
        "origin_generated_text": "\n```\n N,Q=list(map(int, input().split()))\n S=input()\n \n \n dp=[[False, 0] for _ in range(N+1)]\n for i in range(1,N+1):\n     if S[i-1]=='A':\n         dp[i][0]=True\n         dp[i][1]=dp[i-1][1]\n     elif S[i-1]=='C':\n         dp[i][1]=dp[i-1][1]+int(dp[i-1][0])\n     else:\n         dp[i][1]=dp[i-1][1]\n-print(dp)\n \n \n for i in range(Q):\n     l,r=list(map(int, input().split()))\n     l-=1\n     print(dp[r][1]-dp[l][1]-int(dp[l][0]*(1-dp[l+1][0])))\n```\n "
    },
    {
        "user_id": "u811841526",
        "problem_id": "p02407",
        "submission1_id": "s984033475",
        "crp_content": "\n input()\n xs = input().split()\n-print(list(reversed(xs)))\n",
        "origin_generated_text": "\n```\n input()\n xs = input().split()\n-print(list(reversed(xs)))\n```\n "
    },
    {
        "user_id": "u611352758",
        "problem_id": "p02922",
        "submission1_id": "s087084286",
        "crp_content": "\n a, b = map(int, input().split())\n num = a\n for i in range(50):\n     if num > b:\n         break\n     else:\n         num -= 1\n         num += a\n-print(i+1)\n",
        "origin_generated_text": "\n```\n a, b = map(int, input().split())\n num = a\n for i in range(50):\n     if num > b:\n         break\n     else:\n         num -= 1\n         num += a\n-print(i+1)\n```\n "
    },
    {
        "user_id": "u071680334",
        "problem_id": "p03054",
        "submission1_id": "s425263924",
        "crp_content": "\n def main():\n     H, W, N = map(int, input().split())\n     sr, sc = map(int, input().split())\n     S = input()\n     T = input()\n     S = S[::-1]\n     T = T[::-1]\n-    L, R, U, D = 1, W, 1, H\n     f = False\n     if S[0] == \"L\":\n         L += 1\n     elif S[0] == \"R\":\n         R -= 1\n     elif S[0] == \"U\":\n         U += 1\n     else:\n         D -= 1\n     if R < L or D < U:\n         f = True\n     for i in range(1, N):\n         if (S[i] == \"L\" and T[i] == \"R\") or (S[i] == \"R\" and T[i] == \"L\") or (S[i] == \"U\" and T[i] == \"D\") or (S[i] == \"D\" and T[i] == \"U\"):\n             continue\n         if S[i] == \"L\":\n             L += 1\n         elif S[i] == \"R\":\n             R -= 1\n         elif S[i] == \"U\":\n             U += 1\n         else:\n             D -= 1\n         if R < L or D < U:\n             f = True\n     if sr < U or D < sr or sc < L or R < sc:\n         f = True\n     if f:\n         print(\"NO\")\n     else:\n         print(\"YES\")\n \n if __name__ == \"__main__\":\n     main()\n \n",
        "origin_generated_text": "\n```\n def main():\n     H, W, N = map(int, input().split())\n     sr, sc = map(int, input().split())\n     S = input()\n     T = input()\n     S = S[::-1]\n     T = T[::-1]\n-    L, R, U, D = 1, W, 1, H\n     f = False\n     if S[0] == \"L\":\n         L += 1\n     elif S[0] == \"R\":\n         R -= 1\n     elif S[0] == \"U\":\n         U += 1\n     else:\n         D -= 1\n     if R < L or D < U:\n         f = True\n     for i in range(1, N):\n         if (S[i] == \"L\" and T[i] == \"R\") or (S[i] == \"R\" and T[i] == \"L\") or (S[i] == \"U\" and T[i] == \"D\") or (S[i] == \"D\" and T[i] == \"U\"):\n             continue\n         if S[i] == \"L\":\n             L += 1\n         elif S[i] == \"R\":\n             R -= 1\n         elif S[i] == \"U\":\n             U += 1\n         else:\n             D -= 1\n         if R < L or D < U:\n             f = True\n     if sr < U or D < sr or sc < L or R < sc:\n         f = True\n     if f:\n         print(\"NO\")\n     else:\n         print(\"YES\")\n \n if __name__ == \"__main__\":\n     main()\n \n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03080",
        "submission1_id": "s280339972",
        "crp_content": "\n i = int(input())\n hat = list(input())\n \n B_count = hat.count('B')\n R_count = hat.count('R')\n \n if B_count < R_count:\n-  print(\"YES\")\n else:\n-  print('NO')\n",
        "origin_generated_text": "\n```\n i = int(input())\n hat = list(input())\n \n B_count = hat.count('B')\n R_count = hat.count('R')\n \n if B_count < R_count:\n-  print(\"YES\")\n else:\n-  print('NO')\n```\n "
    },
    {
        "user_id": "u259755734",
        "problem_id": "p02767",
        "submission1_id": "s375941288",
        "crp_content": "\n N = int(input())\n-X = [int(n) for n in range(N)]\n \n min_ans = +float('inf')\n \n for i in range(N):\n     ans = 0\n     for x in X:\n         ans += (x - i)**2\n     min_ans = min([min_ans, ans])\n \n print(min_ans)\n",
        "origin_generated_text": "\n```\n N = int(input())\n-X = [int(n) for n in range(N)]\n \n min_ans = +float('inf')\n \n for i in range(N):\n     ans = 0\n     for x in X:\n         ans += (x - i)**2\n     min_ans = min([min_ans, ans])\n \n print(min_ans)\n```\n "
    },
    {
        "user_id": "u556589653",
        "problem_id": "p03416",
        "submission1_id": "s037518763",
        "crp_content": "\n A,B = map(int,input().split())\n ans = 0\n for i in range(A,B+1):\n     i = str(i)\n     if i[0] == i[4]:\n         if i[1] == i[3]:\n             ans += 1\n-            print(i)\n         else:\n             ans += 0\n     else:\n         ans += 0\n print(ans)\n",
        "origin_generated_text": "\n```\n A,B = map(int,input().split())\n ans = 0\n for i in range(A,B+1):\n     i = str(i)\n     if i[0] == i[4]:\n         if i[1] == i[3]:\n             ans += 1\n-            print(i)\n         else:\n             ans += 0\n     else:\n         ans += 0\n print(ans)\n```\n "
    },
    {
        "user_id": "u862282448",
        "problem_id": "p03479",
        "submission1_id": "s709568393",
        "crp_content": "\n X, Y = map(int, input().split())\n ans = 0\n while X <= Y:\n     Y /= 2\n-    print(Y)\n     ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n X, Y = map(int, input().split())\n ans = 0\n while X <= Y:\n     Y /= 2\n-    print(Y)\n     ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u681110193",
        "problem_id": "p03036",
        "submission1_id": "s409674302",
        "crp_content": "\n r,d,x=map(int,input().split())\n \n for i in range(11):\n-  x= x*r-d\n   print(x)\n \n \n",
        "origin_generated_text": "\n```\n r,d,x=map(int,input().split())\n \n for i in range(11):\n-  x= x*r-d\n   print(x)\n \n \n```\n "
    },
    {
        "user_id": "u871596687",
        "problem_id": "p03264",
        "submission1_id": "s035921561",
        "crp_content": "\n K = int(input())\n \n if K%2 == 0:\n-    print((K/2)**2)\n else:\n-    print((K+1)/2*(K-1)/2)\n \n",
        "origin_generated_text": "\n```\n K = int(input())\n \n if K%2 == 0:\n-    print((K/2)**2)\n else:\n-    print((K+1)/2*(K-1)/2)\n \n```\n "
    },
    {
        "user_id": "u460745860",
        "problem_id": "p03998",
        "submission1_id": "s460723019",
        "crp_content": "\n \n from collections import deque\n S_A = deque(input())\n S_B = deque(input())\n S_C = deque(input())\n \n \n next_turn = 'a'\n \n while True:\n     \n     if len(S_A) == 0 and next_turn == 'a':\n         print(\"A\")\n         exit()\n     elif len(S_B) == 0 and next_turn == 'b':\n         print(\"B\")\n         exit()\n     elif len(S_C) == 0 and next_turn == 'c':\n         print(\"C\")\n         exit()\n     else:\n         if next_turn == 'a':\n             next_turn = S_A.pop()\n         elif next_turn == 'b':\n             next_turn = S_B.pop()\n         else:\n             next_turn = S_C.pop()\n \n",
        "origin_generated_text": "\n```\n \n from collections import deque\n S_A = deque(input())\n S_B = deque(input())\n S_C = deque(input())\n \n \n next_turn = 'a'\n \n while True:\n     \n     if len(S_A) == 0 and next_turn == 'a':\n         print(\"A\")\n         exit()\n     elif len(S_B) == 0 and next_turn == 'b':\n         print(\"B\")\n         exit()\n     elif len(S_C) == 0 and next_turn == 'c':\n         print(\"C\")\n         exit()\n     else:\n         if next_turn == 'a':\n             next_turn = S_A.pop()\n         elif next_turn == 'b':\n             next_turn = S_B.pop()\n         else:\n             next_turn = S_C.pop()\n \n```\n "
    },
    {
        "user_id": "u958820283",
        "problem_id": "p02660",
        "submission1_id": "s954208260",
        "crp_content": "\n n=int(input())\n a={}\n temp=n\n for i in range(2,int(n**0.5)+1):\n     if temp % i ==0:\n         count=0\n         while temp % (i**(count+1)) ==0:\n             count+=1\n         temp= temp/(i**count)\n         a[i]=count\n \n sum=0\n for i in a:\n     jisu= a[i]\n     temp= int((2*jisu)**0.5)-1\n     if temp*(temp+1) > 2*jisu:\n         sum+= temp-1\n     elif (temp+1)*(temp+2) > 2*jisu:\n         sum+= temp\n     elif (temp+2)*(temp+3)> 2*jisu:\n         sum+= temp+1\n print(sum)   \n         \n",
        "origin_generated_text": "\n```\n n=int(input())\n a={}\n temp=n\n for i in range(2,int(n**0.5)+1):\n     if temp % i ==0:\n         count=0\n         while temp % (i**(count+1)) ==0:\n             count+=1\n         temp= temp/(i**count)\n         a[i]=count\n \n sum=0\n for i in a:\n     jisu= a[i]\n     temp= int((2*jisu)**0.5)-1\n     if temp*(temp+1) > 2*jisu:\n         sum+= temp-1\n     elif (temp+1)*(temp+2) > 2*jisu:\n         sum+= temp\n     elif (temp+2)*(temp+3)> 2*jisu:\n         sum+= temp+1\n print(sum)   \n         \n```\n "
    },
    {
        "user_id": "u238084414",
        "problem_id": "p03416",
        "submission1_id": "s380173622",
        "crp_content": "\n A, B = map(int, input().split())\n ans = 0\n for i in range(A, B + 1):\n   n = str(i)\n-  if n[0] == n[-1] and n[-1] == n[-2]:\n-    ans += 1\n print(ans)\n",
        "origin_generated_text": "\n```\n A, B = map(int, input().split())\n ans = 0\n for i in range(A, B + 1):\n   n = str(i)\n-  if n[0] == n[-1] and n[-1] == n[-2]:\n-    ans += 1\n print(ans)\n```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p04017",
        "submission1_id": "s794469614",
        "crp_content": "\n import math\n from bisect import bisect_left, bisect_right\n \n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n Q = int(input())\n Y = [list(map(int, input().split())) for _ in range(Q)]\n \n LOGN = int(math.log(N) / math.log(2)) + 1\n parent = [[-1] * N for _ in range(LOGN + 1)]\n \n \n for k in range(LOGN + 1):\n     for i in range(N):\n         if k == 0:\n-            parent[k][i] = bisect_right(X, X[i] + L) - 1\n         else:\n             parent[k][i] = parent[k - 1][parent[k - 1][i]]\n \n for a, b in Y:\n     a -= 1\n     b -= 1\n     if a > b:\n         a, b = b, a\n     i = bisect_left([parent[j][a] for j in range(LOGN + 1)], b)\n     print(2 ** i)\n \n",
        "origin_generated_text": "\n```\n import math\n from bisect import bisect_left, bisect_right\n \n N = int(input())\n X = list(map(int, input().split()))\n L = int(input())\n Q = int(input())\n Y = [list(map(int, input().split())) for _ in range(Q)]\n \n LOGN = int(math.log(N) / math.log(2)) + 1\n parent = [[-1] * N for _ in range(LOGN + 1)]\n \n \n for k in range(LOGN + 1):\n     for i in range(N):\n         if k == 0:\n-            parent[k][i] = bisect_right(X, X[i] + L) - 1\n         else:\n             parent[k][i] = parent[k - 1][parent[k - 1][i]]\n \n for a, b in Y:\n     a -= 1\n     b -= 1\n     if a > b:\n         a, b = b, a\n     i = bisect_left([parent[j][a] for j in range(LOGN + 1)], b)\n     print(2 ** i)\n \n```\n "
    },
    {
        "user_id": "u327668449",
        "problem_id": "p03102",
        "submission1_id": "s701109246",
        "crp_content": "\n NMC = list(map(lambda x: int(x), input().split()))\n N = NMC[0]\n M = NMC[1]\n C = NMC[2]\n \n B = list(map(lambda x: int(x), input().split()))\n A = [list(map(lambda x: int(x), input().split())) for i in range(N)]\n \n-print(\"B\", B)\n-print(\"A\", A)\n-print(\"N\", N)\n-print(\"M\", M)\n-print(\"C\", C)\n \n answer = 0\n \n for i in range(len(A)):\n   judge = 0\n   for m in range(len(A[i])):\n     judge += A[i][m] * B[m]\n \n-  print(\"judge\", judge)\n   if (judge + C > 0):\n     answer += 1\n \n print(answer)\n",
        "origin_generated_text": "\n```\n NMC = list(map(lambda x: int(x), input().split()))\n N = NMC[0]\n M = NMC[1]\n C = NMC[2]\n \n B = list(map(lambda x: int(x), input().split()))\n A = [list(map(lambda x: int(x), input().split())) for i in range(N)]\n \n-print(\"B\", B)\n-print(\"A\", A)\n-print(\"N\", N)\n-print(\"M\", M)\n-print(\"C\", C)\n \n answer = 0\n \n for i in range(len(A)):\n   judge = 0\n   for m in range(len(A[i])):\n     judge += A[i][m] * B[m]\n \n-  print(\"judge\", judge)\n   if (judge + C > 0):\n     answer += 1\n \n print(answer)\n```\n "
    }
]