[
    {
        "user_id": "u865373042",
        "problem_id": "p02553",
        "submission1_id": "s756253659",
        "code_content": "\na,b,c,d = map(int,input().split(' '))\nans1 = a*c\nans2 = a*d\nans3 = b*c\nans4 = b*d\n\nprint(max(ans1,ans2,ans3,ans4))",
        "origin_generated_text": "\n```\na,b,c,d = map(int,input().split(' '))\nans1 = a*c\nans2 = a*d\nans3 = b*c\nans4 = b*d\n\nprint(max(ans1,ans2,ans3,ans4))```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s698544930",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    updated = True\n    while updated:\n        updated = False\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            updated = updated or (u != Unreachs[i][-1])\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while True:\n            k = bisect(Unreachs[a], b) - 1\n            if k < 0:\n                ans += 1\n                break\n            ans += 2 ** k\n            a = Unreachs[a][k]\n        print(ans)\n    return 0\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    updated = True\n    while updated:\n        updated = False\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            updated = updated or (u != Unreachs[i][-1])\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while True:\n            k = bisect(Unreachs[a], b) - 1\n            if k < 0:\n                ans += 1\n                break\n            ans += 2 ** k\n            a = Unreachs[a][k]\n        print(ans)\n    return 0\n\nmain()```\n "
    },
    {
        "user_id": "u625963200",
        "problem_id": "p03477",
        "submission1_id": "s169321676",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\na,b,c,d=map(int,input().split())\n\nl=a+b\nr=c+d\nif l==r:\n  print('Balanced')\nelif l>r:\n  print('Left')\nelif l<r:\n  print('Right')",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\na,b,c,d=map(int,input().split())\n\nl=a+b\nr=c+d\nif l==r:\n  print('Balanced')\nelif l>r:\n  print('Left')\nelif l<r:\n  print('Right')```\n "
    },
    {
        "user_id": "u556610039",
        "problem_id": "p03998",
        "submission1_id": "s658643409",
        "code_content": "\na = input()\nb = input()\nc = input()\ncountlist = [1, 0, 0]\nlist = [\"a\", \"b\", \"c\"]\nturn = 0\nvalue = \"\"\nfor x in range(len(a) + len(b) + len(c)):\n    \n    if countlist[0] > len(a) or countlist[1] > len(b) or countlist[2] > len(c): break\n    if turn == 0: value = a[countlist[turn] - 1]\n    elif turn == 1: value = b[countlist[turn] - 1]\n    elif turn == 2: value = c[countlist[turn] - 1]\n        \n    turn = list.index(value)\n    countlist[turn] += 1\n\nif countlist[0] > len(a): print(\"A\")\nelif countlist[1] > len(b): print(\"B\")\nelif countlist[2] > len(c): print(\"C\")\n",
        "origin_generated_text": "\n```\na = input()\nb = input()\nc = input()\ncountlist = [1, 0, 0]\nlist = [\"a\", \"b\", \"c\"]\nturn = 0\nvalue = \"\"\nfor x in range(len(a) + len(b) + len(c)):\n    \n    if countlist[0] > len(a) or countlist[1] > len(b) or countlist[2] > len(c): break\n    if turn == 0: value = a[countlist[turn] - 1]\n    elif turn == 1: value = b[countlist[turn] - 1]\n    elif turn == 2: value = c[countlist[turn] - 1]\n        \n    turn = list.index(value)\n    countlist[turn] += 1\n\nif countlist[0] > len(a): print(\"A\")\nelif countlist[1] > len(b): print(\"B\")\nelif countlist[2] > len(c): print(\"C\")\n```\n "
    },
    {
        "user_id": "u145145077",
        "problem_id": "p03103",
        "submission1_id": "s736214835",
        "code_content": "\nn,m=map(int,input().split())\nab=[list(map(int,input().split())) for i in range(n)]\n\nab_sorted = sorted(ab, key=lambda x:(x[0], -x[1]))\n\nnum = 0\namount_of_money = 0\nfor i in range(n):\n  buy = min(ab_sorted[i][1], m-num)\n  num += buy\n  amount_of_money += ab_sorted[i][0] * buy\n    \n  if num >= m:\n    print(amount_of_money)\n",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\nab=[list(map(int,input().split())) for i in range(n)]\n\nab_sorted = sorted(ab, key=lambda x:(x[0], -x[1]))\n\nnum = 0\namount_of_money = 0\nfor i in range(n):\n  buy = min(ab_sorted[i][1], m-num)\n  num += buy\n  amount_of_money += ab_sorted[i][0] * buy\n    \n  if num >= m:\n    print(amount_of_money)\n```\n "
    },
    {
        "user_id": "u131634965",
        "problem_id": "p03416",
        "submission1_id": "s186318127",
        "code_content": "\na,b=map(int,input().split())\ncount=0\nfor i in range(a,b+1):\n    i=str(i)\n    if i[:len(i)\n        count+=1\nprint(count)",
        "origin_generated_text": "\n```\na,b=map(int,input().split())\ncount=0\nfor i in range(a,b+1):\n    i=str(i)\n    if i[:len(i)\n        count+=1\nprint(count)```\n "
    },
    {
        "user_id": "u658987783",
        "problem_id": "p02887",
        "submission1_id": "s936914101",
        "code_content": "\nn=int(input())\ns=input()\n\ncount=1\nfor i in range(1,n):\n  if s[i-1]==s[i]:\n    count=count+1\n  else:\n    count=count+1\nprint(count)",
        "origin_generated_text": "\n```\nn=int(input())\ns=input()\n\ncount=1\nfor i in range(1,n):\n  if s[i-1]==s[i]:\n    count=count+1\n  else:\n    count=count+1\nprint(count)```\n "
    },
    {
        "user_id": "u719873358",
        "problem_id": "p02553",
        "submission1_id": "s566470120",
        "code_content": "\na, b, c, d = [int(x) for x in input().split()]\nprint(max(a*c,b*d,a*b,b*c,a*d)) \n",
        "origin_generated_text": "\n```\na, b, c, d = [int(x) for x in input().split()]\nprint(max(a*c,b*d,a*b,b*c,a*d)) \n```\n "
    },
    {
        "user_id": "u264265458",
        "problem_id": "p03264",
        "submission1_id": "s567739781",
        "code_content": "\nimport math\na=int(input())\nif a%2==0:\n  print(int(a*a/4))\nelse:\n  print(int(math.ceil(a)*math.floor(a)))",
        "origin_generated_text": "\n```\nimport math\na=int(input())\nif a%2==0:\n  print(int(a*a/4))\nelse:\n  print(int(math.ceil(a)*math.floor(a)))```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p02963",
        "submission1_id": "s695896139",
        "code_content": "\nimport sys\ninput=sys.stdin.readline\n\ns=int(input())\n\n\n\n\nif s<=10**9:\n    print(0,0,1,0,0,s)\n    exit()\n\ny=s%(10**9)\nx=s-y\n\nprint(0,0,10**9,1,x,y)\n\n\n",
        "origin_generated_text": "\n```\nimport sys\ninput=sys.stdin.readline\n\ns=int(input())\n\n\n\n\nif s<=10**9:\n    print(0,0,1,0,0,s)\n    exit()\n\ny=s%(10**9)\nx=s-y\n\nprint(0,0,10**9,1,x,y)\n\n\n```\n "
    },
    {
        "user_id": "u834168862",
        "problem_id": "p02917",
        "submission1_id": "s373054515",
        "code_content": "\nn = int(input())\nb_list = [int(i) for i in input().split()]\na_list = [0] * n\nbefore_val = 0\nfor i in range(n-1):\n    target = b_list[i]\n    if a_list[i] >= before_val:\n        a_list[i+1] = b_list[i]\n    else:\n        a_list[i+1] = a_list[i]\n    before_val = a_list[i]\nprint(sum(a_list))",
        "origin_generated_text": "\n```\nn = int(input())\nb_list = [int(i) for i in input().split()]\na_list = [0] * n\nbefore_val = 0\nfor i in range(n-1):\n    target = b_list[i]\n    if a_list[i] >= before_val:\n        a_list[i+1] = b_list[i]\n    else:\n        a_list[i+1] = a_list[i]\n    before_val = a_list[i]\nprint(sum(a_list))```\n "
    },
    {
        "user_id": "u337802798",
        "problem_id": "p02633",
        "submission1_id": "s831108651",
        "code_content": "\ndef gcd(a,b):\n  if b == 0:return a\n  return gcd(b,a%b)\n \na = int(input())\nprint(int(360/gcd(360,a)))",
        "origin_generated_text": "\n```\ndef gcd(a,b):\n  if b == 0:return a\n  return gcd(b,a%b)\n \na = int(input())\nprint(int(360/gcd(360,a)))```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03677",
        "submission1_id": "s446592218",
        "code_content": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na = [b-1 for b in a]\nimos = [0 for _ in range(m+1)]\nbase = 0\nfor i in range(n-1):\n\tx, y = a[i], a[i+1]\n\tz, w = (x+2)%m, (y+1)%m\n\tif w == 0:\n\t\tw = m\n\tif z < w:\n\t\timos[z] += 1\n\t\timos[w] -= w-z+1\n\t\tif w < m:\n\t\t\timos[w+1] += w-z\n\telse:\n\t\timos[z] += 1\n\t\timos[m] -= m-z+1\n\t\timos[0] += 1\n\t\tbase += m-z\n\t\timos[w] -= m+w-z+1\n\t\tif w < m:\n\t\t\timos[w+1] += m+w-z\n\n\nfor i in range(m):\n\timos[i+1] += imos[i]\nimos[0] += base\nfor i in range(m):\n\timos[i+1] += imos[i]\nres = max(imos[:m])\nans = 0\nfor i in range(n-1):\n\tif a[i+1] > a[i]:\n\t\tans += a[i+1] - a[i]\n\telse:\n\t\tans += a[i+1] + m - a[i]\n\nans -= res\nprint(ans)",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na = [b-1 for b in a]\nimos = [0 for _ in range(m+1)]\nbase = 0\nfor i in range(n-1):\n\tx, y = a[i], a[i+1]\n\tz, w = (x+2)%m, (y+1)%m\n\tif w == 0:\n\t\tw = m\n\tif z < w:\n\t\timos[z] += 1\n\t\timos[w] -= w-z+1\n\t\tif w < m:\n\t\t\timos[w+1] += w-z\n\telse:\n\t\timos[z] += 1\n\t\timos[m] -= m-z+1\n\t\timos[0] += 1\n\t\tbase += m-z\n\t\timos[w] -= m+w-z+1\n\t\tif w < m:\n\t\t\timos[w+1] += m+w-z\n\n\nfor i in range(m):\n\timos[i+1] += imos[i]\nimos[0] += base\nfor i in range(m):\n\timos[i+1] += imos[i]\nres = max(imos[:m])\nans = 0\nfor i in range(n-1):\n\tif a[i+1] > a[i]:\n\t\tans += a[i+1] - a[i]\n\telse:\n\t\tans += a[i+1] + m - a[i]\n\nans -= res\nprint(ans)```\n "
    },
    {
        "user_id": "u591016708",
        "problem_id": "p03479",
        "submission1_id": "s454264038",
        "code_content": "\ndef solve(X, Y):\n    tmp = X\n    ans = 0\n    while tmp <= Y:\n        ans += 1\n        tmp *= 2\n    return ans\n\ndef main():\n    X, Y = map(int, input().split())\n    ans = solve(X, Y)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef solve(X, Y):\n    tmp = X\n    ans = 0\n    while tmp <= Y:\n        ans += 1\n        tmp *= 2\n    return ans\n\ndef main():\n    X, Y = map(int, input().split())\n    ans = solve(X, Y)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u636311816",
        "problem_id": "p03326",
        "submission1_id": "s502606845",
        "code_content": "\nimport copy\nn,m = map(int,input().split())\n\n\nscores = list()\nfor i in range(n):\n    score = list(map(int,input().split()))\n    scores.append(score)\n\nsmax=None\nfor x in range(2):\n    scores_=copy.deepcopy(scores)\n    \n    for i in range(n):\n        scores_[i][0] = pow(-1,x)*scores[i][0]\n    for y in range(2):\n        for i in range(n):\n            scores_[i][1] = pow(-1,x)*scores[i][1]\n        for z in range(2):\n            for i in range(n):\n                scores_[i][2] = pow(-1,x)*scores[i][2]\n        \n            sumlist=list()\n            for i in range(n):\n                sumlist.append(sum(scores_[i]))\n            sumlist.sort()\n            tmp=0\n            \n            for eat in range(m):\n                tmp+=sumlist[-1]\n                sumlist.pop()\n            if smax==None or tmp>smax:\n                smax=tmp\nprint(smax)",
        "origin_generated_text": "\n```\nimport copy\nn,m = map(int,input().split())\n\n\nscores = list()\nfor i in range(n):\n    score = list(map(int,input().split()))\n    scores.append(score)\n\nsmax=None\nfor x in range(2):\n    scores_=copy.deepcopy(scores)\n    \n    for i in range(n):\n        scores_[i][0] = pow(-1,x)*scores[i][0]\n    for y in range(2):\n        for i in range(n):\n            scores_[i][1] = pow(-1,x)*scores[i][1]\n        for z in range(2):\n            for i in range(n):\n                scores_[i][2] = pow(-1,x)*scores[i][2]\n        \n            sumlist=list()\n            for i in range(n):\n                sumlist.append(sum(scores_[i]))\n            sumlist.sort()\n            tmp=0\n            \n            for eat in range(m):\n                tmp+=sumlist[-1]\n                sumlist.pop()\n            if smax==None or tmp>smax:\n                smax=tmp\nprint(smax)```\n "
    },
    {
        "user_id": "u309039873",
        "problem_id": "p02580",
        "submission1_id": "s295803083",
        "code_content": "\nimport sys\nHK,WK,M = map(int, input().split())\nW = [0] * (WK + 1)\nH = [0] * (HK + 1)\nHW = {}\n\n\nfor i in range(M):\n    h, w = map(int, input().split())\n\n    H[h] += 1\n    W[w] += 1\n\n    HW[(h,w)] = 1\n\nanswer = 0\nHMAX = max(H)\nWMAX = max(W)\n\nHEMAX = H.count(HMAX)\nWEMAX = W.count(WMAX)\nif HEMAX * WEMAX > M:\n    print(HMAX + WMAX)\n    sys.exit(0)\n\nHMAXES = [i for i, _ in enumerate(H) if _ == HMAX]\nWMAXES = [i for i, _ in enumerate(W) if _ == WMAX]\n\n\nanswer = HMAX + WMAX\nfor h in HMAXES:\n    for w in WMAXES:\n        if (h,w) in HW and H[h] + W[w] == M:\n            print(answer)\n            sys.exit(0)\nprint(answer-1)",
        "origin_generated_text": "\n```\nimport sys\nHK,WK,M = map(int, input().split())\nW = [0] * (WK + 1)\nH = [0] * (HK + 1)\nHW = {}\n\n\nfor i in range(M):\n    h, w = map(int, input().split())\n\n    H[h] += 1\n    W[w] += 1\n\n    HW[(h,w)] = 1\n\nanswer = 0\nHMAX = max(H)\nWMAX = max(W)\n\nHEMAX = H.count(HMAX)\nWEMAX = W.count(WMAX)\nif HEMAX * WEMAX > M:\n    print(HMAX + WMAX)\n    sys.exit(0)\n\nHMAXES = [i for i, _ in enumerate(H) if _ == HMAX]\nWMAXES = [i for i, _ in enumerate(W) if _ == WMAX]\n\n\nanswer = HMAX + WMAX\nfor h in HMAXES:\n    for w in WMAXES:\n        if (h,w) in HW and H[h] + W[w] == M:\n            print(answer)\n            sys.exit(0)\nprint(answer-1)```\n "
    },
    {
        "user_id": "u393253137",
        "problem_id": "p03041",
        "submission1_id": "s314743347",
        "code_content": "\nn,k=map(int,input().split())\ns=input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])",
        "origin_generated_text": "\n```\nn,k=map(int,input().split())\ns=input()\nprint(s[:k-1]+s[k-1].lower()+s[k:])```\n "
    },
    {
        "user_id": "u846150137",
        "problem_id": "p03303",
        "submission1_id": "s706762158",
        "code_content": "\na=input().strip()\nprint(a[::int(input())])",
        "origin_generated_text": "\n```\na=input().strip()\nprint(a[::int(input())])```\n "
    },
    {
        "user_id": "u954170646",
        "problem_id": "p02625",
        "submission1_id": "s672544659",
        "code_content": "\nn, m = map(int, input().split())\na,M,d=1,10**9+7,[1]*(n+1)\nfor i in range(n):\n  d[i+1]=((m-n+1)*d[i]+i*d[i-1])%M\n  a=a*(m-i)%M\nprint(a*d[-1]%M)",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\na,M,d=1,10**9+7,[1]*(n+1)\nfor i in range(n):\n  d[i+1]=((m-n+1)*d[i]+i*d[i-1])%M\n  a=a*(m-i)%M\nprint(a*d[-1]%M)```\n "
    },
    {
        "user_id": "u025287757",
        "problem_id": "p02642",
        "submission1_id": "s434393350",
        "code_content": "\ninf =  10000005\ndef main():\n  N =  int(input())\n  a = list(map(int, input().split()))\n  a.sort()\n  detect = [0] *inf\n  for i in range(N-1):\n    if a[i] == a[i+1]:\n      continue\n    detect[a[i]] += 1\n    j = 2\n    while (a[i]*j < inf):\n      detect[a[i]*j] += 1\n      j+=1\n  ans = 0\n  for i in range(N):\n    if detect[a[i]] == 1:\n      ans += 1\n  print(ans)\n  \nif __name__ == \"__main__\":\n  main()",
        "origin_generated_text": "\n```\ninf =  10000005\ndef main():\n  N =  int(input())\n  a = list(map(int, input().split()))\n  a.sort()\n  detect = [0] *inf\n  for i in range(N-1):\n    if a[i] == a[i+1]:\n      continue\n    detect[a[i]] += 1\n    j = 2\n    while (a[i]*j < inf):\n      detect[a[i]*j] += 1\n      j+=1\n  ans = 0\n  for i in range(N):\n    if detect[a[i]] == 1:\n      ans += 1\n  print(ans)\n  \nif __name__ == \"__main__\":\n  main()```\n "
    },
    {
        "user_id": "u865067466",
        "problem_id": "p03079",
        "submission1_id": "s395698137",
        "code_content": "\nA, B, C = map(int, input().split(' '))\n\nif A**2 + B**2 == C**2 and A == B == C:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\nA, B, C = map(int, input().split(' '))\n\nif A**2 + B**2 == C**2 and A == B == C:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u442855260",
        "problem_id": "p02730",
        "submission1_id": "s027941396",
        "code_content": "\nS=input()\nN=len(S)\ni=0\nif((N-1)/2%2==1):\n    while (i<int((N-1)/2-1)/2):\n        if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n            i+=1\n        else:\n            break;\n    if(i==int((N-1)/2-1)/2):\n        print('Yes')\n    else:\n        print('No')\n    \nelse:\n    while (i<=(N-1)/4):\n        if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n            i+=1\n        else:\n            break;\n    if(i==(N-1)/4):\n        print('Yes')\n    else:\n        print('No')",
        "origin_generated_text": "\n```\nS=input()\nN=len(S)\ni=0\nif((N-1)/2%2==1):\n    while (i<int((N-1)/2-1)/2):\n        if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n            i+=1\n        else:\n            break;\n    if(i==int((N-1)/2-1)/2):\n        print('Yes')\n    else:\n        print('No')\n    \nelse:\n    while (i<=(N-1)/4):\n        if( (S[i]==S[int((N-1)/2-i-1)]) & (S[i]==S[int((N-1)/2+1+i)]) & (S[i]==S[int(N-1-i)]) ):\n            i+=1\n        else:\n            break;\n    if(i==(N-1)/4):\n        print('Yes')\n    else:\n        print('No')```\n "
    },
    {
        "user_id": "u995062424",
        "problem_id": "p03992",
        "submission1_id": "s840033928",
        "code_content": "\ns=input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03546",
        "submission1_id": "s847534940",
        "code_content": "\nfrom collections import defaultdict\nh, w = map(int, input().split())\nc = []\nfor i in range(10):\n  s = list(map(int, input().split()))\n  c.append(s)\n\na = []\nfor i in range(h):\n  b = list(map(int, input().split()))\n  a.append(b)\n\n\nd = c\nfor i in range(10):\n  for j in range(i+1, 10):\n    for k in range(i+1, 10):\n      d[i][j] = min(d[i][k]+d[k][j], d[i][j])\n\nans = 0\n\nfor i in range(h):\n  for j in range(w):\n    if a[i][j] == -1:\n      continue\n    x = a[i][j]\n    ans += d[x][1]\nprint (ans)",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\nh, w = map(int, input().split())\nc = []\nfor i in range(10):\n  s = list(map(int, input().split()))\n  c.append(s)\n\na = []\nfor i in range(h):\n  b = list(map(int, input().split()))\n  a.append(b)\n\n\nd = c\nfor i in range(10):\n  for j in range(i+1, 10):\n    for k in range(i+1, 10):\n      d[i][j] = min(d[i][k]+d[k][j], d[i][j])\n\nans = 0\n\nfor i in range(h):\n  for j in range(w):\n    if a[i][j] == -1:\n      continue\n    x = a[i][j]\n    ans += d[x][1]\nprint (ans)```\n "
    },
    {
        "user_id": "u733337827",
        "problem_id": "p03998",
        "submission1_id": "s599836234",
        "code_content": "\nSa = list(input())[::-1]\nSb = list(input())[::-1]\nSc = list(input())[::-1]\nl = [len(Sa), len(Sb), len(Sc)]\ns = [Sa, Sb, Sc]\np = 0\nwhile True:\n    l[p] -= 1\n    if l[p] <= 0:\n        print(\"ABC\"[p])\n        break\n    else:\n        p = \"abc\".find(s[p][l[p] - 1])",
        "origin_generated_text": "\n```\nSa = list(input())[::-1]\nSb = list(input())[::-1]\nSc = list(input())[::-1]\nl = [len(Sa), len(Sb), len(Sc)]\ns = [Sa, Sb, Sc]\np = 0\nwhile True:\n    l[p] -= 1\n    if l[p] <= 0:\n        print(\"ABC\"[p])\n        break\n    else:\n        p = \"abc\".find(s[p][l[p] - 1])```\n "
    },
    {
        "user_id": "u702582248",
        "problem_id": "p03080",
        "submission1_id": "s698120255",
        "code_content": "\nn=int(input())\ns=input()\n\nif len([i for i in s if i == 'R']) > len([i for i in s if i == 'B']):\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nn=int(input())\ns=input()\n\nif len([i for i in s if i == 'R']) > len([i for i in s if i == 'B']):\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u724687935",
        "problem_id": "p03039",
        "submission1_id": "s524515759",
        "code_content": "\nMOD = 10 ** 9 + 7\n\n\ndef prepare(n):\n    global MOD\n    modFacts = [0] * (n + 1)\n    modFacts[0] = 1\n    for i in range(n):\n        modFacts[i + 1] = (modFacts[i] * (i + 1)) % MOD\n\n    invs = [1] * (n + 1)\n    invs[n] = pow(modFacts[n], MOD - 2, MOD)\n    for i in range(n, 1, -1):\n        invs[i - 1] = (invs[i] * i) % MOD\n\n    return modFacts, invs\n\n\ndef modCombi(n, r):\n    global MOD\n    return (modFacts[n] * invs[n - r] * invs[r]) % MOD\n\n\nN, M, K = map(int, input().split())\nmodFacts, invs = prepare(N * M)\nvar = modCombi(N * M - 2, K - 2)\n\nans = 0\nif N < M:\n    N, M = M, N\nL = [0] * (N + 1)\nfor i in range(1, N + 1):\n    L[i] = L[i - 1] + i\nfor x in range(1, N + 1):\n    Sx = (M * (L[N - x] + L[x - 1])) % MOD\n    Sy = (N * (L[M - x] + L[x - 1])) % MOD\n    ans += ((Sx + Sy) * M) % MOD\n\nprint((ans * invs[2] * var) % MOD)\n\n",
        "origin_generated_text": "\n```\nMOD = 10 ** 9 + 7\n\n\ndef prepare(n):\n    global MOD\n    modFacts = [0] * (n + 1)\n    modFacts[0] = 1\n    for i in range(n):\n        modFacts[i + 1] = (modFacts[i] * (i + 1)) % MOD\n\n    invs = [1] * (n + 1)\n    invs[n] = pow(modFacts[n], MOD - 2, MOD)\n    for i in range(n, 1, -1):\n        invs[i - 1] = (invs[i] * i) % MOD\n\n    return modFacts, invs\n\n\ndef modCombi(n, r):\n    global MOD\n    return (modFacts[n] * invs[n - r] * invs[r]) % MOD\n\n\nN, M, K = map(int, input().split())\nmodFacts, invs = prepare(N * M)\nvar = modCombi(N * M - 2, K - 2)\n\nans = 0\nif N < M:\n    N, M = M, N\nL = [0] * (N + 1)\nfor i in range(1, N + 1):\n    L[i] = L[i - 1] + i\nfor x in range(1, N + 1):\n    Sx = (M * (L[N - x] + L[x - 1])) % MOD\n    Sy = (N * (L[M - x] + L[x - 1])) % MOD\n    ans += ((Sx + Sy) * M) % MOD\n\nprint((ans * invs[2] * var) % MOD)\n\n```\n "
    },
    {
        "user_id": "u531599639",
        "problem_id": "p02640",
        "submission1_id": "s657574563",
        "code_content": "\nx,y = map(int, input().split())\nans=0\nif x*2<=y and y%2==0:\n    ans=1\nif ans==1:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nx,y = map(int, input().split())\nans=0\nif x*2<=y and y%2==0:\n    ans=1\nif ans==1:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u723711163",
        "problem_id": "p03752",
        "submission1_id": "s511720319",
        "code_content": "\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\n\nres = float('inf')\n\nfor i in range(1<<N):\n  a = A[::]\n  paint = 0\n  add = 0\n  for j in range(N):\n    if (i>>j)&1:\n      paint += 1\n      h = a[j]\n      if j>0 and a[j-1]>=h:\n        continue\n      else:\n        min_h = max(a[j-1], h)\n        if h < min_h:\n          add += (min_h+1) - h\n          a[j] = min_h + 1\n\n  if paint == K:\n    res = min(res, add)\n\nprint(res)",
        "origin_generated_text": "\n```\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\n\nres = float('inf')\n\nfor i in range(1<<N):\n  a = A[::]\n  paint = 0\n  add = 0\n  for j in range(N):\n    if (i>>j)&1:\n      paint += 1\n      h = a[j]\n      if j>0 and a[j-1]>=h:\n        continue\n      else:\n        min_h = max(a[j-1], h)\n        if h < min_h:\n          add += (min_h+1) - h\n          a[j] = min_h + 1\n\n  if paint == K:\n    res = min(res, add)\n\nprint(res)```\n "
    },
    {
        "user_id": "u073709667",
        "problem_id": "p02385",
        "submission1_id": "s347124527",
        "code_content": "\ndef N():\n    num=Dice[0]\n    Dice[0]=Dice[1]\n    Dice[1]=Dice[5]\n    Dice[5]=Dice[4]\n    Dice[4]=num\ndef E():\n    num=Dice[0]\n    Dice[0]=Dice[3]\n    Dice[3]=Dice[5]\n    Dice[5]=Dice[2]\n    Dice[2]=num\ndef W():\n    num=Dice[0]\n    Dice[0]=Dice[2]\n    Dice[2]=Dice[5]\n    Dice[5]=Dice[3]\n    Dice[3]=num\ndef S():\n    num=Dice[0]\n    Dice[0]=Dice[4]\n    Dice[4]=Dice[5]\n    Dice[5]=Dice[1]\n    Dice[1]=num\nDice=[int(i) for i in input().split()]\nDice2=[int(i) for i in input().split()]\nif (Dice[0] in Dice2)==False:\n    print('No')\nelse:\n    for j in range(6):\n        if j%2==0:\n            N()\n        else:\n            W()\n        for i in range(4):\n            N()\n            W()\n            S()\n            if Dice==Dice2:\n                break\n    if Dice==Dice2:\n        print('Yes')\n    else:\n        print('No')",
        "origin_generated_text": "\n```\ndef N():\n    num=Dice[0]\n    Dice[0]=Dice[1]\n    Dice[1]=Dice[5]\n    Dice[5]=Dice[4]\n    Dice[4]=num\ndef E():\n    num=Dice[0]\n    Dice[0]=Dice[3]\n    Dice[3]=Dice[5]\n    Dice[5]=Dice[2]\n    Dice[2]=num\ndef W():\n    num=Dice[0]\n    Dice[0]=Dice[2]\n    Dice[2]=Dice[5]\n    Dice[5]=Dice[3]\n    Dice[3]=num\ndef S():\n    num=Dice[0]\n    Dice[0]=Dice[4]\n    Dice[4]=Dice[5]\n    Dice[5]=Dice[1]\n    Dice[1]=num\nDice=[int(i) for i in input().split()]\nDice2=[int(i) for i in input().split()]\nif (Dice[0] in Dice2)==False:\n    print('No')\nelse:\n    for j in range(6):\n        if j%2==0:\n            N()\n        else:\n            W()\n        for i in range(4):\n            N()\n            W()\n            S()\n            if Dice==Dice2:\n                break\n    if Dice==Dice2:\n        print('Yes')\n    else:\n        print('No')```\n "
    },
    {
        "user_id": "u530646758",
        "problem_id": "p02887",
        "submission1_id": "s019045363",
        "code_content": "\nN = int(input())\nS = str(input())\nfusion = []\nfor i in range(N-1):\n    if S[i+1] != S[i]:\n        fusion +=(S[i])\nfusion +=S[N-1]\nprint(len(fusion))",
        "origin_generated_text": "\n```\nN = int(input())\nS = str(input())\nfusion = []\nfor i in range(N-1):\n    if S[i+1] != S[i]:\n        fusion +=(S[i])\nfusion +=S[N-1]\nprint(len(fusion))```\n "
    },
    {
        "user_id": "u627147604",
        "problem_id": "p03416",
        "submission1_id": "s229289554",
        "code_content": "\ndef is_palindromic(n):\n    if str(n) == str(n)[::-1]:\n        return True\n    else:\n        return False\n\nA,B = map(int, input().split())\ncount = 0\nfor i in range(A, B+1):\n    if is_palindromic(i):\n        count += 1\nprint(count)",
        "origin_generated_text": "\n```\ndef is_palindromic(n):\n    if str(n) == str(n)[::-1]:\n        return True\n    else:\n        return False\n\nA,B = map(int, input().split())\ncount = 0\nfor i in range(A, B+1):\n    if is_palindromic(i):\n        count += 1\nprint(count)```\n "
    },
    {
        "user_id": "u183256664",
        "problem_id": "p02887",
        "submission1_id": "s827332777",
        "code_content": "\nN = int(input())\nS = input()\ntmp = ''\ncount = 0\nfor s in S:\n    if s != tmp:\n        count += 1\n    tmp = s\nprint(count)",
        "origin_generated_text": "\n```\nN = int(input())\nS = input()\ntmp = ''\ncount = 0\nfor s in S:\n    if s != tmp:\n        count += 1\n    tmp = s\nprint(count)```\n "
    },
    {
        "user_id": "u085186789",
        "problem_id": "p03303",
        "submission1_id": "s079510776",
        "code_content": "\nS = input()\nw = int(input())\nfor i in range(len(S)):\n  if (i + 1) % w == 0:\n    print(S[i], end = \"\")\n  else:\n    print(S[i], end = \" \")\n",
        "origin_generated_text": "\n```\nS = input()\nw = int(input())\nfor i in range(len(S)):\n  if (i + 1) % w == 0:\n    print(S[i], end = \"\")\n  else:\n    print(S[i], end = \" \")\n```\n "
    },
    {
        "user_id": "u464205401",
        "problem_id": "p02959",
        "submission1_id": "s994674789",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ncnt=0\nfor i in range(n):\n  if a[i]>=b[i]:\n    cnt+=b[i]\n  else:\n    if a[i+1]-(b[i]-a[i])>=0:\n      cnt+=b[i]\n      a[i+1]=a[i+1]-(b[i]-a[i])\n    else:\n      cnt+=a[i]+a[i+1]\nprint(cnt)\n      ",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ncnt=0\nfor i in range(n):\n  if a[i]>=b[i]:\n    cnt+=b[i]\n  else:\n    if a[i+1]-(b[i]-a[i])>=0:\n      cnt+=b[i]\n      a[i+1]=a[i+1]-(b[i]-a[i])\n    else:\n      cnt+=a[i]+a[i+1]\nprint(cnt)\n      ```\n "
    },
    {
        "user_id": "u392319141",
        "problem_id": "p03296",
        "submission1_id": "s205767815",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N):\n    if A[i - 1] == A[i]:\n        ans += 1\n        A[i] = max(A[i - 1], A[i]) + 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, N):\n    if A[i - 1] == A[i]:\n        ans += 1\n        A[i] = max(A[i - 1], A[i]) + 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u797127558",
        "problem_id": "p03206",
        "submission1_id": "s951704579",
        "code_content": "\na=int(input())\nprint(\"Christmas\"*a)",
        "origin_generated_text": "\n```\na=int(input())\nprint(\"Christmas\"*a)```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03796",
        "submission1_id": "s113138591",
        "code_content": "\nmod=1000000007\n\ndef P(x):\n    ans=1\n    for i in range(x):\n        ans=ans*(i+1)%mod\n    \n    return(ans)\n\nn=int(input())\n\nprint(P(n)%mod)",
        "origin_generated_text": "\n```\nmod=1000000007\n\ndef P(x):\n    ans=1\n    for i in range(x):\n        ans=ans*(i+1)%mod\n    \n    return(ans)\n\nn=int(input())\n\nprint(P(n)%mod)```\n "
    },
    {
        "user_id": "u343454379",
        "problem_id": "p03734",
        "submission1_id": "s419095534",
        "code_content": "\nimport bisect\nN,W=map(int,input().split())\nwv=[list(map(int,input().split())) for _ in range(N)]\nw1=wv[0][0]\nWlist=[j*(w1+i) for j in range(1,N+1) for i in range(3*j+1)]\nWlist=sorted(set(Wlist))\nLW=len(Wlist)\ndp=[[0]*LW for _ in range(N+1)]\n\n\nfor i in range(1,N+1):\n  w,v=wv[i-1]\n  for j in range(LW):\n    if w<=Wlist[j]:      \n      ind=bisect.bisect_right(Wlist,Wlist[j]-w)-1\n      dp[i][j]=max(dp[i-1][j],dp[i-1][ind]+v)\n    else:\n      dp[i][j]=dp[i-1][j]\n\nind=bisect.bisect_right(Wlist,W)-1\nprint(dp[N][ind])",
        "origin_generated_text": "\n```\nimport bisect\nN,W=map(int,input().split())\nwv=[list(map(int,input().split())) for _ in range(N)]\nw1=wv[0][0]\nWlist=[j*(w1+i) for j in range(1,N+1) for i in range(3*j+1)]\nWlist=sorted(set(Wlist))\nLW=len(Wlist)\ndp=[[0]*LW for _ in range(N+1)]\n\n\nfor i in range(1,N+1):\n  w,v=wv[i-1]\n  for j in range(LW):\n    if w<=Wlist[j]:      \n      ind=bisect.bisect_right(Wlist,Wlist[j]-w)-1\n      dp[i][j]=max(dp[i-1][j],dp[i-1][ind]+v)\n    else:\n      dp[i][j]=dp[i-1][j]\n\nind=bisect.bisect_right(Wlist,W)-1\nprint(dp[N][ind])```\n "
    },
    {
        "user_id": "u119714109",
        "problem_id": "p03326",
        "submission1_id": "s972054209",
        "code_content": "\nimport sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\nn, m = na()\n\nzs = []\nfor i in range(n):\n    zs.append(na())\n\nans = 0\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        for k in range(n):\n            if i == k or j == k:\n                continue\n            vs = []\n            for z in zs:\n                vs.append(z[0]*zs[i][0]*zs[j][0]*zs[k][0] + z[1]*zs[i][1]*zs[j][1]*zs[k][1] + z[2]*zs[i][2]*zs[j][2]*zs[k][2])\n            vs.sort()\n            ans = max(ans, sum(vs[-m:]))\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\nn, m = na()\n\nzs = []\nfor i in range(n):\n    zs.append(na())\n\nans = 0\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        for k in range(n):\n            if i == k or j == k:\n                continue\n            vs = []\n            for z in zs:\n                vs.append(z[0]*zs[i][0]*zs[j][0]*zs[k][0] + z[1]*zs[i][1]*zs[j][1]*zs[k][1] + z[2]*zs[i][2]*zs[j][2]*zs[k][2])\n            vs.sort()\n            ans = max(ans, sum(vs[-m:]))\n\nprint(ans)```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p03296",
        "submission1_id": "s445967406",
        "code_content": "\nfrom sys import stdin\n\n\ndef get(l, r):\n    for i in range(1, 10001):\n        if i != l and i != r:\n            return i\n    assert False, 'damepo'\n\n\ndef main():\n    N = int(stdin.readline().rstrip())\n    a = [int(x) for x in stdin.readline().rstrip().split()]\n    count = 0\n    for i in range(N - 1):\n        l = a[i]\n        r = a[i + 1]\n        if l != r:\n            continue\n        x = get(l, r)\n        count += 1\n        a[i + 1] = x\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nfrom sys import stdin\n\n\ndef get(l, r):\n    for i in range(1, 10001):\n        if i != l and i != r:\n            return i\n    assert False, 'damepo'\n\n\ndef main():\n    N = int(stdin.readline().rstrip())\n    a = [int(x) for x in stdin.readline().rstrip().split()]\n    count = 0\n    for i in range(N - 1):\n        l = a[i]\n        r = a[i + 1]\n        if l != r:\n            continue\n        x = get(l, r)\n        count += 1\n        a[i + 1] = x\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u200785298",
        "problem_id": "p03096",
        "submission1_id": "s213854701",
        "code_content": "\n\nimport sys\n\nMOD = 1000000007  \n\ndef solve(N, C):\n    last = [-1] * N\n    pairs = []\n    for i, c in enumerate(C):\n        try:\n            prev = last[c - 1]\n        except:\n            if c > N:\n                return\n            else:\n                raise Exception()\n        if prev >= 0 and prev < i - 1:\n            pairs.append((prev, i))\n        last[c - 1] = i\n    pairs.sort()\n    count = [0] * N\n    count[0] = 1\n    idx = 0\n    for i in range(N):\n        if i > 0:\n            count[i] += count[i - 1]\n            count[i] %= MOD\n        while idx < len(pairs) and pairs[idx][0] == i:\n            count[pairs[idx][1]] += count[i]\n            count[pairs[idx][1]] %= MOD\n            idx += 1\n    print(count[N - 1])\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    C = [ int(next(tokens)) for _ in range(N) ]  \n    solve(N, C)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\n\nMOD = 1000000007  \n\ndef solve(N, C):\n    last = [-1] * N\n    pairs = []\n    for i, c in enumerate(C):\n        try:\n            prev = last[c - 1]\n        except:\n            if c > N:\n                return\n            else:\n                raise Exception()\n        if prev >= 0 and prev < i - 1:\n            pairs.append((prev, i))\n        last[c - 1] = i\n    pairs.sort()\n    count = [0] * N\n    count[0] = 1\n    idx = 0\n    for i in range(N):\n        if i > 0:\n            count[i] += count[i - 1]\n            count[i] %= MOD\n        while idx < len(pairs) and pairs[idx][0] == i:\n            count[pairs[idx][1]] += count[i]\n            count[pairs[idx][1]] %= MOD\n            idx += 1\n    print(count[N - 1])\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    C = [ int(next(tokens)) for _ in range(N) ]  \n    solve(N, C)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u597456301",
        "problem_id": "p02917",
        "submission1_id": "s216038409",
        "code_content": "\n\nn=int(input())\nb=input()\n\nb=b.split()\n\nb=list(map(int,b))\na=list()\na.append(b[0])\nfor i in range(1,len(b)):\n    \n    \n    a.append(max(b[i],a[i-1]))\nif(n>2):\n    a.append(max(b[len(b)-1],a[len(a)-2]))\nsum=0 \nfor i in range(len(a)):\n    sum+=a[i]\nprint(sum)\n",
        "origin_generated_text": "\n```\n\nn=int(input())\nb=input()\n\nb=b.split()\n\nb=list(map(int,b))\na=list()\na.append(b[0])\nfor i in range(1,len(b)):\n    \n    \n    a.append(max(b[i],a[i-1]))\nif(n>2):\n    a.append(max(b[len(b)-1],a[len(a)-2]))\nsum=0 \nfor i in range(len(a)):\n    sum+=a[i]\nprint(sum)\n```\n "
    },
    {
        "user_id": "u546968095",
        "problem_id": "p02407",
        "submission1_id": "s037718921",
        "code_content": "\ninput()\nprint(*input().split()[::-1])\n",
        "origin_generated_text": "\n```\ninput()\nprint(*input().split()[::-1])\n```\n "
    },
    {
        "user_id": "u716611746",
        "problem_id": "p03041",
        "submission1_id": "s858323890",
        "code_content": "\nimport sys\n\n\ndef main():\n\n    N, K = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    S = list(sys.stdin.readline().rstrip())\n\n    S_new = []\n    for i, s in enumerate(S):\n        if i + 1 == K:\n            s = s.lower()\n        S_new.append(s)\n\n    print(\"\".join(S_new))\n\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\nimport sys\n\n\ndef main():\n\n    N, K = [int(x) for x in sys.stdin.readline().rstrip().split()]\n    S = list(sys.stdin.readline().rstrip())\n\n    S_new = []\n    for i, s in enumerate(S):\n        if i + 1 == K:\n            s = s.lower()\n        S_new.append(s)\n\n    print(\"\".join(S_new))\n\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u401487574",
        "problem_id": "p03613",
        "submission1_id": "s399541319",
        "code_content": "\nma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nn = ni()\nA = lma()\nl = max(A)\ncnts = [0 for i in range(l+1)]\nfor a in A:\n    cnts[a]+=1\n    cnts[a-1] +=1\n    cnts[a+1] +=1\nprint(max(cnts))\n",
        "origin_generated_text": "\n```\nma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nn = ni()\nA = lma()\nl = max(A)\ncnts = [0 for i in range(l+1)]\nfor a in A:\n    cnts[a]+=1\n    cnts[a-1] +=1\n    cnts[a+1] +=1\nprint(max(cnts))\n```\n "
    },
    {
        "user_id": "u150984829",
        "problem_id": "p02243",
        "submission1_id": "s529914353",
        "code_content": "\nfrom heapq import*\nn=int(input())\nA=[[]for _ in[0]*n]\nfor _ in[0]*n:\n e=list(map(int,input().split()))\n for i in range(e[1]):k=2*-~i;A[e[0]]+=[(e[k],e[k+1])]\nH=[[0,0]]\nd=[0]+[1e6]*n\nc=[1]*n\nwhile H:\n f=heappop(H)\n u=f[1]\n c[u]=0\n if d[u]>=f[0]:\n  for s in A[u]:\n   v=s[0]\n   if c[v]and d[v]>d[u]+s[1]:\n    d[v]=d[u]+s[1]\n    heappush(H,[d[v],v])\nfor i in range(n):print(i,d[i])\n",
        "origin_generated_text": "\n```\nfrom heapq import*\nn=int(input())\nA=[[]for _ in[0]*n]\nfor _ in[0]*n:\n e=list(map(int,input().split()))\n for i in range(e[1]):k=2*-~i;A[e[0]]+=[(e[k],e[k+1])]\nH=[[0,0]]\nd=[0]+[1e6]*n\nc=[1]*n\nwhile H:\n f=heappop(H)\n u=f[1]\n c[u]=0\n if d[u]>=f[0]:\n  for s in A[u]:\n   v=s[0]\n   if c[v]and d[v]>d[u]+s[1]:\n    d[v]=d[u]+s[1]\n    heappush(H,[d[v],v])\nfor i in range(n):print(i,d[i])\n```\n "
    },
    {
        "user_id": "u508486691",
        "problem_id": "p03008",
        "submission1_id": "s817165127",
        "code_content": "\nimport sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[] for _ in range(num)]\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n\n\nN = Line(I(),3)\nA = Line(I(),3)\nB = Line(I(),3)\n\ndp = [0]*(N[0]+1)\nfor i in range(N[0]+1):\n    for j in range(3):\n        if i-A[j][0]>=0:\n            dp[i] = max(dp[i-A[j][0]]+B[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = N[0]-i+dp[i]\n\nprint(max(dp))",
        "origin_generated_text": "\n```\nimport sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[] for _ in range(num)]\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n\n\nN = Line(I(),3)\nA = Line(I(),3)\nB = Line(I(),3)\n\ndp = [0]*(N[0]+1)\nfor i in range(N[0]+1):\n    for j in range(3):\n        if i-A[j][0]>=0:\n            dp[i] = max(dp[i-A[j][0]]+B[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = N[0]-i+dp[i]\n\nprint(max(dp))```\n "
    },
    {
        "user_id": "u312025627",
        "problem_id": "p03729",
        "submission1_id": "s171821827",
        "code_content": "\na, b, c = (i for i in input().split())\nprint(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"NO\")",
        "origin_generated_text": "\n```\na, b, c = (i for i in input().split())\nprint(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"NO\")```\n "
    },
    {
        "user_id": "u210440747",
        "problem_id": "p03054",
        "submission1_id": "s101002671",
        "code_content": "\n\n\n\ndef main():\n  L, R, U, D = 0, 1, 2, 3\n  h, w, n = map(int, input().split())\n  sr, sc = map(int, input().split())\n  ls = input().strip()[::-1]\n  lt = input().strip()[::-1]\n  r = [0, w-1, 0, h-1]\n  \n  def f(d, x):\n    if d=='L':\n      r[L] = (max(0, r[L]-x) )\n    if d=='R':\n      r[R] = (max(0, r[R]+x) )\n    if d=='U':\n      r[U] = (max(0, r[U]-x) )\n    if d=='D':\n      r[D] = (max(0, r[D]+x) )\n      \n  def check():\n    if r[L] <= r[R]:\n      return False\n    if r[U] <= r[D]:\n      return False\n    return True\n  \n  f(ls[0], 1)\n  for s, t in zip(ls[1:], lt[1:]):\n    f(t, -1)\n    f(s, 1)\n    if check():\n      print('NO')\n      return\n  print('YES')\n \nif __name__=='__main__':\n  main()\n\n",
        "origin_generated_text": "\n```\n\n\n\ndef main():\n  L, R, U, D = 0, 1, 2, 3\n  h, w, n = map(int, input().split())\n  sr, sc = map(int, input().split())\n  ls = input().strip()[::-1]\n  lt = input().strip()[::-1]\n  r = [0, w-1, 0, h-1]\n  \n  def f(d, x):\n    if d=='L':\n      r[L] = (max(0, r[L]-x) )\n    if d=='R':\n      r[R] = (max(0, r[R]+x) )\n    if d=='U':\n      r[U] = (max(0, r[U]-x) )\n    if d=='D':\n      r[D] = (max(0, r[D]+x) )\n      \n  def check():\n    if r[L] <= r[R]:\n      return False\n    if r[U] <= r[D]:\n      return False\n    return True\n  \n  f(ls[0], 1)\n  for s, t in zip(ls[1:], lt[1:]):\n    f(t, -1)\n    f(s, 1)\n    if check():\n      print('NO')\n      return\n  print('YES')\n \nif __name__=='__main__':\n  main()\n\n```\n "
    },
    {
        "user_id": "u780475861",
        "problem_id": "p03475",
        "submission1_id": "s631227566",
        "code_content": "\nimport sys\n\nn = int(input())\nlst = []\nfor _ in range(n - 1):\n  lst.append([int(i) for i in input().split()])\n\ndef time_cost(i, now, lst):\n  if i == n - 1:\n    return now\n  if now >= lst[i][1]:\n    now += (now - lst[i][1]) % lst[i][2] + lst[i][0]\n  else:\n    now = lst[i][1] + lst[i][0]\n  return time_cost(i+1, now, lst)\n\nfor i in range(n):\n  print(time_cost(i, 0, lst))\n",
        "origin_generated_text": "\n```\nimport sys\n\nn = int(input())\nlst = []\nfor _ in range(n - 1):\n  lst.append([int(i) for i in input().split()])\n\ndef time_cost(i, now, lst):\n  if i == n - 1:\n    return now\n  if now >= lst[i][1]:\n    now += (now - lst[i][1]) % lst[i][2] + lst[i][0]\n  else:\n    now = lst[i][1] + lst[i][0]\n  return time_cost(i+1, now, lst)\n\nfor i in range(n):\n  print(time_cost(i, 0, lst))\n```\n "
    },
    {
        "user_id": "u311636831",
        "problem_id": "p03998",
        "submission1_id": "s068872313",
        "code_content": "\nA=list(input())\nB=list(input())\nC=list(input())\n\ni=0\nj=0\nk=0\nc=0\nwhile(True):\n    if(c==0):\n        if(A[i]==\"a\"):\n            i+=1\n            c=0\n        elif(A[i]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n\n    elif(c==1):\n        if(B[j]==\"a\"):\n            i+=1\n            c=0\n        elif(B[j]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n    else:\n        if(C[k]==\"a\"):\n            i+=1\n            c=0\n        elif(C[k]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n\n    if(i==len(A)):\n        print(\"A\")\n        exit()\n    if(j==len(B)):\n        print(\"B\")\n        exit()\n    if(k==len(C)):\n        print(\"C\")\n        exit()",
        "origin_generated_text": "\n```\nA=list(input())\nB=list(input())\nC=list(input())\n\ni=0\nj=0\nk=0\nc=0\nwhile(True):\n    if(c==0):\n        if(A[i]==\"a\"):\n            i+=1\n            c=0\n        elif(A[i]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n\n    elif(c==1):\n        if(B[j]==\"a\"):\n            i+=1\n            c=0\n        elif(B[j]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n    else:\n        if(C[k]==\"a\"):\n            i+=1\n            c=0\n        elif(C[k]==\"b\"):\n            j+=1\n            c=1\n        else:\n            k+=1\n            c=2\n\n    if(i==len(A)):\n        print(\"A\")\n        exit()\n    if(j==len(B)):\n        print(\"B\")\n        exit()\n    if(k==len(C)):\n        print(\"C\")\n        exit()```\n "
    },
    {
        "user_id": "u332793228",
        "problem_id": "p03206",
        "submission1_id": "s437951803",
        "code_content": "\nprint(\"Christmas\"+\" Eve\"*(25-int(input())))",
        "origin_generated_text": "\n```\nprint(\"Christmas\"+\" Eve\"*(25-int(input())))```\n "
    },
    {
        "user_id": "u572144347",
        "problem_id": "p03734",
        "submission1_id": "s546487923",
        "code_content": "\nN,W=map(int,input().split())\nwv=[ tuple([int(j) for j in input().split()]) for _ in range(N) ]\nw1=wv[0][0]\nw2=w1+1\nw3=w1+2 \nw4=w1+3\n\nwv=sorted(wv,key=lambda x:x[1],reverse=True)\nwvv = list(map(lambda x:x[1], wv))\n\n\ninf = float(\"inf\")\nans=0\nfrom collections import defaultdict\ncounter = defaultdict(int)\n\nfor i in range(N):\n    w,v = wv[i]\n    counter[w] += 1\n\nfrom bisect import bisect_left as bll\n\nfor e1 in range(0, counter[w1]+1):\n  for e2 in range(0, counter[w2]+1):\n    for e3 in range(0,counter[w3]+1):\n      for e4 in range(0, counter[w4]+1):\n          tmp=0\n\n          if w1*e1 + w2*e2 + w3*e3 + w4*e4 > W:\n              continue\n\n          i1=bll(wv, (w1,-inf))\n          i2=bll(wv, (w2,-inf))\n          i3=bll(wv, (w3,-inf))\n          i4=bll(wv, (w4,-inf))\n\n          tmp= tmp \\\n             +sum(wvv[i1:i1+e1])  \\\n             +sum(wvv[i2:i2+e2])  \\\n             +sum(wvv[i3:i3+e3])  \\\n             +sum(wvv[i4:i4+e4])\n\n          ans=max(ans,tmp)\n      \nprint(ans)\n\n",
        "origin_generated_text": "\n```\nN,W=map(int,input().split())\nwv=[ tuple([int(j) for j in input().split()]) for _ in range(N) ]\nw1=wv[0][0]\nw2=w1+1\nw3=w1+2 \nw4=w1+3\n\nwv=sorted(wv,key=lambda x:x[1],reverse=True)\nwvv = list(map(lambda x:x[1], wv))\n\n\ninf = float(\"inf\")\nans=0\nfrom collections import defaultdict\ncounter = defaultdict(int)\n\nfor i in range(N):\n    w,v = wv[i]\n    counter[w] += 1\n\nfrom bisect import bisect_left as bll\n\nfor e1 in range(0, counter[w1]+1):\n  for e2 in range(0, counter[w2]+1):\n    for e3 in range(0,counter[w3]+1):\n      for e4 in range(0, counter[w4]+1):\n          tmp=0\n\n          if w1*e1 + w2*e2 + w3*e3 + w4*e4 > W:\n              continue\n\n          i1=bll(wv, (w1,-inf))\n          i2=bll(wv, (w2,-inf))\n          i3=bll(wv, (w3,-inf))\n          i4=bll(wv, (w4,-inf))\n\n          tmp= tmp \\\n             +sum(wvv[i1:i1+e1])  \\\n             +sum(wvv[i2:i2+e2])  \\\n             +sum(wvv[i3:i3+e3])  \\\n             +sum(wvv[i4:i4+e4])\n\n          ans=max(ans,tmp)\n      \nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s482927256",
        "code_content": "\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  elif cou >= 0 and lis[i] == \"p\":\n    cou -= 1\n    ans += 1\n  else:\n    cou += 1\nprint(ans)",
        "origin_generated_text": "\n```\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  elif cou >= 0 and lis[i] == \"p\":\n    cou -= 1\n    ans += 1\n  else:\n    cou += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u197078193",
        "problem_id": "p02959",
        "submission1_id": "s517429160",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    if A[i] > B[i]:\n        ans += B[i]\n        A[i] -= B[i]\n        B[i] -= B[i]\n    else:\n        ans += A[i]\n        B[i] -= A[i]\n        A[i] -= A[i]\n    if A[i+1] > B[i]:\n        ans += B[i]\n        A[i+1] -= B[i]\n        B[i] -= B[i]\n    else:\n        ans += A[i+1]\n        B[i] -= A[i+1]\n        A[i+1] -= A[i+1]\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    if A[i] > B[i]:\n        ans += B[i]\n        A[i] -= B[i]\n        B[i] -= B[i]\n    else:\n        ans += A[i]\n        B[i] -= A[i]\n        A[i] -= A[i]\n    if A[i+1] > B[i]:\n        ans += B[i]\n        A[i+1] -= B[i]\n        B[i] -= B[i]\n    else:\n        ans += A[i+1]\n        B[i] -= A[i+1]\n        A[i+1] -= A[i+1]\nprint(ans)\n```\n "
    },
    {
        "user_id": "u313452574",
        "problem_id": "p03729",
        "submission1_id": "s856640919",
        "code_content": "\nA , B , C = input().split()\n\nif A[-1] == B[0] and B[-1] == C[0]:\n    print(\"YES\")\n\nelse:\n    print(\"NO\")",
        "origin_generated_text": "\n```\nA , B , C = input().split()\n\nif A[-1] == B[0] and B[-1] == C[0]:\n    print(\"YES\")\n\nelse:\n    print(\"NO\")```\n "
    },
    {
        "user_id": "u838869282",
        "problem_id": "p02880",
        "submission1_id": "s766715710",
        "code_content": "\na=int(input())\nfor i in range(1,10):\n  if a%i==0:\n    for j in range(1,10):\n      if a==i*j:\n        print('Yes')\n        exit()\n  else:\n    continue\nelse:\n  print('No')",
        "origin_generated_text": "\n```\na=int(input())\nfor i in range(1,10):\n  if a%i==0:\n    for j in range(1,10):\n      if a==i*j:\n        print('Yes')\n        exit()\n  else:\n    continue\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p03965",
        "submission1_id": "s493659686",
        "code_content": "\nimport sys,collections as cl,bisect as bs\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nmod = 10**9+7\nMax = sys.maxsize\ndef l(): \n    return list(map(int,input().split()))\ndef m(): \n    return map(int,input().split())\ndef onem(): \n    return int(input())\ndef s(x): \n    a = []\n    if len(x) == 0:\n        return []\n    aa = x[0]\n    su = 1\n    for i in range(len(x)-1):\n        if aa != x[i+1]:\n            a.append([aa,su])\n            aa = x[i+1]\n            su = 1\n        else:\n            su += 1\n    a.append([aa,su])\n    return a\ndef jo(x): \n    return \" \".join(map(str,x))\ndef max2(x): \n    return max(map(max,x))\ndef In(x,a): \n    k = bs.bisect_left(a,x)\n    if k != len(a) and a[k] ==  x:\n        return True\n    else:\n        return False\n\ndef pow_k(x, n):\n    ans = 1\n    while n:\n        if n % 2:\n            ans *= x\n        x *= x\n        n >>= 1\n    return ans\n\n\n\ns = input()[:-1]\n\nja = [[0,0] for i in range(len(s))]\n\nfor i in range(len(s)):\n    if s[i] == \"g\":\n        ja[i][0] = ja[i-1][0] + 1\n        ja[i][1] = ja[i-1][1]\n    else:\n        ja[i][0] = ja[i-1][0]\n        ja[i][1] = ja[i-1][1] + 1\n\nco = 0\n\nfor i in range(len(s)-1,-1,-1):\n    if s[i] == \"g\":\n        if ja[i][0] - ja[i][1] - co > 0:\n            co += 1\n        else:\n            co = 0\n    else:\n        co = 0\n\nprint(co)\n\n",
        "origin_generated_text": "\n```\nimport sys,collections as cl,bisect as bs\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nmod = 10**9+7\nMax = sys.maxsize\ndef l(): \n    return list(map(int,input().split()))\ndef m(): \n    return map(int,input().split())\ndef onem(): \n    return int(input())\ndef s(x): \n    a = []\n    if len(x) == 0:\n        return []\n    aa = x[0]\n    su = 1\n    for i in range(len(x)-1):\n        if aa != x[i+1]:\n            a.append([aa,su])\n            aa = x[i+1]\n            su = 1\n        else:\n            su += 1\n    a.append([aa,su])\n    return a\ndef jo(x): \n    return \" \".join(map(str,x))\ndef max2(x): \n    return max(map(max,x))\ndef In(x,a): \n    k = bs.bisect_left(a,x)\n    if k != len(a) and a[k] ==  x:\n        return True\n    else:\n        return False\n\ndef pow_k(x, n):\n    ans = 1\n    while n:\n        if n % 2:\n            ans *= x\n        x *= x\n        n >>= 1\n    return ans\n\n\n\ns = input()[:-1]\n\nja = [[0,0] for i in range(len(s))]\n\nfor i in range(len(s)):\n    if s[i] == \"g\":\n        ja[i][0] = ja[i-1][0] + 1\n        ja[i][1] = ja[i-1][1]\n    else:\n        ja[i][0] = ja[i-1][0]\n        ja[i][1] = ja[i-1][1] + 1\n\nco = 0\n\nfor i in range(len(s)-1,-1,-1):\n    if s[i] == \"g\":\n        if ja[i][0] - ja[i][1] - co > 0:\n            co += 1\n        else:\n            co = 0\n    else:\n        co = 0\n\nprint(co)\n\n```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p02912",
        "submission1_id": "s826672032",
        "code_content": "\nfrom sys import stdin\nfrom bisect import bisect_left\n\n\ndef main():\n    N, M = [int(x) for x in stdin.readline().rstrip().split()]\n    As = [int(x) for x in stdin.readline().rstrip().split()]\n    As.sort()\n    for _ in range(M):\n        x = As[-1] / 2\n        y = bisect_left(As, x)\n        del As[y]\n    print(sum(As))\n\n\nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\nfrom sys import stdin\nfrom bisect import bisect_left\n\n\ndef main():\n    N, M = [int(x) for x in stdin.readline().rstrip().split()]\n    As = [int(x) for x in stdin.readline().rstrip().split()]\n    As.sort()\n    for _ in range(M):\n        x = As[-1] / 2\n        y = bisect_left(As, x)\n        del As[y]\n    print(sum(As))\n\n\nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s365938545",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in range(1,10**4):\n    for j in range(1,10**4):\n        num = str(j)+\"9\"*i*3\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(num)\n\nfor i in list(reversed(ans))[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in range(1,10**4):\n    for j in range(1,10**4):\n        num = str(j)+\"9\"*i*3\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(num)\n\nfor i in list(reversed(ans))[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u201082459",
        "problem_id": "p03272",
        "submission1_id": "s974658603",
        "code_content": "\na,b = map(int,input().split())\nprint(a - b)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nprint(a - b)```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02854",
        "submission1_id": "s184619545",
        "code_content": "\nn = int(input())\nli = list(map(int,input().split()))\ns = sum(li)\nsum_li = []\nfor i,l in enumerate(li):\n    if i == 0:\n        sum_li.append(l)\n        continue\n    sum_li.append(sum_li[-1]+l)\nall_li = []\nfor ss in sum_li[1:]:\n    all_li.append(abs(s-ss))\nprint(min(all_li)+sum(li))\n",
        "origin_generated_text": "\n```\nn = int(input())\nli = list(map(int,input().split()))\ns = sum(li)\nsum_li = []\nfor i,l in enumerate(li):\n    if i == 0:\n        sum_li.append(l)\n        continue\n    sum_li.append(sum_li[-1]+l)\nall_li = []\nfor ss in sum_li[1:]:\n    all_li.append(abs(s-ss))\nprint(min(all_li)+sum(li))\n```\n "
    },
    {
        "user_id": "u663014688",
        "problem_id": "p03023",
        "submission1_id": "s220042959",
        "code_content": "\nn = int(input())\n\nprint((n-3)*180)",
        "origin_generated_text": "\n```\nn = int(input())\n\nprint((n-3)*180)```\n "
    },
    {
        "user_id": "u695079172",
        "problem_id": "p03796",
        "submission1_id": "s347141236",
        "code_content": "\nn = int(input())\ntemp = 1\n     \nfor i in range(1,n+1):\n  temp = temp * i\n  temp = temp % (10**9 + 7)\n     \nprint(temp % (10 ** 9 + 7))\n",
        "origin_generated_text": "\n```\nn = int(input())\ntemp = 1\n     \nfor i in range(1,n+1):\n  temp = temp * i\n  temp = temp % (10**9 + 7)\n     \nprint(temp % (10 ** 9 + 7))\n```\n "
    },
    {
        "user_id": "u837811962",
        "problem_id": "p02469",
        "submission1_id": "s261624434",
        "code_content": "\ndef GCD(x,y):\n    r = x%y\n    if r == 0:\n        return y\n    else:\n        return GCD(y,r)\n\n\nn = int(input())\nlist1 = list(map(int,input().split()))\nresult = list1[0]\nfor i in list1[1:]:\n    result = result*i/GCD(i,result)\n\nprint(int(result))",
        "origin_generated_text": "\n```\ndef GCD(x,y):\n    r = x%y\n    if r == 0:\n        return y\n    else:\n        return GCD(y,r)\n\n\nn = int(input())\nlist1 = list(map(int,input().split()))\nresult = list1[0]\nfor i in list1[1:]:\n    result = result*i/GCD(i,result)\n\nprint(int(result))```\n "
    },
    {
        "user_id": "u683391968",
        "problem_id": "p02742",
        "submission1_id": "s482116495",
        "code_content": "\nvalue = input().split()\nrows = int(value[0])\ncolmuns = int(value[1])\nOddColNum = colmuns \nEvenColNum = OddColNum\nif (colmuns % 2) != 0:\n  OddColNum = OddColNum + 1\n\nEvenRowCount = rows \nif (EvenRowCount % 2) != 0:\n  EvenRowCount = EvenRowCount + 1\n\ncounts = (EvenRowCount * OddColNum) + (EvenRowCount * EvenColNum)\nprint(counts)",
        "origin_generated_text": "\n```\nvalue = input().split()\nrows = int(value[0])\ncolmuns = int(value[1])\nOddColNum = colmuns \nEvenColNum = OddColNum\nif (colmuns % 2) != 0:\n  OddColNum = OddColNum + 1\n\nEvenRowCount = rows \nif (EvenRowCount % 2) != 0:\n  EvenRowCount = EvenRowCount + 1\n\ncounts = (EvenRowCount * OddColNum) + (EvenRowCount * EvenColNum)\nprint(counts)```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p03480",
        "submission1_id": "s279526645",
        "code_content": "\nS = input()\nN = len(S)\nans = 10 ** 6\nfor k in range(N - 1):\n    if S[k] != S[k + 1]:\n        ans = min(ans, max(k + 1, N - k - 1))\n        \nif ans != 10 ** 6:\n    print(ans)\nelse:\n    print(N)",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\nans = 10 ** 6\nfor k in range(N - 1):\n    if S[k] != S[k + 1]:\n        ans = min(ans, max(k + 1, N - k - 1))\n        \nif ans != 10 ** 6:\n    print(ans)\nelse:\n    print(N)```\n "
    },
    {
        "user_id": "u382423941",
        "problem_id": "p02954",
        "submission1_id": "s891300542",
        "code_content": "\ns = input()\nn = len(s)\n\ndef solve(s, c1, c2):\n    res = [0] * (n)\n    odd = 0\n    even = 0\n    for i in range(n):\n        if s[i] == c1:\n            if i % 2 == 1:\n                odd += 1\n            else:\n                even += 1\n        if s[i] == c2:\n            if i % 2 == 1:\n                res[i] += odd\n                res[i-1] += even\n            else:\n                res[i] += even\n                res[i-1] += odd\n            odd, even = 0, 0\n    return res\n\nA = solve(s, 'R', 'L')\nB = solve(s[::-1], 'L', 'R')[::-1]\nans = [a+b for a, b in zip(A,B)]\nprint(*ans)",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\n\ndef solve(s, c1, c2):\n    res = [0] * (n)\n    odd = 0\n    even = 0\n    for i in range(n):\n        if s[i] == c1:\n            if i % 2 == 1:\n                odd += 1\n            else:\n                even += 1\n        if s[i] == c2:\n            if i % 2 == 1:\n                res[i] += odd\n                res[i-1] += even\n            else:\n                res[i] += even\n                res[i-1] += odd\n            odd, even = 0, 0\n    return res\n\nA = solve(s, 'R', 'L')\nB = solve(s[::-1], 'L', 'R')[::-1]\nans = [a+b for a, b in zip(A,B)]\nprint(*ans)```\n "
    },
    {
        "user_id": "u699699071",
        "problem_id": "p03479",
        "submission1_id": "s023614447",
        "code_content": "\nX,Y=map(int,input().split())\nresult=0\nwhile X<=Y :\n    X*=2\n    result+=1\nprint(result)",
        "origin_generated_text": "\n```\nX,Y=map(int,input().split())\nresult=0\nwhile X<=Y :\n    X*=2\n    result+=1\nprint(result)```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02633",
        "submission1_id": "s056242420",
        "code_content": "\nx=int(input(\"\"))\nimport math\na=math.gcd(360,x)\nprint(int(360*x/a/a+0.5))",
        "origin_generated_text": "\n```\nx=int(input(\"\"))\nimport math\na=math.gcd(360,x)\nprint(int(360*x/a/a+0.5))```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03568",
        "submission1_id": "s155477142",
        "code_content": "\nn=int(input())\ns=input().split()\nx=1\nfor i in s:\n if(int(i)%2==0):\n  x*=2\nprint(2**n-x+1)",
        "origin_generated_text": "\n```\nn=int(input())\ns=input().split()\nx=1\nfor i in s:\n if(int(i)%2==0):\n  x*=2\nprint(2**n-x+1)```\n "
    },
    {
        "user_id": "u471684875",
        "problem_id": "p03041",
        "submission1_id": "s123809757",
        "code_content": "\nn,k=map(int,input().split())\ns=str(input())\n\n\nprint(s[:k-1]+s[k-1].lower()+s[k:])",
        "origin_generated_text": "\n```\nn,k=map(int,input().split())\ns=str(input())\n\n\nprint(s[:k-1]+s[k-1].lower()+s[k:])```\n "
    },
    {
        "user_id": "u568576853",
        "problem_id": "p03546",
        "submission1_id": "s732554837",
        "code_content": "\nh,w=map(int,input().split())\nwlist=[[[0]*10 for _ in range(10)] for _ in range(10)]\nfor i in range(10):\n    b=list(map(int,input().split()))\n    for j in range(10):\n        wlist[i][j]=b[j]\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            wlist[i][k]=min(wlist[i][k],wlist[i][j]+wlist[j][k])\nans=0\nfor _ in range(h):\n    t=list(map(int,input().split()))\n    for i in t:\n        if i==-1 or i==1:\n            continue\n        else:\n            ans+=wlist[i][1]\nprint(ans)",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nwlist=[[[0]*10 for _ in range(10)] for _ in range(10)]\nfor i in range(10):\n    b=list(map(int,input().split()))\n    for j in range(10):\n        wlist[i][j]=b[j]\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            wlist[i][k]=min(wlist[i][k],wlist[i][j]+wlist[j][k])\nans=0\nfor _ in range(h):\n    t=list(map(int,input().split()))\n    for i in t:\n        if i==-1 or i==1:\n            continue\n        else:\n            ans+=wlist[i][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u542645301",
        "problem_id": "p00006",
        "submission1_id": "s607480231",
        "code_content": "\nprint(input()[::-1])",
        "origin_generated_text": "\n```\nprint(input()[::-1])```\n "
    },
    {
        "user_id": "u374802266",
        "problem_id": "p03563",
        "submission1_id": "s626516618",
        "code_content": "\nprint(-2*int(input())+int(input())+1)",
        "origin_generated_text": "\n```\nprint(-2*int(input())+int(input())+1)```\n "
    },
    {
        "user_id": "u246661425",
        "problem_id": "p03943",
        "submission1_id": "s060875300",
        "code_content": "\na, b, c = map(int, input().split())\nif a + b == c or a + c ==b or b + c == a:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\na, b, c = map(int, input().split())\nif a + b == c or a + c ==b or b + c == a:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u614181788",
        "problem_id": "p02580",
        "submission1_id": "s944788569",
        "code_content": "\nh,w,m = map(int,input().split())\nH = [0]*(h+1)\nW = [0]*(w+1)\ns = set([])\nfor i in range(m):\n    a,b = map(int,input().split())\n    s.add((a,b))\n\n    H[a] += 1\n    W[b] += 1\n\nx = [0]*(h+1)\ny = [0]*(w+1)\n    \nfor i in range(h+1):\n    x[i] = [i,H[i]]\nfor i in range(w+1):\n    y[i] = [i,W[i]]\n\nx.sort(key= lambda val : val[1],reverse=True)\ny.sort(key= lambda val : val[1],reverse=True)\n\nma = x[0][1]\nmb = y[0][1]\ni,j = 0,0\nsw = 0\nwhile 1:\n    if x[i][1] + y[j][1] != ma+mb:\n        break\n    \n    if x[i+1][1] != ma:\n        j += 1\n    else:\n        i += 1\nprint(ma+mb+sw-1)\n",
        "origin_generated_text": "\n```\nh,w,m = map(int,input().split())\nH = [0]*(h+1)\nW = [0]*(w+1)\ns = set([])\nfor i in range(m):\n    a,b = map(int,input().split())\n    s.add((a,b))\n\n    H[a] += 1\n    W[b] += 1\n\nx = [0]*(h+1)\ny = [0]*(w+1)\n    \nfor i in range(h+1):\n    x[i] = [i,H[i]]\nfor i in range(w+1):\n    y[i] = [i,W[i]]\n\nx.sort(key= lambda val : val[1],reverse=True)\ny.sort(key= lambda val : val[1],reverse=True)\n\nma = x[0][1]\nmb = y[0][1]\ni,j = 0,0\nsw = 0\nwhile 1:\n    if x[i][1] + y[j][1] != ma+mb:\n        break\n    \n    if x[i+1][1] != ma:\n        j += 1\n    else:\n        i += 1\nprint(ma+mb+sw-1)\n```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02954",
        "submission1_id": "s193103473",
        "code_content": "\nfrom collections import Counter\n\nS=input()\nn=len(S)\ndp=[[0]*n for _ in range(20)]\n\nfor i,s in enumerate(S):\n    dp[0][i]=i-1 if s =='L' else i+1\n\nfor k in range(19):\n    for i in range(n):\n        dp[k+1][i]=dp[k][dp[k][i]]\n\nC=Counter(dp[-1])\nprint(*[C[i] for i in range(n)])",
        "origin_generated_text": "\n```\nfrom collections import Counter\n\nS=input()\nn=len(S)\ndp=[[0]*n for _ in range(20)]\n\nfor i,s in enumerate(S):\n    dp[0][i]=i-1 if s =='L' else i+1\n\nfor k in range(19):\n    for i in range(n):\n        dp[k+1][i]=dp[k][dp[k][i]]\n\nC=Counter(dp[-1])\nprint(*[C[i] for i in range(n)])```\n "
    },
    {
        "user_id": "u051928503",
        "problem_id": "p02625",
        "submission1_id": "s637817224",
        "code_content": "\ndef makefac(n):\n    global faclist\n    faclist = [1, 1]\n    for i in range(2, n + 1):\n        faclist.append(faclist[-1] * i % MOD)\n    return None\ndef mcomb(n, r):\n    return faclist[n] * pow(faclist[r], MOD - 2, MOD) * pow(faclist[n-r], -1, MOD) % MOD\ndef mperm(n, r):\n    return faclist[n] * pow(faclist[n-r], MOD - 2, MOD)\n\nN, M = map(int, input().split())\nMOD = 10 ** 9 + 7\nmakefac(M)\nans = mperm(M, N)\nfor k in range(1, N + 1):\n    ans += ((-1)**k * mcomb(N, k) * mperm(M - k, N - k)) % MOD\nans = ans * mperm(M, N) % MOD\nprint(ans)\n",
        "origin_generated_text": "\n```\ndef makefac(n):\n    global faclist\n    faclist = [1, 1]\n    for i in range(2, n + 1):\n        faclist.append(faclist[-1] * i % MOD)\n    return None\ndef mcomb(n, r):\n    return faclist[n] * pow(faclist[r], MOD - 2, MOD) * pow(faclist[n-r], -1, MOD) % MOD\ndef mperm(n, r):\n    return faclist[n] * pow(faclist[n-r], MOD - 2, MOD)\n\nN, M = map(int, input().split())\nMOD = 10 ** 9 + 7\nmakefac(M)\nans = mperm(M, N)\nfor k in range(1, N + 1):\n    ans += ((-1)**k * mcomb(N, k) * mperm(M - k, N - k)) % MOD\nans = ans * mperm(M, N) % MOD\nprint(ans)\n```\n "
    },
    {
        "user_id": "u044220565",
        "problem_id": "p02746",
        "submission1_id": "s407158667",
        "code_content": "\n\nimport math\nQ = int(input())\nA = [list(map(int, input().split())) for _ in range(Q)]\n\n\n\ndef measure(A):\n    a,b,c,d = A\n    if abs(a-c) < abs(b-d):\n        s1, s2 = min([a,c]), max([a,c])\n        l1, l2 = min([b,d]), max([b,d])\n    else:\n        l1, l2 = min([a,c]), max([a,c])\n        s1, s2 = min([b,d]), max([b,d])\n    min_K = int(math.log(s2-s1+1, 3) + 1)\n    max_K = int(math.log(l2-l1+1, 3) + 1)\n    for k in list(range(min_K, max_K+1))[::-1]:\n        v = 3 ** k\n        _l = 3 ** (k-1) + 1\n        _h = (3 ** (k-1)) * 2\n        c1 = s1\n        c2 = (s1 % v <= _h) & (_l <= s1 % v)\n        c3 = (s2 % v <= _h) & (_l <= s2 % v)\n        if c1 & c2 & c3 & (s1 % v != s2 % v):\n            val1 = (s1 % v - _l + 1) + (s2 % v - _l + 1) + (l2 - l1)\n            val2 = (_h - s1 % v + 1) + (_h - s2 % v + 1) + (l2 - l1)\n            print(min([val1, val2]))\n            return None\n    print(l2-l1+s2-s1)\n\nif __name__ == '__main__':\n    for val in A:\n        measure(val)",
        "origin_generated_text": "\n```\n\nimport math\nQ = int(input())\nA = [list(map(int, input().split())) for _ in range(Q)]\n\n\n\ndef measure(A):\n    a,b,c,d = A\n    if abs(a-c) < abs(b-d):\n        s1, s2 = min([a,c]), max([a,c])\n        l1, l2 = min([b,d]), max([b,d])\n    else:\n        l1, l2 = min([a,c]), max([a,c])\n        s1, s2 = min([b,d]), max([b,d])\n    min_K = int(math.log(s2-s1+1, 3) + 1)\n    max_K = int(math.log(l2-l1+1, 3) + 1)\n    for k in list(range(min_K, max_K+1))[::-1]:\n        v = 3 ** k\n        _l = 3 ** (k-1) + 1\n        _h = (3 ** (k-1)) * 2\n        c1 = s1\n        c2 = (s1 % v <= _h) & (_l <= s1 % v)\n        c3 = (s2 % v <= _h) & (_l <= s2 % v)\n        if c1 & c2 & c3 & (s1 % v != s2 % v):\n            val1 = (s1 % v - _l + 1) + (s2 % v - _l + 1) + (l2 - l1)\n            val2 = (_h - s1 % v + 1) + (_h - s2 % v + 1) + (l2 - l1)\n            print(min([val1, val2]))\n            return None\n    print(l2-l1+s2-s1)\n\nif __name__ == '__main__':\n    for val in A:\n        measure(val)```\n "
    },
    {
        "user_id": "u414458988",
        "problem_id": "p03992",
        "submission1_id": "s806562459",
        "code_content": "\ns=input()\nprint(s[:4],' ',s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4],' ',s[4:])```\n "
    },
    {
        "user_id": "u589886885",
        "problem_id": "p02385",
        "submission1_id": "s797374878",
        "code_content": "\nclass Dice():\n\n    def __init__(self, label):\n        self.label = label\n\n    def north(self):\n        self.change([2, 6, 3, 4, 1, 5])\n\n    def west(self):\n        self.change([3, 2, 6, 1, 5, 4])\n\n    def east(self):\n        self.change([4, 2, 1, 6, 5, 3])\n\n    def south(self):\n        self.change([5, 1, 3, 4, 6, 2])\n\n    def change(self, convert):\n        num = []\n        for i in range(6):\n            num.append(self.label[convert[i] - 1])\n        self.label = num\n\n\ndef main():\n    f = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    dice = Dice(f)\n    labels = []\n    labels.append(dice.label)\n    dice.north()\n    labels.append(dice.label)\n    dice.west()\n    labels.append(dice.label)\n    dice.east()\n    labels.append(dice.label)\n    dice.south()\n    labels.append(dice.label)\n    if s in labels:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nclass Dice():\n\n    def __init__(self, label):\n        self.label = label\n\n    def north(self):\n        self.change([2, 6, 3, 4, 1, 5])\n\n    def west(self):\n        self.change([3, 2, 6, 1, 5, 4])\n\n    def east(self):\n        self.change([4, 2, 1, 6, 5, 3])\n\n    def south(self):\n        self.change([5, 1, 3, 4, 6, 2])\n\n    def change(self, convert):\n        num = []\n        for i in range(6):\n            num.append(self.label[convert[i] - 1])\n        self.label = num\n\n\ndef main():\n    f = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    dice = Dice(f)\n    labels = []\n    labels.append(dice.label)\n    dice.north()\n    labels.append(dice.label)\n    dice.west()\n    labels.append(dice.label)\n    dice.east()\n    labels.append(dice.label)\n    dice.south()\n    labels.append(dice.label)\n    if s in labels:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u778720350",
        "problem_id": "p03998",
        "submission1_id": "s383212962",
        "code_content": "\na = input()\nb = input()\nc = input()\n\ncards = {'a': a, 'b': b, 'c': c}\nturn = 'a'\n\nwhile True:\n    if len(cards[turn]) == 0:\n        print('A')\n        break\n    draw = cards[turn][0]\n    cards[turn] = cards[turn][1:]\n    turn = draw\n",
        "origin_generated_text": "\n```\na = input()\nb = input()\nc = input()\n\ncards = {'a': a, 'b': b, 'c': c}\nturn = 'a'\n\nwhile True:\n    if len(cards[turn]) == 0:\n        print('A')\n        break\n    draw = cards[turn][0]\n    cards[turn] = cards[turn][1:]\n    turn = draw\n```\n "
    },
    {
        "user_id": "u666221014",
        "problem_id": "p02407",
        "submission1_id": "s647521891",
        "code_content": "\nn = int(input())\nprint(\" \".join(reversed(input().split())))",
        "origin_generated_text": "\n```\nn = int(input())\nprint(\" \".join(reversed(input().split())))```\n "
    },
    {
        "user_id": "u136086822",
        "problem_id": "p02642",
        "submission1_id": "s909577456",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nMAX = int(1e6) + 10\nsieve = [0] * int(MAX)\nfor i in a:\n    sieve[i] += 1\nans = 0\nfor idx, val in enumerate(sieve):\n    if val == 0:\n        continue\n    for i in range(idx * 2, MAX, idx):\n        sieve[i] = 0\n    if val > 1:\n        sieve[idx] = 0\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nMAX = int(1e6) + 10\nsieve = [0] * int(MAX)\nfor i in a:\n    sieve[i] += 1\nans = 0\nfor idx, val in enumerate(sieve):\n    if val == 0:\n        continue\n    for i in range(idx * 2, MAX, idx):\n        sieve[i] = 0\n    if val > 1:\n        sieve[idx] = 0\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u175426149",
        "problem_id": "p03274",
        "submission1_id": "s162465095",
        "code_content": "\nN, K = map(int, input().split())\n\nX = list(map(int, input().split()))\n\ndef calc_time(X):\n    x_max = max(X)\n    x_min = min(X)\n\n    if x_max * x_min >= 0:\n        if abs(x_max) > abs(x_min):\n            return x_max\n        else:\n            return abs(x_min)\n    else:\n        return x_max - x_min + min(abs(x_max), abs(x_min))\n\ndef calc_start_and_goal_position(index):\n    if index - K >= 0:\n        start_index = index - K\n    else:\n        start_index = 0\n    \n    if N > index + K:\n        goal_index = index + K\n    else:\n        goal_index = N\n    \n    return start_index, goal_index\n\nif __name__ == \"__main__\":\n    index = -1\n    for i, x in enumerate(X):\n        if x >= 0:\n            index = i \n    if index == -1:\n        index = i\n    start_index, goal_index = calc_start_and_goal_position(index)\n\n    time_min = float('inf')\n    for i in range(start_index, goal_index):\n        time = calc_time(X[i:i+K+1])\n        if time < time_min:\n            time_min = time\n\n    print(time_min)",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\n\nX = list(map(int, input().split()))\n\ndef calc_time(X):\n    x_max = max(X)\n    x_min = min(X)\n\n    if x_max * x_min >= 0:\n        if abs(x_max) > abs(x_min):\n            return x_max\n        else:\n            return abs(x_min)\n    else:\n        return x_max - x_min + min(abs(x_max), abs(x_min))\n\ndef calc_start_and_goal_position(index):\n    if index - K >= 0:\n        start_index = index - K\n    else:\n        start_index = 0\n    \n    if N > index + K:\n        goal_index = index + K\n    else:\n        goal_index = N\n    \n    return start_index, goal_index\n\nif __name__ == \"__main__\":\n    index = -1\n    for i, x in enumerate(X):\n        if x >= 0:\n            index = i \n    if index == -1:\n        index = i\n    start_index, goal_index = calc_start_and_goal_position(index)\n\n    time_min = float('inf')\n    for i in range(start_index, goal_index):\n        time = calc_time(X[i:i+K+1])\n        if time < time_min:\n            time_min = time\n\n    print(time_min)```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p03103",
        "submission1_id": "s839803871",
        "code_content": "\n\nimport sys\n\nimport heapq\nimport re\nimport bisect\nimport random\nimport math\nimport itertools\nfrom collections import defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import *\n\na, b = map(int, input().split())\nd = []\nfor i in range(a):\n    x, y = map(int, input().split())\n    d.append((x, y))\nd.sort()\ncount = 0\nfor i in d:\n    if b <= i[1]:\n        count += max(b, 0) * i[0]\n        break\n    else:\n        count += i[1] * i[0]\n        b -= i[1]\nprint(count)",
        "origin_generated_text": "\n```\n\nimport sys\n\nimport heapq\nimport re\nimport bisect\nimport random\nimport math\nimport itertools\nfrom collections import defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import *\n\na, b = map(int, input().split())\nd = []\nfor i in range(a):\n    x, y = map(int, input().split())\n    d.append((x, y))\nd.sort()\ncount = 0\nfor i in d:\n    if b <= i[1]:\n        count += max(b, 0) * i[0]\n        break\n    else:\n        count += i[1] * i[0]\n        b -= i[1]\nprint(count)```\n "
    },
    {
        "user_id": "u922952729",
        "problem_id": "p02699",
        "submission1_id": "s950544554",
        "code_content": "\nS,W=[int(i) for i in input().split(\" \")]\nif W>=S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")",
        "origin_generated_text": "\n```\nS,W=[int(i) for i in input().split(\" \")]\nif W>=S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")```\n "
    },
    {
        "user_id": "u770293614",
        "problem_id": "p02553",
        "submission1_id": "s762983715",
        "code_content": "\na,b,c,d=map(int,input().split(\" \"))\np=max(a*c,b*c,a*d,b*d)\nprint(p)\n",
        "origin_generated_text": "\n```\na,b,c,d=map(int,input().split(\" \"))\np=max(a*c,b*c,a*d,b*d)\nprint(p)\n```\n "
    },
    {
        "user_id": "u659753499",
        "problem_id": "p03326",
        "submission1_id": "s351183166",
        "code_content": "\nN,M=map(int,input().split())\ncakes=[]\nfor i in range(N):\n  x,y,z=map(int,input().split())\n  cakes.append([x,y,z])\nscore=[0]*8\nscore[0]=sum(sorted(map(lambda c: c[0]+c[1]+c[2], cakes))[-M:])\nscore[1]=sum(sorted(map(lambda c: c[0]+c[1]-c[2], cakes))[-M:])\nscore[2]=sum(sorted(map(lambda c: c[0]-c[1]+c[2], cakes))[-M:])\nscore[3]=sum(sorted(map(lambda c: c[0]-c[1]-c[2], cakes))[-M:])\nscore[4]=sum(sorted(map(lambda c:-c[0]+c[1]+c[2], cakes))[-M:])\nscore[5]=sum(sorted(map(lambda c:-c[0]+c[1]-c[2], cakes))[-M:])\nscore[6]=sum(sorted(map(lambda c:-c[0]-c[1]+c[2], cakes))[-M:])\nscore[7]=sum(sorted(map(lambda c:-c[0]-c[1]-c[2], cakes))[-M:])\nprint(max(score))\n",
        "origin_generated_text": "\n```\nN,M=map(int,input().split())\ncakes=[]\nfor i in range(N):\n  x,y,z=map(int,input().split())\n  cakes.append([x,y,z])\nscore=[0]*8\nscore[0]=sum(sorted(map(lambda c: c[0]+c[1]+c[2], cakes))[-M:])\nscore[1]=sum(sorted(map(lambda c: c[0]+c[1]-c[2], cakes))[-M:])\nscore[2]=sum(sorted(map(lambda c: c[0]-c[1]+c[2], cakes))[-M:])\nscore[3]=sum(sorted(map(lambda c: c[0]-c[1]-c[2], cakes))[-M:])\nscore[4]=sum(sorted(map(lambda c:-c[0]+c[1]+c[2], cakes))[-M:])\nscore[5]=sum(sorted(map(lambda c:-c[0]+c[1]-c[2], cakes))[-M:])\nscore[6]=sum(sorted(map(lambda c:-c[0]-c[1]+c[2], cakes))[-M:])\nscore[7]=sum(sorted(map(lambda c:-c[0]-c[1]-c[2], cakes))[-M:])\nprint(max(score))\n```\n "
    },
    {
        "user_id": "u658905620",
        "problem_id": "p02633",
        "submission1_id": "s817415968",
        "code_content": "\nX=int(input())\nK=0\na=0\nwhile True:\n  a+=X\n  K+=1\n  if a%360==0:\n    break\nprint(K)",
        "origin_generated_text": "\n```\nX=int(input())\nK=0\na=0\nwhile True:\n  a+=X\n  K+=1\n  if a%360==0:\n    break\nprint(K)```\n "
    },
    {
        "user_id": "u763291354",
        "problem_id": "p02742",
        "submission1_id": "s059169568",
        "code_content": "\nhw = list(map(int, input().split()))\n\nif hw[0] % 2 == 0 and hw[1] % 2 == 0:\n    count = hw[0] * hw[1] \nelif hw[0] % 2 != 0 and hw[1] % 2 == 0:\n    count = (hw[0] + 1) * hw[1] \nelif hw[0] % 2 == 0 and hw[1] % 2 != 0:\n    count = (hw[1] + 1) * hw[0] \nelse:\n    count = (hw[0] + 1) * (hw[1] + 1) \nprint(count)\n",
        "origin_generated_text": "\n```\nhw = list(map(int, input().split()))\n\nif hw[0] % 2 == 0 and hw[1] % 2 == 0:\n    count = hw[0] * hw[1] \nelif hw[0] % 2 != 0 and hw[1] % 2 == 0:\n    count = (hw[0] + 1) * hw[1] \nelif hw[0] % 2 == 0 and hw[1] % 2 != 0:\n    count = (hw[1] + 1) * hw[0] \nelse:\n    count = (hw[0] + 1) * (hw[1] + 1) \nprint(count)\n```\n "
    },
    {
        "user_id": "u777923818",
        "problem_id": "p03716",
        "submission1_id": "s435237666",
        "code_content": "\n\ndef inpl(): return list(map(int, input().split()))\nN = int(input())\nA = inpl()\n\nbefore = A[:N]\nmiddle = A[N:2*N:2]\nafter = A[2*N:]\n\nS_before = [0]\nS_after = [0]\n\nfor m in middle:\n    if before:\n        if before[0] < m:\n            S_before.append(S_before[-1] + m - before[0])\n            before.insert(0, m)\n        else:\n            S_before.append(S_before[-1])\n    else:\n        S_before.append(S_before[-1])\n\nfor m in middle[::-1]:\n    if after:\n        if after[-1] > m:\n            S_after.append(S_after[-1] - m + after[-1])\n            after.append(m)\n        else:\n            S_after.append(S_after[-1])\n    else:\n        S_after.append(S_after[-1])\n\nprint(max([b-a for b, a in zip(S_before, S_after[::-1])]))\n",
        "origin_generated_text": "\n```\n\ndef inpl(): return list(map(int, input().split()))\nN = int(input())\nA = inpl()\n\nbefore = A[:N]\nmiddle = A[N:2*N:2]\nafter = A[2*N:]\n\nS_before = [0]\nS_after = [0]\n\nfor m in middle:\n    if before:\n        if before[0] < m:\n            S_before.append(S_before[-1] + m - before[0])\n            before.insert(0, m)\n        else:\n            S_before.append(S_before[-1])\n    else:\n        S_before.append(S_before[-1])\n\nfor m in middle[::-1]:\n    if after:\n        if after[-1] > m:\n            S_after.append(S_after[-1] - m + after[-1])\n            after.append(m)\n        else:\n            S_after.append(S_after[-1])\n    else:\n        S_after.append(S_after[-1])\n\nprint(max([b-a for b, a in zip(S_before, S_after[::-1])]))\n```\n "
    },
    {
        "user_id": "u017415492",
        "problem_id": "p03625",
        "submission1_id": "s993952455",
        "code_content": "\nfrom collections import Counter\nn=int(input())\na=list(map(int,input().split()))\nx1=0\nx2=0\ncount=Counter(a)\nfor i in count:\n  if count[i]>=2:\n    if x1<=i:\n      x2=x1\n      x1=i\n    if x1>i and x2<i:\n      x2=i\nprint(x1*x2)\n",
        "origin_generated_text": "\n```\nfrom collections import Counter\nn=int(input())\na=list(map(int,input().split()))\nx1=0\nx2=0\ncount=Counter(a)\nfor i in count:\n  if count[i]>=2:\n    if x1<=i:\n      x2=x1\n      x1=i\n    if x1>i and x2<i:\n      x2=i\nprint(x1*x2)\n```\n "
    },
    {
        "user_id": "u591287669",
        "problem_id": "p03972",
        "submission1_id": "s095217309",
        "code_content": "\nw,h = map(int,input().split())\narr=[]\nfor i in range(w):\n    arr.append( (int(input()),'p') )\nfor i in range(h):\n    arr.append( (int(input()),'q') )\narr.sort()\nans=0\nfor a in arr:\n    if a[1]=='p':\n        ans+=a[0]*(h+1)\n        w-=1\n    else:\n        ans+=a[0]*(w+1)\n        h-=1\nprint(ans)\n",
        "origin_generated_text": "\n```\nw,h = map(int,input().split())\narr=[]\nfor i in range(w):\n    arr.append( (int(input()),'p') )\nfor i in range(h):\n    arr.append( (int(input()),'q') )\narr.sort()\nans=0\nfor a in arr:\n    if a[1]=='p':\n        ans+=a[0]*(h+1)\n        w-=1\n    else:\n        ans+=a[0]*(w+1)\n        h-=1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p02950",
        "submission1_id": "s462868094",
        "code_content": "\np = int(input())\na = list(map(int, input().split()))\nMOD = p\n\nP = p\nfact = [0] * P\nfact[0] = 1\nfor i in range(1, P):\n    fact[i] = fact[i - 1] * i\n    fact[i] %= MOD\n\nrfact = [0] * P\nrfact[P - 1] = pow(fact[P - 1], MOD - 2, MOD)\nfor i in range(P - 2, -1, -1):\n    rfact[i] = rfact[i + 1] * (i + 1)\n    rfact[i] %= MOD\n\n\ndef comb(n, k):\n    return fact[n] * rfact[n - k] * rfact[k] % MOD\n\n\nb = [0] * p\nfor i in range(p):\n    if a[i]:\n        b[0] += 1\n        b[0] %= MOD\n        s = 1\n        for j in range(p - 1, -1, -1):\n            b[j] -= comb(p - 1, j) * s\n            b[j] %= MOD\n            s *= -i\n            s %= MOD\n\nprint(*b)",
        "origin_generated_text": "\n```\np = int(input())\na = list(map(int, input().split()))\nMOD = p\n\nP = p\nfact = [0] * P\nfact[0] = 1\nfor i in range(1, P):\n    fact[i] = fact[i - 1] * i\n    fact[i] %= MOD\n\nrfact = [0] * P\nrfact[P - 1] = pow(fact[P - 1], MOD - 2, MOD)\nfor i in range(P - 2, -1, -1):\n    rfact[i] = rfact[i + 1] * (i + 1)\n    rfact[i] %= MOD\n\n\ndef comb(n, k):\n    return fact[n] * rfact[n - k] * rfact[k] % MOD\n\n\nb = [0] * p\nfor i in range(p):\n    if a[i]:\n        b[0] += 1\n        b[0] %= MOD\n        s = 1\n        for j in range(p - 1, -1, -1):\n            b[j] -= comb(p - 1, j) * s\n            b[j] %= MOD\n            s *= -i\n            s %= MOD\n\nprint(*b)```\n "
    },
    {
        "user_id": "u628538573",
        "problem_id": "p03296",
        "submission1_id": "s342930021",
        "code_content": "\nn = int(input())\na = input().split()\ncount = 0\nfor i in range(n - 1):\n\tif a[i] == a[i + 1]:\n\t\tif i + 1 < n - 1:\n\t\t\tif a[i] != 1 and a[i + 2] != 1:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 2 and a[i + 2] != 2:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 3 and a[i + 2] != 3:\n\t\t\t\ta[i + 1] = 3\n\t\t\t\tcount += 1\n\n\t\tif i == n - 2:\n\t\t\tif a[i] == 1:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telse:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\nprint(count)",
        "origin_generated_text": "\n```\nn = int(input())\na = input().split()\ncount = 0\nfor i in range(n - 1):\n\tif a[i] == a[i + 1]:\n\t\tif i + 1 < n - 1:\n\t\t\tif a[i] != 1 and a[i + 2] != 1:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 2 and a[i + 2] != 2:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 3 and a[i + 2] != 3:\n\t\t\t\ta[i + 1] = 3\n\t\t\t\tcount += 1\n\n\t\tif i == n - 2:\n\t\t\tif a[i] == 1:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telse:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\nprint(count)```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s655410722",
        "code_content": "\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i][j][k] and j + 1 <= 300:\n                    dp[i + 1][j + 1][k] = max(dp[i + 1][j + 1][k], dp[i][j][k - w] + v)\n                else:\n                    dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n            else:\n                dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n",
        "origin_generated_text": "\n```\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i][j][k] and j + 1 <= 300:\n                    dp[i + 1][j + 1][k] = max(dp[i + 1][j + 1][k], dp[i][j][k - w] + v)\n                else:\n                    dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n            else:\n                dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s505491395",
        "code_content": "\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra + rb) ** 2\n    dr = (ra-rb) ** 2\n\n    if d1 <= d2:\n        if dr >= d2:\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra + rb) ** 2\n    dr = (ra-rb) ** 2\n\n    if d1 <= d2:\n        if dr >= d2:\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03952",
        "submission1_id": "s003476739",
        "code_content": "\nN,x=map(int,input().split())\nif x==1 or x==2*N-1:\n    print('No')\n    exit()\nif N==2:\n    print('Yes')\n    print(*[1,2,3],sep='\\n')\n    exit()\ns=set(range(1,2*N))\ns.remove(x)\nans=[0]*(2*N-1)\nans[N-1]=x\nmin1=min(s)\nmax1=max(s)\ns.remove(min1);s.remove(max1)\nif x==2*N-2:\n    min2=min(s)\n    s.remove(min2)\n    ans[N-2]=min1;ans[N]=max1;ans[N+1]=min2\nelse:\n    max2=max(s)\n    s.remove(max2)\n    ans[N-2]=max1;ans[N]=min1;ans[N+1]=max2\nli=list(s)\nfor i in range(2*N-1):\n    if ans[i]==0:\n        ans[i]=li.pop()\nprint(\"Yes\")\nprint(*ans,sep='\\n')",
        "origin_generated_text": "\n```\nN,x=map(int,input().split())\nif x==1 or x==2*N-1:\n    print('No')\n    exit()\nif N==2:\n    print('Yes')\n    print(*[1,2,3],sep='\\n')\n    exit()\ns=set(range(1,2*N))\ns.remove(x)\nans=[0]*(2*N-1)\nans[N-1]=x\nmin1=min(s)\nmax1=max(s)\ns.remove(min1);s.remove(max1)\nif x==2*N-2:\n    min2=min(s)\n    s.remove(min2)\n    ans[N-2]=min1;ans[N]=max1;ans[N+1]=min2\nelse:\n    max2=max(s)\n    s.remove(max2)\n    ans[N-2]=max1;ans[N]=min1;ans[N+1]=max2\nli=list(s)\nfor i in range(2*N-1):\n    if ans[i]==0:\n        ans[i]=li.pop()\nprint(\"Yes\")\nprint(*ans,sep='\\n')```\n "
    },
    {
        "user_id": "u557642273",
        "problem_id": "p02767",
        "submission1_id": "s426054177",
        "code_content": "\nif __name__ == '__main__':\n  num_resident = int(input())\n  x_list = [int(a) for a in input().split()]\n  min_x = min(x_list)\n  max_x = max(x_list)\n  \n  fin_ps = pow(max_x, 2)\n  for i in range(min_x, max_x + 1):\n    sum_ps = 0\n    for x in x_list:\n      sum_ps += pow((x - i), 2)\n    if(sum_ps < fin_ps):\n      fin_ps = sum_ps\n  \n  print(fin_ps)\n",
        "origin_generated_text": "\n```\nif __name__ == '__main__':\n  num_resident = int(input())\n  x_list = [int(a) for a in input().split()]\n  min_x = min(x_list)\n  max_x = max(x_list)\n  \n  fin_ps = pow(max_x, 2)\n  for i in range(min_x, max_x + 1):\n    sum_ps = 0\n    for x in x_list:\n      sum_ps += pow((x - i), 2)\n    if(sum_ps < fin_ps):\n      fin_ps = sum_ps\n  \n  print(fin_ps)\n```\n "
    },
    {
        "user_id": "u826331398",
        "problem_id": "p02880",
        "submission1_id": "s001622303",
        "code_content": "\nimport itertools\n\n\ndef read():\n    N = int(input())\n\n    return N,\n\n\ndef solve(N, ):\n    for i in range(9):\n        a = i + 1\n        for j in range(9):\n            b = j + 1\n            if a * b == N:\n                return \"Yes\"\n    return \"No\"\n\n\nif __name__ == '__main__':\n    input = read()\n    print(solve(*input))",
        "origin_generated_text": "\n```\nimport itertools\n\n\ndef read():\n    N = int(input())\n\n    return N,\n\n\ndef solve(N, ):\n    for i in range(9):\n        a = i + 1\n        for j in range(9):\n            b = j + 1\n            if a * b == N:\n                return \"Yes\"\n    return \"No\"\n\n\nif __name__ == '__main__':\n    input = read()\n    print(solve(*input))```\n "
    },
    {
        "user_id": "u692453235",
        "problem_id": "p02959",
        "submission1_id": "s470649740",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ncount = 0\nad = 0\n\nfor i in range(N):\n  if A[i] <= B[i] + ad:\n    count += A[i]\n    ad = max(0, B[i] + ad - A[i])\n    \n  else:\n    count += B[i] + ad\n    ad = 0\n    \n\ncount += min(A[N], ad)     \n\nprint(count)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ncount = 0\nad = 0\n\nfor i in range(N):\n  if A[i] <= B[i] + ad:\n    count += A[i]\n    ad = max(0, B[i] + ad - A[i])\n    \n  else:\n    count += B[i] + ad\n    ad = 0\n    \n\ncount += min(A[N], ad)     \n\nprint(count)```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s292708701",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nta = a + []\nres = pow(10, 10)\nbs = pow(10, 10)\nfor x in sorted(set(a)):\n  t = [[]]\n  for i in range(N):\n    if ta[i] == bs:\n      if t[-1] != []:\n        t.append([])\n    else: t[-1].append(a[i])\n  tt = []\n  for i in range(len(t)):\n    t[i].sort()\n    for j in range(len(t[i]) - K + 1):\n      tt.append(t[i][j])\n  if len(tt) < Q: break\n  tt.sort()\n  res = min(res, tt[Q - 1] - tt[0])\n  \n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j < N:\n          ta[j] = bs\n  \nprint(res)\n",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nta = a + []\nres = pow(10, 10)\nbs = pow(10, 10)\nfor x in sorted(set(a)):\n  t = [[]]\n  for i in range(N):\n    if ta[i] == bs:\n      if t[-1] != []:\n        t.append([])\n    else: t[-1].append(a[i])\n  tt = []\n  for i in range(len(t)):\n    t[i].sort()\n    for j in range(len(t[i]) - K + 1):\n      tt.append(t[i][j])\n  if len(tt) < Q: break\n  tt.sort()\n  res = min(res, tt[Q - 1] - tt[0])\n  \n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j < N:\n          ta[j] = bs\n  \nprint(res)\n```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03054",
        "submission1_id": "s406345178",
        "code_content": "\nfrom sys import exit\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\nul = 1\ndl = H\nrl = W\nll = 1\nfor s, t in zip(S[::-1], T[::-1]):\n    if s == 'U':\n        ul += 1\n    elif s == 'D':\n        dl -= 1\n    elif s == 'L':\n        ll += 1\n    else:\n        rl -= 1\n    if t == 'U':\n        dl = min(H, dl+1)\n    elif t == 'D':\n        ul = max(1, ul-1)\n    elif t == 'L':\n        rl = min(W, rl+1)\n    else:\n        ll = max(1, ll-1)\n    if ul > dl or ll > rl or ul == H + 1 or dl == 0 or ll == W + 1 or rl == 0:\n        print('NO')\n        exit()\ns = S[0]\nif s == 'U':\n    ul += 1\nelif s == 'D':\n    dl -= 1\nelif s == 'L':\n    ll += 1\nelse:\n    rl -= 1\n\nif ul <= sr <= dl and ll <= sc <= rl:\n    print('YES')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\nfrom sys import exit\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\nul = 1\ndl = H\nrl = W\nll = 1\nfor s, t in zip(S[::-1], T[::-1]):\n    if s == 'U':\n        ul += 1\n    elif s == 'D':\n        dl -= 1\n    elif s == 'L':\n        ll += 1\n    else:\n        rl -= 1\n    if t == 'U':\n        dl = min(H, dl+1)\n    elif t == 'D':\n        ul = max(1, ul-1)\n    elif t == 'L':\n        rl = min(W, rl+1)\n    else:\n        ll = max(1, ll-1)\n    if ul > dl or ll > rl or ul == H + 1 or dl == 0 or ll == W + 1 or rl == 0:\n        print('NO')\n        exit()\ns = S[0]\nif s == 'U':\n    ul += 1\nelif s == 'D':\n    dl -= 1\nelif s == 'L':\n    ll += 1\nelse:\n    rl -= 1\n\nif ul <= sr <= dl and ll <= sc <= rl:\n    print('YES')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s904263739",
        "code_content": "\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    if x==[0]*l:\n        c+=1\n    elif x==[1]*l:\n        c+=2\n    print(c%1000000007)\n",
        "origin_generated_text": "\n```\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    if x==[0]*l:\n        c+=1\n    elif x==[1]*l:\n        c+=2\n    print(c%1000000007)\n```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s111677964",
        "code_content": "\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y - X[P[j][a]]:\n            Y -= X[P[j][a]]\n            a = P[j][a]\n            num += 2 ** j\n    print(num)",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y - X[P[j][a]]:\n            Y -= X[P[j][a]]\n            a = P[j][a]\n            num += 2 ** j\n    print(num)```\n "
    },
    {
        "user_id": "u730769327",
        "problem_id": "p03796",
        "submission1_id": "s003080448",
        "code_content": "\nn=int(input())\nsum=1\nfor i in range(n):\n  sum*=i+1\n  sum=sum%(10**9+7)\n  \nprint(sum)",
        "origin_generated_text": "\n```\nn=int(input())\nsum=1\nfor i in range(n):\n  sum*=i+1\n  sum=sum%(10**9+7)\n  \nprint(sum)```\n "
    },
    {
        "user_id": "u284563808",
        "problem_id": "p03992",
        "submission1_id": "s164395746",
        "code_content": "\ns=input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u557171945",
        "problem_id": "p03087",
        "submission1_id": "s888404935",
        "code_content": "\nn,q = map(int,input().split())\nS = input()\ntb = [0 for i in range(n)]\nfor i in range(1,n):\n    if S[i]=='C':\n        tb[i] = tb[i-1]+1\n    else:\n        tb[i] = tb[i-1]\nfor i in range(q):\n    l,r = map(int,input().split())\n    print(tb[r-1]-tb[l-1])\n",
        "origin_generated_text": "\n```\nn,q = map(int,input().split())\nS = input()\ntb = [0 for i in range(n)]\nfor i in range(1,n):\n    if S[i]=='C':\n        tb[i] = tb[i-1]+1\n    else:\n        tb[i] = tb[i-1]\nfor i in range(q):\n    l,r = map(int,input().split())\n    print(tb[r-1]-tb[l-1])\n```\n "
    },
    {
        "user_id": "u538632589",
        "problem_id": "p03087",
        "submission1_id": "s684832909",
        "code_content": "\nn, q = [int(i) for i in input().split()]\ns = input()\nl_list = []\nr_list = []\nfor i in range(q):\n    l, r = [int(i) for i in input().split()]\n    l_list.append(l)\n    r_list.append(r)\n\nac_map = [0 for i in range(n+1)]\nfor i in range(1, n+1):\n    if s[i-1:i+1] == \"AC\":\n        ac_map[i] = ac_map[i-1] +1\n    else:\n        ac_map[i] = ac_map[i-1]\nfor i in range(q):\n    ans = ac_map[r_list[i]-1] - ac_map[l_list[i]-1]\n    print(ans)",
        "origin_generated_text": "\n```\nn, q = [int(i) for i in input().split()]\ns = input()\nl_list = []\nr_list = []\nfor i in range(q):\n    l, r = [int(i) for i in input().split()]\n    l_list.append(l)\n    r_list.append(r)\n\nac_map = [0 for i in range(n+1)]\nfor i in range(1, n+1):\n    if s[i-1:i+1] == \"AC\":\n        ac_map[i] = ac_map[i-1] +1\n    else:\n        ac_map[i] = ac_map[i-1]\nfor i in range(q):\n    ans = ac_map[r_list[i]-1] - ac_map[l_list[i]-1]\n    print(ans)```\n "
    },
    {
        "user_id": "u797798686",
        "problem_id": "p02642",
        "submission1_id": "s494287652",
        "code_content": "\nfrom sys import stdin\ndata = stdin.readlines()\n\nn = int(data[0].split()[0])\na = [int(s) for s in data[1].split()]\na = sorted(a)\n\nmax = a[-1]\n\nl = [0]*(max+1)\n\nfor i in a:\n    l[i] += 1\n    if l[i] == 1:\n        for j in range(i*2,max+1,i):\n            l[j] = 2\nprint(l.count(1))",
        "origin_generated_text": "\n```\nfrom sys import stdin\ndata = stdin.readlines()\n\nn = int(data[0].split()[0])\na = [int(s) for s in data[1].split()]\na = sorted(a)\n\nmax = a[-1]\n\nl = [0]*(max+1)\n\nfor i in a:\n    l[i] += 1\n    if l[i] == 1:\n        for j in range(i*2,max+1,i):\n            l[j] = 2\nprint(l.count(1))```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p02919",
        "submission1_id": "s395818034",
        "code_content": "\ndef main():\n    class unionfind():\n        \n        def __init__(self,size):\n            self.size=size\n            self.tree=[i for i in range(self.size)]\n        \n        \n        def root(self,index):\n            temp_list=[]\n            temp=self.tree[index]\n            while index!=temp:\n                temp_list.append(index)\n                index=temp\n                temp=self.tree[index]\n            for i in temp_list:\n                self.tree[i]=index\n            return index\n        \n        \n        def unite_r(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            if r1<r2:\n                self.tree[r1]=r2\n            else:\n                self.tree[r2]=r1\n\n        def unite_l(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            if r1>r2:\n                self.tree[r1]=r2\n            else:\n                self.tree[r2]=r1\n\n        \n        def same(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            return r1==r2\n    \n    \n    n=int(input())\n    a=list(map(int,input().split()))\n    d=[0]*n\n    for i,j in enumerate(a):\n        d[j-1]=i+2\n    vis=[False]*(n+4)\n    u_r=unionfind(n+4)\n    u_l=unionfind(n+4)\n    ans=0\n    for j,i in enumerate(d[:-1]):\n        vis[i]=True\n        if vis[i+1]==True:\n            u_r.unite_r(i,i+1)\n            k1=u_r.root(i+1)+1\n        else:\n            k1=i+1\n        if vis[k1+1]==True:\n            cnt1=u_r.root(k1+1)+1\n        else:\n            cnt1=k1+1\n        cnt1=min(cnt1,n+2)\n        if vis[i-1]==True:\n            u_l.unite_l(i,i-1)\n            k2=u_l.root(i-1)-1\n        else:\n            k2=i-1\n        if vis[k2-1]==True:\n            cnt2=u_l.root(k2-1)-1\n        else:\n            cnt2=k2-1\n        cnt2=max(cnt2,1)\n        ans+=((k2-cnt2)*(k1-i)+(cnt1-k1)*(i-k2))*(j+1)\n    print(ans)\nmain()",
        "origin_generated_text": "\n```\ndef main():\n    class unionfind():\n        \n        def __init__(self,size):\n            self.size=size\n            self.tree=[i for i in range(self.size)]\n        \n        \n        def root(self,index):\n            temp_list=[]\n            temp=self.tree[index]\n            while index!=temp:\n                temp_list.append(index)\n                index=temp\n                temp=self.tree[index]\n            for i in temp_list:\n                self.tree[i]=index\n            return index\n        \n        \n        def unite_r(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            if r1<r2:\n                self.tree[r1]=r2\n            else:\n                self.tree[r2]=r1\n\n        def unite_l(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            if r1>r2:\n                self.tree[r1]=r2\n            else:\n                self.tree[r2]=r1\n\n        \n        def same(self,index1,index2):\n            r1=self.root(index1)\n            r2=self.root(index2)\n            return r1==r2\n    \n    \n    n=int(input())\n    a=list(map(int,input().split()))\n    d=[0]*n\n    for i,j in enumerate(a):\n        d[j-1]=i+2\n    vis=[False]*(n+4)\n    u_r=unionfind(n+4)\n    u_l=unionfind(n+4)\n    ans=0\n    for j,i in enumerate(d[:-1]):\n        vis[i]=True\n        if vis[i+1]==True:\n            u_r.unite_r(i,i+1)\n            k1=u_r.root(i+1)+1\n        else:\n            k1=i+1\n        if vis[k1+1]==True:\n            cnt1=u_r.root(k1+1)+1\n        else:\n            cnt1=k1+1\n        cnt1=min(cnt1,n+2)\n        if vis[i-1]==True:\n            u_l.unite_l(i,i-1)\n            k2=u_l.root(i-1)-1\n        else:\n            k2=i-1\n        if vis[k2-1]==True:\n            cnt2=u_l.root(k2-1)-1\n        else:\n            cnt2=k2-1\n        cnt2=max(cnt2,1)\n        ans+=((k2-cnt2)*(k1-i)+(cnt1-k1)*(i-k2))*(j+1)\n    print(ans)\nmain()```\n "
    },
    {
        "user_id": "u467307100",
        "problem_id": "p03102",
        "submission1_id": "s319271473",
        "code_content": "\nn ,m, c = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int,input().split())) for i in range(n)] \n    \n\ncount = 0\nfor i in A:\n  numberSum = 0\n  for a, b in zip(i, B):\n    numberSum += (a * b)  \n  if numberSum > 0:\n    count += 1\nprint(count)",
        "origin_generated_text": "\n```\nn ,m, c = map(int, input().split())\nB = list(map(int, input().split()))\nA = [list(map(int,input().split())) for i in range(n)] \n    \n\ncount = 0\nfor i in A:\n  numberSum = 0\n  for a, b in zip(i, B):\n    numberSum += (a * b)  \n  if numberSum > 0:\n    count += 1\nprint(count)```\n "
    },
    {
        "user_id": "u432805419",
        "problem_id": "p03729",
        "submission1_id": "s765819899",
        "code_content": "\na,b,c = input().split()\nif a[-1] == b[0] and b[-1] == c[0]:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
        "origin_generated_text": "\n```\na,b,c = input().split()\nif a[-1] == b[0] and b[-1] == c[0]:\n  print(\"YES\")\nelse:\n  print(\"NO\")```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s388372414",
        "code_content": "\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] += dp[i][j][k] % m\n      dp[i+1][j][k+2*j] += dp[i][j][k] % m\n      dp[i+1][j][k+2*j] += 2*j * dp[i][j][k] % m\n      if j > 0:\n        dp[i+1][j-1][k+2*(j-1)] += j*j * dp[i][j][k] % m\nprint(int(dp[N][0][K] % m))\n",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] += dp[i][j][k] % m\n      dp[i+1][j][k+2*j] += dp[i][j][k] % m\n      dp[i+1][j][k+2*j] += 2*j * dp[i][j][k] % m\n      if j > 0:\n        dp[i+1][j-1][k+2*(j-1)] += j*j * dp[i][j][k] % m\nprint(int(dp[N][0][K] % m))\n```\n "
    },
    {
        "user_id": "u901122076",
        "problem_id": "p03106",
        "submission1_id": "s525617759",
        "code_content": "\nA, B, K = map(int, input().split())\n\nmax_num = max(A, B)\ncount = 0\n\nfor i in range(max_num, 0, -1):\n    if A % i == 0 and B % i == 0:\n        count += 1\n        if count == K:\n            break\n\nprint(i)",
        "origin_generated_text": "\n```\nA, B, K = map(int, input().split())\n\nmax_num = max(A, B)\ncount = 0\n\nfor i in range(max_num, 0, -1):\n    if A % i == 0 and B % i == 0:\n        count += 1\n        if count == K:\n            break\n\nprint(i)```\n "
    },
    {
        "user_id": "u826263061",
        "problem_id": "p03714",
        "submission1_id": "s513917148",
        "code_content": "\nimport heapq\nn = int(input())\na = list(map(int, input().split()))\n\na1 = a[:n]\nax = a[n:2*n]\na2 = list(map(lambda x: -x, a[2*n:]))\n\nsum_a1 = sum(a1)\nfdif1 = [sum_a1]\nheapq.heapify(a1)\nfor i in range(n):\n    p = heapq.heappushpop(a1,ax[i])\n    fdif1.append(fdif1[-1]+ax[i]-p)\n    \nsum_a2 = sum(a2)\nfdif2 = [sum_a2]\nheapq.heapify(a2)\nfor i in range(n):\n    p = heapq.heappushpop(a2,-ax[-1-i])\n    fdif2.append(fdif2[-1]-ax[-1-i]-p)\nfdif2.reverse()\n\nfdif = [fdif1[i]+fdif2[i] for i in range(n+1)]\nprint(max(fdif))",
        "origin_generated_text": "\n```\nimport heapq\nn = int(input())\na = list(map(int, input().split()))\n\na1 = a[:n]\nax = a[n:2*n]\na2 = list(map(lambda x: -x, a[2*n:]))\n\nsum_a1 = sum(a1)\nfdif1 = [sum_a1]\nheapq.heapify(a1)\nfor i in range(n):\n    p = heapq.heappushpop(a1,ax[i])\n    fdif1.append(fdif1[-1]+ax[i]-p)\n    \nsum_a2 = sum(a2)\nfdif2 = [sum_a2]\nheapq.heapify(a2)\nfor i in range(n):\n    p = heapq.heappushpop(a2,-ax[-1-i])\n    fdif2.append(fdif2[-1]-ax[-1-i]-p)\nfdif2.reverse()\n\nfdif = [fdif1[i]+fdif2[i] for i in range(n+1)]\nprint(max(fdif))```\n "
    },
    {
        "user_id": "u543954314",
        "problem_id": "p03959",
        "submission1_id": "s664450284",
        "code_content": "\nn = int(input())\nmount = [0]*n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmount[0] = a[0]\nmount[-1] = b[-1]\npat = 1\nmod = 10**9+7\nfor i in range(1,n):\n  if a[i] > a[i-1]:\n    if mount[i] != 0 and mount[i] != a[i]:\n      print(0)\n      exit()\n    else:\n      mount[i] = a[i]\n  if b[n-i-1] > b[n-i]:\n    if mount[n-i-1] != 0 and mount[n-i-1] != b[n-i-1]:\n      print(0)\n      exit()\n    else:\n      mount[n-i-1] = b[n-i-1]\nfor i in range(n):\n  if mount[i] == 0:\n    dx = 1\n    while mount[i+dx] == 0:\n      dx += 1\n    this = min(mount[i-1],mount[i+dx])\n    pat = pat*(this**dx)%mod\n    for j in range(dx):\n      mount[i+j] = this\na2 = [0]*n\nb2 = [0]*n\na2[0] = mount[0]\nb2[-1] = mount[-1]\nfor i in range(1,n):\n  a[i] = max(mount[i],a[i-1])\n  b[n-i-1] = max(mount[n-i-1],b[n-i])\nif a != a2 or b != b2:\n  print(0)\nelse:\n  print(pat)",
        "origin_generated_text": "\n```\nn = int(input())\nmount = [0]*n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nmount[0] = a[0]\nmount[-1] = b[-1]\npat = 1\nmod = 10**9+7\nfor i in range(1,n):\n  if a[i] > a[i-1]:\n    if mount[i] != 0 and mount[i] != a[i]:\n      print(0)\n      exit()\n    else:\n      mount[i] = a[i]\n  if b[n-i-1] > b[n-i]:\n    if mount[n-i-1] != 0 and mount[n-i-1] != b[n-i-1]:\n      print(0)\n      exit()\n    else:\n      mount[n-i-1] = b[n-i-1]\nfor i in range(n):\n  if mount[i] == 0:\n    dx = 1\n    while mount[i+dx] == 0:\n      dx += 1\n    this = min(mount[i-1],mount[i+dx])\n    pat = pat*(this**dx)%mod\n    for j in range(dx):\n      mount[i+j] = this\na2 = [0]*n\nb2 = [0]*n\na2[0] = mount[0]\nb2[-1] = mount[-1]\nfor i in range(1,n):\n  a[i] = max(mount[i],a[i-1])\n  b[n-i-1] = max(mount[n-i-1],b[n-i])\nif a != a2 or b != b2:\n  print(0)\nelse:\n  print(pat)```\n "
    },
    {
        "user_id": "u121921603",
        "problem_id": "p03480",
        "submission1_id": "s648139217",
        "code_content": "\nS=input().strip()\nt=10**6\nfor i in range(1,len(S)):\n    if S[i-1]!=S[i]:\n        t=min(t,max(i,len(S)-i))\nif t==10**6:\n    print(len(S))\nelse:\n    print(t)\n",
        "origin_generated_text": "\n```\nS=input().strip()\nt=10**6\nfor i in range(1,len(S)):\n    if S[i-1]!=S[i]:\n        t=min(t,max(i,len(S)-i))\nif t==10**6:\n    print(len(S))\nelse:\n    print(t)\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s164191480",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(10)):\n    for j in reversed(range(1,10**4)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(10)):\n    for j in reversed(range(1,10**4)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u210440747",
        "problem_id": "p03054",
        "submission1_id": "s568595675",
        "code_content": "\n\n\n\ndef main():\n  L, R, U, D = 0, 1, 2, 3\n  h, w, n = map(int, input().split())\n  sr, sc = map(int, input().split())\n  ls = input().strip()[::-1]\n  lt = input().strip()[::-1]\n  r = [0, w-1, 0, h-1]\n  \n  def f(d, x):\n    if d=='L':\n      r[L] = (max(0, r[L]-x) )\n    if d=='R':\n      r[R] = (max(0, r[R]+x) )\n    if d=='U':\n      r[U] = (max(0, r[U]-x) )\n    if d=='D':\n      r[D] = (max(0, r[D]+x) )\n      \n  def check():\n    if r[L] <= r[R]:\n      return False\n    if r[U] <= r[D]:\n      return False\n    return True\n  \n  f(ls[0], 1)\n  for s, t in zip(ls[1:], lt[1:]):\n    f(s, 1)\n    f(t, -1)\n    if check():\n      print('NO')\n      return\n  print('YES')\n    \n    \n    \n\nif __name__=='__main__':\n  main()\n\n",
        "origin_generated_text": "\n```\n\n\n\ndef main():\n  L, R, U, D = 0, 1, 2, 3\n  h, w, n = map(int, input().split())\n  sr, sc = map(int, input().split())\n  ls = input().strip()[::-1]\n  lt = input().strip()[::-1]\n  r = [0, w-1, 0, h-1]\n  \n  def f(d, x):\n    if d=='L':\n      r[L] = (max(0, r[L]-x) )\n    if d=='R':\n      r[R] = (max(0, r[R]+x) )\n    if d=='U':\n      r[U] = (max(0, r[U]-x) )\n    if d=='D':\n      r[D] = (max(0, r[D]+x) )\n      \n  def check():\n    if r[L] <= r[R]:\n      return False\n    if r[U] <= r[D]:\n      return False\n    return True\n  \n  f(ls[0], 1)\n  for s, t in zip(ls[1:], lt[1:]):\n    f(s, 1)\n    f(t, -1)\n    if check():\n      print('NO')\n      return\n  print('YES')\n    \n    \n    \n\nif __name__=='__main__':\n  main()\n\n```\n "
    },
    {
        "user_id": "u135360096",
        "problem_id": "p02699",
        "submission1_id": "s985978979",
        "code_content": "\ns,w = map(int, input().split())\n \nprint(\"safe\" if w<s else \"unsafe\")",
        "origin_generated_text": "\n```\ns,w = map(int, input().split())\n \nprint(\"safe\" if w<s else \"unsafe\")```\n "
    },
    {
        "user_id": "u777148280",
        "problem_id": "p03023",
        "submission1_id": "s093064929",
        "code_content": "\n\nn = int(input())\nprint(int(360 - 360 / n))\n",
        "origin_generated_text": "\n```\n\nn = int(input())\nprint(int(360 - 360 / n))\n```\n "
    },
    {
        "user_id": "u579875569",
        "problem_id": "p03734",
        "submission1_id": "s927270180",
        "code_content": "\nN, W = list(map(int, input().split()))\n\nvalues = [[] for i in range(4)]\n\nw0, v0 = list(map(int, input().split()))\nvalues[0].append(v0)\n\nfor i in range(N-1):\n    w, v = list(map(int, input().split()))\n    values[w-w0].append(v)\n\nfor i in range(4):\n    values[i].sort(reverse=True)\n    for j in range(len(values[i])-1):\n        values[i][j+1] = values[i][j] + values[i][j+1]\n    values[i].append(0)\n\nres = 0\n\nfor i1 in range(len(values[0])+1):\n    for i2 in range(len(values[1])+1):\n        for i3 in range(len(values[2])+1):\n            for i4 in range(len(values[3])+1):\n                if(w0*i1 + (w0+1)*i2 + (w0+2)*i3 + (w0+3)*i4 <= W):\n                    res = max(res, values[0][i1-1] + values[1][i2-1] + values[2][i3-1] + values[3][i4-1])\n\nprint(res)",
        "origin_generated_text": "\n```\nN, W = list(map(int, input().split()))\n\nvalues = [[] for i in range(4)]\n\nw0, v0 = list(map(int, input().split()))\nvalues[0].append(v0)\n\nfor i in range(N-1):\n    w, v = list(map(int, input().split()))\n    values[w-w0].append(v)\n\nfor i in range(4):\n    values[i].sort(reverse=True)\n    for j in range(len(values[i])-1):\n        values[i][j+1] = values[i][j] + values[i][j+1]\n    values[i].append(0)\n\nres = 0\n\nfor i1 in range(len(values[0])+1):\n    for i2 in range(len(values[1])+1):\n        for i3 in range(len(values[2])+1):\n            for i4 in range(len(values[3])+1):\n                if(w0*i1 + (w0+1)*i2 + (w0+2)*i3 + (w0+3)*i4 <= W):\n                    res = max(res, values[0][i1-1] + values[1][i2-1] + values[2][i3-1] + values[3][i4-1])\n\nprint(res)```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03477",
        "submission1_id": "s386249722",
        "code_content": "\nA,B,C,D = map(int,input().split())\n\nr=A+B+C+D\nl=A+B+C+D\n\nif r>l:\n    print(\"Right\")\nelif l>r:\n    print(\"Left\")\nelse:\n    print(\"Balanced\")",
        "origin_generated_text": "\n```\nA,B,C,D = map(int,input().split())\n\nr=A+B+C+D\nl=A+B+C+D\n\nif r>l:\n    print(\"Right\")\nelif l>r:\n    print(\"Left\")\nelse:\n    print(\"Balanced\")```\n "
    },
    {
        "user_id": "u362104929",
        "problem_id": "p02385",
        "submission1_id": "s948747161",
        "code_content": "\nclass Dice:\n    def __init__(self):\n        self.state =[1, 2, 3, 4, 5, 6]\n\n    def setState(self, li):  \n        self.state = li\n\n    def move(self, str_direction):\n        if str_direction == \"N\":\n            self.state = [self.state[1], self.state[5],self.state[2],\n                          self.state[3], self.state[0], self.state[4]]\n        if str_direction == \"W\":\n            self.state = [self.state[2], self.state[1], self.state[5],\n                          self.state[0], self.state[4], self.state[3]]\n        if str_direction == \"E\":\n            self.state = [self.state[3], self.state[1], self.state[0],\n                          self.state[5], self.state[4], self.state[2]]\n        if str_direction == \"S\":\n            self.state = [self.state[4], self.state[0], self.state[2],\n                          self.state[3], self.state[5], self.state[1]]\n\n    def rotate(self):\n        self.state = [self.state[0], self.state[2], self.state[1],\n                      self.state[4], self.state[3], self.state[5]]\n        self.move(\"N\")\n\n    def sameDice1(self, dice1):\n        set1 = list()\n        for _ in range(4):\n            set1.append({self.state[0], self.state[1], self.state[2],\n                         self.state[3], self.state[4], self.state[5]})\n            self.move(\"N\")\n        d1 = {dice1.state[0], dice1.state[1], dice1.state[2],\n              dice1.state[3], dice1.state[4], dice1.state[5]}\n        if d1 in set1:\n            return \"Yes\"\n        return \"No\"\n\n\ndef main():\n    myd1, myd2 = Dice(), Dice()\n    myd1.setState(list(map(int, input().split())))\n    myd2.setState(list(map(int, input().split())))\n    print(myd1.sameDice1(myd2))\n    return\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\nclass Dice:\n    def __init__(self):\n        self.state =[1, 2, 3, 4, 5, 6]\n\n    def setState(self, li):  \n        self.state = li\n\n    def move(self, str_direction):\n        if str_direction == \"N\":\n            self.state = [self.state[1], self.state[5],self.state[2],\n                          self.state[3], self.state[0], self.state[4]]\n        if str_direction == \"W\":\n            self.state = [self.state[2], self.state[1], self.state[5],\n                          self.state[0], self.state[4], self.state[3]]\n        if str_direction == \"E\":\n            self.state = [self.state[3], self.state[1], self.state[0],\n                          self.state[5], self.state[4], self.state[2]]\n        if str_direction == \"S\":\n            self.state = [self.state[4], self.state[0], self.state[2],\n                          self.state[3], self.state[5], self.state[1]]\n\n    def rotate(self):\n        self.state = [self.state[0], self.state[2], self.state[1],\n                      self.state[4], self.state[3], self.state[5]]\n        self.move(\"N\")\n\n    def sameDice1(self, dice1):\n        set1 = list()\n        for _ in range(4):\n            set1.append({self.state[0], self.state[1], self.state[2],\n                         self.state[3], self.state[4], self.state[5]})\n            self.move(\"N\")\n        d1 = {dice1.state[0], dice1.state[1], dice1.state[2],\n              dice1.state[3], dice1.state[4], dice1.state[5]}\n        if d1 in set1:\n            return \"Yes\"\n        return \"No\"\n\n\ndef main():\n    myd1, myd2 = Dice(), Dice()\n    myd1.setState(list(map(int, input().split())))\n    myd2.setState(list(map(int, input().split())))\n    print(myd1.sameDice1(myd2))\n    return\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u915066452",
        "problem_id": "p02887",
        "submission1_id": "s272127715",
        "code_content": "\nN=int(input())\nS=input()\nd=[]\nfor i in range(N):\n    if i==0:\n        d.append(S[i])\n    elif S[i]!=S[i-1]:\n        d.append(S[i])\nprint(len(d))",
        "origin_generated_text": "\n```\nN=int(input())\nS=input()\nd=[]\nfor i in range(N):\n    if i==0:\n        d.append(S[i])\n    elif S[i]!=S[i-1]:\n        d.append(S[i])\nprint(len(d))```\n "
    },
    {
        "user_id": "u436484848",
        "problem_id": "p03959",
        "submission1_id": "s460653834",
        "code_content": "\ndef read():\n\treturn [int(i) for i in input().split(\" \")]\nN = int(input())\nT = read()\nA = read()\nt = [(i != j, i) for i, j in zip(T, [None] + T)]\na = [(i != j, i) for i, j in zip(A, (A + [None])[1:])]\nP = 1\nfor p, q in zip(t, a):\n\tif(p[0]):\n\t\tif(q[0]):\n\t\t\tif(p[1] != q[1]):\n\t\t\t\tprint(0)\n\t\t\t\texit()\n\t\telif(q[1] < p[1]):\n\t\t\tprint(0)\n\t\t\texit()\n\telif(q[0]):\n\t\tif(p[1] < q[1]):\n\t\t\tprint(0)\n\t\t\texit()\n\telse:\n\t\tP *= pow(min(p[1], q[1]), N - 1, 10 ** 9 + 7)\nprint(P % (10 ** 9 + 7))\n",
        "origin_generated_text": "\n```\ndef read():\n\treturn [int(i) for i in input().split(\" \")]\nN = int(input())\nT = read()\nA = read()\nt = [(i != j, i) for i, j in zip(T, [None] + T)]\na = [(i != j, i) for i, j in zip(A, (A + [None])[1:])]\nP = 1\nfor p, q in zip(t, a):\n\tif(p[0]):\n\t\tif(q[0]):\n\t\t\tif(p[1] != q[1]):\n\t\t\t\tprint(0)\n\t\t\t\texit()\n\t\telif(q[1] < p[1]):\n\t\t\tprint(0)\n\t\t\texit()\n\telif(q[0]):\n\t\tif(p[1] < q[1]):\n\t\t\tprint(0)\n\t\t\texit()\n\telse:\n\t\tP *= pow(min(p[1], q[1]), N - 1, 10 ** 9 + 7)\nprint(P % (10 ** 9 + 7))\n```\n "
    },
    {
        "user_id": "u853728588",
        "problem_id": "p02699",
        "submission1_id": "s264941587",
        "code_content": "\ns, w = map(int, input().split())\n \nif  w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")",
        "origin_generated_text": "\n```\ns, w = map(int, input().split())\n \nif  w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")```\n "
    },
    {
        "user_id": "u384793271",
        "problem_id": "p03416",
        "submission1_id": "s180994182",
        "code_content": "\na, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b+1):\n    if str(i)[:len(str(i))\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b+1):\n    if str(i)[:len(str(i))\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u552746936",
        "problem_id": "p03479",
        "submission1_id": "s590824918",
        "code_content": "\nx, y = map(int, input().split())\n\nans = 0\n\nwhile x <= y:\n    x *= 2\n    ans += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n\nans = 0\n\nwhile x <= y:\n    x *= 2\n    ans += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u890751161",
        "problem_id": "p02633",
        "submission1_id": "s707407101",
        "code_content": "\nX=int(input())\ni=1\nwhile True:\n  X=X*i\n  if X%360==0 or X==360:\n    print(i)\n    break\n  i+=1",
        "origin_generated_text": "\n```\nX=int(input())\ni=1\nwhile True:\n  X=X*i\n  if X%360==0 or X==360:\n    print(i)\n    break\n  i+=1```\n "
    },
    {
        "user_id": "u798768533",
        "problem_id": "p02917",
        "submission1_id": "s492346875",
        "code_content": "\nN=int(input())\nB=[10**6]\nB.extend([int(b) for b in input().split()])\nB.append(10**6)\n\nA=[None]*N\nfor i in range(N):\n  A[i] = min(B[i], B[i+1])\n  \nprint(sum(A))",
        "origin_generated_text": "\n```\nN=int(input())\nB=[10**6]\nB.extend([int(b) for b in input().split()])\nB.append(10**6)\n\nA=[None]*N\nfor i in range(N):\n  A[i] = min(B[i], B[i+1])\n  \nprint(sum(A))```\n "
    },
    {
        "user_id": "u690536347",
        "problem_id": "p03573",
        "submission1_id": "s497469417",
        "code_content": "\nl=list(map(int,input().split()))\nl.sort()\nif l[0]!=l[1]:\n  print(l[0])\nelse:\n  print(l[2])",
        "origin_generated_text": "\n```\nl=list(map(int,input().split()))\nl.sort()\nif l[0]!=l[1]:\n  print(l[0])\nelse:\n  print(l[2])```\n "
    },
    {
        "user_id": "u631521893",
        "problem_id": "p02553",
        "submission1_id": "s777989555",
        "code_content": "\na, b, c, d = map(int, input().split())\nprint(max([a*c, a*d, b*c, b*d]))",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nprint(max([a*c, a*d, b*c, b*d]))```\n "
    },
    {
        "user_id": "u193025715",
        "problem_id": "p00026",
        "submission1_id": "s692785629",
        "code_content": "\n\n\npaper = [0 for i in range(1000)]\n\ndef small(x, y):\n    p = [[x, y]]\n    for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n        p.append([x + i, y + j])\n    return p\n\ndef middle(x, y):\n    p = small(x, y)\n    for i, j in zip([1, -1] * 2, [1, 1, -1, -1]):\n        p.append([x + i, y + j])\n    return p\n\ndef big(x, y):\n    p = middle(x, y)\n    for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n        p.append([x + i, y + j])\n    return p\n\nwhile True:\n    try:\n        x, y, size = map(int, input().split(','))\n    except:\n        print(paper.count(0))\n        print(max(paper))\n        break\n\n    if size == 1:\n        bp = small(x, y)\n    elif size == 2:\n        bp = middle(x, y)\n    elif size == 3:\n        bp = big(x, y)\n    for p in bp:\n        if not 0 <= p[0] * 10 + p[1] <= 999: continue\n        paper[p[0] * 10 + p[1]] += 1\n\n    print(paper.count(0))\n    print(max(paper))",
        "origin_generated_text": "\n```\n\n\npaper = [0 for i in range(1000)]\n\ndef small(x, y):\n    p = [[x, y]]\n    for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n        p.append([x + i, y + j])\n    return p\n\ndef middle(x, y):\n    p = small(x, y)\n    for i, j in zip([1, -1] * 2, [1, 1, -1, -1]):\n        p.append([x + i, y + j])\n    return p\n\ndef big(x, y):\n    p = middle(x, y)\n    for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n        p.append([x + i, y + j])\n    return p\n\nwhile True:\n    try:\n        x, y, size = map(int, input().split(','))\n    except:\n        print(paper.count(0))\n        print(max(paper))\n        break\n\n    if size == 1:\n        bp = small(x, y)\n    elif size == 2:\n        bp = middle(x, y)\n    elif size == 3:\n        bp = big(x, y)\n    for p in bp:\n        if not 0 <= p[0] * 10 + p[1] <= 999: continue\n        paper[p[0] * 10 + p[1]] += 1\n\n    print(paper.count(0))\n    print(max(paper))```\n "
    },
    {
        "user_id": "u911537358",
        "problem_id": "p02954",
        "submission1_id": "s958250947",
        "code_content": "\n\n\nimport sys\n\nclass DGatheringChildren:\n    def solve(self):\n        s = list(input())\n        n = len(s)\n        i = 0\n        last = 0\n        ans = [0] * n\n        while i < n - 1:\n            if s[i] == 'R' and s[i + 1] == 'L':\n                ans[i + 1] += 1\n                for j in range(last, i + 1):\n                    if (i - j) % 2 == 0:\n                        ans[i] += 1\n                    else:\n                        ans[i + 1] += 1\n                k = i + 2\n                while k < n and s[k] == 'L':\n                    if (k - i) % 2 == 0:\n                        ans[i] += 1\n                    else:\n                        ans[i + 1] += 1\n                    k += 1\n\n                last = k\n                i += 1\n\n            i += 1\n\n        print(*ans)\n\nsolver = DGatheringChildren()\ninput = sys.stdin.readline\n\nsolver.solve()\n",
        "origin_generated_text": "\n```\n\n\nimport sys\n\nclass DGatheringChildren:\n    def solve(self):\n        s = list(input())\n        n = len(s)\n        i = 0\n        last = 0\n        ans = [0] * n\n        while i < n - 1:\n            if s[i] == 'R' and s[i + 1] == 'L':\n                ans[i + 1] += 1\n                for j in range(last, i + 1):\n                    if (i - j) % 2 == 0:\n                        ans[i] += 1\n                    else:\n                        ans[i + 1] += 1\n                k = i + 2\n                while k < n and s[k] == 'L':\n                    if (k - i) % 2 == 0:\n                        ans[i] += 1\n                    else:\n                        ans[i + 1] += 1\n                    k += 1\n\n                last = k\n                i += 1\n\n            i += 1\n\n        print(*ans)\n\nsolver = DGatheringChildren()\ninput = sys.stdin.readline\n\nsolver.solve()\n```\n "
    },
    {
        "user_id": "u867848444",
        "problem_id": "p02625",
        "submission1_id": "s767625303",
        "code_content": "\n\ndef pre_c(n, mod):\n    f = [0] * (n + 1)\n    g = [0] * (n + 1)\n    for i in range(n + 1):\n        if i == 0:\n            f[i] = 1\n            g[i] = 1\n        else:\n            f[i] = (f[i - 1] * i) % mod\n            g[i] = pow(f[i], mod - 2, mod)\n\n    return f, g\n\nn, m = map(int,input().split())\nmod = 10 ** 9 + 7\nf, g = pre_c(m, mod)\nprint((f[m] * g[m - n] * g[n]) % mod)",
        "origin_generated_text": "\n```\n\ndef pre_c(n, mod):\n    f = [0] * (n + 1)\n    g = [0] * (n + 1)\n    for i in range(n + 1):\n        if i == 0:\n            f[i] = 1\n            g[i] = 1\n        else:\n            f[i] = (f[i - 1] * i) % mod\n            g[i] = pow(f[i], mod - 2, mod)\n\n    return f, g\n\nn, m = map(int,input().split())\nmod = 10 ** 9 + 7\nf, g = pre_c(m, mod)\nprint((f[m] * g[m - n] * g[n]) % mod)```\n "
    },
    {
        "user_id": "u340010271",
        "problem_id": "p03296",
        "submission1_id": "s450929218",
        "code_content": "\nN=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(N-1):\n    if a[i]==a[i+1]:\n        ans+=1\n        a[i+1]=10001\nprint(ans)",
        "origin_generated_text": "\n```\nN=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(N-1):\n    if a[i]==a[i+1]:\n        ans+=1\n        a[i+1]=10001\nprint(ans)```\n "
    },
    {
        "user_id": "u336721073",
        "problem_id": "p03023",
        "submission1_id": "s682777517",
        "code_content": "\nN=int(input())\nprint((N-2)*180)",
        "origin_generated_text": "\n```\nN=int(input())\nprint((N-2)*180)```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p03096",
        "submission1_id": "s490290894",
        "code_content": "\nn=int(input())\ncc=[int(input()) for _ in range(n)]\n\n\nc=[cc[0]]\nfor i in range(1,n):\n    if cc[i]!=cc[i-1]:\n        c.append(cc[i])\n\nn=len(c)\n\nright_index=[-1]*n\ntmp_right_index=[-1]*(max(c)+1)\n\nfor i in range(n):\n    if tmp_right_index[c[i]]==-1:\n        tmp_right_index[c[i]]=i\n    else:\n        right_index[i]=tmp_right_index[c[i]]\n        tmp_right_index[c[i]]=i\n\ndp=[0]*n\nmod=10**9+7\n\nfor i in range(n):\n    if i==0:\n        dp[i]=1\n    else:\n        if right_index[i]==-1:\n            dp[i]+=dp[i-1]%mod\n        else:\n            dp[i]+=dp[i-1]+dp[right_index[i]]%mod\n\nprint(dp[-1]%mod)\n\n\n\n\n\n\n\n    \n\n",
        "origin_generated_text": "\n```\nn=int(input())\ncc=[int(input()) for _ in range(n)]\n\n\nc=[cc[0]]\nfor i in range(1,n):\n    if cc[i]!=cc[i-1]:\n        c.append(cc[i])\n\nn=len(c)\n\nright_index=[-1]*n\ntmp_right_index=[-1]*(max(c)+1)\n\nfor i in range(n):\n    if tmp_right_index[c[i]]==-1:\n        tmp_right_index[c[i]]=i\n    else:\n        right_index[i]=tmp_right_index[c[i]]\n        tmp_right_index[c[i]]=i\n\ndp=[0]*n\nmod=10**9+7\n\nfor i in range(n):\n    if i==0:\n        dp[i]=1\n    else:\n        if right_index[i]==-1:\n            dp[i]+=dp[i-1]%mod\n        else:\n            dp[i]+=dp[i-1]+dp[right_index[i]]%mod\n\nprint(dp[-1]%mod)\n\n\n\n\n\n\n\n    \n\n```\n "
    },
    {
        "user_id": "u275704180",
        "problem_id": "p02718",
        "submission1_id": "s213301268",
        "code_content": "\nN,M = map(int,input().split())\narr = list(map(int,input().split()))\n\nres = 0\nfor i in range(N):\n    if arr[i] < (1/(4*M)*sum(arr)):\n        res = res\n    else:\n        res += 1\nif res >= M:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN,M = map(int,input().split())\narr = list(map(int,input().split()))\n\nres = 0\nfor i in range(N):\n    if arr[i] < (1/(4*M)*sum(arr)):\n        res = res\n    else:\n        res += 1\nif res >= M:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u715114989",
        "problem_id": "p03943",
        "submission1_id": "s692124568",
        "code_content": "\na,b,c = map(int,input().split())\n\nif a+b == c or a+c == b or b+c ==a:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  ",
        "origin_generated_text": "\n```\na,b,c = map(int,input().split())\n\nif a+b == c or a+c == b or b+c ==a:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  ```\n "
    },
    {
        "user_id": "u485566817",
        "problem_id": "p03729",
        "submission1_id": "s505988982",
        "code_content": "\na, b, c = map(str, input().split())\nprint(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"NO\")",
        "origin_generated_text": "\n```\na, b, c = map(str, input().split())\nprint(\"YES\" if a[-1] == b[0] and b[-1] == c[0] else \"NO\")```\n "
    },
    {
        "user_id": "u545368057",
        "problem_id": "p03734",
        "submission1_id": "s188607031",
        "code_content": "\nN,W = map(int, input().split())\nws = []\nvs = []\nfor i in range(N):\n    w,v = map(int, input().split())\n    ws.append(w)\n    vs.append(v)\nws_m = [w-ws[0] for w in ws]\n\n\ndp = [[[-1]*(3*N+10) for i in range(N+1)] for j in range(N+1)]\ndp[0][0][0] = 0\nfor i,(w,v)  in enumerate(zip(ws_m,vs)):\n    for n in range(i+1):\n        for j in range(3*N):\n            dp[i+1][n][j] = max(dp[i+1][n][j], dp[i][n][j])\n            if dp[i][n][j] == -1: continue\n            if j + n*ws[0] + w <= W:\n                dp[i+1][n+1][j+w] = max(dp[i][n][j+w], dp[i][n][j] + v)\nans= 0\nfor i,As in enumerate(dp[N]):\n    w = W - i*ws[0] + 1\n    if w > 0:\n        ans = max(ans,max(As[:w+1]))\nprint(ans)   \n",
        "origin_generated_text": "\n```\nN,W = map(int, input().split())\nws = []\nvs = []\nfor i in range(N):\n    w,v = map(int, input().split())\n    ws.append(w)\n    vs.append(v)\nws_m = [w-ws[0] for w in ws]\n\n\ndp = [[[-1]*(3*N+10) for i in range(N+1)] for j in range(N+1)]\ndp[0][0][0] = 0\nfor i,(w,v)  in enumerate(zip(ws_m,vs)):\n    for n in range(i+1):\n        for j in range(3*N):\n            dp[i+1][n][j] = max(dp[i+1][n][j], dp[i][n][j])\n            if dp[i][n][j] == -1: continue\n            if j + n*ws[0] + w <= W:\n                dp[i+1][n+1][j+w] = max(dp[i][n][j+w], dp[i][n][j] + v)\nans= 0\nfor i,As in enumerate(dp[N]):\n    w = W - i*ws[0] + 1\n    if w > 0:\n        ans = max(ans,max(As[:w+1]))\nprint(ans)   \n```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p02640",
        "submission1_id": "s090434195",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nX, Y = map(int, input().split())\nfor i in range(X + 1):\n  j = X - i\n  if i * 2 + j * 4 == Y:\n    print(\"Yes\")\n    exit(0)\nprint(\"No\")",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nX, Y = map(int, input().split())\nfor i in range(X + 1):\n  j = X - i\n  if i * 2 + j * 4 == Y:\n    print(\"Yes\")\n    exit(0)\nprint(\"No\")```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s238208352",
        "code_content": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nprint(sum(sum(field[i] for i in range(10)) for j in range(10)))\nprint(max(max(field[i] for i in range(10)) for j in range(10)))\n",
        "origin_generated_text": "\n```\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nprint(sum(sum(field[i] for i in range(10)) for j in range(10)))\nprint(max(max(field[i] for i in range(10)) for j in range(10)))\n```\n "
    },
    {
        "user_id": "u701318346",
        "problem_id": "p03970",
        "submission1_id": "s248377239",
        "code_content": "\nS = input()\nA = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != A[i]:\n    ans += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nS = input()\nA = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != A[i]:\n    ans += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u699089116",
        "problem_id": "p03477",
        "submission1_id": "s920372011",
        "code_content": "\na, b, c, d = map(int, input().split())\n \nleft = a + b\nright = c + d\n \nif left == right:\n  print(\"Balanced\")\nelif left > right:\n  print(\"Left\")\nelse:\n  print(\"Right\")",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\n \nleft = a + b\nright = c + d\n \nif left == right:\n  print(\"Balanced\")\nelif left > right:\n  print(\"Left\")\nelse:\n  print(\"Right\")```\n "
    },
    {
        "user_id": "u335295553",
        "problem_id": "p03326",
        "submission1_id": "s683431180",
        "code_content": "\nN, M = map(int, input().split())\nxyz = [list(map(int, input().split())) for i in range(N)]\ntmp = [[0]*N for i in range(8)]\n\nfor n, _ in enumerate(xyz):\n    x,y,z = _\n    tmp[0][n] = x+y+z\n    tmp[1][n] = x+y-z\n    tmp[2][n] = x-y+z\n    tmp[3][n] = x-y-z\n    tmp[4][n] = -x+y+z\n    tmp[5][n] = -x+y-z\n    tmp[6][n] = -x-y+z\n    tmp[7][n] = -x-y-z\n\nresult = [0]*N\nfor i in range(8):\n    result[i] = sum(sorted(tmp[i])[-M:])\n\nprint(max(result))",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\nxyz = [list(map(int, input().split())) for i in range(N)]\ntmp = [[0]*N for i in range(8)]\n\nfor n, _ in enumerate(xyz):\n    x,y,z = _\n    tmp[0][n] = x+y+z\n    tmp[1][n] = x+y-z\n    tmp[2][n] = x-y+z\n    tmp[3][n] = x-y-z\n    tmp[4][n] = -x+y+z\n    tmp[5][n] = -x+y-z\n    tmp[6][n] = -x-y+z\n    tmp[7][n] = -x-y-z\n\nresult = [0]*N\nfor i in range(8):\n    result[i] = sum(sorted(tmp[i])[-M:])\n\nprint(max(result))```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p02580",
        "submission1_id": "s918237454",
        "code_content": "\n\nfrom collections import defaultdict\n\nH, W, M = map(int, input().split())\nX = [list(map(int, input().split())) for _ in range(M)]\n\nctr_h = defaultdict(set)\nctr_w = defaultdict(set)\n\nfor h, w in X:\n    ctr_h[h].add((h, w))\n    ctr_w[w].add((h, w))\n\nval_h = sorted(ctr_h.items(), key=lambda x: -len(x[1]))\nval_w = sorted(ctr_w.items(), key=lambda x: -len(x[1]))\n\nmax_h = len(val_h[0][1])\nmax_w = len(val_w[0][1])\n\nif (len(val_h) > 1 and len(val_h[1][1]) == max_h\n        and len(val_w) > 1 and len(val_w[1][1]) == max_w\n        and len(val_h[0][1]) == len(val_w[0][1])):\n    print(max_h + max_w)\nelse:\n    for u, v in X:\n        if (u, v) in val_h[0][1] and (u, v) in val_w[0][1]:\n            print(max_h + max_w - 1)\n            break\n    else:\n        print(max_h + max_w)\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict\n\nH, W, M = map(int, input().split())\nX = [list(map(int, input().split())) for _ in range(M)]\n\nctr_h = defaultdict(set)\nctr_w = defaultdict(set)\n\nfor h, w in X:\n    ctr_h[h].add((h, w))\n    ctr_w[w].add((h, w))\n\nval_h = sorted(ctr_h.items(), key=lambda x: -len(x[1]))\nval_w = sorted(ctr_w.items(), key=lambda x: -len(x[1]))\n\nmax_h = len(val_h[0][1])\nmax_w = len(val_w[0][1])\n\nif (len(val_h) > 1 and len(val_h[1][1]) == max_h\n        and len(val_w) > 1 and len(val_w[1][1]) == max_w\n        and len(val_h[0][1]) == len(val_w[0][1])):\n    print(max_h + max_w)\nelse:\n    for u, v in X:\n        if (u, v) in val_h[0][1] and (u, v) in val_w[0][1]:\n            print(max_h + max_w - 1)\n            break\n    else:\n        print(max_h + max_w)\n```\n "
    },
    {
        "user_id": "u017810624",
        "problem_id": "p03303",
        "submission1_id": "s323006744",
        "code_content": "\ns=input()\nw=int(input())\na=[]\nfor i in range(len(s)):\n  if (i+1)%w==0:a.append(s[i])\nprint(''.join(a))",
        "origin_generated_text": "\n```\ns=input()\nw=int(input())\na=[]\nfor i in range(len(s)):\n  if (i+1)%w==0:a.append(s[i])\nprint(''.join(a))```\n "
    },
    {
        "user_id": "u285497176",
        "problem_id": "p02730",
        "submission1_id": "s256705340",
        "code_content": "\ndef main():\n    s = input()\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n\n    if s1 == rs1 and s2 == rs2 and len(s1) == len(s2):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    \n    return\n    \nmain()\n",
        "origin_generated_text": "\n```\ndef main():\n    s = input()\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n\n    if s1 == rs1 and s2 == rs2 and len(s1) == len(s2):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    \n    return\n    \nmain()\n```\n "
    },
    {
        "user_id": "u256901785",
        "problem_id": "p03206",
        "submission1_id": "s300815748",
        "code_content": "\nn = int(input())\nprint('Christmas ', end='')\nfor i in range(0,25-n):\n    print('Eve ',end='')\n",
        "origin_generated_text": "\n```\nn = int(input())\nprint('Christmas ', end='')\nfor i in range(0,25-n):\n    print('Eve ',end='')\n```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03992",
        "submission1_id": "s214357355",
        "code_content": "\ns=input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u036531287",
        "problem_id": "p02887",
        "submission1_id": "s143467708",
        "code_content": "\na = int(input().split()[0])\nb = list(map(str, input().split()[0]))\nk = 0\ns = 1\n\n\nwhile k<len(b) -1:\n t = b[k]\n u = b[k+1]\n \n if not t == u:\n  s = s + 1\n \n k = k + 1\nprint(s)",
        "origin_generated_text": "\n```\na = int(input().split()[0])\nb = list(map(str, input().split()[0]))\nk = 0\ns = 1\n\n\nwhile k<len(b) -1:\n t = b[k]\n u = b[k+1]\n \n if not t == u:\n  s = s + 1\n \n k = k + 1\nprint(s)```\n "
    },
    {
        "user_id": "u278670845",
        "problem_id": "p03477",
        "submission1_id": "s648565644",
        "code_content": "\na,b,c,d = map(int, input().split())\nif a+b > c+d:\n  print(\"Left\")\nelif a+b == c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")",
        "origin_generated_text": "\n```\na,b,c,d = map(int, input().split())\nif a+b > c+d:\n  print(\"Left\")\nelif a+b == c+d:\n  print(\"Balanced\")\nelse:\n  print(\"Right\")```\n "
    },
    {
        "user_id": "u391731808",
        "problem_id": "p03970",
        "submission1_id": "s020690795",
        "code_content": "\nS=input()\nprint(sum(s!=\"CODEFESTIVAL2016\"[i] for i,s in enumerate(S)))",
        "origin_generated_text": "\n```\nS=input()\nprint(sum(s!=\"CODEFESTIVAL2016\"[i] for i,s in enumerate(S)))```\n "
    },
    {
        "user_id": "u368796742",
        "problem_id": "p02665",
        "submission1_id": "s285868944",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\nans = 0\n\nl = [0]*(n+1)\nl[-1] = a[-1]\nfor i in range(n-1,-1,-1):\n    l[i] += l[i+1]+a[i]\n\nif a[0] == 1:\n    if n > 0:\n        print(-1)\n        exit()\n    else:\n        print(1)\n        exit()\n\nfor i in range(n):\n    if a[i]*2 < a[i+1]:\n        print(-1)\n        exit()\n\nans = 1\nfor i in range(1,n+1):\n    if i == n:\n        ans += a[-1]\n    else:\n        ans += min(a[i]*2,l[i+1])\n\nprint(ans)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\nans = 0\n\nl = [0]*(n+1)\nl[-1] = a[-1]\nfor i in range(n-1,-1,-1):\n    l[i] += l[i+1]+a[i]\n\nif a[0] == 1:\n    if n > 0:\n        print(-1)\n        exit()\n    else:\n        print(1)\n        exit()\n\nfor i in range(n):\n    if a[i]*2 < a[i+1]:\n        print(-1)\n        exit()\n\nans = 1\nfor i in range(1,n+1):\n    if i == n:\n        ans += a[-1]\n    else:\n        ans += min(a[i]*2,l[i+1])\n\nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u992910889",
        "problem_id": "p03573",
        "submission1_id": "s297210170",
        "code_content": "\nS=list(map(int,input().split()))\nfor i in range(3):\n    if S.count(S[i])==1:\n        print(S[i])",
        "origin_generated_text": "\n```\nS=list(map(int,input().split()))\nfor i in range(3):\n    if S.count(S[i])==1:\n        print(S[i])```\n "
    },
    {
        "user_id": "u076245995",
        "problem_id": "p02665",
        "submission1_id": "s539980600",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split())) + [0]\ns = [0] * (N + 2)\nfor i in range(N + 1):\n    s[i + 1] = s[i] + A[i]\nnode, leaf = 1, A[0]\nfor d in range(1, N + 2):\n    if leaf < A[d]:\n        print(-1)\n        exit()\n    leaf = min((leaf - A[d - 1]) * 2, s[N + 1] - s[d])\n    if leaf < A[d]:\n        print(-1)\n        exit()\n    node += leaf\nelse:\n    print(node)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split())) + [0]\ns = [0] * (N + 2)\nfor i in range(N + 1):\n    s[i + 1] = s[i] + A[i]\nnode, leaf = 1, A[0]\nfor d in range(1, N + 2):\n    if leaf < A[d]:\n        print(-1)\n        exit()\n    leaf = min((leaf - A[d - 1]) * 2, s[N + 1] - s[d])\n    if leaf < A[d]:\n        print(-1)\n        exit()\n    node += leaf\nelse:\n    print(node)```\n "
    },
    {
        "user_id": "u185405877",
        "problem_id": "p02718",
        "submission1_id": "s232388254",
        "code_content": "\nx,y= list(map(int, input().split()))\ni = list(map(int, input().split()))\ni.sort(reverse=True)\nk=sum(i)\nflag=0\nfor j in range(y-1):\n    if i[j]>=k/(4*(j+1)):\n        flag+=1\nif flag==y:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nx,y= list(map(int, input().split()))\ni = list(map(int, input().split()))\ni.sort(reverse=True)\nk=sum(i)\nflag=0\nfor j in range(y-1):\n    if i[j]>=k/(4*(j+1)):\n        flag+=1\nif flag==y:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u726285999",
        "problem_id": "p02556",
        "submission1_id": "s143148485",
        "code_content": "\nimport sys\n\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n\n    X = [None] * N\n    Y = [None] * N \n    Z = [None] * N\n\n    for i in range(N):\n        x, y = map(int, sys.stdin.readline().rstrip().split())\n        X[i] = x\n        Y[i] = y\n    \n    X_min = min(X)\n    Y_min = min(Y)\n\n    for i in range(N):\n        X[i] = X[i] - X_min\n        Y[i] = Y[i] - Y_min\n        Z[i] = X[i] + Y[i]\n\n    print(max(Z) - min(Z) + 2 * abs(X_min - Y_min))\n\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\n\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n\n    X = [None] * N\n    Y = [None] * N \n    Z = [None] * N\n\n    for i in range(N):\n        x, y = map(int, sys.stdin.readline().rstrip().split())\n        X[i] = x\n        Y[i] = y\n    \n    X_min = min(X)\n    Y_min = min(Y)\n\n    for i in range(N):\n        X[i] = X[i] - X_min\n        Y[i] = Y[i] - Y_min\n        Z[i] = X[i] + Y[i]\n\n    print(max(Z) - min(Z) + 2 * abs(X_min - Y_min))\n\n\nmain()```\n "
    },
    {
        "user_id": "u949338836",
        "problem_id": "p02385",
        "submission1_id": "s019287191",
        "code_content": "\n\n\n\nclass Dice:\n    def __init__(self, ary):\n        self.top, self.south, self.east, self.west, self.north, self.bottom = ary\n\n    def roll_n(self):\n        self.top, self.north, self.bottom, self.south = self.south, self.top, self.north, self.bottom\n\n    def roll_e(self):\n        self.top, self.east, self.bottom, self.west = self.west, self.top, self.east, self.bottom\n\n    def twist(self):\n        self.north, self.east, self.south, self.west = self.west, self.north, self.east, self.south\n\n    def isEqual(self, dice):\n        if self.top == dice.top and self.south == dice.south and self.east == dice.east and self.west == dice.west and self.north == dice.north and self.bottom == dice.bottom:\n            return True\n        else:\n            return False\n\ndice1 = Dice(map(int,input().split()))\ndice2 = Dice(map(int,input().split()))\n\nflag = False\n\nfor i in range(6):\n    if i%2 == 0:\n        dice1.roll_n()\n    else:\n        dice1.roll_e()\n\n    for j in range(4):\n        if dice1.isEqual(dice2):\n            flag = True\n        else:\n            dice1.twist()\n\n    if flag:\n        break\n\nif flag:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\n\n\n\nclass Dice:\n    def __init__(self, ary):\n        self.top, self.south, self.east, self.west, self.north, self.bottom = ary\n\n    def roll_n(self):\n        self.top, self.north, self.bottom, self.south = self.south, self.top, self.north, self.bottom\n\n    def roll_e(self):\n        self.top, self.east, self.bottom, self.west = self.west, self.top, self.east, self.bottom\n\n    def twist(self):\n        self.north, self.east, self.south, self.west = self.west, self.north, self.east, self.south\n\n    def isEqual(self, dice):\n        if self.top == dice.top and self.south == dice.south and self.east == dice.east and self.west == dice.west and self.north == dice.north and self.bottom == dice.bottom:\n            return True\n        else:\n            return False\n\ndice1 = Dice(map(int,input().split()))\ndice2 = Dice(map(int,input().split()))\n\nflag = False\n\nfor i in range(6):\n    if i%2 == 0:\n        dice1.roll_n()\n    else:\n        dice1.roll_e()\n\n    for j in range(4):\n        if dice1.isEqual(dice2):\n            flag = True\n        else:\n            dice1.twist()\n\n    if flag:\n        break\n\nif flag:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03008",
        "submission1_id": "s424250824",
        "code_content": "\nn = int(input())\ng1,s1,b1 = map(int,input().split())\ng2,s2,b2 = map(int,input().split())\ndef trade(n,g1,s1,b1,g2,s2,b2):\n  tradelist = []\n  for x,y in (g1,g2),(s1,s2),(b1,b2):\n    if x < y:\n      tradelist.append((x,y))\n  if not tradelist:\n    return n\n  dp = [0]*(n+1)\n  for w,v in tradelist:\n    for i in range(n+1-w):\n      dp[i+w] = max(dp[i+w],dp[i]+v)\n  return dp[-1]\n\nans1 = trade(n,g1,s1,b1,g2,s2,b2)\nans2 = trade(ans1,g2,s2,b2,g1,s1,b1)\nprint(ans2)",
        "origin_generated_text": "\n```\nn = int(input())\ng1,s1,b1 = map(int,input().split())\ng2,s2,b2 = map(int,input().split())\ndef trade(n,g1,s1,b1,g2,s2,b2):\n  tradelist = []\n  for x,y in (g1,g2),(s1,s2),(b1,b2):\n    if x < y:\n      tradelist.append((x,y))\n  if not tradelist:\n    return n\n  dp = [0]*(n+1)\n  for w,v in tradelist:\n    for i in range(n+1-w):\n      dp[i+w] = max(dp[i+w],dp[i]+v)\n  return dp[-1]\n\nans1 = trade(n,g1,s1,b1,g2,s2,b2)\nans2 = trade(ans1,g2,s2,b2,g1,s1,b1)\nprint(ans2)```\n "
    },
    {
        "user_id": "u477320129",
        "problem_id": "p03734",
        "submission1_id": "s167233001",
        "code_content": "\n\nimport sys\n\ndef solve(N: int, W: int, w: \"List[int]\", v: \"List[int]\"):\n    from itertools import product\n    base_w = w[0]\n    v_list = [[] for _ in range(4)]\n    for ww, vv in zip(w, v):\n        v_list[ww-base_w].append(vv)\n    v_list = [sorted(vv, reverse=True) for vv in v_list]\n    acc_v = [[0] * (N+1) for _ in range(4)]\n    for i, vv in enumerate(v_list):\n        for j, vvv in enumerate(vv):\n            acc_v[i][j+1] = acc_v[i][j] + vvv\n    ans = 0\n    for i, j, k, l in product(range(N+1), repeat=4):\n        if i * base_w + j * (base_w + 1) + k * (base_w + 2)+ l * (base_w + 3) > W:\n            continue\n        ans = max(ans, acc_v[0][i] + acc_v[1][j] + acc_v[2][k] + acc_v[3][l])\n    return ans\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    W = int(next(tokens))  \n    w = [int()] * (N)  \n    v = [int()] * (N)  \n    for i in range(N):\n        w[i] = int(next(tokens))\n        v[i] = int(next(tokens))\n    print(solve(N, W, w, v))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\nif __name__ == '__main__':\n    \n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\n\ndef solve(N: int, W: int, w: \"List[int]\", v: \"List[int]\"):\n    from itertools import product\n    base_w = w[0]\n    v_list = [[] for _ in range(4)]\n    for ww, vv in zip(w, v):\n        v_list[ww-base_w].append(vv)\n    v_list = [sorted(vv, reverse=True) for vv in v_list]\n    acc_v = [[0] * (N+1) for _ in range(4)]\n    for i, vv in enumerate(v_list):\n        for j, vvv in enumerate(vv):\n            acc_v[i][j+1] = acc_v[i][j] + vvv\n    ans = 0\n    for i, j, k, l in product(range(N+1), repeat=4):\n        if i * base_w + j * (base_w + 1) + k * (base_w + 2)+ l * (base_w + 3) > W:\n            continue\n        ans = max(ans, acc_v[0][i] + acc_v[1][j] + acc_v[2][k] + acc_v[3][l])\n    return ans\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    W = int(next(tokens))  \n    w = [int()] * (N)  \n    v = [int()] * (N)  \n    for i in range(N):\n        w[i] = int(next(tokens))\n        v[i] = int(next(tokens))\n    print(solve(N, W, w, v))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\nif __name__ == '__main__':\n    \n    main()\n```\n "
    },
    {
        "user_id": "u322229918",
        "problem_id": "p02912",
        "submission1_id": "s077943978",
        "code_content": "\nN, M = map(int, input().split())\nmvals = list(map(lambda x: -int(x), input().split()))\n\nimport heapq\nheapq.heapify(mvals)\n\nfor _ in range(M):\n    price = heapq.heappop(mvals)\n    heapq.heappush(mvals, price / 2)\n\nres = -sum(mvals)\nprint(res)",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\nmvals = list(map(lambda x: -int(x), input().split()))\n\nimport heapq\nheapq.heapify(mvals)\n\nfor _ in range(M):\n    price = heapq.heappop(mvals)\n    heapq.heappush(mvals, price / 2)\n\nres = -sum(mvals)\nprint(res)```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s013563536",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u617718239",
        "problem_id": "p02727",
        "submission1_id": "s649197768",
        "code_content": "\nx, y, a, b, c = map(int, input().split())\narrayP = list(map(int, input().split()))\narrayQ = list(map(int, input().split()))\narrayR = list(map(int, input().split()))\narrayP.sort(reverse=True)\narrayQ.sort(reverse=True)\narrayR.sort(reverse=True)\narrayAns = []\nfor i in range(x):\n    arrayAns.append(int(arrayP[i]))\nfor i in range(y):\n    arrayAns.append(int(arrayQ[i]))\narrayAns.sort()\nfor i in range(c):\n    if arrayAns[0] <= int(arrayR[i]):\n        arrayAns[0] = int(arrayR[i])\n        arrayAns.sort()\nprint(sum(arrayAns))",
        "origin_generated_text": "\n```\nx, y, a, b, c = map(int, input().split())\narrayP = list(map(int, input().split()))\narrayQ = list(map(int, input().split()))\narrayR = list(map(int, input().split()))\narrayP.sort(reverse=True)\narrayQ.sort(reverse=True)\narrayR.sort(reverse=True)\narrayAns = []\nfor i in range(x):\n    arrayAns.append(int(arrayP[i]))\nfor i in range(y):\n    arrayAns.append(int(arrayQ[i]))\narrayAns.sort()\nfor i in range(c):\n    if arrayAns[0] <= int(arrayR[i]):\n        arrayAns[0] = int(arrayR[i])\n        arrayAns.sort()\nprint(sum(arrayAns))```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s247145139",
        "code_content": "\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= ra + rb:\n        if ra > rb:\n            print(2)\n        elif ra < rb:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= ra + rb:\n        if ra > rb:\n            print(2)\n        elif ra < rb:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p03106",
        "submission1_id": "s909109023",
        "code_content": "\na,b,c= input().split()\nx,y,z=(int(a),int(b),int(c))\nans_list =[]\nfor i in range(min(x,y)):\n    \n    if x % (i+1) == 0 and y % (i+1) == 0:\n        ans_list.append(i+1)\nprint(ans_list[len(ans_list)-z])",
        "origin_generated_text": "\n```\na,b,c= input().split()\nx,y,z=(int(a),int(b),int(c))\nans_list =[]\nfor i in range(min(x,y)):\n    \n    if x % (i+1) == 0 and y % (i+1) == 0:\n        ans_list.append(i+1)\nprint(ans_list[len(ans_list)-z])```\n "
    },
    {
        "user_id": "u300637346",
        "problem_id": "p03970",
        "submission1_id": "s007636163",
        "code_content": "\ns=input()\nt='CODEFESTIVAL2016'\ncount=0\nfor k in range(len(s)):\n    if s[k] != t[k]:\n        count += 1\nprint(count)\n\n",
        "origin_generated_text": "\n```\ns=input()\nt='CODEFESTIVAL2016'\ncount=0\nfor k in range(len(s)):\n    if s[k] != t[k]:\n        count += 1\nprint(count)\n\n```\n "
    },
    {
        "user_id": "u038408819",
        "problem_id": "p03716",
        "submission1_id": "s458349180",
        "code_content": "\nN = int(input())\na = list(map(int, input().split()))\n\nimport heapq\nque1 = []\nheapq.heapify(que1)\nS = [0] * (2*N + 1)\nfor i in range(N):\n    S[i + 1] = S[i] + a[i]\n    \n    heapq.heappush(que1, a[i])\nque2 = []\nheapq.heapify(que2)\nT = [0] * (2*N + 1)\nfor i in range(N):\n    T[i + 1] = T[i] + a[3*N - i - 1]\n    \n    heapq.heappush(que2, -a[3*N - i - 1])\n\nfor i in range(N, 2*N):\n    mi = heapq.heappop(que1)\n    \n    if a[i] > mi:\n        S[i + 1] = S[i] - mi + a[i]\n        \n        heapq.heappush(que1, a[i])\n    else:\n        S[i + 1] = S[i]\n        heapq.heappush(que1, mi)\nfor i in range(N, 2*N):\n    ma = heapq.heappop(que2) * -1\n    \n    if a[3*N - i - 1] < ma:\n        T[i + 1] = T[i] - ma + a[3*N - i - 1]\n        \n        \n        heapq.heappush(que2, -a[3*N - i - 1])\n    else:\n        T[i + 1] = T[i]\n        heapq.heappush(que2, -ma)\n\nres = -float('Inf')\nfor i in range(N, 2*N):\n    res = max(res, S[i] - T[3*N - i])\nprint(res)",
        "origin_generated_text": "\n```\nN = int(input())\na = list(map(int, input().split()))\n\nimport heapq\nque1 = []\nheapq.heapify(que1)\nS = [0] * (2*N + 1)\nfor i in range(N):\n    S[i + 1] = S[i] + a[i]\n    \n    heapq.heappush(que1, a[i])\nque2 = []\nheapq.heapify(que2)\nT = [0] * (2*N + 1)\nfor i in range(N):\n    T[i + 1] = T[i] + a[3*N - i - 1]\n    \n    heapq.heappush(que2, -a[3*N - i - 1])\n\nfor i in range(N, 2*N):\n    mi = heapq.heappop(que1)\n    \n    if a[i] > mi:\n        S[i + 1] = S[i] - mi + a[i]\n        \n        heapq.heappush(que1, a[i])\n    else:\n        S[i + 1] = S[i]\n        heapq.heappush(que1, mi)\nfor i in range(N, 2*N):\n    ma = heapq.heappop(que2) * -1\n    \n    if a[3*N - i - 1] < ma:\n        T[i + 1] = T[i] - ma + a[3*N - i - 1]\n        \n        \n        heapq.heappush(que2, -a[3*N - i - 1])\n    else:\n        T[i + 1] = T[i]\n        heapq.heappush(que2, -ma)\n\nres = -float('Inf')\nfor i in range(N, 2*N):\n    res = max(res, S[i] - T[3*N - i])\nprint(res)```\n "
    },
    {
        "user_id": "u771710924",
        "problem_id": "p02633",
        "submission1_id": "s376609535",
        "code_content": "\n\n\n\n\n\n\n\ndef main():\n    x = int(input())\n    ans = 360 \n    print(ans \n    return\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\n\n\n\n\n\ndef main():\n    x = int(input())\n    ans = 360 \n    print(ans \n    return\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u558242240",
        "problem_id": "p02954",
        "submission1_id": "s097028769",
        "code_content": "\ns = input()\nn = len(s)\nrl = 0\nlr = 0\ncount = [0, 0]\nans = [0] * n\nprev = s[0]\nfor i in range(n):\n    if s[i] != prev:\n        if s[i] == 'L':\n            rl = i\n            ans[rl - 1] += count[0]\n            ans[rl] += count[1]\n            count = [0, 0]\n        if s[i] == 'R':\n            lr = i\n            ans[rl] += count[0]\n            ans[rl - 1] += count[1]\n            count = [0, 0]\n    if s[i] == 'L':\n        count[(i - rl) % 2] += 1\n    if s[i] == 'R':\n        count[(i - lr) % 2] += 1\n    prev = s[i]\n\nans[rl] += count[0]\nans[rl - 1] += count[1]\n\nprint(' '.join(map(lambda x: str(x), ans)))\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\nrl = 0\nlr = 0\ncount = [0, 0]\nans = [0] * n\nprev = s[0]\nfor i in range(n):\n    if s[i] != prev:\n        if s[i] == 'L':\n            rl = i\n            ans[rl - 1] += count[0]\n            ans[rl] += count[1]\n            count = [0, 0]\n        if s[i] == 'R':\n            lr = i\n            ans[rl] += count[0]\n            ans[rl - 1] += count[1]\n            count = [0, 0]\n    if s[i] == 'L':\n        count[(i - rl) % 2] += 1\n    if s[i] == 'R':\n        count[(i - lr) % 2] += 1\n    prev = s[i]\n\nans[rl] += count[0]\nans[rl - 1] += count[1]\n\nprint(' '.join(map(lambda x: str(x), ans)))\n\n\n\n\n\n\n```\n "
    },
    {
        "user_id": "u358919705",
        "problem_id": "p00026",
        "submission1_id": "s163690300",
        "code_content": "\na = [[0] * 14 for _ in range(14)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    x += 2\n    y += 2\n    for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n        a[x + d[0]][y + d[1]] += 1\n    if s >= 2:\n        for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n            a[x + d[0]][y + d[1]] += 1\n    if s == 3:\n        for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n            a[x + d[0]][y + d[1]] += 1\nprint(sum(a[i][2:12].count(0) for i in range(2, 12)))\nprint(max(max(a[i][j] for i in range(14)) for j in range(14)))\n",
        "origin_generated_text": "\n```\na = [[0] * 14 for _ in range(14)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    x += 2\n    y += 2\n    for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n        a[x + d[0]][y + d[1]] += 1\n    if s >= 2:\n        for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n            a[x + d[0]][y + d[1]] += 1\n    if s == 3:\n        for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n            a[x + d[0]][y + d[1]] += 1\nprint(sum(a[i][2:12].count(0) for i in range(2, 12)))\nprint(max(max(a[i][j] for i in range(14)) for j in range(14)))\n```\n "
    },
    {
        "user_id": "u488934106",
        "problem_id": "p03563",
        "submission1_id": "s919203045",
        "code_content": "\ndef newrating(r , g):\n\n    return int((r + g) / 2)\n\ndef main():\n    r = int(input())\n    g = int(input())\n    print(newrating(r , g))\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\ndef newrating(r , g):\n\n    return int((r + g) / 2)\n\ndef main():\n    r = int(input())\n    g = int(input())\n    print(newrating(r , g))\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03714",
        "submission1_id": "s142152285",
        "code_content": "\ndef examD():\n    N = I()\n    a = LI()\n    a_b = list(map(lambda x: x*(-1), a))\n    R = a[:N]; B = a_b[2*N:]\n    heapq.heapify(R)\n    heapq.heapify(B)\n    ansC =[]\n    curR = [sum(R)]; curB = [-sum(B)]\n    for i in range(N):\n        heapq.heappush(R, a[N+i])\n        cur = curR[-1] - heapq.heappop(R) + a[N+i]\n        curR.append(cur)\n    for i in range(N):\n        heapq.heappush(B, a_b[2*N-1-i])\n        cur =curB[-1] - heapq.heappop(B)*(-1) - a_b[2*N-1-i]\n        curB.append(cur)\n    for i in range(2*N):\n        ansC.append(curR[i]-curB[-1-i])\n    ans = max(ansC)\n    print(ans)\n\n\n\n\nimport sys\nimport copy\nimport bisect\nimport heapq\nfrom collections import Counter,defaultdict,deque\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef S(): return sys.stdin.readline().strip()\nmod = 10**9 + 7\ninf = float('inf')\n\nexamD()\n",
        "origin_generated_text": "\n```\ndef examD():\n    N = I()\n    a = LI()\n    a_b = list(map(lambda x: x*(-1), a))\n    R = a[:N]; B = a_b[2*N:]\n    heapq.heapify(R)\n    heapq.heapify(B)\n    ansC =[]\n    curR = [sum(R)]; curB = [-sum(B)]\n    for i in range(N):\n        heapq.heappush(R, a[N+i])\n        cur = curR[-1] - heapq.heappop(R) + a[N+i]\n        curR.append(cur)\n    for i in range(N):\n        heapq.heappush(B, a_b[2*N-1-i])\n        cur =curB[-1] - heapq.heappop(B)*(-1) - a_b[2*N-1-i]\n        curB.append(cur)\n    for i in range(2*N):\n        ansC.append(curR[i]-curB[-1-i])\n    ans = max(ansC)\n    print(ans)\n\n\n\n\nimport sys\nimport copy\nimport bisect\nimport heapq\nfrom collections import Counter,defaultdict,deque\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef S(): return sys.stdin.readline().strip()\nmod = 10**9 + 7\ninf = float('inf')\n\nexamD()\n```\n "
    },
    {
        "user_id": "u033602950",
        "problem_id": "p03103",
        "submission1_id": "s111334685",
        "code_content": "\nN,M = map(int,input().split())\nli=[0]*N\nfor i in range(N):\n\ta,b = map(int,input().split())\n\tli[i]=b\nli=sorted(li)\nm_sum=0\nfor i in range(N):\n\tif M>li[i]:\n\t\tm_sum+=li[i]*M\n\t\tbreak\n\telse:\n\t\tm_sum+=li[i]*M\n\t\tM-=li[i]\nprint(m_sum)",
        "origin_generated_text": "\n```\nN,M = map(int,input().split())\nli=[0]*N\nfor i in range(N):\n\ta,b = map(int,input().split())\n\tli[i]=b\nli=sorted(li)\nm_sum=0\nfor i in range(N):\n\tif M>li[i]:\n\t\tm_sum+=li[i]*M\n\t\tbreak\n\telse:\n\t\tm_sum+=li[i]*M\n\t\tM-=li[i]\nprint(m_sum)```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03087",
        "submission1_id": "s085060749",
        "code_content": "\nN, Q = map(int, input().split())\nS = input()\nAClst = [0]*N\n\nfor i in range(N-1):\n  if S[i:i+2]==\"AC\":\n    AClst[i+1]+=1\n\nfor q in range(Q):\n  l, r = map(int, input().split())\n  print(AClst[l-1:r].count(1))",
        "origin_generated_text": "\n```\nN, Q = map(int, input().split())\nS = input()\nAClst = [0]*N\n\nfor i in range(N-1):\n  if S[i:i+2]==\"AC\":\n    AClst[i+1]+=1\n\nfor q in range(Q):\n  l, r = map(int, input().split())\n  print(AClst[l-1:r].count(1))```\n "
    },
    {
        "user_id": "u242757684",
        "problem_id": "p02625",
        "submission1_id": "s572418098",
        "code_content": "\nMOD = 10 ** 9 + 7\nN,M = map(int,input().split())\nans1 = 1\nfor i in range(N):\n    ans1 *= M - i\n    ans1 %= MOD\nans2 = [1,M-1,M*(M-1)\nfor i in range(2,N+1):\n    ans2.append((ans2[-2] * (M-i) + ans2[-1] * (M-i-1))% MOD)\nprint(ans1 * ans2[N] % MOD)",
        "origin_generated_text": "\n```\nMOD = 10 ** 9 + 7\nN,M = map(int,input().split())\nans1 = 1\nfor i in range(N):\n    ans1 *= M - i\n    ans1 %= MOD\nans2 = [1,M-1,M*(M-1)\nfor i in range(2,N+1):\n    ans2.append((ans2[-2] * (M-i) + ans2[-1] * (M-i-1))% MOD)\nprint(ans1 * ans2[N] % MOD)```\n "
    },
    {
        "user_id": "u368074441",
        "problem_id": "p02886",
        "submission1_id": "s401839933",
        "code_content": "\nn = int(input())\nd = list(map(int, input().split()))\n\ni = 0\nj = 0\np = 0\n\nwhile i < n - 1:\n    while j < n - 1:\n        p += d[i] * d[j + 1]\n        j = j + 1 \n    i = i + 1\n    j = i\nprint(p)",
        "origin_generated_text": "\n```\nn = int(input())\nd = list(map(int, input().split()))\n\ni = 0\nj = 0\np = 0\n\nwhile i < n - 1:\n    while j < n - 1:\n        p += d[i] * d[j + 1]\n        j = j + 1 \n    i = i + 1\n    j = i\nprint(p)```\n "
    },
    {
        "user_id": "u604607346",
        "problem_id": "p03479",
        "submission1_id": "s155378572",
        "code_content": "\nx, y = map(int, input().split())\n \nnum = 0\nwhile x < y and x % 2 == 0:\n    x *= 2\n    num += 1\n \nprint(num)",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n \nnum = 0\nwhile x < y and x % 2 == 0:\n    x *= 2\n    num += 1\n \nprint(num)```\n "
    },
    {
        "user_id": "u138781768",
        "problem_id": "p03080",
        "submission1_id": "s816314761",
        "code_content": "\nN = int(input())\ns = input()\nn1 = N / 2\ns1 = s.count(\"R\")\nif s1 > n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nN = int(input())\ns = input()\nn1 = N / 2\ns1 = s.count(\"R\")\nif s1 > n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u535659144",
        "problem_id": "p03041",
        "submission1_id": "s096364623",
        "code_content": "\na,b=map(int,input().split())\ns=input().replace(s[b-1],s[b-1].lower())\nprint(s)",
        "origin_generated_text": "\n```\na,b=map(int,input().split())\ns=input().replace(s[b-1],s[b-1].lower())\nprint(s)```\n "
    },
    {
        "user_id": "u633450100",
        "problem_id": "p02886",
        "submission1_id": "s113352882",
        "code_content": "\nN = int(input())\nd = [int(i) for i in input().split()]\nsum = 0\n\nfor i in range(N):\n  for j in range(N):\n    if i != j:\n      sum += d[i] * d[j]\n\nprint(sum)",
        "origin_generated_text": "\n```\nN = int(input())\nd = [int(i) for i in input().split()]\nsum = 0\n\nfor i in range(N):\n  for j in range(N):\n    if i != j:\n      sum += d[i] * d[j]\n\nprint(sum)```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s923113448",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if par[i][x] < y:\n            k += 1<<i\n            x = par[i][x]\n        elif par[i][x] >= y:\n            k += 1<<i\n    return k\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    ans.append(hoge(a, b)-1)\n\nprint(*ans, sep=\"\\n\", end=\"\")",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if par[i][x] < y:\n            k += 1<<i\n            x = par[i][x]\n        elif par[i][x] >= y:\n            k += 1<<i\n    return k\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    ans.append(hoge(a, b)-1)\n\nprint(*ans, sep=\"\\n\", end=\"\")```\n "
    },
    {
        "user_id": "u602252807",
        "problem_id": "p02854",
        "submission1_id": "s947374469",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\n \ns = sum(a)\n \nleft = 0\nright = s\nfor i in range(n-1):\n    left += a[i]\n    right -= a[i]\n    if left >= right:\n        break\n\nprint(abs(left-right))",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\n \ns = sum(a)\n \nleft = 0\nright = s\nfor i in range(n-1):\n    left += a[i]\n    right -= a[i]\n    if left >= right:\n        break\n\nprint(abs(left-right))```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p02727",
        "submission1_id": "s116566468",
        "code_content": "\n\nimport sys\nimport math\nimport string\nimport collections\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = 10 ** 18\ninput = lambda: sys.stdin.readline().strip()\n\nsys.setrecursionlimit(10 ** 8)\n\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort()\n\nans = sum(p[0:X]) + sum(q[0:Y])\n\nfor i in range(C):\n    if p[-1] <= q[-1] <= r[-1] and A > 0:\n        ans += r.pop(-1)\n        ans -= p.pop(-1)\n        A -= 1\n    elif q[-1] <= p[-1] <= r[-1] and B > 0:\n        ans += r.pop(-1)\n        ans -= q.pop(-1)\n        B -= 1\n    elif q[-1] <= r[-1] and B > 0:\n        ans += r.pop(-1)\n        ans -= q.pop(-1)\n        B -= 1\n    elif p[-1] <= r[-1] and A > 0:\n        ans += r.pop(-1)\n        ans -= p.pop(-1)\n        A -= 1\n    else:\n        break\nprint(ans)",
        "origin_generated_text": "\n```\n\nimport sys\nimport math\nimport string\nimport collections\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = 10 ** 18\ninput = lambda: sys.stdin.readline().strip()\n\nsys.setrecursionlimit(10 ** 8)\n\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort()\n\nans = sum(p[0:X]) + sum(q[0:Y])\n\nfor i in range(C):\n    if p[-1] <= q[-1] <= r[-1] and A > 0:\n        ans += r.pop(-1)\n        ans -= p.pop(-1)\n        A -= 1\n    elif q[-1] <= p[-1] <= r[-1] and B > 0:\n        ans += r.pop(-1)\n        ans -= q.pop(-1)\n        B -= 1\n    elif q[-1] <= r[-1] and B > 0:\n        ans += r.pop(-1)\n        ans -= q.pop(-1)\n        B -= 1\n    elif p[-1] <= r[-1] and A > 0:\n        ans += r.pop(-1)\n        ans -= p.pop(-1)\n        A -= 1\n    else:\n        break\nprint(ans)```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03626",
        "submission1_id": "s295504884",
        "code_content": "\nN = int(input())\ns1 = input()\ns2 = input()\n\nMOD = int(1e9) + 7\n\ntate = \"tate\"\nyoko = \"yoko\"\n\ni = 0\nans = 0\npre = \"\"\nif s1[i] == s2[i]:\n    ans = 3\n    i += 1\n    pre = tate\nelse:\n    ans = 6\n    i += 2\n    pre = yoko\n\nwhile i < N:\n    if s1[i] == s2[i]:\n        if pre == tate:\n            ans *= 2\n            ans %= MOD\n        else:\n            ans *= 1\n            ans %= MOD\n        i += 1\n        pre = tate\n    else:\n        if pre == tate:\n            ans *= 2\n            ans %= MOD\n        else:\n            ans *= 2\n            ans %= MOD\n        i += 2\n        pre = yoko\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\ns1 = input()\ns2 = input()\n\nMOD = int(1e9) + 7\n\ntate = \"tate\"\nyoko = \"yoko\"\n\ni = 0\nans = 0\npre = \"\"\nif s1[i] == s2[i]:\n    ans = 3\n    i += 1\n    pre = tate\nelse:\n    ans = 6\n    i += 2\n    pre = yoko\n\nwhile i < N:\n    if s1[i] == s2[i]:\n        if pre == tate:\n            ans *= 2\n            ans %= MOD\n        else:\n            ans *= 1\n            ans %= MOD\n        i += 1\n        pre = tate\n    else:\n        if pre == tate:\n            ans *= 2\n            ans %= MOD\n        else:\n            ans *= 2\n            ans %= MOD\n        i += 2\n        pre = yoko\nprint(ans)\n```\n "
    },
    {
        "user_id": "u910295650",
        "problem_id": "p03102",
        "submission1_id": "s276721873",
        "code_content": "\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\nA=[]\nans=0\na=0\nfor i in range(N):\n    A.append([int(j) for j in input().split()])\nfor i in range(N):\n    for j in range(M):\n         a+=A[i][j]*B[j]\n    if a+C>0:\n        ans+=1\n    a=0\nprint(ans)",
        "origin_generated_text": "\n```\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\nA=[]\nans=0\na=0\nfor i in range(N):\n    A.append([int(j) for j in input().split()])\nfor i in range(N):\n    for j in range(M):\n         a+=A[i][j]*B[j]\n    if a+C>0:\n        ans+=1\n    a=0\nprint(ans)```\n "
    },
    {
        "user_id": "u175111751",
        "problem_id": "p02385",
        "submission1_id": "s517739076",
        "code_content": "\nimport sys\nclass Dice:\n    def __init__(self, f):\n        self.f = f[:]\n\n    def roll(self, s):\n        for f in s:\n            n = self.f[:]\n            if f == 'E':\n                t = n[0]\n                n[0] = n[3]\n                n[3] = n[5]\n                n[5] = n[2]\n                n[2] = t\n            elif f == 'W':\n                t = n[0]\n                n[0] = n[2]\n                n[2] = n[5]\n                n[5] = n[3]\n                n[3] = t\n            elif f == 'N':\n                t = n[0]\n                n[0] = n[1]\n                n[1] = n[5]\n                n[5] = n[4]\n                n[4] = t\n            else:\n                t = n[0]\n                n[0] = n[4]\n                n[4] = n[5]\n                n[5] = n[1]\n                n[1] = t\n            self.f = n\n\n    def to_top(self, index):\n        if index == 1:\n            self.roll('N')\n        elif index == 2:\n            self.roll('W')\n        elif index == 3:\n            self.roll('E')\n        elif index == 4:\n            self.roll('S')\n        elif index == 5:\n            self.roll('NN')\n        return self\n\n    def side_roll(self):\n        t  = self.f[1]\n        self.f[1] = self.f[2]\n        self.f[2] = self.f[4]\n        self.f[4] = self.f[3]\n        self.f[3] = t\n        return self\n\n    def all_face(self):\n        faces = []\n        for i in range(0,6):\n            t = Dice(self.f[:])\n            faces.append(t.to_top(i).f)\n            for j in range(3):\n                faces.append(t.side_roll().f)\n        return faces\n\nd1, d2 = (Dice(list(input().split())) for _ in range(2))\nfs = d1.all_face()\nprint('Yes' if d2.f in fs else 'No')",
        "origin_generated_text": "\n```\nimport sys\nclass Dice:\n    def __init__(self, f):\n        self.f = f[:]\n\n    def roll(self, s):\n        for f in s:\n            n = self.f[:]\n            if f == 'E':\n                t = n[0]\n                n[0] = n[3]\n                n[3] = n[5]\n                n[5] = n[2]\n                n[2] = t\n            elif f == 'W':\n                t = n[0]\n                n[0] = n[2]\n                n[2] = n[5]\n                n[5] = n[3]\n                n[3] = t\n            elif f == 'N':\n                t = n[0]\n                n[0] = n[1]\n                n[1] = n[5]\n                n[5] = n[4]\n                n[4] = t\n            else:\n                t = n[0]\n                n[0] = n[4]\n                n[4] = n[5]\n                n[5] = n[1]\n                n[1] = t\n            self.f = n\n\n    def to_top(self, index):\n        if index == 1:\n            self.roll('N')\n        elif index == 2:\n            self.roll('W')\n        elif index == 3:\n            self.roll('E')\n        elif index == 4:\n            self.roll('S')\n        elif index == 5:\n            self.roll('NN')\n        return self\n\n    def side_roll(self):\n        t  = self.f[1]\n        self.f[1] = self.f[2]\n        self.f[2] = self.f[4]\n        self.f[4] = self.f[3]\n        self.f[3] = t\n        return self\n\n    def all_face(self):\n        faces = []\n        for i in range(0,6):\n            t = Dice(self.f[:])\n            faces.append(t.to_top(i).f)\n            for j in range(3):\n                faces.append(t.side_roll().f)\n        return faces\n\nd1, d2 = (Dice(list(input().split())) for _ in range(2))\nfs = d1.all_face()\nprint('Yes' if d2.f in fs else 'No')```\n "
    },
    {
        "user_id": "u685244071",
        "problem_id": "p03992",
        "submission1_id": "s334820153",
        "code_content": "\ns = input()\n\na = s[0:4] + ' '\nb = s[4:12]\n\nprint('{} {}'.format(a, b))",
        "origin_generated_text": "\n```\ns = input()\n\na = s[0:4] + ' '\nb = s[4:12]\n\nprint('{} {}'.format(a, b))```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03714",
        "submission1_id": "s946978997",
        "code_content": "\nimport heapq\nn = int(input())\na = list(map(int,input().split()))\n\nleft_seq = sorted(a[0:n])\nright_seq =  sorted(a[n:2*n])\nleft_sum = [0]*(n+1)\nright_sum = [0]*(n+1)\nleft_sum[0] =  sum(left_seq) \nright_sum[n] =  sum(right_seq) \n\n\nfor i in range(n):\n  if left_seq[0]<a[n+i]:\n    left_sum[i+1] = left_sum[i]-left_seq[0]+a[n+i]\n    heapq.heappush(left_seq, a[n+i])\n  else:\n    left_sum[i+1] = left_sum[i]\n  \n  \n\nfor i in range(n)[::-1]:\n  if right_seq[0]>a[n+i]:\n    right_sum[i] = right_sum[i+1]-right_seq[0]+a[n+i]\n    heapq.heappushpop(right_seq, a[n+i])\n  else:\n    right_sum[i] = right_sum[i+1]\n  \n\nans = -float(\"inf\")\nfor i in range(n+1):\n  ans = max(ans,left_sum[i]-right_sum[i])\nprint(ans)",
        "origin_generated_text": "\n```\nimport heapq\nn = int(input())\na = list(map(int,input().split()))\n\nleft_seq = sorted(a[0:n])\nright_seq =  sorted(a[n:2*n])\nleft_sum = [0]*(n+1)\nright_sum = [0]*(n+1)\nleft_sum[0] =  sum(left_seq) \nright_sum[n] =  sum(right_seq) \n\n\nfor i in range(n):\n  if left_seq[0]<a[n+i]:\n    left_sum[i+1] = left_sum[i]-left_seq[0]+a[n+i]\n    heapq.heappush(left_seq, a[n+i])\n  else:\n    left_sum[i+1] = left_sum[i]\n  \n  \n\nfor i in range(n)[::-1]:\n  if right_seq[0]>a[n+i]:\n    right_sum[i] = right_sum[i+1]-right_seq[0]+a[n+i]\n    heapq.heappushpop(right_seq, a[n+i])\n  else:\n    right_sum[i] = right_sum[i+1]\n  \n\nans = -float(\"inf\")\nfor i in range(n+1):\n  ans = max(ans,left_sum[i]-right_sum[i])\nprint(ans)```\n "
    },
    {
        "user_id": "u026788530",
        "problem_id": "p03796",
        "submission1_id": "s084155396",
        "code_content": "\nn=int(input())\nans=1\nfor i in range(n):\n  ans*=(i+1)\n  ans%=1000000007\nprint(ans)",
        "origin_generated_text": "\n```\nn=int(input())\nans=1\nfor i in range(n):\n  ans*=(i+1)\n  ans%=1000000007\nprint(ans)```\n "
    },
    {
        "user_id": "u014912346",
        "problem_id": "p03303",
        "submission1_id": "s452419862",
        "code_content": "\ndef main():\n    s_i = input()\n    n_i = int(input())\n    ans = \"\"\n    while True:\n        if len(s_i) < n_i:\n            if len(s_i) == 0:\n                break\n            else:\n                ans += s_i[0]\n                break\n        else:\n            ans += s_i[:n_i][0]\n            s_i = s_i[n_i:]\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    s_i = input()\n    n_i = int(input())\n    ans = \"\"\n    while True:\n        if len(s_i) < n_i:\n            if len(s_i) == 0:\n                break\n            else:\n                ans += s_i[0]\n                break\n        else:\n            ans += s_i[:n_i][0]\n            s_i = s_i[n_i:]\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u785578220",
        "problem_id": "p03943",
        "submission1_id": "s955553210",
        "code_content": "\nl= list(map(int, input().split()))\nl.sort()\nif l[0] == l[1] == l[2]:\n    print(\"Yes\")\nelse:print(\"No\")",
        "origin_generated_text": "\n```\nl= list(map(int, input().split()))\nl.sort()\nif l[0] == l[1] == l[2]:\n    print(\"Yes\")\nelse:print(\"No\")```\n "
    },
    {
        "user_id": "u698771758",
        "problem_id": "p03103",
        "submission1_id": "s360286480",
        "code_content": "\na,b=map(int,input().split())\ne=[]\nfor i in range(a):\n    c,d=map(int, input().split())\n    e+=[[c,d]]\ne.sort()\na=i=j=0\nwhile i < b:\n    a+=(e[j][0]*e[j][1])\n    i+=e[j][1]\n    j+=1\nprint(a-((i-b)*e[j-1][0]))",
        "origin_generated_text": "\n```\na,b=map(int,input().split())\ne=[]\nfor i in range(a):\n    c,d=map(int, input().split())\n    e+=[[c,d]]\ne.sort()\na=i=j=0\nwhile i < b:\n    a+=(e[j][0]*e[j][1])\n    i+=e[j][1]\n    j+=1\nprint(a-((i-b)*e[j-1][0]))```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p02742",
        "submission1_id": "s547467310",
        "code_content": "\nimport math\nh,w = map(int,input().split())\n\nif h % 2 == 0 and w % 2 == 0:\n    print(math.floor(h*w/2))\nelif h % 2 == 0 or w % 2 == 0:\n    print(math.floor(h*w/2)-1)\nelse:\n    print(math.floor(h*w/2)-2)",
        "origin_generated_text": "\n```\nimport math\nh,w = map(int,input().split())\n\nif h % 2 == 0 and w % 2 == 0:\n    print(math.floor(h*w/2))\nelif h % 2 == 0 or w % 2 == 0:\n    print(math.floor(h*w/2)-1)\nelse:\n    print(math.floor(h*w/2)-2)```\n "
    },
    {
        "user_id": "u131984977",
        "problem_id": "p02385",
        "submission1_id": "s931017909",
        "code_content": "\nclass Dice:\n    def __init__(self, data):\n        self.data = data\n    \n    def __eq__(self, value):\n        for a in range(6):\n            self.moveTopTo(self.getSortedList()[a])\n            value.moveTopTo(value.getSortedList()[a])\n            for b in range(4):\n                if self.data == value.data:\n                    return True\n                else:\n                    value.move('R')\n        return False\n\n    def move(self, direction):\n        if direction == 'E':\n            self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                self.data[3], self.data[5], self.data[2], self.data[0]\n        elif direction == 'N':\n            self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                self.data[1], self.data[0], self.data[4], self.data[5]\n        elif direction == 'S':\n            self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                self.data[4], self.data[0], self.data[1], self.data[5]\n        elif direction == 'W':\n            self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                self.data[2], self.data[5], self.data[3], self.data[0]\n        elif direction == 'R':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[3], self.data[1], self.data[2], self.data[4]\n        elif direction == 'L':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[2], self.data[4], self.data[3], self.data[1]\n\n    def moveTopTo(self, target):\n        for a in range(4):\n            if self.data[0] == target:\n                break\n            self.move('W')\n        if self.data[4] == target:\n            self.move('S')\n        elif self.data[1] == target:\n            self.move('N')\n    \n    def moveFrontTo(self, target):\n        for a in range(4):\n            if self.data[1] == target:\n                break\n            self.move('R')\n\n    def getTop(self):\n        return self.data[0]\n    \n    def getRight(self):\n        return self.data[2]\n\n    def getSortedList(self):\n        tmp = self.data[:]\n        tmp.sort()\n        return tmp\n\n\na = Dice(input().split())\nb = Dice(input().split())\nif a == b:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nclass Dice:\n    def __init__(self, data):\n        self.data = data\n    \n    def __eq__(self, value):\n        for a in range(6):\n            self.moveTopTo(self.getSortedList()[a])\n            value.moveTopTo(value.getSortedList()[a])\n            for b in range(4):\n                if self.data == value.data:\n                    return True\n                else:\n                    value.move('R')\n        return False\n\n    def move(self, direction):\n        if direction == 'E':\n            self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                self.data[3], self.data[5], self.data[2], self.data[0]\n        elif direction == 'N':\n            self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                self.data[1], self.data[0], self.data[4], self.data[5]\n        elif direction == 'S':\n            self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                self.data[4], self.data[0], self.data[1], self.data[5]\n        elif direction == 'W':\n            self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                self.data[2], self.data[5], self.data[3], self.data[0]\n        elif direction == 'R':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[3], self.data[1], self.data[2], self.data[4]\n        elif direction == 'L':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[2], self.data[4], self.data[3], self.data[1]\n\n    def moveTopTo(self, target):\n        for a in range(4):\n            if self.data[0] == target:\n                break\n            self.move('W')\n        if self.data[4] == target:\n            self.move('S')\n        elif self.data[1] == target:\n            self.move('N')\n    \n    def moveFrontTo(self, target):\n        for a in range(4):\n            if self.data[1] == target:\n                break\n            self.move('R')\n\n    def getTop(self):\n        return self.data[0]\n    \n    def getRight(self):\n        return self.data[2]\n\n    def getSortedList(self):\n        tmp = self.data[:]\n        tmp.sort()\n        return tmp\n\n\na = Dice(input().split())\nb = Dice(input().split())\nif a == b:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p03041",
        "submission1_id": "s389420737",
        "code_content": "\np,q = input().split()\nq_ = int(q) - 1 \nn = input()\nx = n[:q_] + n[q_].lower() + n[q_ + 1:]\nprint(x)",
        "origin_generated_text": "\n```\np,q = input().split()\nq_ = int(q) - 1 \nn = input()\nx = n[:q_] + n[q_].lower() + n[q_ + 1:]\nprint(x)```\n "
    },
    {
        "user_id": "u780565479",
        "problem_id": "p03752",
        "submission1_id": "s141174877",
        "code_content": "\nn,k = map(int,input().split())\na = [int(x) for x in input().split()]\n_min = 1145141919810\nfor i in range(2**(n-1)):\n    ctr = 0\n    val = 0\n    h_max = a[0]\n    for j in range(n-1):\n        if (i>>j)&1:\n            ctr+=1\n            h_max = h_max+1 if h_max>=a[j+1] else a[j+1]\n            val+=h_max-a[j+1]\n    if val<_min and ctr>=k-1 and h_max<=10**9:\n        _min = val\nprint(_min)",
        "origin_generated_text": "\n```\nn,k = map(int,input().split())\na = [int(x) for x in input().split()]\n_min = 1145141919810\nfor i in range(2**(n-1)):\n    ctr = 0\n    val = 0\n    h_max = a[0]\n    for j in range(n-1):\n        if (i>>j)&1:\n            ctr+=1\n            h_max = h_max+1 if h_max>=a[j+1] else a[j+1]\n            val+=h_max-a[j+1]\n    if val<_min and ctr>=k-1 and h_max<=10**9:\n        _min = val\nprint(_min)```\n "
    },
    {
        "user_id": "u544034775",
        "problem_id": "p02917",
        "submission1_id": "s674018087",
        "code_content": "\nn = int(input())\nb = [int(i) for i in input().split()] \n\nl = [b[0]]\nif n>=3:\n  for i in range(1, len(b)-1):\n      test =  b[i+1] - b[i]\n      if test>=0:\n          l.append(b[i])\n      else:\n          l.append(b[i+1])\n  l.append(b[-1])\n  print(sum(l))\nelse:\n  print(b[0]*2)",
        "origin_generated_text": "\n```\nn = int(input())\nb = [int(i) for i in input().split()] \n\nl = [b[0]]\nif n>=3:\n  for i in range(1, len(b)-1):\n      test =  b[i+1] - b[i]\n      if test>=0:\n          l.append(b[i])\n      else:\n          l.append(b[i+1])\n  l.append(b[-1])\n  print(sum(l))\nelse:\n  print(b[0]*2)```\n "
    },
    {
        "user_id": "u722875240",
        "problem_id": "p02699",
        "submission1_id": "s092131370",
        "code_content": "\na, b = map(int, input().split())\nprint(\"unsafe\" if a <= b else \"safe\")",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\nprint(\"unsafe\" if a <= b else \"safe\")```\n "
    },
    {
        "user_id": "u186426563",
        "problem_id": "p04019",
        "submission1_id": "s569253180",
        "code_content": "\ns = input()\nprint('Yes' if('W' in s == 'E' in s and 'S' in s == 'N' in s) and len(s) % 2 == 0 else 'No')",
        "origin_generated_text": "\n```\ns = input()\nprint('Yes' if('W' in s == 'E' in s and 'S' in s == 'N' in s) and len(s) % 2 == 0 else 'No')```\n "
    },
    {
        "user_id": "u581603131",
        "problem_id": "p03998",
        "submission1_id": "s471409352",
        "code_content": "\nSA, SB, SC = [input() for i in range(3)]\nSA = SA + '0'\nSB = SB + '0'\nSC = SC + '0'\n\ncard = SA[0]\nSA = SA[1:]\n\nfor i in range(1000):\n    if SA == '0' and card == 'a':\n        print('A')\n        break\n    elif SB == '0' and card == 'b':\n        print('B')\n        break\n    elif SC == '0' and card == 'c':\n        print('C')\n        break\n    \n    if card == 'a':\n        card = SA[0]\n        SA = SA[1:]\n    elif card == 'b':\n        card = SB[0]\n        SB = SB[1:]\n    elif card == 'c':\n        card = SC[0]\n        SC = SC[1:]\n    else:\n        print('A')\n        break",
        "origin_generated_text": "\n```\nSA, SB, SC = [input() for i in range(3)]\nSA = SA + '0'\nSB = SB + '0'\nSC = SC + '0'\n\ncard = SA[0]\nSA = SA[1:]\n\nfor i in range(1000):\n    if SA == '0' and card == 'a':\n        print('A')\n        break\n    elif SB == '0' and card == 'b':\n        print('B')\n        break\n    elif SC == '0' and card == 'c':\n        print('C')\n        break\n    \n    if card == 'a':\n        card = SA[0]\n        SA = SA[1:]\n    elif card == 'b':\n        card = SB[0]\n        SB = SB[1:]\n    elif card == 'c':\n        card = SC[0]\n        SC = SC[1:]\n    else:\n        print('A')\n        break```\n "
    },
    {
        "user_id": "u727787724",
        "problem_id": "p03303",
        "submission1_id": "s358521323",
        "code_content": "\ns=list(input())\nw=int(input())\nx=[]\ny=''\nans=''\ncount=[]\nfor i in range(len(s)):\n    y+=s[i]\n    if len(list(y))==w:\n        x.append(y)\n        y=''\nif len(y)!=0:\n    x.append(y)\nfor j in range(len(x)):\n    count=list(x[j])\n    ans+=count[0]\nprint(ans)\n",
        "origin_generated_text": "\n```\ns=list(input())\nw=int(input())\nx=[]\ny=''\nans=''\ncount=[]\nfor i in range(len(s)):\n    y+=s[i]\n    if len(list(y))==w:\n        x.append(y)\n        y=''\nif len(y)!=0:\n    x.append(y)\nfor j in range(len(x)):\n    count=list(x[j])\n    ans+=count[0]\nprint(ans)\n```\n "
    },
    {
        "user_id": "u634079249",
        "problem_id": "p03563",
        "submission1_id": "s527906073",
        "code_content": "\nimport sys\nimport os\n\n\ndef main():\n    if os.getenv(\"LOCAL\"):\n        sys.stdin = open(\"input.txt\", \"r\")\n\n    R = float(sys.stdin.readline().rstrip())\n    G = float(sys.stdin.readline().rstrip())\n    print(int(R+(G-R)*2))\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nimport sys\nimport os\n\n\ndef main():\n    if os.getenv(\"LOCAL\"):\n        sys.stdin = open(\"input.txt\", \"r\")\n\n    R = float(sys.stdin.readline().rstrip())\n    G = float(sys.stdin.readline().rstrip())\n    print(int(R+(G-R)*2))\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u076245995",
        "problem_id": "p02665",
        "submission1_id": "s883166910",
        "code_content": "\nN = int(input())\nA_leaf = list(map(int, input().split()))\ns = [0]*(N+2)\nfor i in range(1, N+2):\n    s[i] = s[i-1] + A_leaf[i-1]\nnode = [1]*(N+1)\nfor i in range(1, N+1):\n    node[i] = min(node[i-1] - A_leaf[i-1], (s[N+1]-s[i]) / 2)*2 + 1\n    if node[i] <= 0 or node[i] % 2 != 0:\n        print(-1)\n        exit()\nelse:\n    print(int(sum(node)))",
        "origin_generated_text": "\n```\nN = int(input())\nA_leaf = list(map(int, input().split()))\ns = [0]*(N+2)\nfor i in range(1, N+2):\n    s[i] = s[i-1] + A_leaf[i-1]\nnode = [1]*(N+1)\nfor i in range(1, N+1):\n    node[i] = min(node[i-1] - A_leaf[i-1], (s[N+1]-s[i]) / 2)*2 + 1\n    if node[i] <= 0 or node[i] % 2 != 0:\n        print(-1)\n        exit()\nelse:\n    print(int(sum(node)))```\n "
    },
    {
        "user_id": "u190405389",
        "problem_id": "p03972",
        "submission1_id": "s571004823",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10**7)\n\nreadline = sys.stdin.buffer.readline\ndef readstr():return readline().rstrip().decode()\ndef readstrs():return list(readline().decode().split())\ndef readint():return int(readline())\ndef readints():return list(map(int,readline().split()))\ndef printrows(x):print('\\n'.join(map(str,x)))\ndef printline(x):print(' '.join(map(str,x)))\n\nimport heapq\n\n\nw,h =readints()\np = [readint() for i in range(w)]\nq = [readint() for i in range(h)]\n\nheapq.heapify(p)\nheapq.heapify(q)\n\nedge = 0\ncost = 0\nused = [0,0]\n\nwhile edge < (h+1)*(w+1)-1:\n    if p and q:\n        if p[0]<q[0]:\n            flag = 1\n        else:\n            flag = 0\n    elif p:\n        flag = 1\n    else:\n        flag = 0\n    if flag:\n        x = heapq.heappop(p)\n        edge += h+1-used[1]\n        cost += x * (h+1-used[1])\n        used[0] += 1\n    else:\n        x = heapq.heappop(q)\n        edge += w+1-used[0]\n        cost += x * (w+1-used[0])\n        used[1] += 1\n\nprint(cost)\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10**7)\n\nreadline = sys.stdin.buffer.readline\ndef readstr():return readline().rstrip().decode()\ndef readstrs():return list(readline().decode().split())\ndef readint():return int(readline())\ndef readints():return list(map(int,readline().split()))\ndef printrows(x):print('\\n'.join(map(str,x)))\ndef printline(x):print(' '.join(map(str,x)))\n\nimport heapq\n\n\nw,h =readints()\np = [readint() for i in range(w)]\nq = [readint() for i in range(h)]\n\nheapq.heapify(p)\nheapq.heapify(q)\n\nedge = 0\ncost = 0\nused = [0,0]\n\nwhile edge < (h+1)*(w+1)-1:\n    if p and q:\n        if p[0]<q[0]:\n            flag = 1\n        else:\n            flag = 0\n    elif p:\n        flag = 1\n    else:\n        flag = 0\n    if flag:\n        x = heapq.heappop(p)\n        edge += h+1-used[1]\n        cost += x * (h+1-used[1])\n        used[0] += 1\n    else:\n        x = heapq.heappop(q)\n        edge += w+1-used[0]\n        cost += x * (w+1-used[0])\n        used[1] += 1\n\nprint(cost)\n\n\n\n\n\n\n\n\n```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03965",
        "submission1_id": "s972391285",
        "code_content": "\ns = input()\n\np_count = 0\ng_count = 0\nwin = 0\n\nfor i in list(s):\n    if i == \"g\" and p_count <= g_count:\n        p_count += 1\n        win += 1\n    elif i == \"g\":\n        g_count += 1\n    elif i == \"p\":\n        p_count += 1\n\nprint(win)\n",
        "origin_generated_text": "\n```\ns = input()\n\np_count = 0\ng_count = 0\nwin = 0\n\nfor i in list(s):\n    if i == \"g\" and p_count <= g_count:\n        p_count += 1\n        win += 1\n    elif i == \"g\":\n        g_count += 1\n    elif i == \"p\":\n        p_count += 1\n\nprint(win)\n```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s205590050",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if 0 <= par[i][x] <= y:\n            k += 1<<i\n            x = par[i][x]\n    return k+1\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    ans.append(hoge(a, b)-1)\n\nprint(*ans, sep=\"\\n\", end=\"\")",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if 0 <= par[i][x] <= y:\n            k += 1<<i\n            x = par[i][x]\n    return k+1\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    ans.append(hoge(a, b)-1)\n\nprint(*ans, sep=\"\\n\", end=\"\")```\n "
    },
    {
        "user_id": "u567380442",
        "problem_id": "p02297",
        "submission1_id": "s145029572",
        "code_content": "\nfrom sys import stdin\nreadline = stdin.readline\n\n\ndef dot(a, b):\n    return a.real * b.real + a.imag * b.imag\n\n\ndef triangle(a, b, c):\n    v1, v2 = b - a, c - a\n    s = abs(v1) ** 2 * abs(v2) ** 2 - dot(v1, v2) ** 2\n    return s ** 0.5 * 0.5\n\n\ndef polygon(p):\n    return sum(triangle(p[0], pi, pj) for pi, pj in zip(p[1:], p[2:])) + triangle(p[0], p[-1], p[-2])\n\n\nn = int(readline())\np = [map(int, readline().split()) for _ in range(n)]\np = [x + y * 1j for x, y in p]\nprint('{:.1f}'.format(polygon(p)))",
        "origin_generated_text": "\n```\nfrom sys import stdin\nreadline = stdin.readline\n\n\ndef dot(a, b):\n    return a.real * b.real + a.imag * b.imag\n\n\ndef triangle(a, b, c):\n    v1, v2 = b - a, c - a\n    s = abs(v1) ** 2 * abs(v2) ** 2 - dot(v1, v2) ** 2\n    return s ** 0.5 * 0.5\n\n\ndef polygon(p):\n    return sum(triangle(p[0], pi, pj) for pi, pj in zip(p[1:], p[2:])) + triangle(p[0], p[-1], p[-2])\n\n\nn = int(readline())\np = [map(int, readline().split()) for _ in range(n)]\np = [x + y * 1j for x, y in p]\nprint('{:.1f}'.format(polygon(p)))```\n "
    },
    {
        "user_id": "u888337853",
        "problem_id": "p03096",
        "submission1_id": "s371004440",
        "code_content": "\nimport sys\nimport math\nimport collections\nimport bisect\nimport copy\n\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 16\nMOD = 10 ** 9 + 7\n\n\nni = lambda: int(sys.stdin.readline())\nns = lambda: map(int, sys.stdin.readline().split())\nna = lambda: list(map(int, sys.stdin.readline().split()))\nna1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().split()))\n\n\n\n\n\ndef main():\n    n = ni()\n    d = []\n    dp = [INF for _ in range(n + 1)]\n    dp[0] = 1\n\n    for i in range(n):\n        di = ni()\n        di -= 1\n        if i > 0:\n            if d[-1] == di:\n                d.append(-1)\n                continue\n        d.append(di)\n\n    for i, di in enumerate(d):\n        if di == -1:\n            continue\n        bidx = bisect.bisect_left(d, di)\n        if bidx - 1 >= 0:\n            dp[i + 1] += dp[bidx - 1]\n            dp[i + 1] %= MOD\n\n    print(dp[n])\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nimport sys\nimport math\nimport collections\nimport bisect\nimport copy\n\n\n\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 16\nMOD = 10 ** 9 + 7\n\n\nni = lambda: int(sys.stdin.readline())\nns = lambda: map(int, sys.stdin.readline().split())\nna = lambda: list(map(int, sys.stdin.readline().split()))\nna1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().split()))\n\n\n\n\n\ndef main():\n    n = ni()\n    d = []\n    dp = [INF for _ in range(n + 1)]\n    dp[0] = 1\n\n    for i in range(n):\n        di = ni()\n        di -= 1\n        if i > 0:\n            if d[-1] == di:\n                d.append(-1)\n                continue\n        d.append(di)\n\n    for i, di in enumerate(d):\n        if di == -1:\n            continue\n        bidx = bisect.bisect_left(d, di)\n        if bidx - 1 >= 0:\n            dp[i + 1] += dp[bidx - 1]\n            dp[i + 1] %= MOD\n\n    print(dp[n])\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u476604182",
        "problem_id": "p03480",
        "submission1_id": "s747904425",
        "code_content": "\nS = input()\nj = 0\nm = S[0]\nls = []\nfor i in range(len(S)):\n  if m!=S[i]:\n    ls += [i-j]\n    j = i\n    m = S[i]\nls += [len(S)-j]\nif len(ls)<=2:\n  print(max(ls))\nelse:\n  ans = ls[0]+ls[-1]\n  for i in range(1,len(ls)-1):\n    ans = max(ans,ls[i]+ls[-1-i])\n  print(ans)",
        "origin_generated_text": "\n```\nS = input()\nj = 0\nm = S[0]\nls = []\nfor i in range(len(S)):\n  if m!=S[i]:\n    ls += [i-j]\n    j = i\n    m = S[i]\nls += [len(S)-j]\nif len(ls)<=2:\n  print(max(ls))\nelse:\n  ans = ls[0]+ls[-1]\n  for i in range(1,len(ls)-1):\n    ans = max(ans,ls[i]+ls[-1-i])\n  print(ans)```\n "
    },
    {
        "user_id": "u788856752",
        "problem_id": "p03563",
        "submission1_id": "s577567845",
        "code_content": "\nR = int(input())\nG = int(input())\n\nprint(2 * G - R)\n",
        "origin_generated_text": "\n```\nR = int(input())\nG = int(input())\n\nprint(2 * G - R)\n```\n "
    },
    {
        "user_id": "u529518602",
        "problem_id": "p02917",
        "submission1_id": "s199773165",
        "code_content": "\nN = int(input())\nB = list(map(int, input().split()))\nA = []\n\nA.append(B[0])\n\nfor i in range(N-2):\n    A.append(min(B[i], B[i+1]))\n\nA.append(max(B[N-2], B[N-1]))\n\nprint(sum(A))\n",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int, input().split()))\nA = []\n\nA.append(B[0])\n\nfor i in range(N-2):\n    A.append(min(B[i], B[i+1]))\n\nA.append(max(B[N-2], B[N-1]))\n\nprint(sum(A))\n```\n "
    },
    {
        "user_id": "u789132058",
        "problem_id": "p02880",
        "submission1_id": "s366902199",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nn=int(input())\nl=[x*y for x in range(1,10) for y in range(1,10)]\nif n in l:\n    print(\"Yes\")\nelse :\n    print(\"No\")",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nn=int(input())\nl=[x*y for x in range(1,10) for y in range(1,10)]\nif n in l:\n    print(\"Yes\")\nelse :\n    print(\"No\")```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s291819532",
        "code_content": "\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    print(c%1000000007)\n",
        "origin_generated_text": "\n```\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    print(c%1000000007)\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s224234368",
        "code_content": "\ns = input()\nt = input()\n\n\ndef pattern(inputv, t):\n    nxt = [0]*len(inputv)\n    for i in range(1, len(nxt)):\n        k = nxt[i - 1]\n        while True:\n            if inputv[i] == t[k]:\n                nxt[i] = k + 1\n                break\n            elif k == 0:\n                nxt[i] = 0\n                break\n            else:\n                k = nxt[k - 1]\n\n    smallPieceLen = len(inputv) - nxt[-1]\n    if len(inputv) % smallPieceLen != 0:\n        return inputv\n\n    return inputv[0:smallPieceLen]\n\n\nif pattern(s, t) == pattern(t, s):\n    print(-1)\n    exit()\n\ns = s + s\ncnt = 0\nans = []\n\nj = 0\ni = 0\nli = []\nflag = True\nwhile i < len(s):\n    if s[i] == t[j]:\n        flag = True\n        if j == len(t) - 1:\n            cnt += 1\n            j = 0\n            i += 1\n        else:\n            j += 1\n            i += 1\n    else:\n        if cnt != 0:\n            ans.append(cnt)\n        cnt = 0\n        j = 0\n        if flag:\n            i += 1\n            flag = False\n        else:\n            flag = True\n            continue\nif cnt != 0:\n    ans.append(cnt)\n    cnt = 0\n\nans.append(0)\nprint(max(ans))",
        "origin_generated_text": "\n```\ns = input()\nt = input()\n\n\ndef pattern(inputv, t):\n    nxt = [0]*len(inputv)\n    for i in range(1, len(nxt)):\n        k = nxt[i - 1]\n        while True:\n            if inputv[i] == t[k]:\n                nxt[i] = k + 1\n                break\n            elif k == 0:\n                nxt[i] = 0\n                break\n            else:\n                k = nxt[k - 1]\n\n    smallPieceLen = len(inputv) - nxt[-1]\n    if len(inputv) % smallPieceLen != 0:\n        return inputv\n\n    return inputv[0:smallPieceLen]\n\n\nif pattern(s, t) == pattern(t, s):\n    print(-1)\n    exit()\n\ns = s + s\ncnt = 0\nans = []\n\nj = 0\ni = 0\nli = []\nflag = True\nwhile i < len(s):\n    if s[i] == t[j]:\n        flag = True\n        if j == len(t) - 1:\n            cnt += 1\n            j = 0\n            i += 1\n        else:\n            j += 1\n            i += 1\n    else:\n        if cnt != 0:\n            ans.append(cnt)\n        cnt = 0\n        j = 0\n        if flag:\n            i += 1\n            flag = False\n        else:\n            flag = True\n            continue\nif cnt != 0:\n    ans.append(cnt)\n    cnt = 0\n\nans.append(0)\nprint(max(ans))```\n "
    },
    {
        "user_id": "u740767776",
        "problem_id": "p03573",
        "submission1_id": "s980487369",
        "code_content": "\ns = list(input().split())\nif s[0] == s[1]:\n  print(int(s[2]))\nelif s[1] == s[2]:\n  print(int(s[0]))\nelse:\n  print(int(s[1]))",
        "origin_generated_text": "\n```\ns = list(input().split())\nif s[0] == s[1]:\n  print(int(s[2]))\nelif s[1] == s[2]:\n  print(int(s[0]))\nelse:\n  print(int(s[1]))```\n "
    },
    {
        "user_id": "u411302151",
        "problem_id": "p02767",
        "submission1_id": "s437066355",
        "code_content": "\nN = int(input())\nl = list(map(int, input().split()))\n\nl.sort()\n\nstamina = 0\n\nfor p in l:\n\tstamina += (p - l[N\n\nprint(stamina)",
        "origin_generated_text": "\n```\nN = int(input())\nl = list(map(int, input().split()))\n\nl.sort()\n\nstamina = 0\n\nfor p in l:\n\tstamina += (p - l[N\n\nprint(stamina)```\n "
    },
    {
        "user_id": "u375500286",
        "problem_id": "p03625",
        "submission1_id": "s696635497",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\na.sort(reverse=True)\nans=[]\nfor i in range(n-1,0,-1):\n    if a[i]==a[i+1]:\n        ans.append(a[i])\n        i=i-2\nif len(ans) >= 2:\n    print(ans[0]*ans[1])    \nelse:\n    print(0)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\na.sort(reverse=True)\nans=[]\nfor i in range(n-1,0,-1):\n    if a[i]==a[i+1]:\n        ans.append(a[i])\n        i=i-2\nif len(ans) >= 2:\n    print(ans[0]*ans[1])    \nelse:\n    print(0)```\n "
    },
    {
        "user_id": "u892251744",
        "problem_id": "p03613",
        "submission1_id": "s104235737",
        "code_content": "\ndef main():\n    import sys\n    from collections import defaultdict\n    input = sys.stdin.readline\n\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = defaultdict(int)\n    for a in A:\n        C[a] += 1\n\n    ans = 0\n    for i in range(0, 10**5+1):\n        ans = max(ans, C[i-1] + C[i] + C[i+1])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\ndef main():\n    import sys\n    from collections import defaultdict\n    input = sys.stdin.readline\n\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = defaultdict(int)\n    for a in A:\n        C[a] += 1\n\n    ans = 0\n    for i in range(0, 10**5+1):\n        ans = max(ans, C[i-1] + C[i] + C[i+1])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u541475502",
        "problem_id": "p03992",
        "submission1_id": "s163797489",
        "code_content": "\ns = input()\nprint(s[:4],s[4:])",
        "origin_generated_text": "\n```\ns = input()\nprint(s[:4],s[4:])```\n "
    },
    {
        "user_id": "u855199458",
        "problem_id": "p02287",
        "submission1_id": "s848925146",
        "code_content": "\n\nimport sys\nfrom math import floor\nsys.setrecursionlimit(100000)\n\nN = int(input())\nheap = [None] + [int(n) for n in input().split()]\n\nfor i, h in enumerate(heap[1:]):\n    i += 1\n    text = \"node {}\".format(i)\n    if i != 1:\n        text += \", parent key = {}\".format(heap[floor(i/2)])\n    if 2 * i <= N:\n        text += \", left key = {}\".format(heap[2*i])\n    if 2 * i + 1 <= N:\n        text += \", right key = {}\".format(heap[2*i + 1])\n    text += \", key = {}\".format(h)\n    print(text)",
        "origin_generated_text": "\n```\n\nimport sys\nfrom math import floor\nsys.setrecursionlimit(100000)\n\nN = int(input())\nheap = [None] + [int(n) for n in input().split()]\n\nfor i, h in enumerate(heap[1:]):\n    i += 1\n    text = \"node {}\".format(i)\n    if i != 1:\n        text += \", parent key = {}\".format(heap[floor(i/2)])\n    if 2 * i <= N:\n        text += \", left key = {}\".format(heap[2*i])\n    if 2 * i + 1 <= N:\n        text += \", right key = {}\".format(heap[2*i + 1])\n    text += \", key = {}\".format(h)\n    print(text)```\n "
    },
    {
        "user_id": "u857673087",
        "problem_id": "p03206",
        "submission1_id": "s432614583",
        "code_content": "\nD = int(input())\n\nprint('Christmas'+' Eve'*(25-D))\n",
        "origin_generated_text": "\n```\nD = int(input())\n\nprint('Christmas'+' Eve'*(25-D))\n```\n "
    },
    {
        "user_id": "u557494880",
        "problem_id": "p02963",
        "submission1_id": "s933542040",
        "code_content": "\nS = int(input())\nX1 = 0\nY1 = 0\nif S <= 10**9:\n    X2 = S\n    Y2 = 0\n    X3 = 0\n    Y3 = 1\nelif S <= 2*10**9:\n    S = 2*10**9 - S\n    X2 = 10**9\n    Y3 = 10**9\n    X3 = S\n    Y2 = 1\nelse:\n    X2 = 10**9\n    Y3 = 10**9\n    X3 = 10**9\n    Y2 = 1\nprint(X1,Y1,X2,Y2,X3,Y3)\n",
        "origin_generated_text": "\n```\nS = int(input())\nX1 = 0\nY1 = 0\nif S <= 10**9:\n    X2 = S\n    Y2 = 0\n    X3 = 0\n    Y3 = 1\nelif S <= 2*10**9:\n    S = 2*10**9 - S\n    X2 = 10**9\n    Y3 = 10**9\n    X3 = S\n    Y2 = 1\nelse:\n    X2 = 10**9\n    Y3 = 10**9\n    X3 = 10**9\n    Y2 = 1\nprint(X1,Y1,X2,Y2,X3,Y3)\n```\n "
    },
    {
        "user_id": "u152638361",
        "problem_id": "p03475",
        "submission1_id": "s682910812",
        "code_content": "\nN = int(input())\nCSF = [list(map(int,input().split())) for i in range(N-1)]\nCSF.append([0,0,1])\nans=[0]*N \nfor i in range(N-1):\n    for j in range(i,N-1):\n        if j == i:\n            ans[i]+=CSF[j][0]+CSF[j][1]\n        else:\n            if ans[i]<=CSF[j][1]:\n                ans[i]=CSF[j][0]+CSF[j][1]\n            else:\n                ans[i]+=(ans[i]-CSF[j][1])%CSF[j][2]+CSF[j][0]\nfor i in range(N):\n    print(ans[i])",
        "origin_generated_text": "\n```\nN = int(input())\nCSF = [list(map(int,input().split())) for i in range(N-1)]\nCSF.append([0,0,1])\nans=[0]*N \nfor i in range(N-1):\n    for j in range(i,N-1):\n        if j == i:\n            ans[i]+=CSF[j][0]+CSF[j][1]\n        else:\n            if ans[i]<=CSF[j][1]:\n                ans[i]=CSF[j][0]+CSF[j][1]\n            else:\n                ans[i]+=(ans[i]-CSF[j][1])%CSF[j][2]+CSF[j][0]\nfor i in range(N):\n    print(ans[i])```\n "
    },
    {
        "user_id": "u050024609",
        "problem_id": "p03326",
        "submission1_id": "s663557269",
        "code_content": "\n[N, M] = map(int, input().split())\na = [list(map(int, input().split())) for i in range(N)]\ndef value(xyz, sign):\n\treturn sum([xyz[i]*(1 - 2*((sign & (1 << i)) >> i)) for i in range(3)])\nprint(max([sum([value(a[i], sign) for i in sorted([i for i in range(N)], key = lambda index : value(a[index], sign))[-M:]]) for sign in range(1 << N)]))",
        "origin_generated_text": "\n```\n[N, M] = map(int, input().split())\na = [list(map(int, input().split())) for i in range(N)]\ndef value(xyz, sign):\n\treturn sum([xyz[i]*(1 - 2*((sign & (1 << i)) >> i)) for i in range(3)])\nprint(max([sum([value(a[i], sign) for i in sorted([i for i in range(N)], key = lambda index : value(a[index], sign))[-M:]]) for sign in range(1 << N)]))```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03998",
        "submission1_id": "s017106367",
        "code_content": "\n\nimport sys, math, fractions, itertools\n\n\ndef solve(S_A: str, S_B: str, S_C: str):\n    t = 'a'\n    A = list(S_A)\n    B = list(S_B)\n    C = list(S_C)\n    while(True):\n        if t == 'a':\n            if len(A) == 0:\n                w = 'A'\n                break\n            t = A.pop(0)\n        elif t == 'b':\n            if len(B) == 0:\n                w = 'B'\n                break\n            t = B.pop(0)\n        else:\n            if len(C) == 0:\n                w = 'C'\n                break\n            t = C.pop(0)\n    print(w)\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S_A = next(tokens)  \n    S_B = next(tokens)  \n    S_C = next(tokens)  \n    solve(S_A, S_B, S_C)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys, math, fractions, itertools\n\n\ndef solve(S_A: str, S_B: str, S_C: str):\n    t = 'a'\n    A = list(S_A)\n    B = list(S_B)\n    C = list(S_C)\n    while(True):\n        if t == 'a':\n            if len(A) == 0:\n                w = 'A'\n                break\n            t = A.pop(0)\n        elif t == 'b':\n            if len(B) == 0:\n                w = 'B'\n                break\n            t = B.pop(0)\n        else:\n            if len(C) == 0:\n                w = 'C'\n                break\n            t = C.pop(0)\n    print(w)\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S_A = next(tokens)  \n    S_B = next(tokens)  \n    S_C = next(tokens)  \n    solve(S_A, S_B, S_C)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u405660020",
        "problem_id": "p03106",
        "submission1_id": "s145938385",
        "code_content": "\na,b,k=map(int,input().split())\nnumlst=[]\nfor i in range(max(a,b)):\n    if a%(i+1)==0 and b%(i+1)==0:\n        numlst.append(i+1)\nprint(numlst[len(numlst)-k])",
        "origin_generated_text": "\n```\na,b,k=map(int,input().split())\nnumlst=[]\nfor i in range(max(a,b)):\n    if a%(i+1)==0 and b%(i+1)==0:\n        numlst.append(i+1)\nprint(numlst[len(numlst)-k])```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p04017",
        "submission1_id": "s448054824",
        "code_content": "\nimport bisect\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nd = int(input())\ngraph = [[0 for i in range(n+1)] for j in range(18)]\nfor i in range(n):\n  x = bisect.bisect_right(a,a[i]+d)\n  graph[0][i+1] = x\nfor j in range(1,18):\n  for i in range(n):\n    t = graph[j-1][i+1]\n    graph[j][i+1] = graph[j-1][t]\nq = int(input())\nfor _ in range(q):\n  x,y = map(int,input().split())\n  x,y = min(x,y),max(x,y)\n  ans = 0\n  for j in range(18)[::-1]:\n    if graph[j][x] < y:\n      ans += 2**j\n      x = graph[j][x]\n    if j == 0 and x < y:\n      ans += 1\n  print(ans)",
        "origin_generated_text": "\n```\nimport bisect\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nd = int(input())\ngraph = [[0 for i in range(n+1)] for j in range(18)]\nfor i in range(n):\n  x = bisect.bisect_right(a,a[i]+d)\n  graph[0][i+1] = x\nfor j in range(1,18):\n  for i in range(n):\n    t = graph[j-1][i+1]\n    graph[j][i+1] = graph[j-1][t]\nq = int(input())\nfor _ in range(q):\n  x,y = map(int,input().split())\n  x,y = min(x,y),max(x,y)\n  ans = 0\n  for j in range(18)[::-1]:\n    if graph[j][x] < y:\n      ans += 2**j\n      x = graph[j][x]\n    if j == 0 and x < y:\n      ans += 1\n  print(ans)```\n "
    },
    {
        "user_id": "u692687119",
        "problem_id": "p02730",
        "submission1_id": "s202551598",
        "code_content": "\nS = input()\nN = len(S)\nkai = []\nkai2 = []\nkai3 = []\nrev = []\nrev2 = []\nrev3 = []\n\nfor i in range(N):\n  kai.append(S[i])\n\nfor i in range(0, int((N - 1) / 2)):\n  kai2.append(S[i])\n\nfor i in range(int((N + 3) / 2) - 1, N):\n  kai3.append(S[i])\n\nkai.reverse()\nkai2.reverse()\nkai3.reverse()\n\nfor i in range(N):\n  rev.append(S[i])\n\nfor i in range(0, int((N - 1) / 2)):\n  rev2.append(S[i])\n\nfor i in range(int((N + 3) / 2) - 1, N):\n  rev3.append(S[i])\n\nif kai == rev:\n  if kai2 == rev2:\n    if kai3 == rev3:\n      print('Yes')\n    else:\n      print('No')\n  else:\n    print('No')\nelse:\n  print('No')\n",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\nkai = []\nkai2 = []\nkai3 = []\nrev = []\nrev2 = []\nrev3 = []\n\nfor i in range(N):\n  kai.append(S[i])\n\nfor i in range(0, int((N - 1) / 2)):\n  kai2.append(S[i])\n\nfor i in range(int((N + 3) / 2) - 1, N):\n  kai3.append(S[i])\n\nkai.reverse()\nkai2.reverse()\nkai3.reverse()\n\nfor i in range(N):\n  rev.append(S[i])\n\nfor i in range(0, int((N - 1) / 2)):\n  rev2.append(S[i])\n\nfor i in range(int((N + 3) / 2) - 1, N):\n  rev3.append(S[i])\n\nif kai == rev:\n  if kai2 == rev2:\n    if kai3 == rev3:\n      print('Yes')\n    else:\n      print('No')\n  else:\n    print('No')\nelse:\n  print('No')\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s383636637",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in range(1,10**4):\n    for j in range(1,10**4):\n        num = str(j)+\"9\"*i*3\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in list(reversed(ans))[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in range(1,10**4):\n    for j in range(1,10**4):\n        num = str(j)+\"9\"*i*3\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in list(reversed(ans))[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u488497128",
        "problem_id": "p03796",
        "submission1_id": "s067510684",
        "code_content": "\nimport sys\n\nM = 10**9 + 7\nN = int(sys.stdin.readline().strip())\n\nx = 1\n\nfor i in range(1, N+1):\n    x = (x * i) % M\n\nprint(x)\n",
        "origin_generated_text": "\n```\nimport sys\n\nM = 10**9 + 7\nN = int(sys.stdin.readline().strip())\n\nx = 1\n\nfor i in range(1, N+1):\n    x = (x * i) % M\n\nprint(x)\n```\n "
    },
    {
        "user_id": "u193025715",
        "problem_id": "p00026",
        "submission1_id": "s165128973",
        "code_content": "\npaper = [0 for i in range(1000)]\n\ndef small(x, y):\n    p = [[x, y]]\n    for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n        p.append([x + i, y + j])\n    return p\n\ndef middle(x, y):\n    p = small(x, y)\n    for i, j in zip([1, -1, 1, -1], [1, 1, -1, -1]):\n        p.append([x + i, y + j])\n    return p\n\ndef big(x, y):\n    p = middle(x, y)\n    for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n        p.append([x + i, y + j])\n    return p\n\nwhile True:\n    try:\n        x, y, size = map(int, input().split(','))\n    except:\n        print(paper.count(0))\n        print(max(paper))\n        break\n\n    if size == 1:\n        bp = small(x, y)\n    elif size == 2:\n        bp = middle(x, y)\n    elif size == 3:\n        bp = big(x, y)\n    for p in bp:\n        if not 0 <= p[0] + p[1] * 10 <= 99: continue\n        paper[p[0] + p[1] * 10] += 1\n\n    print(paper.count(0))\n    print(max(paper))",
        "origin_generated_text": "\n```\npaper = [0 for i in range(1000)]\n\ndef small(x, y):\n    p = [[x, y]]\n    for i, j in zip([-1, 0, 1, 0], [0, -1, 0, 1]):\n        p.append([x + i, y + j])\n    return p\n\ndef middle(x, y):\n    p = small(x, y)\n    for i, j in zip([1, -1, 1, -1], [1, 1, -1, -1]):\n        p.append([x + i, y + j])\n    return p\n\ndef big(x, y):\n    p = middle(x, y)\n    for i, j in zip([-2, 0, 2, 0], [0, -2, 0, 2]):\n        p.append([x + i, y + j])\n    return p\n\nwhile True:\n    try:\n        x, y, size = map(int, input().split(','))\n    except:\n        print(paper.count(0))\n        print(max(paper))\n        break\n\n    if size == 1:\n        bp = small(x, y)\n    elif size == 2:\n        bp = middle(x, y)\n    elif size == 3:\n        bp = big(x, y)\n    for p in bp:\n        if not 0 <= p[0] + p[1] * 10 <= 99: continue\n        paper[p[0] + p[1] * 10] += 1\n\n    print(paper.count(0))\n    print(max(paper))```\n "
    },
    {
        "user_id": "u177398299",
        "problem_id": "p03326",
        "submission1_id": "s418779009",
        "code_content": "\nN, M = map(int, input().split())\ncake = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10 ** 18\ndp = [[[-INF] * 8 for _ in range(M + 1)] for _ in range(N + 1)]\n\nfor i in range(1, N + 1):\n    x, y, z = cake[i - 1]\n    for j in range(M + 1):\n        for msk in range(8):\n            mx = x * (1 - 2 * (msk >> 2 & 1))\n            my = y * (1 - 2 * (msk >> 1 & 1))\n            mz = z * (1 - 2 * (msk >> 0 & 1))\n            dp[i][j][msk] = max(dp[i - 1][j][msk],\n                                dp[i - 1][j - 1][msk] + mx + my + mz)\n\nprint(max(dp[N][M][i] for i in range(8)))",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\ncake = [list(map(int, input().split())) for _ in range(N)]\n\nINF = 10 ** 18\ndp = [[[-INF] * 8 for _ in range(M + 1)] for _ in range(N + 1)]\n\nfor i in range(1, N + 1):\n    x, y, z = cake[i - 1]\n    for j in range(M + 1):\n        for msk in range(8):\n            mx = x * (1 - 2 * (msk >> 2 & 1))\n            my = y * (1 - 2 * (msk >> 1 & 1))\n            mz = z * (1 - 2 * (msk >> 0 & 1))\n            dp[i][j][msk] = max(dp[i - 1][j][msk],\n                                dp[i - 1][j - 1][msk] + mx + my + mz)\n\nprint(max(dp[N][M][i] for i in range(8)))```\n "
    },
    {
        "user_id": "u844697453",
        "problem_id": "p03479",
        "submission1_id": "s582529932",
        "code_content": "\na = input().split()\nb=0\nc=[int(a[0])]\nwhile(0==0):\n    if c[b]*2<int(a[1]):\n        c.append(c[b]*2)\n        b+=1\n    else:\n        print(len(c))\n        break",
        "origin_generated_text": "\n```\na = input().split()\nb=0\nc=[int(a[0])]\nwhile(0==0):\n    if c[b]*2<int(a[1]):\n        c.append(c[b]*2)\n        b+=1\n    else:\n        print(len(c))\n        break```\n "
    },
    {
        "user_id": "u938045879",
        "problem_id": "p02281",
        "submission1_id": "s059449949",
        "code_content": "\nn = int(input())\nroot = set(range(n))\nnodes = [0 for i in range(n)]\nfor i in range(n):\n    node = list(map(int, input().split()))\n    children = node[1:3]\n    root -= set(children)\n    nodes[node[0]] = children\n\ndef preorder(id):\n    if(id == -1):\n        return\n    order.append(id)\n    preorder(nodes[id][0])\n    preorder(nodes[id][1])\n\ndef inorder(id):\n    if(id == -1):\n        return\n    inorder(nodes[id][0])\n    order.append(id)\n    inorder(nodes[id][1])\n\ndef postorder(id):\n    if(id == -1):\n        return\n    postorder(nodes[id][0])\n    postorder(nodes[id][1])\n    order.append(id)\n\norder = []\npreorder(list(root)[0])\nprint(\"Preorder\", *order)\norder = []\ninorder(list(root)[0])\nprint(\"Inorder\", *order)\norder = []\npostorder(list(root)[0])\nprint(\"Postorder\", *order)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\nroot = set(range(n))\nnodes = [0 for i in range(n)]\nfor i in range(n):\n    node = list(map(int, input().split()))\n    children = node[1:3]\n    root -= set(children)\n    nodes[node[0]] = children\n\ndef preorder(id):\n    if(id == -1):\n        return\n    order.append(id)\n    preorder(nodes[id][0])\n    preorder(nodes[id][1])\n\ndef inorder(id):\n    if(id == -1):\n        return\n    inorder(nodes[id][0])\n    order.append(id)\n    inorder(nodes[id][1])\n\ndef postorder(id):\n    if(id == -1):\n        return\n    postorder(nodes[id][0])\n    postorder(nodes[id][1])\n    order.append(id)\n\norder = []\npreorder(list(root)[0])\nprint(\"Preorder\", *order)\norder = []\ninorder(list(root)[0])\nprint(\"Inorder\", *order)\norder = []\npostorder(list(root)[0])\nprint(\"Postorder\", *order)\n\n```\n "
    },
    {
        "user_id": "u244416763",
        "problem_id": "p03274",
        "submission1_id": "s851210085",
        "code_content": "\nn,k = map(int, input().split())\nx = list(map(int, input().split()))\nminus = [0]\nplus = [0]\nfor i in x:\n    if x:\n        plus.append(x)\n    else:\n        minus.append(-x)\nk -= 1\nans = x[-1] - x[0] + 1\nfor i in range(n-k):\n    if x[i+k] < 0:\n        ans = min(ans, -x[i])\n    elif 0 < x[i+k] and x[i] < 0:\n        if -x[i] < x[i+k]:\n            ans = min(ans, abs(2*(x[i])) + x[i+k])\n        else:\n            ans = min(ans, 2*x[i+k] + abs(x[i]))\n    else:\n        ans = min(ans, x[i+k])\n    \nprint(ans)",
        "origin_generated_text": "\n```\nn,k = map(int, input().split())\nx = list(map(int, input().split()))\nminus = [0]\nplus = [0]\nfor i in x:\n    if x:\n        plus.append(x)\n    else:\n        minus.append(-x)\nk -= 1\nans = x[-1] - x[0] + 1\nfor i in range(n-k):\n    if x[i+k] < 0:\n        ans = min(ans, -x[i])\n    elif 0 < x[i+k] and x[i] < 0:\n        if -x[i] < x[i+k]:\n            ans = min(ans, abs(2*(x[i])) + x[i+k])\n        else:\n            ans = min(ans, 2*x[i+k] + abs(x[i]))\n    else:\n        ans = min(ans, x[i+k])\n    \nprint(ans)```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s509989576",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tif(i!=n-1):\n\t\t\ta=b+c\n\t\t\tb=c\n\t\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\tmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tif(i!=n-1):\n\t\t\ta=b+c\n\t\t\tb=c\n\t\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\tmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03096",
        "submission1_id": "s712673798",
        "code_content": "\nimport sys\nN = int(input())\nC = [0]\nC = [int(sys.stdin.readline()) for i in range(N)]\ndp = [0] * (N + 100)\ncolor = [[] for i in range((2*(10**5)+100))]\ndp[0] = 1\ndp[1] = 1\ncolor[C[1]].append(1)\nfor i in range(2, N+1):\n    dp[i] = dp[i - 1]\n    for col in reversed(color[C[i-1]]):\n        if i - col == 1:\n            break\n        else:\n            dp[i] += dp[col-1]\n    color[C[i]].append(i)\nprint(dp[N] % (10 ** 9 + 7))\n",
        "origin_generated_text": "\n```\nimport sys\nN = int(input())\nC = [0]\nC = [int(sys.stdin.readline()) for i in range(N)]\ndp = [0] * (N + 100)\ncolor = [[] for i in range((2*(10**5)+100))]\ndp[0] = 1\ndp[1] = 1\ncolor[C[1]].append(1)\nfor i in range(2, N+1):\n    dp[i] = dp[i - 1]\n    for col in reversed(color[C[i-1]]):\n        if i - col == 1:\n            break\n        else:\n            dp[i] += dp[col-1]\n    color[C[i]].append(i)\nprint(dp[N] % (10 ** 9 + 7))\n```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p04019",
        "submission1_id": "s007278134",
        "code_content": "\nS = input()\n\ntmp = [0 for _ in range(4)]\n\nres = 'Yes'\nfor i in range(len(S)):\n    if S[i] == 'S':\n        tmp[0] = 1\n    elif S[i] == 'N':\n        tmp[1] = 1\n    elif S[i] == 'W':\n        tmp[2] = 1\n    else:\n        tmp[3] = 1\n        \nif tmp[0] == 1 and tmp[1] == 0:\n    res = 'No'\nif tmp[1] == 1 and tmp[0] == 0:\n    res = 'No'\nif tmp[2] == 1 and tmp[3] == 0:\n    res = 'No'\nif tmp[3] == 1 and tmp[2] == 0:\n    res = 'No'\n\nprint(res)\n\n",
        "origin_generated_text": "\n```\nS = input()\n\ntmp = [0 for _ in range(4)]\n\nres = 'Yes'\nfor i in range(len(S)):\n    if S[i] == 'S':\n        tmp[0] = 1\n    elif S[i] == 'N':\n        tmp[1] = 1\n    elif S[i] == 'W':\n        tmp[2] = 1\n    else:\n        tmp[3] = 1\n        \nif tmp[0] == 1 and tmp[1] == 0:\n    res = 'No'\nif tmp[1] == 1 and tmp[0] == 0:\n    res = 'No'\nif tmp[2] == 1 and tmp[3] == 0:\n    res = 'No'\nif tmp[3] == 1 and tmp[2] == 0:\n    res = 'No'\n\nprint(res)\n\n```\n "
    },
    {
        "user_id": "u112623731",
        "problem_id": "p02699",
        "submission1_id": "s234355438",
        "code_content": "\ns, w = map(int, input().split())\nif s <= w:\n  print('safe')\nelse:\n  print('unsafe')",
        "origin_generated_text": "\n```\ns, w = map(int, input().split())\nif s <= w:\n  print('safe')\nelse:\n  print('unsafe')```\n "
    },
    {
        "user_id": "u333139319",
        "problem_id": "p03206",
        "submission1_id": "s319945325",
        "code_content": "\nd = int(input())\n\n\nprint(\"Christmas\"+\" Eve\" * (25 - d))",
        "origin_generated_text": "\n```\nd = int(input())\n\n\nprint(\"Christmas\"+\" Eve\" * (25 - d))```\n "
    },
    {
        "user_id": "u232873434",
        "problem_id": "p03568",
        "submission1_id": "s031526394",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))\n\neven_num = 0\n\nfor i in range(N):\n    if A[i]%2==0:\n        even_num += 1\n\nprint(1*3**(N-1)*even_num+2*3**(N-1)*(N-even_num)-2**(N-even_num)+1)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))\n\neven_num = 0\n\nfor i in range(N):\n    if A[i]%2==0:\n        even_num += 1\n\nprint(1*3**(N-1)*even_num+2*3**(N-1)*(N-even_num)-2**(N-even_num)+1)```\n "
    },
    {
        "user_id": "u492049124",
        "problem_id": "p03475",
        "submission1_id": "s984924012",
        "code_content": "\nN = int(input())\nlines = []\n\nfor i in range(N-1):\n    lines.append(input())\n\nC = []\nS = []\nF = []\n\nfor line in lines:\n\tc, s, f = line.split()\n\tC.append(int(c))\n\tS.append(int(s))\n\tF.append(int(f))\n\nA = []\n\nfor i in range(N-1):\n\ta = C[i] + S[i]\n\tfor j in range(i + 1, N - 1):\n\t\t\n\t\tn = S[j] - a if a <= S[j] else F[j] - (a % F[j])\n\t\ta = a + C[j] + n\n\tA.append(a)\n\nfor a in A:\n\tprint(a)\nprint(0)\n",
        "origin_generated_text": "\n```\nN = int(input())\nlines = []\n\nfor i in range(N-1):\n    lines.append(input())\n\nC = []\nS = []\nF = []\n\nfor line in lines:\n\tc, s, f = line.split()\n\tC.append(int(c))\n\tS.append(int(s))\n\tF.append(int(f))\n\nA = []\n\nfor i in range(N-1):\n\ta = C[i] + S[i]\n\tfor j in range(i + 1, N - 1):\n\t\t\n\t\tn = S[j] - a if a <= S[j] else F[j] - (a % F[j])\n\t\ta = a + C[j] + n\n\tA.append(a)\n\nfor a in A:\n\tprint(a)\nprint(0)\n```\n "
    },
    {
        "user_id": "u390193191",
        "problem_id": "p03714",
        "submission1_id": "s940490218",
        "code_content": "\nimport heapq\n\nn = int(input())\nA = list(map(int, input().split()))\n\npre = [0]*(n+1)\npre_list = [e for e in A[:n]]\nheapq.heapify(pre_list)\npre_sum = sum(pre_list)\npre[0] = pre_sum\nfor i in range(n, 2*n):\n    small = heapq.heappushpop(pre_list, A[i])\n    pre_sum += A[i] - small\n    pre[i-n+1] = pre_sum\n\nsuf = [0]*(n+1)\nsuf_list = [-e for e in A[2*n:]]\nheapq.heapify(suf_list)\nsuf_sum = -sum(suf_list)\nsuf[-1] = suf_sum\nfor i in range(2*n-1, n-1, -1):\n    large = -heapq.heappushpop(suf_list, -A[i])\n    suf_sum += A[i] - large\n    suf[i-n] = suf_sum\n\n\n\n\nprint(max([pre[i] - suf[i] for i in range(n+1)]))\n",
        "origin_generated_text": "\n```\nimport heapq\n\nn = int(input())\nA = list(map(int, input().split()))\n\npre = [0]*(n+1)\npre_list = [e for e in A[:n]]\nheapq.heapify(pre_list)\npre_sum = sum(pre_list)\npre[0] = pre_sum\nfor i in range(n, 2*n):\n    small = heapq.heappushpop(pre_list, A[i])\n    pre_sum += A[i] - small\n    pre[i-n+1] = pre_sum\n\nsuf = [0]*(n+1)\nsuf_list = [-e for e in A[2*n:]]\nheapq.heapify(suf_list)\nsuf_sum = -sum(suf_list)\nsuf[-1] = suf_sum\nfor i in range(2*n-1, n-1, -1):\n    large = -heapq.heappushpop(suf_list, -A[i])\n    suf_sum += A[i] - large\n    suf[i-n] = suf_sum\n\n\n\n\nprint(max([pre[i] - suf[i] for i in range(n+1)]))\n```\n "
    },
    {
        "user_id": "u689377278",
        "problem_id": "p02660",
        "submission1_id": "s368157125",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq\n\ndef main():\n    temp = [True] * (10 ** 12)\n    temp[0] = False\n    temp[1] = False\n    for i in range(2, 10 ** 6):\n        if temp[i]:\n            cnt = 2 * i\n            while cnt < 10 ** 12:\n                temp[cnt] = False\n                cnt += i\n    prime = []\n    for i in range(10 ** 6):\n        if temp[i]:\n            prime.append(i)\n    n = int(input())\n    ans = 0\n    tempN = n\n    for i in prime:\n        if i > tempN:\n            break\n        if tempN % i:\n            continue\n        div = 0\n        while tempN % (i ** (div + 2)) == 0:\n            div += 1\n        tempN = tempN \n        ans += div\n    if tempN > 1:\n        ans += 1\n    print(ans)\n    return\n \nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq\n\ndef main():\n    temp = [True] * (10 ** 12)\n    temp[0] = False\n    temp[1] = False\n    for i in range(2, 10 ** 6):\n        if temp[i]:\n            cnt = 2 * i\n            while cnt < 10 ** 12:\n                temp[cnt] = False\n                cnt += i\n    prime = []\n    for i in range(10 ** 6):\n        if temp[i]:\n            prime.append(i)\n    n = int(input())\n    ans = 0\n    tempN = n\n    for i in prime:\n        if i > tempN:\n            break\n        if tempN % i:\n            continue\n        div = 0\n        while tempN % (i ** (div + 2)) == 0:\n            div += 1\n        tempN = tempN \n        ans += div\n    if tempN > 1:\n        ans += 1\n    print(ans)\n    return\n \nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u677393869",
        "problem_id": "p03080",
        "submission1_id": "s803059106",
        "code_content": "\nN=int(input())\nn=input()\nA=n.count(\"R\")\nB=n.count(\"B\")\nif A>B:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nN=int(input())\nn=input()\nA=n.count(\"R\")\nB=n.count(\"B\")\nif A>B:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u308097393",
        "problem_id": "p03296",
        "submission1_id": "s713494763",
        "code_content": "\nN = int(input())\na = [int(x) for x in input().split()]\ncount = 0\nif (N==len(a))and(N>2):\n    for i in range(1,N):\n        if (a[i-1]==a[i]):\n            a[i] += 1\n            if a[i] > 10000:\n                a[i] = 1\n            if a[i]==a[i+1]:\n                a[i] += 1\n                if a[i] > 10000:\n                    a[i] = 1\n            count += 1\n    print(count)\nelse:\n    print(0)",
        "origin_generated_text": "\n```\nN = int(input())\na = [int(x) for x in input().split()]\ncount = 0\nif (N==len(a))and(N>2):\n    for i in range(1,N):\n        if (a[i-1]==a[i]):\n            a[i] += 1\n            if a[i] > 10000:\n                a[i] = 1\n            if a[i]==a[i+1]:\n                a[i] += 1\n                if a[i] > 10000:\n                    a[i] = 1\n            count += 1\n    print(count)\nelse:\n    print(0)```\n "
    },
    {
        "user_id": "u886274153",
        "problem_id": "p03965",
        "submission1_id": "s543549275",
        "code_content": "\ns = input()\nn = len(s)\n\ns = [i for i in s]\nfor i in range(n):\n    if s[i] == \"p\":\n        s[i] = 1\n    else:\n        s[i] = 0\n\nd = [0]*n\nd[0] = 0\ngc = 1\npc = 0\nfor i in range(1, n):\n    if gc-1 >= pc:\n        d[i] = 1\n        pc += 1\n    else:\n        d[i] = 0\n        gc += 1\n\nans = 0\nfor i in range(n):\n    ans += d[i]-s[i]\n\nprint(ans)",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\n\ns = [i for i in s]\nfor i in range(n):\n    if s[i] == \"p\":\n        s[i] = 1\n    else:\n        s[i] = 0\n\nd = [0]*n\nd[0] = 0\ngc = 1\npc = 0\nfor i in range(1, n):\n    if gc-1 >= pc:\n        d[i] = 1\n        pc += 1\n    else:\n        d[i] = 0\n        gc += 1\n\nans = 0\nfor i in range(n):\n    ans += d[i]-s[i]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u995004106",
        "problem_id": "p02556",
        "submission1_id": "s286562045",
        "code_content": "\nfrom math import *\nimport fractions\nimport sys\nimport collections\nimport itertools\nimport pprint\nfrom collections import deque\nfrom heapq import *\nimport copy\nN=int(input())\npoints=[list(map(int,input().split())) for _ in range(N)]\n\n\nchebmax0=-float(\"inf\")\nchebmin0=float(\"inf\")\nchebmax1=-float(\"inf\")\nchebmin1=float(\"inf\")\n\n\nfor l in points:\n    chebmax0=max(chebmax0,l[0]-l[1])\nfor l in points:\n    chebmin0=min(chebmin0,l[0]-l[1])\nfor l in points:\n    chebmax1=max(chebmax1,l[0]+l[1])\nfor l in points:\n    chebmin1=min(chebmin1,l[0]+l[1])\n\nprint(max(chebmax0-chebmin0,chebmax1-chebmin1))",
        "origin_generated_text": "\n```\nfrom math import *\nimport fractions\nimport sys\nimport collections\nimport itertools\nimport pprint\nfrom collections import deque\nfrom heapq import *\nimport copy\nN=int(input())\npoints=[list(map(int,input().split())) for _ in range(N)]\n\n\nchebmax0=-float(\"inf\")\nchebmin0=float(\"inf\")\nchebmax1=-float(\"inf\")\nchebmin1=float(\"inf\")\n\n\nfor l in points:\n    chebmax0=max(chebmax0,l[0]-l[1])\nfor l in points:\n    chebmin0=min(chebmin0,l[0]-l[1])\nfor l in points:\n    chebmax1=max(chebmax1,l[0]+l[1])\nfor l in points:\n    chebmin1=min(chebmin1,l[0]+l[1])\n\nprint(max(chebmax0-chebmin0,chebmax1-chebmin1))```\n "
    },
    {
        "user_id": "u835283937",
        "problem_id": "p03625",
        "submission1_id": "s584911385",
        "code_content": "\nfrom collections import defaultdict\ndef main():\n    N = int(input())\n    A = [int(a) for a in input().split()]\n\n    edge = defaultdict(int)\n\n    for i in range(N):\n        edge[A[i]] += 1\n    edge = [ [k, v] for k, v in edge.items() if v >= 2 ]\n\n    edge.sort(key = lambda x : x[0])\n\n    if len(edge) >= 2 :\n        print(edge[-1][0]*edge[-2][0])\n    elif len(edge) == 1:\n        if edge[-1][1] >= 4:\n            print(edge[-1][0]**2)\n        else:\n            print(0)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\ndef main():\n    N = int(input())\n    A = [int(a) for a in input().split()]\n\n    edge = defaultdict(int)\n\n    for i in range(N):\n        edge[A[i]] += 1\n    edge = [ [k, v] for k, v in edge.items() if v >= 2 ]\n\n    edge.sort(key = lambda x : x[0])\n\n    if len(edge) >= 2 :\n        print(edge[-1][0]*edge[-2][0])\n    elif len(edge) == 1:\n        if edge[-1][1] >= 4:\n            print(edge[-1][0]**2)\n        else:\n            print(0)\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u337851472",
        "problem_id": "p03943",
        "submission1_id": "s806050599",
        "code_content": "\na, b, c = map(int,input().split())\nprint(\"Yes\" if (a+b) == c or (b+c) == a or (c+a) == b else \"No\")",
        "origin_generated_text": "\n```\na, b, c = map(int,input().split())\nprint(\"Yes\" if (a+b) == c or (b+c) == a or (c+a) == b else \"No\")```\n "
    },
    {
        "user_id": "u424967964",
        "problem_id": "p03760",
        "submission1_id": "s108354809",
        "code_content": "\no = input()\ne = input()\nprint(\"\".join([ch1 + ch2 for ch1 , ch2 in zip(o,e)]))",
        "origin_generated_text": "\n```\no = input()\ne = input()\nprint(\"\".join([ch1 + ch2 for ch1 , ch2 in zip(o,e)]))```\n "
    },
    {
        "user_id": "u280984565",
        "problem_id": "p03546",
        "submission1_id": "s417185309",
        "code_content": "\ndef read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\nw, h = read_line(int, int)\n\nc = []\nfor _ in range(10):\n    c.append(read_line(int, int, int, int, int, int, int, int, int, int))\n\nfor k in range(10):\n    for i in range(10):\n        for j in range(10):\n            if i != j:\n                c[i][j] = min(c[i][j], c[i][k] + c[k][j])\n\ncost = 0\nfor _ in range(w):\n    for a in read_line(*([int] * h)):\n        if a != -1:\n            cost += c[a][1]\n\nprint(cost)\n",
        "origin_generated_text": "\n```\ndef read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\nw, h = read_line(int, int)\n\nc = []\nfor _ in range(10):\n    c.append(read_line(int, int, int, int, int, int, int, int, int, int))\n\nfor k in range(10):\n    for i in range(10):\n        for j in range(10):\n            if i != j:\n                c[i][j] = min(c[i][j], c[i][k] + c[k][j])\n\ncost = 0\nfor _ in range(w):\n    for a in read_line(*([int] * h)):\n        if a != -1:\n            cost += c[a][1]\n\nprint(cost)\n```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s021638210",
        "code_content": "\nK=int(input())\nif K%2==0:\n  print(K*K\nelse:\n  print((K-1)*(K-1)",
        "origin_generated_text": "\n```\nK=int(input())\nif K%2==0:\n  print(K*K\nelse:\n  print((K-1)*(K-1)```\n "
    },
    {
        "user_id": "u262869085",
        "problem_id": "p02912",
        "submission1_id": "s654203187",
        "code_content": "\nimport heapq\n\nN , M = map(int,input().split())\nA = [-int(i) for i in input().split()]\n \nheapq.heapify(A)\nfor _ in range(M):\n    a = -heapq.heappop(A) \n    heapq.heappush(A,a\nprint(-sum(A))",
        "origin_generated_text": "\n```\nimport heapq\n\nN , M = map(int,input().split())\nA = [-int(i) for i in input().split()]\n \nheapq.heapify(A)\nfor _ in range(M):\n    a = -heapq.heappop(A) \n    heapq.heappush(A,a\nprint(-sum(A))```\n "
    },
    {
        "user_id": "u328755070",
        "problem_id": "p03729",
        "submission1_id": "s379952215",
        "code_content": "\nA, B, C = input().split()\nif A[-1] == B[0] and B[-1] == C[0]:\n    ans = \"YES\"\nelse:\n    print('NO')\nelse:\n    print('NO')\n",
        "origin_generated_text": "\n```\nA, B, C = input().split()\nif A[-1] == B[0] and B[-1] == C[0]:\n    ans = \"YES\"\nelse:\n    print('NO')\nelse:\n    print('NO')\n```\n "
    },
    {
        "user_id": "u965230804",
        "problem_id": "p03475",
        "submission1_id": "s280808969",
        "code_content": "\nn = int(input())\ncsf = []\nfor i in range(n - 1):\n    csf.append(list(map(int, input().split())))\n\nfor i in range(n):\n    AnsSec = 0\n    Now_Station = i\n    while Now_Station < n - 1:\n        if AnsSec > csf[Now_Station][1]:\n            AnsSec += csf[Now_Station][2] - (AnsSec % csf[Now_Station][2] )\n        else:\n            AnsSec += csf[Now_Station][1] - AnsSec\n        AnsSec += csf[Now_Station][0]\n        Now_Station += 1\n    print(AnsSec)\n",
        "origin_generated_text": "\n```\nn = int(input())\ncsf = []\nfor i in range(n - 1):\n    csf.append(list(map(int, input().split())))\n\nfor i in range(n):\n    AnsSec = 0\n    Now_Station = i\n    while Now_Station < n - 1:\n        if AnsSec > csf[Now_Station][1]:\n            AnsSec += csf[Now_Station][2] - (AnsSec % csf[Now_Station][2] )\n        else:\n            AnsSec += csf[Now_Station][1] - AnsSec\n        AnsSec += csf[Now_Station][0]\n        Now_Station += 1\n    print(AnsSec)\n```\n "
    },
    {
        "user_id": "u231905444",
        "problem_id": "p03079",
        "submission1_id": "s098487359",
        "code_content": "\narr=list(map(int,input().split()))\nif(arr.count(arr[0])==3):\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\narr=list(map(int,input().split()))\nif(arr.count(arr[0])==3):\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u922769680",
        "problem_id": "p02742",
        "submission1_id": "s994181374",
        "code_content": "\nH,W=map(int,input().split())\nif H%2==0 and W%2==0:\n    print((H*W)\nelse:\n    print((H*W)",
        "origin_generated_text": "\n```\nH,W=map(int,input().split())\nif H%2==0 and W%2==0:\n    print((H*W)\nelse:\n    print((H*W)```\n "
    },
    {
        "user_id": "u773440446",
        "problem_id": "p02553",
        "submission1_id": "s904828488",
        "code_content": "\na,b,c,d = map(int,input().split())\nans = []\nfor i in c,d:\n    ans.append(a*i)\nfor j in c,d:\n    ans.append(b*j)\n\nprint(max(ans))",
        "origin_generated_text": "\n```\na,b,c,d = map(int,input().split())\nans = []\nfor i in c,d:\n    ans.append(a*i)\nfor j in c,d:\n    ans.append(b*j)\n\nprint(max(ans))```\n "
    },
    {
        "user_id": "u498487134",
        "problem_id": "p03714",
        "submission1_id": "s096339260",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\nimport heapq\n\ndef main():\n    mod=10**9+7\n    N=I()\n    a=LI()\n    q1=a[:N]\n    s1=[0]*(N+1)\n    s1[0]=sum(q1)\n    heapq.heapify(q1)\n        \n    q2=[]\n    heapq.heapify(q2)\n    s2=[0]*(N+1)\n    for i in range(N):\n        b=a[-1-i]*(-1)\n        s2[0]+=b\n        heapq.heappush(q2,b)\n    \n    \n    for i in range(N):\n        b=heapq.heappop(q1)\n        s1[i+1]=s1[i]+a[i+N]-b\n        \n        c=heapq.heappop(q2)\n        s2[i+1]=s2[i]+a[-1-N-i]*(-1)-c\n        \n    L=[0]*(N+1)\n    ans=-1*10**16\n    for i in range(N+1):\n        temp=s1[i]+s2[-1-i]\n        if ans<temp:\n            ans=temp\n    print(ans)\n        \n        \n    \n\nmain()\n",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\nimport heapq\n\ndef main():\n    mod=10**9+7\n    N=I()\n    a=LI()\n    q1=a[:N]\n    s1=[0]*(N+1)\n    s1[0]=sum(q1)\n    heapq.heapify(q1)\n        \n    q2=[]\n    heapq.heapify(q2)\n    s2=[0]*(N+1)\n    for i in range(N):\n        b=a[-1-i]*(-1)\n        s2[0]+=b\n        heapq.heappush(q2,b)\n    \n    \n    for i in range(N):\n        b=heapq.heappop(q1)\n        s1[i+1]=s1[i]+a[i+N]-b\n        \n        c=heapq.heappop(q2)\n        s2[i+1]=s2[i]+a[-1-N-i]*(-1)-c\n        \n    L=[0]*(N+1)\n    ans=-1*10**16\n    for i in range(N+1):\n        temp=s1[i]+s2[-1-i]\n        if ans<temp:\n            ans=temp\n    print(ans)\n        \n        \n    \n\nmain()\n```\n "
    },
    {
        "user_id": "u789417951",
        "problem_id": "p03546",
        "submission1_id": "s279573062",
        "code_content": "\nH, W=map(int,input().split())\nc=[list(map(int,input().split())) for _ in range(10)]\na=[list(map(int,input().split())) for _ in range(H)]\nans=0\n\nfor i in range(10):\n    for j in range(i+1,10):\n        c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n\nfor i in range(H):\n    for j in range(W):\n        if a[i][j]>=0:\n            ans += c[a[i][j]][1]\n\nprint(ans)",
        "origin_generated_text": "\n```\nH, W=map(int,input().split())\nc=[list(map(int,input().split())) for _ in range(10)]\na=[list(map(int,input().split())) for _ in range(H)]\nans=0\n\nfor i in range(10):\n    for j in range(i+1,10):\n        c[i][j]=min(c[i][j],c[i][k]+c[k][j])\n\nfor i in range(H):\n    for j in range(W):\n        if a[i][j]>=0:\n            ans += c[a[i][j]][1]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s807816150",
        "code_content": "\nK=int(input())\nif K%2==0:\n  print(K\nelse:\n  print(K",
        "origin_generated_text": "\n```\nK=int(input())\nif K%2==0:\n  print(K\nelse:\n  print(K```\n "
    },
    {
        "user_id": "u038724782",
        "problem_id": "p02665",
        "submission1_id": "s300284426",
        "code_content": "\n```\nn = int(input())\na_l = list(map(int,input().split()))\n\n\ntree = [0]*(n+1)\ntree[0] = 1\nfor i in range(1,n+1):\n    tree[i] = (tree[i-1] - a_l[i-1]) * 2\n\n\nif tree[-1] < a_l[-1]:\n    print(-1)\n    exit()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nn = int(input())\na_l = list(map(int,input().split()))\n\n\ntree = [0]*(n+1)\ntree[0] = 1\nfor i in range(1,n+1):\n    tree[i] = (tree[i-1] - a_l[i-1]) * 2\n\n\nif tree[-1] < a_l[-1]:\n    print(-1)\n    exit()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u776237437",
        "problem_id": "p02699",
        "submission1_id": "s821715006",
        "code_content": "\nS,W=map(int,input().split())\n\nif S<=W:\n    print('safe')\nelse:\n    print('unsafe')",
        "origin_generated_text": "\n```\nS,W=map(int,input().split())\n\nif S<=W:\n    print('safe')\nelse:\n    print('unsafe')```\n "
    },
    {
        "user_id": "u865741247",
        "problem_id": "p02954",
        "submission1_id": "s118366595",
        "code_content": "\n\nimport sys\n\nS =  input()\nl = len(S)\nans = [0] * l\ncot = [0,0]\nfor i  in range(l):\n    if S[i] == \"R\":\n        cot[i%2] += 1\n    else:\n        ans[i] += cot[i %2 ]\n        ans[i - 1 ] += cot[(i + 1)%2]\n        cot[0] = cot[1] = 0\n\ncot[0] = cot[1] = 0\nfor i  in range(l-1,-1,-1):\n    if S[i] == \"L\":\n        cot[i%2] += 1\n    else:\n        ans[i] += cot[i %2 ]\n        ans[i + 1 ]  += cot[(i + 1)%2]\n        cot[0] = cot[1] = 0\nprint(\" \".join(list(map(str,ans))))\n\n\n",
        "origin_generated_text": "\n```\n\nimport sys\n\nS =  input()\nl = len(S)\nans = [0] * l\ncot = [0,0]\nfor i  in range(l):\n    if S[i] == \"R\":\n        cot[i%2] += 1\n    else:\n        ans[i] += cot[i %2 ]\n        ans[i - 1 ] += cot[(i + 1)%2]\n        cot[0] = cot[1] = 0\n\ncot[0] = cot[1] = 0\nfor i  in range(l-1,-1,-1):\n    if S[i] == \"L\":\n        cot[i%2] += 1\n    else:\n        ans[i] += cot[i %2 ]\n        ans[i + 1 ]  += cot[(i + 1)%2]\n        cot[0] = cot[1] = 0\nprint(\" \".join(list(map(str,ans))))\n\n\n```\n "
    },
    {
        "user_id": "u527261492",
        "problem_id": "p03080",
        "submission1_id": "s103603511",
        "code_content": "\nN=int(input())\ns=input()\nr=s.count('R')\nb=s.count('B')\nif r>b:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nN=int(input())\ns=input()\nr=s.count('R')\nb=s.count('B')\nif r>b:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u924406834",
        "problem_id": "p03546",
        "submission1_id": "s494954565",
        "code_content": "\nh,w = map(int,input().split())\nij = [list(map(int,input().split())) for x in range(10)]\ndp = [[1000000000 for i in range(w)] for i in range(h)]\nfor i in range(10):\n    dp[0][ij[i][1]] = ij[i][0]\nfor i in range(1,h):\n    for j in range(1,w):\n        num = dp[i-1][j]\n        for k in range(10):\n            num = min(num,ij[k][j] + dp[i-1][j-1])\n        dp[i][j] = num\nans = 0\nfor i in range(h):\n    for j in list(map(int,input().split())):\n        if j != -1:\n            ans += dp[i][j]\nprint(ans)",
        "origin_generated_text": "\n```\nh,w = map(int,input().split())\nij = [list(map(int,input().split())) for x in range(10)]\ndp = [[1000000000 for i in range(w)] for i in range(h)]\nfor i in range(10):\n    dp[0][ij[i][1]] = ij[i][0]\nfor i in range(1,h):\n    for j in range(1,w):\n        num = dp[i-1][j]\n        for k in range(10):\n            num = min(num,ij[k][j] + dp[i-1][j-1])\n        dp[i][j] = num\nans = 0\nfor i in range(h):\n    for j in list(map(int,input().split())):\n        if j != -1:\n            ans += dp[i][j]\nprint(ans)```\n "
    },
    {
        "user_id": "u885634168",
        "problem_id": "p02727",
        "submission1_id": "s025358254",
        "code_content": "\nX, Y, a, b, c = list(map(int,input().split()))\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\ns = sorted(p + q + r)[::-1][:X + Y]\nans = sum(s[:X + Y])\nprint(ans)",
        "origin_generated_text": "\n```\nX, Y, a, b, c = list(map(int,input().split()))\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\ns = sorted(p + q + r)[::-1][:X + Y]\nans = sum(s[:X + Y])\nprint(ans)```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03096",
        "submission1_id": "s552533018",
        "code_content": "\nN=int(input())\nL=[]\nfor i in range(N):\n    n=int(input())\n    L.append(n)\ndp=[0 for i in range(N)]\ndp[0]=1\nD=dict()\nD[L[0]]=1\nfor i in range(1,N):\n    if L[i] not in D or L[i]==L[i-1]:\n        dp[i]=dp[i-1]\n    else:\n        dp[i]=dp[i-1]+D[L[i]]\n        D[L[i]]+=1\nprint(dp[-1]%(10**9+7))",
        "origin_generated_text": "\n```\nN=int(input())\nL=[]\nfor i in range(N):\n    n=int(input())\n    L.append(n)\ndp=[0 for i in range(N)]\ndp[0]=1\nD=dict()\nD[L[0]]=1\nfor i in range(1,N):\n    if L[i] not in D or L[i]==L[i-1]:\n        dp[i]=dp[i-1]\n    else:\n        dp[i]=dp[i-1]+D[L[i]]\n        D[L[i]]+=1\nprint(dp[-1]%(10**9+7))```\n "
    },
    {
        "user_id": "u396495667",
        "problem_id": "p03992",
        "submission1_id": "s475637638",
        "code_content": "\ns = list(input())\nf= ''.join(s[:4])\nb=''.join(s[4:])\nprint(f,' ',b)",
        "origin_generated_text": "\n```\ns = list(input())\nf= ''.join(s[:4])\nb=''.join(s[4:])\nprint(f,' ',b)```\n "
    },
    {
        "user_id": "u347363297",
        "problem_id": "p02718",
        "submission1_id": "s521534064",
        "code_content": "\nn, m = input().split()\nm = int(m)\n\nvotes = input().split()\nvotes = [int(i) for i in votes]\nvotes.sort(reverse=True)\n\ntotal = sum(votes)\n\nvalid = True\nfor i in range(m):\n    if votes[i] <= total/(4*m):\n        valid = False\n        break\n\nif valid:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nn, m = input().split()\nm = int(m)\n\nvotes = input().split()\nvotes = [int(i) for i in votes]\nvotes.sort(reverse=True)\n\ntotal = sum(votes)\n\nvalid = True\nfor i in range(m):\n    if votes[i] <= total/(4*m):\n        valid = False\n        break\n\nif valid:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u931118906",
        "problem_id": "p02912",
        "submission1_id": "s684022595",
        "code_content": "\nimport sys\nimport heapq\ninput=sys.stdin.readline\nn,m=map(int,input().split())\na=list(map(lambda x:int(x)*(-1),input().split()))\nheapq.heapify(a)\nfor _ in range(m):\n    heapq.heappush(a,(-1)*(heapq.heappop(a)/2))\nprint(int(sum(a)))",
        "origin_generated_text": "\n```\nimport sys\nimport heapq\ninput=sys.stdin.readline\nn,m=map(int,input().split())\na=list(map(lambda x:int(x)*(-1),input().split()))\nheapq.heapify(a)\nfor _ in range(m):\n    heapq.heappush(a,(-1)*(heapq.heappop(a)/2))\nprint(int(sum(a)))```\n "
    },
    {
        "user_id": "u215335591",
        "problem_id": "p02407",
        "submission1_id": "s941240014",
        "code_content": "\nn = int(input())\nx = [int(i) for i in input().split()]\nx.sort(reverse=True)\nx.reverse()\nfor i in range(n-1):\n    print(x[i],\" \",sep=\"\",end=\"\")\nprint(x[n-1])\n\n",
        "origin_generated_text": "\n```\nn = int(input())\nx = [int(i) for i in input().split()]\nx.sort(reverse=True)\nx.reverse()\nfor i in range(n-1):\n    print(x[i],\" \",sep=\"\",end=\"\")\nprint(x[n-1])\n\n```\n "
    },
    {
        "user_id": "u965436898",
        "problem_id": "p03416",
        "submission1_id": "s420953546",
        "code_content": "\na,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n  s = list(str(i))\n  left = s[0:2]\n  right = s[3:]\n  if left == right:\n    ans += 1\n  elif s[0] == s[3]:\n    ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n  s = list(str(i))\n  left = s[0:2]\n  right = s[3:]\n  if left == right:\n    ans += 1\n  elif s[0] == s[3]:\n    ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u993268357",
        "problem_id": "p03796",
        "submission1_id": "s590334818",
        "code_content": "\nn = int(input())\n\nres = 1\n\nfor i in range(1, n+1):\n  res = res*i%(10**9+7)\n\nprint(res)",
        "origin_generated_text": "\n```\nn = int(input())\n\nres = 1\n\nfor i in range(1, n+1):\n  res = res*i%(10**9+7)\n\nprint(res)```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03970",
        "submission1_id": "s656053524",
        "code_content": "\nS1 = input()\nS2 = \"CODEFESTIVAL2016\"\nans = 0\nfor i in range(16):\n  if S1[i] != S2[i]:\n    ans+=1\nprint(ans)\n  ",
        "origin_generated_text": "\n```\nS1 = input()\nS2 = \"CODEFESTIVAL2016\"\nans = 0\nfor i in range(16):\n  if S1[i] != S2[i]:\n    ans+=1\nprint(ans)\n  ```\n "
    },
    {
        "user_id": "u851695354",
        "problem_id": "p02281",
        "submission1_id": "s712517092",
        "code_content": "\n\nclass Tree:\n    def __init__(self,parent,left,right):\n        self.parent = parent\n        self.left = left\n        self.right = right\n\n\ndef preparse(u):\n    if u == -1: return\n    print(\" \", end=\"\")\n    print(u, end=\"\")\n    preparse(trees[u].left)\n    preparse(trees[u].right)\n\n\ndef inparse(u):\n    if u == -1: return\n    \n    inparse(trees[u].left)\n    \n    print(\" \", end=\"\")\n    print(u, end=\"\")\n    \n    inparse(trees[u].right)\n    \n\ndef postparse(u):\n    if u == -1: return\n    \n    postparse(trees[u].left)\n    \n    postparse(trees[u].right)\n    \n    print(\" \", end=\"\")\n    print(u, end=\"\")\n\n\nN = int(input())\n\ntrees = [Tree(-1,-1,-1) for i in range(N)]\nfor i in range(N):\n    l = list(map(int, input().split()))\n    no = l[0]\n    left = l[1]\n    right = l[2]\n    trees[no].left = left\n    trees[no].right = right\n    if left != -1: trees[left].parent = no\n    if right != -1: trees[right].parent = no\n\nprint(\"Preorder\")\npreparse(0)\nprint(\"\")\nprint(\"Inorder\")\ninparse(0)\nprint(\"\")\nprint(\"Postorder\")\npostparse(0)\n",
        "origin_generated_text": "\n```\n\nclass Tree:\n    def __init__(self,parent,left,right):\n        self.parent = parent\n        self.left = left\n        self.right = right\n\n\ndef preparse(u):\n    if u == -1: return\n    print(\" \", end=\"\")\n    print(u, end=\"\")\n    preparse(trees[u].left)\n    preparse(trees[u].right)\n\n\ndef inparse(u):\n    if u == -1: return\n    \n    inparse(trees[u].left)\n    \n    print(\" \", end=\"\")\n    print(u, end=\"\")\n    \n    inparse(trees[u].right)\n    \n\ndef postparse(u):\n    if u == -1: return\n    \n    postparse(trees[u].left)\n    \n    postparse(trees[u].right)\n    \n    print(\" \", end=\"\")\n    print(u, end=\"\")\n\n\nN = int(input())\n\ntrees = [Tree(-1,-1,-1) for i in range(N)]\nfor i in range(N):\n    l = list(map(int, input().split()))\n    no = l[0]\n    left = l[1]\n    right = l[2]\n    trees[no].left = left\n    trees[no].right = right\n    if left != -1: trees[left].parent = no\n    if right != -1: trees[right].parent = no\n\nprint(\"Preorder\")\npreparse(0)\nprint(\"\")\nprint(\"Inorder\")\ninparse(0)\nprint(\"\")\nprint(\"Postorder\")\npostparse(0)\n```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s201836992",
        "code_content": "\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i == 0:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i == 0:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))```\n "
    },
    {
        "user_id": "u054106284",
        "problem_id": "p03734",
        "submission1_id": "s318752486",
        "code_content": "\nN, W = (int(i) for i in input().split())\nw = [0]*N\nv = [0]*N\nfor i in range(N):\n  w[i], v[i] = (int(j) for j in input().split())\nw0 = w[0]\nwh = [a - w0 for a in w]\ndp = [[[0]*(3*N+1) for i in range(N+1)] for j in range(N+1)]\nfor i in range(N):\n  for j in range(3*N+1):\n    for k in range(N+1):\n      if j - wh[i] >=0 and k-1 >=0:\n        dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j-wh[i]][k-1]+v[i])\n      dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k])\nres = 0\nfor j in range(3*N+1):\n  for k in range(N+1):\n    if w0*k <= W <= (w0+3)*k:\n      Wk = W - w0*k\n      ans = 0\n      for j in range(Wk+1):\n        ans = max(dp[N][j][k], ans)\n      res = max(res, ans)\nprint(res)\n",
        "origin_generated_text": "\n```\nN, W = (int(i) for i in input().split())\nw = [0]*N\nv = [0]*N\nfor i in range(N):\n  w[i], v[i] = (int(j) for j in input().split())\nw0 = w[0]\nwh = [a - w0 for a in w]\ndp = [[[0]*(3*N+1) for i in range(N+1)] for j in range(N+1)]\nfor i in range(N):\n  for j in range(3*N+1):\n    for k in range(N+1):\n      if j - wh[i] >=0 and k-1 >=0:\n        dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j-wh[i]][k-1]+v[i])\n      dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k])\nres = 0\nfor j in range(3*N+1):\n  for k in range(N+1):\n    if w0*k <= W <= (w0+3)*k:\n      Wk = W - w0*k\n      ans = 0\n      for j in range(Wk+1):\n        ans = max(dp[N][j][k], ans)\n      res = max(res, ans)\nprint(res)\n```\n "
    },
    {
        "user_id": "u777394984",
        "problem_id": "p02767",
        "submission1_id": "s520747654",
        "code_content": "\ndef resolve():\n    n = int(input())\n    x = list(map(int,input().split()))\n    b = int(sum(x)/n)\n    m = 0\n    for i in x:\n        m += (i-b) * (i-b)\n    print(m)\nresolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    n = int(input())\n    x = list(map(int,input().split()))\n    b = int(sum(x)/n)\n    m = 0\n    for i in x:\n        m += (i-b) * (i-b)\n    print(m)\nresolve()```\n "
    },
    {
        "user_id": "u112567325",
        "problem_id": "p03206",
        "submission1_id": "s678277620",
        "code_content": "\nD = int(input())\n\nans = \"Christmas\"\nfor i in range(D-25):\n  ans += \" Eve\"\nprint(ans)",
        "origin_generated_text": "\n```\nD = int(input())\n\nans = \"Christmas\"\nfor i in range(D-25):\n  ans += \" Eve\"\nprint(ans)```\n "
    },
    {
        "user_id": "u284854859",
        "problem_id": "p03274",
        "submission1_id": "s160200140",
        "code_content": "\n\nimport bisect \nn,k = map(int,input().split())\nx = list(map(int,input().split()))\n\nw  = x.count(0)\nfor i in range(w):\n    x.remove(0)\n\nif k <= w:\n    print(0)\nelse:\n    k = k -w\n    \n\n    r = bisect.bisect_left(x,0)\n    \n    if x[-1]<0:\n        print(abs(x[len(x)-k]))\n    else:\n        ass = 10 ** 10\n        for i in range(r,min(len(x),r + k )):\n            if i-r+1 >= k:\n                ans = abs(x[i])\n            else:\n                ans = x[i] + abs(x[i-k+1]) + min(x[i],abs(x[i-k+1]))\n            ass = min(ass,ans)\n        print(ass)",
        "origin_generated_text": "\n```\n\nimport bisect \nn,k = map(int,input().split())\nx = list(map(int,input().split()))\n\nw  = x.count(0)\nfor i in range(w):\n    x.remove(0)\n\nif k <= w:\n    print(0)\nelse:\n    k = k -w\n    \n\n    r = bisect.bisect_left(x,0)\n    \n    if x[-1]<0:\n        print(abs(x[len(x)-k]))\n    else:\n        ass = 10 ** 10\n        for i in range(r,min(len(x),r + k )):\n            if i-r+1 >= k:\n                ans = abs(x[i])\n            else:\n                ans = x[i] + abs(x[i-k+1]) + min(x[i],abs(x[i-k+1]))\n            ass = min(ass,ans)\n        print(ass)```\n "
    },
    {
        "user_id": "u917558625",
        "problem_id": "p02912",
        "submission1_id": "s128208907",
        "code_content": "\nimport math\n \ns=list(map(int,input().split()))\nt=list(map(int,input().split()))\na=0\nb=0\nc=0\nd=s[1]\nt.sort(reverse=True)\nif s[0]==1:\n  for i in range(s[1]):\n    t[0]=math.floor(t[0]/2)\nelse:\n  c=t[0]/2\n  for j in range(s[1]):\n    for l in range(s[0]):\n      if d>0:\n        if c<=t[l] and t[l]!=0:\n          t[l]=math.floor(t[l]/2)\n          d=d-1\n        else:\n            t.sort(reverse=True)\n            c=t[0]/2\n            d=s[1]-1\n            break\n      else:\n        break\nprint(sum(t)-s[0])",
        "origin_generated_text": "\n```\nimport math\n \ns=list(map(int,input().split()))\nt=list(map(int,input().split()))\na=0\nb=0\nc=0\nd=s[1]\nt.sort(reverse=True)\nif s[0]==1:\n  for i in range(s[1]):\n    t[0]=math.floor(t[0]/2)\nelse:\n  c=t[0]/2\n  for j in range(s[1]):\n    for l in range(s[0]):\n      if d>0:\n        if c<=t[l] and t[l]!=0:\n          t[l]=math.floor(t[l]/2)\n          d=d-1\n        else:\n            t.sort(reverse=True)\n            c=t[0]/2\n            d=s[1]-1\n            break\n      else:\n        break\nprint(sum(t)-s[0])```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s647666029",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)```\n "
    },
    {
        "user_id": "u204616996",
        "problem_id": "p03102",
        "submission1_id": "s378850408",
        "code_content": "\nN,M,C=map(int,input().split())\nB=list(map(int,input().split()))\nans=0\nfor i in range(N):\n  A=list(map(int,input().split()))\n  if sum([a*b for a in A for b in B])+C>=0:\n    ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\nN,M,C=map(int,input().split())\nB=list(map(int,input().split()))\nans=0\nfor i in range(N):\n  A=list(map(int,input().split()))\n  if sum([a*b for a in A for b in B])+C>=0:\n    ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u014139588",
        "problem_id": "p02640",
        "submission1_id": "s371483577",
        "code_content": "\nx, y = map(int, input().split())\nif y%2 == 1:\n  print(\"No\")\nelse:\n  if y >= 2*x and y <= 4*x:\n    print(\"Yes\")\n  else:\n    print(\"No\")",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\nif y%2 == 1:\n  print(\"No\")\nelse:\n  if y >= 2*x and y <= 4*x:\n    print(\"Yes\")\n  else:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03992",
        "submission1_id": "s916667161",
        "code_content": "\ns=input()\nss=s[0:4]+\" \"+s[4:]\nprint(ss)",
        "origin_generated_text": "\n```\ns=input()\nss=s[0:4]+\" \"+s[4:]\nprint(ss)```\n "
    },
    {
        "user_id": "u955125992",
        "problem_id": "p03274",
        "submission1_id": "s587531628",
        "code_content": "\nn, k = map(int, input().split())\nx = list(map(int, input().split()))\n\nans = 10 ** 9\n\nif n == k:\n    for i in range(n):\n        ans = min(ans, abs(x[i]))\nelif n == 1:\n    ans = min(abs(x[0]) + abs(x[0] - x[n-1]))\nelse:\n    for i in range(n-k+1):\n        ans = min(ans, abs(x[i]-x[i+k-1]) + abs(x[i+k-1]), abs(x[i]) + abs(x[i] - x[i+k-1]))\n\nprint(ans)",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\nx = list(map(int, input().split()))\n\nans = 10 ** 9\n\nif n == k:\n    for i in range(n):\n        ans = min(ans, abs(x[i]))\nelif n == 1:\n    ans = min(abs(x[0]) + abs(x[0] - x[n-1]))\nelse:\n    for i in range(n-k+1):\n        ans = min(ans, abs(x[i]-x[i+k-1]) + abs(x[i+k-1]), abs(x[i]) + abs(x[i] - x[i+k-1]))\n\nprint(ans)```\n "
    },
    {
        "user_id": "u508486691",
        "problem_id": "p03008",
        "submission1_id": "s881793162",
        "code_content": "\nimport sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[] for _ in range(num)]\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n\n\nN = Line(I(),3)\nA = Line(I(),3)\nB = Line(I(),3)\n\nfirst_use = []\nsecond_use = []\nfor i in range(3):\n    if A[i][0]<B[i][0]:\n        first_use.append(i)\n    if A[i][0]>B[i][0]:\n        second_use.append(i)\n\n\ndp = [0]*(N[0]+1)\nfor i in range(N[0]+1):\n    for j in first_use:\n        if i-A[j][0]>=0:\n            dp[i] = max(dp[i-A[j][0]]+B[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = N[0]-i+dp[i]\n\ncount = max(dp)\ndp = [0]*(count+1)\nfor i in range(count+1):\n    for j in second_use:\n        if i-B[j][0]>=0:\n            dp[i] = max(dp[i-B[j][0]]+A[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = count-i+dp[i]\n\nprint(max(dp))",
        "origin_generated_text": "\n```\nimport sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[] for _ in range(num)]\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n\n\nN = Line(I(),3)\nA = Line(I(),3)\nB = Line(I(),3)\n\nfirst_use = []\nsecond_use = []\nfor i in range(3):\n    if A[i][0]<B[i][0]:\n        first_use.append(i)\n    if A[i][0]>B[i][0]:\n        second_use.append(i)\n\n\ndp = [0]*(N[0]+1)\nfor i in range(N[0]+1):\n    for j in first_use:\n        if i-A[j][0]>=0:\n            dp[i] = max(dp[i-A[j][0]]+B[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = N[0]-i+dp[i]\n\ncount = max(dp)\ndp = [0]*(count+1)\nfor i in range(count+1):\n    for j in second_use:\n        if i-B[j][0]>=0:\n            dp[i] = max(dp[i-B[j][0]]+A[j][0],dp[i])\nfor i in range(N[0]+1):\n    dp[i] = count-i+dp[i]\n\nprint(max(dp))```\n "
    },
    {
        "user_id": "u311636831",
        "problem_id": "p02880",
        "submission1_id": "s927678605",
        "code_content": "\ndic={}\n\nfor i in range(1,10):\n    for j in range(1,10):\n        if dic.get(i*j,None)==None:\n            dic[i*j]=1\n        else:\n            dic[i*j]+=1\n\nN = int(input())\n\nif dic.get(N,None)==None:\n    print(\"No\")\nelse:\n    print(\"Yes\")",
        "origin_generated_text": "\n```\ndic={}\n\nfor i in range(1,10):\n    for j in range(1,10):\n        if dic.get(i*j,None)==None:\n            dic[i*j]=1\n        else:\n            dic[i*j]+=1\n\nN = int(input())\n\nif dic.get(N,None)==None:\n    print(\"No\")\nelse:\n    print(\"Yes\")```\n "
    },
    {
        "user_id": "u972637506",
        "problem_id": "p02407",
        "submission1_id": "s111581134",
        "code_content": "\n_ = input()\n \nprint(\" \".join(reversed(input().split())))",
        "origin_generated_text": "\n```\n_ = input()\n \nprint(\" \".join(reversed(input().split())))```\n "
    },
    {
        "user_id": "u766407523",
        "problem_id": "p03992",
        "submission1_id": "s213940868",
        "code_content": "\nS = input()\nprint(S[:4] + ' ' + S[4:])",
        "origin_generated_text": "\n```\nS = input()\nprint(S[:4] + ' ' + S[4:])```\n "
    },
    {
        "user_id": "u895515293",
        "problem_id": "p03626",
        "submission1_id": "s500728531",
        "code_content": "\nDIV=10**9+7\nN=int(input())\nST=[input(), input()]\nPST=[]\nptr=0\nwhile ptr < N:\n    \n    if ST[0][ptr] == ST[1][ptr]:\n        ptr += 1\n        PST.append(0)\n    \n    else:\n        ptr += 2\n        PST.append(1)\n\n\n\nres = 1\nfor i in range(len(PST)-1):\n    if PST[i] == 0 and PST[i+1] == 0:\n        res = (res*2)%DIV\n    elif PST[i] == 0 and PST[i+1] == 1:\n        res = (res*2)%DIV\n    elif PST[i] == 1 and PST[i+1] == 0:\n        res = res\n    elif PST[i] == 1 and PST[i+1] == 1:\n        res = (res*3)%DIV\n\nprint(res)\n",
        "origin_generated_text": "\n```\nDIV=10**9+7\nN=int(input())\nST=[input(), input()]\nPST=[]\nptr=0\nwhile ptr < N:\n    \n    if ST[0][ptr] == ST[1][ptr]:\n        ptr += 1\n        PST.append(0)\n    \n    else:\n        ptr += 2\n        PST.append(1)\n\n\n\nres = 1\nfor i in range(len(PST)-1):\n    if PST[i] == 0 and PST[i+1] == 0:\n        res = (res*2)%DIV\n    elif PST[i] == 0 and PST[i+1] == 1:\n        res = (res*2)%DIV\n    elif PST[i] == 1 and PST[i+1] == 0:\n        res = res\n    elif PST[i] == 1 and PST[i+1] == 1:\n        res = (res*3)%DIV\n\nprint(res)\n```\n "
    },
    {
        "user_id": "u619197965",
        "problem_id": "p03625",
        "submission1_id": "s492415172",
        "code_content": "\nfrom collections import Counter\nn=int(input())\na=sorted([int(i) for i in input().split()])\ncnt=Counter(a)\nkey=sorted(list(cnt.keys()))[::-1]\none=two=0\nfor i in key:\n    if cnt[i]>=3:\n        one=two=i\n    elif cnt[i]>=2:\n        if one==0:\n            one=i\n        else:\n            two=i\n            break\nprint(one*two)",
        "origin_generated_text": "\n```\nfrom collections import Counter\nn=int(input())\na=sorted([int(i) for i in input().split()])\ncnt=Counter(a)\nkey=sorted(list(cnt.keys()))[::-1]\none=two=0\nfor i in key:\n    if cnt[i]>=3:\n        one=two=i\n    elif cnt[i]>=2:\n        if one==0:\n            one=i\n        else:\n            two=i\n            break\nprint(one*two)```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03343",
        "submission1_id": "s058584602",
        "code_content": "\nn,k,q = (int(i) for i in input().split())\na = [int(i) for i in input().split()]\nans = 10**9\nfor i in a:\n\tp,s,f = [],0,1\n\tfor j in range(n):\n\t\tif a[j]>=i and f:\n\t\t\ts,f = j,0\n\t\telif a[j]<i and f-1:\n\t\t\tif j-s>=k:\n\t\t\t\tfor j2 in sorted(a[s:j])[:j-s-k+1]: p.append(j2)\n\t\t\tf = 1\n\tif n-s>=k+1:\n\t\tfor j2 in sorted(a[s:n])[:n-s-k+1]: p.append(j2)\n\tif len(p)>=q: ans = min(ans,sorted(p)[q-1]-i)\nprint(ans)",
        "origin_generated_text": "\n```\nn,k,q = (int(i) for i in input().split())\na = [int(i) for i in input().split()]\nans = 10**9\nfor i in a:\n\tp,s,f = [],0,1\n\tfor j in range(n):\n\t\tif a[j]>=i and f:\n\t\t\ts,f = j,0\n\t\telif a[j]<i and f-1:\n\t\t\tif j-s>=k:\n\t\t\t\tfor j2 in sorted(a[s:j])[:j-s-k+1]: p.append(j2)\n\t\t\tf = 1\n\tif n-s>=k+1:\n\t\tfor j2 in sorted(a[s:n])[:n-s-k+1]: p.append(j2)\n\tif len(p)>=q: ans = min(ans,sorted(p)[q-1]-i)\nprint(ans)```\n "
    },
    {
        "user_id": "u211160392",
        "problem_id": "p02919",
        "submission1_id": "s107563635",
        "code_content": "\nN = int(input())\nP = list(map(int,input().split()))\nans = 0\nfor i in range(N-1):\n    x1,y1,x2,y2 = -1,-1,-1,-1\n    for j in range(i+1,N):\n        if P[j] > P[i]:\n            if x1 == -1:\n                x1 = j\n            x2 = j\n        elif P[j] < P[i]:\n            if y1 == -1:\n                y1 = j\n            y2 = j\n    ans += (i+1) * ((x1-x2) * (y1-i+1) + (y1-y2) * (i-x1))\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nP = list(map(int,input().split()))\nans = 0\nfor i in range(N-1):\n    x1,y1,x2,y2 = -1,-1,-1,-1\n    for j in range(i+1,N):\n        if P[j] > P[i]:\n            if x1 == -1:\n                x1 = j\n            x2 = j\n        elif P[j] < P[i]:\n            if y1 == -1:\n                y1 = j\n            y2 = j\n    ans += (i+1) * ((x1-x2) * (y1-i+1) + (y1-y2) * (i-x1))\nprint(ans)```\n "
    },
    {
        "user_id": "u945181840",
        "problem_id": "p03480",
        "submission1_id": "s845587226",
        "code_content": "\nfrom itertools import groupby, accumulate\n\nS = list(input())\nn = len(S)\ns = [len(list(j)) for i, j in groupby(S, key=lambda x: S.index(x))]\ns = [max(i, n - i) for i in s]\n\nprint(min(s))\n",
        "origin_generated_text": "\n```\nfrom itertools import groupby, accumulate\n\nS = list(input())\nn = len(S)\ns = [len(list(j)) for i, j in groupby(S, key=lambda x: S.index(x))]\ns = [max(i, n - i) for i in s]\n\nprint(min(s))\n```\n "
    },
    {
        "user_id": "u625963200",
        "problem_id": "p03272",
        "submission1_id": "s535511449",
        "code_content": "\nn,i=map(int,input().split())\nprint(n-i+1)",
        "origin_generated_text": "\n```\nn,i=map(int,input().split())\nprint(n-i+1)```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p02580",
        "submission1_id": "s968887474",
        "code_content": "\nimport math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\ndef main():\n  H,W,M=LI()\n  h=[0]*H\n  w=[0]*W\n  d={}\n  for _ in range(M):\n    a,b=LI()\n    a-=1\n    b-=1\n    h[a]+=1\n    w[b]+=1\n    d[(a,b)]=1\n\n  h_koho=[]\n  w_koho=[]\n\n  h_max=max(h)\n  w_max=max(w)\n\n  for i,x in enumerate(h):\n    if x==h_max:\n      h_koho.append(i)\n  for i,x in enumerate(w):\n    if x==w_max:\n      w_koho.append(i)\n\n  for x in h_koho:\n    for y in w_koho:\n      if (x,y) not in d:\n        return h_max+w_max\n\n  return h_max+w_max-1\n\n\nprint(main())\n",
        "origin_generated_text": "\n```\nimport math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\ndef main():\n  H,W,M=LI()\n  h=[0]*H\n  w=[0]*W\n  d={}\n  for _ in range(M):\n    a,b=LI()\n    a-=1\n    b-=1\n    h[a]+=1\n    w[b]+=1\n    d[(a,b)]=1\n\n  h_koho=[]\n  w_koho=[]\n\n  h_max=max(h)\n  w_max=max(w)\n\n  for i,x in enumerate(h):\n    if x==h_max:\n      h_koho.append(i)\n  for i,x in enumerate(w):\n    if x==w_max:\n      w_koho.append(i)\n\n  for x in h_koho:\n    for y in w_koho:\n      if (x,y) not in d:\n        return h_max+w_max\n\n  return h_max+w_max-1\n\n\nprint(main())\n```\n "
    },
    {
        "user_id": "u102461423",
        "problem_id": "p03766",
        "submission1_id": "s711539629",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\nN = int(input())\n\ndp = [0] * (N+10)\ndp_cum = [0] * (N+10)\n\ndp[1] = N-1; dp_cum[1] = N-1\ndp[2] = N-1; dp_cum[2] = 2*(N-1)\nfor n in range(3,N+1):\n    dp[n] = dp[n-1] + dp_cum[n-3]\n    dp_cum[n] = (dp_cum[n-1] + dp[n]) % MOD\n\nanswer = sum(dp[1:N])*N + dp[-1] + 1\nanswer %= MOD\nprint(answer)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\nN = int(input())\n\ndp = [0] * (N+10)\ndp_cum = [0] * (N+10)\n\ndp[1] = N-1; dp_cum[1] = N-1\ndp[2] = N-1; dp_cum[2] = 2*(N-1)\nfor n in range(3,N+1):\n    dp[n] = dp[n-1] + dp_cum[n-3]\n    dp_cum[n] = (dp_cum[n-1] + dp[n]) % MOD\n\nanswer = sum(dp[1:N])*N + dp[-1] + 1\nanswer %= MOD\nprint(answer)```\n "
    },
    {
        "user_id": "u861020408",
        "problem_id": "p02954",
        "submission1_id": "s076031332",
        "code_content": "\nS = input() + 'O'\nN = len(S)\nn = [0] * (N - 1)\nt = []\ni = 0\nj =  0\nwhile S[i] != 'O':\n    count = 0\n    if S[i] == 'R':\n        while S[i] == 'R':\n            count += 1\n            i += 1\n    elif S[i] == 'L':\n        while S[i] == 'L':\n            count += 1\n            i += 1\n    t.append(count)\nT = int(len(t)/2)  \nfor i in range(T):\n    j += t[2*i]\n    if t[2*i] % 2 == 0:\n        if t[2*i + 1] % 2 == 0:\n            n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n            n[j] = n[j - 1]\n        elif t[2*i + 1] % 2 == 1:\n            n[j - 1] = t[2*i + 1]\n            n[j] = n[j - 1] + 1\n    elif t[2*i] % 2 == 1:\n        if t[2*i + 1] % 2 == 0:\n            n[j - 1] = int((t[2*i] + t[2*i + 1] + 1)/2)\n            n[j] = n[j - 1] - 1\n        elif t[2*i + 1] % 2 == 1:\n            n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n            n[j] = n[j - 1]\n    j += t[2*i+1]\nprint(' '.join(map(str, n)))\n",
        "origin_generated_text": "\n```\nS = input() + 'O'\nN = len(S)\nn = [0] * (N - 1)\nt = []\ni = 0\nj =  0\nwhile S[i] != 'O':\n    count = 0\n    if S[i] == 'R':\n        while S[i] == 'R':\n            count += 1\n            i += 1\n    elif S[i] == 'L':\n        while S[i] == 'L':\n            count += 1\n            i += 1\n    t.append(count)\nT = int(len(t)/2)  \nfor i in range(T):\n    j += t[2*i]\n    if t[2*i] % 2 == 0:\n        if t[2*i + 1] % 2 == 0:\n            n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n            n[j] = n[j - 1]\n        elif t[2*i + 1] % 2 == 1:\n            n[j - 1] = t[2*i + 1]\n            n[j] = n[j - 1] + 1\n    elif t[2*i] % 2 == 1:\n        if t[2*i + 1] % 2 == 0:\n            n[j - 1] = int((t[2*i] + t[2*i + 1] + 1)/2)\n            n[j] = n[j - 1] - 1\n        elif t[2*i + 1] % 2 == 1:\n            n[j - 1] = int((t[2*i] + t[2*i + 1])/2)\n            n[j] = n[j - 1]\n    j += t[2*i+1]\nprint(' '.join(map(str, n)))\n```\n "
    },
    {
        "user_id": "u073709667",
        "problem_id": "p02385",
        "submission1_id": "s879255025",
        "code_content": "\ndef N():\n    num=Dice[0]\n    Dice[0]=Dice[1]\n    Dice[1]=Dice[5]\n    Dice[5]=Dice[4]\n    Dice[4]=num\ndef E():\n    num=Dice[0]\n    Dice[0]=Dice[3]\n    Dice[3]=Dice[5]\n    Dice[5]=Dice[2]\n    Dice[2]=num\ndef W():\n    num=Dice[0]\n    Dice[0]=Dice[2]\n    Dice[2]=Dice[5]\n    Dice[5]=Dice[3]\n    Dice[3]=num\ndef S():\n    num=Dice[0]\n    Dice[0]=Dice[4]\n    Dice[4]=Dice[5]\n    Dice[5]=Dice[1]\n    Dice[1]=num\nDice=[int(i) for i in input().split()]\nDice2=[int(i) for i in input().split()]\nif (Dice[0] in Dice2)==False:\n    print('No')\nelse:\n    for j in range(12):\n        if j%2==0:\n            N()\n        else:\n            W()\n        for i in range(4):\n            N()\n            W()\n            S()\n            if Dice==Dice2:\n                break\n    if Dice==Dice2:\n        print('Yes')\n    else:\n        print('No')",
        "origin_generated_text": "\n```\ndef N():\n    num=Dice[0]\n    Dice[0]=Dice[1]\n    Dice[1]=Dice[5]\n    Dice[5]=Dice[4]\n    Dice[4]=num\ndef E():\n    num=Dice[0]\n    Dice[0]=Dice[3]\n    Dice[3]=Dice[5]\n    Dice[5]=Dice[2]\n    Dice[2]=num\ndef W():\n    num=Dice[0]\n    Dice[0]=Dice[2]\n    Dice[2]=Dice[5]\n    Dice[5]=Dice[3]\n    Dice[3]=num\ndef S():\n    num=Dice[0]\n    Dice[0]=Dice[4]\n    Dice[4]=Dice[5]\n    Dice[5]=Dice[1]\n    Dice[1]=num\nDice=[int(i) for i in input().split()]\nDice2=[int(i) for i in input().split()]\nif (Dice[0] in Dice2)==False:\n    print('No')\nelse:\n    for j in range(12):\n        if j%2==0:\n            N()\n        else:\n            W()\n        for i in range(4):\n            N()\n            W()\n            S()\n            if Dice==Dice2:\n                break\n    if Dice==Dice2:\n        print('Yes')\n    else:\n        print('No')```\n "
    },
    {
        "user_id": "u961674365",
        "problem_id": "p03796",
        "submission1_id": "s921176113",
        "code_content": "\nn=int(input())\nans=1\nfor i in range(n):\n  ans=(ans*(i+1))%(10**9+7)\nprint(ans)",
        "origin_generated_text": "\n```\nn=int(input())\nans=1\nfor i in range(n):\n  ans=(ans*(i+1))%(10**9+7)\nprint(ans)```\n "
    },
    {
        "user_id": "u404682284",
        "problem_id": "p02281",
        "submission1_id": "s808071461",
        "code_content": "\nclass NullNode():\n    def __init__(self):\n        self.id = -1\n\nclass Node():\n    def __init__(self, id):\n        self.id = id\n        self.parent = NullNode()\n        self.left = NullNode()\n        self.right = NullNode()\n\ndef preorder(node, out_list=[]):\n    if node.id != -1:\n        out_list.append(str(node.id))\n        out_list = preorder(node.left, out_list)\n        out_list = preorder(node.right, out_list)\n    return out_list\n\ndef inorder(node, out_list=[]):\n    if node.id != -1:\n        out_list = inorder(node.left, out_list)\n        out_list.append(str(node.id))\n        out_list = inorder(node.right, out_list)\n    return out_list\n\ndef postorder(node, out_list=[]):\n    if node.id != -1:\n        out_list = postorder(node.left, out_list)\n        out_list = postorder(node.right, out_list)\n        out_list.append(str(node.id))\n    return out_list\n\nn = int(input())\nnode_list = [Node(id) for id in range(n)]\nfor i in range(n):\n    [id, left, right] = [int(j) for j in input().split()]\n    i_node = node_list[id]\n    if left != -1:\n        i_node.left = node_list[left]\n        node_list[left].parent = node_list[id]\n    if right != -1:\n        i_node.right = node_list[right]\n        node_list[right].parent = node_list[id]\n\nprint('Preorder')\nout_list = preorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\nprint('Inorder')\nout_list = inorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\nprint('Postorder')\nout_list = postorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\n",
        "origin_generated_text": "\n```\nclass NullNode():\n    def __init__(self):\n        self.id = -1\n\nclass Node():\n    def __init__(self, id):\n        self.id = id\n        self.parent = NullNode()\n        self.left = NullNode()\n        self.right = NullNode()\n\ndef preorder(node, out_list=[]):\n    if node.id != -1:\n        out_list.append(str(node.id))\n        out_list = preorder(node.left, out_list)\n        out_list = preorder(node.right, out_list)\n    return out_list\n\ndef inorder(node, out_list=[]):\n    if node.id != -1:\n        out_list = inorder(node.left, out_list)\n        out_list.append(str(node.id))\n        out_list = inorder(node.right, out_list)\n    return out_list\n\ndef postorder(node, out_list=[]):\n    if node.id != -1:\n        out_list = postorder(node.left, out_list)\n        out_list = postorder(node.right, out_list)\n        out_list.append(str(node.id))\n    return out_list\n\nn = int(input())\nnode_list = [Node(id) for id in range(n)]\nfor i in range(n):\n    [id, left, right] = [int(j) for j in input().split()]\n    i_node = node_list[id]\n    if left != -1:\n        i_node.left = node_list[left]\n        node_list[left].parent = node_list[id]\n    if right != -1:\n        i_node.right = node_list[right]\n        node_list[right].parent = node_list[id]\n\nprint('Preorder')\nout_list = preorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\nprint('Inorder')\nout_list = inorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\nprint('Postorder')\nout_list = postorder(node_list[0], [])\nprint(' ' + ' '.join(out_list))\n\n```\n "
    },
    {
        "user_id": "u746849814",
        "problem_id": "p03475",
        "submission1_id": "s891968879",
        "code_content": "\nn = int(input())\nC, S, F = [], [], []\nfor _ in range(n-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\nfor i in range(n-1):\n    t = S[i]\n    while i != (n-1):\n        if t < S[i]:  \n            wait = (S[i] - t)\n        else:\n            wait = (t - S[i])\n        t += wait\n        t += C[i]\n        i += 1\n    print(t)\nprint(0)  ",
        "origin_generated_text": "\n```\nn = int(input())\nC, S, F = [], [], []\nfor _ in range(n-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\nfor i in range(n-1):\n    t = S[i]\n    while i != (n-1):\n        if t < S[i]:  \n            wait = (S[i] - t)\n        else:\n            wait = (t - S[i])\n        t += wait\n        t += C[i]\n        i += 1\n    print(t)\nprint(0)  ```\n "
    },
    {
        "user_id": "u261400234",
        "problem_id": "p03303",
        "submission1_id": "s814316833",
        "code_content": "\na=input()\nb=int(input())\nprint(a[::b])",
        "origin_generated_text": "\n```\na=input()\nb=int(input())\nprint(a[::b])```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s316175109",
        "code_content": "\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if (g-s)%m>1:\n        if g>=s:\n            if ans>=s:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-ans)%m\n        else:\n            if ans>=s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-s)%m\n    else:\n        val+=(g-s)%m\n\n\nprint(val)",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if (g-s)%m>1:\n        if g>=s:\n            if ans>=s:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-ans)%m\n        else:\n            if ans>=s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-s)%m\n    else:\n        val+=(g-s)%m\n\n\nprint(val)```\n "
    },
    {
        "user_id": "u993642190",
        "problem_id": "p03625",
        "submission1_id": "s175217567",
        "code_content": "\nimport collections as cl\n\nN = int(input())\nsticks = [int(i) for i in input().split()]\n\nsticks.sort(reverse=True)\n\nw = 0\nh = 0\n\nfor k,v in sorted(cl.Counter(sticks).items(), key=lambda x: x[0], reverse=True):\n    if (v < 2) :\n        continue\n    \n    if (v >= 4) :\n        \n        w = k\n        h = k\n        break\n    \n    if (v >= 2) :\n        if (w == 0) :\n            w = k\n        else :\n            h = k\n            break\n\n\nprint(w*h)",
        "origin_generated_text": "\n```\nimport collections as cl\n\nN = int(input())\nsticks = [int(i) for i in input().split()]\n\nsticks.sort(reverse=True)\n\nw = 0\nh = 0\n\nfor k,v in sorted(cl.Counter(sticks).items(), key=lambda x: x[0], reverse=True):\n    if (v < 2) :\n        continue\n    \n    if (v >= 4) :\n        \n        w = k\n        h = k\n        break\n    \n    if (v >= 2) :\n        if (w == 0) :\n            w = k\n        else :\n            h = k\n            break\n\n\nprint(w*h)```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03573",
        "submission1_id": "s130099978",
        "code_content": "\nimport functools\n\nimport os\n\nINF = float('inf')\n\n\ndef inp():\n    return int(input())\n\n\ndef inpf():\n    return float(input())\n\n\ndef inps():\n    return input()\n\n\ndef inl():\n    return list(map(int, input().split()))\n\n\ndef inlf():\n    return list(map(float, input().split()))\n\n\ndef inls():\n    return input().split()\n\n\ndef inpm(line):\n    return [inp() for _ in range(line)]\n\n\ndef inpfm(line):\n    return [inpf() for _ in range(line)]\n\n\ndef inpsm(line):\n    return [inps() for _ in range(line)]\n\n\ndef inlm(line):\n    return [inl() for _ in range(line)]\n\n\ndef inlfm(line):\n    return [inlf() for _ in range(line)]\n\n\ndef inlsm(line):\n    return [inls() for _ in range(line)]\n\n\ndef debug(fn):\n    if not os.getenv('LOCAL'):\n        return fn\n\n    @functools.wraps(fn)\n    def wrapper(*args, **kwargs):\n        print('DEBUG: {}({}) -> '.format(\n            fn.__name__,\n            ', '.join(\n                list(map(str, args)) +\n                ['{}={}'.format(k, str(v)) for k, v in kwargs.items()]\n            )\n        ), end='')\n        ret = fn(*args, **kwargs)\n        print(ret)\n        return ret\n\n    return wrapper\n\na, b, c = inl()\nif a == b:\n    print(c)\nelif a ==c:\n    print(b)\nelse:print(a)\n",
        "origin_generated_text": "\n```\nimport functools\n\nimport os\n\nINF = float('inf')\n\n\ndef inp():\n    return int(input())\n\n\ndef inpf():\n    return float(input())\n\n\ndef inps():\n    return input()\n\n\ndef inl():\n    return list(map(int, input().split()))\n\n\ndef inlf():\n    return list(map(float, input().split()))\n\n\ndef inls():\n    return input().split()\n\n\ndef inpm(line):\n    return [inp() for _ in range(line)]\n\n\ndef inpfm(line):\n    return [inpf() for _ in range(line)]\n\n\ndef inpsm(line):\n    return [inps() for _ in range(line)]\n\n\ndef inlm(line):\n    return [inl() for _ in range(line)]\n\n\ndef inlfm(line):\n    return [inlf() for _ in range(line)]\n\n\ndef inlsm(line):\n    return [inls() for _ in range(line)]\n\n\ndef debug(fn):\n    if not os.getenv('LOCAL'):\n        return fn\n\n    @functools.wraps(fn)\n    def wrapper(*args, **kwargs):\n        print('DEBUG: {}({}) -> '.format(\n            fn.__name__,\n            ', '.join(\n                list(map(str, args)) +\n                ['{}={}'.format(k, str(v)) for k, v in kwargs.items()]\n            )\n        ), end='')\n        ret = fn(*args, **kwargs)\n        print(ret)\n        return ret\n\n    return wrapper\n\na, b, c = inl()\nif a == b:\n    print(c)\nelif a ==c:\n    print(b)\nelse:print(a)\n```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s965301113",
        "code_content": "\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if h == 1 or w == 1:\n        count = 1\n    elif h % 2 == 1:\n        count = w * dy + (w-1) * (dy-1)\n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if h == 1 or w == 1:\n        count = 1\n    elif h % 2 == 1:\n        count = w * dy + (w-1) * (dy-1)\n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()```\n "
    },
    {
        "user_id": "u813102292",
        "problem_id": "p02880",
        "submission1_id": "s670863987",
        "code_content": "\nN = int(input())\nprinted = False\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if N == i * j:\n            print('Yes')\n            printed = True\n\nif not printed:\n    print('No')",
        "origin_generated_text": "\n```\nN = int(input())\nprinted = False\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if N == i * j:\n            print('Yes')\n            printed = True\n\nif not printed:\n    print('No')```\n "
    },
    {
        "user_id": "u143903328",
        "problem_id": "p03477",
        "submission1_id": "s450175746",
        "code_content": "\na, b, c, d = map(int,input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print('Right')\nelse:\n    print('Balanced')",
        "origin_generated_text": "\n```\na, b, c, d = map(int,input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print('Right')\nelse:\n    print('Balanced')```\n "
    },
    {
        "user_id": "u904943473",
        "problem_id": "p03274",
        "submission1_id": "s298505015",
        "code_content": "\nN, K = map(int, input().split())\nlst = list(map(int, input().split()))\nans = 2 * 10 ** 8\nfor i in range(N-K+1):\n\tleft = lst[i]\n\tright = lst[i+K-1]\n\tif (left > right):\n\t\tdis = abs(left - right) + abs(right)\n\telse:\n\t\tdis = abs(left - right) + abs(left)\n\tif (dis < ans):\n\t\tans = dis    \nprint(ans)\n",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nlst = list(map(int, input().split()))\nans = 2 * 10 ** 8\nfor i in range(N-K+1):\n\tleft = lst[i]\n\tright = lst[i+K-1]\n\tif (left > right):\n\t\tdis = abs(left - right) + abs(right)\n\telse:\n\t\tdis = abs(left - right) + abs(left)\n\tif (dis < ans):\n\t\tans = dis    \nprint(ans)\n```\n "
    },
    {
        "user_id": "u412563426",
        "problem_id": "p03479",
        "submission1_id": "s604395317",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nx, y = map(int, input().split())\nans = 0\nfor k in range(1, 100):\n    if int(y / (x * 2**k)) < 1:\n        ans = k\n        break\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nx, y = map(int, input().split())\nans = 0\nfor k in range(1, 100):\n    if int(y / (x * 2**k)) < 1:\n        ans = k\n        break\nprint(ans)```\n "
    },
    {
        "user_id": "u943004959",
        "problem_id": "p02625",
        "submission1_id": "s300135922",
        "code_content": "\nMOD = 10**9 + 7\nMAX = 5*10**5 + 1\n\nfact = [0 for _ in range(MAX)]\nfactinv = [0 for _ in range(MAX)]\n\nfact[0] = 1\nfor k in range(1, MAX):\n    fact[k] = fact[k - 1]*k\n    fact[k] %= MOD\n\nfactinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\nfor k in range(MAX - 1, 0, -1):\n    factinv[k - 1] = factinv[k]*k\n    factinv[k - 1] %= MOD\n\ndef nCk(n, k):\n    return fact[n]*factinv[k]*factinv[n - k] % MOD\n\ndef nPk(n, k):\n    return fact[n]*factinv[n - k] % MOD\n\nn, m = map(int, input().split(' '))\n\nans = 0\nfor k in range(n + 1):\n    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n    if k % 2: ans += tmp\n    else: ans -= tmp\n    ans %= MOD\n\nprint(ans)",
        "origin_generated_text": "\n```\nMOD = 10**9 + 7\nMAX = 5*10**5 + 1\n\nfact = [0 for _ in range(MAX)]\nfactinv = [0 for _ in range(MAX)]\n\nfact[0] = 1\nfor k in range(1, MAX):\n    fact[k] = fact[k - 1]*k\n    fact[k] %= MOD\n\nfactinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\nfor k in range(MAX - 1, 0, -1):\n    factinv[k - 1] = factinv[k]*k\n    factinv[k - 1] %= MOD\n\ndef nCk(n, k):\n    return fact[n]*factinv[k]*factinv[n - k] % MOD\n\ndef nPk(n, k):\n    return fact[n]*factinv[n - k] % MOD\n\nn, m = map(int, input().split(' '))\n\nans = 0\nfor k in range(n + 1):\n    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n    if k % 2: ans += tmp\n    else: ans -= tmp\n    ans %= MOD\n\nprint(ans)```\n "
    },
    {
        "user_id": "u073852194",
        "problem_id": "p03972",
        "submission1_id": "s220502594",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nfrom itertools import accumulate, chain\n\nW, H = map(int,input().split())\n\nP = [int(input()) for _ in range(W)]\nQ = [int(input()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\ncum_p = list(accumulate(P))\ncum_q = list(accumulate(Q))\n\nres = 0\n\nfor i in range(len(cum_p) - 1):\n    res += cum_p[i] + cum_q[i]\n\nfor i in range(len(cum_p) - 2):\n    res += min(P[i], Q[i])\n    \nprint(res)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nfrom itertools import accumulate, chain\n\nW, H = map(int,input().split())\n\nP = [int(input()) for _ in range(W)]\nQ = [int(input()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\ncum_p = list(accumulate(P))\ncum_q = list(accumulate(Q))\n\nres = 0\n\nfor i in range(len(cum_p) - 1):\n    res += cum_p[i] + cum_q[i]\n\nfor i in range(len(cum_p) - 2):\n    res += min(P[i], Q[i])\n    \nprint(res)```\n "
    },
    {
        "user_id": "u357751375",
        "problem_id": "p02767",
        "submission1_id": "s505105361",
        "code_content": "\n```\nn = int(input())\nx = list(map(int,input().split()))\nm
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int,input().split()))\nm
    },
    {
        "user_id": "u168416324",
        "problem_id": "p02886",
        "submission1_id": "s957060167",
        "code_content": "\nans=0\nn=int(input())\nli=list(map(int,input().split()))\nfor i in range(n):\n  for j in range(n):\n    if i==j:\n      break\n    ans+=li[i]*li[j]\nprint(ans)\n",
        "origin_generated_text": "\n```\nans=0\nn=int(input())\nli=list(map(int,input().split()))\nfor i in range(n):\n  for j in range(n):\n    if i==j:\n      break\n    ans+=li[i]*li[j]\nprint(ans)\n```\n "
    },
    {
        "user_id": "u712082626",
        "problem_id": "p03103",
        "submission1_id": "s226645524",
        "code_content": "\nn, m = map(int, input().split())\nt = []\nfor i in range(n):\n    a,b = map(int, input().split())\n    t.append([a,b])\nt = sorted(t, key=lambda x: x[0])\nr = 0\nfor i in t:\n    if i[1] < m:\n        r += i[0]*i[1]\n        m -= i[1]\n    else:\n        r += i[0]*(m)\n        break\nprint(r)\n",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\nt = []\nfor i in range(n):\n    a,b = map(int, input().split())\n    t.append([a,b])\nt = sorted(t, key=lambda x: x[0])\nr = 0\nfor i in t:\n    if i[1] < m:\n        r += i[0]*i[1]\n        m -= i[1]\n    else:\n        r += i[0]*(m)\n        break\nprint(r)\n```\n "
    },
    {
        "user_id": "u105210954",
        "problem_id": "p02959",
        "submission1_id": "s274657067",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(N):\n  if A[i] <= B[i]:\n    ans += B[i]\n  else:\n    ans += A[i]\n    B[i+1] += A[i] - B[i]\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(N):\n  if A[i] <= B[i]:\n    ans += B[i]\n  else:\n    ans += A[i]\n    B[i+1] += A[i] - B[i]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u396976991",
        "problem_id": "p03296",
        "submission1_id": "s917691137",
        "code_content": "\nN=int(input())\na=[]\na=input().split()\nsum=0\n \nfor i in range (1,N):\n  if a[i-1]==a[i]:\n    a[i]=str(int(a[i])+10000)\n    sum=sum+1\n \nprint(sum)",
        "origin_generated_text": "\n```\nN=int(input())\na=[]\na=input().split()\nsum=0\n \nfor i in range (1,N):\n  if a[i-1]==a[i]:\n    a[i]=str(int(a[i])+10000)\n    sum=sum+1\n \nprint(sum)```\n "
    },
    {
        "user_id": "u556160473",
        "problem_id": "p03734",
        "submission1_id": "s856999339",
        "code_content": "\nimport sys\n\nif 1:\n    N,W = map(int, input().split(' '))\n    w,v = [],[]\n    for i in range(N):\n        w_,v_ = map(int, input().split(' '))\n        w.append(w_)\n        v.append(v_)\nelse:\n    N,W = 4,6\n    w = [2,3,4,3]\n    v = [1,4,10,4]\n\nw0 = w[0]\n\nidxs = set()\nfor i in range(N+1):\n    for j in range(3*i+1):\n        if i*w0+j <= W:\n            idxs.add(i*w0+j)\nidxs = list(idxs)\nidx_dict = {idx:i for i,idx in enumerate(idxs)}\n\ndp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n\nfor i in range(N):\n    for j in range(len(idxs)):\n        if idxs[j] < w[i]:\n            dp[i+1][j] = dp[i][j]\n        else:\n            k = bisect.bisect_left(idxs, idxs[j]-w[i])\n            try:\n                dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n            except:\n                dp[i+1][j] = dp[i][j]\n\nprint(dp[-1][-1])",
        "origin_generated_text": "\n```\nimport sys\n\nif 1:\n    N,W = map(int, input().split(' '))\n    w,v = [],[]\n    for i in range(N):\n        w_,v_ = map(int, input().split(' '))\n        w.append(w_)\n        v.append(v_)\nelse:\n    N,W = 4,6\n    w = [2,3,4,3]\n    v = [1,4,10,4]\n\nw0 = w[0]\n\nidxs = set()\nfor i in range(N+1):\n    for j in range(3*i+1):\n        if i*w0+j <= W:\n            idxs.add(i*w0+j)\nidxs = list(idxs)\nidx_dict = {idx:i for i,idx in enumerate(idxs)}\n\ndp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n\nfor i in range(N):\n    for j in range(len(idxs)):\n        if idxs[j] < w[i]:\n            dp[i+1][j] = dp[i][j]\n        else:\n            k = bisect.bisect_left(idxs, idxs[j]-w[i])\n            try:\n                dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[k]]]+v[i]])\n            except:\n                dp[i+1][j] = dp[i][j]\n\nprint(dp[-1][-1])```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03023",
        "submission1_id": "s815434524",
        "code_content": "\nn = int(input())\nprint((n-3)*180)",
        "origin_generated_text": "\n```\nn = int(input())\nprint((n-3)*180)```\n "
    },
    {
        "user_id": "u382176416",
        "problem_id": "p03106",
        "submission1_id": "s130636296",
        "code_content": "\na, b, k = map(int, input().split())\n\nn = 0\ncd_list = [0]\n \nif a < b:\n  n = a\nelse:\n  n = b\n\ni = 1\nwhile i <= n:\n  if a % i == 0 and b % i == 0:\n    cd_list.append(i)\n  i += 1\n\nprint(cd_list[k-1])",
        "origin_generated_text": "\n```\na, b, k = map(int, input().split())\n\nn = 0\ncd_list = [0]\n \nif a < b:\n  n = a\nelse:\n  n = b\n\ni = 1\nwhile i <= n:\n  if a % i == 0 and b % i == 0:\n    cd_list.append(i)\n  i += 1\n\nprint(cd_list[k-1])```\n "
    },
    {
        "user_id": "u314089899",
        "problem_id": "p03752",
        "submission1_id": "s718037797",
        "code_content": "\nimport itertools\nimport copy\n\ndef main():\n    N,K = map(int, input().split())\n    a_list = [int(e) for e in input().split()]\n\n    \n    \n    \n    \n\n    ans = 10**100\n\n    l = [i for i in range(0,N)]\n\n    for v in itertools.combinations(l,K): \n        copied_a_list = copy.copy(a_list)\n        \n        v = set(v)\n        left_max = copied_a_list[0]-1\n        temp_ans = 0\n        \n        for i in range(N): \n            if i in v:\n                temp_ans += max(0,left_max+1 - copied_a_list[i])\n                copied_a_list[i] = left_max+1\n            \n            if copied_a_list[i] > left_max:\n                left_max = copied_a_list[i]\n        \n        if temp_ans < ans:\n            ans = temp_ans\n            \n    print(ans)\n\nmain()",
        "origin_generated_text": "\n```\nimport itertools\nimport copy\n\ndef main():\n    N,K = map(int, input().split())\n    a_list = [int(e) for e in input().split()]\n\n    \n    \n    \n    \n\n    ans = 10**100\n\n    l = [i for i in range(0,N)]\n\n    for v in itertools.combinations(l,K): \n        copied_a_list = copy.copy(a_list)\n        \n        v = set(v)\n        left_max = copied_a_list[0]-1\n        temp_ans = 0\n        \n        for i in range(N): \n            if i in v:\n                temp_ans += max(0,left_max+1 - copied_a_list[i])\n                copied_a_list[i] = left_max+1\n            \n            if copied_a_list[i] > left_max:\n                left_max = copied_a_list[i]\n        \n        if temp_ans < ans:\n            ans = temp_ans\n            \n    print(ans)\n\nmain()```\n "
    },
    {
        "user_id": "u952708174",
        "problem_id": "p03106",
        "submission1_id": "s642281618",
        "code_content": "\nA, B, K = [int(i) for i in input().split()]\ntmp = []\nfor j in range(1, 101):\n    if A % j == 0 and B % j == 0:\n        tmp.append(j)\ntmp.sort()\nprint(tmp[K - 1])",
        "origin_generated_text": "\n```\nA, B, K = [int(i) for i in input().split()]\ntmp = []\nfor j in range(1, 101):\n    if A % j == 0 and B % j == 0:\n        tmp.append(j)\ntmp.sort()\nprint(tmp[K - 1])```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03626",
        "submission1_id": "s215901667",
        "code_content": "\nn = int(input())\ns1 = input()\ns2 = input()\ncnt = 1\ni = 0\nwhile i < n:\n    if i == 0:\n        if s1[i] == s2[i]:\n            cnt *= 3\n            s = 0\n        else:\n            cnt *= 6\n            i += 1\n            s = 1\n    elif s1[i] == s2[i]:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 1\n        s = 0\n    else:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 3\n        s = 1\n        i += 1\n    i += 1\nprint(cnt % 1000000007)",
        "origin_generated_text": "\n```\nn = int(input())\ns1 = input()\ns2 = input()\ncnt = 1\ni = 0\nwhile i < n:\n    if i == 0:\n        if s1[i] == s2[i]:\n            cnt *= 3\n            s = 0\n        else:\n            cnt *= 6\n            i += 1\n            s = 1\n    elif s1[i] == s2[i]:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 1\n        s = 0\n    else:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 3\n        s = 1\n        i += 1\n    i += 1\nprint(cnt % 1000000007)```\n "
    },
    {
        "user_id": "u939198091",
        "problem_id": "p02718",
        "submission1_id": "s059049459",
        "code_content": "\nimport math\n\ndef solve(n,m,lst):\n  min_vote = math.ceil(sum(lst)/4/m) - 1\n  return lst[m-1] > min_vote\n\nif __name__ == \"__main__\":\n  _n, _m = map(int, input().split())\n  a_list = [int(i) for i in input().split()]\n  a_list = sorted(a_list,reverse=True)\n  if solve(_n,_m,a_list):\n    print('Yes')\n  else:\n    print('No')\n",
        "origin_generated_text": "\n```\nimport math\n\ndef solve(n,m,lst):\n  min_vote = math.ceil(sum(lst)/4/m) - 1\n  return lst[m-1] > min_vote\n\nif __name__ == \"__main__\":\n  _n, _m = map(int, input().split())\n  a_list = [int(i) for i in input().split()]\n  a_list = sorted(a_list,reverse=True)\n  if solve(_n,_m,a_list):\n    print('Yes')\n  else:\n    print('No')\n```\n "
    },
    {
        "user_id": "u591919975",
        "problem_id": "p02742",
        "submission1_id": "s641148969",
        "code_content": "\nH,W=map(int,input().split())\n\n\nif (H+W)%2==0:\n    print(int((H+W)\n\nelse:\n    print(int((H+W+1)",
        "origin_generated_text": "\n```\nH,W=map(int,input().split())\n\n\nif (H+W)%2==0:\n    print(int((H+W)\n\nelse:\n    print(int((H+W+1)```\n "
    },
    {
        "user_id": "u941438707",
        "problem_id": "p03970",
        "submission1_id": "s271987540",
        "code_content": "\ns=input();print(sum(\"CODEFESTIVAL2016\"[i]!=s[i] for i in range(16)))",
        "origin_generated_text": "\n```\ns=input();print(sum(\"CODEFESTIVAL2016\"[i]!=s[i] for i in range(16)))```\n "
    },
    {
        "user_id": "u698176039",
        "problem_id": "p03326",
        "submission1_id": "s341856305",
        "code_content": "\nN,M = map(int,input().split())\nxyz = [list(map(int,input().split())) for _ in range(N)]\n\nans = 0\nstate = [0,0,0]\nfor s in range(1<<3):\n    for i in range(3):\n        if s%2 == 1:\n            state[i] = 1\n        else:\n            state[i] = 0\n        s = s>>1\n    \n    \n    totalList = [0] * N\n    \n    for k in range(N):\n        t = 0\n        for i in range(3):\n            if state[i]:\n                t -= xyz[k][i]\n            else:\n                t += xyz[k][i]\n        totalList[k] = t\n        \n    totalList.sort(reverse = True)\n    cur = sum(totalList[:M])\n    ans = max(ans,cur)\n    cur = sum(totalList[M:])\n    ans = max(ans,cur)\n\nprint(ans)\n    \n    ",
        "origin_generated_text": "\n```\nN,M = map(int,input().split())\nxyz = [list(map(int,input().split())) for _ in range(N)]\n\nans = 0\nstate = [0,0,0]\nfor s in range(1<<3):\n    for i in range(3):\n        if s%2 == 1:\n            state[i] = 1\n        else:\n            state[i] = 0\n        s = s>>1\n    \n    \n    totalList = [0] * N\n    \n    for k in range(N):\n        t = 0\n        for i in range(3):\n            if state[i]:\n                t -= xyz[k][i]\n            else:\n                t += xyz[k][i]\n        totalList[k] = t\n        \n    totalList.sort(reverse = True)\n    cur = sum(totalList[:M])\n    ans = max(ans,cur)\n    cur = sum(totalList[M:])\n    ans = max(ans,cur)\n\nprint(ans)\n    \n    ```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03959",
        "submission1_id": "s847033871",
        "code_content": "\nN=int(input())\nT=list(map(int,input().split()))\nA=list(map(int,input().split()))\nif T[0]!=A[len(A)-1]:\n    print(0)\n    exit()\nelse:\n    t=[1]\n    for i in range(1,N):\n        if T[i-1]!=T[i]:\n            t.append(1)\n        else:\n            t.append(T[i])\n        if T[i-1]>T[i]:\n            print(0)\n            exit()\n    A=A[::-1]\n    a=[1]\n    for i in range(1,N):\n        if A[i-1]!=A[i]:\n            a.append(1)\n        else:\n            a.append(A[i])\n        if A[i-1]>A[i]:\n            print(0)\n            exit()\n    A=A[::-1]\n    a=a[::-1]\n    ans=1\n    for i in range(N):\n        ans*=min(t[i],a[i])\n        ans%=10**9+7\n    print(ans)",
        "origin_generated_text": "\n```\nN=int(input())\nT=list(map(int,input().split()))\nA=list(map(int,input().split()))\nif T[0]!=A[len(A)-1]:\n    print(0)\n    exit()\nelse:\n    t=[1]\n    for i in range(1,N):\n        if T[i-1]!=T[i]:\n            t.append(1)\n        else:\n            t.append(T[i])\n        if T[i-1]>T[i]:\n            print(0)\n            exit()\n    A=A[::-1]\n    a=[1]\n    for i in range(1,N):\n        if A[i-1]!=A[i]:\n            a.append(1)\n        else:\n            a.append(A[i])\n        if A[i-1]>A[i]:\n            print(0)\n            exit()\n    A=A[::-1]\n    a=a[::-1]\n    ans=1\n    for i in range(N):\n        ans*=min(t[i],a[i])\n        ans%=10**9+7\n    print(ans)```\n "
    },
    {
        "user_id": "u325149030",
        "problem_id": "p02665",
        "submission1_id": "s592655803",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nB = [0] *(N+1)\nB[0] = 1\nans = 0\nfor i in range(1, N+1):\n    B[i] = (B[i-1] - A[i-1])*2\n    if B[i] <= 0:\n        ans = -1\n        break\nif ans == 0:\n    check = 0\n    for j in range(N, 0, -1):\n        check += A[j]\n        if check < B[j]:\n            ans += check\n        else:\n            last = j\n            for k in range(last, N+1):\n                ans += B[k]\n            break\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nB = [0] *(N+1)\nB[0] = 1\nans = 0\nfor i in range(1, N+1):\n    B[i] = (B[i-1] - A[i-1])*2\n    if B[i] <= 0:\n        ans = -1\n        break\nif ans == 0:\n    check = 0\n    for j in range(N, 0, -1):\n        check += A[j]\n        if check < B[j]:\n            ans += check\n        else:\n            last = j\n            for k in range(last, N+1):\n                ans += B[k]\n            break\nprint(ans)\n```\n "
    },
    {
        "user_id": "u727787724",
        "problem_id": "p03546",
        "submission1_id": "s515761398",
        "code_content": "\nh,w=map(int,input().split())\nc=[]\nfor i in range(10):\n\tc.append(list(map(int,input().split())))\na=[]\nans=0\nfor i in range(h):\n\ta.append(list(map(int,input().split())))\nfor i in range(10):\n\tfor j in range(10):\n\t\tc[i][j]=min(c[i][j],c[i][0]+c[0][j])\nfor j in range(h):\n\tfor k in range(w):\n\t\tif a[j][k]==-1:\n\t\t\tcontinue\n\t\telse:\n\t\t\tans+=c[a[j][k]][1]\nprint(ans)\n\t\t\t\t\t",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nc=[]\nfor i in range(10):\n\tc.append(list(map(int,input().split())))\na=[]\nans=0\nfor i in range(h):\n\ta.append(list(map(int,input().split())))\nfor i in range(10):\n\tfor j in range(10):\n\t\tc[i][j]=min(c[i][j],c[i][0]+c[0][j])\nfor j in range(h):\n\tfor k in range(w):\n\t\tif a[j][k]==-1:\n\t\t\tcontinue\n\t\telse:\n\t\t\tans+=c[a[j][k]][1]\nprint(ans)\n\t\t\t\t\t```\n "
    },
    {
        "user_id": "u283869437",
        "problem_id": "p03972",
        "submission1_id": "s815429233",
        "code_content": "\nW,H=map(int,input().split())\np=sorted(int(input())for _ in'_'*W)\np+=10**1000\nq=sorted(int(input())for _ in'_'*H)\nq+=10**1000\nz=i=j=0\nh,w=H+1,W+1\nwhile i<W or j<H:\n\tif h*p[i]<=w*q[j]:\n\t\tz+=h*p[i]\n\t\ti+=1\n\t\tw-=1\n\telse:\n\t\tz+=w*q[j]\n\t\tj+=1\n\t\th-=1\nprint(z)\n",
        "origin_generated_text": "\n```\nW,H=map(int,input().split())\np=sorted(int(input())for _ in'_'*W)\np+=10**1000\nq=sorted(int(input())for _ in'_'*H)\nq+=10**1000\nz=i=j=0\nh,w=H+1,W+1\nwhile i<W or j<H:\n\tif h*p[i]<=w*q[j]:\n\t\tz+=h*p[i]\n\t\ti+=1\n\t\tw-=1\n\telse:\n\t\tz+=w*q[j]\n\t\tj+=1\n\t\th-=1\nprint(z)\n```\n "
    },
    {
        "user_id": "u587213169",
        "problem_id": "p03416",
        "submission1_id": "s734891014",
        "code_content": "\na, b =map(int, input().split())\ncount=0\nfor i in range(a,b+1):\n    m = list(str(i))\n    if m[0]==m[-1]:\n        if len(m)==3:\n            count+=1\n        elif len(m)==4:\n            if m[1]==m[2]:\n                count+=1\nprint(count)",
        "origin_generated_text": "\n```\na, b =map(int, input().split())\ncount=0\nfor i in range(a,b+1):\n    m = list(str(i))\n    if m[0]==m[-1]:\n        if len(m)==3:\n            count+=1\n        elif len(m)==4:\n            if m[1]==m[2]:\n                count+=1\nprint(count)```\n "
    },
    {
        "user_id": "u118642796",
        "problem_id": "p03568",
        "submission1_id": "s635241837",
        "code_content": "\nN = int(input())\nA = [int(i) for i in input().split()]\n\nans = 2**N - 1\ntmp = 1\nfor a in A:\n  if a%2==0:\n    tmp *= 2\nprint(ans - tmp + 1)",
        "origin_generated_text": "\n```\nN = int(input())\nA = [int(i) for i in input().split()]\n\nans = 2**N - 1\ntmp = 1\nfor a in A:\n  if a%2==0:\n    tmp *= 2\nprint(ans - tmp + 1)```\n "
    },
    {
        "user_id": "u093041722",
        "problem_id": "p02727",
        "submission1_id": "s834608265",
        "code_content": "\nfrom collections import deque\nX,Y,A,B,C = (int(x) for x in input().split())\np = [[int(x), 'r'] for x in input().split()]\nq = [[int(x), 'g'] for x in input().split()]\nr = [[int(x), 'c'] for x in input().split()]\npqr = p + q + r\npqr.sort(reverse=True)\nd = deque(pqr)\nrem = X + Y\nans = 0\nwhile rem > 0:\n    pop = d.popleft()\n    if pop[1] == 'r' and X > 0:\n        X -= 1\n        ans += pop[0]\n    elif pop[1] == 'g' and Y > 0:\n        Y -= 1\n        ans += pop[0]\n    else:\n        rem -= 1\n        ans += pop[0]\nprint(ans)",
        "origin_generated_text": "\n```\nfrom collections import deque\nX,Y,A,B,C = (int(x) for x in input().split())\np = [[int(x), 'r'] for x in input().split()]\nq = [[int(x), 'g'] for x in input().split()]\nr = [[int(x), 'c'] for x in input().split()]\npqr = p + q + r\npqr.sort(reverse=True)\nd = deque(pqr)\nrem = X + Y\nans = 0\nwhile rem > 0:\n    pop = d.popleft()\n    if pop[1] == 'r' and X > 0:\n        X -= 1\n        ans += pop[0]\n    elif pop[1] == 'g' and Y > 0:\n        Y -= 1\n        ans += pop[0]\n    else:\n        rem -= 1\n        ans += pop[0]\nprint(ans)```\n "
    },
    {
        "user_id": "u646130340",
        "problem_id": "p03079",
        "submission1_id": "s701496519",
        "code_content": "\nA, B, C = map(int, input().split())\nif A == B and B == C:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nA, B, C = map(int, input().split())\nif A == B and B == C:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u211160392",
        "problem_id": "p03272",
        "submission1_id": "s985405982",
        "code_content": "\nN,i = map(int,input().split())\nprint(N-i+1)",
        "origin_generated_text": "\n```\nN,i = map(int,input().split())\nprint(N-i+1)```\n "
    },
    {
        "user_id": "u813450984",
        "problem_id": "p03274",
        "submission1_id": "s405404508",
        "code_content": "\nn, k = map(int, input().split())\nc = list(map(int, input().split()))\nans = float('Inf')\nfor i in range(n-k+1):\n  l, r = c[i], c[i+k-1]\n  if l < 0 and r > 0:\n    ans = min(ans, l + r * 2)\n  else:\n    ans = min(ans, max(l, r))\nprint(ans)",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\nc = list(map(int, input().split()))\nans = float('Inf')\nfor i in range(n-k+1):\n  l, r = c[i], c[i+k-1]\n  if l < 0 and r > 0:\n    ans = min(ans, l + r * 2)\n  else:\n    ans = min(ans, max(l, r))\nprint(ans)```\n "
    },
    {
        "user_id": "u941407962",
        "problem_id": "p03343",
        "submission1_id": "s328872858",
        "code_content": "\nN, K, Q = map(int, input().split())\nX = list(map(int, input().split()))\n\nr = 10**10\nfor y in sorted(X):\n    tmp = []\n    tmp2 = []\n    for x in X:\n        if x < y:\n            tmp.sort()\n            tn = len(tmp)\n            if tn-K+1 >= 0:\n                tmp2 += tmp[:tn-K+1]\n            tmp = []\n            continue\n        tmp.append(x)\n    tn = len(tmp)\n    if tn-K+1 > 0:\n        tmp2 += tmp[:tn-K+1]\n    tmp2.sort()\n    if len(tmp2) >= Q:\n        r = min(r, tmp2[Q-1] - y)\nprint(r)\n",
        "origin_generated_text": "\n```\nN, K, Q = map(int, input().split())\nX = list(map(int, input().split()))\n\nr = 10**10\nfor y in sorted(X):\n    tmp = []\n    tmp2 = []\n    for x in X:\n        if x < y:\n            tmp.sort()\n            tn = len(tmp)\n            if tn-K+1 >= 0:\n                tmp2 += tmp[:tn-K+1]\n            tmp = []\n            continue\n        tmp.append(x)\n    tn = len(tmp)\n    if tn-K+1 > 0:\n        tmp2 += tmp[:tn-K+1]\n    tmp2.sort()\n    if len(tmp2) >= Q:\n        r = min(r, tmp2[Q-1] - y)\nprint(r)\n```\n "
    },
    {
        "user_id": "u093861603",
        "problem_id": "p02660",
        "submission1_id": "s232907283",
        "code_content": "\nN=int(input())\nli=[0]*(10**6+10)\nflag=False\nfor i in range(2,int(N**0.5)+1):\n  while N%i==0:\n    flag=True\n    N/=i\n    li[i]+=1\nif flag==False:\n  print(1)\n  exit()\nans=0\nfor count in li:\n  use=1\n  while count-use>=0:\n    ans+=1\n    count-=use\n    use+=1\nprint(ans)\n    \n    ",
        "origin_generated_text": "\n```\nN=int(input())\nli=[0]*(10**6+10)\nflag=False\nfor i in range(2,int(N**0.5)+1):\n  while N%i==0:\n    flag=True\n    N/=i\n    li[i]+=1\nif flag==False:\n  print(1)\n  exit()\nans=0\nfor count in li:\n  use=1\n  while count-use>=0:\n    ans+=1\n    count-=use\n    use+=1\nprint(ans)\n    \n    ```\n "
    },
    {
        "user_id": "u318233626",
        "problem_id": "p02640",
        "submission1_id": "s109942094",
        "code_content": "\nx, y = map(int, input().split())\n\ntmp = 4 * x - y\nf = 0\nif tmp % 2 == 0 and tmp >= 0:\n    crane = tmp \n    turtle = x - crane\n    if turtle >= 0:\n        f = 1\n    else:\n        pass\nelse:\n    pass\n\nif f == 1:\n    print('Yes')\nelse: \n    print('No')",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n\ntmp = 4 * x - y\nf = 0\nif tmp % 2 == 0 and tmp >= 0:\n    crane = tmp \n    turtle = x - crane\n    if turtle >= 0:\n        f = 1\n    else:\n        pass\nelse:\n    pass\n\nif f == 1:\n    print('Yes')\nelse: \n    print('No')```\n "
    },
    {
        "user_id": "u499381410",
        "problem_id": "p04017",
        "submission1_id": "s627752703",
        "code_content": "\nfrom collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\nfrom operator import mul\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 20\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef I(): return int(sys.stdin.buffer.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 1000000007\n\nn = I()\nX = LI()\nl = I()\nlog_n = (n - 1).bit_length()\ndoubling = [[n] * n for _ in range(log_n)]\nfor i in range(n - 1):\n    doubling[0][i] = bisect_right(X, X[i] + l) - 1\n\nfor j in range(1, log_n):\n    for k in range(n):\n        if doubling[j - 1][k] == n:\n            continue\n        doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\nq = I()\nfor _ in range(q):\n    a, b = LI()\n    if a > b:\n        a, b = b, a\n    a -= 1\n    b -= 1\n    ans = 0\n    for m in range(log_n - 1, -1, -1):\n        if doubling[m][a] <= b:\n            a = doubling[m][a]\n            ans += 2 ** m\n    print(ans + 1)\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\nfrom operator import mul\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 20\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef I(): return int(sys.stdin.buffer.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 1000000007\n\nn = I()\nX = LI()\nl = I()\nlog_n = (n - 1).bit_length()\ndoubling = [[n] * n for _ in range(log_n)]\nfor i in range(n - 1):\n    doubling[0][i] = bisect_right(X, X[i] + l) - 1\n\nfor j in range(1, log_n):\n    for k in range(n):\n        if doubling[j - 1][k] == n:\n            continue\n        doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\nq = I()\nfor _ in range(q):\n    a, b = LI()\n    if a > b:\n        a, b = b, a\n    a -= 1\n    b -= 1\n    ans = 0\n    for m in range(log_n - 1, -1, -1):\n        if doubling[m][a] <= b:\n            a = doubling[m][a]\n            ans += 2 ** m\n    print(ans + 1)\n\n\n\n\n\n\n```\n "
    },
    {
        "user_id": "u958693198",
        "problem_id": "p02854",
        "submission1_id": "s501688497",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\n\n\nsum = 0\nfor i in range(n):\n    sum += a[i]\n\nsum2 = 0\nfor i in range(n):\n    sum2 += a[i]\n    x = sum2*2 - sum\n    if x >= 0:\n        y = sum - sum2*2 - a[i]\n        if x >= y or x == 0:\n            print(x)\n            break\n        else:\n            print(y)\n            break\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\n\n\nsum = 0\nfor i in range(n):\n    sum += a[i]\n\nsum2 = 0\nfor i in range(n):\n    sum2 += a[i]\n    x = sum2*2 - sum\n    if x >= 0:\n        y = sum - sum2*2 - a[i]\n        if x >= y or x == 0:\n            print(x)\n            break\n        else:\n            print(y)\n            break\n```\n "
    },
    {
        "user_id": "u258391277",
        "problem_id": "p02912",
        "submission1_id": "s647494831",
        "code_content": "\ndef main():\n    n, m = map(int, input().split())\n    a_list = sorted(list(map(int, input().split())))\n\n    for _ in range(m):\n        a_list[a_list.index(max(a_list))] /= 2\n\n    print(sum(a_list) - n)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\ndef main():\n    n, m = map(int, input().split())\n    a_list = sorted(list(map(int, input().split())))\n\n    for _ in range(m):\n        a_list[a_list.index(max(a_list))] /= 2\n\n    print(sum(a_list) - n)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u774845108",
        "problem_id": "p03079",
        "submission1_id": "s899577279",
        "code_content": "\nfrom sys import stdin\n\ndef ria(sep = ''):\n    if sep == '' :\n        return list(map(int, input().split())) \n    else: return list(map(int, input().split(sep)))\ndef rsa(sep = ''):\n    if sep == '' :\n        return input().split() \n    else: return input().split(sep)\ndef ri(): return int(input())\ndef rd(): return float(input())\ndef rs(): return input()\n\n\n\nA, B, C = map(int, input().split())\nprint(\"Yes\" if (A == B and B == C) else \"No\")\n\n",
        "origin_generated_text": "\n```\nfrom sys import stdin\n\ndef ria(sep = ''):\n    if sep == '' :\n        return list(map(int, input().split())) \n    else: return list(map(int, input().split(sep)))\ndef rsa(sep = ''):\n    if sep == '' :\n        return input().split() \n    else: return input().split(sep)\ndef ri(): return int(input())\ndef rd(): return float(input())\ndef rs(): return input()\n\n\n\nA, B, C = map(int, input().split())\nprint(\"Yes\" if (A == B and B == C) else \"No\")\n\n```\n "
    },
    {
        "user_id": "u602252807",
        "problem_id": "p02854",
        "submission1_id": "s952566595",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\n \ns = sum(a)\n \nleft = 0\nright = s\nfor i in range(n-1):\n    left += a[i]\n    right -= a[i]\n    if left >= right:\n        print(left-right)\n        break\n    \nelse:\n    print(abs(left-right))",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\n \ns = sum(a)\n \nleft = 0\nright = s\nfor i in range(n-1):\n    left += a[i]\n    right -= a[i]\n    if left >= right:\n        print(left-right)\n        break\n    \nelse:\n    print(abs(left-right))```\n "
    },
    {
        "user_id": "u595905528",
        "problem_id": "p02580",
        "submission1_id": "s557024985",
        "code_content": "\nimport sys\nimport bisect\nimport itertools\nimport collections\nimport fractions\nimport heapq\nimport math\nfrom operator import mul\nfrom functools import reduce\nfrom functools import lru_cache\n\n\ndef solve():\n    readline = sys.stdin.buffer.readline\n    input = readline\n    mod = 10 ** 9 + 7\n    H, W, M = map(int, input().split())\n    Hlist = [0] * H + [0]\n    Wlist = [0] * W + [0]\n    hw = []\n\n    for _ in range(M):\n        h, w = map(int, input().split())\n        Hlist[h-1] += 1\n        Wlist[w-1] += 1\n        hw.append([h, w])\n\n\n    hmax = [i for i, x in enumerate(Hlist) if x == max(Hlist[:-1])]\n    wmax = [i for i, x in enumerate(Wlist) if x == max(Wlist[:-1])]\n\n    flag = False\n    for hh in hw:\n        h = hh[0] - 1\n        w = hh[1] - 1\n        if not (h in hmax and w in wmax):\n            flag = True\n\n\n    if flag:\n        print(Hlist[h] + Wlist[w])\n    else:\n        print(Hlist[h] + Wlist[w] - 1)\n\n\n\n\n\nif __name__ == '__main__':\n    solve()",
        "origin_generated_text": "\n```\nimport sys\nimport bisect\nimport itertools\nimport collections\nimport fractions\nimport heapq\nimport math\nfrom operator import mul\nfrom functools import reduce\nfrom functools import lru_cache\n\n\ndef solve():\n    readline = sys.stdin.buffer.readline\n    input = readline\n    mod = 10 ** 9 + 7\n    H, W, M = map(int, input().split())\n    Hlist = [0] * H + [0]\n    Wlist = [0] * W + [0]\n    hw = []\n\n    for _ in range(M):\n        h, w = map(int, input().split())\n        Hlist[h-1] += 1\n        Wlist[w-1] += 1\n        hw.append([h, w])\n\n\n    hmax = [i for i, x in enumerate(Hlist) if x == max(Hlist[:-1])]\n    wmax = [i for i, x in enumerate(Wlist) if x == max(Wlist[:-1])]\n\n    flag = False\n    for hh in hw:\n        h = hh[0] - 1\n        w = hh[1] - 1\n        if not (h in hmax and w in wmax):\n            flag = True\n\n\n    if flag:\n        print(Hlist[h] + Wlist[w])\n    else:\n        print(Hlist[h] + Wlist[w] - 1)\n\n\n\n\n\nif __name__ == '__main__':\n    solve()```\n "
    },
    {
        "user_id": "u533713111",
        "problem_id": "p02886",
        "submission1_id": "s673333456",
        "code_content": "\nN=int(input())\nd=list(map(int, input().split()))\na=(sum(d))**2\n\ndef square(list):\n    return [i ** 2 for i in list]\n\nb=sum(square(d))\nprint(a-b)",
        "origin_generated_text": "\n```\nN=int(input())\nd=list(map(int, input().split()))\na=(sum(d))**2\n\ndef square(list):\n    return [i ** 2 for i in list]\n\nb=sum(square(d))\nprint(a-b)```\n "
    },
    {
        "user_id": "u047023156",
        "problem_id": "p02727",
        "submission1_id": "s508216069",
        "code_content": "\nimport sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.extend(q)\np.extend(r)\np.sort()\n\nprint(sum(p[-(X+Y):]))",
        "origin_generated_text": "\n```\nimport sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.extend(q)\np.extend(r)\np.sort()\n\nprint(sum(p[-(X+Y):]))```\n "
    },
    {
        "user_id": "u112002050",
        "problem_id": "p03200",
        "submission1_id": "s894886678",
        "code_content": "\ns = list(input())\nb_counts = [0]\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == \"B\":\n        cnt += 1\n    if s[i] == \"W\":\n        b_counts.append(cnt)\n        cnt = 0\nb_counts.append(cnt)\nprint(sum(b_counts[1:]))\n",
        "origin_generated_text": "\n```\ns = list(input())\nb_counts = [0]\ncnt = 0\nfor i in range(len(s)):\n    if s[i] == \"B\":\n        cnt += 1\n    if s[i] == \"W\":\n        b_counts.append(cnt)\n        cnt = 0\nb_counts.append(cnt)\nprint(sum(b_counts[1:]))\n```\n "
    },
    {
        "user_id": "u686036872",
        "problem_id": "p03087",
        "submission1_id": "s285275553",
        "code_content": "\nN, Q = map(int, input().split())\nS=input()\nlist=[]\nfor i in range(N-1):\n    if S[i] == \"A\" and S[i+1] == \"C\":\n        list.append(i)\ncount=0\nfor i in range(Q):\n    l, r = map(int, input().split())\n    count=0\n    for j in list:\n        if l-1 <= j < r-1:\n            count+=1\n    print(count)",
        "origin_generated_text": "\n```\nN, Q = map(int, input().split())\nS=input()\nlist=[]\nfor i in range(N-1):\n    if S[i] == \"A\" and S[i+1] == \"C\":\n        list.append(i)\ncount=0\nfor i in range(Q):\n    l, r = map(int, input().split())\n    count=0\n    for j in list:\n        if l-1 <= j < r-1:\n            count+=1\n    print(count)```\n "
    },
    {
        "user_id": "u831971779",
        "problem_id": "p02407",
        "submission1_id": "s086355108",
        "code_content": "\nn = int(input())\nprint(\" \".join(input().split())[::-1].replace(\" \", \"\"))",
        "origin_generated_text": "\n```\nn = int(input())\nprint(\" \".join(input().split())[::-1].replace(\" \", \"\"))```\n "
    },
    {
        "user_id": "u933096856",
        "problem_id": "p02469",
        "submission1_id": "s096942121",
        "code_content": "\ndef gcd(x,y):\n    p=min(x,y)\n    q=max(x,y)\n    while q%p!=0:\n        m=q%p\n        q=p\n        p=m\n    return p\n\nc=0\nn=int(input())\na=sorted(set(list(map(int, input().split()))))\nb=[]\nwhile len(a) > 1:\n    n=len(a)\n    for i in range(n-1):\n        p=a[i]\n        q=a[i+1]\n        g=gcd(p,q)\n        r=p*q\n        a.append(r\n    a=sorted(a)\nprint(*a)",
        "origin_generated_text": "\n```\ndef gcd(x,y):\n    p=min(x,y)\n    q=max(x,y)\n    while q%p!=0:\n        m=q%p\n        q=p\n        p=m\n    return p\n\nc=0\nn=int(input())\na=sorted(set(list(map(int, input().split()))))\nb=[]\nwhile len(a) > 1:\n    n=len(a)\n    for i in range(n-1):\n        p=a[i]\n        q=a[i+1]\n        g=gcd(p,q)\n        r=p*q\n        a.append(r\n    a=sorted(a)\nprint(*a)```\n "
    },
    {
        "user_id": "u143565147",
        "problem_id": "p02556",
        "submission1_id": "s152646556",
        "code_content": "\ndef f(x, y):\n    return x-y, x+y\n\n\nn = int(input())\np = [list(map(int, input().split())) for i in range(n)]\n\nmin_x = 2000000000\nmin_y = 2000000000\nmax_x = 0\nmax_y = 0\nfor xi, yi in p:\n    x_, y_ = f(xi, yi)\n    max_x = max(max_x, x_)\n    min_x = min(min_x, x_)\n    max_y = max(max_y, y_)\n    min_y = min(min_y, y_)\n\nprint(max(max_x - min_x, max_y - min_y))",
        "origin_generated_text": "\n```\ndef f(x, y):\n    return x-y, x+y\n\n\nn = int(input())\np = [list(map(int, input().split())) for i in range(n)]\n\nmin_x = 2000000000\nmin_y = 2000000000\nmax_x = 0\nmax_y = 0\nfor xi, yi in p:\n    x_, y_ = f(xi, yi)\n    max_x = max(max_x, x_)\n    min_x = min(min_x, x_)\n    max_y = max(max_y, y_)\n    min_y = min(min_y, y_)\n\nprint(max(max_x - min_x, max_y - min_y))```\n "
    },
    {
        "user_id": "u094191970",
        "problem_id": "p03992",
        "submission1_id": "s730619305",
        "code_content": "\ns=input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u035901835",
        "problem_id": "p02954",
        "submission1_id": "s597225914",
        "code_content": "\nS=input()\n\nnum={}\nfor i in range(len(S)):\n    num[i]=0\n\nfor i in range(len(S)-1):\n    if S[i]=='L' and S[i-1]=='R':\n        j=1\n        count=0\n        while(1):\n            if i-j<0:\n                break\n            if S[i-j]=='R':\n                count+=1\n            else:\n                break\n            j+=1\n        num[i]=count\n\nfor i in range(len(S)-1):\n    if S[i]=='R' and S[i+1]=='L':\n        j=1\n        count=0\n        while(1):\n            if i+j>len(S)-1:\n                break\n            if S[i+j]=='L':\n                count+=1\n            else:\n                break\n            j+=1\n        num[i+1]=count\n\nnum[len(S)-1]=0\n\nfor i in range(len(S)):\n    print(num[i],end=' ')\nprint('')",
        "origin_generated_text": "\n```\nS=input()\n\nnum={}\nfor i in range(len(S)):\n    num[i]=0\n\nfor i in range(len(S)-1):\n    if S[i]=='L' and S[i-1]=='R':\n        j=1\n        count=0\n        while(1):\n            if i-j<0:\n                break\n            if S[i-j]=='R':\n                count+=1\n            else:\n                break\n            j+=1\n        num[i]=count\n\nfor i in range(len(S)-1):\n    if S[i]=='R' and S[i+1]=='L':\n        j=1\n        count=0\n        while(1):\n            if i+j>len(S)-1:\n                break\n            if S[i+j]=='L':\n                count+=1\n            else:\n                break\n            j+=1\n        num[i+1]=count\n\nnum[len(S)-1]=0\n\nfor i in range(len(S)):\n    print(num[i],end=' ')\nprint('')```\n "
    },
    {
        "user_id": "u931118906",
        "problem_id": "p02912",
        "submission1_id": "s904560377",
        "code_content": "\nimport sys\nimport heapq\ninput=sys.stdin.readline\nn,m=map(int,input().split())\na=list(map(lambda x:int(x)*(-1),input().split()))\nheapq.heapify(a)\nfor _ in range(m):\n    a.append(heapq.heappop(a)/2)\nprint(int(sum(a)*(-1)))",
        "origin_generated_text": "\n```\nimport sys\nimport heapq\ninput=sys.stdin.readline\nn,m=map(int,input().split())\na=list(map(lambda x:int(x)*(-1),input().split()))\nheapq.heapify(a)\nfor _ in range(m):\n    a.append(heapq.heappop(a)/2)\nprint(int(sum(a)*(-1)))```\n "
    },
    {
        "user_id": "u426108351",
        "problem_id": "p03036",
        "submission1_id": "s169115448",
        "code_content": "\nr, D, x2000 = map(int, input().split())\nfor i in range(10):\n  x2000 = r*x2000-D\n  print(x2000)",
        "origin_generated_text": "\n```\nr, D, x2000 = map(int, input().split())\nfor i in range(10):\n  x2000 = r*x2000-D\n  print(x2000)```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s965682950",
        "code_content": "\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b -1) % m\ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)",
        "origin_generated_text": "\n```\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b -1) % m\ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)```\n "
    },
    {
        "user_id": "u567434159",
        "problem_id": "p03965",
        "submission1_id": "s458613368",
        "code_content": "\ns = input()\nscore = 0\ntoUse = 0\nfor it in s:\n  if it == 'g' and toUse > 0:\n    toUse -= 1\n    score += 1\n    continue\n  if it == 'g':\n    toUse += 1\n    continue\n  if toUse > 0:\n    toUse -= 1\n  else:\n    score -=1\n    \nprint(score)\n",
        "origin_generated_text": "\n```\ns = input()\nscore = 0\ntoUse = 0\nfor it in s:\n  if it == 'g' and toUse > 0:\n    toUse -= 1\n    score += 1\n    continue\n  if it == 'g':\n    toUse += 1\n    continue\n  if toUse > 0:\n    toUse -= 1\n  else:\n    score -=1\n    \nprint(score)\n```\n "
    },
    {
        "user_id": "u108617242",
        "problem_id": "p03970",
        "submission1_id": "s789574930",
        "code_content": "\ns = input()\ncount = 0;\nanser = \"CODEFESTIVAL2016\"\nfor i in range(0,16):\n\tif not s[i] == anser[i]:\n\t\tcount+=1\nprint(count)\n",
        "origin_generated_text": "\n```\ns = input()\ncount = 0;\nanser = \"CODEFESTIVAL2016\"\nfor i in range(0,16):\n\tif not s[i] == anser[i]:\n\t\tcount+=1\nprint(count)\n```\n "
    },
    {
        "user_id": "u328067859",
        "problem_id": "p02767",
        "submission1_id": "s570874688",
        "code_content": "\nN = int(input())\nX = list(map(int, input().split()))\nsum = []\nfor n in range(0,N):\n    s = 0\n    for x in X:\n        s = s + ((x-n)*(x-n))\n    sum.append(s)\n\nprint(min(sum))",
        "origin_generated_text": "\n```\nN = int(input())\nX = list(map(int, input().split()))\nsum = []\nfor n in range(0,N):\n    s = 0\n    for x in X:\n        s = s + ((x-n)*(x-n))\n    sum.append(s)\n\nprint(min(sum))```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s336424715",
        "code_content": "\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for v,w in zip(values,weights):\n        for c in range(w, capacity+1):\n            work[c]=max(work[c],work[c-w]+v)\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))+[1]\n    prices_b=list(map(int,inp().split()))+[1]\n    \n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())",
        "origin_generated_text": "\n```\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for v,w in zip(values,weights):\n        for c in range(w, capacity+1):\n            work[c]=max(work[c],work[c-w]+v)\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))+[1]\n    prices_b=list(map(int,inp().split()))+[1]\n    \n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p03477",
        "submission1_id": "s676517690",
        "code_content": "\nA, B, C, D = map(int, input().split())\nif A+B == C+D:\n  print(\"Balanced\")\nif A+B > C+D:\n  print(\"Left\")\nif A+B < C+D:\n  print(\"Right\")\n",
        "origin_generated_text": "\n```\nA, B, C, D = map(int, input().split())\nif A+B == C+D:\n  print(\"Balanced\")\nif A+B > C+D:\n  print(\"Left\")\nif A+B < C+D:\n  print(\"Right\")\n```\n "
    },
    {
        "user_id": "u331464808",
        "problem_id": "p03992",
        "submission1_id": "s157893759",
        "code_content": "\ns = input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns = input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u927282564",
        "problem_id": "p02665",
        "submission1_id": "s495879611",
        "code_content": "\nN=int(input())\nA=list(map(int,input().split()))\ntemp=1\nsumm=0\ncont=0\ntemplist=[1]\nfor i in range(N+1):\n  \n  if A[i]<temp:\n    if i<N:\n      summ+=temp\n      temp=2*(temp-A[i])\n      templist.append(temp)\n    elif i==N:\n      summ+=temp\n      cont+=1\n  elif A[i]==temp:\n    if i==N:\n      summ+=temp\n      \n      cont+=1\n    else:\n      print(\"-1\")\n      break\n  else:\n    print(\"-1\")\n    break\n    \nif cont==1:\n  if A[N]==temp:\n  \tprint(summ)\n  else:\n    \n    \n    comp=A[-1]\n    for i in range(N):\n      summ-=(templist[-(i+1)]-comp)\n      comp+=A[-(i+2)]\n      \n      \n      \n      if comp>templist[-(i+2)]:\n        print(summ)\n        break\n      elif comp==templist[-(i+2)]:\n        if i==N-1:\n          print(summ)\n          break\n        else:\n          print(\"-1\")\n          break\n      else:\n        print(\"-1\")\n        break",
        "origin_generated_text": "\n```\nN=int(input())\nA=list(map(int,input().split()))\ntemp=1\nsumm=0\ncont=0\ntemplist=[1]\nfor i in range(N+1):\n  \n  if A[i]<temp:\n    if i<N:\n      summ+=temp\n      temp=2*(temp-A[i])\n      templist.append(temp)\n    elif i==N:\n      summ+=temp\n      cont+=1\n  elif A[i]==temp:\n    if i==N:\n      summ+=temp\n      \n      cont+=1\n    else:\n      print(\"-1\")\n      break\n  else:\n    print(\"-1\")\n    break\n    \nif cont==1:\n  if A[N]==temp:\n  \tprint(summ)\n  else:\n    \n    \n    comp=A[-1]\n    for i in range(N):\n      summ-=(templist[-(i+1)]-comp)\n      comp+=A[-(i+2)]\n      \n      \n      \n      if comp>templist[-(i+2)]:\n        print(summ)\n        break\n      elif comp==templist[-(i+2)]:\n        if i==N-1:\n          print(summ)\n          break\n        else:\n          print(\"-1\")\n          break\n      else:\n        print(\"-1\")\n        break```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03752",
        "submission1_id": "s441156214",
        "code_content": "\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nans = 10**11\n\n\nfor i in range(2**(n-1)):\n  select = [0]\n  len_select = 1\n  for j in range(n-1):\n    if i >> j & 1 and len_select < k:\n      select.append(j+1)\n      len_select += 1\n  \n  \n  ok = 1\n  \n  for m in select:\n    for l in range(n):\n      if l in select: continue\n      if l < k and a[l] > a[m]:\n        \n        ok = 0\n  if ok == 0 or len_select < k: continue\n  else:\n    ans_i = 0\n    pre_val = a[0]\n    for j in range(1,k):\n      \n      if pre_val >= a[select[j]]:\n        ans_i += pre_val+1 - a[select[j]]\n        pre_val += 1\n      else:\n        pre_val = a[select[j]]\n  ans = min(ans,ans_i)\nprint(ans)",
        "origin_generated_text": "\n```\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nans = 10**11\n\n\nfor i in range(2**(n-1)):\n  select = [0]\n  len_select = 1\n  for j in range(n-1):\n    if i >> j & 1 and len_select < k:\n      select.append(j+1)\n      len_select += 1\n  \n  \n  ok = 1\n  \n  for m in select:\n    for l in range(n):\n      if l in select: continue\n      if l < k and a[l] > a[m]:\n        \n        ok = 0\n  if ok == 0 or len_select < k: continue\n  else:\n    ans_i = 0\n    pre_val = a[0]\n    for j in range(1,k):\n      \n      if pre_val >= a[select[j]]:\n        ans_i += pre_val+1 - a[select[j]]\n        pre_val += 1\n      else:\n        pre_val = a[select[j]]\n  ans = min(ans,ans_i)\nprint(ans)```\n "
    },
    {
        "user_id": "u552201227",
        "problem_id": "p03206",
        "submission1_id": "s486069755",
        "code_content": "\nD = int(input())\nprint(\"Christmas\"+\"Eve\"*(25-D)+\"Christmas\")",
        "origin_generated_text": "\n```\nD = int(input())\nprint(\"Christmas\"+\"Eve\"*(25-D)+\"Christmas\")```\n "
    },
    {
        "user_id": "u661290476",
        "problem_id": "p00026",
        "submission1_id": "s956045492",
        "code_content": "\n\nboard=[[0]*10 for i in range(10)]\nink=[[[0,0,0,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,0,1,0,0],[0,0,0,0,0]],\n[[0,0,0,0,0],[0,1,1,1,0],[0,1,1,1,0],[0,1,1,1,0],[0,0,0,0,0]],\n[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]]]\n\nwhile True:\n    try:\n        x,y,s=map(int,input().split(\",\"))\n    except:\n        break\n    for i in range(5):\n        for j in range(5):\n            if 0<=i+y-2<=9 and 0<=j+x-2<=9:\n                board[i+y-2][j+x-2]+=ink[s-1][i][j]\nprint(flat.count(0))\nprint(max(flat))",
        "origin_generated_text": "\n```\n\nboard=[[0]*10 for i in range(10)]\nink=[[[0,0,0,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,0,1,0,0],[0,0,0,0,0]],\n[[0,0,0,0,0],[0,1,1,1,0],[0,1,1,1,0],[0,1,1,1,0],[0,0,0,0,0]],\n[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,1,1,1,0],[0,0,1,0,0]]]\n\nwhile True:\n    try:\n        x,y,s=map(int,input().split(\",\"))\n    except:\n        break\n    for i in range(5):\n        for j in range(5):\n            if 0<=i+y-2<=9 and 0<=j+x-2<=9:\n                board[i+y-2][j+x-2]+=ink[s-1][i][j]\nprint(flat.count(0))\nprint(max(flat))```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03079",
        "submission1_id": "s702976766",
        "code_content": "\nA ,B ,C =map(int,input().split())\nif A==B and B==C:\n     print('Yes')\nelse :\n     print('No')\n",
        "origin_generated_text": "\n```\nA ,B ,C =map(int,input().split())\nif A==B and B==C:\n     print('Yes')\nelse :\n     print('No')\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03318",
        "submission1_id": "s322035665",
        "code_content": "\ndef main():\n    s=set()\n    for digit in range(16):\n        for i in range(1,1000):\n            c=i*10**digit+int('9'*digit or 0)\n            if c<10**15:\n                s.add(c)\n    c=sorted(s)\n    for i,n in enumerate(c):\n        sn=n/sum(map(int,str(n)))\n        for m in c[i+1:i+100]:\n            sm=m/sum(map(int,str(m)))\n            if sm<sn:\n                s.remove(n)\n                break\n    print(*sorted(s)[:int(input())],sep='\\n')\nmain()",
        "origin_generated_text": "\n```\ndef main():\n    s=set()\n    for digit in range(16):\n        for i in range(1,1000):\n            c=i*10**digit+int('9'*digit or 0)\n            if c<10**15:\n                s.add(c)\n    c=sorted(s)\n    for i,n in enumerate(c):\n        sn=n/sum(map(int,str(n)))\n        for m in c[i+1:i+100]:\n            sm=m/sum(map(int,str(m)))\n            if sm<sn:\n                s.remove(n)\n                break\n    print(*sorted(s)[:int(input())],sep='\\n')\nmain()```\n "
    },
    {
        "user_id": "u989345508",
        "problem_id": "p03626",
        "submission1_id": "s973777543",
        "code_content": "\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    print(c%1000000007)\n",
        "origin_generated_text": "\n```\nn=int(input())\ns1=input()\ns2=input()\nx=[]\nf=0\nfor i in range(n):\n    if f==1:\n        f=0\n    else:\n        if s1[i]==s2[i]:\n            x.append(0)\n        else:\n            x.append(1)\n            f=1\nl=len(x)\n\nif l==1:\n    if x[0]==0:\n        print(3)\n    else:\n        print(6)\nelse:\n    if x[0]==0:\n        c=3\n    else:\n        c=6\n    for i in range(1,l):\n        \n        if x[i-1]==0:\n            c*=2\n        else:\n            if x[i]==1:\n                c*=3\n        c%=1000000007\n\n    print(c%1000000007)\n```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p03087",
        "submission1_id": "s306099861",
        "code_content": "\nfrom itertools import accumulate\n\nn, q = map(int, input().split())\n\ns = input()\n\nproblems = [list(map(int, input().split())) for _ in range(q)]\n\n\ndef count(total, i):\n    return total + 1 if s[i-1:i+1] == 'AC' else total\n\n\ncumsum = [0] + list(accumulate(range(1, n), count))\n\nfor l, r in problems:\n    print(cumsum[r-1] - cumsum[l-1])\n\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\nn, q = map(int, input().split())\n\ns = input()\n\nproblems = [list(map(int, input().split())) for _ in range(q)]\n\n\ndef count(total, i):\n    return total + 1 if s[i-1:i+1] == 'AC' else total\n\n\ncumsum = [0] + list(accumulate(range(1, n), count))\n\nfor l, r in problems:\n    print(cumsum[r-1] - cumsum[l-1])\n\n```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s437205029",
        "code_content": "\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] = (dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + 2*j * dp[i][j][k]) % m\n      if j > 0:\n      \tdp[i+1][j-1][k+2*(j-1)] = (dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k]) % m\nprint(int(dp[N][0][K])) % m\n",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] = (dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + 2*j * dp[i][j][k]) % m\n      if j > 0:\n      \tdp[i+1][j-1][k+2*(j-1)] = (dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k]) % m\nprint(int(dp[N][0][K])) % m\n```\n "
    },
    {
        "user_id": "u111392182",
        "problem_id": "p02854",
        "submission1_id": "s209502166",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\nb = sum(a)\nl = 0\nr = 0\nx = 0\ny = 0\nans = 0\nfor i in a:\n  l += i\n  r = b - l\n  if l==r:\n    break;\n  elif l>r:\n    ans = min(l-r,y-x)\n    break;\n  x = l\n  y = r\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\nb = sum(a)\nl = 0\nr = 0\nx = 0\ny = 0\nans = 0\nfor i in a:\n  l += i\n  r = b - l\n  if l==r:\n    break;\n  elif l>r:\n    ans = min(l-r,y-x)\n    break;\n  x = l\n  y = r\nprint(ans)```\n "
    },
    {
        "user_id": "u302957509",
        "problem_id": "p03206",
        "submission1_id": "s801739845",
        "code_content": "\nprint(\"Christmas\" + \" \".join([\"Eve\"] * (25 - int(input()))[1:]))",
        "origin_generated_text": "\n```\nprint(\"Christmas\" + \" \".join([\"Eve\"] * (25 - int(input()))[1:]))```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03613",
        "submission1_id": "s157232319",
        "code_content": "\nn = int(input())\nk = [0] * 100005\nfor a in map(int, input().split()):\n    k[a] += 1\nprint(max(map(sum, zip(k[1:], k[2:], k[3:], k[4:]))))\n",
        "origin_generated_text": "\n```\nn = int(input())\nk = [0] * 100005\nfor a in map(int, input().split()):\n    k[a] += 1\nprint(max(map(sum, zip(k[1:], k[2:], k[3:], k[4:]))))\n```\n "
    },
    {
        "user_id": "u361243145",
        "problem_id": "p03480",
        "submission1_id": "s916975861",
        "code_content": "\nS = input()\n\nans = 10**5\nfor i in range(len(S)\n    if S[i] != S[len(S)-i-1]:\n        ans = min(ans, max(i, len(S)-i))\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nS = input()\n\nans = 10**5\nfor i in range(len(S)\n    if S[i] != S[len(S)-i-1]:\n        ans = min(ans, max(i, len(S)-i))\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u891635666",
        "problem_id": "p03477",
        "submission1_id": "s216747980",
        "code_content": "\na, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print('Left')\nelif a + b < c + d:\n    print(\"Right\")\nelse:\n    print(\"Balanced\")```\n "
    },
    {
        "user_id": "u777923818",
        "problem_id": "p03998",
        "submission1_id": "s536828572",
        "code_content": "\nturn = \"a\"\nS = {}\nS[\"a\"] = list(input())\nS[\"b\"] = list(input())\nS[\"c\"] = list(input())\n\nwhile True:\n    if len(S[turn]) == 0:\n        print(turn.upper())\n        break\n    else:\n        turn = S[turn].pop(0)\n        ",
        "origin_generated_text": "\n```\nturn = \"a\"\nS = {}\nS[\"a\"] = list(input())\nS[\"b\"] = list(input())\nS[\"c\"] = list(input())\n\nwhile True:\n    if len(S[turn]) == 0:\n        print(turn.upper())\n        break\n    else:\n        turn = S[turn].pop(0)\n        ```\n "
    },
    {
        "user_id": "u790877102",
        "problem_id": "p03563",
        "submission1_id": "s850165090",
        "code_content": "\nR = int(input())\nG = int(input())\n\nW = R + G - 2*R\n\nprint(W)",
        "origin_generated_text": "\n```\nR = int(input())\nG = int(input())\n\nW = R + G - 2*R\n\nprint(W)```\n "
    },
    {
        "user_id": "u594956556",
        "problem_id": "p03943",
        "submission1_id": "s550965215",
        "code_content": "\nabc = list(map(int, input().split()))\nabc.sort()\nif abc[0]+abc[1] == abc[2]:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nabc = list(map(int, input().split()))\nabc.sort()\nif abc[0]+abc[1] == abc[2]:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s365279194",
        "code_content": "\ndef solve(a,b,c,d):\n  x1,y1,x2,y2=a,b,c,d\n  mx=my=0\n  for i in range(30):\n    x1=0-x1\n    y1=0-y1\n    x2=0-x2\n    y2=0-y2\n    if x1==x2 and x1%3==2:mx=i+1\n    if y1==y2 and y1%3==2:my=i+1\n  ans=abs(a-c)+abs(b-d)\n  if mx<my:\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return ans\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(a,b,c,d):\n  x1,y1,x2,y2=a,b,c,d\n  mx=my=0\n  for i in range(30):\n    x1=0-x1\n    y1=0-y1\n    x2=0-x2\n    y2=0-y2\n    if x1==x2 and x1%3==2:mx=i+1\n    if y1==y2 and y1%3==2:my=i+1\n  ans=abs(a-c)+abs(b-d)\n  if mx<my:\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return ans\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u725359833",
        "problem_id": "p02886",
        "submission1_id": "s407130933",
        "code_content": "\nn=int(input())\nd=list(map(int,input().split(\" \")))\nwa=[]\nfor i in range(n):\n  for j in range(i+1,n):\n    wa.append(d[i]*d[j])\nprint(sum(wa))\n",
        "origin_generated_text": "\n```\nn=int(input())\nd=list(map(int,input().split(\" \")))\nwa=[]\nfor i in range(n):\n  for j in range(i+1,n):\n    wa.append(d[i]*d[j])\nprint(sum(wa))\n```\n "
    },
    {
        "user_id": "u077019541",
        "problem_id": "p03080",
        "submission1_id": "s290800766",
        "code_content": "\nN = [i for i in input()]\nif N.count(\"R\")>N.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nN = [i for i in input()]\nif N.count(\"R\")>N.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s459664114",
        "code_content": "\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i + 1][j + 1][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i + 1][j][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i + 1][j][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)",
        "origin_generated_text": "\n```\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i + 1][j + 1][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i + 1][j][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i + 1][j][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)```\n "
    },
    {
        "user_id": "u607044138",
        "problem_id": "p02556",
        "submission1_id": "s002854534",
        "code_content": "\nN = int(input())\ntable = [[int(i) for i in input().split()] for N in range(N)]\n\na = 10**9 * 2\nb = -10**9 * 2\nc = 10**9 * 2\nd = -10**9 * 2\nfor i in range(N):\n    p = table[i][0]\n    q = table[i][1]\n    if a < p+q:\n        a = p+q\n    if b > p+q:\n        b = p+q\n    if c < p-q:\n        c = p-q\n    if d > p-q:\n        d = p-q\n\nprint(max(a-b,c-d))\n",
        "origin_generated_text": "\n```\nN = int(input())\ntable = [[int(i) for i in input().split()] for N in range(N)]\n\na = 10**9 * 2\nb = -10**9 * 2\nc = 10**9 * 2\nd = -10**9 * 2\nfor i in range(N):\n    p = table[i][0]\n    q = table[i][1]\n    if a < p+q:\n        a = p+q\n    if b > p+q:\n        b = p+q\n    if c < p-q:\n        c = p-q\n    if d > p-q:\n        d = p-q\n\nprint(max(a-b,c-d))\n```\n "
    },
    {
        "user_id": "u955125992",
        "problem_id": "p03200",
        "submission1_id": "s754840458",
        "code_content": "\ns = str(input())\nn = len(s)\ncount = 0\nmax_W = 0\n\nfor i in range(n):\n    if s[i] == 'W':\n        max_W = i\n\nif max_W == n - 1 or s.count('W') == 0 or s.count('W') == n:\n    print(0)\n    exit()\n\nprint(s.count('W') - max_W)",
        "origin_generated_text": "\n```\ns = str(input())\nn = len(s)\ncount = 0\nmax_W = 0\n\nfor i in range(n):\n    if s[i] == 'W':\n        max_W = i\n\nif max_W == n - 1 or s.count('W') == 0 or s.count('W') == n:\n    print(0)\n    exit()\n\nprint(s.count('W') - max_W)```\n "
    },
    {
        "user_id": "u602773379",
        "problem_id": "p02660",
        "submission1_id": "s652081916",
        "code_content": "\nimport math\n\ndef prime(num):\n\tarray=[]\n\ttmp=int(math.sqrt(n))+1\n\tfor i in range(2,tmp):\n\t\twhile num % i == 0:\n\t\t\tnum/=i\n\t\t\tarray.append(i)\n\t\n\t\n\tif array==[]:\n\t\treturn [num]\n\telse:\n\t\treturn array\n\nn=int(input())\nP=prime(n)\nP=sorted(P)\n \nif 1 in P:\n\tprint(0)\nelse:\n\tans=0\n\ttmp=0\n\tfor i in range(0,len(P)):\n\t\tif i==0:\n\t\t\ttmp=P[i] \n\t\telif P[i]==P[i-1]:\n\t\t\ttmp*=P[i]\n\t\telse:\n\t\t\ttmp=P[i]\n\t\tif n%tmp==0:\n\t\t\tn/=tmp\n\t\t\tans+=1\n\tprint(ans)",
        "origin_generated_text": "\n```\nimport math\n\ndef prime(num):\n\tarray=[]\n\ttmp=int(math.sqrt(n))+1\n\tfor i in range(2,tmp):\n\t\twhile num % i == 0:\n\t\t\tnum/=i\n\t\t\tarray.append(i)\n\t\n\t\n\tif array==[]:\n\t\treturn [num]\n\telse:\n\t\treturn array\n\nn=int(input())\nP=prime(n)\nP=sorted(P)\n \nif 1 in P:\n\tprint(0)\nelse:\n\tans=0\n\ttmp=0\n\tfor i in range(0,len(P)):\n\t\tif i==0:\n\t\t\ttmp=P[i] \n\t\telif P[i]==P[i-1]:\n\t\t\ttmp*=P[i]\n\t\telse:\n\t\t\ttmp=P[i]\n\t\tif n%tmp==0:\n\t\t\tn/=tmp\n\t\t\tans+=1\n\tprint(ans)```\n "
    },
    {
        "user_id": "u258009780",
        "problem_id": "p03992",
        "submission1_id": "s302469794",
        "code_content": "\nd = input()\nprint(d[0:4] + \" \" + d[4:])",
        "origin_generated_text": "\n```\nd = input()\nprint(d[0:4] + \" \" + d[4:])```\n "
    },
    {
        "user_id": "u231189826",
        "problem_id": "p02917",
        "submission1_id": "s928113223",
        "code_content": "\nn = int(input())\nB = list(map(int,(input().split())))\n\nlist_A = [0]*n\n\nlist_A[0] = B[0]\nlist_A[n-1] = B[n-2]\nfor i in range(1,n-1):\n    list_A[i] = max(B[i],B[i-1])\n\nprint(sum(list_A))\n\n\n",
        "origin_generated_text": "\n```\nn = int(input())\nB = list(map(int,(input().split())))\n\nlist_A = [0]*n\n\nlist_A[0] = B[0]\nlist_A[n-1] = B[n-2]\nfor i in range(1,n-1):\n    list_A[i] = max(B[i],B[i-1])\n\nprint(sum(list_A))\n\n\n```\n "
    },
    {
        "user_id": "u604607346",
        "problem_id": "p03479",
        "submission1_id": "s514585615",
        "code_content": "\nx, y = map(int, input().split())\n \nnum = 0\nwhile x <= y:\n    num += 1\n    x *= 2\n    \nprint(num)",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n \nnum = 0\nwhile x <= y:\n    num += 1\n    x *= 2\n    \nprint(num)```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03008",
        "submission1_id": "s021868372",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na1, a2, a3 = map(int, input().split())\nb1, b2, b3 = map(int, input().split())\ndef f(n, a, b):\n  dp = [0]*(n+1)\n  for i in range(n+1):\n    for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n      if i-a >= 0:\n        dp[i] = max(dp[i], dp[i-a]+b)\n  return max(dp)\nans = f(n, a1, a2, a3)\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na1, a2, a3 = map(int, input().split())\nb1, b2, b3 = map(int, input().split())\ndef f(n, a, b):\n  dp = [0]*(n+1)\n  for i in range(n+1):\n    for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n      if i-a >= 0:\n        dp[i] = max(dp[i], dp[i-a]+b)\n  return max(dp)\nans = f(n, a1, a2, a3)\nprint(ans)```\n "
    },
    {
        "user_id": "u244416620",
        "problem_id": "p02730",
        "submission1_id": "s203749346",
        "code_content": "\n\nS = input()\n\ndef is_kaibun(s):\n    l = len(s)\n    if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n        return True\n    else:\n        return False\n\nif is_kaibun(S):\n    if is_kaibun(S[:int((len(S)-1)/2)]):\n        if is_kaibun(S[int((len(S)+3)/2)-1:]):\n            print('Yes')\n            exit()\nprint('No')",
        "origin_generated_text": "\n```\n\nS = input()\n\ndef is_kaibun(s):\n    l = len(s)\n    if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n        return True\n    else:\n        return False\n\nif is_kaibun(S):\n    if is_kaibun(S[:int((len(S)-1)/2)]):\n        if is_kaibun(S[int((len(S)+3)/2)-1:]):\n            print('Yes')\n            exit()\nprint('No')```\n "
    },
    {
        "user_id": "u082945913",
        "problem_id": "p02660",
        "submission1_id": "s068309001",
        "code_content": "\nimport math\n\nn = int(input())\nN = n\n\nif(n == 1):\n    print(0)\n    exit()\n\nyakusu = []\nmulti = []\n\ni = 2\nwhile(i <= math.sqrt(n)):\n    \n    if(n % i == 0):\n        if(i in yakusu):\n            multi[yakusu.index(i)] += 1\n        else:\n            yakusu.append(i)\n            multi.append(1)\n        n = int(n / i)\n        continue\n    \n    if(n == 1):\n        break\n    \n    i += 1\n\nif(len(yakusu) == 0):\n    print(1)\n    exit()\n    \nans = 0\n\nfor j in range(len(multi)):\n    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n    ans += int(h)\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport math\n\nn = int(input())\nN = n\n\nif(n == 1):\n    print(0)\n    exit()\n\nyakusu = []\nmulti = []\n\ni = 2\nwhile(i <= math.sqrt(n)):\n    \n    if(n % i == 0):\n        if(i in yakusu):\n            multi[yakusu.index(i)] += 1\n        else:\n            yakusu.append(i)\n            multi.append(1)\n        n = int(n / i)\n        continue\n    \n    if(n == 1):\n        break\n    \n    i += 1\n\nif(len(yakusu) == 0):\n    print(1)\n    exit()\n    \nans = 0\n\nfor j in range(len(multi)):\n    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n    ans += int(h)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u819135704",
        "problem_id": "p03480",
        "submission1_id": "s756012439",
        "code_content": "\nS = input()\n\nn = len(S)\na = n\nfor i in range(n-1):\n    if S[i] != S[i+1]:\n        a = min(a, max(i+1, n-i))\n\nprint(a)\n",
        "origin_generated_text": "\n```\nS = input()\n\nn = len(S)\na = n\nfor i in range(n-1):\n    if S[i] != S[i+1]:\n        a = min(a, max(i+1, n-i))\n\nprint(a)\n```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03677",
        "submission1_id": "s871699666",
        "code_content": "\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nN,M = inpl()\naa = inpl()\nfor i in range(N):\n\taa[i] -= 1\n\nyama_height = [0]*(2*M)\nyama_num = [0]*(2*M)\nSUM = 0\nfor i in range(1,N):\n\tna = aa[i]\n\tba = aa[i-1]\n\tif na < ba:\n\t\tna += M\n\tSUM += (na-ba)\n\tyama_height[na] += na - (ba + 1)\n\tyama_num[na] -= 1\n\tyama_num[ba+1] += 1\n\ntmp = 0\nfor i in range(2*M):\n\ttmp += yama_num[i]\n\tyama_num[i] = tmp\n\nans_list = [0]*(M)\ntmp = 0\nfor i in reversed(range(2*M)):\n\ttmp += yama_height[i]\n\ttmp -= yama_num[i]\n\tans_list[i%M] += tmp\n\nprint(SUM-max(ans_list))\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nN,M = inpl()\naa = inpl()\nfor i in range(N):\n\taa[i] -= 1\n\nyama_height = [0]*(2*M)\nyama_num = [0]*(2*M)\nSUM = 0\nfor i in range(1,N):\n\tna = aa[i]\n\tba = aa[i-1]\n\tif na < ba:\n\t\tna += M\n\tSUM += (na-ba)\n\tyama_height[na] += na - (ba + 1)\n\tyama_num[na] -= 1\n\tyama_num[ba+1] += 1\n\ntmp = 0\nfor i in range(2*M):\n\ttmp += yama_num[i]\n\tyama_num[i] = tmp\n\nans_list = [0]*(M)\ntmp = 0\nfor i in reversed(range(2*M)):\n\ttmp += yama_height[i]\n\ttmp -= yama_num[i]\n\tans_list[i%M] += tmp\n\nprint(SUM-max(ans_list))\n```\n "
    },
    {
        "user_id": "u894694822",
        "problem_id": "p03563",
        "submission1_id": "s424770132",
        "code_content": "\nr=int(input())\ng=int(input())\nprint(g-r)",
        "origin_generated_text": "\n```\nr=int(input())\ng=int(input())\nprint(g-r)```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03546",
        "submission1_id": "s160448245",
        "code_content": "\ndef warshall_floyd(graph):\n    num_v = len(graph)\n    for k in range(num_v):\n        for i in range(num_v):\n            for j in range(num_v):\n                graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])\n    return graph\n\n\nh, w = map(int, input().split())\nroute = [[float(\"inf\") for _ in range(10 + 1)] for _ in range(10 + 1)]\n\nfor i in range(10):\n    S = list(map(int, input().split()))\n    for j in range(10):\n        route[i + 1][j + 1] = S[j]\ngraph = warshall_floyd(route)\nresult = 0\nfor i in range(h):\n    A = list(map(int, input().split()))\n    for a in A:\n        if a != -1:\n            result += graph[a][1]\nprint(result)\n\n",
        "origin_generated_text": "\n```\ndef warshall_floyd(graph):\n    num_v = len(graph)\n    for k in range(num_v):\n        for i in range(num_v):\n            for j in range(num_v):\n                graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j])\n    return graph\n\n\nh, w = map(int, input().split())\nroute = [[float(\"inf\") for _ in range(10 + 1)] for _ in range(10 + 1)]\n\nfor i in range(10):\n    S = list(map(int, input().split()))\n    for j in range(10):\n        route[i + 1][j + 1] = S[j]\ngraph = warshall_floyd(route)\nresult = 0\nfor i in range(h):\n    A = list(map(int, input().split()))\n    for a in A:\n        if a != -1:\n            result += graph[a][1]\nprint(result)\n\n```\n "
    },
    {
        "user_id": "u706414019",
        "problem_id": "p03475",
        "submission1_id": "s339408341",
        "code_content": "\nimport sys,math\ninput = sys.stdin.readline\n\nN = int(input())\nCSF = [[0,0,0]]\nfor i in range(1,N):\n    CSF.append(list(map(int,input().split())))\nfor i in range(1,N+1):\n    nowtime = 0\n    for j in range(i,N):\n        if nowtime <=CSF[j][1]:\n            depT =CSF[j][1]\n        else:\n            depT =CSF[j][1] + math.ceil((nowtime-CSF[j][1])/CSF[j][2])*CSF[j][2]\n\n        nowtime = depT+CSF[j][0]\n    print(nowtime)",
        "origin_generated_text": "\n```\nimport sys,math\ninput = sys.stdin.readline\n\nN = int(input())\nCSF = [[0,0,0]]\nfor i in range(1,N):\n    CSF.append(list(map(int,input().split())))\nfor i in range(1,N+1):\n    nowtime = 0\n    for j in range(i,N):\n        if nowtime <=CSF[j][1]:\n            depT =CSF[j][1]\n        else:\n            depT =CSF[j][1] + math.ceil((nowtime-CSF[j][1])/CSF[j][2])*CSF[j][2]\n\n        nowtime = depT+CSF[j][0]\n    print(nowtime)```\n "
    },
    {
        "user_id": "u169678167",
        "problem_id": "p03080",
        "submission1_id": "s614245282",
        "code_content": "\nA = int(input())\nB = list(input())\n\ncount_RED = 0\nfor i in range (0, A):\n    if B[i] == \"R\":\n        count_RED += 1\ncount_BLUE = A - count_RED\nif (count_RED > count_BLUE):\n    print('Yes')\nelse:\n    print('No')    ",
        "origin_generated_text": "\n```\nA = int(input())\nB = list(input())\n\ncount_RED = 0\nfor i in range (0, A):\n    if B[i] == \"R\":\n        count_RED += 1\ncount_BLUE = A - count_RED\nif (count_RED > count_BLUE):\n    print('Yes')\nelse:\n    print('No')    ```\n "
    },
    {
        "user_id": "u912867658",
        "problem_id": "p02699",
        "submission1_id": "s020923192",
        "code_content": "\ns,w = input().split()\nprint(\"safe\") if s <= w else print(\"unsafe\")",
        "origin_generated_text": "\n```\ns,w = input().split()\nprint(\"safe\") if s <= w else print(\"unsafe\")```\n "
    },
    {
        "user_id": "u252828980",
        "problem_id": "p02912",
        "submission1_id": "s143313976",
        "code_content": "\na,b = map(int,input().split())\nli = [-int(x) for x in input().split()]\nimport heapq\nheapq.heapify(li)\nfor i in range(b):\n    c = heapq.heappop(li)\n    heapq.heappush(li,c/2)\nprint(-int(sum(li))+a)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nli = [-int(x) for x in input().split()]\nimport heapq\nheapq.heapify(li)\nfor i in range(b):\n    c = heapq.heappop(li)\n    heapq.heappush(li,c/2)\nprint(-int(sum(li))+a)```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03992",
        "submission1_id": "s588862308",
        "code_content": "\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\ndef lcm(x, y):\n    return (x * y) \n\nif __name__ == '__main__':\n    a = [str(i) for i in input().split()]\n    print(a[0][:4]+\" \"+a[0][4:])\n",
        "origin_generated_text": "\n```\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\ndef lcm(x, y):\n    return (x * y) \n\nif __name__ == '__main__':\n    a = [str(i) for i in input().split()]\n    print(a[0][:4]+\" \"+a[0][4:])\n```\n "
    },
    {
        "user_id": "u121192152",
        "problem_id": "p02917",
        "submission1_id": "s546110108",
        "code_content": "\nN = int(input())\nB = list(map(int, input().split()))\n\nA = [max(B)] * N\n\nfor n in range(N-1, 0, -1):\n    if A[n-1] > B[n-1]:\n        A[n-1] = B[n-1]\n    if A[n-1] > A[n-2]:\n        A[n-2] = A[n-1]\nprint(sum(A))",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int, input().split()))\n\nA = [max(B)] * N\n\nfor n in range(N-1, 0, -1):\n    if A[n-1] > B[n-1]:\n        A[n-1] = B[n-1]\n    if A[n-1] > A[n-2]:\n        A[n-2] = A[n-1]\nprint(sum(A))```\n "
    },
    {
        "user_id": "u396971285",
        "problem_id": "p03103",
        "submission1_id": "s247556399",
        "code_content": "\nN,M=map(int,input().split())\n\n\nAB=[]\nfor i in range(N):\n  ab=list(map(int,input().split()))\n  AB.append(ab)\n\n\nlist.sort(AB,key=lambda x:x[0])\n\n\nm=0 \ncost=0 \nfor i in range(N):\n  \n  if M-m==AB[i][1]:\n      m+=AB[i][1]\n      cost+=AB[i][0]*AB[i][1]\n      break\n  elif M-m<AB[i][1] :\n       for j in range(AB[i][1]+1):\n          cost=cost+AB[i][0]*j\n          m=m+j\n          if m==M:\n              break\n          elif j<AB[i][1]:\n              cost=cost-AB[i][0]*j\n  else:\n       cost+=AB[i][0]*AB[i][1]\n       m+=AB[i][1]\n    \nprint(cost)",
        "origin_generated_text": "\n```\nN,M=map(int,input().split())\n\n\nAB=[]\nfor i in range(N):\n  ab=list(map(int,input().split()))\n  AB.append(ab)\n\n\nlist.sort(AB,key=lambda x:x[0])\n\n\nm=0 \ncost=0 \nfor i in range(N):\n  \n  if M-m==AB[i][1]:\n      m+=AB[i][1]\n      cost+=AB[i][0]*AB[i][1]\n      break\n  elif M-m<AB[i][1] :\n       for j in range(AB[i][1]+1):\n          cost=cost+AB[i][0]*j\n          m=m+j\n          if m==M:\n              break\n          elif j<AB[i][1]:\n              cost=cost-AB[i][0]*j\n  else:\n       cost+=AB[i][0]*AB[i][1]\n       m+=AB[i][1]\n    \nprint(cost)```\n "
    },
    {
        "user_id": "u557437077",
        "problem_id": "p03633",
        "submission1_id": "s719207795",
        "code_content": "\n```\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return (a * b) \n\n\nn = int(input())\nt = [0 for i in range(n)]\nfor i in range(n):\n    t[i] = int(input())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return (a * b) \n\n\nn = int(input())\nt = [0 for i in range(n)]\nfor i in range(n):\n    t[i] = int(input())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u384679440",
        "problem_id": "p03296",
        "submission1_id": "s351944973",
        "code_content": "\nN = int(input())\na = list(map(int, input().split()))\nans = 0\ncount = 1\nfor i in range(1, len(a)):\n\tif a[i] == a[i-1]:\n\t\tcount += 1\n\t\tif i == len(a) - 1 and count > 2:\n\t\t\tans += int(count / 2)\n\t\telif i == len(a) - 1 and count == 2:\n\t\t\tans += 1\n\telif a[i] != a[i-1] and count == 2:\n\t\tans += 1\n\t\tcount = 1\n\telif a[i] != a[i-1] and count > 2:\n\t\tans += int(count / 2)\n\t\tcount = 1\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\na = list(map(int, input().split()))\nans = 0\ncount = 1\nfor i in range(1, len(a)):\n\tif a[i] == a[i-1]:\n\t\tcount += 1\n\t\tif i == len(a) - 1 and count > 2:\n\t\t\tans += int(count / 2)\n\t\telif i == len(a) - 1 and count == 2:\n\t\t\tans += 1\n\telif a[i] != a[i-1] and count == 2:\n\t\tans += 1\n\t\tcount = 1\n\telif a[i] != a[i-1] and count > 2:\n\t\tans += int(count / 2)\n\t\tcount = 1\nprint(ans)```\n "
    },
    {
        "user_id": "u090068671",
        "problem_id": "p02660",
        "submission1_id": "s414326355",
        "code_content": "\ndef resolve():\n\tN = int(input())\n\tif N==1:\n\t\tprint(0)\n\telse:\n\t\t\n\t\tlst_p = []\n\t\tfor p in range(2, int(math.sqrt(N))+1):\n\t\t\te = 0\n\t\t\twhile (N % p == 0):\n\t\t\t\tN /= p\n\t\t\t\te += 1\n\t\t\tif e>0:\n\t\t\t\tlst_p.append((p,e))\n\t\t\n\t\tanswer = 0\n\t\tfor p,e in lst_p:\n\t\t\ti = 1\n\t\t\twhile e >= i:\n\t\t\t\te -= i\n\t\t\t\ti += 1\n\t\t\t\tanswer += 1\n\t\tprint(answer)\n        \nresolve()",
        "origin_generated_text": "\n```\ndef resolve():\n\tN = int(input())\n\tif N==1:\n\t\tprint(0)\n\telse:\n\t\t\n\t\tlst_p = []\n\t\tfor p in range(2, int(math.sqrt(N))+1):\n\t\t\te = 0\n\t\t\twhile (N % p == 0):\n\t\t\t\tN /= p\n\t\t\t\te += 1\n\t\t\tif e>0:\n\t\t\t\tlst_p.append((p,e))\n\t\t\n\t\tanswer = 0\n\t\tfor p,e in lst_p:\n\t\t\ti = 1\n\t\t\twhile e >= i:\n\t\t\t\te -= i\n\t\t\t\ti += 1\n\t\t\t\tanswer += 1\n\t\tprint(answer)\n        \nresolve()```\n "
    },
    {
        "user_id": "u580697892",
        "problem_id": "p02742",
        "submission1_id": "s409238600",
        "code_content": "\n\nfrom math import ceil\nH, W = map(int, input().split())\nif H == 1 or W == 1:\n    print(1)\nelse:\n    print(ceil(W / 2) * ceil(H / 2))",
        "origin_generated_text": "\n```\n\nfrom math import ceil\nH, W = map(int, input().split())\nif H == 1 or W == 1:\n    print(1)\nelse:\n    print(ceil(W / 2) * ceil(H / 2))```\n "
    },
    {
        "user_id": "u358254559",
        "problem_id": "p02912",
        "submission1_id": "s834457628",
        "code_content": "\n```\nN, M = map(int, input().split())\n\nA_list = list(map(int, input().split()))\n\na = list(map(lambda x: x*(-1), A_list))\n\nimport heapq\nimport math\n\n\nheapq.heapify(a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\n\nA_list = list(map(int, input().split()))\n\na = list(map(lambda x: x*(-1), A_list))\n\nimport heapq\nimport math\n\n\nheapq.heapify(a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u534527715",
        "problem_id": "p03303",
        "submission1_id": "s573706590",
        "code_content": "\n\nimport sys\nS = input()\nw = int(input())\nx = 0\n\nS_list = list(S)\n\nwhile True:\n    if x + w > len(S_list):\n        break\n    sys.stdout.write(S_list[x])\n    x = x + w\n    if x > len(S_list):\n        break",
        "origin_generated_text": "\n```\n\nimport sys\nS = input()\nw = int(input())\nx = 0\n\nS_list = list(S)\n\nwhile True:\n    if x + w > len(S_list):\n        break\n    sys.stdout.write(S_list[x])\n    x = x + w\n    if x > len(S_list):\n        break```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s857212848",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nta = a + []\nres = pow(10, 10)\nfor x in sorted(a, reverse=True):\n  \n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j in range(N):\n          ta[j] = pow(10, 10)\n  t = sorted(ta)\n  if t[Q - 1] == pow(10, 10): break\n  res = min(res, t[Q - 1] - t[0])\nprint(res)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nta = a + []\nres = pow(10, 10)\nfor x in sorted(a, reverse=True):\n  \n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j in range(N):\n          ta[j] = pow(10, 10)\n  t = sorted(ta)\n  if t[Q - 1] == pow(10, 10): break\n  res = min(res, t[Q - 1] - t[0])\nprint(res)```\n "
    },
    {
        "user_id": "u536377809",
        "problem_id": "p03326",
        "submission1_id": "s911472974",
        "code_content": "\n[N,M]=list(map(int,input().split()\n              )\n          )\nXYZ=[[int(i) for i in input().split()] for i in range(N)] \nmaxabs=0\n\nfor i in range(8):\n  pm=list(map(int,format(i, 'b')))\n  pm=[0,]*(3-len(pm))+pm\n  newXYZ=sorted([[item[0]*(-1)**pm[0],item[1]*(-1)**pm[1],item[2]*(-1)**pm[2]] for item in XYZ],\n               key=lambda x:x[0]*(-1)**pm[0]+x[1]*(-1)**pm[1]+x[2]*(-1)**pm[2])\n  \n  maxabs=max(sum([abs(sum([newXYZ[m][j] for m in range(M)]\n                             )\n                         ) for j in range(3)\n                 ]\n                ),\n             maxabs\n            )\n\n\nprint(maxabs)",
        "origin_generated_text": "\n```\n[N,M]=list(map(int,input().split()\n              )\n          )\nXYZ=[[int(i) for i in input().split()] for i in range(N)] \nmaxabs=0\n\nfor i in range(8):\n  pm=list(map(int,format(i, 'b')))\n  pm=[0,]*(3-len(pm))+pm\n  newXYZ=sorted([[item[0]*(-1)**pm[0],item[1]*(-1)**pm[1],item[2]*(-1)**pm[2]] for item in XYZ],\n               key=lambda x:x[0]*(-1)**pm[0]+x[1]*(-1)**pm[1]+x[2]*(-1)**pm[2])\n  \n  maxabs=max(sum([abs(sum([newXYZ[m][j] for m in range(M)]\n                             )\n                         ) for j in range(3)\n                 ]\n                ),\n             maxabs\n            )\n\n\nprint(maxabs)```\n "
    },
    {
        "user_id": "u085186789",
        "problem_id": "p03303",
        "submission1_id": "s180917234",
        "code_content": "\nS = input()\nw = int(input())\nfor i in range(len(S)):\n  if w != 1 and (i + 1) % w == 1 :\n    print(S[i], end = \"\")\n  elif w == 1:\n    print(S[i], end = \"\")",
        "origin_generated_text": "\n```\nS = input()\nw = int(input())\nfor i in range(len(S)):\n  if w != 1 and (i + 1) % w == 1 :\n    print(S[i], end = \"\")\n  elif w == 1:\n    print(S[i], end = \"\")```\n "
    },
    {
        "user_id": "u293198424",
        "problem_id": "p03103",
        "submission1_id": "s553275677",
        "code_content": "\nn,m = map(int,input().split())\ndrink = dict()\ncost = []\nans = 0\nfor i in range(n):\n    ab = [int(i) for i in input().split()]\n    cost.append(ab[0])\n    if ab[0] in drink:\n        drink[ab[0]] += ab[1]\n    else:\n        drink[ab[0]] = ab[1]\n\ncost.sort()\nfor i in cost:\n    if m <= drink[i]:\n        ans += m*i\n        break\n    else:\n        m -= drink[i]\n        ans += i * drink[i] \n    \nprint(ans)",
        "origin_generated_text": "\n```\nn,m = map(int,input().split())\ndrink = dict()\ncost = []\nans = 0\nfor i in range(n):\n    ab = [int(i) for i in input().split()]\n    cost.append(ab[0])\n    if ab[0] in drink:\n        drink[ab[0]] += ab[1]\n    else:\n        drink[ab[0]] = ab[1]\n\ncost.sort()\nfor i in cost:\n    if m <= drink[i]:\n        ans += m*i\n        break\n    else:\n        m -= drink[i]\n        ans += i * drink[i] \n    \nprint(ans)```\n "
    },
    {
        "user_id": "u831971779",
        "problem_id": "p02407",
        "submission1_id": "s266078536",
        "code_content": "\nn = int(input())\nprint(\" \".join(input().split())[::-1][:-1])",
        "origin_generated_text": "\n```\nn = int(input())\nprint(\" \".join(input().split())[::-1][:-1])```\n "
    },
    {
        "user_id": "u550943777",
        "problem_id": "p02665",
        "submission1_id": "s389169550",
        "code_content": "\nn = int(input())\narr = list(map(int,input().split()))\nans = [0]*(n+1)\nans[0] = 1\nc_sum = [0]*(n+1)\nc_sum[0] = arr[0]\nfor i in range(1,n+1):\n    c_sum[i] = c_sum[i-1] + arr[i]\nroot = [0]*(n+1)\nroot[0] = arr[0] - 1\nfor d in range(n+1):\n    if d==0:\n        ans[d] = min(1-arr[0],c_sum[-1]-arr[0])\n    else:\n        ans[d] = min(root[d-1]*2,(c_sum[-1] - c_sum[d-1]))\n    if ans[d] < 0:\n        print(-1)\n        exit()\n    root[d] = ans[d]\nprint(sum(ans))\n\n\n",
        "origin_generated_text": "\n```\nn = int(input())\narr = list(map(int,input().split()))\nans = [0]*(n+1)\nans[0] = 1\nc_sum = [0]*(n+1)\nc_sum[0] = arr[0]\nfor i in range(1,n+1):\n    c_sum[i] = c_sum[i-1] + arr[i]\nroot = [0]*(n+1)\nroot[0] = arr[0] - 1\nfor d in range(n+1):\n    if d==0:\n        ans[d] = min(1-arr[0],c_sum[-1]-arr[0])\n    else:\n        ans[d] = min(root[d-1]*2,(c_sum[-1] - c_sum[d-1]))\n    if ans[d] < 0:\n        print(-1)\n        exit()\n    root[d] = ans[d]\nprint(sum(ans))\n\n\n```\n "
    },
    {
        "user_id": "u550943777",
        "problem_id": "p03625",
        "submission1_id": "s231338952",
        "code_content": "\nN = int(input())\narr = sorted(list(map(int,input().split())))\nb = {}\nfor i in arr:\n    if i not in b:\n        b[i] = 1\n    else:\n        b[i] += 1\nh = 0\nw = 0\nfor i in arr:\n    if b[i] >= 2:\n        if w*i > h*i:\n            h = i\n        else:\n            w = i\n    elif b[i] >= 4:\n        h = i\n        w = i\nprint(h*w)\n",
        "origin_generated_text": "\n```\nN = int(input())\narr = sorted(list(map(int,input().split())))\nb = {}\nfor i in arr:\n    if i not in b:\n        b[i] = 1\n    else:\n        b[i] += 1\nh = 0\nw = 0\nfor i in arr:\n    if b[i] >= 2:\n        if w*i > h*i:\n            h = i\n        else:\n            w = i\n    elif b[i] >= 4:\n        h = i\n        w = i\nprint(h*w)\n```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p03274",
        "submission1_id": "s489411593",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N, K = map(int, input().split())\n    X = [int(c) for c in input().split()]\n\n    def fullsearch():\n        for i in range(N-K+1):\n            l = X[i]\n            r = X[i+K-1]\n            distance = abs(r - l)\n            yield distance\n\n    print(min(fullsearch()))\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N, K = map(int, input().split())\n    X = [int(c) for c in input().split()]\n\n    def fullsearch():\n        for i in range(N-K+1):\n            l = X[i]\n            r = X[i+K-1]\n            distance = abs(r - l)\n            yield distance\n\n    print(min(fullsearch()))\n\nmain()```\n "
    },
    {
        "user_id": "u382176416",
        "problem_id": "p03272",
        "submission1_id": "s352130105",
        "code_content": "\nn,i=map(int,input().split())\nprint(n-i)",
        "origin_generated_text": "\n```\nn,i=map(int,input().split())\nprint(n-i)```\n "
    },
    {
        "user_id": "u533883485",
        "problem_id": "p02287",
        "submission1_id": "s110485424",
        "code_content": "\n\nimport math\n\nclass Tree():\n    def __init__(self, key):\n        self.root = key\n\nclass Node():\n    def __init__(self, id, key):\n        self.id = id\n        self.key = key\n        self.parent = None\n        self.left = None\n        self.right = None\n\n    def set_status(self, id, key):\n        global node_list\n        parent_id = math.floor(id/2)\n        odd = id % 2\n        self.parent = node_list[parent_id]\n        if odd == 0:\n            self.parent.left = self\n        else:\n            self.parent.right = self\n\ndef print_nodes():\n    global node_list\n    node_list.pop(0)\n    for node in node_list:\n        print(\"node {}: key = {}\".format(node.id, node.key), end = \"\")\n        if node.parent:\n            print(\", parent key = {}\".format(node.parent.key), end = \"\")\n        if node.left:\n            print(\", left key = {}\".format(node.left.key), end = \"\")\n        if node.right:\n            print(\", right key = {}\".format(node.right.key), end = \"\")\n        print(\"\", end = \"\")\n\nn = int(input())\ninput_num = list(map(int, input().split()))\nnode_list = [None]\n\nfor i, num in enumerate(input_num):\n    i = i + 1 \n    node = Node(i, num)\n    node_list.append(node)\n\n    if i == 1:\n        tree = Tree(num)\n    else:\n        node.set_status(i, num)\n\nprint_nodes()",
        "origin_generated_text": "\n```\n\nimport math\n\nclass Tree():\n    def __init__(self, key):\n        self.root = key\n\nclass Node():\n    def __init__(self, id, key):\n        self.id = id\n        self.key = key\n        self.parent = None\n        self.left = None\n        self.right = None\n\n    def set_status(self, id, key):\n        global node_list\n        parent_id = math.floor(id/2)\n        odd = id % 2\n        self.parent = node_list[parent_id]\n        if odd == 0:\n            self.parent.left = self\n        else:\n            self.parent.right = self\n\ndef print_nodes():\n    global node_list\n    node_list.pop(0)\n    for node in node_list:\n        print(\"node {}: key = {}\".format(node.id, node.key), end = \"\")\n        if node.parent:\n            print(\", parent key = {}\".format(node.parent.key), end = \"\")\n        if node.left:\n            print(\", left key = {}\".format(node.left.key), end = \"\")\n        if node.right:\n            print(\", right key = {}\".format(node.right.key), end = \"\")\n        print(\"\", end = \"\")\n\nn = int(input())\ninput_num = list(map(int, input().split()))\nnode_list = [None]\n\nfor i, num in enumerate(input_num):\n    i = i + 1 \n    node = Node(i, num)\n    node_list.append(node)\n\n    if i == 1:\n        tree = Tree(num)\n    else:\n        node.set_status(i, num)\n\nprint_nodes()```\n "
    },
    {
        "user_id": "u884982181",
        "problem_id": "p03714",
        "submission1_id": "s288824648",
        "code_content": "\nimport heapq\nn = int(input())\na = list(map(int,input().split()))\naka = a[:n]\nheapq.heapify(aka)\nakasum = [0] * (n+1)\nakasum[0] = sum(aka)\nao = a[2*n:]\nheapq.heapify(ao)\naosum = [0] * (n+1)\naosum[-1] = sum(ao)\nfor i in range(n,2*n):\n  b = heapq.heappop(aka)\n  if b >= a[i]:\n    heapq.heappush(aka, b)\n  else:\n    heapq.heappush(aka, a[i])\n  akasum[i-n+1] = sum(aka)\n  b = heapq.heappop(ao)\n  if b >= a[-i-1]:\n    heapq.heappush(ao, b)\n  else:\n    heapq.heappush(ao, a[-i-1])\n  aosum[i-n] = sum(ao)\nans = - float(\"inf\")\nfor i in range(n+1):\n  kota = akasum[i] - aosum[i]\n  ans = max(kota,ans)\nprint(ans)",
        "origin_generated_text": "\n```\nimport heapq\nn = int(input())\na = list(map(int,input().split()))\naka = a[:n]\nheapq.heapify(aka)\nakasum = [0] * (n+1)\nakasum[0] = sum(aka)\nao = a[2*n:]\nheapq.heapify(ao)\naosum = [0] * (n+1)\naosum[-1] = sum(ao)\nfor i in range(n,2*n):\n  b = heapq.heappop(aka)\n  if b >= a[i]:\n    heapq.heappush(aka, b)\n  else:\n    heapq.heappush(aka, a[i])\n  akasum[i-n+1] = sum(aka)\n  b = heapq.heappop(ao)\n  if b >= a[-i-1]:\n    heapq.heappush(ao, b)\n  else:\n    heapq.heappush(ao, a[-i-1])\n  aosum[i-n] = sum(ao)\nans = - float(\"inf\")\nfor i in range(n+1):\n  kota = akasum[i] - aosum[i]\n  ans = max(kota,ans)\nprint(ans)```\n "
    },
    {
        "user_id": "u224554402",
        "problem_id": "p02730",
        "submission1_id": "s906415153",
        "code_content": "\nimport math\na= input()\nlength=math.floor(len(a)/2)\ndef kaibun(p):\n    length_p=math.floor(len(p)/2)\n    total_p = 0\n    for i in range(length_p):\n        if p[i] is not p[-1*i -1]:\n            return False\n            break\n        else:\n            total_p += 1\n        if total_p == length_p:\n            return True\nif kaibun(a):\n    if kaibun(a[:length]):\n        print('Yes')\n    elif length==1:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\nimport math\na= input()\nlength=math.floor(len(a)/2)\ndef kaibun(p):\n    length_p=math.floor(len(p)/2)\n    total_p = 0\n    for i in range(length_p):\n        if p[i] is not p[-1*i -1]:\n            return False\n            break\n        else:\n            total_p += 1\n        if total_p == length_p:\n            return True\nif kaibun(a):\n    if kaibun(a[:length]):\n        print('Yes')\n    elif length==1:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u950708010",
        "problem_id": "p03475",
        "submission1_id": "s038695080",
        "code_content": "\nn = int(input())\nstack = [0]*n\nqueue = [0]*n\nfor i in range(n):\n  c,s,f = (int(i) for i in input().split())\n  queue[i] = (c,s,f)\nfor i in range(n):\n  ans = 0\n  for j in range(n-i):\n    c,s,f = queue[i+j]\n    if s >= ans:\n      ans = s+c\n    else:\n      if ans%f == 0:\n        ans +=c\n      elif ans%f != 0:\n        ans += ans%f+c\n  if n-i-1 == 0:\n    ans = 0\n  print(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\nstack = [0]*n\nqueue = [0]*n\nfor i in range(n):\n  c,s,f = (int(i) for i in input().split())\n  queue[i] = (c,s,f)\nfor i in range(n):\n  ans = 0\n  for j in range(n-i):\n    c,s,f = queue[i+j]\n    if s >= ans:\n      ans = s+c\n    else:\n      if ans%f == 0:\n        ans +=c\n      elif ans%f != 0:\n        ans += ans%f+c\n  if n-i-1 == 0:\n    ans = 0\n  print(ans)\n```\n "
    },
    {
        "user_id": "u698756732",
        "problem_id": "p02640",
        "submission1_id": "s549872887",
        "code_content": "\nx,y = list(map(int, input(\"\").split()))\n\nif 4 * x < y:\n    print(\"No\")\nelse:\n    if y % 2 == 0 and y \n        print(\"Yes\")\n    else:\n        print(\"No\")",
        "origin_generated_text": "\n```\nx,y = list(map(int, input(\"\").split()))\n\nif 4 * x < y:\n    print(\"No\")\nelse:\n    if y % 2 == 0 and y \n        print(\"Yes\")\n    else:\n        print(\"No\")```\n "
    },
    {
        "user_id": "u979126665",
        "problem_id": "p02922",
        "submission1_id": "s209182264",
        "code_content": "\na,b = map(int,input().split(\" \"))\nk = 0\nwhile (a * k) < b:\n    k +=1\nprint(k)",
        "origin_generated_text": "\n```\na,b = map(int,input().split(\" \"))\nk = 0\nwhile (a * k) < b:\n    k +=1\nprint(k)```\n "
    },
    {
        "user_id": "u565812827",
        "problem_id": "p00375",
        "submission1_id": "s963872729",
        "code_content": "\na=int(input())\nprint(int((a-30)/2))\n",
        "origin_generated_text": "\n```\na=int(input())\nprint(int((a-30)/2))\n```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p04019",
        "submission1_id": "s671837659",
        "code_content": "\ns = list(input())\nif 'S' in s and 'N' in s or not ('S' in s or 'N' in s) and 'E' in s and 'W' in s or not ('E' in s or 'W' in s):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ns = list(input())\nif 'S' in s and 'N' in s or not ('S' in s or 'N' in s) and 'E' in s and 'W' in s or not ('E' in s or 'W' in s):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03677",
        "submission1_id": "s836041544",
        "code_content": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nimos = [0] * (2 * m)\ndiff = [0] * (2 * m)\nres = 0\nfor i in range(n - 1):\n    l = a[i] - 1\n    r = a[i + 1] - 1\n    if l > r:\n        r += m\n    imos[l + 2] += 1\n    imos[r + 1] -= 1\n    diff[r + 1] = r - l\n    res += r - l\n\nans = [0] * (2 * m)\ntmp = 0\nfor i in range(2 * m):\n    tmp += imos[i]\n    if i - 1 >= 0:\n        ans[i] += ans[i - 1] + tmp\n    else:\n        ans[i] += tmp\n    ans[i] -= diff[i]\n    \nmax_ = 0\nfor i in range(m):\n    max_ = max(max_, ans[i] + ans[i + m])\nprint(res - max_)",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nimos = [0] * (2 * m)\ndiff = [0] * (2 * m)\nres = 0\nfor i in range(n - 1):\n    l = a[i] - 1\n    r = a[i + 1] - 1\n    if l > r:\n        r += m\n    imos[l + 2] += 1\n    imos[r + 1] -= 1\n    diff[r + 1] = r - l\n    res += r - l\n\nans = [0] * (2 * m)\ntmp = 0\nfor i in range(2 * m):\n    tmp += imos[i]\n    if i - 1 >= 0:\n        ans[i] += ans[i - 1] + tmp\n    else:\n        ans[i] += tmp\n    ans[i] -= diff[i]\n    \nmax_ = 0\nfor i in range(m):\n    max_ = max(max_, ans[i] + ans[i + m])\nprint(res - max_)```\n "
    },
    {
        "user_id": "u511379665",
        "problem_id": "p02912",
        "submission1_id": "s890154115",
        "code_content": "\nN,M=map(int,input().split())\nA=list(map(int,input().split()))\n\nans=0\ndef cheap(x,y):\n    x=int(x/(2**y))\n    return x\n\ni=0\nwhile(i<M):\n    A.sort()\n    A[0]=cheap(A[0],i+1)\n    i+=1\n\nfor i in range(0,N):\n    ans+=A[i]\n\nprint(ans)\n\n",
        "origin_generated_text": "\n```\nN,M=map(int,input().split())\nA=list(map(int,input().split()))\n\nans=0\ndef cheap(x,y):\n    x=int(x/(2**y))\n    return x\n\ni=0\nwhile(i<M):\n    A.sort()\n    A[0]=cheap(A[0],i+1)\n    i+=1\n\nfor i in range(0,N):\n    ans+=A[i]\n\nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u798894056",
        "problem_id": "p03041",
        "submission1_id": "s343295932",
        "code_content": "\nN, K = list(map(int, input().split()))\ns = input()\nprint(s[:K - 1] + s[K - 1].lower() + s[K:])",
        "origin_generated_text": "\n```\nN, K = list(map(int, input().split()))\ns = input()\nprint(s[:K - 1] + s[K - 1].lower() + s[K:])```\n "
    },
    {
        "user_id": "u516554284",
        "problem_id": "p02959",
        "submission1_id": "s012495194",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n  if a[i]>b[i]:\n    c+=b[i]\n  elif a[i]<=b[i]:\n   \n    if a[i+1]-(b[i]-a[i])>=0:\n      c+=b[i]\n      a[i+1]=a[i+1]-(b[i]-a[i])\n    else:\n      c+=a[i+1]\nprint(c)\n\n",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n  if a[i]>b[i]:\n    c+=b[i]\n  elif a[i]<=b[i]:\n   \n    if a[i+1]-(b[i]-a[i])>=0:\n      c+=b[i]\n      a[i+1]=a[i+1]-(b[i]-a[i])\n    else:\n      c+=a[i+1]\nprint(c)\n\n```\n "
    },
    {
        "user_id": "u255673886",
        "problem_id": "p02767",
        "submission1_id": "s574132154",
        "code_content": "\nn = int(input())\nx = list(map(int,input().split()))\nm = 10**100\nfor p in range(x[0],x[n-1]+1):\n    power = 0\n    for i in range(n):\n        power += (x[i]-p)**2\n    m = min(m,power)\nprint(m)",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int,input().split()))\nm = 10**100\nfor p in range(x[0],x[n-1]+1):\n    power = 0\n    for i in range(n):\n        power += (x[i]-p)**2\n    m = min(m,power)\nprint(m)```\n "
    },
    {
        "user_id": "u511449169",
        "problem_id": "p03036",
        "submission1_id": "s626400931",
        "code_content": "\nr, d, x = map(int, input().split())\nfor i in range(10):\n  x = r*x-d\n  print(x)",
        "origin_generated_text": "\n```\nr, d, x = map(int, input().split())\nfor i in range(10):\n  x = r*x-d\n  print(x)```\n "
    },
    {
        "user_id": "u533713111",
        "problem_id": "p02886",
        "submission1_id": "s812498382",
        "code_content": "\nN=int(input())\nd=list(map(int, input().split()))\na=(sum(d))**2\n\ndef square(list):\n    return [i ** 2 for i in list]\n\nb=sum(square(d))\nresult=(a-b)/2\nprint(int(result))",
        "origin_generated_text": "\n```\nN=int(input())\nd=list(map(int, input().split()))\na=(sum(d))**2\n\ndef square(list):\n    return [i ** 2 for i in list]\n\nb=sum(square(d))\nresult=(a-b)/2\nprint(int(result))```\n "
    },
    {
        "user_id": "u857408368",
        "problem_id": "p02887",
        "submission1_id": "s399056367",
        "code_content": "\nN = int(input())\nS = str(input())\n\nans = [S[0]]\n\nfor i in range(N):\n    if(ans[-1] != S[i]):\n        ans.append(S[i])\n\nprint(len(ans))\n",
        "origin_generated_text": "\n```\nN = int(input())\nS = str(input())\n\nans = [S[0]]\n\nfor i in range(N):\n    if(ans[-1] != S[i]):\n        ans.append(S[i])\n\nprint(len(ans))\n```\n "
    },
    {
        "user_id": "u387080888",
        "problem_id": "p03102",
        "submission1_id": "s680264575",
        "code_content": "\na=tuple(map(int,input().split()))\nb=[]\nfor i in range(a[0]+1):\n    b.append(list(map(int,input().split())))\nans=0\ns=0\nfor j in range(a[0]+1):\n    for k in range(a[1]):\n        s+=b[j][k]*b[0][k]\n    s+=a[2]\n    if s>0:\n        ans+=1\n    s=0\nprint(ans)",
        "origin_generated_text": "\n```\na=tuple(map(int,input().split()))\nb=[]\nfor i in range(a[0]+1):\n    b.append(list(map(int,input().split())))\nans=0\ns=0\nfor j in range(a[0]+1):\n    for k in range(a[1]):\n        s+=b[j][k]*b[0][k]\n    s+=a[2]\n    if s>0:\n        ans+=1\n    s=0\nprint(ans)```\n "
    },
    {
        "user_id": "u515052479",
        "problem_id": "p03087",
        "submission1_id": "s255059009",
        "code_content": "\nn,q = map(int,input().split())\ns = list(input())\nbase = [0]*n\ncount = 0\n\nfor i in range(n):\n  if (s[i] == \"A\") and (s[i+1] == \"C\") or (s[i] == \"C\") and (s[i+1] == \"A\"):\n    count = count + 1\n    base[i] = count\n  else:\n    base[i] = count\n\nfor i in range(q):\n  l,r = map(int,input().split())\n  ans = base[r-1] - base[l-1]\n  \n  if s[l-1] == \"A\" and s[r-1] == \"C\":\n    ans = ans - 1\n  elif s[l-1] == \"C\" and s[r-1] == \"A\":\n    ans = ans + 1\n  else:\n    ans = ans\n    \n  print(ans)",
        "origin_generated_text": "\n```\nn,q = map(int,input().split())\ns = list(input())\nbase = [0]*n\ncount = 0\n\nfor i in range(n):\n  if (s[i] == \"A\") and (s[i+1] == \"C\") or (s[i] == \"C\") and (s[i+1] == \"A\"):\n    count = count + 1\n    base[i] = count\n  else:\n    base[i] = count\n\nfor i in range(q):\n  l,r = map(int,input().split())\n  ans = base[r-1] - base[l-1]\n  \n  if s[l-1] == \"A\" and s[r-1] == \"C\":\n    ans = ans - 1\n  elif s[l-1] == \"C\" and s[r-1] == \"A\":\n    ans = ans + 1\n  else:\n    ans = ans\n    \n  print(ans)```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03972",
        "submission1_id": "s818195498",
        "code_content": "\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    w, h = LI()\n    a = FR(w + h)\n    a.sort()\n    ans = 0\n    for i in range(1, w + h, 2):\n        ans += a[i]\n    print(ans)\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    w, h = LI()\n    a = FR(w + h)\n    a.sort()\n    ans = 0\n    for i in range(1, w + h, 2):\n        ans += a[i]\n    print(ans)\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n```\n "
    },
    {
        "user_id": "u726212005",
        "problem_id": "p03041",
        "submission1_id": "s536678123",
        "code_content": "\nn,k=map(int,input().split())\n\ns=input()\n\nprint(s[0:k-1],end='')\nprint(s[k-1].lower(),end='')\nprint(s[k:],end='')",
        "origin_generated_text": "\n```\nn,k=map(int,input().split())\n\ns=input()\n\nprint(s[0:k-1],end='')\nprint(s[k-1].lower(),end='')\nprint(s[k:],end='')```\n "
    },
    {
        "user_id": "u375695365",
        "problem_id": "p03036",
        "submission1_id": "s171725482",
        "code_content": "\nn,d,x=map(int,input().split())\nfor i in range(10):\n    x= n*x-d\n    print(x)",
        "origin_generated_text": "\n```\nn,d,x=map(int,input().split())\nfor i in range(10):\n    x= n*x-d\n    print(x)```\n "
    },
    {
        "user_id": "u266874640",
        "problem_id": "p03272",
        "submission1_id": "s681015940",
        "code_content": "\nN,i = map(int, input().split())\nprint(N - i + 1)\n",
        "origin_generated_text": "\n```\nN,i = map(int, input().split())\nprint(N - i + 1)\n```\n "
    },
    {
        "user_id": "u086503932",
        "problem_id": "p03573",
        "submission1_id": "s736241070",
        "code_content": "\nA,B,C=map(int,input().split())\nprint(A)if A==B and A==C else print(B) if A==C else print(C) ",
        "origin_generated_text": "\n```\nA,B,C=map(int,input().split())\nprint(A)if A==B and A==C else print(B) if A==C else print(C) ```\n "
    },
    {
        "user_id": "u470735879",
        "problem_id": "p03573",
        "submission1_id": "s121843444",
        "code_content": "\na, b, c = map(int, input().split())\n \nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)",
        "origin_generated_text": "\n```\na, b, c = map(int, input().split())\n \nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)```\n "
    },
    {
        "user_id": "u926393759",
        "problem_id": "p03054",
        "submission1_id": "s192399667",
        "code_content": "\nh, w, n = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()[::-1]\nT = input()[::-1]\n\nr_bound = w\nl_bound = 1\nd_bound = h\nu_bound = 1\n\nremain = True\n\nfor s, t in zip(S, T):\n    if s =='R' and t !='L':\n        r_bound -= 1\n    if s =='L' and t !='R':\n        l_bound += 1\n    if s =='D' and t !='U':\n        d_bound -= 1\n    if s =='U' and t !='D':\n        u_bound += 1\n    if (r_bound < l_bound) or (d_bound < u_bound):\n        remain = False\n        break\nif (sc < l_bound or sc > r_bound) or (sr < u_bound or sr > d_bound):\n    remain = False\n\nif remain:\n    print('YES')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\nh, w, n = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()[::-1]\nT = input()[::-1]\n\nr_bound = w\nl_bound = 1\nd_bound = h\nu_bound = 1\n\nremain = True\n\nfor s, t in zip(S, T):\n    if s =='R' and t !='L':\n        r_bound -= 1\n    if s =='L' and t !='R':\n        l_bound += 1\n    if s =='D' and t !='U':\n        d_bound -= 1\n    if s =='U' and t !='D':\n        u_bound += 1\n    if (r_bound < l_bound) or (d_bound < u_bound):\n        remain = False\n        break\nif (sc < l_bound or sc > r_bound) or (sr < u_bound or sr > d_bound):\n    remain = False\n\nif remain:\n    print('YES')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u703528810",
        "problem_id": "p03274",
        "submission1_id": "s669279195",
        "code_content": "\nN,K=map(int,input().split())\nx=list(map(int,input().split()))\n\nans=x[K-1]-x[0]\n\nfor i in range(N-K+1):\n    ans=min(ans,x[i+K-1]-x[i]+min(abs(x[i]),abs(x[i+K-1])))\n\nprint(ans)",
        "origin_generated_text": "\n```\nN,K=map(int,input().split())\nx=list(map(int,input().split()))\n\nans=x[K-1]-x[0]\n\nfor i in range(N-K+1):\n    ans=min(ans,x[i+K-1]-x[i]+min(abs(x[i]),abs(x[i+K-1])))\n\nprint(ans)```\n "
    },
    {
        "user_id": "u742505495",
        "problem_id": "p00006",
        "submission1_id": "s677927315",
        "code_content": "\nimport math\nimport sys\n\nlines = input()\nprint(lines[len(lines)-1:0:-1])",
        "origin_generated_text": "\n```\nimport math\nimport sys\n\nlines = input()\nprint(lines[len(lines)-1:0:-1])```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p04017",
        "submission1_id": "s921008784",
        "code_content": "\nfrom bisect import bisect_right, bisect_left\nN = int(input())\nx = list(map(int, input().split()))\nL = int(input())\nn = N.bit_length()+1\nnext_hotel = [[0]*n for _ in range(N)]\nfor i in range(N):\n    index = bisect_right(x, x[i]+L)-1\n    next_hotel[i][0] = index\nfor i in range(1, n):\n    for j in range(N):\n        next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\ndef count(a, b):\n    if a>b:\n        a, b = b, a\n    res = 0\n    for i in range(n):\n        if a >= b:\n            return  res\n        c = max(bisect_left(next_hotel[a], b)-1, 0)\n        a = next_hotel[a][c]\n        res+=2**c\nQ = int(input())\nfor _ in range(Q):\n    a, b = map(int, input().split())\n    print(count(a-1, b-1))",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right, bisect_left\nN = int(input())\nx = list(map(int, input().split()))\nL = int(input())\nn = N.bit_length()+1\nnext_hotel = [[0]*n for _ in range(N)]\nfor i in range(N):\n    index = bisect_right(x, x[i]+L)-1\n    next_hotel[i][0] = index\nfor i in range(1, n):\n    for j in range(N):\n        next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\ndef count(a, b):\n    if a>b:\n        a, b = b, a\n    res = 0\n    for i in range(n):\n        if a >= b:\n            return  res\n        c = max(bisect_left(next_hotel[a], b)-1, 0)\n        a = next_hotel[a][c]\n        res+=2**c\nQ = int(input())\nfor _ in range(Q):\n    a, b = map(int, input().split())\n    print(count(a-1, b-1))```\n "
    },
    {
        "user_id": "u999669171",
        "problem_id": "p03760",
        "submission1_id": "s900359958",
        "code_content": "\no = list( input() )\ne = list( input() )\n\nfor x,y in zip( o, e ) : print( x+y, end=\"\" )",
        "origin_generated_text": "\n```\no = list( input() )\ne = list( input() )\n\nfor x,y in zip( o, e ) : print( x+y, end=\"\" )```\n "
    },
    {
        "user_id": "u821712904",
        "problem_id": "p02959",
        "submission1_id": "s816929275",
        "code_content": "\nn=int(input())\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\na1=a\nfor i in range(n):\n  if b[i]>=a[i]+a[i+1] and a[i+1]!=0:\n    a[i+1]=b[i]-a[i]\n    a[i]=0\n  elif b[i]>=a[i]:\n    a[i+1]=b[i]-a[i]\n    a[i]=0\n  else:\n    a[i+1]=b[i]\n  a[i+1]=max(a[i+1],0)\nprint(sum(a))",
        "origin_generated_text": "\n```\nn=int(input())\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\na1=a\nfor i in range(n):\n  if b[i]>=a[i]+a[i+1] and a[i+1]!=0:\n    a[i+1]=b[i]-a[i]\n    a[i]=0\n  elif b[i]>=a[i]:\n    a[i+1]=b[i]-a[i]\n    a[i]=0\n  else:\n    a[i+1]=b[i]\n  a[i+1]=max(a[i+1],0)\nprint(sum(a))```\n "
    },
    {
        "user_id": "u641406334",
        "problem_id": "p03103",
        "submission1_id": "s495510870",
        "code_content": "\nn, m = map(int,input().split())\nL = []\nans, cnt = 0, 0\nfor i in range(n):\n  ab = list(map(int,input().split()))\n  L.append(ab)\nL.sort()\nfor j in range(n):\n  if m-cnt>L[j][1]:\n    cnt+=L[j][1]\n    ans+=L[j][0]*L[j][1]\n  else:\n    ans+=L[j][0]*(m-cnt)\n    break\nprint(ans)",
        "origin_generated_text": "\n```\nn, m = map(int,input().split())\nL = []\nans, cnt = 0, 0\nfor i in range(n):\n  ab = list(map(int,input().split()))\n  L.append(ab)\nL.sort()\nfor j in range(n):\n  if m-cnt>L[j][1]:\n    cnt+=L[j][1]\n    ans+=L[j][0]*L[j][1]\n  else:\n    ans+=L[j][0]*(m-cnt)\n    break\nprint(ans)```\n "
    },
    {
        "user_id": "u626891113",
        "problem_id": "p02660",
        "submission1_id": "s529730160",
        "code_content": "\nfrom collections import Counter\nn = int(input())\nans = 0\n\ndp = []\ncl = []\nn1 = n\nfor i in range(2, int(n**0.5)+1):\n    if n%i == 0:\n        cl.append(i)\n        while n%i == 0:\n            n = n/i\n            dp.append(i)\n        if n == 1:\n            ans = 1\n            break\n        if n == n1:\n            ans = 1\n\nc = Counter(dp)\n\n\nfor i in cl:\n    cnt = 1\n    while c[i] >= cnt:\n        c[i] -= cnt\n        ans += 1\n        cnt += 1\n        \nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom collections import Counter\nn = int(input())\nans = 0\n\ndp = []\ncl = []\nn1 = n\nfor i in range(2, int(n**0.5)+1):\n    if n%i == 0:\n        cl.append(i)\n        while n%i == 0:\n            n = n/i\n            dp.append(i)\n        if n == 1:\n            ans = 1\n            break\n        if n == n1:\n            ans = 1\n\nc = Counter(dp)\n\n\nfor i in cl:\n    cnt = 1\n    while c[i] >= cnt:\n        c[i] -= cnt\n        ans += 1\n        cnt += 1\n        \nprint(ans)\n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s312714823",
        "code_content": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if abs(i)+abs(j)<2 and 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if abs(i)+abs(j)<3 and 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nn = 0\nm = 0\nfor f in field:\n    for e in f:\n        if e > m:\n            m = e\n        if e==0:\n            n+=1\n\nprint(n)\nprint(m)\n\n",
        "origin_generated_text": "\n```\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if abs(i)+abs(j)<2 and 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if abs(i)+abs(j)<3 and 0<=y+j<=9 and 0<=x+i<=9:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nn = 0\nm = 0\nfor f in field:\n    for e in f:\n        if e > m:\n            m = e\n        if e==0:\n            n+=1\n\nprint(n)\nprint(m)\n\n```\n "
    },
    {
        "user_id": "u533511299",
        "problem_id": "p02954",
        "submission1_id": "s225430096",
        "code_content": "\nif __name__ == '__main__':\n  str = input()\n  strList = [c for c in str]\n  strList.append('e')\n  strLength = len(strList)\n  rLength = 0\n  lLength = 0\n  i = 0\n  changePoint = 0\n\n  child = [0 for i in range(strLength+1)]\n\n  c = 'R'\n  \n  while(c != 'e'):\n    c = strList[i]\n    while(c == 'R'):\n      i += 1\n      c = strList[i]\n      rLength += 1\n    \n    changePoint = i\n    \n    while(c == 'L'):\n      i += 1\n      c = strList[i]\n      lLength += 1\n\n    rRight = int(rLength/2)\n    rLeft = rLength - rRight\n\n    lLeft = int(lLength/2)\n    lRight = lLength - lLeft\n\n    child[changePoint-1] += rLeft + lLeft\n    child[changePoint] += rRight + lRight\n\n    rLength = 0\n    lLength = 0\n  \n  for numOfChild in child:\n    print(numOfChild, end=\"\")\n    print(' ', end=\"\")",
        "origin_generated_text": "\n```\nif __name__ == '__main__':\n  str = input()\n  strList = [c for c in str]\n  strList.append('e')\n  strLength = len(strList)\n  rLength = 0\n  lLength = 0\n  i = 0\n  changePoint = 0\n\n  child = [0 for i in range(strLength+1)]\n\n  c = 'R'\n  \n  while(c != 'e'):\n    c = strList[i]\n    while(c == 'R'):\n      i += 1\n      c = strList[i]\n      rLength += 1\n    \n    changePoint = i\n    \n    while(c == 'L'):\n      i += 1\n      c = strList[i]\n      lLength += 1\n\n    rRight = int(rLength/2)\n    rLeft = rLength - rRight\n\n    lLeft = int(lLength/2)\n    lRight = lLength - lLeft\n\n    child[changePoint-1] += rLeft + lLeft\n    child[changePoint] += rRight + lRight\n\n    rLength = 0\n    lLength = 0\n  \n  for numOfChild in child:\n    print(numOfChild, end=\"\")\n    print(' ', end=\"\")```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s610052105",
        "code_content": "\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\n\nprint(l[0][0]%m)",
        "origin_generated_text": "\n```\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\n\nprint(l[0][0]%m)```\n "
    },
    {
        "user_id": "u394244719",
        "problem_id": "p04019",
        "submission1_id": "s874638858",
        "code_content": "\nimport sys\nfrom collections import Counter\n\ninint = lambda: int(sys.stdin.readline())\ninintm = lambda: map(int, sys.stdin.readline().split())\ninintl = lambda: list(inintm())\ninstrm = lambda: map(str, sys.stdin.readline().split())\ninstrl = lambda: list(instrm())\n\ns = input()\n\nif \"N\" not in s or \"S\" not in s:\n    print(\"No\")\n    exit()\nif \"E\" not in s or \"W\" not in s:\n    print(\"No\")\n    exit()\n\nprint(\"Yes\") if \"N\" in s and \"S\" in s and \"E\" in s and \"W\" in s else print(\"No\")",
        "origin_generated_text": "\n```\nimport sys\nfrom collections import Counter\n\ninint = lambda: int(sys.stdin.readline())\ninintm = lambda: map(int, sys.stdin.readline().split())\ninintl = lambda: list(inintm())\ninstrm = lambda: map(str, sys.stdin.readline().split())\ninstrl = lambda: list(instrm())\n\ns = input()\n\nif \"N\" not in s or \"S\" not in s:\n    print(\"No\")\n    exit()\nif \"E\" not in s or \"W\" not in s:\n    print(\"No\")\n    exit()\n\nprint(\"Yes\") if \"N\" in s and \"S\" in s and \"E\" in s and \"W\" in s else print(\"No\")```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s019454965",
        "code_content": "\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  else:\n    dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                  + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                  +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n    return dp[(i, j, k)]\n\nprint(perm(n-1, 0, k)%int(10e9+7))",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  else:\n    dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                  + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                  +  1*perm(i-1, j-1, k-2*j))%int(10e9+7)\n    return dp[(i, j, k)]\n\nprint(perm(n-1, 0, k)%int(10e9+7))```\n "
    },
    {
        "user_id": "u730476362",
        "problem_id": "p03200",
        "submission1_id": "s852320838",
        "code_content": "\nS = input()\ncounter = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsum=0\nfor i in range(len(S)):\n    if S[i]=='W':\n        sum+=i\n        counter+=1\nprint(counter)",
        "origin_generated_text": "\n```\nS = input()\ncounter = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsum=0\nfor i in range(len(S)):\n    if S[i]=='W':\n        sum+=i\n        counter+=1\nprint(counter)```\n "
    },
    {
        "user_id": "u857428111",
        "problem_id": "p03568",
        "submission1_id": "s090027677",
        "code_content": "\n\n\nimport sys\ninput= lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\ndef pin(type=int):return map(type,input().split())\ndef tupin(t=int):return tuple(pin(t))\ndef lispin(t=int):return list(pin(t))\n\ndef resolve():\n    N=int(input())\n    t=3**N\n    s=1\n    f=0\n    for a in pin():\n        if a%2:\n            f=1\n            s*=1\n        else:\n            s*=2\n\n    print(t-s)\n\nresolve()",
        "origin_generated_text": "\n```\n\n\nimport sys\ninput= lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**9)\ndef pin(type=int):return map(type,input().split())\ndef tupin(t=int):return tuple(pin(t))\ndef lispin(t=int):return list(pin(t))\n\ndef resolve():\n    N=int(input())\n    t=3**N\n    s=1\n    f=0\n    for a in pin():\n        if a%2:\n            f=1\n            s*=1\n        else:\n            s*=2\n\n    print(t-s)\n\nresolve()```\n "
    },
    {
        "user_id": "u627600101",
        "problem_id": "p02727",
        "submission1_id": "s432361046",
        "code_content": "\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort(reverse=True)\n\nsa = sum(p[:X])\nsb = sum(q[:Y])\n\np.append(float('inf'))\nq.append(float('inf'))\n\n\nans = sa + sb\nnr = 0\nnp = X-1\nnq = Y-1\nwhile nr < len(r):\n  if r[nr] <= min(p[np], q[nq]):\n    break\n  elif p[np] > r[nr] >= q[nq]:\n    ans += r[nr] - q[nq]\n    nr += 1\n    nq -= 1\n    continue\n  else:\n    ans += r[nr] - p[np]\n    nr += 1\n    continue\n  \nprint(ans)",
        "origin_generated_text": "\n```\nX, Y, A, B, C = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort(reverse=True)\n\nsa = sum(p[:X])\nsb = sum(q[:Y])\n\np.append(float('inf'))\nq.append(float('inf'))\n\n\nans = sa + sb\nnr = 0\nnp = X-1\nnq = Y-1\nwhile nr < len(r):\n  if r[nr] <= min(p[np], q[nq]):\n    break\n  elif p[np] > r[nr] >= q[nq]:\n    ans += r[nr] - q[nq]\n    nr += 1\n    nq -= 1\n    continue\n  else:\n    ans += r[nr] - p[np]\n    nr += 1\n    continue\n  \nprint(ans)```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s374230710",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = int(5e10 + 1)\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = int(5e10 + 1)\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)```\n "
    },
    {
        "user_id": "u328751895",
        "problem_id": "p03079",
        "submission1_id": "s295110670",
        "code_content": "\nA, B, C = map(int, input().split())\nprint('Yes' if A == B == C else 'No')",
        "origin_generated_text": "\n```\nA, B, C = map(int, input().split())\nprint('Yes' if A == B == C else 'No')```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p04019",
        "submission1_id": "s155717456",
        "code_content": "\ns = input()\nif s.count(\"N\") == s.count(\"S\") and s.count(\"W\") == s.count(\"E\") and s.count(\"N\") % 2 == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\ns = input()\nif s.count(\"N\") == s.count(\"S\") and s.count(\"W\") == s.count(\"E\") and s.count(\"N\") % 2 == 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u836737505",
        "problem_id": "p03992",
        "submission1_id": "s107960937",
        "code_content": "\ns = input()\nprint(s[:4]+\" \"+s[5:])",
        "origin_generated_text": "\n```\ns = input()\nprint(s[:4]+\" \"+s[5:])```\n "
    },
    {
        "user_id": "u766684188",
        "problem_id": "p02746",
        "submission1_id": "s740633465",
        "code_content": "\nimport sys\ninput=sys.stdin.readline\n\ndef dist(a,b,c,d,P3):\n    for p in P3:\n        da,ma=divmod(a,p)\n        dc,mc=divmod(c,p)\n        if da!=dc:\n            return abs(a-c)+abs(b-d)\n        if da!=1:\n            a,c=ma,mc\n            continue\n        db,mb=divmod(b,p)\n        dd,md=divmod(d,p)\n        if db!=dd:\n            return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n        return min(ma+mc+2,2*p-(ma+mc))+abs(mb+md+2)\n    return abs(a-c)+abs(b-d)\n\ndef main():\n    q=int(input())\n    P3=[pow(3,i) for i in reversed(range(30))]\n    for _ in range(q):\n        a,b,c,d=map(lambda x: int(x)-1,input().split())\n        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n\nif __name__=='__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys\ninput=sys.stdin.readline\n\ndef dist(a,b,c,d,P3):\n    for p in P3:\n        da,ma=divmod(a,p)\n        dc,mc=divmod(c,p)\n        if da!=dc:\n            return abs(a-c)+abs(b-d)\n        if da!=1:\n            a,c=ma,mc\n            continue\n        db,mb=divmod(b,p)\n        dd,md=divmod(d,p)\n        if db!=dd:\n            return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n        return min(ma+mc+2,2*p-(ma+mc))+abs(mb+md+2)\n    return abs(a-c)+abs(b-d)\n\ndef main():\n    q=int(input())\n    P3=[pow(3,i) for i in reversed(range(30))]\n    for _ in range(q):\n        a,b,c,d=map(lambda x: int(x)-1,input().split())\n        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n\nif __name__=='__main__':\n    main()```\n "
    },
    {
        "user_id": "u725133562",
        "problem_id": "p04019",
        "submission1_id": "s290482881",
        "code_content": "\ns = input()\nl = len(s)\njudge = 0\nif 'N' in s:\n    judge += 1000\nif 'W' in s:\n    judge += 1000\nif 'S' in s:\n    judge -= 1000\nif 'E' in s:\n    judge -= 1000\n\nprint('Yes' if judge == 0 else 'No')",
        "origin_generated_text": "\n```\ns = input()\nl = len(s)\njudge = 0\nif 'N' in s:\n    judge += 1000\nif 'W' in s:\n    judge += 1000\nif 'S' in s:\n    judge -= 1000\nif 'E' in s:\n    judge -= 1000\n\nprint('Yes' if judge == 0 else 'No')```\n "
    },
    {
        "user_id": "u144913062",
        "problem_id": "p03008",
        "submission1_id": "s457055677",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nga, sa, ba = map(int, input().split())\ngb, sb, bb = map(int, input().split())\nA = [10**18] * 4\nB = [10**18] * 4\nif ga < gb:\n    A[0] = ga\nelif ga > gb:\n    B[0] = gb\nif sa < sb:\n    A[1] = sa\nelif sa > sb:\n    B[1] = sb\nif ba < bb:\n    A[2] = ba\nelif ba > bb:\n    B[2] = bb\n\ndef calc(X):\n    res = 0\n    for i in range(N+1):\n        M = N - X[0] * i\n        j = M \n        k = (M - X[1] * j) \n        res = max(res, X[0] * i + X[1] * j + X[2] * k)\n        k = M \n        j = (M - X[2] * k) \n        res = max(res, X[0] * i + X[1] * j + X[2] * k)\n    return res\n\nN += calc(A)\nN += calc(B)\nprint(N)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nN = int(input())\nga, sa, ba = map(int, input().split())\ngb, sb, bb = map(int, input().split())\nA = [10**18] * 4\nB = [10**18] * 4\nif ga < gb:\n    A[0] = ga\nelif ga > gb:\n    B[0] = gb\nif sa < sb:\n    A[1] = sa\nelif sa > sb:\n    B[1] = sb\nif ba < bb:\n    A[2] = ba\nelif ba > bb:\n    B[2] = bb\n\ndef calc(X):\n    res = 0\n    for i in range(N+1):\n        M = N - X[0] * i\n        j = M \n        k = (M - X[1] * j) \n        res = max(res, X[0] * i + X[1] * j + X[2] * k)\n        k = M \n        j = (M - X[2] * k) \n        res = max(res, X[0] * i + X[1] * j + X[2] * k)\n    return res\n\nN += calc(A)\nN += calc(B)\nprint(N)```\n "
    },
    {
        "user_id": "u255898796",
        "problem_id": "p02580",
        "submission1_id": "s302245909",
        "code_content": "\nimport collections\na = input().split()\nM = int(a[2])\nhidari = []\nmigi = []\nc = []\n \nfor i in range(M):\n  b = input().split()\n  hidari.append(b[0])\n  migi.append(b[1])\n  c.append(b)\n \ncountleft = collections.Counter(hidari)\ncountright = collections.Counter(migi)\nleftmax = countleft.most_common()[0][1]\nrightmax = countright.most_common()[0][1]\ntempmax = int(leftmax + rightmax)\n \nleftkeys = list(countleft.keys())\nrightkeys = list(countright.keys())\n \nleftkeyN = int(len(leftkeys))\nrightkeyN = int(len(rightkeys))\nflag = int(0)\ncnt = int(0)\n\nfor i in range(leftkeyN):\n    for P in range(rightkeyN):\n        for T in range(M):\n            if c[T] == [leftkeys[i],rightkeys[P]]:\n                cnt = cnt + 1\n        if cnt == 0:\n            flag = flag + 1\n            break\n        else:\n            cnt = 0\n \nif flag == 0:\n    print(int(tempmax - 1))\nelse:\n    print(int(tempmax))",
        "origin_generated_text": "\n```\nimport collections\na = input().split()\nM = int(a[2])\nhidari = []\nmigi = []\nc = []\n \nfor i in range(M):\n  b = input().split()\n  hidari.append(b[0])\n  migi.append(b[1])\n  c.append(b)\n \ncountleft = collections.Counter(hidari)\ncountright = collections.Counter(migi)\nleftmax = countleft.most_common()[0][1]\nrightmax = countright.most_common()[0][1]\ntempmax = int(leftmax + rightmax)\n \nleftkeys = list(countleft.keys())\nrightkeys = list(countright.keys())\n \nleftkeyN = int(len(leftkeys))\nrightkeyN = int(len(rightkeys))\nflag = int(0)\ncnt = int(0)\n\nfor i in range(leftkeyN):\n    for P in range(rightkeyN):\n        for T in range(M):\n            if c[T] == [leftkeys[i],rightkeys[P]]:\n                cnt = cnt + 1\n        if cnt == 0:\n            flag = flag + 1\n            break\n        else:\n            cnt = 0\n \nif flag == 0:\n    print(int(tempmax - 1))\nelse:\n    print(int(tempmax))```\n "
    },
    {
        "user_id": "u311379832",
        "problem_id": "p03475",
        "submission1_id": "s085243671",
        "code_content": "\nN = int(input())\nc = [list(map(int, input().split())) for _ in range(N - 1)]\nanslst = [0] * N\nfor i in range(N - 1):\n    ans = c[i][1] + c[i][0]\n    for j in range(i + 1, N - 1):\n        if ans <= c[j][1]:\n            ans = c[j][1] + c[j][0]\n        else:\n            tmp = ans - c[j][1]\n            amari = tmp % c[j][2]\n            if amari == 0:\n                ans += c[j][0]\n            else:\n                ans += c[j][0] + amari\n\n    anslst[i] = ans\n\nfor i in anslst:\n    print(i)",
        "origin_generated_text": "\n```\nN = int(input())\nc = [list(map(int, input().split())) for _ in range(N - 1)]\nanslst = [0] * N\nfor i in range(N - 1):\n    ans = c[i][1] + c[i][0]\n    for j in range(i + 1, N - 1):\n        if ans <= c[j][1]:\n            ans = c[j][1] + c[j][0]\n        else:\n            tmp = ans - c[j][1]\n            amari = tmp % c[j][2]\n            if amari == 0:\n                ans += c[j][0]\n            else:\n                ans += c[j][0] + amari\n\n    anslst[i] = ans\n\nfor i in anslst:\n    print(i)```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02963",
        "submission1_id": "s002977361",
        "code_content": "\ndef f():\n    s = int(input())\n    x = s\n    y = s\n    while x%2 == 0:\n        x /= 2\n    while y%2 == 0:\n        y /= 2\n    print(x, 0, y, 0, x, y)\n\nif __name__ == '__main__':\n    f()\n",
        "origin_generated_text": "\n```\ndef f():\n    s = int(input())\n    x = s\n    y = s\n    while x%2 == 0:\n        x /= 2\n    while y%2 == 0:\n        y /= 2\n    print(x, 0, y, 0, x, y)\n\nif __name__ == '__main__':\n    f()\n```\n "
    },
    {
        "user_id": "u952130512",
        "problem_id": "p03998",
        "submission1_id": "s028771829",
        "code_content": "\nA=input()\nB=input()\nC=input()\ns=\"a\"\nwhile len(A)!=0 and len(B)!=0 and len(C)!=0 and s!=\"\":\n  if s==\"a\":\n    s=A[0]\n    A=A[1:]\n  elif s==\"b\":\n    s=B[0]\n    B=B[1:]\n  elif s==\"c\":\n    s=C[0]\n    C=C[1:]\n  else:\n    s=\"\"\nif len(A)==0:\n  print(\"A\")\nelif len(B)==0:\n  print(\"B\")\nelse:\n  print(\"C\")\n",
        "origin_generated_text": "\n```\nA=input()\nB=input()\nC=input()\ns=\"a\"\nwhile len(A)!=0 and len(B)!=0 and len(C)!=0 and s!=\"\":\n  if s==\"a\":\n    s=A[0]\n    A=A[1:]\n  elif s==\"b\":\n    s=B[0]\n    B=B[1:]\n  elif s==\"c\":\n    s=C[0]\n    C=C[1:]\n  else:\n    s=\"\"\nif len(A)==0:\n  print(\"A\")\nelif len(B)==0:\n  print(\"B\")\nelse:\n  print(\"C\")\n```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03675",
        "submission1_id": "s888346405",
        "code_content": "\nfrom sys import stdin\n\nN = int(stdin.readline().rstrip())\nA = stdin.readline().rstrip().split()\n\nB = A[::-1]\n\nans = []\n\nif N % 2 == 0:\n  for i in range(0,N,2):\n    ans.append(B[i])\n  for i in range(0,N,2):\n    ans.append(A[i])\n  \nelse:\n  for i in range(0,N,2):\n    ans.append(B[i])\n  for i in range(1,N,2):\n    ans.append(A[i])\n\nprint(*list(ans))",
        "origin_generated_text": "\n```\nfrom sys import stdin\n\nN = int(stdin.readline().rstrip())\nA = stdin.readline().rstrip().split()\n\nB = A[::-1]\n\nans = []\n\nif N % 2 == 0:\n  for i in range(0,N,2):\n    ans.append(B[i])\n  for i in range(0,N,2):\n    ans.append(A[i])\n  \nelse:\n  for i in range(0,N,2):\n    ans.append(B[i])\n  for i in range(1,N,2):\n    ans.append(A[i])\n\nprint(*list(ans))```\n "
    },
    {
        "user_id": "u038724782",
        "problem_id": "p02665",
        "submission1_id": "s155098193",
        "code_content": "\n```\nn = int(input())\na_l = list(map(int,input().split()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nn = int(input())\na_l = list(map(int,input().split()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u726823037",
        "problem_id": "p02625",
        "submission1_id": "s609723355",
        "code_content": "\nn,m=map(int,input().split())\na = 1\nMod=10**9+7\nd = [1]*(n+1)\nfor i in range(n):\n  d[i+1]=((m-n+i)*d[i]+i*d[i-1])%Mod\n  a=a*(m-i)%Mod\nprint(int(a*d[n]%Mod)%Mod)",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\na = 1\nMod=10**9+7\nd = [1]*(n+1)\nfor i in range(n):\n  d[i+1]=((m-n+i)*d[i]+i*d[i-1])%Mod\n  a=a*(m-i)%Mod\nprint(int(a*d[n]%Mod)%Mod)```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s623384412",
        "code_content": "\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = S\ny3 = S\nprint(x1,y1,x2,y2,x3,y3)\n",
        "origin_generated_text": "\n```\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = S\ny3 = S\nprint(x1,y1,x2,y2,x3,y3)\n```\n "
    },
    {
        "user_id": "u305452255",
        "problem_id": "p02640",
        "submission1_id": "s025798421",
        "code_content": "\nx, y = map(int, input().split())\n\nif (y/2 - x) == 0:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n\nif (y/2 - x) == 0:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u144980750",
        "problem_id": "p03106",
        "submission1_id": "s489117375",
        "code_content": "\na=[0,0]\ns=[]\na[0],a[1],k=map(int,input().split())\nfor i in range(1,max(a)+2):\n  if a[0]%i==0 and a[1]%i==0:\n    s.append(i)\nprint(s[k-1] if len(s)>k else s[k])",
        "origin_generated_text": "\n```\na=[0,0]\ns=[]\na[0],a[1],k=map(int,input().split())\nfor i in range(1,max(a)+2):\n  if a[0]%i==0 and a[1]%i==0:\n    s.append(i)\nprint(s[k-1] if len(s)>k else s[k])```\n "
    },
    {
        "user_id": "u119148115",
        "problem_id": "p04017",
        "submission1_id": "s661453007",
        "code_content": "\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n\n\nN = I()\nx = LI()\nL = I()\n\nfrom bisect import bisect_right\n\narrive = [[0]*N for _ in range(30)]  \nfor k in range(30):\n    if k == 0:\n        for i in range(N):\n            arrive[0][i] = bisect_right(x,x[i]+L)-1\n    else:\n        for i in range(N):\n            arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n\n\ndef query(a,b):  \n    a -= 1\n    b -= 1\n    ans = 1\n    for k in range(29,-1,-1):\n        if arrive[k][a] >= b:\n            continue\n        else:\n            a = arrive[k][a]\n            ans += 1 << k\n    print(ans)\n\n\nQ = I()\nfor i in range(Q):\n    a,b = MI()\n    if a > b:\n        a,b = b,a\n    query(a,b)\n",
        "origin_generated_text": "\n```\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n\n\nN = I()\nx = LI()\nL = I()\n\nfrom bisect import bisect_right\n\narrive = [[0]*N for _ in range(30)]  \nfor k in range(30):\n    if k == 0:\n        for i in range(N):\n            arrive[0][i] = bisect_right(x,x[i]+L)-1\n    else:\n        for i in range(N):\n            arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n\n\ndef query(a,b):  \n    a -= 1\n    b -= 1\n    ans = 1\n    for k in range(29,-1,-1):\n        if arrive[k][a] >= b:\n            continue\n        else:\n            a = arrive[k][a]\n            ans += 1 << k\n    print(ans)\n\n\nQ = I()\nfor i in range(Q):\n    a,b = MI()\n    if a > b:\n        a,b = b,a\n    query(a,b)\n```\n "
    },
    {
        "user_id": "u235066013",
        "problem_id": "p03943",
        "submission1_id": "s203461786",
        "code_content": "\na,b,c=[int(i) for i in input().split()]\nif a+b+c%2==0:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\na,b,c=[int(i) for i in input().split()]\nif a+b+c%2==0:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02385",
        "submission1_id": "s344803021",
        "code_content": "\n\n\n\nclass dice():\n    def __init__(self, arr):\n        self.top = arr[0]\n        self.south = arr[1]\n        self.east = arr[2]\n        self.west = arr[3]\n        self.north = arr[4]\n        self.bottom = arr[5]\n\n    def rotate(self, ope):\n        if ope == 'S':\n            self.top, self.north, self.bottom, self.south = self.north, self.bottom, self.south, self.top\n        elif ope == 'N':\n            self.top, self.south, self.bottom, self.north = self.south, self.bottom, self.north, self.top\n        elif ope == 'E':\n            self.top, self.west, self.bottom, self.east = self.west, self.bottom, self.east, self.top\n        elif ope == 'W':\n            self.top, self.east, self.bottom, self.west = self.east, self.bottom, self.west, self.top\n\n    def get_surfaces(self):\n        return [self.top, self.south, self.east, self.north, self.west, self.bottom]\n\ndc1 = dice([int(x) for x in input().split(' ')])\ndc2 = dice([int(x) for x in input().split(' ')])\n\njudged = False\nif len((dc1.get_surfaces() and dc2.get_surfaces())) == 6:\n    for i in range(4):\n        if dc2.south == dc1.south:\n            break\n        dc2.rotate('R')\n    for i in range(4):\n        if dc2.north == dc1.north:\n            break\n        dc2.rotate('L')\n    for i in range(4):\n        if dc2.east == dc1.east:\n            break\n        dc2.rotate('F')\n    for i in range(4):\n        if dc2.west == dc1.west:\n            break\n        dc2.rotate('B')\n    for i in range(4):\n        if dc2.bottom == dc1.bottom:\n            break\n        dc2.rotate('D')\n    for i in range(4):\n        if dc2.top == dc1.top:\n            break\n        dc2.rotate('U')\n    if (dc1.east == dc2.east) and (dc1.north == dc2.north) and (dc1.bottom == dc2.bottom):\n        judged = True\n\nif judged:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\n\n\n\nclass dice():\n    def __init__(self, arr):\n        self.top = arr[0]\n        self.south = arr[1]\n        self.east = arr[2]\n        self.west = arr[3]\n        self.north = arr[4]\n        self.bottom = arr[5]\n\n    def rotate(self, ope):\n        if ope == 'S':\n            self.top, self.north, self.bottom, self.south = self.north, self.bottom, self.south, self.top\n        elif ope == 'N':\n            self.top, self.south, self.bottom, self.north = self.south, self.bottom, self.north, self.top\n        elif ope == 'E':\n            self.top, self.west, self.bottom, self.east = self.west, self.bottom, self.east, self.top\n        elif ope == 'W':\n            self.top, self.east, self.bottom, self.west = self.east, self.bottom, self.west, self.top\n\n    def get_surfaces(self):\n        return [self.top, self.south, self.east, self.north, self.west, self.bottom]\n\ndc1 = dice([int(x) for x in input().split(' ')])\ndc2 = dice([int(x) for x in input().split(' ')])\n\njudged = False\nif len((dc1.get_surfaces() and dc2.get_surfaces())) == 6:\n    for i in range(4):\n        if dc2.south == dc1.south:\n            break\n        dc2.rotate('R')\n    for i in range(4):\n        if dc2.north == dc1.north:\n            break\n        dc2.rotate('L')\n    for i in range(4):\n        if dc2.east == dc1.east:\n            break\n        dc2.rotate('F')\n    for i in range(4):\n        if dc2.west == dc1.west:\n            break\n        dc2.rotate('B')\n    for i in range(4):\n        if dc2.bottom == dc1.bottom:\n            break\n        dc2.rotate('D')\n    for i in range(4):\n        if dc2.top == dc1.top:\n            break\n        dc2.rotate('U')\n    if (dc1.east == dc2.east) and (dc1.north == dc2.north) and (dc1.bottom == dc2.bottom):\n        judged = True\n\nif judged:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u554954744",
        "problem_id": "p03626",
        "submission1_id": "s232277236",
        "code_content": "\nN = int(input())\nS = input()\nT = input()\n\nMOD = 10 ** 9 + 7\n\nptn = []\ni = 0\nwhile i < N:\n    if S[i] == T[i]:\n        ptn.append(1)\n        i += 1\n    else:\n        ptn.append(2)\n        i += 2\n\nif ptn[0] == 1:\n    ans = 3\nelse:\n    ans = 6\n\nfor s, t in zip(ptn[:], ptn[1:]):\n    if s == 1 and t == 1:\n        ans *= 2\n    elif s == 1 and t == 2:\n        ans *= 2\n    elif s == 2 and t == 1:\n        ans *= 1\n    elif s == 2 and t == 2:\n        ans *= 3\n    ans %= MOD\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nS = input()\nT = input()\n\nMOD = 10 ** 9 + 7\n\nptn = []\ni = 0\nwhile i < N:\n    if S[i] == T[i]:\n        ptn.append(1)\n        i += 1\n    else:\n        ptn.append(2)\n        i += 2\n\nif ptn[0] == 1:\n    ans = 3\nelse:\n    ans = 6\n\nfor s, t in zip(ptn[:], ptn[1:]):\n    if s == 1 and t == 1:\n        ans *= 2\n    elif s == 1 and t == 2:\n        ans *= 2\n    elif s == 2 and t == 1:\n        ans *= 1\n    elif s == 2 and t == 2:\n        ans *= 3\n    ans %= MOD\n\nprint(ans)```\n "
    },
    {
        "user_id": "u076512055",
        "problem_id": "p02880",
        "submission1_id": "s618186216",
        "code_content": "\nN = int(input())\n\nans = 'No'\nfor i in range(1,10):\n    for j in range(1,10):\n        if N == i * j:\n            ans = 'Yes'\n            \nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\n\nans = 'No'\nfor i in range(1,10):\n    for j in range(1,10):\n        if N == i * j:\n            ans = 'Yes'\n            \nprint(ans)```\n "
    },
    {
        "user_id": "u708890186",
        "problem_id": "p02767",
        "submission1_id": "s005062572",
        "code_content": "\nimport statistics\nn=int(input())\nx=[int(_) for _ in input().split()]\nmid=int(statistics.mean(x))\nmmid=mid-1\ncnt=0\ncntm=0\nfor i in range(len(x)):\n  cnt+= (x[i]-mid)**2\n  cntm+=(x[i]-mmid)**2\nprint(min(cnt,cntm)+len(x))\n  ",
        "origin_generated_text": "\n```\nimport statistics\nn=int(input())\nx=[int(_) for _ in input().split()]\nmid=int(statistics.mean(x))\nmmid=mid-1\ncnt=0\ncntm=0\nfor i in range(len(x)):\n  cnt+= (x[i]-mid)**2\n  cntm+=(x[i]-mmid)**2\nprint(min(cnt,cntm)+len(x))\n  ```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03546",
        "submission1_id": "s945543506",
        "code_content": "\nh,w=map(int,input().split())\nd=[list(map(int,input().split())) for _ in range(10)]\nfor i in range(10):\n  for j in range(10):\n    for k in range(10):\n      d[i][j]=min(d[i][j],d[i][k]+d[k][j])\nans=0\nfor _ in range(h):\n  arr=list(map(int,input().split()))\n  for i in range(w):\n    if arr[i]==-1:\n      continue\n    else:\n      ans+=d[arr[i]][1]\nprint(ans)",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nd=[list(map(int,input().split())) for _ in range(10)]\nfor i in range(10):\n  for j in range(10):\n    for k in range(10):\n      d[i][j]=min(d[i][j],d[i][k]+d[k][j])\nans=0\nfor _ in range(h):\n  arr=list(map(int,input().split()))\n  for i in range(w):\n    if arr[i]==-1:\n      continue\n    else:\n      ans+=d[arr[i]][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u782009499",
        "problem_id": "p02959",
        "submission1_id": "s926453128",
        "code_content": "\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\ncount = 0\nleft = 0\nfor i in range(n):\n    if b[i] - a[i] + left > 0:\n        count += a[i]\n        left = b[i] - a[i] + left\n        if left > b[i]:\n            left = b[i]\n    else:\n        count += b[i]\n        left = 0\n\ncount += min(left, a[n])\nprint(count)",
        "origin_generated_text": "\n```\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\ncount = 0\nleft = 0\nfor i in range(n):\n    if b[i] - a[i] + left > 0:\n        count += a[i]\n        left = b[i] - a[i] + left\n        if left > b[i]:\n            left = b[i]\n    else:\n        count += b[i]\n        left = 0\n\ncount += min(left, a[n])\nprint(count)```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s250757919",
        "code_content": "\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= X[b]:\n            num += 2 ** j\n            a = P[j][a]\n    print(num + 1)",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= X[b]:\n            num += 2 ** j\n            a = P[j][a]\n    print(num + 1)```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s625716717",
        "code_content": "\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) * 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3, y3 = divmod(s, 10**9 * 2)\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) * 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3, y3 = divmod(s, 10**9 * 2)\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u729707098",
        "problem_id": "p03096",
        "submission1_id": "s386763220",
        "code_content": "\nn = int(input())\nc = [int(input()) for i in range(n)]\nnum,x = 1,[0]*(200001)\nc.append(0)\nx[c[0]]+=1\nfor i in range(1,n):\n    x[c[i]] = (x[c[i]]+num)%(10**9+7)\n    if c[i]-c[i+1]: num = x[c[i]]\n    else: num = 0\nprint(num)",
        "origin_generated_text": "\n```\nn = int(input())\nc = [int(input()) for i in range(n)]\nnum,x = 1,[0]*(200001)\nc.append(0)\nx[c[0]]+=1\nfor i in range(1,n):\n    x[c[i]] = (x[c[i]]+num)%(10**9+7)\n    if c[i]-c[i+1]: num = x[c[i]]\n    else: num = 0\nprint(num)```\n "
    },
    {
        "user_id": "u840988663",
        "problem_id": "p02954",
        "submission1_id": "s700388640",
        "code_content": "\nS=input()\nL=len(S)\nx=[1]*len(S)\nfor i in range(L-2):\n    if S[i] == S[i+1] == \"R\":\n        x[i+2] += x[i]\n        x[i]=0\nfor i in range(L-1,-1,-1):\n    if S[i] == S[i-1] ==\"L\":\n        x[i-2] += x[i]\n        x[i]=0\n\nprint(*x)",
        "origin_generated_text": "\n```\nS=input()\nL=len(S)\nx=[1]*len(S)\nfor i in range(L-2):\n    if S[i] == S[i+1] == \"R\":\n        x[i+2] += x[i]\n        x[i]=0\nfor i in range(L-1,-1,-1):\n    if S[i] == S[i-1] ==\"L\":\n        x[i-2] += x[i]\n        x[i]=0\n\nprint(*x)```\n "
    },
    {
        "user_id": "u625046108",
        "problem_id": "p02954",
        "submission1_id": "s555081292",
        "code_content": "\nimport math\n\nS = input()\n\nl = [0]\nans = [0]*len(S)\n\ntmp = \"R\"\nfor i in range(len(S)):\n  if tmp != S[i]:\n    l.append(i)\n  tmp = S[i]\n\nl.append(len(S))\n\nfor i in range(1, len(l), 2):\n  ans[l[i]-1] = math.ceil((l[i]-l[i-1])/2) + math.floor((l[i+1]-l[i])/2)\n  ans[l[i]] = math.floor((l[i]-l[i-1])/2) + math.ceil((l[i+1]-l[i])/2)\n\nprint(*ans)",
        "origin_generated_text": "\n```\nimport math\n\nS = input()\n\nl = [0]\nans = [0]*len(S)\n\ntmp = \"R\"\nfor i in range(len(S)):\n  if tmp != S[i]:\n    l.append(i)\n  tmp = S[i]\n\nl.append(len(S))\n\nfor i in range(1, len(l), 2):\n  ans[l[i]-1] = math.ceil((l[i]-l[i-1])/2) + math.floor((l[i+1]-l[i])/2)\n  ans[l[i]] = math.floor((l[i]-l[i-1])/2) + math.ceil((l[i+1]-l[i])/2)\n\nprint(*ans)```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s077130107",
        "code_content": "\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  else:\n    if i == 0:\n      dp[(i, j, k)] = 0\n    else:\n      dp[(i, j, k)] = (j+j+1)*perm(i-1, j, k-2*j)\\\n                    + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                    +  1*perm(i-1, j-1, k-2*j)\n    return dp[(i, j, k)]\n\nprint(perm(n-1, 0, k)%(10**9+7))",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  else:\n    if i == 0:\n      dp[(i, j, k)] = 0\n    else:\n      dp[(i, j, k)] = (j+j+1)*perm(i-1, j, k-2*j)\\\n                    + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                    +  1*perm(i-1, j-1, k-2*j)\n    return dp[(i, j, k)]\n\nprint(perm(n-1, 0, k)%(10**9+7))```\n "
    },
    {
        "user_id": "u856152065",
        "problem_id": "p02880",
        "submission1_id": "s048613864",
        "code_content": "\nn = int(input())\nprint(\"Yes\") if n in [x*y for x in range(1,10) for y in range(1,10)] else print(\"No\")",
        "origin_generated_text": "\n```\nn = int(input())\nprint(\"Yes\") if n in [x*y for x in range(1,10) for y in range(1,10)] else print(\"No\")```\n "
    },
    {
        "user_id": "u374671031",
        "problem_id": "p02699",
        "submission1_id": "s370833199",
        "code_content": "\nS, W  = map(int, input().split())\n\nprint(\"safe\" if S >= W else\"unsafe\")",
        "origin_generated_text": "\n```\nS, W  = map(int, input().split())\n\nprint(\"safe\" if S >= W else\"unsafe\")```\n "
    },
    {
        "user_id": "u979362546",
        "problem_id": "p03106",
        "submission1_id": "s745267567",
        "code_content": "\na, b, k = map(int, input().split())\nda = []\ndb = []\ndc = []\nfor i in range(1,a+1):\n    if a%i == 0:\n    \tda.append(i)\n\nfor j in range(1, b+1):\n    if b%j == 0:\n    \tdb.append(j)\ndc = sorted(da+db)\nprint(dc[k-1])",
        "origin_generated_text": "\n```\na, b, k = map(int, input().split())\nda = []\ndb = []\ndc = []\nfor i in range(1,a+1):\n    if a%i == 0:\n    \tda.append(i)\n\nfor j in range(1, b+1):\n    if b%j == 0:\n    \tdb.append(j)\ndc = sorted(da+db)\nprint(dc[k-1])```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03054",
        "submission1_id": "s249165950",
        "code_content": "\ndef examA():\n    N = I()\n    ans = 0\n    print(ans)\n    return\n\ndef examB():\n    H, W, N = LI()\n    start = LI()\n    S = SI(); T = SI()\n    for t,a in [[\"U\",\"D\"],[\"R\",\"L\"]]:\n        if t==\"U\":\n            n = H\n        else:\n            n = W\n        \n        l = 1; r = n\n        if S[-1]==t:\n            r -=1\n        elif S[-1]==a:\n            l +=1\n        for i in range(N-2,-1,-1):\n            if T[i]==t and l>1:\n                l -= 1\n            elif T[i]==a and r<n:\n                r += 1\n            if S[i] == t:\n                r -= 1\n            elif S[i] == a:\n                l += 1\n\n            if t==\"U\" and (r==0 or l==n):\n                print(\"NO\")\n                return\n            if t==\"R\" and (r==0 or l==n):\n                print(\"NO\")\n                return\n\n        if t==\"U\" and (not l<=start[1]<=r):\n            print(\"NO\")\n            return\n        elif t==\"R\" and (not l<=start[0]<=r):\n            print(\"NO\")\n            return\n    print(\"YES\")\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\nimport sys,copy,bisect,itertools,heapq,math\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\nalphabet = [chr(ord('a') + i) for i in range(26)]\n\nif __name__ == '__main__':\n    examB()\n\n",
        "origin_generated_text": "\n```\ndef examA():\n    N = I()\n    ans = 0\n    print(ans)\n    return\n\ndef examB():\n    H, W, N = LI()\n    start = LI()\n    S = SI(); T = SI()\n    for t,a in [[\"U\",\"D\"],[\"R\",\"L\"]]:\n        if t==\"U\":\n            n = H\n        else:\n            n = W\n        \n        l = 1; r = n\n        if S[-1]==t:\n            r -=1\n        elif S[-1]==a:\n            l +=1\n        for i in range(N-2,-1,-1):\n            if T[i]==t and l>1:\n                l -= 1\n            elif T[i]==a and r<n:\n                r += 1\n            if S[i] == t:\n                r -= 1\n            elif S[i] == a:\n                l += 1\n\n            if t==\"U\" and (r==0 or l==n):\n                print(\"NO\")\n                return\n            if t==\"R\" and (r==0 or l==n):\n                print(\"NO\")\n                return\n\n        if t==\"U\" and (not l<=start[1]<=r):\n            print(\"NO\")\n            return\n        elif t==\"R\" and (not l<=start[0]<=r):\n            print(\"NO\")\n            return\n    print(\"YES\")\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\nimport sys,copy,bisect,itertools,heapq,math\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\nalphabet = [chr(ord('a') + i) for i in range(26)]\n\nif __name__ == '__main__':\n    examB()\n\n```\n "
    },
    {
        "user_id": "u358919705",
        "problem_id": "p00026",
        "submission1_id": "s743554912",
        "code_content": "\na = [[0] * 14 for _ in range(14)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    x += 2\n    y += 2\n    for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n        a[x + d[0]][y + d[1]] += 1\n    if s >= 2:\n        for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n            a[x + d[0]][y + d[1]] += 1\n    if s == 3:\n        for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n            a[x + d[0]][y + d[1]] += 1\nprint(sum(a[i][2:12].count(0) for i in range(2, 12)))\nprint(max(max(a[i][2:12]) for i in range(2, 12)))",
        "origin_generated_text": "\n```\na = [[0] * 14 for _ in range(14)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    x += 2\n    y += 2\n    for d in [(0, 0), (0, -1), (0, 1), (-1, 0), (1, 0)]:\n        a[x + d[0]][y + d[1]] += 1\n    if s >= 2:\n        for d in [(1, 1), (1, -1), (-1, 1), (-1, -1)]:\n            a[x + d[0]][y + d[1]] += 1\n    if s == 3:\n        for d in [(0, 2), (0, -2), (2, 0), (-2, 0)]:\n            a[x + d[0]][y + d[1]] += 1\nprint(sum(a[i][2:12].count(0) for i in range(2, 12)))\nprint(max(max(a[i][2:12]) for i in range(2, 12)))```\n "
    },
    {
        "user_id": "u890638336",
        "problem_id": "p03080",
        "submission1_id": "s448965474",
        "code_content": "\nN = input()\ns = input()\n \nN1 = int(N)/2\n \nimport math\n \nlist_s = list(s)\nlist_s.sort()\nX = list_s[N1]\n \nif X=='R':\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN = input()\ns = input()\n \nN1 = int(N)/2\n \nimport math\n \nlist_s = list(s)\nlist_s.sort()\nX = list_s[N1]\n \nif X=='R':\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u156815136",
        "problem_id": "p02580",
        "submission1_id": "s472949111",
        "code_content": "\n```\n\n\n\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product \n\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n\n\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nH,W,M = readInts()\n\ndic1 = defaultdict(lambda:0)\ndic2 = defaultdict(lambda:0)\ns = set()\nfor i in range(M):\n    h,w = map(lambda x:int(x)-1, input().split())\n    dic1[h] += 1\n    dic2[w] += 1\n    s.add((h,w))\n\nans = 0\n\n\n\n\n\nfor h,w in s:\n    ans = max(ans, dic1[h] + dic2[w] - 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\n\n\n\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product \n\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n\n\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nH,W,M = readInts()\n\ndic1 = defaultdict(lambda:0)\ndic2 = defaultdict(lambda:0)\ns = set()\nfor i in range(M):\n    h,w = map(lambda x:int(x)-1, input().split())\n    dic1[h] += 1\n    dic2[w] += 1\n    s.add((h,w))\n\nans = 0\n\n\n\n\n\nfor h,w in s:\n    ans = max(ans, dic1[h] + dic2[w] - 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u283452598",
        "problem_id": "p02385",
        "submission1_id": "s219857482",
        "code_content": "\nclass Dice():\n    def __init__(self,ary):\n        self.top = ary[0]\n        self.south = ary[1]\n        self.east = ary[2]\n        self.west = ary[3]\n        self.north = ary[4]\n        self.bottom = ary[5]\n\n    def get_top(self):\n        return self.top\n\n    def rotate_north(self):\n        self.top,self.south,self.north,self.bottom = self.south,self.bottom,self.top,self.north\n    \n    def rotate_south(self):\n        self.top,self.south,self.north,self.bottom = self.north,self.top,self.bottom,self.south\n\n    def rotate_west(self):\n        self.top,self.west,self.bottom,self.east = self.east,self.top,self.west,self.bottom\n\n    def rotate_east(self):\n        self.top,self.west,self.bottom,self.east = self.west,self.bottom,self.east,self.top\n\n    def rotate_horizon(self):\n        self.south,self.east,self.north,self.west = self.west,self.south,self.east,self.north\n\n    def get_east(self):\n        return self.east\n        \ndice1 = Dice(list(map(int,input().split())))\ndice2 = Dice(list(map(int,input().split())))\n\nh=\"\"\n\nfor i in range(4):\n    dice2.rotate_west()\n    if dice1.top == dice2.top:\n        for _ in range(4):\n            dice2.rotate_horizon()\n            if dice1.south == dice2.south:\n                if dice1.east == dice2.east or dice1.east == dice2.north:\n                    h = \"Yes\"\nfor _ in range(4):\n    dice2.rotate_north()\n    if dice1.top == dice2.top:\n        for m in range(4):\n            dice2.rotate_horizon()\n            if dice1.south == dice2.south:\n                if dice1.east == dice2.east or dice1.east == dice2.north:\n                    h = \"Yes\"\nif h:\n    print(h)\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nclass Dice():\n    def __init__(self,ary):\n        self.top = ary[0]\n        self.south = ary[1]\n        self.east = ary[2]\n        self.west = ary[3]\n        self.north = ary[4]\n        self.bottom = ary[5]\n\n    def get_top(self):\n        return self.top\n\n    def rotate_north(self):\n        self.top,self.south,self.north,self.bottom = self.south,self.bottom,self.top,self.north\n    \n    def rotate_south(self):\n        self.top,self.south,self.north,self.bottom = self.north,self.top,self.bottom,self.south\n\n    def rotate_west(self):\n        self.top,self.west,self.bottom,self.east = self.east,self.top,self.west,self.bottom\n\n    def rotate_east(self):\n        self.top,self.west,self.bottom,self.east = self.west,self.bottom,self.east,self.top\n\n    def rotate_horizon(self):\n        self.south,self.east,self.north,self.west = self.west,self.south,self.east,self.north\n\n    def get_east(self):\n        return self.east\n        \ndice1 = Dice(list(map(int,input().split())))\ndice2 = Dice(list(map(int,input().split())))\n\nh=\"\"\n\nfor i in range(4):\n    dice2.rotate_west()\n    if dice1.top == dice2.top:\n        for _ in range(4):\n            dice2.rotate_horizon()\n            if dice1.south == dice2.south:\n                if dice1.east == dice2.east or dice1.east == dice2.north:\n                    h = \"Yes\"\nfor _ in range(4):\n    dice2.rotate_north()\n    if dice1.top == dice2.top:\n        for m in range(4):\n            dice2.rotate_horizon()\n            if dice1.south == dice2.south:\n                if dice1.east == dice2.east or dice1.east == dice2.north:\n                    h = \"Yes\"\nif h:\n    print(h)\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03200",
        "submission1_id": "s832538383",
        "code_content": "\n\nimport sys, math, fractions, itertools, collections, copy, heapq\n\n\ndef solve(S: str):\n    counter = 0\n    tmp = 0\n    for s in S:\n        if s == 'B':\n            tmp += 1\n        else:\n            counter += 2 * tmp\n            tmp = 0\n    counter += 2 * tmp\n    print(counter)\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S = next(tokens)  \n    solve(S)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys, math, fractions, itertools, collections, copy, heapq\n\n\ndef solve(S: str):\n    counter = 0\n    tmp = 0\n    for s in S:\n        if s == 'B':\n            tmp += 1\n        else:\n            counter += 2 * tmp\n            tmp = 0\n    counter += 2 * tmp\n    print(counter)\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S = next(tokens)  \n    solve(S)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03626",
        "submission1_id": "s956560642",
        "code_content": "\nN = int(input())\ns1 = input()\ns2 = input()\n\nMOD = int(1e9) + 7\n\ntate = \"tate\"\nyoko = \"yoko\"\n\ni = 0\nans = 0\npre = \"\"\nif s1[i] == s2[i]:\n    ans = 3\n    i += 1\n    pre = tate\nelse:\n    ans = 6\n    i += 2\n    pre = yoko\n\nwhile i < N:\n    if s1[i] == s2[i]:\n        if pre == tate:\n            ans *= 2\n        elif pre == yoko:\n            ans *= 1\n        i += 1\n        pre = tate\n    else:\n        if pre == tate:\n            ans *= 2\n        elif pre == yoko:\n            ans *= 2\n            ans %= MOD\n        i += 2\n        pre = yoko\n    ans %= MOD\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\ns1 = input()\ns2 = input()\n\nMOD = int(1e9) + 7\n\ntate = \"tate\"\nyoko = \"yoko\"\n\ni = 0\nans = 0\npre = \"\"\nif s1[i] == s2[i]:\n    ans = 3\n    i += 1\n    pre = tate\nelse:\n    ans = 6\n    i += 2\n    pre = yoko\n\nwhile i < N:\n    if s1[i] == s2[i]:\n        if pre == tate:\n            ans *= 2\n        elif pre == yoko:\n            ans *= 1\n        i += 1\n        pre = tate\n    else:\n        if pre == tate:\n            ans *= 2\n        elif pre == yoko:\n            ans *= 2\n            ans %= MOD\n        i += 2\n        pre = yoko\n    ans %= MOD\nprint(ans)\n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03300",
        "submission1_id": "s550101020",
        "code_content": "\nfrom itertools import accumulate\n\n\ndef search_ab(sss, cursor):\n    \n    ai = aaa.index(cursor)\n    tmp_cur = bbb[ai]\n    max_cur = sss.index(0, cursor)\n    repeat = 1\n    while tmp_cur < max_cur:\n        cur = s.find('a', tmp_cur, max_cur)\n        if cur == -1:\n            break\n        ai = aaa.index(cur, ai)\n        tmp_cur = bbb[ai]\n        repeat += 1\n    return repeat, max_cur + 1\n\n\ndef search_ba(sss, cursor):\n    \n    first_bi = bbb.index(cursor)\n    max_cursor = sss.index(0, cursor)\n    last_bi = aaa.index(max_cursor)\n\n    tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n    tmp_max = ''\n    for i in range(last_bi, first_bi - 1, -1):\n        tmp_buf[aaa[i] - cursor] = 'a'\n        tmp_buf[bbb[i] - cursor] = 'b'\n        tmp = ''.join(tmp_buf)\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max, max_cursor + 1\n\n\ndef integrate(parts_b):\n    tmp_max = ''\n    for pb in reversed(parts_b):\n        tmp = pb + tmp_max\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max\n\n\nn = int(input())\ns = input()\n\nn2 = n * 2\nsss = []\naaa, bbb = [], []\nfor i, c in enumerate(s):\n    if c == 'a':\n        aaa.append(i)\n        sss.append(-1)\n    else:\n        bbb.append(i)\n        sss.append(1)\nsss = list(accumulate(sss))\nrepeat_a = 0\nrepeat_b = 0\nparts_b = []\ncursor = 0\nwhile cursor < n2:\n    c = sss[cursor]\n    if c < 0:\n        repeat, cursor = search_ab(sss, cursor)\n        repeat_a += repeat\n    else:\n        tmp, cursor = search_ba(sss, cursor)\n        parts_b.append(tmp)\n\nif parts_b:\n    print(integrate(parts_b))\nelse:\n    print('ab' * repeat_a)\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\n\ndef search_ab(sss, cursor):\n    \n    ai = aaa.index(cursor)\n    tmp_cur = bbb[ai]\n    max_cur = sss.index(0, cursor)\n    repeat = 1\n    while tmp_cur < max_cur:\n        cur = s.find('a', tmp_cur, max_cur)\n        if cur == -1:\n            break\n        ai = aaa.index(cur, ai)\n        tmp_cur = bbb[ai]\n        repeat += 1\n    return repeat, max_cur + 1\n\n\ndef search_ba(sss, cursor):\n    \n    first_bi = bbb.index(cursor)\n    max_cursor = sss.index(0, cursor)\n    last_bi = aaa.index(max_cursor)\n\n    tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n    tmp_max = ''\n    for i in range(last_bi, first_bi - 1, -1):\n        tmp_buf[aaa[i] - cursor] = 'a'\n        tmp_buf[bbb[i] - cursor] = 'b'\n        tmp = ''.join(tmp_buf)\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max, max_cursor + 1\n\n\ndef integrate(parts_b):\n    tmp_max = ''\n    for pb in reversed(parts_b):\n        tmp = pb + tmp_max\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max\n\n\nn = int(input())\ns = input()\n\nn2 = n * 2\nsss = []\naaa, bbb = [], []\nfor i, c in enumerate(s):\n    if c == 'a':\n        aaa.append(i)\n        sss.append(-1)\n    else:\n        bbb.append(i)\n        sss.append(1)\nsss = list(accumulate(sss))\nrepeat_a = 0\nrepeat_b = 0\nparts_b = []\ncursor = 0\nwhile cursor < n2:\n    c = sss[cursor]\n    if c < 0:\n        repeat, cursor = search_ab(sss, cursor)\n        repeat_a += repeat\n    else:\n        tmp, cursor = search_ba(sss, cursor)\n        parts_b.append(tmp)\n\nif parts_b:\n    print(integrate(parts_b))\nelse:\n    print('ab' * repeat_a)\n```\n "
    },
    {
        "user_id": "u172035535",
        "problem_id": "p03274",
        "submission1_id": "s320337327",
        "code_content": "\nN,K = map(int,input().split())\nX = list(map(int,input().split()))\nans = 10**9\nfor i in range(N-K+1):\n    ans = min(ans,abs(X[i])+abs(X[i+K-1])+max(abs(X[i]),abs(X[i+K-1])))\nprint(ans)",
        "origin_generated_text": "\n```\nN,K = map(int,input().split())\nX = list(map(int,input().split()))\nans = 10**9\nfor i in range(N-K+1):\n    ans = min(ans,abs(X[i])+abs(X[i+K-1])+max(abs(X[i]),abs(X[i+K-1])))\nprint(ans)```\n "
    },
    {
        "user_id": "u742729271",
        "problem_id": "p03760",
        "submission1_id": "s524083743",
        "code_content": "\nO = input()\nE = input()\nans = \"\"\nfor i in range(len(E)):\n  ans+=O[i]\n  ans+=E[i]\n  \nif len(O)%2==0:\n  ans+=O[len(O)-1]\n\nprint(ans)",
        "origin_generated_text": "\n```\nO = input()\nE = input()\nans = \"\"\nfor i in range(len(E)):\n  ans+=O[i]\n  ans+=E[i]\n  \nif len(O)%2==0:\n  ans+=O[len(O)-1]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u350064373",
        "problem_id": "p02407",
        "submission1_id": "s813263493",
        "code_content": "\ninput()\nlist1 = list(map(int, input().split()))\nlist1.reverse()\nresult=\"\"\nfor i in range(0,len(list1)):\n    result += str(list1[i])+\" \"\nprint(result[:-1])",
        "origin_generated_text": "\n```\ninput()\nlist1 = list(map(int, input().split()))\nlist1.reverse()\nresult=\"\"\nfor i in range(0,len(list1)):\n    result += str(list1[i])+\" \"\nprint(result[:-1])```\n "
    },
    {
        "user_id": "u277353449",
        "problem_id": "p02959",
        "submission1_id": "s197264580",
        "code_content": "\nN=int(input())\na=input().split()\nb=input().split()\nfor i in range(0,N):\n  a[i]=int(a[i])\n  b[i]=int(b[i])\na[N]=int(a[N])\nanswer=sum(a)\nfor i in range(0,N):\n    c=b[i]-a[i]\n    if c<0:\n        a[i]=-c\n        b[i]=0\n    else:\n        a[i]=0\n        b[i]=c\n    d=b[i]-a[i+1]\n    if d<0:\n        a[i+1]=-d\n        b[i]=0\n    else:\n        a[i+1]=0\n        b[i]=d\nprint (answer-sum(a))",
        "origin_generated_text": "\n```\nN=int(input())\na=input().split()\nb=input().split()\nfor i in range(0,N):\n  a[i]=int(a[i])\n  b[i]=int(b[i])\na[N]=int(a[N])\nanswer=sum(a)\nfor i in range(0,N):\n    c=b[i]-a[i]\n    if c<0:\n        a[i]=-c\n        b[i]=0\n    else:\n        a[i]=0\n        b[i]=c\n    d=b[i]-a[i+1]\n    if d<0:\n        a[i+1]=-d\n        b[i]=0\n    else:\n        a[i+1]=0\n        b[i]=d\nprint (answer-sum(a))```\n "
    },
    {
        "user_id": "u374935093",
        "problem_id": "p02660",
        "submission1_id": "s905812546",
        "code_content": "\nimport math\ndata = input()\ntarget = int(data)\n\ndef primes(n):\n    is_prime = [True] * (n + 1)\n    is_prime[0] = False\n    is_prime[1] = False\n    for i in range(2, int(n**0.5) + 1):\n        if not is_prime[i]:\n            continue\n        for j in range(i * 2, n + 1, i):\n            is_prime[j] = False\n    return [i for i in range(n + 1) if is_prime[i]]\n\nlist = primes(1000000000)\nresult =[]\nfor i in list:\n    check = target\n    k = 0\n    while True:\n        if check % i != 0:\n            break\n        else:\n            check = check/i\n            k +=1\n    result.append(k)\n\nans = 0\nfor j in result:\n    y = 0\n    z = j\n    while z > y:\n        y += 1\n        z -= y\n    ans +=y\nprint(ans)",
        "origin_generated_text": "\n```\nimport math\ndata = input()\ntarget = int(data)\n\ndef primes(n):\n    is_prime = [True] * (n + 1)\n    is_prime[0] = False\n    is_prime[1] = False\n    for i in range(2, int(n**0.5) + 1):\n        if not is_prime[i]:\n            continue\n        for j in range(i * 2, n + 1, i):\n            is_prime[j] = False\n    return [i for i in range(n + 1) if is_prime[i]]\n\nlist = primes(1000000000)\nresult =[]\nfor i in list:\n    check = target\n    k = 0\n    while True:\n        if check % i != 0:\n            break\n        else:\n            check = check/i\n            k +=1\n    result.append(k)\n\nans = 0\nfor j in result:\n    y = 0\n    z = j\n    while z > y:\n        y += 1\n        z -= y\n    ans +=y\nprint(ans)```\n "
    },
    {
        "user_id": "u446711904",
        "problem_id": "p03729",
        "submission1_id": "s271837643",
        "code_content": "\na,b,c=input().split();print('NYoe s'[a[-1]==b[0] and b[-1]==c[0]::2]+'NYoe s'[a[-1]!=b[0] or b[-1]!=c[0]::2])",
        "origin_generated_text": "\n```\na,b,c=input().split();print('NYoe s'[a[-1]==b[0] and b[-1]==c[0]::2]+'NYoe s'[a[-1]!=b[0] or b[-1]!=c[0]::2])```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s150260949",
        "code_content": "\nh,w,n=[int(j) for j in input().split()]\nr,c=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=r\nfor i in range(n):\n    if s[i]==\"R\":\n        x+=1\n    if t[i]==\"L\" and x>1:\n        x-=1\n    if not 1<=x<=h:\n        print(\"NO\")\n        exit()\n\n\nx=r\nfor i in range(n):\n    if s[i]==\"L\":\n        x-=1\n    if t[i]==\"R\" and x<w:\n        x+=1\n    if not 1<=x<=w:\n        print(\"NO\")\n        exit()\n\n\nx=c\nfor i in range(n):\n    if s[i]==\"U\":\n        x+=1\n    if t[i]==\"D\" and x>1:\n        x-=1\n    if not 1<=x<=h:\n        print(\"NO\")\n        exit()\n\n\nx=c\nfor i in range(n):\n    if s[i]==\"D\":\n        x-=1\n    if t[i]==\"U\" and x<w:\n        x+=1\n    if not 1<=x<=w:\n        print(\"NO\")\n        exit()\nprint(\"YES\")",
        "origin_generated_text": "\n```\nh,w,n=[int(j) for j in input().split()]\nr,c=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=r\nfor i in range(n):\n    if s[i]==\"R\":\n        x+=1\n    if t[i]==\"L\" and x>1:\n        x-=1\n    if not 1<=x<=h:\n        print(\"NO\")\n        exit()\n\n\nx=r\nfor i in range(n):\n    if s[i]==\"L\":\n        x-=1\n    if t[i]==\"R\" and x<w:\n        x+=1\n    if not 1<=x<=w:\n        print(\"NO\")\n        exit()\n\n\nx=c\nfor i in range(n):\n    if s[i]==\"U\":\n        x+=1\n    if t[i]==\"D\" and x>1:\n        x-=1\n    if not 1<=x<=h:\n        print(\"NO\")\n        exit()\n\n\nx=c\nfor i in range(n):\n    if s[i]==\"D\":\n        x-=1\n    if t[i]==\"U\" and x<w:\n        x+=1\n    if not 1<=x<=w:\n        print(\"NO\")\n        exit()\nprint(\"YES\")```\n "
    },
    {
        "user_id": "u761529120",
        "problem_id": "p03625",
        "submission1_id": "s915349997",
        "code_content": "\nimport collections\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    \n    B = collections.Counter(A)\n\n    c = []\n\n    for k, v in B.items():\n        if v >= 2:\n            c.append(k)\n        if v >= 4:\n            c.append(k)\n    if len(c) < 2:\n        print(0)\n    else:\n        c.sort()\n        print(c[-1] * c[-2])\n\nmain()",
        "origin_generated_text": "\n```\nimport collections\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    \n    B = collections.Counter(A)\n\n    c = []\n\n    for k, v in B.items():\n        if v >= 2:\n            c.append(k)\n        if v >= 4:\n            c.append(k)\n    if len(c) < 2:\n        print(0)\n    else:\n        c.sort()\n        print(c[-1] * c[-2])\n\nmain()```\n "
    },
    {
        "user_id": "u056801547",
        "problem_id": "p02914",
        "submission1_id": "s095687594",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\na.append(0)\nfor i in range(n+1):\n    a[n] ^= a[i]\n    \n    \nr = 0\nfor i in range(60,-1,-1):\n    for j in range(r,n+1):\n        if (a[j] >> i) & 1:\n            a[r], a[j] = a[j], a[r]\n            break\n    else:\n        continue\n        \n    for j in range(n+1):\n        if (a[j] == a[r]):\n            continue\n        if (a[j]>>i) & 1:\n            a[j] ^= a[r]\n    r+=1\ns = 0\nfor i in range(n+1):\n    s ^= a[i]\n    \nprint(s*2 + a[n+1])",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\na.append(0)\nfor i in range(n+1):\n    a[n] ^= a[i]\n    \n    \nr = 0\nfor i in range(60,-1,-1):\n    for j in range(r,n+1):\n        if (a[j] >> i) & 1:\n            a[r], a[j] = a[j], a[r]\n            break\n    else:\n        continue\n        \n    for j in range(n+1):\n        if (a[j] == a[r]):\n            continue\n        if (a[j]>>i) & 1:\n            a[j] ^= a[r]\n    r+=1\ns = 0\nfor i in range(n+1):\n    s ^= a[i]\n    \nprint(s*2 + a[n+1])```\n "
    },
    {
        "user_id": "u675168568",
        "problem_id": "p02640",
        "submission1_id": "s008752760",
        "code_content": "\nx, y = map(int, input().split())\n\nif (2*x >= y and y%4 == 0):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\n\nif (2*x >= y and y%4 == 0):\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u379956761",
        "problem_id": "p00023",
        "submission1_id": "s999323619",
        "code_content": "\nimport sys\nimport math\n\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n\n    distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n    if ra + rb >= distance:\n        if (ra < rb and distance + ra <= rb):\n            print(-2)\n        elif (rb < ra and distance + rb <= ra):\n            print(2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nimport sys\nimport math\n\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n\n    distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n    if ra + rb >= distance:\n        if (ra < rb and distance + ra <= rb):\n            print(-2)\n        elif (rb < ra and distance + rb <= ra):\n            print(2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u914773681",
        "problem_id": "p03102",
        "submission1_id": "s905156945",
        "code_content": "\ndef main():\n    N, M, C = map(int, input().split())\n    B = list(map(int, input().split())) \n    A = [[] for i in range(N)]\n    for i in range(N):\n        A[i] = list(map(int, input().split()))\n    num = 0\n    for i in range(N):\n        sum = 0\n        for j in range(M):\n            sum = sum + A[i][j]*B[j]\n        result = sum + C\n        if (result > 0 ):\n            num = num + 1\n    print(num)\n    return num\n\nmain()",
        "origin_generated_text": "\n```\ndef main():\n    N, M, C = map(int, input().split())\n    B = list(map(int, input().split())) \n    A = [[] for i in range(N)]\n    for i in range(N):\n        A[i] = list(map(int, input().split()))\n    num = 0\n    for i in range(N):\n        sum = 0\n        for j in range(M):\n            sum = sum + A[i][j]*B[j]\n        result = sum + C\n        if (result > 0 ):\n            num = num + 1\n    print(num)\n    return num\n\nmain()```\n "
    },
    {
        "user_id": "u583014981",
        "problem_id": "p03079",
        "submission1_id": "s296378527",
        "code_content": "\ndef regtri(a, b, c):\n    if a == b and b == c:\n        return 'Yes'\n    else:\n        return 'No'\n \na, b, c = (int(i) for i in input().split())\nprint(regtri(a, b, c))",
        "origin_generated_text": "\n```\ndef regtri(a, b, c):\n    if a == b and b == c:\n        return 'Yes'\n    else:\n        return 'No'\n \na, b, c = (int(i) for i in input().split())\nprint(regtri(a, b, c))```\n "
    },
    {
        "user_id": "u413165887",
        "problem_id": "p03096",
        "submission1_id": "s008414950",
        "code_content": "\nn = int(input())\nc = [int(input()) for _i in range(n)]\nmod = 10**9+7\ndic = {}\ndp = [0 for _i in range(n+1)]\ndp[0] = 1\nfor i in range(1, n+1):\n    if c[i-1] != c[i]:\n        if c[i] in dic:\n            dp[i] += dic[c[i]]\n            dic[c[i]] += dp[i-1]\n        else:\n            dic[c[i]] = dp[i-1] + 1\n    dp[i] %= mod\nprint(dp[n])",
        "origin_generated_text": "\n```\nn = int(input())\nc = [int(input()) for _i in range(n)]\nmod = 10**9+7\ndic = {}\ndp = [0 for _i in range(n+1)]\ndp[0] = 1\nfor i in range(1, n+1):\n    if c[i-1] != c[i]:\n        if c[i] in dic:\n            dp[i] += dic[c[i]]\n            dic[c[i]] += dp[i-1]\n        else:\n            dic[c[i]] = dp[i-1] + 1\n    dp[i] %= mod\nprint(dp[n])```\n "
    },
    {
        "user_id": "u964299793",
        "problem_id": "p03764",
        "submission1_id": "s992132203",
        "code_content": "\nmod=10**9+7\nn,m=map(int,input().split())\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\nansx=0\ncum=x[0]\nfor i in range(1,n):\n    ansx+=(i*x[i]-cum+mod)%mod\n    ansx%=mod\n    cum+=x[i]\nansy=0\ncum=y[0]\nfor i in range(1,m):\n    ansy+=(i*y[i]-cum+mod)%mod\n    ansy%=mod\n    cum+=y[i]\nprint((ansx*ansy)%mod)\n",
        "origin_generated_text": "\n```\nmod=10**9+7\nn,m=map(int,input().split())\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\nansx=0\ncum=x[0]\nfor i in range(1,n):\n    ansx+=(i*x[i]-cum+mod)%mod\n    ansx%=mod\n    cum+=x[i]\nansy=0\ncum=y[0]\nfor i in range(1,m):\n    ansy+=(i*y[i]-cum+mod)%mod\n    ansy%=mod\n    cum+=y[i]\nprint((ansx*ansy)%mod)\n```\n "
    },
    {
        "user_id": "u766163292",
        "problem_id": "p02297",
        "submission1_id": "s238896185",
        "code_content": "\n\n\nimport cmath\n\n\ndef outer_product(v1, v2):\n    return v1.real * v2.imag - v1.imag * v2.real\n\n\ndef area_polygon(n, points):\n    points.sort(key=lambda p: p.real)\n    s = sum(outer_product(points[i], points[(i + 1) % n])\n            for i in range(n)) / 2.0\n    return s\n\n\ndef main():\n    n = int(input())\n    ps = [complex(*map(float, input().split())) for _ in range(n)]\n    s = area_polygon(n, ps)\n    print(\"{:.1f}\".format(s))\n\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\n\n\nimport cmath\n\n\ndef outer_product(v1, v2):\n    return v1.real * v2.imag - v1.imag * v2.real\n\n\ndef area_polygon(n, points):\n    points.sort(key=lambda p: p.real)\n    s = sum(outer_product(points[i], points[(i + 1) % n])\n            for i in range(n)) / 2.0\n    return s\n\n\ndef main():\n    n = int(input())\n    ps = [complex(*map(float, input().split())) for _ in range(n)]\n    s = area_polygon(n, ps)\n    print(\"{:.1f}\".format(s))\n\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u705038083",
        "problem_id": "p03477",
        "submission1_id": "s644566964",
        "code_content": "\ns = input()\n\nslist = s.split(\" \")\n\nleft = int(slist[0]) + int(slist[1])\n\nright = int(slist[2]) + int(slist[3])\n\nif left > right:\n    print(\"Left\")\n\t\nelif left == right:\n    print(\"Balanced\")\n\t\nelse:\n    print(\"Right\")\n",
        "origin_generated_text": "\n```\ns = input()\n\nslist = s.split(\" \")\n\nleft = int(slist[0]) + int(slist[1])\n\nright = int(slist[2]) + int(slist[3])\n\nif left > right:\n    print(\"Left\")\n\t\nelif left == right:\n    print(\"Balanced\")\n\t\nelse:\n    print(\"Right\")\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s341674725",
        "code_content": "\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)",
        "origin_generated_text": "\n```\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)```\n "
    },
    {
        "user_id": "u807028974",
        "problem_id": "p03102",
        "submission1_id": "s045672234",
        "code_content": "\nN,M,C = map(int,input().split())\nB = input().split()\nAnm = []\nfor i in range(N):\n    Anm.append(input().split())\ncont = 0\nfor A in Anm:\n    c = C\n    for i in range(M):\n        c += int(A[i]) * int(B[i])\n    if c > 0:\n        cont += 1\nprint(cont)",
        "origin_generated_text": "\n```\nN,M,C = map(int,input().split())\nB = input().split()\nAnm = []\nfor i in range(N):\n    Anm.append(input().split())\ncont = 0\nfor A in Anm:\n    c = C\n    for i in range(M):\n        c += int(A[i]) * int(B[i])\n    if c > 0:\n        cont += 1\nprint(cont)```\n "
    },
    {
        "user_id": "u450145303",
        "problem_id": "p03760",
        "submission1_id": "s438272932",
        "code_content": "\no = input()\ne = input()\nfor i,a in enumerate(o):\n    for j,b in enumerate(e):\n        if(i == j):\n            print(a + b, end = '')\n    if i == len(o) - 1 and i != 0:\n        print(a)\n",
        "origin_generated_text": "\n```\no = input()\ne = input()\nfor i,a in enumerate(o):\n    for j,b in enumerate(e):\n        if(i == j):\n            print(a + b, end = '')\n    if i == len(o) - 1 and i != 0:\n        print(a)\n```\n "
    },
    {
        "user_id": "u366644013",
        "problem_id": "p03943",
        "submission1_id": "s181801980",
        "code_content": "\nna = lambda: list(map(int, input().split()))\na, b, c = na()\nif a + b == c or b + c == a or c + a == b:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nna = lambda: list(map(int, input().split()))\na, b, c = na()\nif a + b == c or b + c == a or c + a == b:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u427344224",
        "problem_id": "p03625",
        "submission1_id": "s817431784",
        "code_content": "\nfrom collections import Counter\nN = int(input())\nA_list = list(map(int, input().split()))\ncounter = Counter(A_list)\ncounter = sorted(counter.items(), key=lambda x: -x[0])\n\nlong_side = 0\nshort_side = 0\nchoice = 0\n\nfor k, v in counter:\n    if v % 2 == 0 and choice == 0:\n        long_side = k\n        short_side = k\n        choice = 4\n\n    elif v >= 2:\n        if choice == 2:\n            short_side = k\n            choice = 4\n        else:\n            long_side = k\n            choice = 2\n\n    if choice == 4:\n        print(long_side*short_side)\n        exit()\nprint(0)",
        "origin_generated_text": "\n```\nfrom collections import Counter\nN = int(input())\nA_list = list(map(int, input().split()))\ncounter = Counter(A_list)\ncounter = sorted(counter.items(), key=lambda x: -x[0])\n\nlong_side = 0\nshort_side = 0\nchoice = 0\n\nfor k, v in counter:\n    if v % 2 == 0 and choice == 0:\n        long_side = k\n        short_side = k\n        choice = 4\n\n    elif v >= 2:\n        if choice == 2:\n            short_side = k\n            choice = 4\n        else:\n            long_side = k\n            choice = 2\n\n    if choice == 4:\n        print(long_side*short_side)\n        exit()\nprint(0)```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p04019",
        "submission1_id": "s502210307",
        "code_content": "\na = list(input())\nprint(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")",
        "origin_generated_text": "\n```\na = list(input())\nprint(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")```\n "
    },
    {
        "user_id": "u997113115",
        "problem_id": "p03087",
        "submission1_id": "s850352580",
        "code_content": "\nN, Q = map(int, input().split())\nS = input()\nflag = True\nR = [0]*N\na = 0\nfor i in range(N):\n    s = S[i]\n    if s == \"A\":\n        flag = True\n    elif s == \"C\" and flag:\n        a += 1\n        flag = False\n    else:\n        flag = False\n    R[i] = a\nfor i in range(Q):\n    l, r = map(int, input().split())\n    print(R[r-1] - R[l-1])\n",
        "origin_generated_text": "\n```\nN, Q = map(int, input().split())\nS = input()\nflag = True\nR = [0]*N\na = 0\nfor i in range(N):\n    s = S[i]\n    if s == \"A\":\n        flag = True\n    elif s == \"C\" and flag:\n        a += 1\n        flag = False\n    else:\n        flag = False\n    R[i] = a\nfor i in range(Q):\n    l, r = map(int, input().split())\n    print(R[r-1] - R[l-1])\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s121069384",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent-1])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent-1])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u114860785",
        "problem_id": "p00006",
        "submission1_id": "s963627881",
        "code_content": "\nprint(input()[::-1])\n",
        "origin_generated_text": "\n```\nprint(input()[::-1])\n```\n "
    },
    {
        "user_id": "u372345564",
        "problem_id": "p03613",
        "submission1_id": "s732139941",
        "code_content": "\ndef main():\n    N =  int(input())\n    a = [int(i) for i in input().split()]\n    \n    \n    \n    count_ = [0] * ( max(a)+2 )\n    \n    \n    \n    \n    \n    for num in a:\n        if(num-1 >= 0):\n            count_[num-1] += 1\n            count_[num] += 1\n        else:\n            count_[num] += 1\n    \n    \n    print(max(count_))\n    \nif __name__==\"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    N =  int(input())\n    a = [int(i) for i in input().split()]\n    \n    \n    \n    count_ = [0] * ( max(a)+2 )\n    \n    \n    \n    \n    \n    for num in a:\n        if(num-1 >= 0):\n            count_[num-1] += 1\n            count_[num] += 1\n        else:\n            count_[num] += 1\n    \n    \n    print(max(count_))\n    \nif __name__==\"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u332253305",
        "problem_id": "p02767",
        "submission1_id": "s217093646",
        "code_content": "\nn=int(input())\nx=list(map(int,input().split()))\nans=x[0]\nfor i in x:\n    ans+=i\nans=int(ans/n)\nv=0\nfor i in x:\n    v+=(i-ans)**2\nprint(v)\n",
        "origin_generated_text": "\n```\nn=int(input())\nx=list(map(int,input().split()))\nans=x[0]\nfor i in x:\n    ans+=i\nans=int(ans/n)\nv=0\nfor i in x:\n    v+=(i-ans)**2\nprint(v)\n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p02962",
        "submission1_id": "s550920381",
        "code_content": "\ndef rolling_hash(s, w, MOD):\n    ret = []\n    tmp = 0\n    p = pow(26, w, MOD)\n    ords = [ord(c) - 97 for c in s]\n    for i, o in enumerate(ords):\n        tmp = tmp * 26 + o\n        if i >= w:\n            tmp = (tmp - ords[i - w] * p)\n        tmp %= MOD\n        ret.append(tmp)\n    return ret\n\n\ndef solve(s, t):\n    MOD = 10 ** 9 + 7\n    ls, lt = len(s), len(t)\n    k = (lt - 1) \n    s *= k * 2\n    ls *= k\n    rs, rt = rolling_hash(s, lt, MOD), rolling_hash(t, lt, MOD)\n    rs = rs[ls:]\n    ht = rt[-1]\n\n    checked = [-1] * ls\n\n    def series(i, st):\n        if i == st:\n            return float('-inf')\n        if checked[i] == -1:\n            checked[i] = series((i + lt) % ls, st) + 1 if rs[i] == ht else 0\n        return checked[i]\n\n    for i, hs in enumerate(rs):\n        if hs != ht:\n            continue\n        ret = series((i + lt) % ls, i)\n        if ret == float('-inf'):\n            return -1\n        checked[i] = ret + 1\n\n    return max(0, max(checked))\n\n\ns = input()\nt = input()\nprint(solve(s, t))\n",
        "origin_generated_text": "\n```\ndef rolling_hash(s, w, MOD):\n    ret = []\n    tmp = 0\n    p = pow(26, w, MOD)\n    ords = [ord(c) - 97 for c in s]\n    for i, o in enumerate(ords):\n        tmp = tmp * 26 + o\n        if i >= w:\n            tmp = (tmp - ords[i - w] * p)\n        tmp %= MOD\n        ret.append(tmp)\n    return ret\n\n\ndef solve(s, t):\n    MOD = 10 ** 9 + 7\n    ls, lt = len(s), len(t)\n    k = (lt - 1) \n    s *= k * 2\n    ls *= k\n    rs, rt = rolling_hash(s, lt, MOD), rolling_hash(t, lt, MOD)\n    rs = rs[ls:]\n    ht = rt[-1]\n\n    checked = [-1] * ls\n\n    def series(i, st):\n        if i == st:\n            return float('-inf')\n        if checked[i] == -1:\n            checked[i] = series((i + lt) % ls, st) + 1 if rs[i] == ht else 0\n        return checked[i]\n\n    for i, hs in enumerate(rs):\n        if hs != ht:\n            continue\n        ret = series((i + lt) % ls, i)\n        if ret == float('-inf'):\n            return -1\n        checked[i] = ret + 1\n\n    return max(0, max(checked))\n\n\ns = input()\nt = input()\nprint(solve(s, t))\n```\n "
    },
    {
        "user_id": "u869595612",
        "problem_id": "p03023",
        "submission1_id": "s241709362",
        "code_content": "\nprint(-(int(input())-2)*180)",
        "origin_generated_text": "\n```\nprint(-(int(input())-2)*180)```\n "
    },
    {
        "user_id": "u217303170",
        "problem_id": "p03729",
        "submission1_id": "s411383758",
        "code_content": "\na, b, c = input().split()\nif a[-1] == b[0] and b[-1] == c[0]:\n    print('YES')\nelse:\n    print('NO')\n",
        "origin_generated_text": "\n```\na, b, c = input().split()\nif a[-1] == b[0] and b[-1] == c[0]:\n    print('YES')\nelse:\n    print('NO')\n```\n "
    },
    {
        "user_id": "u126844573",
        "problem_id": "p03416",
        "submission1_id": "s171390200",
        "code_content": "\nA, B = map(int, input().split())\n\ncount = 0\nfor q in range(A, B+1):\n    if str(q)[:len(str(q))\n        count += 1\nprint(count)\n",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\n\ncount = 0\nfor q in range(A, B+1):\n    if str(q)[:len(str(q))\n        count += 1\nprint(count)\n```\n "
    },
    {
        "user_id": "u093129359",
        "problem_id": "p03102",
        "submission1_id": "s752612514",
        "code_content": "\nn,m,c=map(int,input().split())\nb= [int(x) for x in input().split()]\nans=0\n\nfor i in range(n):\n    a=[int(x)*y for x,y in zip(input().split(),b)]\n    s=sum(a)\n    if(s+c>0):\n        ans=ans+1\nprint(ans)",
        "origin_generated_text": "\n```\nn,m,c=map(int,input().split())\nb= [int(x) for x in input().split()]\nans=0\n\nfor i in range(n):\n    a=[int(x)*y for x,y in zip(input().split(),b)]\n    s=sum(a)\n    if(s+c>0):\n        ans=ans+1\nprint(ans)```\n "
    },
    {
        "user_id": "u690781906",
        "problem_id": "p03200",
        "submission1_id": "s926955575",
        "code_content": "\ns = input()\nans = 0\nfor i in range(len(s)-1):\n    if s[i] == 'B' and s[i+1] == 'W':\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\ns = input()\nans = 0\nfor i in range(len(s)-1):\n    if s[i] == 'B' and s[i+1] == 'W':\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u105302073",
        "problem_id": "p02767",
        "submission1_id": "s838950993",
        "code_content": "\nn = int(input())\nx = [int(i) for i in input().split()]\nl, r = 10e9, -10e9\nfor i in x:\n    l = min(l, i)\n    r = max(r, i)\nans = 10e9\nfor i in range(l, r+1):\n    cost = 0\n    for j in range(n):\n        cost += (x[j] - i) ** 2\n    ans = min(ans, cost)\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\nx = [int(i) for i in input().split()]\nl, r = 10e9, -10e9\nfor i in x:\n    l = min(l, i)\n    r = max(r, i)\nans = 10e9\nfor i in range(l, r+1):\n    cost = 0\n    for j in range(n):\n        cost += (x[j] - i) ** 2\n    ans = min(ans, cost)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u350093546",
        "problem_id": "p03998",
        "submission1_id": "s907708804",
        "code_content": "\na=list(input())\nb=list(input())\nc=list(input())\norder='a'\nwhile True:\n  if order=='a':\n    if len(a)==1:\n      print('A')\n      break\n    else:\n      order=a[0]\n      a=a[1:]\n  elif order=='b':\n    if len(b)==1:\n      print('B')\n      break\n    else:\n      order=b[0]\n      b=b[1:]\n  elif order=='c':\n    if len(c)==1:\n      print('C')\n      break\n    else:\n      order=c[0]\n      c=c[1:]\n  else:\n    break",
        "origin_generated_text": "\n```\na=list(input())\nb=list(input())\nc=list(input())\norder='a'\nwhile True:\n  if order=='a':\n    if len(a)==1:\n      print('A')\n      break\n    else:\n      order=a[0]\n      a=a[1:]\n  elif order=='b':\n    if len(b)==1:\n      print('B')\n      break\n    else:\n      order=b[0]\n      b=b[1:]\n  elif order=='c':\n    if len(c)==1:\n      print('C')\n      break\n    else:\n      order=c[0]\n      c=c[1:]\n  else:\n    break```\n "
    },
    {
        "user_id": "u438160186",
        "problem_id": "p02886",
        "submission1_id": "s904315782",
        "code_content": "\nn = int(input())\nd = [int(i) for i in input().split()]\ns = n * (n-1)\n\nans = 0\nfor i in range(n):\n  for j in range(s):\n      if j < i:\n        ans += d[i] * d[j]\n\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nd = [int(i) for i in input().split()]\ns = n * (n-1)\n\nans = 0\nfor i in range(n):\n  for j in range(s):\n      if j < i:\n        ans += d[i] * d[j]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u215065194",
        "problem_id": "p03998",
        "submission1_id": "s930243415",
        "code_content": "\na=input()\nb=input()\nc=input()\ndic={'a':[_ for _ in a],'b':[_ for _ in b],'c':[_ for _ in c]}\nchar='a'\nfor i in range(len(a)+len(b)+len(c)):\n    if len(dic[char]) == 0:\n        break\n    char = dic[char].pop(0)\nprint(char.upper())",
        "origin_generated_text": "\n```\na=input()\nb=input()\nc=input()\ndic={'a':[_ for _ in a],'b':[_ for _ in b],'c':[_ for _ in c]}\nchar='a'\nfor i in range(len(a)+len(b)+len(c)):\n    if len(dic[char]) == 0:\n        break\n    char = dic[char].pop(0)\nprint(char.upper())```\n "
    },
    {
        "user_id": "u283220417",
        "problem_id": "p02767",
        "submission1_id": "s920860459",
        "code_content": "\nN = int(input())\nX = list(map(int, input().split()))\nmin = 1000000\n\nfor i in range(X[N-1]+1):\n    T = 0\n    for j in range(N):\n      T += (X[j]-i) ** 2\n    if T < min:\n        min = T\n\nprint(min)",
        "origin_generated_text": "\n```\nN = int(input())\nX = list(map(int, input().split()))\nmin = 1000000\n\nfor i in range(X[N-1]+1):\n    T = 0\n    for j in range(N):\n      T += (X[j]-i) ** 2\n    if T < min:\n        min = T\n\nprint(min)```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03626",
        "submission1_id": "s499253433",
        "code_content": "\nn = int(input())\ns1 = input()\ns2 = input()\ncnt = 1\ni = 0\nwhile i <= n-1:\n    if i == 0:\n        if s1[i] == s2[i]:\n            cnt *= 3\n            s = 0\n        else:\n            cnt *= 6\n            i += 1\n            s = 1\n    elif s1[i] == s2[i]:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 1\n        s = 0\n    else:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 3\n        s = 1\n        i += 1\n    i += 1\nprint(cnt%1000000007)",
        "origin_generated_text": "\n```\nn = int(input())\ns1 = input()\ns2 = input()\ncnt = 1\ni = 0\nwhile i <= n-1:\n    if i == 0:\n        if s1[i] == s2[i]:\n            cnt *= 3\n            s = 0\n        else:\n            cnt *= 6\n            i += 1\n            s = 1\n    elif s1[i] == s2[i]:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 1\n        s = 0\n    else:\n        if s == 0:\n            cnt *= 2\n        else:\n            cnt *= 3\n        s = 1\n        i += 1\n    i += 1\nprint(cnt%1000000007)```\n "
    },
    {
        "user_id": "u233729690",
        "problem_id": "p03079",
        "submission1_id": "s668086654",
        "code_content": "\nA,B,C = map(int, input().split())\n\nif A == B and B == C:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nA,B,C = map(int, input().split())\n\nif A == B and B == C:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u996564551",
        "problem_id": "p03102",
        "submission1_id": "s410531548",
        "code_content": "\nN, M, C = input().split(' ')\nN = int(N)\nM = int(M)\nC = int(C)\nB = []\nB = input().split(' ')\nB = [int(i) for i in B]\nA = []\nR = 0\nfor i in range(N):\n  A = input().split(' ')\n  A = [int(i) for i in A]\n  combine = [x * y for (x, y) in zip(A, B)]\n  if sum(combine) + C > 0:\n    R += 1\nprint(R)",
        "origin_generated_text": "\n```\nN, M, C = input().split(' ')\nN = int(N)\nM = int(M)\nC = int(C)\nB = []\nB = input().split(' ')\nB = [int(i) for i in B]\nA = []\nR = 0\nfor i in range(N):\n  A = input().split(' ')\n  A = [int(i) for i in A]\n  combine = [x * y for (x, y) in zip(A, B)]\n  if sum(combine) + C > 0:\n    R += 1\nprint(R)```\n "
    },
    {
        "user_id": "u456595418",
        "problem_id": "p03079",
        "submission1_id": "s203194475",
        "code_content": "\nl = []\nl= list(map(int,input().split()))\n\nif l[0] == l[1] == l[2]:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")",
        "origin_generated_text": "\n```\nl = []\nl= list(map(int,input().split()))\n\nif l[0] == l[1] == l[2]:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")```\n "
    },
    {
        "user_id": "u687766076",
        "problem_id": "p03106",
        "submission1_id": "s312222115",
        "code_content": "\nimport sys\n\na, b, k = map(int, sys.stdin.readline().split())\nm = min(a, b)\ncnt = 0\nfor i in range(1, m):\n    if a % i == 0 and b % i == 0:\n        cnt += 1\n        if cnt == k:\n            print(i)\n            exit()\n\nprint(m)",
        "origin_generated_text": "\n```\nimport sys\n\na, b, k = map(int, sys.stdin.readline().split())\nm = min(a, b)\ncnt = 0\nfor i in range(1, m):\n    if a % i == 0 and b % i == 0:\n        cnt += 1\n        if cnt == k:\n            print(i)\n            exit()\n\nprint(m)```\n "
    },
    {
        "user_id": "u581625805",
        "problem_id": "p02556",
        "submission1_id": "s592636386",
        "code_content": "\nn = int(input())\nplus_max = -10**10\nplus_min = 10**10\nminus_max = -10**10\nminus_min = 10**10\nfor _ in range(n):\n    x, y = map(int, input().split())\n    plus_max = max(plus_max, x + y)\n    plus_min = min(plus_min, x + y)\n    minus_max = max(minus_max, x - y)\n    minus_min = min(minus_min, x - y)\nprint(max(plus_max - plus_min, minus_max - minus_min))\n",
        "origin_generated_text": "\n```\nn = int(input())\nplus_max = -10**10\nplus_min = 10**10\nminus_max = -10**10\nminus_min = 10**10\nfor _ in range(n):\n    x, y = map(int, input().split())\n    plus_max = max(plus_max, x + y)\n    plus_min = min(plus_min, x + y)\n    minus_max = max(minus_max, x - y)\n    minus_min = min(minus_min, x - y)\nprint(max(plus_max - plus_min, minus_max - minus_min))\n```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s166339565",
        "code_content": "\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\ndic = [-1]*(2*(10**5)+1)\nprevIdx = [0] * N\nfor i in range(N):\n    C[i] = int(input())\n    if i > 0 and C[i] == C[i-1]:\n        continue\n    prevIdx[i] = dic[C[i]]\n    dic[C[i]] = i\n\ndp = [0] * N\ndp[0] = 1\nacc = [0] * N\nacc[0] = 1\nfor i in range(1,N):\n    dp[i] = dp[i-1] % mod\n    if C[i] == C[i-1] or prevIdx[i] == -1:\n        acc[i] = 0\n        continue\n    \n    dp[i] += acc[prevIdx[i]]\n    acc[i] = acc[prevIdx[i]] + dp[i-1]\n    acc[i] %= mod\n    dp[i] %= mod\n\nprint(dp[N-1] % mod)",
        "origin_generated_text": "\n```\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\ndic = [-1]*(2*(10**5)+1)\nprevIdx = [0] * N\nfor i in range(N):\n    C[i] = int(input())\n    if i > 0 and C[i] == C[i-1]:\n        continue\n    prevIdx[i] = dic[C[i]]\n    dic[C[i]] = i\n\ndp = [0] * N\ndp[0] = 1\nacc = [0] * N\nacc[0] = 1\nfor i in range(1,N):\n    dp[i] = dp[i-1] % mod\n    if C[i] == C[i-1] or prevIdx[i] == -1:\n        acc[i] = 0\n        continue\n    \n    dp[i] += acc[prevIdx[i]]\n    acc[i] = acc[prevIdx[i]] + dp[i-1]\n    acc[i] %= mod\n    dp[i] %= mod\n\nprint(dp[N-1] % mod)```\n "
    },
    {
        "user_id": "u189479417",
        "problem_id": "p03087",
        "submission1_id": "s871500072",
        "code_content": "\nN, Q = map(int,input().split())\nS = input()\ncnt = [0]\nfor i in range(len(S)-1):\n    cnt.append(cnt[-1])\n    if S[i] == 'A' and S[i+1] == 'C':\n        cnt[-1] += 1\ncnt = [0] + cnt\n\nfor _ in range(Q):\n    l, r = map(int,input().split())\n    ans = cnt[r] - cnt[l-1]\n    if 2 <= l and (S[l-2] == 'A' and S[l-1] == 'C'):\n        ans -= 1\n    print(ans)",
        "origin_generated_text": "\n```\nN, Q = map(int,input().split())\nS = input()\ncnt = [0]\nfor i in range(len(S)-1):\n    cnt.append(cnt[-1])\n    if S[i] == 'A' and S[i+1] == 'C':\n        cnt[-1] += 1\ncnt = [0] + cnt\n\nfor _ in range(Q):\n    l, r = map(int,input().split())\n    ans = cnt[r] - cnt[l-1]\n    if 2 <= l and (S[l-2] == 'A' and S[l-1] == 'C'):\n        ans -= 1\n    print(ans)```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p03106",
        "submission1_id": "s071497750",
        "code_content": "\na,b,k=map(int, input().split())\ncnt=0\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        cnt+=1\n        if cnt==k:\n            print(i)\n            break",
        "origin_generated_text": "\n```\na,b,k=map(int, input().split())\ncnt=0\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        cnt+=1\n        if cnt==k:\n            print(i)\n            break```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p03416",
        "submission1_id": "s285899671",
        "code_content": "\na,b = map(int,(input().split()))\ncount = 0\nfor i in range(a,b+1):\n    num_str = str(i)\n    if (num_str[0] == num_str[4]) and (num_str[1] == num_str[3]):\n        count += 1\nprint(count)",
        "origin_generated_text": "\n```\na,b = map(int,(input().split()))\ncount = 0\nfor i in range(a,b+1):\n    num_str = str(i)\n    if (num_str[0] == num_str[4]) and (num_str[1] == num_str[3]):\n        count += 1\nprint(count)```\n "
    },
    {
        "user_id": "u104282757",
        "problem_id": "p02950",
        "submission1_id": "s224368606",
        "code_content": "\np = int(input())\na_list = list(map(int, input().split()))\nr_list = [0] * p\n\nfact = [0] * p\nfact[0] = 1\nfor i in range(1, p):\n    fact[i] = fact[i - 1] * i % p\n\nfact_inv = [0] * p\nfact_inv[-1] = pow(fact[-1], p-2, p)\nfor i in range(p-2, -1 ,-1):\n    fact_inv[i] = (fact_inv[i+1] * (i+1)) % p\n\nncr = [(fact[p-1] * fact_inv[p-1-i] * fact_inv[i]) % p for i in range(p)]\n\nfor j in range(p):\n    if a_list[j] == 0:\n        continue\n    k = 1\n    for i in range(p-1, -1, -1):\n        r_list[i] -= ncr[i] * k\n        r_list[i] %= p\n        k *= -j\n        k %= p\n    r_list[0] += 1\n\nprint(*r_list)\n",
        "origin_generated_text": "\n```\np = int(input())\na_list = list(map(int, input().split()))\nr_list = [0] * p\n\nfact = [0] * p\nfact[0] = 1\nfor i in range(1, p):\n    fact[i] = fact[i - 1] * i % p\n\nfact_inv = [0] * p\nfact_inv[-1] = pow(fact[-1], p-2, p)\nfor i in range(p-2, -1 ,-1):\n    fact_inv[i] = (fact_inv[i+1] * (i+1)) % p\n\nncr = [(fact[p-1] * fact_inv[p-1-i] * fact_inv[i]) % p for i in range(p)]\n\nfor j in range(p):\n    if a_list[j] == 0:\n        continue\n    k = 1\n    for i in range(p-1, -1, -1):\n        r_list[i] -= ncr[i] * k\n        r_list[i] %= p\n        k *= -j\n        k %= p\n    r_list[0] += 1\n\nprint(*r_list)\n```\n "
    },
    {
        "user_id": "u693524218",
        "problem_id": "p03036",
        "submission1_id": "s913774491",
        "code_content": "\nr,D,x = [int(i) for i in input().split()]\ndef calu(r,D,x):\n    X =x\n    for j in range(10):\n       X = r*X-D\n       print(X)\n\ncalu(r,D,x)",
        "origin_generated_text": "\n```\nr,D,x = [int(i) for i in input().split()]\ndef calu(r,D,x):\n    X =x\n    for j in range(10):\n       X = r*X-D\n       print(X)\n\ncalu(r,D,x)```\n "
    },
    {
        "user_id": "u493130708",
        "problem_id": "p03563",
        "submission1_id": "s518157337",
        "code_content": "\nR = int(input())\nG = int(input())\n\nprint(G-(R+G)\n",
        "origin_generated_text": "\n```\nR = int(input())\nG = int(input())\n\nprint(G-(R+G)\n```\n "
    },
    {
        "user_id": "u994988729",
        "problem_id": "p02665",
        "submission1_id": "s489060775",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\n\nleaf = []\nmiki = []\nunder = 1\n\nfor i, a in enumerate(A):\n    if a > under or under == 0:\n        print(-1)\n        exit()\n    miki.append(under - a)\n    under = miki[-1] * 2\n\n\nans = 0\nchild = 0\nfor i in reversed(range(N + 1)):\n    child = min(child, miki[i]) + A[i]\n    ans += child\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\n\nleaf = []\nmiki = []\nunder = 1\n\nfor i, a in enumerate(A):\n    if a > under or under == 0:\n        print(-1)\n        exit()\n    miki.append(under - a)\n    under = miki[-1] * 2\n\n\nans = 0\nchild = 0\nfor i in reversed(range(N + 1)):\n    child = min(child, miki[i]) + A[i]\n    ans += child\n\nprint(ans)```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p03200",
        "submission1_id": "s621113641",
        "code_content": "\nS = input()\nans = 0\ntmp = 0\nfor i in range(len(S)):\n  if S[i] == 'W':\n    ans+=i-tmp\n    tmp+=1\nprint(ans)",
        "origin_generated_text": "\n```\nS = input()\nans = 0\ntmp = 0\nfor i in range(len(S)):\n  if S[i] == 'W':\n    ans+=i-tmp\n    tmp+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u626881915",
        "problem_id": "p02963",
        "submission1_id": "s065519122",
        "code_content": "\nimport math\ns=int(input())\nc=math.ceil(math.sqrt(s))\nfor i in range(1, c):\n  for j in range(1, c):\n    sa=c*c-s\n    if sa%(i*j)==0:\n      print(\"{} {} {} {} {}\".format(c-i, c-j, i, j, sa\n      exit()\n",
        "origin_generated_text": "\n```\nimport math\ns=int(input())\nc=math.ceil(math.sqrt(s))\nfor i in range(1, c):\n  for j in range(1, c):\n    sa=c*c-s\n    if sa%(i*j)==0:\n      print(\"{} {} {} {} {}\".format(c-i, c-j, i, j, sa\n      exit()\n```\n "
    },
    {
        "user_id": "u203261375",
        "problem_id": "p00023",
        "submission1_id": "s848168883",
        "code_content": "\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n    dist = ((xa - xb)**2 + (ya - yb)**2)**.5\n    if ra + rb < dist:\n        print('0')\n    elif (ra < rb) and (dist < ra + rb):\n        print('2')\n    elif (rb < ra) and (dist < ra + rb):\n        print('-2')\n    else:\n        print('1')",
        "origin_generated_text": "\n```\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n    dist = ((xa - xb)**2 + (ya - yb)**2)**.5\n    if ra + rb < dist:\n        print('0')\n    elif (ra < rb) and (dist < ra + rb):\n        print('2')\n    elif (rb < ra) and (dist < ra + rb):\n        print('-2')\n    else:\n        print('1')```\n "
    },
    {
        "user_id": "u255001744",
        "problem_id": "p03480",
        "submission1_id": "s520570309",
        "code_content": "\nS = input()\n\ntemp_T = 1000000\nfor i in range(len(S)-1):\n    judge = max(i,len(S)-i-1)\n    if(S[i] != S[i+1]):\n        temp_T = min(judge, temp_T)\n\nprint(temp_T)\n",
        "origin_generated_text": "\n```\nS = input()\n\ntemp_T = 1000000\nfor i in range(len(S)-1):\n    judge = max(i,len(S)-i-1)\n    if(S[i] != S[i+1]):\n        temp_T = min(judge, temp_T)\n\nprint(temp_T)\n```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s287246109",
        "code_content": "\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for c in range(capacity+1):\n        candidates = [val + work[c-weight] for val,weight in zip(values,weights) if weight <= c]\n        work[c] = max(candidates) if candidates != [] else 0\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))\n    prices_b=list(map(int,inp().split()))\n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())",
        "origin_generated_text": "\n```\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for c in range(capacity+1):\n        candidates = [val + work[c-weight] for val,weight in zip(values,weights) if weight <= c]\n        work[c] = max(candidates) if candidates != [] else 0\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))\n    prices_b=list(map(int,inp().split()))\n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())```\n "
    },
    {
        "user_id": "u808280993",
        "problem_id": "p03318",
        "submission1_id": "s684066276",
        "code_content": "\n\n\nK = int(input())\n\nSunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nif K <= len(Sunuke):\n    for i in range(K):\n        print(Sunuke[i])\n\nelse:\n    resi = K - len(Sunuke)\n    while resi > 0:\n        for i in range(10):\n            for j in range(10):\n                num = i * 10 + j\n                Sunuke.append(num)\n                resi -= 1\n                if resi == 0:\n                    break\n            if resi == 0:\n                break\n\nfor i in range(K):\n    print(Sunuke[i])",
        "origin_generated_text": "\n```\n\n\nK = int(input())\n\nSunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nif K <= len(Sunuke):\n    for i in range(K):\n        print(Sunuke[i])\n\nelse:\n    resi = K - len(Sunuke)\n    while resi > 0:\n        for i in range(10):\n            for j in range(10):\n                num = i * 10 + j\n                Sunuke.append(num)\n                resi -= 1\n                if resi == 0:\n                    break\n            if resi == 0:\n                break\n\nfor i in range(K):\n    print(Sunuke[i])```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s928842319",
        "code_content": "\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = S\ny3 = S\nwhile x1*y1 + x2*y2 + x3*y3 != S:\n    x1 += 1\n    y1 += 1\n    x2 += 1\n    y2 += 1\n    x3 += 1\n    y3 += 1\nprint(x1,y1,x2,y2,x3,y3)\n",
        "origin_generated_text": "\n```\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = S\ny3 = S\nwhile x1*y1 + x2*y2 + x3*y3 != S:\n    x1 += 1\n    y1 += 1\n    x2 += 1\n    y2 += 1\n    x3 += 1\n    y3 += 1\nprint(x1,y1,x2,y2,x3,y3)\n```\n "
    },
    {
        "user_id": "u034855798",
        "problem_id": "p03477",
        "submission1_id": "s364785093",
        "code_content": "\n\n\n\n\n\nA,B,C,D = map(int,input().split())\n\n\n\n\n\nif A+B>C+D:\n    print(\"Left\")\nelif A+B==C+D:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")",
        "origin_generated_text": "\n```\n\n\n\n\n\nA,B,C,D = map(int,input().split())\n\n\n\n\n\nif A+B>C+D:\n    print(\"Left\")\nelif A+B==C+D:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")```\n "
    },
    {
        "user_id": "u006657459",
        "problem_id": "p03626",
        "submission1_id": "s352774439",
        "code_content": "\nN = int(input())\nS1 = input()\nS2 = input()\npatterns = []\nflag = False\nfor i in range(N):\n    if S1[i] == S2[i]:\n        patterns.append('row')\n    elif flag is False:\n        patterns.append('column')\n        flag = True\n    else:\n        flag = False\n\nif patterns[0] == 'row':\n    count = 3\nelse:\n    count = 6\nfor i in range(1, len(patterns)):\n    prev = patterns[i-1]\n    current = patterns[i]\n    if prev == 'row':\n        if current == 'row':\n            count *= 2\n        else:\n            count *= 2\n    else:\n        if current == 'row':\n            count *= 1\n        else:\n            count *= 3\nprint(count % (10**9  + 7))",
        "origin_generated_text": "\n```\nN = int(input())\nS1 = input()\nS2 = input()\npatterns = []\nflag = False\nfor i in range(N):\n    if S1[i] == S2[i]:\n        patterns.append('row')\n    elif flag is False:\n        patterns.append('column')\n        flag = True\n    else:\n        flag = False\n\nif patterns[0] == 'row':\n    count = 3\nelse:\n    count = 6\nfor i in range(1, len(patterns)):\n    prev = patterns[i-1]\n    current = patterns[i]\n    if prev == 'row':\n        if current == 'row':\n            count *= 2\n        else:\n            count *= 2\n    else:\n        if current == 'row':\n            count *= 1\n        else:\n            count *= 3\nprint(count % (10**9  + 7))```\n "
    },
    {
        "user_id": "u459798349",
        "problem_id": "p02914",
        "submission1_id": "s122345233",
        "code_content": "\nn=int(input())\nA=[int(i) for i in input().split()]\n\nsuma=0\nfor i in range(n):\n    suma^=A[i]\n\nB=[~suma&me for me in A]\nB.sort(reverse=True)\n\ncnt=0\nfor i in range(59,-1,-1):\n    B.sort(reverse=True)\n    if B[cnt]&(1<<i)>0:\n        \n        for q in range(cnt):\n            if B[q]&(1<<i)>0:\n                B[q]^=B[cnt]\n        for q in range(cnt+1,n):\n            if B[q]&(1<<i)>0:\n                B[q]^=B[cnt]\n            else:\n                break          \n        cnt+=1\n\nans=0\nB.sort(reverse=True)\nfor i in range(min(n,60)):\n    ans^=B[i]\n\nprint(ans*2+suma)",
        "origin_generated_text": "\n```\nn=int(input())\nA=[int(i) for i in input().split()]\n\nsuma=0\nfor i in range(n):\n    suma^=A[i]\n\nB=[~suma&me for me in A]\nB.sort(reverse=True)\n\ncnt=0\nfor i in range(59,-1,-1):\n    B.sort(reverse=True)\n    if B[cnt]&(1<<i)>0:\n        \n        for q in range(cnt):\n            if B[q]&(1<<i)>0:\n                B[q]^=B[cnt]\n        for q in range(cnt+1,n):\n            if B[q]&(1<<i)>0:\n                B[q]^=B[cnt]\n            else:\n                break          \n        cnt+=1\n\nans=0\nB.sort(reverse=True)\nfor i in range(min(n,60)):\n    ans^=B[i]\n\nprint(ans*2+suma)```\n "
    },
    {
        "user_id": "u466331465",
        "problem_id": "p02887",
        "submission1_id": "s827033309",
        "code_content": "\nimport sys\nfrom itertools import accumulate\ninput = sys.stdin.readline\ndef inputs():return [int(x) for x in input().split()]\nN = int(input())\nS= list(input())\ns = []\ncnt= 1\nfor i in range(len(S)-1):\n  if S[i]==S[i+1]:\n    cnt+=1\n  else:\n    s.append(cnt)\n    cnt=1\ns.append(cnt)\nprint(len(s))",
        "origin_generated_text": "\n```\nimport sys\nfrom itertools import accumulate\ninput = sys.stdin.readline\ndef inputs():return [int(x) for x in input().split()]\nN = int(input())\nS= list(input())\ns = []\ncnt= 1\nfor i in range(len(S)-1):\n  if S[i]==S[i+1]:\n    cnt+=1\n  else:\n    s.append(cnt)\n    cnt=1\ns.append(cnt)\nprint(len(s))```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02642",
        "submission1_id": "s014243065",
        "code_content": "\nn=int(input(\"\"))\naa=input(\"\").split(\" \")\nlista=[]\nfor i in range(n):\n    lista+=[int(aa[i])]\nlista.sort()\ncccc=int(lista[n-1]/lista[0])+1\nlistde=[]\nfor i in range(n):\n    if(lista[i]!=lista[i+1]):\n        listde+=[lista[i]]\ns=0\nfor i in range(n):\n    if(lista[i]<=cccc):\n        s+=1\n    else:\n        if(lista[i] not in listde):\n            s+=1\nprint(s)\n",
        "origin_generated_text": "\n```\nn=int(input(\"\"))\naa=input(\"\").split(\" \")\nlista=[]\nfor i in range(n):\n    lista+=[int(aa[i])]\nlista.sort()\ncccc=int(lista[n-1]/lista[0])+1\nlistde=[]\nfor i in range(n):\n    if(lista[i]!=lista[i+1]):\n        listde+=[lista[i]]\ns=0\nfor i in range(n):\n    if(lista[i]<=cccc):\n        s+=1\n    else:\n        if(lista[i] not in listde):\n            s+=1\nprint(s)\n```\n "
    },
    {
        "user_id": "u344655022",
        "problem_id": "p02580",
        "submission1_id": "s945708732",
        "code_content": "\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef li():\n    return [int(x) for x in input().split()]\n\nH, W, M = li()\nPH = []\nPW = []\n\nfor i in range(M):\n    h, w = li()\n    PH.append(h)\n    PW.append(w)\n\nfrequency_h_list = Counter(PH).most_common(M)\nfrequency_w_list = Counter(PW).most_common(M)\nmost_common_h_cnt = frequency_h_list[0][1]\nmost_common_w_cnt = frequency_w_list[0][1]\n\nmost_common_h_list = []\nfor x in frequency_h_list:\n    if x[1] < most_common_h_cnt:\n        break\n    most_common_h_list.append(x[0])\n\nmost_common_w_list = []\nfor x in frequency_w_list:\n    if x[1] < most_common_w_cnt:\n        break\n    most_common_w_list.append(x[0])\n\ncontain_intersection = defaultdict(int)\nfor h in most_common_h_list:\n    for w in most_common_w_list:\n        contain_intersection[h, w] += 1\n\nadd = 0\nfor i in range(M):\n    h, w = PH[i], PW[i]\n    if h in most_common_h_list and w in most_common_w_list:\n        if contain_intersection[h, w] == 0:\n            add = -1\n            break\n\ncnt = most_common_h_cnt + most_common_w_cnt + add\n\nprint(cnt)",
        "origin_generated_text": "\n```\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef li():\n    return [int(x) for x in input().split()]\n\nH, W, M = li()\nPH = []\nPW = []\n\nfor i in range(M):\n    h, w = li()\n    PH.append(h)\n    PW.append(w)\n\nfrequency_h_list = Counter(PH).most_common(M)\nfrequency_w_list = Counter(PW).most_common(M)\nmost_common_h_cnt = frequency_h_list[0][1]\nmost_common_w_cnt = frequency_w_list[0][1]\n\nmost_common_h_list = []\nfor x in frequency_h_list:\n    if x[1] < most_common_h_cnt:\n        break\n    most_common_h_list.append(x[0])\n\nmost_common_w_list = []\nfor x in frequency_w_list:\n    if x[1] < most_common_w_cnt:\n        break\n    most_common_w_list.append(x[0])\n\ncontain_intersection = defaultdict(int)\nfor h in most_common_h_list:\n    for w in most_common_w_list:\n        contain_intersection[h, w] += 1\n\nadd = 0\nfor i in range(M):\n    h, w = PH[i], PW[i]\n    if h in most_common_h_list and w in most_common_w_list:\n        if contain_intersection[h, w] == 0:\n            add = -1\n            break\n\ncnt = most_common_h_cnt + most_common_w_cnt + add\n\nprint(cnt)```\n "
    },
    {
        "user_id": "u834832056",
        "problem_id": "p02922",
        "submission1_id": "s953641343",
        "code_content": "\nimport math\n\na, b = map(int, input().split(' '))\n\nprint(math.ceil(b / a))\n",
        "origin_generated_text": "\n```\nimport math\n\na, b = map(int, input().split(' '))\n\nprint(math.ceil(b / a))\n```\n "
    },
    {
        "user_id": "u187646742",
        "problem_id": "p02407",
        "submission1_id": "s235033174",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\na = list(a[i] for i in range(len(a)-1,-1,-1))\nprint(\" \".join(map(str, a)))",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\na = list(a[i] for i in range(len(a)-1,-1,-1))\nprint(\" \".join(map(str, a)))```\n "
    },
    {
        "user_id": "u726439578",
        "problem_id": "p03943",
        "submission1_id": "s634751594",
        "code_content": "\na=list(map(int,input().split()))\na.sort()\nif a[0]+a[1]==a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n",
        "origin_generated_text": "\n```\na=list(map(int,input().split()))\na.sort()\nif a[0]+a[1]==a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n```\n "
    },
    {
        "user_id": "u182139295",
        "problem_id": "p03041",
        "submission1_id": "s677368663",
        "code_content": "\n\n\n\nn, k = map(int, input().split())\n\ns = list(input())\n\na = s[k-1:k]\n\na = ','.join(a)\n\na = a.lower()\n\ns[k-1:k] = a\n\nprint(''.join(s))",
        "origin_generated_text": "\n```\n\n\n\nn, k = map(int, input().split())\n\ns = list(input())\n\na = s[k-1:k]\n\na = ','.join(a)\n\na = a.lower()\n\ns[k-1:k] = a\n\nprint(''.join(s))```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s028676556",
        "code_content": "\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra ** 2 + rb ** 2) - (ra ** 2 - rb ** 2)\n\n    if d1 <= d2:\n        if math.sqrt(d1) > math.sqrt(d2):\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra ** 2 + rb ** 2) - (ra ** 2 - rb ** 2)\n\n    if d1 <= d2:\n        if math.sqrt(d1) > math.sqrt(d2):\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u777299405",
        "problem_id": "p02281",
        "submission1_id": "s259446344",
        "code_content": "\nn = int(input())\ntree = [0] * n\nroot = set(range(n))\nfor i in range(n):\n    node_id, left, right = map(int, input().split())\n    tree[node_id] = (left, right)\n    root -= {left, right}\nroot_node = root.pop()\n\n\ndef preorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield i\n    yield from preorder(left)\n    yield from preorder(right)\n\n\ndef inorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield from inorder(left)\n    yield i\n    yield from inorder(right)\n\n\ndef postorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield from postorder(left)\n    yield from postorder(right)\n    yield i\n\nprint(*preorder(root_node))\nprint(*inorder(root_node))\nprint(*postorder(root_node))",
        "origin_generated_text": "\n```\nn = int(input())\ntree = [0] * n\nroot = set(range(n))\nfor i in range(n):\n    node_id, left, right = map(int, input().split())\n    tree[node_id] = (left, right)\n    root -= {left, right}\nroot_node = root.pop()\n\n\ndef preorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield i\n    yield from preorder(left)\n    yield from preorder(right)\n\n\ndef inorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield from inorder(left)\n    yield i\n    yield from inorder(right)\n\n\ndef postorder(i):\n    if i == -1:\n        return\n    (left, right) = tree[i]\n    yield from postorder(left)\n    yield from postorder(right)\n    yield i\n\nprint(*preorder(root_node))\nprint(*inorder(root_node))\nprint(*postorder(root_node))```\n "
    },
    {
        "user_id": "u202406075",
        "problem_id": "p02854",
        "submission1_id": "s762017756",
        "code_content": "\nimport sys\n\nn = int(input())\n\na = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    cnt += a[i]\n    if cnt == int(cnt/2):\n        print(0)\n        sys.exit()\n    elif cnt > int(cnt/2):\n        x1 = int(cnt/2) -cnt +a[i-1]\n        if x1 <= cnt -int(cnt/2):\n            x1 = cnt -int(cnt/2)\n        break\n\nprint(int(x1*2))",
        "origin_generated_text": "\n```\nimport sys\n\nn = int(input())\n\na = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(n):\n    cnt += a[i]\n    if cnt == int(cnt/2):\n        print(0)\n        sys.exit()\n    elif cnt > int(cnt/2):\n        x1 = int(cnt/2) -cnt +a[i-1]\n        if x1 <= cnt -int(cnt/2):\n            x1 = cnt -int(cnt/2)\n        break\n\nprint(int(x1*2))```\n "
    },
    {
        "user_id": "u467736898",
        "problem_id": "p03054",
        "submission1_id": "s241880704",
        "code_content": "\nH, W, N = map(int, input().split())\nSr, Sc = map(int, input().split())\nS = input()\nT = input()\n\n\nl = 1\nr = W\nu = 1\nd = H\nfor s, t in zip(S[::-1], T[::-1]):\n\n    if t==\"L\":\n        r = min(r+1, W)\n    elif t==\"R\":\n        l = max(l-1, 1)\n    elif t==\"U\":\n        d = min(d+1, H)\n    else:\n        u = max(u-1, 1)\n\n    if s==\"L\":\n        l+=1\n    elif s==\"R\":\n        r-=1\n    elif s==\"U\":\n        u+=1\n    else:\n        d-=1\n\n    if l > r or u > d:\n        print(\"NO\")\n        exit()\n    \nif d<=Sr<=u and l<=Sc<=r and Sr<=d and Sc<=u:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n",
        "origin_generated_text": "\n```\nH, W, N = map(int, input().split())\nSr, Sc = map(int, input().split())\nS = input()\nT = input()\n\n\nl = 1\nr = W\nu = 1\nd = H\nfor s, t in zip(S[::-1], T[::-1]):\n\n    if t==\"L\":\n        r = min(r+1, W)\n    elif t==\"R\":\n        l = max(l-1, 1)\n    elif t==\"U\":\n        d = min(d+1, H)\n    else:\n        u = max(u-1, 1)\n\n    if s==\"L\":\n        l+=1\n    elif s==\"R\":\n        r-=1\n    elif s==\"U\":\n        u+=1\n    else:\n        d-=1\n\n    if l > r or u > d:\n        print(\"NO\")\n        exit()\n    \nif d<=Sr<=u and l<=Sc<=r and Sr<=d and Sc<=u:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u424241608",
        "problem_id": "p03106",
        "submission1_id": "s313588120",
        "code_content": "\n\na,b,k = map(int,input().split())\n\ncnt = 0\nfor i in range(1,min(a,b)+1):\n  if a%i == 0 and b%i == 0:\n    cnt+=1\n    if cnt == k:\n      print(i)\n      break\n",
        "origin_generated_text": "\n```\n\na,b,k = map(int,input().split())\n\ncnt = 0\nfor i in range(1,min(a,b)+1):\n  if a%i == 0 and b%i == 0:\n    cnt+=1\n    if cnt == k:\n      print(i)\n      break\n```\n "
    },
    {
        "user_id": "u470542271",
        "problem_id": "p03625",
        "submission1_id": "s076698114",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\n\ntmp = []\nfrom collections import Counter\nc = Counter(a)\nfor k in c.keys():\n    if c[k] >= 2:\n        tmp.append(k)\n\ntmp.sort()\nif len(tmp) >= 2:\n    print(tmp[-1] * tmp[-2])\nelse:\n    print(0)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\n\ntmp = []\nfrom collections import Counter\nc = Counter(a)\nfor k in c.keys():\n    if c[k] >= 2:\n        tmp.append(k)\n\ntmp.sort()\nif len(tmp) >= 2:\n    print(tmp[-1] * tmp[-2])\nelse:\n    print(0)\n```\n "
    },
    {
        "user_id": "u677037479",
        "problem_id": "p03729",
        "submission1_id": "s642874323",
        "code_content": "\na,b,c = input().split()\n\n\nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print(\"YES\")\n\n    elif b[-1] != c[0]:\n        print(\"NO\")\n\nelif a[-1] != b[0]:\n    print(\"NO\")\n",
        "origin_generated_text": "\n```\na,b,c = input().split()\n\n\nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print(\"YES\")\n\n    elif b[-1] != c[0]:\n        print(\"NO\")\n\nelif a[-1] != b[0]:\n    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u725133562",
        "problem_id": "p04019",
        "submission1_id": "s877234796",
        "code_content": "\ns = input()\nl = len(s)\njudge = 0\nif 'N' in s:\n    judge += 1\nif 'W' in s:\n    judge += 1\nif 'S' in s:\n    judge -= 1\nif 'E' in s:\n    judge -= 1\n\nprint('Yes' if judge == 0 else 'No')",
        "origin_generated_text": "\n```\ns = input()\nl = len(s)\njudge = 0\nif 'N' in s:\n    judge += 1\nif 'W' in s:\n    judge += 1\nif 'S' in s:\n    judge -= 1\nif 'E' in s:\n    judge -= 1\n\nprint('Yes' if judge == 0 else 'No')```\n "
    },
    {
        "user_id": "u069129582",
        "problem_id": "p02917",
        "submission1_id": "s970568955",
        "code_content": "\nn=int(input())\nb=list(map(int,input().split()))\nfor j in range(n-2):\n    if b[j]>max(b[j+1:]):\n        b[j]=max(b[j+1:])\n\nprint(sum(b)+b[0]+b[-1])",
        "origin_generated_text": "\n```\nn=int(input())\nb=list(map(int,input().split()))\nfor j in range(n-2):\n    if b[j]>max(b[j+1:]):\n        b[j]=max(b[j+1:])\n\nprint(sum(b)+b[0]+b[-1])```\n "
    },
    {
        "user_id": "u657208344",
        "problem_id": "p03023",
        "submission1_id": "s708467397",
        "code_content": "\nn=int(input())\nprint(n*180)",
        "origin_generated_text": "\n```\nn=int(input())\nprint(n*180)```\n "
    },
    {
        "user_id": "u333404917",
        "problem_id": "p03023",
        "submission1_id": "s453817557",
        "code_content": "\nN = int(input())\nprint(N*(N-3)",
        "origin_generated_text": "\n```\nN = int(input())\nprint(N*(N-3)```\n "
    },
    {
        "user_id": "u773711732",
        "problem_id": "p02917",
        "submission1_id": "s469695259",
        "code_content": "\nN = int(input())\nBi = list(map(int, input().split()))\nlistA = [0 for i in range(N)]\nlistA[N-1] = Bi[N-2]\ngokei = 0\nfor j in reversed(range(1, N-1)):\n    listA[j] = min(Bi[j], Bi[j-1])\n\nfor k in listA:\n    gokei += k\nprint(gokei)",
        "origin_generated_text": "\n```\nN = int(input())\nBi = list(map(int, input().split()))\nlistA = [0 for i in range(N)]\nlistA[N-1] = Bi[N-2]\ngokei = 0\nfor j in reversed(range(1, N-1)):\n    listA[j] = min(Bi[j], Bi[j-1])\n\nfor k in listA:\n    gokei += k\nprint(gokei)```\n "
    },
    {
        "user_id": "u777215291",
        "problem_id": "p03023",
        "submission1_id": "s884056559",
        "code_content": "\nN = int(input())\nprint(180*(N-3))",
        "origin_generated_text": "\n```\nN = int(input())\nprint(180*(N-3))```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s082972706",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tif(i!=n-1):\n\t\t\ta=b+c\n\t\t\tb=c\n\t\t\tc=1\n\telse:\n\t\tc+=1\n\tmaxhoge=max(maxhoge,a+b+c+1)\n\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tif(i!=n-1):\n\t\t\ta=b+c\n\t\t\tb=c\n\t\t\tc=1\n\telse:\n\t\tc+=1\n\tmaxhoge=max(maxhoge,a+b+c+1)\n\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u094565093",
        "problem_id": "p03106",
        "submission1_id": "s473237710",
        "code_content": "\nA, B, K=map(int, input().split())\nif A>B:\n    tmp=A\n    A=B\n    B=tmp\ncount=0\nfor i in range(1,A+1,1):\n    if A%i ==0 and B%i==0:\n        count+=1\n    if count ==K:\n        break\nprint(i)",
        "origin_generated_text": "\n```\nA, B, K=map(int, input().split())\nif A>B:\n    tmp=A\n    A=B\n    B=tmp\ncount=0\nfor i in range(1,A+1,1):\n    if A%i ==0 and B%i==0:\n        count+=1\n    if count ==K:\n        break\nprint(i)```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03303",
        "submission1_id": "s893265962",
        "code_content": "\nS = list(input())\nw = int(input())\n\nL = len(S)\n\nans = []\n\nfor i in range(0,L,w):\n\tif i < L:\n\t\tans.append(S[i])\n\n\nprint (''.join(ans))",
        "origin_generated_text": "\n```\nS = list(input())\nw = int(input())\n\nL = len(S)\n\nans = []\n\nfor i in range(0,L,w):\n\tif i < L:\n\t\tans.append(S[i])\n\n\nprint (''.join(ans))```\n "
    },
    {
        "user_id": "u923659712",
        "problem_id": "p03479",
        "submission1_id": "s267069005",
        "code_content": "\na,b=map(int,input().split())\nans=0\nwhile b>=a:\n  a*=2\n  ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\na,b=map(int,input().split())\nans=0\nwhile b>=a:\n  a*=2\n  ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03274",
        "submission1_id": "s344045049",
        "code_content": "\nN, K = map(int, input().split(' '))\na= list(map(int, input().split(' ')))\n\nINF = float('inf')\nans = INF\n\nfor i in range(N-K+1):\n    ans = min(ans, abs(a[i+K-1]-a[i])+min(abs(a[i+K-1]), abs(a[i])))\n\nprint(ans)",
        "origin_generated_text": "\n```\nN, K = map(int, input().split(' '))\na= list(map(int, input().split(' ')))\n\nINF = float('inf')\nans = INF\n\nfor i in range(N-K+1):\n    ans = min(ans, abs(a[i+K-1]-a[i])+min(abs(a[i+K-1]), abs(a[i])))\n\nprint(ans)```\n "
    },
    {
        "user_id": "u600319862",
        "problem_id": "p03036",
        "submission1_id": "s337689794",
        "code_content": "\na,b,c = map(int,input().split())\ndef fib(n):\n  if n == 0:\n    return c\n  else:\n    return a * fib(n-1) -b\n  \nfor i in range(10):\n  print(fib(i+1))",
        "origin_generated_text": "\n```\na,b,c = map(int,input().split())\ndef fib(n):\n  if n == 0:\n    return c\n  else:\n    return a * fib(n-1) -b\n  \nfor i in range(10):\n  print(fib(i+1))```\n "
    },
    {
        "user_id": "u970899068",
        "problem_id": "p03102",
        "submission1_id": "s770219177",
        "code_content": "\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\n\ncount=0\nfor i in range(N):\n  A = list(map(int, input().split()))\n  sum=0\n  for j in range(M):\n    sum+=B[j]*A[j]\n  if sum+C>0:\n    count+=1\n\nprint(count)",
        "origin_generated_text": "\n```\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\n\ncount=0\nfor i in range(N):\n  A = list(map(int, input().split()))\n  sum=0\n  for j in range(M):\n    sum+=B[j]*A[j]\n  if sum+C>0:\n    count+=1\n\nprint(count)```\n "
    },
    {
        "user_id": "u339881903",
        "problem_id": "p02880",
        "submission1_id": "s000151196",
        "code_content": "\nN = int(input())\n\nhoge = []\nfor i in range(1, 10):\n    for j in range(1, 10):\n        hoge.append(i * j)\n\nif N in hoge:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nN = int(input())\n\nhoge = []\nfor i in range(1, 10):\n    for j in range(1, 10):\n        hoge.append(i * j)\n\nif N in hoge:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u626891113",
        "problem_id": "p02660",
        "submission1_id": "s362952496",
        "code_content": "\nfrom collections import Counter\nn = int(input())\nans = 0\n\ndp = []\ncl = []\nn1 = n\n\nfor i in range(2, int(n**0.5)+1):\n    if n%i == 0:\n        cl.append(i)\n        while n%i == 0:\n            n = n/i\n            dp.append(i)\n        if n == 1:\n            break\nif n == n1:\n    dp.append(n)\n    cl.append(n)\n\nc = Counter(dp)\n\nfor i in cl:\n    cnt = 1\n    while c[i] >= cnt:\n        c[i] -= cnt\n        ans += 1\n        cnt += 1\n        \nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom collections import Counter\nn = int(input())\nans = 0\n\ndp = []\ncl = []\nn1 = n\n\nfor i in range(2, int(n**0.5)+1):\n    if n%i == 0:\n        cl.append(i)\n        while n%i == 0:\n            n = n/i\n            dp.append(i)\n        if n == 1:\n            break\nif n == n1:\n    dp.append(n)\n    cl.append(n)\n\nc = Counter(dp)\n\nfor i in cl:\n    cnt = 1\n    while c[i] >= cnt:\n        c[i] -= cnt\n        ans += 1\n        cnt += 1\n        \nprint(ans)\n```\n "
    },
    {
        "user_id": "u270343876",
        "problem_id": "p02665",
        "submission1_id": "s305478809",
        "code_content": "\nn = int(input())+1\na = list(map(int, input().split()))\nm_node = [1]*n\nnode = 0\ntotal = 0\n\nif n == 1:\n    if a[0] != 1:\n        print(\"-1\", end=\"\")\n        exit()\n    else:\n        print(\"1\", end=\"\")\n        exit()\n\nfor i in range(1, n):\n    m_node[i] = (m_node[i-1] - a[i-1])*2\n    if m_node[i] <= 0:\n        print(\"-1\", end=\"\")\n        exit()\nfor i in reversed(range(n)):\n    if a[i] > m_node[i]:\n        print(\"-1\", end=\"\")\n        exit()\n    node = min((node+a[i]), m_node[i])\n    total += node\n\nprint(total, end=\"\")",
        "origin_generated_text": "\n```\nn = int(input())+1\na = list(map(int, input().split()))\nm_node = [1]*n\nnode = 0\ntotal = 0\n\nif n == 1:\n    if a[0] != 1:\n        print(\"-1\", end=\"\")\n        exit()\n    else:\n        print(\"1\", end=\"\")\n        exit()\n\nfor i in range(1, n):\n    m_node[i] = (m_node[i-1] - a[i-1])*2\n    if m_node[i] <= 0:\n        print(\"-1\", end=\"\")\n        exit()\nfor i in reversed(range(n)):\n    if a[i] > m_node[i]:\n        print(\"-1\", end=\"\")\n        exit()\n    node = min((node+a[i]), m_node[i])\n    total += node\n\nprint(total, end=\"\")```\n "
    },
    {
        "user_id": "u379956761",
        "problem_id": "p00023",
        "submission1_id": "s054307587",
        "code_content": "\nimport sys\nimport math\n\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n\n    distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n    if distance <= ra + rb:\n        if distance <= abs(ra - rb):\n            print(\"2\")\n        else:\n            print(\"1\")\n    else:\n        print(\"0\")",
        "origin_generated_text": "\n```\nimport sys\nimport math\n\nn = int(input())\n\nfor _ in range(n):\n    xa, ya, ra, xb, yb, rb = map(float, input().split())\n\n    distance = math.sqrt((xa-xb)**2 + (ya-yb)**2)\n    if distance <= ra + rb:\n        if distance <= abs(ra - rb):\n            print(\"2\")\n        else:\n            print(\"1\")\n    else:\n        print(\"0\")```\n "
    },
    {
        "user_id": "u743272507",
        "problem_id": "p03272",
        "submission1_id": "s808445218",
        "code_content": "\na,b = map(int,input().split())\nprint(a-b+1)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nprint(a-b+1)```\n "
    },
    {
        "user_id": "u515052479",
        "problem_id": "p03274",
        "submission1_id": "s616470250",
        "code_content": "\nn,k = map(int,input().split())\nx = list(map(int,input().split()))\nans = 10**9\n  \nfor i in range(n-k+1):\n  if x[k-1+i]*x[i] < 0:\n    if x[k-1+i] <= abs(x[i]) :\n      temp = 2*x[k-1+i] - x[i]\n    elif abs(x[i]) < x[k-1+i]:\n      temp = x[k-1+i] - 2*x[i]\n      \n  elif (0 <= x[i]):\n    temp = x[k+i-1]\n\n  elif (x[k+i-1] <= 0):\n    temp = -x[k+i-1]\n    \n  if temp < ans:\n    ans = temp\n    \nprint(ans)",
        "origin_generated_text": "\n```\nn,k = map(int,input().split())\nx = list(map(int,input().split()))\nans = 10**9\n  \nfor i in range(n-k+1):\n  if x[k-1+i]*x[i] < 0:\n    if x[k-1+i] <= abs(x[i]) :\n      temp = 2*x[k-1+i] - x[i]\n    elif abs(x[i]) < x[k-1+i]:\n      temp = x[k-1+i] - 2*x[i]\n      \n  elif (0 <= x[i]):\n    temp = x[k+i-1]\n\n  elif (x[k+i-1] <= 0):\n    temp = -x[k+i-1]\n    \n  if temp < ans:\n    ans = temp\n    \nprint(ans)```\n "
    },
    {
        "user_id": "u200527996",
        "problem_id": "p02959",
        "submission1_id": "s802662914",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if A[i] >= B[i]:\n        ans += B[i]\n    if A[i] < B[i]:\n        ans += A[i]\n        if A[i+1] >= (B[i] - A[i]):\n            A[i+1] -= B[i] - A[i]\n            ans += B[i] - A[i]\n        else:\n            ans += A[i+1]\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if A[i] >= B[i]:\n        ans += B[i]\n    if A[i] < B[i]:\n        ans += A[i]\n        if A[i+1] >= (B[i] - A[i]):\n            A[i+1] -= B[i] - A[i]\n            ans += B[i] - A[i]\n        else:\n            ans += A[i+1]\nprint(ans)```\n "
    },
    {
        "user_id": "u086503932",
        "problem_id": "p04019",
        "submission1_id": "s400551564",
        "code_content": "\nS = input()\na = S.count('N')\nb = S.count('S')\nc = S.count('E') \nd = S.count('W')\n\nif a*b > 0 and c==0 and d==0 or c*d >0 and a==0 and b==0:\n  print('Yes')\nelif a==0 and b==0 and c==0 and d==0:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nS = input()\na = S.count('N')\nb = S.count('S')\nc = S.count('E') \nd = S.count('W')\n\nif a*b > 0 and c==0 and d==0 or c*d >0 and a==0 and b==0:\n  print('Yes')\nelif a==0 and b==0 and c==0 and d==0:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u641722141",
        "problem_id": "p03943",
        "submission1_id": "s665848524",
        "code_content": "\na,b,c=map(int,input().split())\nif abs(a-b)<=c:print('Yes')\nelse:print('No')",
        "origin_generated_text": "\n```\na,b,c=map(int,input().split())\nif abs(a-b)<=c:print('Yes')\nelse:print('No')```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s045277997",
        "code_content": "\nn = int(input())\ntree = [[] for i in range(n+1)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    tree[id] = [left, right]\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nprint('Preorder')\npreoder(0)\nprint('')\nprint('Inorder')\ninorder(0)\nprint('')\nprint('Postorder')\npostorder(0)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\ntree = [[] for i in range(n+1)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    tree[id] = [left, right]\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nprint('Preorder')\npreoder(0)\nprint('')\nprint('Inorder')\ninorder(0)\nprint('')\nprint('Postorder')\npostorder(0)\n\n```\n "
    },
    {
        "user_id": "u072717685",
        "problem_id": "p03796",
        "submission1_id": "s220690653",
        "code_content": "\nn = int(input())\nr = 1\nw = 10**9 + 7\nfor i in range(n):\n  r = (r * (i+1)) % w\n  \n  \nprint(r)",
        "origin_generated_text": "\n```\nn = int(input())\nr = 1\nw = 10**9 + 7\nfor i in range(n):\n  r = (r * (i+1)) % w\n  \n  \nprint(r)```\n "
    },
    {
        "user_id": "u283869437",
        "problem_id": "p03972",
        "submission1_id": "s366542834",
        "code_content": "\nW,H=map(int,input().split())\np=sorted(int(input())for _ in'_'*W)\np+=10**18,\nq=sorted(int(input())for _ in'_'*H)\nq+=10**18,\nz=i=j=0\nh,w=H+1,W+1\nwhile i<W or j<H:\n\tif h*p[i]<=w*q[j]:\n\t\tz+=h*p[i]\n\t\ti+=1\n\t\tw-=1\n\telse:\n\t\tz+=w*q[j]\n\t\tj+=1\n\t\th-=1\nprint(z)\n",
        "origin_generated_text": "\n```\nW,H=map(int,input().split())\np=sorted(int(input())for _ in'_'*W)\np+=10**18,\nq=sorted(int(input())for _ in'_'*H)\nq+=10**18,\nz=i=j=0\nh,w=H+1,W+1\nwhile i<W or j<H:\n\tif h*p[i]<=w*q[j]:\n\t\tz+=h*p[i]\n\t\ti+=1\n\t\tw-=1\n\telse:\n\t\tz+=w*q[j]\n\t\tj+=1\n\t\th-=1\nprint(z)\n```\n "
    },
    {
        "user_id": "u483304397",
        "problem_id": "p02912",
        "submission1_id": "s808137767",
        "code_content": "\nN,M = map(int, input().split())\nimport heapq\nA = list(map(int, input().split()))\nA = [(-x,x) for x in A]\nheapq.heapify(A)\nwhile M > 0:\n    a = heapq.heappop(A)[1]\n    heapq.heappush(A, (-int(a/2), int(a/2)))\n    M -= 1\nB = [a[1] for a in A]\nprint(sum(B))",
        "origin_generated_text": "\n```\nN,M = map(int, input().split())\nimport heapq\nA = list(map(int, input().split()))\nA = [(-x,x) for x in A]\nheapq.heapify(A)\nwhile M > 0:\n    a = heapq.heappop(A)[1]\n    heapq.heappush(A, (-int(a/2), int(a/2)))\n    M -= 1\nB = [a[1] for a in A]\nprint(sum(B))```\n "
    },
    {
        "user_id": "u740284863",
        "problem_id": "p03992",
        "submission1_id": "s014052935",
        "code_content": "\ns=input()\nprint(s[0:4]+\" \"+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[0:4]+\" \"+s[4:])```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03633",
        "submission1_id": "s960432154",
        "code_content": "\nimport functools\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n \ndef lcm(A, B):\n  return A * B \n \nprint(functools.reduce(lcm, T) \n",
        "origin_generated_text": "\n```\nimport functools\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n \ndef lcm(A, B):\n  return A * B \n \nprint(functools.reduce(lcm, T) \n```\n "
    },
    {
        "user_id": "u459150945",
        "problem_id": "p03568",
        "submission1_id": "s304868794",
        "code_content": "\nN = int(input())\nAn = list(map(int, input().split()))\nprint((3**N - 2**N) \n",
        "origin_generated_text": "\n```\nN = int(input())\nAn = list(map(int, input().split()))\nprint((3**N - 2**N) \n```\n "
    },
    {
        "user_id": "u326647750",
        "problem_id": "p03760",
        "submission1_id": "s927892812",
        "code_content": "\no = list(input())\ne = list(input())\nfor i, j in zip(o, e):\n    print(i + j, end=\"\")\n",
        "origin_generated_text": "\n```\no = list(input())\ne = list(input())\nfor i, j in zip(o, e):\n    print(i + j, end=\"\")\n```\n "
    },
    {
        "user_id": "u276192130",
        "problem_id": "p03613",
        "submission1_id": "s289214295",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nnum = [0 for i in range(max(a)+3)]\nfor i in a:\n    num[i] += 1\nans = 0\nfor i in range(max(a)-2):\n    temp = num[i] + num[i+1] + num[i+2]\n    ans = max(temp, ans)\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nnum = [0 for i in range(max(a)+3)]\nfor i in a:\n    num[i] += 1\nans = 0\nfor i in range(max(a)-2):\n    temp = num[i] + num[i+1] + num[i+2]\n    ans = max(temp, ans)\nprint(ans)```\n "
    },
    {
        "user_id": "u572193732",
        "problem_id": "p02959",
        "submission1_id": "s476499613",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncount = 0\nfor i in range(N):\n    if A[i] < B[i]:\n        count += A[i]\n        B[i] -= A[i]\n    else:\n        count += B[i]\n        B[i] = 0\n    if A[i+1] < B[i]:\n        count += A[i+1]\n        B[i] -= A[i+1]\n        A[i+1] = 0\n    else:\n        count += B[i]\n        B[i] = 0\n        A[i+1] -= B[i]\n        \nprint(count)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncount = 0\nfor i in range(N):\n    if A[i] < B[i]:\n        count += A[i]\n        B[i] -= A[i]\n    else:\n        count += B[i]\n        B[i] = 0\n    if A[i+1] < B[i]:\n        count += A[i+1]\n        B[i] -= A[i+1]\n        A[i+1] = 0\n    else:\n        count += B[i]\n        B[i] = 0\n        A[i+1] -= B[i]\n        \nprint(count)```\n "
    },
    {
        "user_id": "u569742427",
        "problem_id": "p03563",
        "submission1_id": "s663626956",
        "code_content": "\nR=int(input())\nG=int(input())\n\nprint(G*2-R)\n",
        "origin_generated_text": "\n```\nR=int(input())\nG=int(input())\n\nprint(G*2-R)\n```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p04019",
        "submission1_id": "s864565282",
        "code_content": "\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    s = S()\n    ans = [0, 0]\n    for si in s:\n        if si == \"N\":\n            ans[0] += 1\n        elif si == \"W\":\n            ans[1] += 1\n        elif si == \"S\":\n            ans[0] -= 1\n        else:\n            ans[1] -= 1\n    if ans == [0, 0]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    s = S()\n    ans = [0, 0]\n    for si in s:\n        if si == \"N\":\n            ans[0] += 1\n        elif si == \"W\":\n            ans[1] += 1\n        elif si == \"S\":\n            ans[0] -= 1\n        else:\n            ans[1] -= 1\n    if ans == [0, 0]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n```\n "
    },
    {
        "user_id": "u174273188",
        "problem_id": "p02963",
        "submission1_id": "s487578886",
        "code_content": "\ndef resolve():\n    s = int(input())\n    \n    x2, y2 = 10 ** 9, 1\n    y3 = s \n    x3 = (s \n    print(0, 0, x2, y2, x3, y3)\n\n\nif __name__ == \"__main__\":\n    resolve()\n",
        "origin_generated_text": "\n```\ndef resolve():\n    s = int(input())\n    \n    x2, y2 = 10 ** 9, 1\n    y3 = s \n    x3 = (s \n    print(0, 0, x2, y2, x3, y3)\n\n\nif __name__ == \"__main__\":\n    resolve()\n```\n "
    },
    {
        "user_id": "u361826811",
        "problem_id": "p03760",
        "submission1_id": "s872301249",
        "code_content": "\n\n\nimport sys\n\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\n\nO, E = read().decode('utf8').split()\nans = [i+j for i, j in zip(O, E)]\n\nprint(''.join(ans[::2]))\n",
        "origin_generated_text": "\n```\n\n\nimport sys\n\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\n\nO, E = read().decode('utf8').split()\nans = [i+j for i, j in zip(O, E)]\n\nprint(''.join(ans[::2]))\n```\n "
    },
    {
        "user_id": "u161164709",
        "problem_id": "p02556",
        "submission1_id": "s625870490",
        "code_content": "\nn = int(input())\nxy_array = [list(map(int, input().split())) for _ in range(n)]\n\nth = pow(10, 9)\nright_up_max = -th\nleft_down_min = th\nleft_up_max = -th\nright_down_min = th\n\nfor x, y in xy_array:\n    right_up_max = max(x + y, right_up_max)\n    left_down_min = min(x + y, left_down_min)\n    left_up_max = max(x - y, left_up_max)\n    right_down_min = min(x - y, right_down_min)\n\nans = max(right_up_max - left_down_min, left_up_max - right_down_min)\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nxy_array = [list(map(int, input().split())) for _ in range(n)]\n\nth = pow(10, 9)\nright_up_max = -th\nleft_down_min = th\nleft_up_max = -th\nright_down_min = th\n\nfor x, y in xy_array:\n    right_up_max = max(x + y, right_up_max)\n    left_down_min = min(x + y, left_down_min)\n    left_up_max = max(x - y, left_up_max)\n    right_down_min = min(x - y, right_down_min)\n\nans = max(right_up_max - left_down_min, left_up_max - right_down_min)\nprint(ans)```\n "
    },
    {
        "user_id": "u333731247",
        "problem_id": "p03041",
        "submission1_id": "s419862107",
        "code_content": "\nN,K=map(int,input().split())\nS=list(input())\n\nS[K-1]=S[K-1].lower()\n\nprint(\"\".join(S))",
        "origin_generated_text": "\n```\nN,K=map(int,input().split())\nS=list(input())\n\nS[K-1]=S[K-1].lower()\n\nprint(\"\".join(S))```\n "
    },
    {
        "user_id": "u692053345",
        "problem_id": "p02854",
        "submission1_id": "s866799807",
        "code_content": "\nn=int(input())\nS=list(map(int, input().split()))\nSum=sum(S)\n\nwa=0\ncount=0\nfor i in range(n):\n    if wa<Sum/2:\n        wa=wa+S[i]\n        count=count+1\n        \nprint(int(abs(Sum-2*wa)) if count<n else 0)",
        "origin_generated_text": "\n```\nn=int(input())\nS=list(map(int, input().split()))\nSum=sum(S)\n\nwa=0\ncount=0\nfor i in range(n):\n    if wa<Sum/2:\n        wa=wa+S[i]\n        count=count+1\n        \nprint(int(abs(Sum-2*wa)) if count<n else 0)```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s018403980",
        "code_content": "\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y - X[P[j][a]]:\n            Y -= X[P[j][a]]\n            num += 2 ** j\n    print(num)",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y - X[P[j][a]]:\n            Y -= X[P[j][a]]\n            num += 2 ** j\n    print(num)```\n "
    },
    {
        "user_id": "u400765446",
        "problem_id": "p02385",
        "submission1_id": "s439234011",
        "code_content": "\nclass Dice:\n\n    def __init__(self):\n        \n        \n        self.t = 1\n        self.s = 2\n        self.e = 3\n        self.w = 4\n        self.n = 5\n        self.b = 6\n        self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n\n    def __init__(self, t, s, e, w, n, b):\n        \n        self.t = t\n        self.s = s\n        self.e = e\n        self.w = w\n        self.n = n\n        self.b = b\n        self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n\n    def rot(self, way):\n        if way == 0: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.n, self.t, self.e, self.w, self.b, self.s\n        elif way == 1: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.s, self.b, self.e, self.w, self.t, self.n\n        elif way == 2: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.w, self.s, self.t, self.b, self.n, self.e\n        elif way == 3: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.e, self.s, self.b, self.t, self.n, self.w\n        elif way == 4: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.t, self.w, self.s, self.n, self.e, self.b\n\ndef main():\n    t1,s1,e1,w1,n1,b1 = map(int, input().split())\n    t2,s2,e2,w2,n2,b2 = map(int, input().split())\n\n    dice1 = Dice(t1,s1,e1,w1,n1,b1)\n    dice2 = Dice(t2,s2,e2,w2,n2,b2)\n\n    flag = 0\n    for _ in range(6):\n        if (dice1.t, dice1.s, dice1.e, dice1.w, dice1.n, dice1.b) == (dice2.t, dice2.s, dice2.e, dice2.w, dice2.n, dice2.b):\n            flag = 1\n            break\n        else:\n            dice2.rot(4)\n\n    if flag == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n\n",
        "origin_generated_text": "\n```\nclass Dice:\n\n    def __init__(self):\n        \n        \n        self.t = 1\n        self.s = 2\n        self.e = 3\n        self.w = 4\n        self.n = 5\n        self.b = 6\n        self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n\n    def __init__(self, t, s, e, w, n, b):\n        \n        self.t = t\n        self.s = s\n        self.e = e\n        self.w = w\n        self.n = n\n        self.b = b\n        self.rotway = {\"S\": 0, \"N\": 1, \"E\": 2, \"W\": 3}\n\n    def rot(self, way):\n        if way == 0: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.n, self.t, self.e, self.w, self.b, self.s\n        elif way == 1: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.s, self.b, self.e, self.w, self.t, self.n\n        elif way == 2: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.w, self.s, self.t, self.b, self.n, self.e\n        elif way == 3: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.e, self.s, self.b, self.t, self.n, self.w\n        elif way == 4: \n            self.t, self.s, self.e, self.w, self.n, self.b = self.t, self.w, self.s, self.n, self.e, self.b\n\ndef main():\n    t1,s1,e1,w1,n1,b1 = map(int, input().split())\n    t2,s2,e2,w2,n2,b2 = map(int, input().split())\n\n    dice1 = Dice(t1,s1,e1,w1,n1,b1)\n    dice2 = Dice(t2,s2,e2,w2,n2,b2)\n\n    flag = 0\n    for _ in range(6):\n        if (dice1.t, dice1.s, dice1.e, dice1.w, dice1.n, dice1.b) == (dice2.t, dice2.s, dice2.e, dice2.w, dice2.n, dice2.b):\n            flag = 1\n            break\n        else:\n            dice2.rot(4)\n\n    if flag == 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n\n```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03303",
        "submission1_id": "s274397717",
        "code_content": "\ns=input()\nn=int(input())\nans=''\nfor i in range(len(s)):\n  if i%n==0:\n    ans+=s[i]\nprint(ans)",
        "origin_generated_text": "\n```\ns=input()\nn=int(input())\nans=''\nfor i in range(len(s)):\n  if i%n==0:\n    ans+=s[i]\nprint(ans)```\n "
    },
    {
        "user_id": "u397256488",
        "problem_id": "p03752",
        "submission1_id": "s985125926",
        "code_content": "\nN,K = map(int,input().split())\nbills = list(map(int,input().split()))\nans = 0\nk = 0\nwhile k < K:\n\tk = 0\n\tcost =[]\n\tcosd = {}\n\ttatekae = {}\n\tmaxh = 0\n\tfor bi,b in enumerate(bills):\n\t\tif b > maxh:\n\t\t\tcost.append(0)\n\t\t\tmaxh = b\n\t\t\tk = k + 1\n\t\telse:\n\t\t\tc = maxh - b + 1\n\t\t\tcost.append(c)\n\t\t\tmaxh2 = maxh + 1\n\t\t\ttatekae[bi] = []\n\t\t\tfor b2i,b2 in enumerate(bills[bi:]):\n\t\t\t\tif maxh2 < b2:\n\t\t\t\t\tbreak\n\t\t\t\telif maxh2 == b2:\n\t\t\t\t\tc = c + 1\n\t\t\t\t\tmaxh2 = maxh2 + 1\n\t\t\t\t\ttatekae[bi].append(b2i + bi)\n\t\t\tcosd[bi] = c\n\tif k >= K:\n\t\tbreak\n\ta = min(cosd.items(),key =lambda x: x[1])[0]\n\tans = ans + cosd[a]\n\tbills[a] = bills[a] + cost[a]\n\tfor t in tatekae[a]:\n\t\tbills[t] = bills[t] + 1\n\tk = k + 1\nprint(ans)",
        "origin_generated_text": "\n```\nN,K = map(int,input().split())\nbills = list(map(int,input().split()))\nans = 0\nk = 0\nwhile k < K:\n\tk = 0\n\tcost =[]\n\tcosd = {}\n\ttatekae = {}\n\tmaxh = 0\n\tfor bi,b in enumerate(bills):\n\t\tif b > maxh:\n\t\t\tcost.append(0)\n\t\t\tmaxh = b\n\t\t\tk = k + 1\n\t\telse:\n\t\t\tc = maxh - b + 1\n\t\t\tcost.append(c)\n\t\t\tmaxh2 = maxh + 1\n\t\t\ttatekae[bi] = []\n\t\t\tfor b2i,b2 in enumerate(bills[bi:]):\n\t\t\t\tif maxh2 < b2:\n\t\t\t\t\tbreak\n\t\t\t\telif maxh2 == b2:\n\t\t\t\t\tc = c + 1\n\t\t\t\t\tmaxh2 = maxh2 + 1\n\t\t\t\t\ttatekae[bi].append(b2i + bi)\n\t\t\tcosd[bi] = c\n\tif k >= K:\n\t\tbreak\n\ta = min(cosd.items(),key =lambda x: x[1])[0]\n\tans = ans + cosd[a]\n\tbills[a] = bills[a] + cost[a]\n\tfor t in tatekae[a]:\n\t\tbills[t] = bills[t] + 1\n\tk = k + 1\nprint(ans)```\n "
    },
    {
        "user_id": "u844789719",
        "problem_id": "p03965",
        "submission1_id": "s866140112",
        "code_content": "\nS = [1 if _ == 'p' else 0 for _ in input()]\nN = len(S)\ncount_g = 0\ncount_p = 0\nscore = 0\nfor hand_t in S:\n    if hand_t == 0 and count_p <= count_g:\n        count_p += 1\n        hand_a = 1\n    else:\n        count_g += 1\n        hand_a = 0\n    score += hand_a - hand_t\n\nprint(score)\n",
        "origin_generated_text": "\n```\nS = [1 if _ == 'p' else 0 for _ in input()]\nN = len(S)\ncount_g = 0\ncount_p = 0\nscore = 0\nfor hand_t in S:\n    if hand_t == 0 and count_p <= count_g:\n        count_p += 1\n        hand_a = 1\n    else:\n        count_g += 1\n        hand_a = 0\n    score += hand_a - hand_t\n\nprint(score)\n```\n "
    },
    {
        "user_id": "u516050812",
        "problem_id": "p02553",
        "submission1_id": "s637713268",
        "code_content": "\ninp = list(map(int,input().split()))\nans = []\nfor i in range(3):\n  for j in range(i+1,4):\n    ans.append(inp[i] * inp[j])\n    \nprint(max(ans))",
        "origin_generated_text": "\n```\ninp = list(map(int,input().split()))\nans = []\nfor i in range(3):\n  for j in range(i+1,4):\n    ans.append(inp[i] * inp[j])\n    \nprint(max(ans))```\n "
    },
    {
        "user_id": "u265768297",
        "problem_id": "p03296",
        "submission1_id": "s062899045",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n    if a[i]==a[i+1]:\n        a[i+1]=-1\n        ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n    if a[i]==a[i+1]:\n        a[i+1]=-1\n        ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u850266651",
        "problem_id": "p03023",
        "submission1_id": "s019279677",
        "code_content": "\nN = int(input())\nprint(180*(N-3))",
        "origin_generated_text": "\n```\nN = int(input())\nprint(180*(N-3))```\n "
    },
    {
        "user_id": "u764759179",
        "problem_id": "p02385",
        "submission1_id": "s807573479",
        "code_content": "\n\n\nimport random\n\n\nclass Dice() :\n\n    mask = {'N':(1,5,2,3,0,4), 'E':(3,1,0,5,4,2),\n            'W':(2,1,5,0,4,3), 'S':(4,0,2,3,5,1)}\n    way = (\"N\",\"E\",\"W\",\"S\")\n\n    def __init__(self, data):\n        self.label = data\n\n    def move(self, data):\n        self.label = [self.label[idx] for idx in self.mask[data]]\n\n    def get_up(self):\n        return self.label[0]\n\n    def compare(self, dice2):\n        ok = False\n        for i in range(1000):\n            check = True\n            for i2 in range(6):\n                if self.label[i2] == dice2.label[i2] :\n                    continue\n                else:\n                    check = False\n                    break\n\n            if check :\n                ok = True\n                break\n            else:\n                self.move(self.way[random.randint(0,3)])\n        return ok\n\ndice1 = Dice(input().split())\ndice2 = Dice(input().split())\n\nif dice1.compare(dice2) :\n    print (\"Yes\")\nelse:\n    print (\"No\")\n",
        "origin_generated_text": "\n```\n\n\nimport random\n\n\nclass Dice() :\n\n    mask = {'N':(1,5,2,3,0,4), 'E':(3,1,0,5,4,2),\n            'W':(2,1,5,0,4,3), 'S':(4,0,2,3,5,1)}\n    way = (\"N\",\"E\",\"W\",\"S\")\n\n    def __init__(self, data):\n        self.label = data\n\n    def move(self, data):\n        self.label = [self.label[idx] for idx in self.mask[data]]\n\n    def get_up(self):\n        return self.label[0]\n\n    def compare(self, dice2):\n        ok = False\n        for i in range(1000):\n            check = True\n            for i2 in range(6):\n                if self.label[i2] == dice2.label[i2] :\n                    continue\n                else:\n                    check = False\n                    break\n\n            if check :\n                ok = True\n                break\n            else:\n                self.move(self.way[random.randint(0,3)])\n        return ok\n\ndice1 = Dice(input().split())\ndice2 = Dice(input().split())\n\nif dice1.compare(dice2) :\n    print (\"Yes\")\nelse:\n    print (\"No\")\n```\n "
    },
    {
        "user_id": "u382431597",
        "problem_id": "p02767",
        "submission1_id": "s064700252",
        "code_content": "\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\n\nn = int(input())\nx = list(map(int, input().split()))\n\nave = sum(x) / len(x)\nsquared = sum([i*i for i in x])\n\nprint(Decimal(str(squared - n*(ave)*(ave))).quantize(Decimal('0'), rounding=ROUND_HALF_UP))",
        "origin_generated_text": "\n```\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\n\nn = int(input())\nx = list(map(int, input().split()))\n\nave = sum(x) / len(x)\nsquared = sum([i*i for i in x])\n\nprint(Decimal(str(squared - n*(ave)*(ave))).quantize(Decimal('0'), rounding=ROUND_HALF_UP))```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p03716",
        "submission1_id": "s815837487",
        "code_content": "\nimport sys\nfrom collections import Counter, deque, defaultdict\nfrom math import factorial\nimport heapq, bisect\nimport math\nimport itertools\nsys.setrecursionlimit(10 ** 5 + 10)\nINF = 10*5\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\n\nn = INT()\na = LIST()\na1 = a[:2*n]\na2 = a[n:]\na2.reverse()\nfor i in range(2*n):\n    a2[i] = a2[i]*-1\n\ndef searchmax(a):\n    maxl = [0]*(n+1)\n    left = a[:n]\n    center = a[n:]\n    heapq.heapify(left)\n    maxl[0] = sum(left)\n    for i in range(1,n+1):\n        heapq.heappushpop(left, center[i-1])\n        maxl[i] = sum(left)\n    return maxl\n\nmaxll = searchmax(a1)\nminrr = searchmax(a2)\nminrr.reverse()\nres = [INF *-1]*(n+1)\nfor i in range(n+1):\n    res[i] = maxll[i] + minrr[i]\n\nprint(max(res)) \n",
        "origin_generated_text": "\n```\nimport sys\nfrom collections import Counter, deque, defaultdict\nfrom math import factorial\nimport heapq, bisect\nimport math\nimport itertools\nsys.setrecursionlimit(10 ** 5 + 10)\nINF = 10*5\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\n\nn = INT()\na = LIST()\na1 = a[:2*n]\na2 = a[n:]\na2.reverse()\nfor i in range(2*n):\n    a2[i] = a2[i]*-1\n\ndef searchmax(a):\n    maxl = [0]*(n+1)\n    left = a[:n]\n    center = a[n:]\n    heapq.heapify(left)\n    maxl[0] = sum(left)\n    for i in range(1,n+1):\n        heapq.heappushpop(left, center[i-1])\n        maxl[i] = sum(left)\n    return maxl\n\nmaxll = searchmax(a1)\nminrr = searchmax(a2)\nminrr.reverse()\nres = [INF *-1]*(n+1)\nfor i in range(n+1):\n    res[i] = maxll[i] + minrr[i]\n\nprint(max(res)) \n```\n "
    },
    {
        "user_id": "u796424048",
        "problem_id": "p03626",
        "submission1_id": "s460557632",
        "code_content": "\nN = int(input())\nS_1 = list(input())\nS_2 = list(input())\n\n\n\nif S_1[0] == S_2[0]:\n    res = 3\n    flag = 0\n    i = 1\nelse:\n    res = 6\n    flag = 1\n    i = 2\n\nwhile i != N:\n    if S_1[i] == S_2[i]:\n        if flag == 0:\n            res *= 2 \n        else:\n            res *= 1\n            flag = 0\n        i += 1\n\n    else:\n        if flag == 0:\n            res *= 2\n            flag = 1\n        else:\n            res *= 3\n        i += 2\n        \nans = res%1000000007\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nS_1 = list(input())\nS_2 = list(input())\n\n\n\nif S_1[0] == S_2[0]:\n    res = 3\n    flag = 0\n    i = 1\nelse:\n    res = 6\n    flag = 1\n    i = 2\n\nwhile i != N:\n    if S_1[i] == S_2[i]:\n        if flag == 0:\n            res *= 2 \n        else:\n            res *= 1\n            flag = 0\n        i += 1\n\n    else:\n        if flag == 0:\n            res *= 2\n            flag = 1\n        else:\n            res *= 3\n        i += 2\n        \nans = res%1000000007\n\nprint(ans)```\n "
    },
    {
        "user_id": "u550535134",
        "problem_id": "p03573",
        "submission1_id": "s863313216",
        "code_content": "\nA, B, C = map(int, input().split())\nprint(\"A\" if B == C else \"B\" if A == C else \"C\")",
        "origin_generated_text": "\n```\nA, B, C = map(int, input().split())\nprint(\"A\" if B == C else \"B\" if A == C else \"C\")```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p03343",
        "submission1_id": "s528081204",
        "code_content": "\nn,k,q=map(int,input().split())\na=list(map(int,input().split()))\nans=10**10\nfor x in a:\n  b=[[]]\n  can=0\n  for i in a:\n    if i<x:\n      if len(b[-1]):b.append([])\n    else:b[-1].append(i)\n  if len(b[-1])==0:del b[-1]\n  for i in range(len(b)):b[i].sort()\n  c=[]\n  for i in b:\n    i.sort()\n    if len(i)>=k:c+=i[:len(i)-k+1]\n  if len(c)<q:continue\n  ans=min(ans,c[q-1]-c[0])\nprint(ans)",
        "origin_generated_text": "\n```\nn,k,q=map(int,input().split())\na=list(map(int,input().split()))\nans=10**10\nfor x in a:\n  b=[[]]\n  can=0\n  for i in a:\n    if i<x:\n      if len(b[-1]):b.append([])\n    else:b[-1].append(i)\n  if len(b[-1])==0:del b[-1]\n  for i in range(len(b)):b[i].sort()\n  c=[]\n  for i in b:\n    i.sort()\n    if len(i)>=k:c+=i[:len(i)-k+1]\n  if len(c)<q:continue\n  ans=min(ans,c[q-1]-c[0])\nprint(ans)```\n "
    },
    {
        "user_id": "u318042557",
        "problem_id": "p02922",
        "submission1_id": "s643369443",
        "code_content": "\nA, B = map(int, input().split())\nsum = 0\ni = 1\nif B != 1:\n    sum = A*i\n    while sum < B:\n        sum += A*i\n        i += 1\n    print(i-1)\nelse:\n    print(0)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\nsum = 0\ni = 1\nif B != 1:\n    sum = A*i\n    while sum < B:\n        sum += A*i\n        i += 1\n    print(i-1)\nelse:\n    print(0)```\n "
    },
    {
        "user_id": "u981931040",
        "problem_id": "p03546",
        "submission1_id": "s654163359",
        "code_content": "\ndef warshall_floyd():\n    for middle in range(10):\n        for start in range(10):\n            for end in range(10):\n                costs[start][end] = min(costs[start][end], costs[start][middle] + costs[middle][end])\n\n\nH, W = map(int, input().split())\ncosts = []\n\nfor i in range(10):\n    costs.append(list(map(int, input().split())))\n\nwarshall_floyd()\n\nans = 0\nfor i in range(H):\n    wall = list(map(int, input().split()))\n    for num in wall:\n        if num != -1:\n            ans += costs[num][1]\nprint(ans)",
        "origin_generated_text": "\n```\ndef warshall_floyd():\n    for middle in range(10):\n        for start in range(10):\n            for end in range(10):\n                costs[start][end] = min(costs[start][end], costs[start][middle] + costs[middle][end])\n\n\nH, W = map(int, input().split())\ncosts = []\n\nfor i in range(10):\n    costs.append(list(map(int, input().split())))\n\nwarshall_floyd()\n\nans = 0\nfor i in range(H):\n    wall = list(map(int, input().split()))\n    for num in wall:\n        if num != -1:\n            ans += costs[num][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u032222383",
        "problem_id": "p03102",
        "submission1_id": "s853135950",
        "code_content": "\nn,m,c=map(int,input().split())\nb=list(map(int, input().split()))\nu=0\nfor i in range(n):\n    inp=list(map(int,input().split()))\n    s=0\n    for j in range(m):\n        s+=inp[j]*b[j]\n    s+=c\n    if s>0:\n        u+=1\nprint(u)",
        "origin_generated_text": "\n```\nn,m,c=map(int,input().split())\nb=list(map(int, input().split()))\nu=0\nfor i in range(n):\n    inp=list(map(int,input().split()))\n    s=0\n    for j in range(m):\n        s+=inp[j]*b[j]\n    s+=c\n    if s>0:\n        u+=1\nprint(u)```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03479",
        "submission1_id": "s919053388",
        "code_content": "\nX, Y = map(int, input().split())\nc = 1\nwhile(True):\n  if X <= Y and X % 2 == 0:\n    X *= 2\n    c += 1\n  else:\n    break\nprint(c)",
        "origin_generated_text": "\n```\nX, Y = map(int, input().split())\nc = 1\nwhile(True):\n  if X <= Y and X % 2 == 0:\n    X *= 2\n    c += 1\n  else:\n    break\nprint(c)```\n "
    },
    {
        "user_id": "u731368968",
        "problem_id": "p03959",
        "submission1_id": "s578906540",
        "code_content": "\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n\nx = [1 for _ in range(N)]\nfor i in range(N):\n    if i == 0:\n        x[i] = 1\n    elif T[i - 1] < T[i]:\n        x[i] = 1\n    else:\n        x[i] = T[i]\n\ny = [1 for _ in range(N)]\nfor i in range(N - 2, -1, -1):\n    if i == N - 1:\n        y[i] == 1\n    if A[i] > A[i + 1]:\n        y[i] = 1\n    else:\n        y[i] = A[i]\n\nans = 1\n\nfor i in range(N):\n    ans = ans * min(x[i], y[i]) % int(1e9 + 7)\n\nprint(ans - 1)\n\n",
        "origin_generated_text": "\n```\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n\nx = [1 for _ in range(N)]\nfor i in range(N):\n    if i == 0:\n        x[i] = 1\n    elif T[i - 1] < T[i]:\n        x[i] = 1\n    else:\n        x[i] = T[i]\n\ny = [1 for _ in range(N)]\nfor i in range(N - 2, -1, -1):\n    if i == N - 1:\n        y[i] == 1\n    if A[i] > A[i + 1]:\n        y[i] = 1\n    else:\n        y[i] = A[i]\n\nans = 1\n\nfor i in range(N):\n    ans = ans * min(x[i], y[i]) % int(1e9 + 7)\n\nprint(ans - 1)\n\n```\n "
    },
    {
        "user_id": "u453642820",
        "problem_id": "p03943",
        "submission1_id": "s981469154",
        "code_content": "\nA=sorted(list(map(int,input().split())))\nprint(\"Yes\" if sum(A)==A[2]*2 else \"No\")",
        "origin_generated_text": "\n```\nA=sorted(list(map(int,input().split())))\nprint(\"Yes\" if sum(A)==A[2]*2 else \"No\")```\n "
    },
    {
        "user_id": "u657512990",
        "problem_id": "p03970",
        "submission1_id": "s101133418",
        "code_content": "\n\ns=input()\nt='CODEFESTIVAL2016'\nans=0\nfor i in range(16):\n    if t[i]!=s[i]:ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\n\ns=input()\nt='CODEFESTIVAL2016'\nans=0\nfor i in range(16):\n    if t[i]!=s[i]:ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u959421160",
        "problem_id": "p03729",
        "submission1_id": "s460553019",
        "code_content": "\nNstr = input().split()\nresult = 'YES'\nfor i in range(2):\n    if Nstr[i][-1] != Nstr[i + 1][0]:\n        result = 'NO'\nprint(result)",
        "origin_generated_text": "\n```\nNstr = input().split()\nresult = 'YES'\nfor i in range(2):\n    if Nstr[i][-1] != Nstr[i + 1][0]:\n        result = 'NO'\nprint(result)```\n "
    },
    {
        "user_id": "u709304134",
        "problem_id": "p02642",
        "submission1_id": "s165029909",
        "code_content": "\nfrom collections import Counter\nimport bisect\nN = int(input())\nA = list(map(int,input().split()))\n\n\n\ncnt = Counter(A)\nA.sort()\nans = 0\nfor i in range(N):\n    if cnt[A[i]] == 1:\n        ans += 1\n        continue\n    idx = bisect.bisect_right(A, pow(A[i],0.5))\n    J = min(idx,i)\n    ok = True\n    for j in range(J):\n        \n        if A[i] % A[j] == 0:\n            ok = False\n            break\n    if ok:\n        ans += 1\nprint (ans)\n\n",
        "origin_generated_text": "\n```\nfrom collections import Counter\nimport bisect\nN = int(input())\nA = list(map(int,input().split()))\n\n\n\ncnt = Counter(A)\nA.sort()\nans = 0\nfor i in range(N):\n    if cnt[A[i]] == 1:\n        ans += 1\n        continue\n    idx = bisect.bisect_right(A, pow(A[i],0.5))\n    J = min(idx,i)\n    ok = True\n    for j in range(J):\n        \n        if A[i] % A[j] == 0:\n            ok = False\n            break\n    if ok:\n        ans += 1\nprint (ans)\n\n```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03343",
        "submission1_id": "s186868861",
        "code_content": "\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef find_maximum(y):\n  C = [[]]\n  for a in A:\n    if a < y:\n      C.append([])\n    else:\n      C[-1].append(a)\n  cand_x = []\n  for Ci in C:\n    m = len(Ci)\n    if m >= K:\n      Ci.sort()\n      cand_x += Ci[:m-K+1]\n  if len(cand_x) >= Q:\n    cand_x.sort()\n    return cand_x[Q-1], cand_x[0]\n  else:\n    return 0, 0\n\nans = float('inf')\nfor a in A:\n  x, y = find_maximum(a)\n  ans = min(ans, x-y)\n\nprint(ans)",
        "origin_generated_text": "\n```\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef find_maximum(y):\n  C = [[]]\n  for a in A:\n    if a < y:\n      C.append([])\n    else:\n      C[-1].append(a)\n  cand_x = []\n  for Ci in C:\n    m = len(Ci)\n    if m >= K:\n      Ci.sort()\n      cand_x += Ci[:m-K+1]\n  if len(cand_x) >= Q:\n    cand_x.sort()\n    return cand_x[Q-1], cand_x[0]\n  else:\n    return 0, 0\n\nans = float('inf')\nfor a in A:\n  x, y = find_maximum(a)\n  ans = min(ans, x-y)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03568",
        "submission1_id": "s568635411",
        "code_content": "\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef S(): return input().rstrip()\ndef LS(): return S().split()\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    n = II()\n    a = LI()\n    ans = 3 ** n\n    a = sum(map(lambda x: x & 1, a))\n    na = n - a\n    print(ans - 2 ** na * (a + 1))\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef S(): return input().rstrip()\ndef LS(): return S().split()\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = 1e10\n\n\ndef solve():\n    n = II()\n    a = LI()\n    ans = 3 ** n\n    a = sum(map(lambda x: x & 1, a))\n    na = n - a\n    print(ans - 2 ** na * (a + 1))\n    return\n\n\n\nif __name__ == '__main__':\n    solve()\n```\n "
    },
    {
        "user_id": "u947883560",
        "problem_id": "p02919",
        "submission1_id": "s879481824",
        "code_content": "\n\nimport sys\nINF = float(\"inf\")\n\n\nclass MaxBit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [0] * (n + 1)\n\n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s = max(s, self.tree[i])\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] = max(self.tree[i], x)\n            i += i & -i\n\n\nclass MinBit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [n-1] * (n + 1)\n\n    def sum(self, i):\n        s = self.size-1\n        while i > 0:\n            s = min(s, self.tree[i])\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] = min(self.tree[i], x)\n            i += i & -i\n\n\ndef solve(N: int, P: \"List[int]\"):\n\n    prev = MaxBit(N+2)\n    foll = MinBit(N+2)\n    seq = [0]*(N+2)\n\n    inv = {p: i for i, p in enumerate(P)}\n    \n\n    ans = 0\n    for i in range(N, 0, -1):\n        prev.add(inv[i]+2, inv[i]+1)\n        foll.add(N-inv[i]+1, inv[i]+1)\n        seq[inv[i]+1] = i\n\n        \n        \n        \n        \n        \n        p = prev.sum(inv[i]+1)\n        pp = prev.sum(p)\n        f = foll.sum(N-inv[i])\n        ff = foll.sum(N-f+1)\n        \n        if p > 0:\n            \n            ans += i*(p - pp)\n            \n            ans += i*(f - (inv[i]+1))\n            ans -= i*(inv[i]+1 - p)\n            ans -= i*(ff - f)\n            ans += i\n            \n            \n            \n        \n        if f < N+1:\n            \n            ans += i*(inv[i]+1 - p)\n            \n            ans += i*(ff - f)\n            ans -= i*(f - (inv[i]+1))\n            ans -= i*(inv[i]+1 - p)\n            ans += i\n            \n            \n            \n    print(ans)\n    return\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    P = [int(next(tokens)) for _ in range(N)]  \n    solve(N, P)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nINF = float(\"inf\")\n\n\nclass MaxBit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [0] * (n + 1)\n\n    def sum(self, i):\n        s = 0\n        while i > 0:\n            s = max(s, self.tree[i])\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] = max(self.tree[i], x)\n            i += i & -i\n\n\nclass MinBit:\n    def __init__(self, n):\n        self.size = n\n        self.tree = [n-1] * (n + 1)\n\n    def sum(self, i):\n        s = self.size-1\n        while i > 0:\n            s = min(s, self.tree[i])\n            i -= i & -i\n        return s\n\n    def add(self, i, x):\n        while i <= self.size:\n            self.tree[i] = min(self.tree[i], x)\n            i += i & -i\n\n\ndef solve(N: int, P: \"List[int]\"):\n\n    prev = MaxBit(N+2)\n    foll = MinBit(N+2)\n    seq = [0]*(N+2)\n\n    inv = {p: i for i, p in enumerate(P)}\n    \n\n    ans = 0\n    for i in range(N, 0, -1):\n        prev.add(inv[i]+2, inv[i]+1)\n        foll.add(N-inv[i]+1, inv[i]+1)\n        seq[inv[i]+1] = i\n\n        \n        \n        \n        \n        \n        p = prev.sum(inv[i]+1)\n        pp = prev.sum(p)\n        f = foll.sum(N-inv[i])\n        ff = foll.sum(N-f+1)\n        \n        if p > 0:\n            \n            ans += i*(p - pp)\n            \n            ans += i*(f - (inv[i]+1))\n            ans -= i*(inv[i]+1 - p)\n            ans -= i*(ff - f)\n            ans += i\n            \n            \n            \n        \n        if f < N+1:\n            \n            ans += i*(inv[i]+1 - p)\n            \n            ans += i*(ff - f)\n            ans -= i*(f - (inv[i]+1))\n            ans -= i*(inv[i]+1 - p)\n            ans += i\n            \n            \n            \n    print(ans)\n    return\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    P = [int(next(tokens)) for _ in range(N)]  \n    solve(N, P)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u147458211",
        "problem_id": "p03716",
        "submission1_id": "s506980286",
        "code_content": "\nimport heapq\nN = int(input())\na = list(map(int, input().split()))\n\nmax_result = -1000000\n\nfor k in range(N, 2*N):\n  big_a = a[:k]\n  small_a = a[k:]\n  heapq.heapify(big_a)\n  heapq.heapify(small_a)\n\n  for i in range(len(big_a) - N):\n    heapq.heappop(big_a)\n  for i in range(len(small_a) - N):\n    heapq.heappop(small_a)\n\n  big_sum = sum(big_a)\n  small_sum = sum(small_a)\n\n  if (big_sum - small_sum) > max_result:\n    max_result = big_sum - small_sum\n\nprint(max_result)\n\n",
        "origin_generated_text": "\n```\nimport heapq\nN = int(input())\na = list(map(int, input().split()))\n\nmax_result = -1000000\n\nfor k in range(N, 2*N):\n  big_a = a[:k]\n  small_a = a[k:]\n  heapq.heapify(big_a)\n  heapq.heapify(small_a)\n\n  for i in range(len(big_a) - N):\n    heapq.heappop(big_a)\n  for i in range(len(small_a) - N):\n    heapq.heappop(small_a)\n\n  big_sum = sum(big_a)\n  small_sum = sum(small_a)\n\n  if (big_sum - small_sum) > max_result:\n    max_result = big_sum - small_sum\n\nprint(max_result)\n\n```\n "
    },
    {
        "user_id": "u478719560",
        "problem_id": "p02642",
        "submission1_id": "s542321219",
        "code_content": "\nimport sys\n\n\n\n\n\n\n\n\n\n\n\nstdin = sys.stdin\nsys.setrecursionlimit(10 ** 7)\nMIN = -10 ** 9\nMOD = 10 ** 9 + 7\nINF = float(\"inf\")\nIINF = 10 ** 18\n\ndef main():\n    n = int(stdin.readline())\n    As = list(map(int, stdin.readline().rstrip().split()))\n    As.sort(reverse=True)\n    l = []\n    l.append(As.pop())\n    for i in range(n-1):\n        t = As.pop()\n        u = len(l)\n        flag = False\n        for j in range(u):\n            if t%l[j] == 0:\n                flag=True\n        if flag==False:\n            l.append(t)\n    print(len(l))\n\n\n\n\n\nmain()\n",
        "origin_generated_text": "\n```\nimport sys\n\n\n\n\n\n\n\n\n\n\n\nstdin = sys.stdin\nsys.setrecursionlimit(10 ** 7)\nMIN = -10 ** 9\nMOD = 10 ** 9 + 7\nINF = float(\"inf\")\nIINF = 10 ** 18\n\ndef main():\n    n = int(stdin.readline())\n    As = list(map(int, stdin.readline().rstrip().split()))\n    As.sort(reverse=True)\n    l = []\n    l.append(As.pop())\n    for i in range(n-1):\n        t = As.pop()\n        u = len(l)\n        flag = False\n        for j in range(u):\n            if t%l[j] == 0:\n                flag=True\n        if flag==False:\n            l.append(t)\n    print(len(l))\n\n\n\n\n\nmain()\n```\n "
    },
    {
        "user_id": "u644907318",
        "problem_id": "p03633",
        "submission1_id": "s220987769",
        "code_content": "\ndef gcd(x,y):\n    if x<y:\n        x,y = y,x\n    while y>0:\n        x,y = y,x%y\n    return x\nN = int(input())\nT = list(set([int(input()) for _ in range(N)]))\nt = 1\nfor i in range(1,len(T)):\n    t = gcd(t,T[i])\nprint(t*sum(T))",
        "origin_generated_text": "\n```\ndef gcd(x,y):\n    if x<y:\n        x,y = y,x\n    while y>0:\n        x,y = y,x%y\n    return x\nN = int(input())\nT = list(set([int(input()) for _ in range(N)]))\nt = 1\nfor i in range(1,len(T)):\n    t = gcd(t,T[i])\nprint(t*sum(T))```\n "
    },
    {
        "user_id": "u362127784",
        "problem_id": "p02660",
        "submission1_id": "s340629916",
        "code_content": "\na =int(input())\nlist = []\nb = 1\nfor i in range(2,44):\n    list.append(b)\n    b = b + i\nn = 0\ne = 0\nk = 0\nfor i in range(2,1000000):\n    if (a % i == 0):\n        warikaisi = True\n        while(warikaisi):\n            if a % i == 0:\n                list.append(i)\n                a = a / i\n                e = e + 1\n                if (e == list[k]):\n                    n = n + 1\n                    k = k + 1\n            else:\n                e = 0\n                k = 0\n                warikaisi = False\nif (a >= 1000000):\n    n = 0\nprint(n)",
        "origin_generated_text": "\n```\na =int(input())\nlist = []\nb = 1\nfor i in range(2,44):\n    list.append(b)\n    b = b + i\nn = 0\ne = 0\nk = 0\nfor i in range(2,1000000):\n    if (a % i == 0):\n        warikaisi = True\n        while(warikaisi):\n            if a % i == 0:\n                list.append(i)\n                a = a / i\n                e = e + 1\n                if (e == list[k]):\n                    n = n + 1\n                    k = k + 1\n            else:\n                e = 0\n                k = 0\n                warikaisi = False\nif (a >= 1000000):\n    n = 0\nprint(n)```\n "
    },
    {
        "user_id": "u320763652",
        "problem_id": "p03998",
        "submission1_id": "s589942741",
        "code_content": "\n```\na = input()\nb = input()\nc = input()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\na = input()\nb = input()\nc = input()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u831274245",
        "problem_id": "p03200",
        "submission1_id": "s051858594",
        "code_content": "\nS = input().strip()\n\ncount = 0\nsuma = 0\nfor i in S:\n  if i==\"W\":\n    suma += count\n  else:\n    count += 1\nprint(suma)",
        "origin_generated_text": "\n```\nS = input().strip()\n\ncount = 0\nsuma = 0\nfor i in S:\n  if i==\"W\":\n    suma += count\n  else:\n    count += 1\nprint(suma)```\n "
    },
    {
        "user_id": "u740267532",
        "problem_id": "p02640",
        "submission1_id": "s535970343",
        "code_content": "\ndef animal(x,y):\n    if x*2 <= y <= x*4:\n        return \"Yes\"\n    return \"No\"\n\nif __name__ == \"__main__\":\n    x,y = map(int,input().split())\n    print(animal(x,y))",
        "origin_generated_text": "\n```\ndef animal(x,y):\n    if x*2 <= y <= x*4:\n        return \"Yes\"\n    return \"No\"\n\nif __name__ == \"__main__\":\n    x,y = map(int,input().split())\n    print(animal(x,y))```\n "
    },
    {
        "user_id": "u894258749",
        "problem_id": "p03079",
        "submission1_id": "s998032863",
        "code_content": "\ninpl = lambda: list(map(int,input().split()))\n\nA, B, C = inpl()\nif A==B==C:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\ninpl = lambda: list(map(int,input().split()))\n\nA, B, C = inpl()\nif A==B==C:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u282347497",
        "problem_id": "p03200",
        "submission1_id": "s428752782",
        "code_content": "\ns = input()\nn = len(s)\nsum = [0] * (n + 1)\nsum[0] = (s[0] == 'B')\nfor i in range(1 , n):\n\tsum[i] = sum[i-1] + (s[i] == 'B')\nans = 0\nfor i in range(n):\n\tif s[i] == 'W':\n\t\tans += sum[i]\nprint(ans)\n\t",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\nsum = [0] * (n + 1)\nsum[0] = (s[0] == 'B')\nfor i in range(1 , n):\n\tsum[i] = sum[i-1] + (s[i] == 'B')\nans = 0\nfor i in range(n):\n\tif s[i] == 'W':\n\t\tans += sum[i]\nprint(ans)\n\t```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03080",
        "submission1_id": "s092050398",
        "code_content": "\nn = int(input())\ns = input()\nif s.count(\"R\") > s.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nn = int(input())\ns = input()\nif s.count(\"R\") > s.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u991237710",
        "problem_id": "p02718",
        "submission1_id": "s549709070",
        "code_content": "\nN , M = input().split()\narray = input().split()\nflag = 0\n\nN = int(N)\nM = int(M)\n\niarray = []\n\nfor i in array:\n    iarray.append(int(i))\n\ntotal = sum(iarray)\n\nfor i in iarray:\n    if i >= total/(4*M):\n        flag += 1\nif flag >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nN , M = input().split()\narray = input().split()\nflag = 0\n\nN = int(N)\nM = int(M)\n\niarray = []\n\nfor i in array:\n    iarray.append(int(i))\n\ntotal = sum(iarray)\n\nfor i in iarray:\n    if i >= total/(4*M):\n        flag += 1\nif flag >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u236441175",
        "problem_id": "p02553",
        "submission1_id": "s602736263",
        "code_content": "\na, b, c, d = input().split()\n\na=int(a)\nb=int(b)\nc=int(c)\nd=int(d)\n\nX1 = min(a,b) * min(c,d)\nX2 = min(a,b) * max(c,d)\nX3 = max(a,b) * min(c,d)\nX4 = max(a,b) * max(c,d)\n\nprint(max(X1,X2,X3,X4))\n",
        "origin_generated_text": "\n```\na, b, c, d = input().split()\n\na=int(a)\nb=int(b)\nc=int(c)\nd=int(d)\n\nX1 = min(a,b) * min(c,d)\nX2 = min(a,b) * max(c,d)\nX3 = max(a,b) * min(c,d)\nX4 = max(a,b) * max(c,d)\n\nprint(max(X1,X2,X3,X4))\n```\n "
    },
    {
        "user_id": "u899578884",
        "problem_id": "p03206",
        "submission1_id": "s730565293",
        "code_content": "\nD = int(input())\nstr = \"Christmas\"\nwhile D < 25:\n    str += \" Eve\"\n    D += 1\nprint(str)\n",
        "origin_generated_text": "\n```\nD = int(input())\nstr = \"Christmas\"\nwhile D < 25:\n    str += \" Eve\"\n    D += 1\nprint(str)\n```\n "
    },
    {
        "user_id": "u354126779",
        "problem_id": "p03796",
        "submission1_id": "s582141658",
        "code_content": "\nn=int(input())\np=1\nfor i in range(1,n+1):\n    p=p*i\n    p=p%(10**9+7)\nprint(p)",
        "origin_generated_text": "\n```\nn=int(input())\np=1\nfor i in range(1,n+1):\n    p=p*i\n    p=p%(10**9+7)\nprint(p)```\n "
    },
    {
        "user_id": "u337751290",
        "problem_id": "p02730",
        "submission1_id": "s282366198",
        "code_content": "\n\ndef main():\n    s = input()\n    N = int(len(s))\n\n    s1 = s[0:int((N-1)/2)]\n    s2 = s[int((N+1)/2):N]\n\n    if s1 != s1[::-1]:\n        print(\"No\")\n        return\n    if s2 != s2[::-1]:\n        print(\"No\")\n        return\n\n    print(\"Yes\")\n\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\n\ndef main():\n    s = input()\n    N = int(len(s))\n\n    s1 = s[0:int((N-1)/2)]\n    s2 = s[int((N+1)/2):N]\n\n    if s1 != s1[::-1]:\n        print(\"No\")\n        return\n    if s2 != s2[::-1]:\n        print(\"No\")\n        return\n\n    print(\"Yes\")\n\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s083640727",
        "code_content": "\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node \"+str(k)+\": key = \"+str(plist[0][0])+\n                      \", left key = \"+str(plist[1][0])+\n                      \", right key = \"+str(plist[1][1])+\",\")\n            else :\n                l = int(j/2)\n                print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                      \", parent key = \"+str(plist[i-1][l])+\", left key = \"+\n                      str(plist[i+1][2*j]),end=\"\")\n                try:\n                    print(\", right key = \"+str(plist[i+1][2*j+1])+\",\")\n                except:\n                    print(\",\")\n        except:\n            l = int(j/2)\n            print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                  \", parent key = \"+str(plist[i-1][l])+\",\")\n        k += 1\n",
        "origin_generated_text": "\n```\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node \"+str(k)+\": key = \"+str(plist[0][0])+\n                      \", left key = \"+str(plist[1][0])+\n                      \", right key = \"+str(plist[1][1])+\",\")\n            else :\n                l = int(j/2)\n                print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                      \", parent key = \"+str(plist[i-1][l])+\", left key = \"+\n                      str(plist[i+1][2*j]),end=\"\")\n                try:\n                    print(\", right key = \"+str(plist[i+1][2*j+1])+\",\")\n                except:\n                    print(\",\")\n        except:\n            l = int(j/2)\n            print(\"node \"+str(k)+\": key = \"+str(plist[i][j])+\n                  \", parent key = \"+str(plist[i-1][l])+\",\")\n        k += 1\n```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s361867117",
        "code_content": "\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s\nwhile True:\n    new_s += s\n    if len(new_s) > len(t):\n        s = new_s\n        break\n\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\nprint(ans1 if ans1 != 0 else -1)",
        "origin_generated_text": "\n```\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s\nwhile True:\n    new_s += s\n    if len(new_s) > len(t):\n        s = new_s\n        break\n\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\nprint(ans1 if ans1 != 0 else -1)```\n "
    },
    {
        "user_id": "u027675217",
        "problem_id": "p03102",
        "submission1_id": "s585042379",
        "code_content": "\nn,m,c=map(int,input().split())\nb=list(map(int,input().split()))\nl=[]\nans=[]\ncnt=0\nfor i in range(n):\n\ta=list(map(int,input().split()))\n\tl.append(a)\nfor i in range(n):\n\tsum=0\n\tfor j in range(m):\n\t\tsum+=b[j]*l[i][j]\n\t\tif j==(m-1):\n\t\t\tsum-=c\n\t\t\tans.append(sum)\nfor i in ans:\n\tif i>0:\n\t\tcnt+=1\nprint(cnt)",
        "origin_generated_text": "\n```\nn,m,c=map(int,input().split())\nb=list(map(int,input().split()))\nl=[]\nans=[]\ncnt=0\nfor i in range(n):\n\ta=list(map(int,input().split()))\n\tl.append(a)\nfor i in range(n):\n\tsum=0\n\tfor j in range(m):\n\t\tsum+=b[j]*l[i][j]\n\t\tif j==(m-1):\n\t\t\tsum-=c\n\t\t\tans.append(sum)\nfor i in ans:\n\tif i>0:\n\t\tcnt+=1\nprint(cnt)```\n "
    },
    {
        "user_id": "u734195782",
        "problem_id": "p02660",
        "submission1_id": "s308421491",
        "code_content": "\nimport math\ndef check(n):\n    count = 0\n    end = int(math.sqrt(n)+1)\n    for i in range(2,end):\n        if n%i==0:\n            count += 1\n            n/=i\n        if n%i==0:\n            l = 2\n            count2 = 0\n            while n%i==0:\n                n/=i\n                count2+=1\n                if count2==l:\n                    count+=1\n                    count2=0\n                    l+=1\n    if n==1:\n        return 0\n    if count==0:\n        return 1\n    else:\n        return count+1   \nn = int(input())\nans = check(n)\nprint(ans)",
        "origin_generated_text": "\n```\nimport math\ndef check(n):\n    count = 0\n    end = int(math.sqrt(n)+1)\n    for i in range(2,end):\n        if n%i==0:\n            count += 1\n            n/=i\n        if n%i==0:\n            l = 2\n            count2 = 0\n            while n%i==0:\n                n/=i\n                count2+=1\n                if count2==l:\n                    count+=1\n                    count2=0\n                    l+=1\n    if n==1:\n        return 0\n    if count==0:\n        return 1\n    else:\n        return count+1   \nn = int(input())\nans = check(n)\nprint(ans)```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s517124301",
        "code_content": "\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if h % 2 == 1:\n        count = w * dy + (w-1)\n    elif w % 2 == 1:\n        count = h * w \n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if h % 2 == 1:\n        count = w * dy + (w-1)\n    elif w % 2 == 1:\n        count = h * w \n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()```\n "
    },
    {
        "user_id": "u553348533",
        "problem_id": "p03274",
        "submission1_id": "s386734816",
        "code_content": "\nN, K = map(int,input().split())\nlistMap = [int(i) for i in input().split()]\nminMin = float(\"inf\")\n\nfor j in range(N - K + 1):\n    L = j\n    R = j + K - 1\n    sumL = abs(listMap[L]) + abs(listMap[L] - listMap[R])\n    sumR = abs(listMap[R]) + abs(listMap[R] - listMap[L])\n    sum = min(sumL, sumR)\n    if sum < minMin:\n        minMin = sum\n\nprint(minMin)",
        "origin_generated_text": "\n```\nN, K = map(int,input().split())\nlistMap = [int(i) for i in input().split()]\nminMin = float(\"inf\")\n\nfor j in range(N - K + 1):\n    L = j\n    R = j + K - 1\n    sumL = abs(listMap[L]) + abs(listMap[L] - listMap[R])\n    sumR = abs(listMap[R]) + abs(listMap[R] - listMap[L])\n    sum = min(sumL, sumR)\n    if sum < minMin:\n        minMin = sum\n\nprint(minMin)```\n "
    },
    {
        "user_id": "u131881594",
        "problem_id": "p03546",
        "submission1_id": "s373132073",
        "code_content": "\nfrom collections import defaultdict\n\nh,w=map(int,input().split())\nc=[]\ndic=defaultdict(int)\nfor _ in range(10): c.append(list(map(int,input().split())))\nfor _ in range(h):\n    temp=list(map(int,input().split()))\n    for i in temp: dic[i]+=1\nfor k in range(10):\n    for i in range(10):\n        for j in range(10): c[i][j]=min(c[i][j],c[i][k]+c[k][j])\nans=0\nfor item in dic.items():\n    if item[0]!=-1: ans+=item[1]*c[item[0]][1]\nprint(ans)",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\n\nh,w=map(int,input().split())\nc=[]\ndic=defaultdict(int)\nfor _ in range(10): c.append(list(map(int,input().split())))\nfor _ in range(h):\n    temp=list(map(int,input().split()))\n    for i in temp: dic[i]+=1\nfor k in range(10):\n    for i in range(10):\n        for j in range(10): c[i][j]=min(c[i][j],c[i][k]+c[k][j])\nans=0\nfor item in dic.items():\n    if item[0]!=-1: ans+=item[1]*c[item[0]][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03965",
        "submission1_id": "s029707659",
        "code_content": "\ns = input()\n \nans = 0\n \nr = 0\np = 0\n \nfor j in s:\n  if j == 'g':\n    p += 1\n  else:\n    r += 1\n  if p > r:\n    ans += p - r\n    p = 0\n  elif r > p:\n    ans += r - p\n    r = 0\nprint (ans)",
        "origin_generated_text": "\n```\ns = input()\n \nans = 0\n \nr = 0\np = 0\n \nfor j in s:\n  if j == 'g':\n    p += 1\n  else:\n    r += 1\n  if p > r:\n    ans += p - r\n    p = 0\n  elif r > p:\n    ans += r - p\n    r = 0\nprint (ans)```\n "
    },
    {
        "user_id": "u138546245",
        "problem_id": "p02243",
        "submission1_id": "s344004382",
        "code_content": "\nfrom heapq import heappop, heappush\nimport sys\n\n\nclass SSSP:\n    \n    def __init__(self, graph):\n        self.size = len(graph)\n        self.tree = []\n        self.weights = [10**10] * self.size\n        self.weights[0] = 0\n        self._search(graph)\n\n    def weight(self, n):\n        return self.weights[n]\n\n    def _search(self, graph):\n        h = []\n        count = 1\n        for i, w in graph[0]:\n            heappush(h, (w, 0, i))\n\n        while count < self.size:\n            while len(h) > 0:\n                weight, src, dst = heappop(h)\n                if self.weights[dst] > weight and dst > 0:\n                    self.weights[dst] = weight\n                    count += 1\n                    self.tree.append((src, dst))\n                    for i, w in graph[dst]:\n                        if self.weights[i] > weight and dst > 0:\n                            heappush(h, (w+weight, dst, i))\n                    break\n\n\ndef run():\n    n = int(input())\n\n    nodes = [None] * n\n    for line in sys.stdin:\n        id_, deg, *edges = [int(i) for i in line.split()]\n        nodes[id_] = []\n        for _ in range(deg):\n            tgt, wgt, *edges = edges\n            nodes[id_].append((tgt, wgt))\n\n    st = SSSP(nodes)\n    for node in range(n):\n        print('{} {}'.format(node, st.weight(node)))\n\n\nif __name__ == '__main__':\n    run()\n\n",
        "origin_generated_text": "\n```\nfrom heapq import heappop, heappush\nimport sys\n\n\nclass SSSP:\n    \n    def __init__(self, graph):\n        self.size = len(graph)\n        self.tree = []\n        self.weights = [10**10] * self.size\n        self.weights[0] = 0\n        self._search(graph)\n\n    def weight(self, n):\n        return self.weights[n]\n\n    def _search(self, graph):\n        h = []\n        count = 1\n        for i, w in graph[0]:\n            heappush(h, (w, 0, i))\n\n        while count < self.size:\n            while len(h) > 0:\n                weight, src, dst = heappop(h)\n                if self.weights[dst] > weight and dst > 0:\n                    self.weights[dst] = weight\n                    count += 1\n                    self.tree.append((src, dst))\n                    for i, w in graph[dst]:\n                        if self.weights[i] > weight and dst > 0:\n                            heappush(h, (w+weight, dst, i))\n                    break\n\n\ndef run():\n    n = int(input())\n\n    nodes = [None] * n\n    for line in sys.stdin:\n        id_, deg, *edges = [int(i) for i in line.split()]\n        nodes[id_] = []\n        for _ in range(deg):\n            tgt, wgt, *edges = edges\n            nodes[id_].append((tgt, wgt))\n\n    st = SSSP(nodes)\n    for node in range(n):\n        print('{} {}'.format(node, st.weight(node)))\n\n\nif __name__ == '__main__':\n    run()\n\n```\n "
    },
    {
        "user_id": "u935842428",
        "problem_id": "p03752",
        "submission1_id": "s382918221",
        "code_content": "\nimport sys, itertools\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = 10**20\ndef I(): return int(input())\ndef F(): return float(input())\ndef S(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\n\ndef resolve():\n    N, K = LI()\n    a = LI()\n    ans = INF\n    for i in range(K):\n        cost_sum = 0\n        for j in range(i, N):\n            cost_sum += a[j]-a[j-i]\n        ans = min(cost_sum, ans)\n\n    print(ans)\n\nif __name__ == '__main__':\n    resolve()",
        "origin_generated_text": "\n```\nimport sys, itertools\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = 10**20\ndef I(): return int(input())\ndef F(): return float(input())\ndef S(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\n\ndef resolve():\n    N, K = LI()\n    a = LI()\n    ans = INF\n    for i in range(K):\n        cost_sum = 0\n        for j in range(i, N):\n            cost_sum += a[j]-a[j-i]\n        ans = min(cost_sum, ans)\n\n    print(ans)\n\nif __name__ == '__main__':\n    resolve()```\n "
    },
    {
        "user_id": "u557437077",
        "problem_id": "p03633",
        "submission1_id": "s896669902",
        "code_content": "\ndef gcd(a, b):\n    while b > 0:\n        tmp = a\n        a = b\n        b = tmp % b\n    return a\n\n\ndef lcm(a, b):\n    return a*b\n\n\nn = int(input())\nt = [0 for i in range(n)]\nfor i in range(n):\n    t[i] = int(input())\n\n\ndef solve(t):\n    sum = t[0]\n    for i in range(1, n):\n        \n        sum = lcm(sum, t[i])\n    \n    return sum\n\n\nprint(solve(t))\n",
        "origin_generated_text": "\n```\ndef gcd(a, b):\n    while b > 0:\n        tmp = a\n        a = b\n        b = tmp % b\n    return a\n\n\ndef lcm(a, b):\n    return a*b\n\n\nn = int(input())\nt = [0 for i in range(n)]\nfor i in range(n):\n    t[i] = int(input())\n\n\ndef solve(t):\n    sum = t[0]\n    for i in range(1, n):\n        \n        sum = lcm(sum, t[i])\n    \n    return sum\n\n\nprint(solve(t))\n```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p03959",
        "submission1_id": "s664365162",
        "code_content": "\nn=int(input())\n\nt=list(map(int,input().split()))\na=list(map(int,input().split()))\n\n\nkakute=[0]*n\nkakute[0]=1\n\nfor i in range(1,n):\n    if t[i]>t[i-1]:\n        kakute[i]=1\n\na=a[::-1]\nans=1\n\nfor i in range(1,n):\n    index=n-i-1\n    \n    if a[i]>a[i-1]:\n        \n        if a[i]>t[index]:\n            print(0)\n            exit()\n        elif kakute[index]==1:\n            if a[i] != t[index]:\n                print(0)\n                exit()\n    \n    else:\n        \n        if kakute[index]==1:\n            if t[index]>a[i]:\n                print(0)\n                exit()\n        else:\n            ans=ans*min(a[i],t[index])%(10**9+7)\n\nprint(ans%(10**9+7))\n\n\n            \n\n        \n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nn=int(input())\n\nt=list(map(int,input().split()))\na=list(map(int,input().split()))\n\n\nkakute=[0]*n\nkakute[0]=1\n\nfor i in range(1,n):\n    if t[i]>t[i-1]:\n        kakute[i]=1\n\na=a[::-1]\nans=1\n\nfor i in range(1,n):\n    index=n-i-1\n    \n    if a[i]>a[i-1]:\n        \n        if a[i]>t[index]:\n            print(0)\n            exit()\n        elif kakute[index]==1:\n            if a[i] != t[index]:\n                print(0)\n                exit()\n    \n    else:\n        \n        if kakute[index]==1:\n            if t[index]>a[i]:\n                print(0)\n                exit()\n        else:\n            ans=ans*min(a[i],t[index])%(10**9+7)\n\nprint(ans%(10**9+7))\n\n\n            \n\n        \n\n\n\n\n\n\n\n```\n "
    },
    {
        "user_id": "u173720816",
        "problem_id": "p03041",
        "submission1_id": "s286056702",
        "code_content": "\nN,K=map(int, input().split())\nS=input()\nS=S[:K-1]+chr(ord(S[K-1])+32)+S[K:]\nprint(S)",
        "origin_generated_text": "\n```\nN,K=map(int, input().split())\nS=input()\nS=S[:K-1]+chr(ord(S[K-1])+32)+S[K:]\nprint(S)```\n "
    },
    {
        "user_id": "u497596438",
        "problem_id": "p03716",
        "submission1_id": "s974013935",
        "code_content": "\nfrom heapq import *\n\nN=int(input())\nA=list(map(int,input().split()))\nB=[]\nfor i in range(N):\n    heappush(B,A[i])\nsumB=[sum(B)]\nfor i in range(N,2*N):\n    heappush(B,A[i])\n    poped=heappop(B)\n    sumB.append(sumB[-1]-poped+A[i])\n\nA.reverse()\nC=[]\nfor i in range(N):\n    heappush(C,A[i]*(-1))\nsumC=[(-1)*sum(C)]\nfor i in range(N,2*N):\n    heappush(C,A[i]*(-1))\n    poped=heappop(C)*(-1)\n    sumC.append(sumC[-1]-poped+A[i])\nsumC.reverse()\nans=-10**19\nfor i,j in zip(sumB,sumC):\n    ans=max(ans,i-j)\nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom heapq import *\n\nN=int(input())\nA=list(map(int,input().split()))\nB=[]\nfor i in range(N):\n    heappush(B,A[i])\nsumB=[sum(B)]\nfor i in range(N,2*N):\n    heappush(B,A[i])\n    poped=heappop(B)\n    sumB.append(sumB[-1]-poped+A[i])\n\nA.reverse()\nC=[]\nfor i in range(N):\n    heappush(C,A[i]*(-1))\nsumC=[(-1)*sum(C)]\nfor i in range(N,2*N):\n    heappush(C,A[i]*(-1))\n    poped=heappop(C)*(-1)\n    sumC.append(sumC[-1]-poped+A[i])\nsumC.reverse()\nans=-10**19\nfor i,j in zip(sumB,sumC):\n    ans=max(ans,i-j)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s642921527",
        "code_content": "\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    if a[i+1] == (a[i]+1)%m:\n        continue\n\n    start[a[i] % m].append(i)\n    end[(a[i+1]-1) % m].append(i)\n\n    allsum += (a[i+1]-a[i])\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            plus -= ((a[j+1]-(a[j]+1))%m)\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis) + imosnum)\n",
        "origin_generated_text": "\n```\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    if a[i+1] == (a[i]+1)%m:\n        continue\n\n    start[a[i] % m].append(i)\n    end[(a[i+1]-1) % m].append(i)\n\n    allsum += (a[i+1]-a[i])\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            plus -= ((a[j+1]-(a[j]+1))%m)\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis) + imosnum)\n```\n "
    },
    {
        "user_id": "u948986080",
        "problem_id": "p03479",
        "submission1_id": "s870358362",
        "code_content": "\nx,y=map(int,input().split())\nlen=1\nwhile True:\n  if x*2<=y:\n    x*=2\n    len+=1\n  else:\n    break\nprint(len)",
        "origin_generated_text": "\n```\nx,y=map(int,input().split())\nlen=1\nwhile True:\n  if x*2<=y:\n    x*=2\n    len+=1\n  else:\n    break\nprint(len)```\n "
    },
    {
        "user_id": "u601426916",
        "problem_id": "p02660",
        "submission1_id": "s815473208",
        "code_content": "\n\nimport math\nN = int(input())\nNsyo = N\ncount = 0\ndiv = 2\ndivcount = 0\ndivlist = []\nwhile N > 1 and div <= math.sqrt(N)+1:\n    if N%div == 0:\n        while N%div == 0:\n            N = N/div\n            divcount = divcount+1\n        divlist.append(divcount)\n        divcount = 0\n    else:\n        pass\n    div = div + 1\ndiv = 1\ndivcount = 0\nfor i in divlist:\n    while i >= div:\n        i = i-div\n        divcount = divcount + 1\n        div = div + 1\n        \n    count = count +divcount\n    divcount = 0\n    div = 1\nif N > 1:\n    count = count +1\nprint(count)",
        "origin_generated_text": "\n```\n\nimport math\nN = int(input())\nNsyo = N\ncount = 0\ndiv = 2\ndivcount = 0\ndivlist = []\nwhile N > 1 and div <= math.sqrt(N)+1:\n    if N%div == 0:\n        while N%div == 0:\n            N = N/div\n            divcount = divcount+1\n        divlist.append(divcount)\n        divcount = 0\n    else:\n        pass\n    div = div + 1\ndiv = 1\ndivcount = 0\nfor i in divlist:\n    while i >= div:\n        i = i-div\n        divcount = divcount + 1\n        div = div + 1\n        \n    count = count +divcount\n    divcount = 0\n    div = 1\nif N > 1:\n    count = count +1\nprint(count)```\n "
    },
    {
        "user_id": "u883048396",
        "problem_id": "p03296",
        "submission1_id": "s249497643",
        "code_content": "\niN = int(input())\naS = [int(x) for x in input().rstrip().split()]\n\n\n\niCounter = 0\nif iN == 2:\n    if aS[0] == aS[1]:\n        iCounter += 1\nelse:\n    for i in range(1,iN-1):\n        if aS[i] == aS[i-1]:\n            if aS[i] == aS[i+1]:\n                if aS[i] != 1:\n                    aS[i] += 1\n                else:\n                    aS[i] -= 1\n                iCounter += 1\n            else:\n                if aS[i] == 10000:\n                    aS[i] -= 1\n                else:\n                    aS[i] += 1\n                iCounter += 1\nprint(iCounter)\n",
        "origin_generated_text": "\n```\niN = int(input())\naS = [int(x) for x in input().rstrip().split()]\n\n\n\niCounter = 0\nif iN == 2:\n    if aS[0] == aS[1]:\n        iCounter += 1\nelse:\n    for i in range(1,iN-1):\n        if aS[i] == aS[i-1]:\n            if aS[i] == aS[i+1]:\n                if aS[i] != 1:\n                    aS[i] += 1\n                else:\n                    aS[i] -= 1\n                iCounter += 1\n            else:\n                if aS[i] == 10000:\n                    aS[i] -= 1\n                else:\n                    aS[i] += 1\n                iCounter += 1\nprint(iCounter)\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s797433160",
        "code_content": "\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u316341119",
        "problem_id": "p03039",
        "submission1_id": "s343244875",
        "code_content": "\nN, M, K = map(int, input().split())\n\nMOD = 10**9+7\n\ndef comb(n, r):\n    r = n-r if n-r < r else r\n    if r == 0:\n        return 1\n    return comb(n-1, r-1) * n \n\nans = 0\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        d = i+j\n        cnt = (N-i) * (M-j)\n        if i != 0 and j != 0:\n            cnt *= 2\n        ans += d * cnt * comb(K-1, d-1)\n        ans %= MOD\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nN, M, K = map(int, input().split())\n\nMOD = 10**9+7\n\ndef comb(n, r):\n    r = n-r if n-r < r else r\n    if r == 0:\n        return 1\n    return comb(n-1, r-1) * n \n\nans = 0\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        d = i+j\n        cnt = (N-i) * (M-j)\n        if i != 0 and j != 0:\n            cnt *= 2\n        ans += d * cnt * comb(K-1, d-1)\n        ans %= MOD\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u241577413",
        "problem_id": "p02633",
        "submission1_id": "s561353059",
        "code_content": "\n```\na = int(input())\n\nx = a\ni = 1\n\nwhile x % 180 != 0 and i
        "origin_generated_text": "\n```\na = int(input())\n\nx = a\ni = 1\n\nwhile x % 180 != 0 and i
    },
    {
        "user_id": "u316341119",
        "problem_id": "p03039",
        "submission1_id": "s246052148",
        "code_content": "\nfrom math import factorial\nN, M, K = map(int, input().split())\n\nMOD = 10**9+7\n\ndef comb(n, r):\n    r = n-r if n-r < r else r\n    return factorial(n) * pow(r, MOD-2, MOD) * pow(n-r, MOD-2, MOD) % MOD\n\np = comb(N*M-1, K-1)\nans = 0\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        d = i+j\n        cnt = (N-i) * (M-j)\n        if i != 0 and j != 0:\n            cnt *= 2\n        ans += d * cnt * p\n        p = p * (N*M-i-j) % MOD\n\nprint(ans % MOD)\n",
        "origin_generated_text": "\n```\nfrom math import factorial\nN, M, K = map(int, input().split())\n\nMOD = 10**9+7\n\ndef comb(n, r):\n    r = n-r if n-r < r else r\n    return factorial(n) * pow(r, MOD-2, MOD) * pow(n-r, MOD-2, MOD) % MOD\n\np = comb(N*M-1, K-1)\nans = 0\nfor i in range(N):\n    for j in range(M):\n        if i == 0 and j == 0:\n            continue\n        d = i+j\n        cnt = (N-i) * (M-j)\n        if i != 0 and j != 0:\n            cnt *= 2\n        ans += d * cnt * p\n        p = p * (N*M-i-j) % MOD\n\nprint(ans % MOD)\n```\n "
    },
    {
        "user_id": "u198062737",
        "problem_id": "p03959",
        "submission1_id": "s049614357",
        "code_content": "\nN = int(input())\nT = list(map(int, input().split(\" \")))\nA = list(map(int, input().split(\" \")))\nh = [0 for i in range(N)]\nmod = 10 ** 9 + 7\n\nh[0] = T[0]\nfor i in range(N - 1):\n    if T[i] < T[i + 1]:\n        h[i + 1] = T[i + 1]\n\nfor i in range(N - 2, -1, -1):\n    if A[i + 1] < A[i]:\n        h[i] = 0\n    elif A[i + 1] < A[i] and h[i] == 0:\n        h[i] = A[i]\n    elif A[i + 1] < A[i] and h[i] == A[i]:\n        h[i] = A[i]\n        ans = 0\n        for j in range(N):\n            ans += h[j]\n            ans %= mod\n        print(ans % mod)\n        exit()\n\nans = 1\nfor i in range(N):\n    ans *= h[i]\n    ans %= mod\n\nprint(ans % mod)",
        "origin_generated_text": "\n```\nN = int(input())\nT = list(map(int, input().split(\" \")))\nA = list(map(int, input().split(\" \")))\nh = [0 for i in range(N)]\nmod = 10 ** 9 + 7\n\nh[0] = T[0]\nfor i in range(N - 1):\n    if T[i] < T[i + 1]:\n        h[i + 1] = T[i + 1]\n\nfor i in range(N - 2, -1, -1):\n    if A[i + 1] < A[i]:\n        h[i] = 0\n    elif A[i + 1] < A[i] and h[i] == 0:\n        h[i] = A[i]\n    elif A[i + 1] < A[i] and h[i] == A[i]:\n        h[i] = A[i]\n        ans = 0\n        for j in range(N):\n            ans += h[j]\n            ans %= mod\n        print(ans % mod)\n        exit()\n\nans = 1\nfor i in range(N):\n    ans *= h[i]\n    ans %= mod\n\nprint(ans % mod)```\n "
    },
    {
        "user_id": "u925406312",
        "problem_id": "p02640",
        "submission1_id": "s005534087",
        "code_content": "\nx,y = map(int,input().split())\n\nturu = 2\nkame = 4\n\nif x == y \n    print(\"Yes\")\nelif x == 1 and y == 2:\n    print(\"Yes\")\nelif x == 2 and y == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nx,y = map(int,input().split())\n\nturu = 2\nkame = 4\n\nif x == y \n    print(\"Yes\")\nelif x == 1 and y == 2:\n    print(\"Yes\")\nelif x == 2 and y == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03992",
        "submission1_id": "s621357722",
        "code_content": "\ns = str(input())\nprint(s[0:4] + \" \" + s[4:])",
        "origin_generated_text": "\n```\ns = str(input())\nprint(s[0:4] + \" \" + s[4:])```\n "
    },
    {
        "user_id": "u344959886",
        "problem_id": "p03760",
        "submission1_id": "s962714182",
        "code_content": "\no=input()\ne=input()\nfor i,j in zip(o,e):\n    print(i+j,end=\"\")\nprint()",
        "origin_generated_text": "\n```\no=input()\ne=input()\nfor i,j in zip(o,e):\n    print(i+j,end=\"\")\nprint()```\n "
    },
    {
        "user_id": "u432805419",
        "problem_id": "p03943",
        "submission1_id": "s268509969",
        "code_content": "\na = list(map(int,input().split()))\na.sort()\nif (a[0] + a[1]) == a[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n",
        "origin_generated_text": "\n```\na = list(map(int,input().split()))\na.sort()\nif (a[0] + a[1]) == a[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n```\n "
    },
    {
        "user_id": "u970899068",
        "problem_id": "p03972",
        "submission1_id": "s915446726",
        "code_content": "\nw,h=map(int, input().split())\np=[int(input()) for i in range(w)]\nq=[int(input()) for i in range(h)]\np.append(0)\nq.append(0)\np.sort()\np.reverse()\nq.sort()\nq.reverse()\n\ncount=w*h\nrow=0\nline=0\ni=0\nj=0\nans=0\n\nwhile count>0:\n    if p[i]>=q[j]:\n        ans+=p[i]*(w-line)\n\n        count-=w-line\n        i+=1\n        row+=1\n\n    else:\n        ans+=q[j]*(h-row)\n\n        count-=h-row\n        j+=1\n        line+=1\nx=sum(p)*(h+1)+sum(q)*(w+1)\nprint(x-ans)",
        "origin_generated_text": "\n```\nw,h=map(int, input().split())\np=[int(input()) for i in range(w)]\nq=[int(input()) for i in range(h)]\np.append(0)\nq.append(0)\np.sort()\np.reverse()\nq.sort()\nq.reverse()\n\ncount=w*h\nrow=0\nline=0\ni=0\nj=0\nans=0\n\nwhile count>0:\n    if p[i]>=q[j]:\n        ans+=p[i]*(w-line)\n\n        count-=w-line\n        i+=1\n        row+=1\n\n    else:\n        ans+=q[j]*(h-row)\n\n        count-=h-row\n        j+=1\n        line+=1\nx=sum(p)*(h+1)+sum(q)*(w+1)\nprint(x-ans)```\n "
    },
    {
        "user_id": "u602773379",
        "problem_id": "p02660",
        "submission1_id": "s514470095",
        "code_content": "\nimport math\n\ndef prime(num):\n\tarray=[]\n\ttmp=int(math.sqrt(n))+1\n\tfor i in range(2,tmp):\n\t\twhile num % i == 0:\n\t\t\tnum/=i\n\t\t\tarray.append(i)\n\t\n\tif array==[]:\n\t\treturn [num]\n\telse:\n\t\treturn array\n\nn=int(input())\nP=prime(n)\nnum=n\nans=0\nif 1 in P:\n\tprint(0)\nelse:\n\tfor i in range(len(P)):\n\t\tif i==0:\n\t\t\ttmp=P[i]\n\t\telse:\n\t\t\tif P[i]==P[i-1]:\n\t\t\t\ttmp*=P[i]\n\t\t\telse:\n\t\t\t\ttmp=P[i]\n\t\tif num%tmp==0:\n\t\t\tnum/=tmp\n\t\t\tans+=1\n\tprint(ans)",
        "origin_generated_text": "\n```\nimport math\n\ndef prime(num):\n\tarray=[]\n\ttmp=int(math.sqrt(n))+1\n\tfor i in range(2,tmp):\n\t\twhile num % i == 0:\n\t\t\tnum/=i\n\t\t\tarray.append(i)\n\t\n\tif array==[]:\n\t\treturn [num]\n\telse:\n\t\treturn array\n\nn=int(input())\nP=prime(n)\nnum=n\nans=0\nif 1 in P:\n\tprint(0)\nelse:\n\tfor i in range(len(P)):\n\t\tif i==0:\n\t\t\ttmp=P[i]\n\t\telse:\n\t\t\tif P[i]==P[i-1]:\n\t\t\t\ttmp*=P[i]\n\t\t\telse:\n\t\t\t\ttmp=P[i]\n\t\tif num%tmp==0:\n\t\t\tnum/=tmp\n\t\t\tans+=1\n\tprint(ans)```\n "
    },
    {
        "user_id": "u899782392",
        "problem_id": "p03752",
        "submission1_id": "s332336077",
        "code_content": "\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 10**10\nfor key in range(1 << N):\n    if bin(key).count('1') < K:\n        continue\n    cost = 0\n    height = 0\n    for i in range(N):\n        if not (key & (1 << i)):\n            height = max(A[i], height)\n            continue\n        height = max(A[i], height+1)\n        cost += height - A[i]\n    ans = min(ans, cost)\nprint(ans)\n\n\n",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 10**10\nfor key in range(1 << N):\n    if bin(key).count('1') < K:\n        continue\n    cost = 0\n    height = 0\n    for i in range(N):\n        if not (key & (1 << i)):\n            height = max(A[i], height)\n            continue\n        height = max(A[i], height+1)\n        cost += height - A[i]\n    ans = min(ans, cost)\nprint(ans)\n\n\n```\n "
    },
    {
        "user_id": "u620084012",
        "problem_id": "p03965",
        "submission1_id": "s085573507",
        "code_content": "\ns = input()\ng, p = 0, 0\nans = 0\nfor e in s:\n    if e == \"g\":\n        if p+1 <= g:\n            p += 1\n            ans += 1\n        else:\n            g += 1\n    else:\n        g += 1\n\nprint(ans)\n",
        "origin_generated_text": "\n```\ns = input()\ng, p = 0, 0\nans = 0\nfor e in s:\n    if e == \"g\":\n        if p+1 <= g:\n            p += 1\n            ans += 1\n        else:\n            g += 1\n    else:\n        g += 1\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u207097826",
        "problem_id": "p03716",
        "submission1_id": "s096813467",
        "code_content": "\n\n\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(input())\na = list(map(int,input().split()))\n\nhq = []\nhq_r = []\nfor i in range(N):\n    heappush(hq,a[i])\n    heappush(hq_r,-1*a[-1-i])\n\n\nmax_A = [0 for _ in range(N+1)]\nmax_A[0] = sum(hq)\n\nmin_C = [0 for _ in range(N+1)]\nmin_C[0] = sum(hq_r) * (-1)\n\nfor i in range(N):\n    heappush(hq, a[N+i])\n    heappush(hq_r, -1*a[-N-1-i])\n    minus = heappop(hq)\n    minus_r = heappop(hq_r)\n    max_A[i+1] = max_A[i] + a[N+i] - minus\n    min_C[i+1] = min_C[i] + a[-N-1-i] + minus_r\n    \nmax_val = -10e+100\nfor i in range(N+1):\n    kari = max_A[i] - min_C[-1-i]\n    if max_val < kari:\n        max_val =kari\nprint(max_val)",
        "origin_generated_text": "\n```\n\n\nfrom heapq import heappush, heappop\nimport sys\n\nN = int(input())\na = list(map(int,input().split()))\n\nhq = []\nhq_r = []\nfor i in range(N):\n    heappush(hq,a[i])\n    heappush(hq_r,-1*a[-1-i])\n\n\nmax_A = [0 for _ in range(N+1)]\nmax_A[0] = sum(hq)\n\nmin_C = [0 for _ in range(N+1)]\nmin_C[0] = sum(hq_r) * (-1)\n\nfor i in range(N):\n    heappush(hq, a[N+i])\n    heappush(hq_r, -1*a[-N-1-i])\n    minus = heappop(hq)\n    minus_r = heappop(hq_r)\n    max_A[i+1] = max_A[i] + a[N+i] - minus\n    min_C[i+1] = min_C[i] + a[-N-1-i] + minus_r\n    \nmax_val = -10e+100\nfor i in range(N+1):\n    kari = max_A[i] - min_C[-1-i]\n    if max_val < kari:\n        max_val =kari\nprint(max_val)```\n "
    },
    {
        "user_id": "u661284763",
        "problem_id": "p02407",
        "submission1_id": "s831426262",
        "code_content": "\ninput()\na = input().split()\na.reverse()\nfor b in a[:-1]:\n    print(b, end=' ')\nprint(a[-1])",
        "origin_generated_text": "\n```\ninput()\na = input().split()\na.reverse()\nfor b in a[:-1]:\n    print(b, end=' ')\nprint(a[-1])```\n "
    },
    {
        "user_id": "u964040941",
        "problem_id": "p00026",
        "submission1_id": "s090239443",
        "code_content": "\npaper = [[0] * 10 for i in range(10)]\n\nfor line in open('input.txt'):\n    x,y,s = map(int,line.split(','))\n    for i in range(10):\n        for j in range(10):\n            if s == 1:\n                if abs(i - y) + abs(j - x) <= 1:\n                    paper [i] [j] += 1\n            if s == 2:\n                if abs(i - y) <= 1 and abs(j - x) <= 1:\n                    paper [i] [j] += 1\n            if s == 3:\n                if abs(i - y) + abs(j - x) <= 2:\n                    paper [i] [j] += 1\n\nans = [0,0]\nfor i in range(10):\n    for j in range(10):\n        if paper [i] [j] > ans [1]:\n            ans [1] = paper [i] [j]\n        if paper [i] [j] == 0:\n            ans [0] += 1\n\nprint(ans [0])\nprint(ans [1])",
        "origin_generated_text": "\n```\npaper = [[0] * 10 for i in range(10)]\n\nfor line in open('input.txt'):\n    x,y,s = map(int,line.split(','))\n    for i in range(10):\n        for j in range(10):\n            if s == 1:\n                if abs(i - y) + abs(j - x) <= 1:\n                    paper [i] [j] += 1\n            if s == 2:\n                if abs(i - y) <= 1 and abs(j - x) <= 1:\n                    paper [i] [j] += 1\n            if s == 3:\n                if abs(i - y) + abs(j - x) <= 2:\n                    paper [i] [j] += 1\n\nans = [0,0]\nfor i in range(10):\n    for j in range(10):\n        if paper [i] [j] > ans [1]:\n            ans [1] = paper [i] [j]\n        if paper [i] [j] == 0:\n            ans [0] += 1\n\nprint(ans [0])\nprint(ans [1])```\n "
    },
    {
        "user_id": "u619819312",
        "problem_id": "p03625",
        "submission1_id": "s215373055",
        "code_content": "\nfrom collections import Counter\nn=int(input())\na=list(map(int,input().split()))\np=Counter(a)\nc=0\nd=0\nfor a,b in p.items():\n    if b>3:\n        if c<a:\n            c=a\n        if d<a:\n            d=a\n    elif b>1:\n        if c==0:\n            c=a\n        else:\n            if d<c:\n                d=a\n            elif c<a:\n                c=a\nprint(c*d)",
        "origin_generated_text": "\n```\nfrom collections import Counter\nn=int(input())\na=list(map(int,input().split()))\np=Counter(a)\nc=0\nd=0\nfor a,b in p.items():\n    if b>3:\n        if c<a:\n            c=a\n        if d<a:\n            d=a\n    elif b>1:\n        if c==0:\n            c=a\n        else:\n            if d<c:\n                d=a\n            elif c<a:\n                c=a\nprint(c*d)```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s659794092",
        "code_content": "\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    if a[i+1] == a[i]+1 or a[i+1] == a[i]:\n        continue\n\n    start[a[i] % m].append(i)\n    end[(a[i+1]-1) % m].append(i)\n\n    allsum += (a[i+1]-a[i])\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            plus -= ((a[j+1]-(a[j]+1))%m)\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis))",
        "origin_generated_text": "\n```\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    if a[i+1] == a[i]+1 or a[i+1] == a[i]:\n        continue\n\n    start[a[i] % m].append(i)\n    end[(a[i+1]-1) % m].append(i)\n\n    allsum += (a[i+1]-a[i])\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            plus -= ((a[j+1]-(a[j]+1))%m)\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis))```\n "
    },
    {
        "user_id": "u075502030",
        "problem_id": "p02660",
        "submission1_id": "s964983531",
        "code_content": "\nimport math\n\ndef is_prime(n):\n    if n==1:\n        return False\n    nmax = int(math.sqrt(n)) + 1\n    for i in range(2, nmax):\n        if(n%i)==0:\n            return False\n    return True\n\ndef pf(n):\n    sn = int(math.sqrt(n)) + 1\n    ps = []\n    for i in range(1, sn):\n        if (n%i)==0:\n            ps.append(i)\n    del ps[0]\n    if not ps:\n        ps.append(n)\n    return ps        \n\nn = int(input())\nps = []\nnum = pf(n)\nfor i in num:\n    if is_prime(i):\n        ps.append(i)\n        \nzs = []        \nfor p in ps:\n    z = p\n    while(z<=n):\n        zs.append(z)\n        z *= p\nzs.sort()\n\ncnt = 0\nfor z in zs:\n    if(n>1):\n        if(n%z==0):\n            n /= z\n            cnt += 1\nprint(cnt)",
        "origin_generated_text": "\n```\nimport math\n\ndef is_prime(n):\n    if n==1:\n        return False\n    nmax = int(math.sqrt(n)) + 1\n    for i in range(2, nmax):\n        if(n%i)==0:\n            return False\n    return True\n\ndef pf(n):\n    sn = int(math.sqrt(n)) + 1\n    ps = []\n    for i in range(1, sn):\n        if (n%i)==0:\n            ps.append(i)\n    del ps[0]\n    if not ps:\n        ps.append(n)\n    return ps        \n\nn = int(input())\nps = []\nnum = pf(n)\nfor i in num:\n    if is_prime(i):\n        ps.append(i)\n        \nzs = []        \nfor p in ps:\n    z = p\n    while(z<=n):\n        zs.append(z)\n        z *= p\nzs.sort()\n\ncnt = 0\nfor z in zs:\n    if(n>1):\n        if(n%z==0):\n            n /= z\n            cnt += 1\nprint(cnt)```\n "
    },
    {
        "user_id": "u089830331",
        "problem_id": "p02281",
        "submission1_id": "s811679059",
        "code_content": "\nimport sys\n\ndef walk(T, nid, order):\n  if nid < 0: return\n  lid, rid = T[nid][0], T[nid][1]\n\n  if order == \"pre\":\n    sys.stdout.write(\" \" + str(nid))\n    walk(T, lid, order)\n    walk(T, rid, order)\n  elif order == \"in\":\n    walk(T, lid, order)\n    sys.stdout.write(\" \" + str(nid))\n    walk(T, rid, order)\n  else:\n    walk(T, lid, order)\n    walk(T, rid, order)\n    sys.stdout.write(\" \" + str(nid))\n\nT = {}\nfor i in range(int(input())):\n  nid, lid, rid = map(int, input().split())\n  T[nid] = [lid, rid, i]\n\nprint(\"Preorder\"),  walk(T, 0, \"pre\"),  print()\nprint(\"Inorder\"),   walk(T, 0, \"in\"),   print()\nprint(\"Postorder\"), walk(T, 0, \"post\"), print()",
        "origin_generated_text": "\n```\nimport sys\n\ndef walk(T, nid, order):\n  if nid < 0: return\n  lid, rid = T[nid][0], T[nid][1]\n\n  if order == \"pre\":\n    sys.stdout.write(\" \" + str(nid))\n    walk(T, lid, order)\n    walk(T, rid, order)\n  elif order == \"in\":\n    walk(T, lid, order)\n    sys.stdout.write(\" \" + str(nid))\n    walk(T, rid, order)\n  else:\n    walk(T, lid, order)\n    walk(T, rid, order)\n    sys.stdout.write(\" \" + str(nid))\n\nT = {}\nfor i in range(int(input())):\n  nid, lid, rid = map(int, input().split())\n  T[nid] = [lid, rid, i]\n\nprint(\"Preorder\"),  walk(T, 0, \"pre\"),  print()\nprint(\"Inorder\"),   walk(T, 0, \"in\"),   print()\nprint(\"Postorder\"), walk(T, 0, \"post\"), print()```\n "
    },
    {
        "user_id": "u423665486",
        "problem_id": "p03416",
        "submission1_id": "s163709818",
        "code_content": "\ndef resolve():\n\ta, b = map(int, input().split())\n\tans = 0\n\tfor i in range(a, b+1):\n\t\tv = str(i)\n\t\tif len(v) % 2 == 0:\n\t\t\td = int(len(v)/2)\n\t\t\tif v[:d] == v[d:]:\n\t\t\t\tans += 1\n\t\telse:\n\t\t\td = int((len(v)-1)/2)\n\t\t\tif v[:d] == v[d+1:]:\n\t\t\t\tans += 1\n\tprint(ans)\nresolve()",
        "origin_generated_text": "\n```\ndef resolve():\n\ta, b = map(int, input().split())\n\tans = 0\n\tfor i in range(a, b+1):\n\t\tv = str(i)\n\t\tif len(v) % 2 == 0:\n\t\t\td = int(len(v)/2)\n\t\t\tif v[:d] == v[d:]:\n\t\t\t\tans += 1\n\t\telse:\n\t\t\td = int((len(v)-1)/2)\n\t\t\tif v[:d] == v[d+1:]:\n\t\t\t\tans += 1\n\tprint(ans)\nresolve()```\n "
    },
    {
        "user_id": "u946090308",
        "problem_id": "p03264",
        "submission1_id": "s908825329",
        "code_content": "\nk = int(input())        \nif (k%2) == 1:\n    print((k+1) * (k-3) / 8)\nelse:\n    print((k+2) * (k-1) / 8)",
        "origin_generated_text": "\n```\nk = int(input())        \nif (k%2) == 1:\n    print((k+1) * (k-3) / 8)\nelse:\n    print((k+2) * (k-1) / 8)```\n "
    },
    {
        "user_id": "u422590714",
        "problem_id": "p02954",
        "submission1_id": "s684612209",
        "code_content": "\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\nS = list(input())\n\nis_hole = [None for _ in S]\nis_s = [None for _ in S]\n\ns_1 = None\nfor i, s in enumerate(S):\n    if s_1 == 'R' and s == 'L':\n        is_hole[i - 1] = 'R'\n        is_hole[i] = 'L'\n    if s_1 == 'L' and s == 'R':\n        is_s[i] = 'S'  \n    s_1 = s\n\nresult = [0 for _ in S]\nmem_R = 0  \nmem_Rx = 0  \nmem_L = 0\n\ndef find_next_mem_R(i):\n    while i < len(S):\n        if is_hole[i] == 'R':\n            return i\n        i += 1\n\nmem_Rx = find_next_mem_R(0)\n\nfor i, s in enumerate(S):\n    if is_s[i] == 'S':\n        result[mem_Rx] = mem_R\n        result[mem_Rx + 1] = mem_L\n        mem_R = 0\n        mem_L = 0\n        mem_Rx = find_next_mem_R(i)\n\n    if s == 'R':\n        x_diff_for_R = mem_Rx - i\n        if x_diff_for_R % 2 == 0:\n            mem_R += 1\n        else:\n            mem_L += 1\n    else:\n        x_diff_for_R = i - mem_Rx\n        if x_diff_for_R % 2 == 0:\n            mem_R += 1\n        else:\n            mem_L += 1\n\nresult[mem_Rx] = mem_R\nresult[mem_Rx + 1] = mem_L\nprint(*result, sep=' ')\n",
        "origin_generated_text": "\n```\nimport sys\n\nsys.setrecursionlimit(10 ** 7)\n\nS = list(input())\n\nis_hole = [None for _ in S]\nis_s = [None for _ in S]\n\ns_1 = None\nfor i, s in enumerate(S):\n    if s_1 == 'R' and s == 'L':\n        is_hole[i - 1] = 'R'\n        is_hole[i] = 'L'\n    if s_1 == 'L' and s == 'R':\n        is_s[i] = 'S'  \n    s_1 = s\n\nresult = [0 for _ in S]\nmem_R = 0  \nmem_Rx = 0  \nmem_L = 0\n\ndef find_next_mem_R(i):\n    while i < len(S):\n        if is_hole[i] == 'R':\n            return i\n        i += 1\n\nmem_Rx = find_next_mem_R(0)\n\nfor i, s in enumerate(S):\n    if is_s[i] == 'S':\n        result[mem_Rx] = mem_R\n        result[mem_Rx + 1] = mem_L\n        mem_R = 0\n        mem_L = 0\n        mem_Rx = find_next_mem_R(i)\n\n    if s == 'R':\n        x_diff_for_R = mem_Rx - i\n        if x_diff_for_R % 2 == 0:\n            mem_R += 1\n        else:\n            mem_L += 1\n    else:\n        x_diff_for_R = i - mem_Rx\n        if x_diff_for_R % 2 == 0:\n            mem_R += 1\n        else:\n            mem_L += 1\n\nresult[mem_Rx] = mem_R\nresult[mem_Rx + 1] = mem_L\nprint(*result, sep=' ')\n```\n "
    },
    {
        "user_id": "u652656291",
        "problem_id": "p02922",
        "submission1_id": "s248903927",
        "code_content": "\na,b = map(int,input().split())\nans = 0\nif b % a == 0:\n  ans += 1\nelse:\n  ans += 1 + (b\nprint(ans)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nans = 0\nif b % a == 0:\n  ans += 1\nelse:\n  ans += 1 + (b\nprint(ans)```\n "
    },
    {
        "user_id": "u523130469",
        "problem_id": "p03714",
        "submission1_id": "s128585875",
        "code_content": "\nimport heapq\n\nn = int(input().strip())\na = list(map(int, input().split()))\npre = a[:n]\nheapq.heapify(pre)\nsuf = list(map(lambda x: -x, a[(2 * n):]))\nheapq.heapify(suf)\nleft = {}\nright = {}\npre_sum = sum(pre)\nsuf_sum = -sum(suf)\nleft[n - 1] = pre_sum\nright[2 * n] = suf_sum\nfor i in range(n, 2 * n):\n    heapq.heappush(pre, a[i])\n    pre_sum = pre_sum + a[i] - heapq.heappop(pre)\n    left[i] = pre_sum\nfor i in range(2 * n - 1, n - 1, -1):\n    heapq.heappush(suf, -a[i])\n    suf_sum = suf_sum + -heapq.heappop(suf) + a[i]\n    right[i] = suf_sum\nans = - (10 ** 100)\nfor i in range(n - 1, 2 * n):\n    ans = max(ans, left[i] - right[i + 1])\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport heapq\n\nn = int(input().strip())\na = list(map(int, input().split()))\npre = a[:n]\nheapq.heapify(pre)\nsuf = list(map(lambda x: -x, a[(2 * n):]))\nheapq.heapify(suf)\nleft = {}\nright = {}\npre_sum = sum(pre)\nsuf_sum = -sum(suf)\nleft[n - 1] = pre_sum\nright[2 * n] = suf_sum\nfor i in range(n, 2 * n):\n    heapq.heappush(pre, a[i])\n    pre_sum = pre_sum + a[i] - heapq.heappop(pre)\n    left[i] = pre_sum\nfor i in range(2 * n - 1, n - 1, -1):\n    heapq.heappush(suf, -a[i])\n    suf_sum = suf_sum + -heapq.heappop(suf) + a[i]\n    right[i] = suf_sum\nans = - (10 ** 100)\nfor i in range(n - 1, 2 * n):\n    ans = max(ans, left[i] - right[i + 1])\nprint(ans)\n```\n "
    },
    {
        "user_id": "u943057856",
        "problem_id": "p02640",
        "submission1_id": "s905250960",
        "code_content": "\nx,y=map(int,input().split())\nfor i in range(x+1):\n    if i*2+(x-i)*4==y:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nx,y=map(int,input().split())\nfor i in range(x+1):\n    if i*2+(x-i)*4==y:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u687053495",
        "problem_id": "p03036",
        "submission1_id": "s391082629",
        "code_content": "\nr, d, x = map(int, input().split())\n\nfor i in range(10):\n  x = r * x - d\n  print(x)",
        "origin_generated_text": "\n```\nr, d, x = map(int, input().split())\n\nfor i in range(10):\n  x = r * x - d\n  print(x)```\n "
    },
    {
        "user_id": "u761168538",
        "problem_id": "p02556",
        "submission1_id": "s825026886",
        "code_content": "\nn=int(input())\narr=[]\ns=set()\nfor _ in range(n):\n\tx,y=map(int,input().split())\n\tif((x,y) not in s):\n\t\tarr.append(x+y)\n\t\ts.add((x,y))\narr.sort()\nif(len(arr)==1):\n\tprint(0)\nelse:\n\tprint(arr[-1]-arr[0]+1)",
        "origin_generated_text": "\n```\nn=int(input())\narr=[]\ns=set()\nfor _ in range(n):\n\tx,y=map(int,input().split())\n\tif((x,y) not in s):\n\t\tarr.append(x+y)\n\t\ts.add((x,y))\narr.sort()\nif(len(arr)==1):\n\tprint(0)\nelse:\n\tprint(arr[-1]-arr[0]+1)```\n "
    },
    {
        "user_id": "u006657459",
        "problem_id": "p03296",
        "submission1_id": "s461582626",
        "code_content": "\nimport random\nN = int(input())\na = [int(ai) for ai in input().split()]\n\ncount = 0\nfor i in range(0, N-1):\n    if a[i] == a[i+1]:\n        count += 1\n        a[i+1] = random.randint(1, N)\nprint(count)",
        "origin_generated_text": "\n```\nimport random\nN = int(input())\na = [int(ai) for ai in input().split()]\n\ncount = 0\nfor i in range(0, N-1):\n    if a[i] == a[i+1]:\n        count += 1\n        a[i+1] = random.randint(1, N)\nprint(count)```\n "
    },
    {
        "user_id": "u019075898",
        "problem_id": "p02730",
        "submission1_id": "s834372890",
        "code_content": "\ndef isReverse(s):\n    p1 = 0\n    p2 = len(s) - 1\n    flag = True\n    while p1 <= p2:\n        if s[p1] != s[p2]:\n            flag = False\n        p1 += 1\n        p2 += -1\n    return flag\nif __name__ == \"__main__\":\n    s = input()\n    s1 = s[:int((len(s) - 1) / 2)]\n    s2 = s[int((len(s) + 1) / 2):]\n    if isReverse(s) and isReverse(s1) and isReverse(s2):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
        "origin_generated_text": "\n```\ndef isReverse(s):\n    p1 = 0\n    p2 = len(s) - 1\n    flag = True\n    while p1 <= p2:\n        if s[p1] != s[p2]:\n            flag = False\n        p1 += 1\n        p2 += -1\n    return flag\nif __name__ == \"__main__\":\n    s = input()\n    s1 = s[:int((len(s) - 1) / 2)]\n    s2 = s[int((len(s) + 1) / 2):]\n    if isReverse(s) and isReverse(s1) and isReverse(s2):\n        print(\"Yes\")\n    else:\n        print(\"No\")```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03480",
        "submission1_id": "s523183730",
        "code_content": "\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    a, b, c, d = LI()\n    a += b\n    c += d\n    ans = [\"Left\", \"Right\"]\n    if a == c:\n        print(\"Balanced\")\n        return\n    print(ans[a < c])\n    return\n\n\ndef B():\n    n, a, b = LI()\n    ans = 0\n    for i in range(1, n + 1):\n        if a <= sum(list(map(int, list(str(i))))) <= b:\n           ans += i\n    print(ans) \n    \n    return\n\n\ndef C():\n    x, y = LI()\n    ans = 0\n    while x <= y:\n        ans += 1\n        x *= 2\n    print(ans)\n    return\n\n\n\n\n\ndef D():\n    s = S()\n    ans = inf\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            ans = min(ans, max(i + 1, n - i - 1))\n    print(ans if ans != inf else -1)\n    return\n\n\nif __name__ == '__main__':\n    D()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    a, b, c, d = LI()\n    a += b\n    c += d\n    ans = [\"Left\", \"Right\"]\n    if a == c:\n        print(\"Balanced\")\n        return\n    print(ans[a < c])\n    return\n\n\ndef B():\n    n, a, b = LI()\n    ans = 0\n    for i in range(1, n + 1):\n        if a <= sum(list(map(int, list(str(i))))) <= b:\n           ans += i\n    print(ans) \n    \n    return\n\n\ndef C():\n    x, y = LI()\n    ans = 0\n    while x <= y:\n        ans += 1\n        x *= 2\n    print(ans)\n    return\n\n\n\n\n\ndef D():\n    s = S()\n    ans = inf\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            ans = min(ans, max(i + 1, n - i - 1))\n    print(ans if ans != inf else -1)\n    return\n\n\nif __name__ == '__main__':\n    D()\n```\n "
    },
    {
        "user_id": "u353797797",
        "problem_id": "p02962",
        "submission1_id": "s946356729",
        "code_content": "\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef LcpByZ(target):\n    len_t = len(target)\n    lcp = [-1] * len_t\n    top = 1  \n    left = 0  \n    right = 0  \n    lcp[0] = 0\n    while top < len_t:\n        \n        while top + right < len_t and target[right] == target[top + right]:\n            right += 1\n        \n        lcp[top] = right\n        left = 1\n        \n        if right == 0:\n            top += 1\n            continue\n        \n        while left + lcp[left] < right and left < right:\n            lcp[top + left] = lcp[left]\n            left += 1\n        \n        top += left\n        right -= left\n        left = 0  \n    return lcp\n\ns=SI()\nt=SI()\ntt=t+t\nss=s\nwhile len(tt) < len(s): tt+=t\nwhile len(ss) < len(tt)*2: ss+=s\n\nif tt in ss:print(-1);exit()\nwhile len(tt) < len(ss): tt+=t\nlcp=LcpByZ(tt+\"@\"+ss)\n\ntn=len(t)\nans=max(lcp[len(tt):])\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef LcpByZ(target):\n    len_t = len(target)\n    lcp = [-1] * len_t\n    top = 1  \n    left = 0  \n    right = 0  \n    lcp[0] = 0\n    while top < len_t:\n        \n        while top + right < len_t and target[right] == target[top + right]:\n            right += 1\n        \n        lcp[top] = right\n        left = 1\n        \n        if right == 0:\n            top += 1\n            continue\n        \n        while left + lcp[left] < right and left < right:\n            lcp[top + left] = lcp[left]\n            left += 1\n        \n        top += left\n        right -= left\n        left = 0  \n    return lcp\n\ns=SI()\nt=SI()\ntt=t+t\nss=s\nwhile len(tt) < len(s): tt+=t\nwhile len(ss) < len(tt)*2: ss+=s\n\nif tt in ss:print(-1);exit()\nwhile len(tt) < len(ss): tt+=t\nlcp=LcpByZ(tt+\"@\"+ss)\n\ntn=len(t)\nans=max(lcp[len(tt):])\nprint(ans)\n```\n "
    },
    {
        "user_id": "u716530146",
        "problem_id": "p03714",
        "submission1_id": "s421355128",
        "code_content": "\n\nsys.setrecursionlimit(10**8)\ninf = float('inf')\nn = int(input())\nA = list(map(int, input().split()))\nAL = A[:n]\nAR = A[n:]\nAL.sort()\nAR = list(map(lambda ddd: -ddd, AR))\nAR.sort()\ni1 = i2 = j1 = j2 = 0\ni = j = 0\nANL = A[n:2*n]\nANR = ANL[::-1]\nLS = sum(AL)\nRS = sum(AR)\nheapq.heapify(AL)\nAR = list(map(lambda ddd: -ddd, AR))\nheapq.heapify(AR)\nans = max(ans, LS-RS)\n\nfor count in range(n-1):\n    if ANL[i]-AL[0] > -AR[0]-ANR[j]:\n        LS = LS-heapq.heappop(AL)+ANL[i]\n        heapq.heappush(AL,ANL[i])\n        i += 1\n    else:\n        RS = RS+heapq.heappop(AR)+ANR[j]\n        heapq.heappush(AR,-ANR[j])\n        j += 1\n    ans = max(ans, LS-RS)\nprint(ans)\n",
        "origin_generated_text": "\n```\n\nsys.setrecursionlimit(10**8)\ninf = float('inf')\nn = int(input())\nA = list(map(int, input().split()))\nAL = A[:n]\nAR = A[n:]\nAL.sort()\nAR = list(map(lambda ddd: -ddd, AR))\nAR.sort()\ni1 = i2 = j1 = j2 = 0\ni = j = 0\nANL = A[n:2*n]\nANR = ANL[::-1]\nLS = sum(AL)\nRS = sum(AR)\nheapq.heapify(AL)\nAR = list(map(lambda ddd: -ddd, AR))\nheapq.heapify(AR)\nans = max(ans, LS-RS)\n\nfor count in range(n-1):\n    if ANL[i]-AL[0] > -AR[0]-ANR[j]:\n        LS = LS-heapq.heappop(AL)+ANL[i]\n        heapq.heappush(AL,ANL[i])\n        i += 1\n    else:\n        RS = RS+heapq.heappop(AR)+ANR[j]\n        heapq.heappush(AR,-ANR[j])\n        j += 1\n    ans = max(ans, LS-RS)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u645250356",
        "problem_id": "p03959",
        "submission1_id": "s892975170",
        "code_content": "\nfrom collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools,fractions\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\ndef err():\n    print(0)\n    quit()\n\nn = inp()\na = inpl()\nb = inpl()\nde = [-1] * n\nmx = [INF] * n\nnow = -1\nfor i in range(n):\n    if a[i] > now:\n        now = a[i]\n        de[i] = now\n    else:\n        mx[i] = now\nnow = -1\nfor i in range(n)[::-1]:\n    if b[i] > now:\n        now = b[i]\n        if de[i] != -1 and de[i] != now:\n            err()\n        de[i] = now\n    else:\n        mx[i] = min(mx[i], now)\nres = 1\nfor i in range(n):\n    if de[i] == -1:\n        res *= mx[i]\n        res %= mod\n    elif de[i] != mx[i]:\n        err()\nprint(res)",
        "origin_generated_text": "\n```\nfrom collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools,fractions\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\ndef err():\n    print(0)\n    quit()\n\nn = inp()\na = inpl()\nb = inpl()\nde = [-1] * n\nmx = [INF] * n\nnow = -1\nfor i in range(n):\n    if a[i] > now:\n        now = a[i]\n        de[i] = now\n    else:\n        mx[i] = now\nnow = -1\nfor i in range(n)[::-1]:\n    if b[i] > now:\n        now = b[i]\n        if de[i] != -1 and de[i] != now:\n            err()\n        de[i] = now\n    else:\n        mx[i] = min(mx[i], now)\nres = 1\nfor i in range(n):\n    if de[i] == -1:\n        res *= mx[i]\n        res %= mod\n    elif de[i] != mx[i]:\n        err()\nprint(res)```\n "
    },
    {
        "user_id": "u430478288",
        "problem_id": "p03729",
        "submission1_id": "s178605486",
        "code_content": "\nA, B, C = input().split()\n\nif A[-1] == B[0] and B[-1] == C[0]:\n    print('YES')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\nA, B, C = input().split()\n\nif A[-1] == B[0] and B[-1] == C[0]:\n    print('YES')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u237493274",
        "problem_id": "p02959",
        "submission1_id": "s235514571",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    ab = a[i] - b[i]\n    if ab < 0:\n        ans += a[i]\n        b[i] -= a[i]\n        ab = a[i+1] - b[i]\n        \n        if ab <= 0:\n            ans += a[i+1]\n            a[i+1] = 0\n        else:\n            ans += b[i]\n           \n    elif ab == 0:\n        ans += b[i]\n        a[i+1] = 0\n        \n    else:\n        ans += b[i]\n        \nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    ab = a[i] - b[i]\n    if ab < 0:\n        ans += a[i]\n        b[i] -= a[i]\n        ab = a[i+1] - b[i]\n        \n        if ab <= 0:\n            ans += a[i+1]\n            a[i+1] = 0\n        else:\n            ans += b[i]\n           \n    elif ab == 0:\n        ans += b[i]\n        a[i+1] = 0\n        \n    else:\n        ans += b[i]\n        \nprint(ans)```\n "
    },
    {
        "user_id": "u064434060",
        "problem_id": "p03626",
        "submission1_id": "s213874119",
        "code_content": "\nimport sys\n\nimport math\n\n\n\n\n\n\n\nmod=1000000007\nn=int(input())\ns=[input() for _ in range(2)]\nd=[]\ni=0\nwhile i<n:\n    if s[0][i]==s[1][i]:\n        d.append(1)\n        i+=1\n    else:\n        d.append(2)\n        i+=2\nm=len(d)\nans=0\nif d[0]==1:\n    ans=3\nif d[0]==2:\n    ans=6\nfor i in range(1,m):\n    if d[i]==1:\n        if d[i-1]==2:\n            ans*=1\n        else:\n            ans*=2\n    else:\n        if d[i-1]==2:\n            ans*=3\n        else:\n            ans*=2\n    ans=ans%mod\nprint(ans%mod)",
        "origin_generated_text": "\n```\nimport sys\n\nimport math\n\n\n\n\n\n\n\nmod=1000000007\nn=int(input())\ns=[input() for _ in range(2)]\nd=[]\ni=0\nwhile i<n:\n    if s[0][i]==s[1][i]:\n        d.append(1)\n        i+=1\n    else:\n        d.append(2)\n        i+=2\nm=len(d)\nans=0\nif d[0]==1:\n    ans=3\nif d[0]==2:\n    ans=6\nfor i in range(1,m):\n    if d[i]==1:\n        if d[i-1]==2:\n            ans*=1\n        else:\n            ans*=2\n    else:\n        if d[i-1]==2:\n            ans*=3\n        else:\n            ans*=2\n    ans=ans%mod\nprint(ans%mod)```\n "
    },
    {
        "user_id": "u200785298",
        "problem_id": "p03096",
        "submission1_id": "s193260173",
        "code_content": "\n\nimport sys\n\nMOD = 1000000007  \n\ndef solve(N, C):\n    last = [-1] * N\n    pairs = []\n    for i, c in enumerate(C):\n        try:\n            prev = last[c - 1]\n        except:\n            prev = -1\n        if prev >= 0 and prev < i - 1:\n            pairs.append((prev, i))\n        last[c - 1] = i\n    pairs.sort()\n    count = [0] * N\n    count[0] = 1\n    idx = 0\n    for i in range(N):\n        if i > 0:\n            count[i] += count[i - 1]\n            count[i] %= MOD\n        while idx < len(pairs) and pairs[idx][0] == i:\n            count[pairs[idx][1]] += count[i]\n            count[pairs[idx][1]] %= MOD\n            idx += 1\n    print(count[N - 1])\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    C = [ int(next(tokens)) for _ in range(N) ]  \n    solve(N, C)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\n\nMOD = 1000000007  \n\ndef solve(N, C):\n    last = [-1] * N\n    pairs = []\n    for i, c in enumerate(C):\n        try:\n            prev = last[c - 1]\n        except:\n            prev = -1\n        if prev >= 0 and prev < i - 1:\n            pairs.append((prev, i))\n        last[c - 1] = i\n    pairs.sort()\n    count = [0] * N\n    count[0] = 1\n    idx = 0\n    for i in range(N):\n        if i > 0:\n            count[i] += count[i - 1]\n            count[i] %= MOD\n        while idx < len(pairs) and pairs[idx][0] == i:\n            count[pairs[idx][1]] += count[i]\n            count[pairs[idx][1]] %= MOD\n            idx += 1\n    print(count[N - 1])\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    C = [ int(next(tokens)) for _ in range(N) ]  \n    solve(N, C)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u819939299",
        "problem_id": "p03760",
        "submission1_id": "s664168365",
        "code_content": "\no=list(input())\ne=list(input())+[\"\"]\nfor x,y in zip(o,e):print(x+y,end=\"\") ",
        "origin_generated_text": "\n```\no=list(input())\ne=list(input())+[\"\"]\nfor x,y in zip(o,e):print(x+y,end=\"\") ```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s800603669",
        "code_content": "\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = S%x2\nx3 = S\ny3 = (S-y2)\nprint(x1,y1,x2,y2,x3,y3)",
        "origin_generated_text": "\n```\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = S%x2\nx3 = S\ny3 = (S-y2)\nprint(x1,y1,x2,y2,x3,y3)```\n "
    },
    {
        "user_id": "u766783496",
        "problem_id": "p02886",
        "submission1_id": "s121331508",
        "code_content": "\nimport copy\nx = int(input())\ny = list(map(int,input().split()))\n\nresult = 0\nfor i in range(x):\n    for j in range(i+1,x):\n        array = copy.deepcopy(y)\n        b = array.pop(j)\n        a_sum = sum(array)\n        result = result + b * len(y) + a_sum\n\nprint(result)\n",
        "origin_generated_text": "\n```\nimport copy\nx = int(input())\ny = list(map(int,input().split()))\n\nresult = 0\nfor i in range(x):\n    for j in range(i+1,x):\n        array = copy.deepcopy(y)\n        b = array.pop(j)\n        a_sum = sum(array)\n        result = result + b * len(y) + a_sum\n\nprint(result)\n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03965",
        "submission1_id": "s857336400",
        "code_content": "\ns = input()\n \nans = 0\n \nr = 0\np = 0\n \nfor j in s:\n  if j == 'g':\n    if p > 0:\n      ans += p\n    p = 0\n    r += 1\n  else:\n    if r > 0:\n      ans += r\n    r = 0\n    p += 1\n \nprint (ans)",
        "origin_generated_text": "\n```\ns = input()\n \nans = 0\n \nr = 0\np = 0\n \nfor j in s:\n  if j == 'g':\n    if p > 0:\n      ans += p\n    p = 0\n    r += 1\n  else:\n    if r > 0:\n      ans += r\n    r = 0\n    p += 1\n \nprint (ans)```\n "
    },
    {
        "user_id": "u910632349",
        "problem_id": "p02580",
        "submission1_id": "s864634856",
        "code_content": "\nh,w,m=map(int,input().split())\nbomb=[list(map(int,input().split())) for _ in range(m)] \na=[0 for i in range(h+1)] \nb=[0 for _ in range(w+1)] \nfor i in range(m):\n    a[bomb[i][0]]+=1\n    b[bomb[i][1]]+=1\nam=max(a) \nbm=max(b) \nhmax=[0]*(h+1) \nwmax=[0]*(w+1) \nfor i in range(h+1):\n    if am==a[i]:\n        hmax[i]+=1\nfor i in range(w+1):\n    if bm==b[i]:\n        wmax[i]+=1\nans=am+bm\nk=sum(hmax)*sum(wmax)\nif k>m: \n    print(ans)\n    exit()\nfor i in bomb:\n    if hmax[i[0]]==1 and wmax[i[1]]==1:\n        k-=1\nif k==0:\n    print(ans-1)\nelse:\n    print(ans)",
        "origin_generated_text": "\n```\nh,w,m=map(int,input().split())\nbomb=[list(map(int,input().split())) for _ in range(m)] \na=[0 for i in range(h+1)] \nb=[0 for _ in range(w+1)] \nfor i in range(m):\n    a[bomb[i][0]]+=1\n    b[bomb[i][1]]+=1\nam=max(a) \nbm=max(b) \nhmax=[0]*(h+1) \nwmax=[0]*(w+1) \nfor i in range(h+1):\n    if am==a[i]:\n        hmax[i]+=1\nfor i in range(w+1):\n    if bm==b[i]:\n        wmax[i]+=1\nans=am+bm\nk=sum(hmax)*sum(wmax)\nif k>m: \n    print(ans)\n    exit()\nfor i in bomb:\n    if hmax[i[0]]==1 and wmax[i[1]]==1:\n        k-=1\nif k==0:\n    print(ans-1)\nelse:\n    print(ans)```\n "
    },
    {
        "user_id": "u102461423",
        "problem_id": "p02962",
        "submission1_id": "s481798793",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nS = input().rstrip()\nT = input().rstrip()\n\n\nLS = len(S)\nLT = len(T)\nn = (LT + (-LT) % LS) \nS *= (n+1)\nS = S[:LS+LT]\n\nMOD = 10 ** 9 + 7\nbase = 1234567\nbase_inv = pow(base,MOD-2,MOD) \npower = [1] * (LS+LT)\npower_inv = [1] * (LS+LT)\nfor n in range(1,LS+LT):\n    power[n] = power[n-1] * base % MOD\n    power_inv[n] = power_inv[n-1] * base_inv % MOD\n\ndef to_rolling_hash(S):\n    ret = [0] * len(S)\n    for i,s in enumerate(S):\n        x = (ret[i-1] + power[i] * ord(s)) % MOD\n        ret[i] = x\n    return ret\n\nS_hash = to_rolling_hash(S) + [0]\nT_hash = to_rolling_hash(T)[-1] \n\ncan_start = [(S_hash[i + LT - 1] - S_hash[i - 1]) * power_inv[i] % MOD == T_hash for i in range(LS)]\n\nif all(can_start):\n    print(LS - max(i for i,x in enumerate(can_start) if not x))\nelse:\n    print(-1)\n",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nS = input().rstrip()\nT = input().rstrip()\n\n\nLS = len(S)\nLT = len(T)\nn = (LT + (-LT) % LS) \nS *= (n+1)\nS = S[:LS+LT]\n\nMOD = 10 ** 9 + 7\nbase = 1234567\nbase_inv = pow(base,MOD-2,MOD) \npower = [1] * (LS+LT)\npower_inv = [1] * (LS+LT)\nfor n in range(1,LS+LT):\n    power[n] = power[n-1] * base % MOD\n    power_inv[n] = power_inv[n-1] * base_inv % MOD\n\ndef to_rolling_hash(S):\n    ret = [0] * len(S)\n    for i,s in enumerate(S):\n        x = (ret[i-1] + power[i] * ord(s)) % MOD\n        ret[i] = x\n    return ret\n\nS_hash = to_rolling_hash(S) + [0]\nT_hash = to_rolling_hash(T)[-1] \n\ncan_start = [(S_hash[i + LT - 1] - S_hash[i - 1]) * power_inv[i] % MOD == T_hash for i in range(LS)]\n\nif all(can_start):\n    print(LS - max(i for i,x in enumerate(can_start) if not x))\nelse:\n    print(-1)\n```\n "
    },
    {
        "user_id": "u516272298",
        "problem_id": "p03041",
        "submission1_id": "s664100588",
        "code_content": "\nn,k = map(int,input().split())\ns = str(input())\nprint(s[:k-1]+s[k-1].lower()+s[k:])",
        "origin_generated_text": "\n```\nn,k = map(int,input().split())\ns = str(input())\nprint(s[:k-1]+s[k-1].lower()+s[k:])```\n "
    },
    {
        "user_id": "u183896397",
        "problem_id": "p03296",
        "submission1_id": "s048632900",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\nans = 0\nbefor = a[0]\nfor i in range(1,n-1):\n    after = a[i+1]\n    if a[i] == befor:\n        ans += 1\n        for j in range(1,10001):\n            if j != after:\n                a[i] = j\n                break\n    befor = a[i]\nif a[-1] == a[-2]:\n    ans += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\nans = 0\nbefor = a[0]\nfor i in range(1,n-1):\n    after = a[i+1]\n    if a[i] == befor:\n        ans += 1\n        for j in range(1,10001):\n            if j != after:\n                a[i] = j\n                break\n    befor = a[i]\nif a[-1] == a[-2]:\n    ans += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u944209426",
        "problem_id": "p03965",
        "submission1_id": "s292004126",
        "code_content": "\ns=input()\nn=len(s)\nres=0\ntg,tp=0,0\nfor i in range(n):\n    if s[i]==\"g\":\n        if tg>tp:\n            tp+=1\n            res+=1\n        else:\n            tg+=1\n    else:\n        if tg<tp:\n            tp+=1\n        else:\n            tg+=1\n            res-=1\nprint(res)",
        "origin_generated_text": "\n```\ns=input()\nn=len(s)\nres=0\ntg,tp=0,0\nfor i in range(n):\n    if s[i]==\"g\":\n        if tg>tp:\n            tp+=1\n            res+=1\n        else:\n            tg+=1\n    else:\n        if tg<tp:\n            tp+=1\n        else:\n            tg+=1\n            res-=1\nprint(res)```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03480",
        "submission1_id": "s272256159",
        "code_content": "\ns = list(map(int, list(input())))\nans = 10**5\nfor i in range(len(s)-1):\n    if s[i]!=s[i+1]:\n        ans = min(ans, max(i+1, len(s)-i-1))\nprint(ans)\n",
        "origin_generated_text": "\n```\ns = list(map(int, list(input())))\nans = 10**5\nfor i in range(len(s)-1):\n    if s[i]!=s[i+1]:\n        ans = min(ans, max(i+1, len(s)-i-1))\nprint(ans)\n```\n "
    },
    {
        "user_id": "u207309781",
        "problem_id": "p02718",
        "submission1_id": "s252525406",
        "code_content": "\n(N, M) = [int(x) for x in input().split()]\nline=[int(x) for x in input().split()]\ncutoff=sum(line)/(4*M)\ncount=0\nfor i in line:\n    if i>=cutoff:\n        count+=1\nif count>=M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\n(N, M) = [int(x) for x in input().split()]\nline=[int(x) for x in input().split()]\ncutoff=sum(line)/(4*M)\ncount=0\nfor i in line:\n    if i>=cutoff:\n        count+=1\nif count>=M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u744920373",
        "problem_id": "p02854",
        "submission1_id": "s849842146",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for i in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for i2 in range(j)]\ndef dp3(ini, i, j, k): return [[[ini]*i for i2 in range(j)] for i3 in range(k)]\n\n\n\nfrom itertools import accumulate \n\nN = ii()\nA = li()\n\nacc = list(accumulate(A))\n\nfor i in range(N):\n    if acc[i] - (acc[-1] - acc[i]) >= 0:\n        break\n\nif i == N-1:\n    print(abs(A[i] - acc[i-1]))\nelif i == 0:\n    print(abs(acc[i] - (acc[-1] - acc[i])))\nelse:\n    print(abs(acc[i] - (acc[-1] - acc[i])))",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for i in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for i2 in range(j)]\ndef dp3(ini, i, j, k): return [[[ini]*i for i2 in range(j)] for i3 in range(k)]\n\n\n\nfrom itertools import accumulate \n\nN = ii()\nA = li()\n\nacc = list(accumulate(A))\n\nfor i in range(N):\n    if acc[i] - (acc[-1] - acc[i]) >= 0:\n        break\n\nif i == N-1:\n    print(abs(A[i] - acc[i-1]))\nelif i == 0:\n    print(abs(acc[i] - (acc[-1] - acc[i])))\nelse:\n    print(abs(acc[i] - (acc[-1] - acc[i])))```\n "
    },
    {
        "user_id": "u652057333",
        "problem_id": "p03626",
        "submission1_id": "s550925943",
        "code_content": "\nMOD = 10**9+7\n\nn = int(input())\ns1 = input()\ns2 = input()\nans = 1\n\nif s1[0] == s2[0]:\n    i = 1\n    pre_pat = 0\n    ans = 3\nelse:\n    i = 2\n    pre_pat = 1\n    ans = 6\n\nt = [[2, 2], [1, 3]]\nwhile True:\n    if i >= n:\n        break\n    if s1[i] == s2[i]:\n        pat = 0\n        i += 1\n    else:\n        pat = 1\n        i += 2\n    ans *= t[pre_pat][pat]\n    ans %= MOD\n    pre_pat = pat\nprint(ans)",
        "origin_generated_text": "\n```\nMOD = 10**9+7\n\nn = int(input())\ns1 = input()\ns2 = input()\nans = 1\n\nif s1[0] == s2[0]:\n    i = 1\n    pre_pat = 0\n    ans = 3\nelse:\n    i = 2\n    pre_pat = 1\n    ans = 6\n\nt = [[2, 2], [1, 3]]\nwhile True:\n    if i >= n:\n        break\n    if s1[i] == s2[i]:\n        pat = 0\n        i += 1\n    else:\n        pat = 1\n        i += 2\n    ans *= t[pre_pat][pat]\n    ans %= MOD\n    pre_pat = pat\nprint(ans)```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03039",
        "submission1_id": "s758583015",
        "code_content": "\nMOD = 10**9 + 7\nlist_size = 200001\n\nf_list = [1] * list_size\nf_r_list = [1] * list_size\n\nfor i in range(list_size - 1):\n\tf_list[i + 1] = int((f_list[i] * (i + 2)) % MOD)\n\nf_r_list[-1] = pow(f_list[-1], MOD - 2, MOD)\n\nfor i in range(2, list_size + 1):\n\tf_r_list[-i] = int((f_r_list[-i + 1] * (list_size + 2 - i)) % MOD)\n\ndef comb(n, r):\n\tif n < r:\n\t\treturn 0\n\telif n == 0 or r == 0 or n == r:\n\t\treturn 1\n\telse:\n\t\treturn (((f_list[n - 1] * f_r_list[n - r - 1]) % MOD) * f_r_list[r - 1]) % MOD \n\nn, m, k = map(int, input().split())\nprint(int((((n+m)*k*(k-1))/6)*comb(n*m, k)%MOD)%MOD)",
        "origin_generated_text": "\n```\nMOD = 10**9 + 7\nlist_size = 200001\n\nf_list = [1] * list_size\nf_r_list = [1] * list_size\n\nfor i in range(list_size - 1):\n\tf_list[i + 1] = int((f_list[i] * (i + 2)) % MOD)\n\nf_r_list[-1] = pow(f_list[-1], MOD - 2, MOD)\n\nfor i in range(2, list_size + 1):\n\tf_r_list[-i] = int((f_r_list[-i + 1] * (list_size + 2 - i)) % MOD)\n\ndef comb(n, r):\n\tif n < r:\n\t\treturn 0\n\telif n == 0 or r == 0 or n == r:\n\t\treturn 1\n\telse:\n\t\treturn (((f_list[n - 1] * f_r_list[n - r - 1]) % MOD) * f_r_list[r - 1]) % MOD \n\nn, m, k = map(int, input().split())\nprint(int((((n+m)*k*(k-1))/6)*comb(n*m, k)%MOD)%MOD)```\n "
    },
    {
        "user_id": "u331464808",
        "problem_id": "p03992",
        "submission1_id": "s441017628",
        "code_content": "\ns = input()\nprint(s[:4]+' '+s[4:])",
        "origin_generated_text": "\n```\ns = input()\nprint(s[:4]+' '+s[4:])```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p02718",
        "submission1_id": "s831329813",
        "code_content": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nprint(\"Yes\") if len([a[i] for i in range(m) if a[i] > sum(a) / 4 / m]) >= m else print(\"No\")",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nprint(\"Yes\") if len([a[i] for i in range(m) if a[i] > sum(a) / 4 / m]) >= m else print(\"No\")```\n "
    },
    {
        "user_id": "u661980786",
        "problem_id": "p03573",
        "submission1_id": "s421802268",
        "code_content": "\na,b,c = map(int,input().split())\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)",
        "origin_generated_text": "\n```\na,b,c = map(int,input().split())\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)```\n "
    },
    {
        "user_id": "u574483499",
        "problem_id": "p02880",
        "submission1_id": "s461531385",
        "code_content": "\nn = int(input())\n\nln = []\n\nfor i in range(1,10):\n  for j in range(1,10):\n    ln.append(i*j)\n    \nprint(\"Yes\" if n in ln else \"No\")",
        "origin_generated_text": "\n```\nn = int(input())\n\nln = []\n\nfor i in range(1,10):\n  for j in range(1,10):\n    ln.append(i*j)\n    \nprint(\"Yes\" if n in ln else \"No\")```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s200123623",
        "code_content": "\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int, i.split(\",\")))\n        mas[y][x] += 1\n        for j in n3:\n            try:\n                mas[y+j[1]][x+j[0]] += 1\n            except IndexError:\n                continue\n    except:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))",
        "origin_generated_text": "\n```\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int, i.split(\",\")))\n        mas[y][x] += 1\n        for j in n3:\n            try:\n                mas[y+j[1]][x+j[0]] += 1\n            except IndexError:\n                continue\n    except:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))```\n "
    },
    {
        "user_id": "u054556734",
        "problem_id": "p03625",
        "submission1_id": "s894629652",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\n\nans=[]\ntmp=0\nfor el in a:\n    if len(ans)==2: break\n    if el != tmp: tmp=el; ans.append(el)\n    else:\n        if len(ans)==1: ans.append(el)\n\ntry: ans=ans[0]*ans[1]\nexcept: ans=0\nprint(ans)\n",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\n\nans=[]\ntmp=0\nfor el in a:\n    if len(ans)==2: break\n    if el != tmp: tmp=el; ans.append(el)\n    else:\n        if len(ans)==1: ans.append(el)\n\ntry: ans=ans[0]*ans[1]\nexcept: ans=0\nprint(ans)\n```\n "
    },
    {
        "user_id": "u797673668",
        "problem_id": "p02327",
        "submission1_id": "s962062448",
        "code_content": "\nh, w = map(int, input().split())\nmax_rect, prev = 0, [0] * (w + 1)\nfor i in range(h):\n    current = [p + 1 if f else 0 for f, p in zip(map(lambda x: int(x) ^ 1, input().split()), prev)] + [0]\n    stack = [(0, 0)]\n    for j in range(w + 1):\n        c_j = current[j]\n        if stack[-1][0] < c_j:\n            stack.append((c_j, j))\n            continue\n        if stack[-1][0] > c_j:\n            while stack[-1][0] > c_j:\n                height, since = stack.pop()\n                max_rect = max(max_rect, height * (j - since))\n            if c_j:\n                stack.append((c_j, j))\n        else:\n            if c_j:\n                stack.append((c_j, j))\n    prev = current\nprint(max_rect)",
        "origin_generated_text": "\n```\nh, w = map(int, input().split())\nmax_rect, prev = 0, [0] * (w + 1)\nfor i in range(h):\n    current = [p + 1 if f else 0 for f, p in zip(map(lambda x: int(x) ^ 1, input().split()), prev)] + [0]\n    stack = [(0, 0)]\n    for j in range(w + 1):\n        c_j = current[j]\n        if stack[-1][0] < c_j:\n            stack.append((c_j, j))\n            continue\n        if stack[-1][0] > c_j:\n            while stack[-1][0] > c_j:\n                height, since = stack.pop()\n                max_rect = max(max_rect, height * (j - since))\n            if c_j:\n                stack.append((c_j, j))\n        else:\n            if c_j:\n                stack.append((c_j, j))\n    prev = current\nprint(max_rect)```\n "
    },
    {
        "user_id": "u726769307",
        "problem_id": "p02887",
        "submission1_id": "s177244060",
        "code_content": "\nn=int(input())\ns=list(input())\nprev=s[0]\nsum=1\nfor i in range(1,n):\n    if(prev!=s[i]):\n        sum+=1\n    prev=s[i]\nprint(sum)",
        "origin_generated_text": "\n```\nn=int(input())\ns=list(input())\nprev=s[0]\nsum=1\nfor i in range(1,n):\n    if(prev!=s[i]):\n        sum+=1\n    prev=s[i]\nprint(sum)```\n "
    },
    {
        "user_id": "u940765148",
        "problem_id": "p02742",
        "submission1_id": "s450199928",
        "code_content": "\nh,w = [int(i) for i in input().split()]\nif h % 2 == 0:\n    print((w + 1)*h\nelse:\n    print((w + 1)*(h-1)",
        "origin_generated_text": "\n```\nh,w = [int(i) for i in input().split()]\nif h % 2 == 0:\n    print((w + 1)*h\nelse:\n    print((w + 1)*(h-1)```\n "
    },
    {
        "user_id": "u441320782",
        "problem_id": "p03573",
        "submission1_id": "s945329750",
        "code_content": "\nx = list(map(int,input().split()))\nresult = None\nfor i in set(x):\n  if x.count(i)==1:\n    result = i\nprint(result)    ",
        "origin_generated_text": "\n```\nx = list(map(int,input().split()))\nresult = None\nfor i in set(x):\n  if x.count(i)==1:\n    result = i\nprint(result)    ```\n "
    },
    {
        "user_id": "u032798323",
        "problem_id": "p02699",
        "submission1_id": "s752000546",
        "code_content": "\nS,W = list(map(int,input().split()))\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")",
        "origin_generated_text": "\n```\nS,W = list(map(int,input().split()))\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")```\n "
    },
    {
        "user_id": "u355853184",
        "problem_id": "p02580",
        "submission1_id": "s225191644",
        "code_content": "\nH, W, M = map(int, input().split())\n\nH_bom = [0 for i in range(H+1)]\nW_bom = [0 for i in range(W+1)]\nbom_map = [[0 for i in range(W+1)] for i in range(H+1)]\n\nfor i in range(M):\n    M_temp = list(map(int, input().split()))\n    H_bom[M_temp[0]] += 1\n    W_bom[M_temp[1]] += 1\n    bom_map[M_temp[0]][M_temp[1]] = 1\n\n\nH_bom_max = max(H_bom)\nW_bom_max = max(W_bom)\nH_bom_line = []\nW_bom_line = []\n\nfor i in range(H+1):\n    if H_bom[i] == H_bom_max:\n        H_bom_line.append(i)\nfor i in range(W+1):\n    if W_bom[i] == W_bom_max:\n        W_bom_line.append(i)\n\nbom_check_flag = 0\n\nfor i in H_bom_line:\n    for j in W_bom_line:\n        if bom_map[i][j] == 1:\n            print(H_bom_max + W_bom_max)\n            bom_check_flag = 1\n            break\nif bom_check_flag == 0:\n    print(H_bom_max + W_bom_max -1)\n",
        "origin_generated_text": "\n```\nH, W, M = map(int, input().split())\n\nH_bom = [0 for i in range(H+1)]\nW_bom = [0 for i in range(W+1)]\nbom_map = [[0 for i in range(W+1)] for i in range(H+1)]\n\nfor i in range(M):\n    M_temp = list(map(int, input().split()))\n    H_bom[M_temp[0]] += 1\n    W_bom[M_temp[1]] += 1\n    bom_map[M_temp[0]][M_temp[1]] = 1\n\n\nH_bom_max = max(H_bom)\nW_bom_max = max(W_bom)\nH_bom_line = []\nW_bom_line = []\n\nfor i in range(H+1):\n    if H_bom[i] == H_bom_max:\n        H_bom_line.append(i)\nfor i in range(W+1):\n    if W_bom[i] == W_bom_max:\n        W_bom_line.append(i)\n\nbom_check_flag = 0\n\nfor i in H_bom_line:\n    for j in W_bom_line:\n        if bom_map[i][j] == 1:\n            print(H_bom_max + W_bom_max)\n            bom_check_flag = 1\n            break\nif bom_check_flag == 0:\n    print(H_bom_max + W_bom_max -1)\n```\n "
    },
    {
        "user_id": "u017810624",
        "problem_id": "p02633",
        "submission1_id": "s682782019",
        "code_content": "\nimport math\nx=int(input())\nct=0\nfor i in range(1000):\n  ct+=(360-x)\n  if ct%360==0:\n    print(i+1)\n    exit()",
        "origin_generated_text": "\n```\nimport math\nx=int(input())\nct=0\nfor i in range(1000):\n  ct+=(360-x)\n  if ct%360==0:\n    print(i+1)\n    exit()```\n "
    },
    {
        "user_id": "u014268998",
        "problem_id": "p03106",
        "submission1_id": "s802381741",
        "code_content": "\na,b,k = map(int,input().split())\n\n\n\nc = 0\nans = 0\nfor i in range(min(a,b),0,-1):\n  if(a%i == 0 and b%i == 0):\n    c += 1\n    if(c == k):\n      ans = i\n      break\n\nprint(ans)",
        "origin_generated_text": "\n```\na,b,k = map(int,input().split())\n\n\n\nc = 0\nans = 0\nfor i in range(min(a,b),0,-1):\n  if(a%i == 0 and b%i == 0):\n    c += 1\n    if(c == k):\n      ans = i\n      break\n\nprint(ans)```\n "
    },
    {
        "user_id": "u914330401",
        "problem_id": "p03102",
        "submission1_id": "s182412719",
        "code_content": "\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [[0]*M]*N\nans = 0\nsum = 0\nfor i in range(N):\n  A[i] = list(map(int, input().split()))\nfor i in range(N):\n  for j in range(M):\n    sum += A[i][j] * B[j]\n  sum += C\n  if sum > 0:\n    ans += 1\n    sum = 0\n      \nprint(ans)",
        "origin_generated_text": "\n```\nN, M, C = map(int, input().split())\nB = list(map(int, input().split()))\nA = [[0]*M]*N\nans = 0\nsum = 0\nfor i in range(N):\n  A[i] = list(map(int, input().split()))\nfor i in range(N):\n  for j in range(M):\n    sum += A[i][j] * B[j]\n  sum += C\n  if sum > 0:\n    ans += 1\n    sum = 0\n      \nprint(ans)```\n "
    },
    {
        "user_id": "u041351774",
        "problem_id": "p03716",
        "submission1_id": "s961895692",
        "code_content": "\nimport heapq\nn=int(input())\na=list(map(int,input().split()))\nq=a[0:n]\np=a[2*n:3*n]\nsums=[0]*(n+1)\nsums[0]=sum(q)\nam=a[n:2*n]\nfor i in range(0,n):\n    heapq.heappush(q,am[i])\n    sums[i+1]=sum(q)\nfor i in range(n-1,-1,-1):\n    heapq.heappush(p,(-1)*am[i])\n    sums[i]+=sum(p)\nprint(max(sums))",
        "origin_generated_text": "\n```\nimport heapq\nn=int(input())\na=list(map(int,input().split()))\nq=a[0:n]\np=a[2*n:3*n]\nsums=[0]*(n+1)\nsums[0]=sum(q)\nam=a[n:2*n]\nfor i in range(0,n):\n    heapq.heappush(q,am[i])\n    sums[i+1]=sum(q)\nfor i in range(n-1,-1,-1):\n    heapq.heappush(p,(-1)*am[i])\n    sums[i]+=sum(p)\nprint(max(sums))```\n "
    },
    {
        "user_id": "u707808519",
        "problem_id": "p02556",
        "submission1_id": "s702335322",
        "code_content": "\nn = int(input())\nmant = [0 for _ in range(n)]\nfor i in range(n):\n    x, y = map(int, input().split())\n    mant[i] = abs(x) + abs(y)\n\nprint(max(mant) - min(mant))",
        "origin_generated_text": "\n```\nn = int(input())\nmant = [0 for _ in range(n)]\nfor i in range(n):\n    x, y = map(int, input().split())\n    mant[i] = abs(x) + abs(y)\n\nprint(max(mant) - min(mant))```\n "
    },
    {
        "user_id": "u830054172",
        "problem_id": "p03272",
        "submission1_id": "s292746109",
        "code_content": "\nn,i=list(map(int,input().split()))\nprint(n-i+1)",
        "origin_generated_text": "\n```\nn,i=list(map(int,input().split()))\nprint(n-i+1)```\n "
    },
    {
        "user_id": "u260216890",
        "problem_id": "p02886",
        "submission1_id": "s779389870",
        "code_content": "\nN=int(input())\nD=list(map(int,input().split()))\nfrom itertools import combinations\nans=0\ncomb=combinations(D,2)\nfor c in comb:\n  ans+=sum(c)\nprint(ans)",
        "origin_generated_text": "\n```\nN=int(input())\nD=list(map(int,input().split()))\nfrom itertools import combinations\nans=0\ncomb=combinations(D,2)\nfor c in comb:\n  ans+=sum(c)\nprint(ans)```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p03416",
        "submission1_id": "s245993608",
        "code_content": "\na,b = map(int,input().split()) \nc = 0\nfor i in range(1,10):\n  for j in range(0,10):\n    for k in range(0,10):\n      x = 10001*i+1010*j+100*k\n      if x >= a and x <= b:\n        c += 1\nprint(c)",
        "origin_generated_text": "\n```\na,b = map(int,input().split()) \nc = 0\nfor i in range(1,10):\n  for j in range(0,10):\n    for k in range(0,10):\n      x = 10001*i+1010*j+100*k\n      if x >= a and x <= b:\n        c += 1\nprint(c)```\n "
    },
    {
        "user_id": "u268792407",
        "problem_id": "p02887",
        "submission1_id": "s094790296",
        "code_content": "\nN = int(input())\nS = input()\n \nans = 1\nfor i in range(N - 1):\n    if S[i] != S[i + 1]:\n        ans = ans + 1\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nS = input()\n \nans = 1\nfor i in range(N - 1):\n    if S[i] != S[i + 1]:\n        ans = ans + 1\nprint(ans)```\n "
    },
    {
        "user_id": "u369320902",
        "problem_id": "p03041",
        "submission1_id": "s118693254",
        "code_content": "\na = input().split()\nb = input()\n \nlist = list(b)\n \nfor i in range(len(list)):\n  if i == int(a[1]) - 1:\n    list[i] = list[i].lower()\n    \nprint(''.join(list).upper())",
        "origin_generated_text": "\n```\na = input().split()\nb = input()\n \nlist = list(b)\n \nfor i in range(len(list)):\n  if i == int(a[1]) - 1:\n    list[i] = list[i].lower()\n    \nprint(''.join(list).upper())```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p02407",
        "submission1_id": "s717091859",
        "code_content": "\nn = int(input())\nprint(\" \".join(map(str, sorted(list(map(int, input().split())), reverse=True))[:-1]))",
        "origin_generated_text": "\n```\nn = int(input())\nprint(\" \".join(map(str, sorted(list(map(int, input().split())), reverse=True))[:-1]))```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p02665",
        "submission1_id": "s084629975",
        "code_content": "\n\nN = int(input())\n\nA = list(map(int, input().split()))\n\nif A[0] != 1:\n    print(-1)\n    exit()\n\nlimit = [1]\nfor i in range(1, N+1):\n    if i == N:\n        limit.append(A[i])\n    else:\n        limit.append((limit[-1]-A[i-1])*2)\n\n\n\nans = [A[-1]]\nnow_leaf = A[-1]\nfor i in range(N-1, -1, -1):\n    \n    ans.append(min(now_leaf+A[i], limit[i]))\n    now_leaf = ans[-1]\n\nprint(sum(ans))\n",
        "origin_generated_text": "\n```\n\nN = int(input())\n\nA = list(map(int, input().split()))\n\nif A[0] != 1:\n    print(-1)\n    exit()\n\nlimit = [1]\nfor i in range(1, N+1):\n    if i == N:\n        limit.append(A[i])\n    else:\n        limit.append((limit[-1]-A[i-1])*2)\n\n\n\nans = [A[-1]]\nnow_leaf = A[-1]\nfor i in range(N-1, -1, -1):\n    \n    ans.append(min(now_leaf+A[i], limit[i]))\n    now_leaf = ans[-1]\n\nprint(sum(ans))\n```\n "
    },
    {
        "user_id": "u324549724",
        "problem_id": "p03796",
        "submission1_id": "s610085967",
        "code_content": "\nimport math\n\nn = int(input())\nprint((math.factorial(n)%1000000007)%1000000007)\n",
        "origin_generated_text": "\n```\nimport math\n\nn = int(input())\nprint((math.factorial(n)%1000000007)%1000000007)\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s212622760",
        "code_content": "\ndef solve(a,b,c,d):\n  x1,y1,x2,y2=a,b,c,d\n  mx=my=0\n  for i in range(30):\n    x1=0-x1\n    y1=0-y1\n    x2=0-x2\n    y2=0-y2\n    if x1==x2 and x1%3==2:mx=i+2\n    if y1==y2 and y1%3==2:my=i+2\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(a,b,c,d):\n  x1,y1,x2,y2=a,b,c,d\n  mx=my=0\n  for i in range(30):\n    x1=0-x1\n    y1=0-y1\n    x2=0-x2\n    y2=0-y2\n    if x1==x2 and x1%3==2:mx=i+2\n    if y1==y2 and y1%3==2:my=i+2\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u813238682",
        "problem_id": "p03563",
        "submission1_id": "s094637307",
        "code_content": "\nR = int(input())\nG = int(input())\nans = 2 * G - R\nprint(ans)",
        "origin_generated_text": "\n```\nR = int(input())\nG = int(input())\nans = 2 * G - R\nprint(ans)```\n "
    },
    {
        "user_id": "u556160473",
        "problem_id": "p03734",
        "submission1_id": "s710473790",
        "code_content": "\nimport sys\n\nif 1:\n    N,W = map(int, input().split(' '))\n    w,v = [],[]\n    for i in range(N):\n        w_,v_ = map(int, input().split(' '))\n        w.append(w_)\n        v.append(v_)\nelse:\n    N,W = 4,6\n    w = [2,3,4,3]\n    v = [1,4,10,4]\n\nw0 = w[0]\n\nidxs = set()\nfor i in range(N+1):\n    for j in range(3*i+1):\n        if i*w0+j <= W:\n            idxs.add(i*w0+j)\nidxs = list(idxs)\nidx_dict = {idx:i for i,idx in enumerate(idxs)}\n\ndp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n\nfor i in range(N):\n    for j in range(len(idxs)):\n        if idxs[j] < w[i]:\n            dp[i+1][j] = dp[i][j]\n        else:\n            if idxs[j]-w[i] in idx_dict:\n                dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n            else:\n                dp[i+1][j] = dp[i][j]\n\nprint(dp[-1][-1])",
        "origin_generated_text": "\n```\nimport sys\n\nif 1:\n    N,W = map(int, input().split(' '))\n    w,v = [],[]\n    for i in range(N):\n        w_,v_ = map(int, input().split(' '))\n        w.append(w_)\n        v.append(v_)\nelse:\n    N,W = 4,6\n    w = [2,3,4,3]\n    v = [1,4,10,4]\n\nw0 = w[0]\n\nidxs = set()\nfor i in range(N+1):\n    for j in range(3*i+1):\n        if i*w0+j <= W:\n            idxs.add(i*w0+j)\nidxs = list(idxs)\nidx_dict = {idx:i for i,idx in enumerate(idxs)}\n\ndp = [[0 for j in range(len(idxs))] for i in range(N+1)]\n\nfor i in range(N):\n    for j in range(len(idxs)):\n        if idxs[j] < w[i]:\n            dp[i+1][j] = dp[i][j]\n        else:\n            if idxs[j]-w[i] in idx_dict:\n                dp[i+1][j] = max([dp[i][j],dp[i][idx_dict[idxs[j]-w[i]]]+v[i]])\n            else:\n                dp[i+1][j] = dp[i][j]\n\nprint(dp[-1][-1])```\n "
    },
    {
        "user_id": "u692746605",
        "problem_id": "p02880",
        "submission1_id": "s848956615",
        "code_content": "\nn=int(input())\n\nfor i in range(1,10):\n  for j in range(1,10):\n    if i*j==n:\n      print('Yes')\n      exit()\n\nprint('No')\n",
        "origin_generated_text": "\n```\nn=int(input())\n\nfor i in range(1,10):\n  for j in range(1,10):\n    if i*j==n:\n      print('Yes')\n      exit()\n\nprint('No')\n```\n "
    },
    {
        "user_id": "u858670323",
        "problem_id": "p03796",
        "submission1_id": "s678189381",
        "code_content": "\nN=int(input().rstrip())\na=1\nmod=1e9+7\nfor i in range(1,N+1):\n  a*=i\n  a%=mod\nprint(a%mod)\n",
        "origin_generated_text": "\n```\nN=int(input().rstrip())\na=1\nmod=1e9+7\nfor i in range(1,N+1):\n  a*=i\n  a%=mod\nprint(a%mod)\n```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p03796",
        "submission1_id": "s913133989",
        "code_content": "\nn = int(input())\nans = 1\nfor i in range(1,n+1):\n  ans *= i\n  ans %= 10**9 + 7\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nans = 1\nfor i in range(1,n+1):\n  ans *= i\n  ans %= 10**9 + 7\nprint(ans)```\n "
    },
    {
        "user_id": "u723711163",
        "problem_id": "p02718",
        "submission1_id": "s062282807",
        "code_content": "\nN, M = list(map(int, input().split()))\nscores = list(map(int, input().split()))\nat_least = int(sum(scores) / (4 * M))\n\nif len([ s for s in scores if s >= at_least]) >= M:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nN, M = list(map(int, input().split()))\nscores = list(map(int, input().split()))\nat_least = int(sum(scores) / (4 * M))\n\nif len([ s for s in scores if s >= at_least]) >= M:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u229333839",
        "problem_id": "p03206",
        "submission1_id": "s276135749",
        "code_content": "\nC = \"Christmas\"\nE =\" Eve\"\nD = input()\nD = int(D)\na = 25 - D\nq=\"\"\n \nwhile a > 0:\n  q = q + E\n  a = a - 1\n \nprint(C+q)",
        "origin_generated_text": "\n```\nC = \"Christmas\"\nE =\" Eve\"\nD = input()\nD = int(D)\na = 25 - D\nq=\"\"\n \nwhile a > 0:\n  q = q + E\n  a = a - 1\n \nprint(C+q)```\n "
    },
    {
        "user_id": "u021916304",
        "problem_id": "p02742",
        "submission1_id": "s770144087",
        "code_content": "\nh,w=map(int,input().split())\nif h == 1 or w == 1:\n  print(1)\nelif h%2 == 0 or w%2 == 0:\n  print(int(h*w/2))\nelse:\n  print(int(h*w/2)+1)\n  \n",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nif h == 1 or w == 1:\n  print(1)\nelif h%2 == 0 or w%2 == 0:\n  print(int(h*w/2))\nelse:\n  print(int(h*w/2)+1)\n  \n```\n "
    },
    {
        "user_id": "u547608423",
        "problem_id": "p02556",
        "submission1_id": "s536894716",
        "code_content": "\nN = int(input())\ni = []\nj = []\nfor k in range(N):\n    x, y = map(int, input().split())\n    i.append(x+y)\n    j.append(-x-y)\n\nprint(max(max(i)+max(j), max(i)+min(j), min(i)+max(j), min(i)+min(j)))\n",
        "origin_generated_text": "\n```\nN = int(input())\ni = []\nj = []\nfor k in range(N):\n    x, y = map(int, input().split())\n    i.append(x+y)\n    j.append(-x-y)\n\nprint(max(max(i)+max(j), max(i)+min(j), min(i)+max(j), min(i)+min(j)))\n```\n "
    },
    {
        "user_id": "u013202780",
        "problem_id": "p03729",
        "submission1_id": "s303296019",
        "code_content": "\na,b,c=input().split();print(\"YES\" if a[-1]==b[0] and b[-1]==c[0] else \"NO\")",
        "origin_generated_text": "\n```\na,b,c=input().split();print(\"YES\" if a[-1]==b[0] and b[-1]==c[0] else \"NO\")```\n "
    },
    {
        "user_id": "u727407185",
        "problem_id": "p02727",
        "submission1_id": "s934850012",
        "code_content": "\nimport sys\nx, y, a, b, c = [int(x) for x in input().split()]\np = [int(x) for x in input().split()]\nq = [int(x) for x in input().split()]\nr = [int(x) for x in input().split()]\np.sort(key=lambda x: -x)\nq.sort(key=lambda x: -x)\nr.sort(key=lambda x: -x)\nri = max(0, x - a) + max(0, y - b) + max(0, c - (a + b))\npi = max(0, a - x)\nqi = max(0, b - y)\nwhile ri < len(r) and (0 < pi or 0 < qi):\n    if 0 < pi and p[pi - 1] < r[ri] and (qi <= 0 or p[pi - 1] < q[qi - 1]):\n        ri += 1\n        pi -= 1\n    elif 0 < qi and q[qi - 1] < r[ri] and (pi <= 0 or q[qi - 1] < p[pi - 1]):\n        ri += 1\n        qi -= 1\n    else:\n        break\nprint(sum(p[:pi]) + sum(q[:qi]) + sum(r[:ri]))\n",
        "origin_generated_text": "\n```\nimport sys\nx, y, a, b, c = [int(x) for x in input().split()]\np = [int(x) for x in input().split()]\nq = [int(x) for x in input().split()]\nr = [int(x) for x in input().split()]\np.sort(key=lambda x: -x)\nq.sort(key=lambda x: -x)\nr.sort(key=lambda x: -x)\nri = max(0, x - a) + max(0, y - b) + max(0, c - (a + b))\npi = max(0, a - x)\nqi = max(0, b - y)\nwhile ri < len(r) and (0 < pi or 0 < qi):\n    if 0 < pi and p[pi - 1] < r[ri] and (qi <= 0 or p[pi - 1] < q[qi - 1]):\n        ri += 1\n        pi -= 1\n    elif 0 < qi and q[qi - 1] < r[ri] and (pi <= 0 or q[qi - 1] < p[pi - 1]):\n        ri += 1\n        qi -= 1\n    else:\n        break\nprint(sum(p[:pi]) + sum(q[:qi]) + sum(r[:ri]))\n```\n "
    },
    {
        "user_id": "u637322311",
        "problem_id": "p02281",
        "submission1_id": "s179648532",
        "code_content": "\nfrom sys import stdin\n\nclass Node(object):\n    def __init__(self, parent=None, left=None, right=None):\n        self.parent = parent\n        self.left = left\n        self.right = right\n\ndef print_nodes(nodes, n):\n    A = []\n    B = []\n    C = []\n    def walk_tree(nodes, u):\n        if u == -1:\n            return\n        r = nodes[u].right\n        l = nodes[u].left\n        nonlocal A\n        A.append(u)\n        walk_tree(nodes, l)\n        B.append(u)\n        walk_tree(nodes, r)\n        C.append(u)\n\n    for i in range(n):\n        if nodes[i].parent == None:\n            walk_tree(nodes, i)\n            print(\"Preorder\", end=\"\\n \")\n            print(*A, sep=\" \")\n            print(\"Inorder\", end=\"\\n \")\n            print(*B, sep=\" \")\n            print(\"Postorder\", end=\"\\n \")\n            print(*C, sep=\" \")\n\ndef read_binary_tree(nodes, n):\n    for _ in range(n):\n        i = [int(i) for i in stdin.readline().strip().split()]\n        nodes[i[0]].left = i[1]\n        nodes[i[0]].right = i[2]\n        if i[1] != -1:\n            nodes[i[1]].parent = i[0]\n        if i[2] != -1:\n            nodes[i[2]].parent = i[0]\n\nn = int(input())\nnodes = [Node() for _ in range(n)]\nread_binary_tree(nodes, n)\nprint_nodes(nodes, n)\n",
        "origin_generated_text": "\n```\nfrom sys import stdin\n\nclass Node(object):\n    def __init__(self, parent=None, left=None, right=None):\n        self.parent = parent\n        self.left = left\n        self.right = right\n\ndef print_nodes(nodes, n):\n    A = []\n    B = []\n    C = []\n    def walk_tree(nodes, u):\n        if u == -1:\n            return\n        r = nodes[u].right\n        l = nodes[u].left\n        nonlocal A\n        A.append(u)\n        walk_tree(nodes, l)\n        B.append(u)\n        walk_tree(nodes, r)\n        C.append(u)\n\n    for i in range(n):\n        if nodes[i].parent == None:\n            walk_tree(nodes, i)\n            print(\"Preorder\", end=\"\\n \")\n            print(*A, sep=\" \")\n            print(\"Inorder\", end=\"\\n \")\n            print(*B, sep=\" \")\n            print(\"Postorder\", end=\"\\n \")\n            print(*C, sep=\" \")\n\ndef read_binary_tree(nodes, n):\n    for _ in range(n):\n        i = [int(i) for i in stdin.readline().strip().split()]\n        nodes[i[0]].left = i[1]\n        nodes[i[0]].right = i[2]\n        if i[1] != -1:\n            nodes[i[1]].parent = i[0]\n        if i[2] != -1:\n            nodes[i[2]].parent = i[0]\n\nn = int(input())\nnodes = [Node() for _ in range(n)]\nread_binary_tree(nodes, n)\nprint_nodes(nodes, n)\n```\n "
    },
    {
        "user_id": "u131881594",
        "problem_id": "p03998",
        "submission1_id": "s608735469",
        "code_content": "\na,b,c=input(),input(),input()\nstring=[a,b,c]\ns=[0,0,0]\nban=0\nwhile s[0]!=len(a) and s[1]!=len(b) and s[2]!=len(c) and s[0]!=0 and s[1]!=0 and s[2]!=0:\n    temp=s[ban]\n    s[ban]+=1\n    if string[ban][temp]==\"a\": ban=0\n    elif string[ban][temp]==\"b\": ban=1\n    else: ban=2\nif s[0]==len(a): print(\"A\")\nelif s[1]==len(b): print(\"B\")\nelif s[2]==len(c): print(\"C\")",
        "origin_generated_text": "\n```\na,b,c=input(),input(),input()\nstring=[a,b,c]\ns=[0,0,0]\nban=0\nwhile s[0]!=len(a) and s[1]!=len(b) and s[2]!=len(c) and s[0]!=0 and s[1]!=0 and s[2]!=0:\n    temp=s[ban]\n    s[ban]+=1\n    if string[ban][temp]==\"a\": ban=0\n    elif string[ban][temp]==\"b\": ban=1\n    else: ban=2\nif s[0]==len(a): print(\"A\")\nelif s[1]==len(b): print(\"B\")\nelif s[2]==len(c): print(\"C\")```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s556813886",
        "code_content": "\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\n\nfor i in range(N):\n    C[i] = int(input())\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(1,N):\n    if C[i] == C[i-1]:\n        dp[i] = dp[i-1]\n        continue\n\n    dp[i] = dp[i-1]\n    for j in range(i):\n        if C[i] == C[j] and j < i:\n            dp[i] += dp[j]\n            dp[i] %= mod\n\nprint(dp[N-1] % mod)",
        "origin_generated_text": "\n```\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\n\nfor i in range(N):\n    C[i] = int(input())\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(1,N):\n    if C[i] == C[i-1]:\n        dp[i] = dp[i-1]\n        continue\n\n    dp[i] = dp[i-1]\n    for j in range(i):\n        if C[i] == C[j] and j < i:\n            dp[i] += dp[j]\n            dp[i] %= mod\n\nprint(dp[N-1] % mod)```\n "
    },
    {
        "user_id": "u482157295",
        "problem_id": "p03796",
        "submission1_id": "s701455186",
        "code_content": "\nn = int(input())\nans = 1\ndummy1,dummy2 = divmod(n,2)\nfor i in range(1,dummy1+1):\n  ans *= i\n  ans *= n+1-i\n  ans = ans % (10**9+7)\nif dummy2 == 1:\n  ans *= (dummy2+1)\n  ans = ans % (10**9+7)\nprint(ans)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\nans = 1\ndummy1,dummy2 = divmod(n,2)\nfor i in range(1,dummy1+1):\n  ans *= i\n  ans *= n+1-i\n  ans = ans % (10**9+7)\nif dummy2 == 1:\n  ans *= (dummy2+1)\n  ans = ans % (10**9+7)\nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u780206746",
        "problem_id": "p03760",
        "submission1_id": "s022090086",
        "code_content": "\nimport sys\n\nO = list(input())\nE = list(input())\nfor o, e in zip(O, E):\n    sys.stdout.write(o + e)\nif len(O) - len(E) == 0:\n    sys.stdout.write(E[-1])\nprint()\n",
        "origin_generated_text": "\n```\nimport sys\n\nO = list(input())\nE = list(input())\nfor o, e in zip(O, E):\n    sys.stdout.write(o + e)\nif len(O) - len(E) == 0:\n    sys.stdout.write(E[-1])\nprint()\n```\n "
    },
    {
        "user_id": "u597455618",
        "problem_id": "p03274",
        "submission1_id": "s890270825",
        "code_content": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 10**10\nfor i in range(n-k+1):\n    tmp = a[k+i-1] - a[i] + abs(a[i] - a[k+i-1])\n    if ans > tmp:\n        ans = tmp\nprint(ans)",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 10**10\nfor i in range(n-k+1):\n    tmp = a[k+i-1] - a[i] + abs(a[i] - a[k+i-1])\n    if ans > tmp:\n        ans = tmp\nprint(ans)```\n "
    },
    {
        "user_id": "u424967964",
        "problem_id": "p02886",
        "submission1_id": "s305353885",
        "code_content": "\na = int(input())\nb = [int(i) for i in input().split()]\nans = 0\nfor i in range(a):\n  ans += b[i]*(sum(b)-b[i])\nprint(ans)",
        "origin_generated_text": "\n```\na = int(input())\nb = [int(i) for i in input().split()]\nans = 0\nfor i in range(a):\n  ans += b[i]*(sum(b)-b[i])\nprint(ans)```\n "
    },
    {
        "user_id": "u912359563",
        "problem_id": "p03480",
        "submission1_id": "s853147878",
        "code_content": "\nS = input()\nn = len(S)\nT = 1000000000\nfor i in range(1, n) :\n    if S[i] != S[i-1] :\n        T = min(T, max(i, n-i))\nprint(T if T != 1000000000 else n)\n",
        "origin_generated_text": "\n```\nS = input()\nn = len(S)\nT = 1000000000\nfor i in range(1, n) :\n    if S[i] != S[i-1] :\n        T = min(T, max(i, n-i))\nprint(T if T != 1000000000 else n)\n```\n "
    },
    {
        "user_id": "u301043830",
        "problem_id": "p03303",
        "submission1_id": "s893312889",
        "code_content": "\nS = input()\nw = int(input())\n\nfor index, s in enumerate(S):\n    if index % w == 0:\n        print(s, end=\"\")\n\n",
        "origin_generated_text": "\n```\nS = input()\nw = int(input())\n\nfor index, s in enumerate(S):\n    if index % w == 0:\n        print(s, end=\"\")\n\n```\n "
    },
    {
        "user_id": "u997641430",
        "problem_id": "p03326",
        "submission1_id": "s169512068",
        "code_content": "\nN,M=map(int,input().split())\nxyz=[list(map(int,input().split())) for i in range(N)]\nMAX=0\nfor index in [[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]:\n    LIST=sorted([sum([p[a]*index[a] for a in range(3)]) for p in xyz])[::-1]\n    if sum(LIST[0:M])>MAX:\n        MAX=sum(LIST[0:M])\nprint(MAX)",
        "origin_generated_text": "\n```\nN,M=map(int,input().split())\nxyz=[list(map(int,input().split())) for i in range(N)]\nMAX=0\nfor index in [[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]:\n    LIST=sorted([sum([p[a]*index[a] for a in range(3)]) for p in xyz])[::-1]\n    if sum(LIST[0:M])>MAX:\n        MAX=sum(LIST[0:M])\nprint(MAX)```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s144350081",
        "code_content": "\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if (g-s)%m>1:\n        if g>=s:\n            if ans>s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-ans)%m\n        else:\n            if ans>s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-s)%m\n    else:\n        val+=(g-s)%m\n\n\nprint(val)",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if (g-s)%m>1:\n        if g>=s:\n            if ans>s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-ans)%m\n        else:\n            if ans>s or g>=ans:\n                val+=1+(g-ans)%m\n            else:\n                val+=(g-s)%m\n    else:\n        val+=(g-s)%m\n\n\nprint(val)```\n "
    },
    {
        "user_id": "u375065632",
        "problem_id": "p03206",
        "submission1_id": "s111233505",
        "code_content": "\nx = int(input())\nprint(\"Christmas\"+\"Eve\"*(25-x))",
        "origin_generated_text": "\n```\nx = int(input())\nprint(\"Christmas\"+\"Eve\"*(25-x))```\n "
    },
    {
        "user_id": "u342502598",
        "problem_id": "p02963",
        "submission1_id": "s697151652",
        "code_content": "\nn=int(input())\nm=1000000000\nl=[0,0]\nif(n<=m):\n    l.append(1)\n    l.append(0)\n    l.append(0)\n    l.append(n)\nelse:\n    l.append(m)\n    x=n%m\n    l.append(m-x)\n    l.append(x)\nfor i in l:\n    print(i,end=\" \")\n\n",
        "origin_generated_text": "\n```\nn=int(input())\nm=1000000000\nl=[0,0]\nif(n<=m):\n    l.append(1)\n    l.append(0)\n    l.append(0)\n    l.append(n)\nelse:\n    l.append(m)\n    x=n%m\n    l.append(m-x)\n    l.append(x)\nfor i in l:\n    print(i,end=\" \")\n\n```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s333875828",
        "code_content": "\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\n\nprint(l[0][0]%m)",
        "origin_generated_text": "\n```\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\n\nprint(l[0][0]%m)```\n "
    },
    {
        "user_id": "u425758699",
        "problem_id": "p02633",
        "submission1_id": "s325562347",
        "code_content": "\nn=int(input())\nfor i in range(360):\n  if (i*n+n)%360==0:\n    print((i*n+n)\n    break",
        "origin_generated_text": "\n```\nn=int(input())\nfor i in range(360):\n  if (i*n+n)%360==0:\n    print((i*n+n)\n    break```\n "
    },
    {
        "user_id": "u923270446",
        "problem_id": "p03303",
        "submission1_id": "s476881730",
        "code_content": "\ns = list(input())\nw = int(input())\nindex = 0\nl = []\nwhile index <= len(s) - 1:\n  l.append(s[index])\n  index += w\nprint(*l, sep=\"\")",
        "origin_generated_text": "\n```\ns = list(input())\nw = int(input())\nindex = 0\nl = []\nwhile index <= len(s) - 1:\n  l.append(s[index])\n  index += w\nprint(*l, sep=\"\")```\n "
    },
    {
        "user_id": "u799428010",
        "problem_id": "p03036",
        "submission1_id": "s833148003",
        "code_content": "\nr,d,x=map(int, input().split())\nans=x\nfor i in range(1,11):\n    ans=r*ans-d\n    print(ans)",
        "origin_generated_text": "\n```\nr,d,x=map(int, input().split())\nans=x\nfor i in range(1,11):\n    ans=r*ans-d\n    print(ans)```\n "
    },
    {
        "user_id": "u273660689",
        "problem_id": "p02718",
        "submission1_id": "s406762427",
        "code_content": "\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n\n\ncnt = 0\ncnt1 = 0\n\nfor i in range(N):\n    cnt = cnt + A[i]\n\nfor i in range(N):\n    if A[i] / cnt >= 1 / 4 / M:\n        cnt1 = cnt1 + 1\n\n\n\nif cnt1 >= M:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\n\n\ncnt = 0\ncnt1 = 0\n\nfor i in range(N):\n    cnt = cnt + A[i]\n\nfor i in range(N):\n    if A[i] / cnt >= 1 / 4 / M:\n        cnt1 = cnt1 + 1\n\n\n\nif cnt1 >= M:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u747873993",
        "problem_id": "p03264",
        "submission1_id": "s745896227",
        "code_content": "\nK=int(input())\nif K%2==0:\n  print(K*K\nelse:\n  print((K+1)*(K",
        "origin_generated_text": "\n```\nK=int(input())\nif K%2==0:\n  print(K*K\nelse:\n  print((K+1)*(K```\n "
    },
    {
        "user_id": "u225845681",
        "problem_id": "p02959",
        "submission1_id": "s495875760",
        "code_content": "\nN = int(input())\nteki = input().split()\nyusya = input().split()\ni = 0\ntaoshita = 0\n\nwhile i < N :\n  if int(teki[i]) >= int(yusya[i]):\n    a = int(yusya[i]) \n    b = 0\n  else:\n    a = int(teki[i])\n    yusya[i] = int(yusya[i]) - int(teki[i])\n    if int(teki[i+1]) >= yusya[i]:\n      b = yusya[i]\n      teki[i+1] = int(teki[i+1]) - yusya[i]\n    else:\n      b = int(teki[i+1])\n  taoshita += a + b\n  i += 1\nprint(taoshita)",
        "origin_generated_text": "\n```\nN = int(input())\nteki = input().split()\nyusya = input().split()\ni = 0\ntaoshita = 0\n\nwhile i < N :\n  if int(teki[i]) >= int(yusya[i]):\n    a = int(yusya[i]) \n    b = 0\n  else:\n    a = int(teki[i])\n    yusya[i] = int(yusya[i]) - int(teki[i])\n    if int(teki[i+1]) >= yusya[i]:\n      b = yusya[i]\n      teki[i+1] = int(teki[i+1]) - yusya[i]\n    else:\n      b = int(teki[i+1])\n  taoshita += a + b\n  i += 1\nprint(taoshita)```\n "
    },
    {
        "user_id": "u609255576",
        "problem_id": "p03041",
        "submission1_id": "s489265290",
        "code_content": "\ninputstr1 = input().split()\nn = inputstr1[0]\nk = inputstr1[1]\ns = input()\ns_list = list(s)\ns_list[int(k) - 1] = s_list[int(k)-1].lower()\ns = \"\".join(s_list)\nprint(s)\n",
        "origin_generated_text": "\n```\ninputstr1 = input().split()\nn = inputstr1[0]\nk = inputstr1[1]\ns = input()\ns_list = list(s)\ns_list[int(k) - 1] = s_list[int(k)-1].lower()\ns = \"\".join(s_list)\nprint(s)\n```\n "
    },
    {
        "user_id": "u121161758",
        "problem_id": "p02854",
        "submission1_id": "s643644097",
        "code_content": "\n\nimport math\nN = int(input())\nA = list(map(int, input().split()))\n\nsum = 0\nfor i in range(len(A)):\n    sum += A[i]\n\ncheck_sum = 0\nfor i in range(len(A)):\n    check_sum += A[i]\n    if check_sum == sum/2:\n        print(0)\n        exit()\n    if check_sum > sum / 2:\n        if i+ 1 == len(A):\n            print(A[i] - (check_sum - A[i]))\n            exit()\n        else:\n            print(abs(check_sum - sum))\n            exit()\n",
        "origin_generated_text": "\n```\n\nimport math\nN = int(input())\nA = list(map(int, input().split()))\n\nsum = 0\nfor i in range(len(A)):\n    sum += A[i]\n\ncheck_sum = 0\nfor i in range(len(A)):\n    check_sum += A[i]\n    if check_sum == sum/2:\n        print(0)\n        exit()\n    if check_sum > sum / 2:\n        if i+ 1 == len(A):\n            print(A[i] - (check_sum - A[i]))\n            exit()\n        else:\n            print(abs(check_sum - sum))\n            exit()\n```\n "
    },
    {
        "user_id": "u945335181",
        "problem_id": "p02718",
        "submission1_id": "s847049129",
        "code_content": "\nN,M = map(int,input().split())\n\nvotos = list(map(int,input().split()))\n\nqtd_votos = sum(votos)\n\ncontador = 0\nfor i in range(N):\n    if votos[i] >= qtd_votos/M:\n        contador += 1\n\nif contador >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nN,M = map(int,input().split())\n\nvotos = list(map(int,input().split()))\n\nqtd_votos = sum(votos)\n\ncontador = 0\nfor i in range(N):\n    if votos[i] >= qtd_votos/M:\n        contador += 1\n\nif contador >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u934246119",
        "problem_id": "p03296",
        "submission1_id": "s133778417",
        "code_content": "\nn = int(input())\na_tmp = input().split()\na = []\nans = 0\nfor _ in a_tmp:\n    a.append(int(_))\ni = 0\nsame = 1\nwhile i < n-1:\n    tmp = a[i]\n    i += 1\n    if a[i] == tmp:\n        same += 1\n        if same == 3:\n            ans += 1\n            same = 1\n    else:\n        if same >= 2:\n            ans += 1\n            same = 1\nif same >= 2:\n    ans += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\na_tmp = input().split()\na = []\nans = 0\nfor _ in a_tmp:\n    a.append(int(_))\ni = 0\nsame = 1\nwhile i < n-1:\n    tmp = a[i]\n    i += 1\n    if a[i] == tmp:\n        same += 1\n        if same == 3:\n            ans += 1\n            same = 1\n    else:\n        if same >= 2:\n            ans += 1\n            same = 1\nif same >= 2:\n    ans += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u598684283",
        "problem_id": "p03998",
        "submission1_id": "s710229571",
        "code_content": "\na = list(input())\nb = list(input())\nc = list(input())\ncheck = \"a\"\nwhile len(a) > 0 and len(b) > 0 and len(c) > 0:\n    if check == \"a\":\n        check = \"b\" if a[0] == \"a\" else \"c\"\n        a.pop(0)\n    elif check == \"b\":\n        check = \"c\" if b[0] == \"b\" else \"a\"\n        b.pop(0)\n    else:\n        check = \"a\" if c[0] == \"c\" else \"b\"\n        c.pop(0)\nif len(a) > 0:\n    print(\"A\")\nelif len(b) > 0:\n    print(\"B\")\nelse:\n    print(\"C\")",
        "origin_generated_text": "\n```\na = list(input())\nb = list(input())\nc = list(input())\ncheck = \"a\"\nwhile len(a) > 0 and len(b) > 0 and len(c) > 0:\n    if check == \"a\":\n        check = \"b\" if a[0] == \"a\" else \"c\"\n        a.pop(0)\n    elif check == \"b\":\n        check = \"c\" if b[0] == \"b\" else \"a\"\n        b.pop(0)\n    else:\n        check = \"a\" if c[0] == \"c\" else \"b\"\n        c.pop(0)\nif len(a) > 0:\n    print(\"A\")\nelif len(b) > 0:\n    print(\"B\")\nelse:\n    print(\"C\")```\n "
    },
    {
        "user_id": "u987164499",
        "problem_id": "p02580",
        "submission1_id": "s781485723",
        "code_content": "\n```\nH,W,M = map(int,input().split())\n\nh_target = [0]*(H+1)\nw_target = [0]*(W+1)\ntarget = []\n\nfor _ in range(M):\n    h,w = map(int,input().split())\n    target.append((h,w))\n    h_target[h] += 1\n    w_target[w] += 1\n\nmax_h_target = max(h_target)\nmax_w_target = max(w_target)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nH,W,M = map(int,input().split())\n\nh_target = [0]*(H+1)\nw_target = [0]*(W+1)\ntarget = []\n\nfor _ in range(M):\n    h,w = map(int,input().split())\n    target.append((h,w))\n    h_target[h] += 1\n    w_target[w] += 1\n\nmax_h_target = max(h_target)\nmax_w_target = max(w_target)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u882209234",
        "problem_id": "p03078",
        "submission1_id": "s572868270",
        "code_content": "\nX,Y,Z,K = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nC = list(map(int,input().split()))\n\nC.sort(reverse=True)\n\nfor i in range(K):\n    AB = []\n    for a in A:\n        for b in B:\n            AB.append(a+b)\n    AB.sort(reverse=True)\n    print(AB[i]+C[i])",
        "origin_generated_text": "\n```\nX,Y,Z,K = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nC = list(map(int,input().split()))\n\nC.sort(reverse=True)\n\nfor i in range(K):\n    AB = []\n    for a in A:\n        for b in B:\n            AB.append(a+b)\n    AB.sort(reverse=True)\n    print(AB[i]+C[i])```\n "
    },
    {
        "user_id": "u394482932",
        "problem_id": "p03729",
        "submission1_id": "s254110955",
        "code_content": "\na,b,c=input().split();print('YNEOS'[a[-1]+c[0]==b[-1]+c[0]::2])",
        "origin_generated_text": "\n```\na,b,c=input().split();print('YNEOS'[a[-1]+c[0]==b[-1]+c[0]::2])```\n "
    },
    {
        "user_id": "u539969758",
        "problem_id": "p02642",
        "submission1_id": "s349900775",
        "code_content": "\nfrom collections import deque\n\nN = int(input())\nA = list(map(int,input().split()))\n\nA.sort()\n\nans = 0\nmax_A = max(A)\nban = [0]*(max_A+1)\nagain = list()\n\nlast = 0\nfor i in range(N-1):\n    if A[i] == A[i+1] and A[i] != last:\n        again.append(A[i])\n        last = A[i]\nif A[N-1] != A[N-2] or A[N-1] != A[N-2]:\n    again.append(A[N-1])\n\nfor num in again:\n    ban_num = num\n    while ban_num <= max_A:\n        ban[ban_num] = 1\n        ban_num += num\n \nfor num in A:\n    if ban[num] != 1:\n        ans += 1\n        ban_num = num\n        while ban_num <= max_A:\n            ban[ban_num] = 1\n            ban_num += num\n\nprint(ans)",
        "origin_generated_text": "\n```\nfrom collections import deque\n\nN = int(input())\nA = list(map(int,input().split()))\n\nA.sort()\n\nans = 0\nmax_A = max(A)\nban = [0]*(max_A+1)\nagain = list()\n\nlast = 0\nfor i in range(N-1):\n    if A[i] == A[i+1] and A[i] != last:\n        again.append(A[i])\n        last = A[i]\nif A[N-1] != A[N-2] or A[N-1] != A[N-2]:\n    again.append(A[N-1])\n\nfor num in again:\n    ban_num = num\n    while ban_num <= max_A:\n        ban[ban_num] = 1\n        ban_num += num\n \nfor num in A:\n    if ban[num] != 1:\n        ans += 1\n        ban_num = num\n        while ban_num <= max_A:\n            ban[ban_num] = 1\n            ban_num += num\n\nprint(ans)```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s286031006",
        "code_content": "\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i + 1][j + 1][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i + 1][j][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i + 1][j][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n",
        "origin_generated_text": "\n```\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i + 1][j + 1][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i + 1][j][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i + 1][j][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u713914478",
        "problem_id": "p03760",
        "submission1_id": "s308299036",
        "code_content": "\nO = input()\n\n\nE = input()\n\nS = []\n\nif len(O) == len(E):\n\tfor i in range(len(O)):\n\t\tS.append(O[i] + E[i])\nelse:\n\tfor i in range(len(E)):\n\t\tS.append(O[i] + E[i])\n\t\tif i != len(E) - 1:\n\t\t\tS.append(O[-1])\n\nprint(\"\".join(S))",
        "origin_generated_text": "\n```\nO = input()\n\n\nE = input()\n\nS = []\n\nif len(O) == len(E):\n\tfor i in range(len(O)):\n\t\tS.append(O[i] + E[i])\nelse:\n\tfor i in range(len(E)):\n\t\tS.append(O[i] + E[i])\n\t\tif i != len(E) - 1:\n\t\t\tS.append(O[-1])\n\nprint(\"\".join(S))```\n "
    },
    {
        "user_id": "u455408345",
        "problem_id": "p02642",
        "submission1_id": "s837842544",
        "code_content": "\nn=int(input(\"\"))\naa=input(\"\").split(\" \")\nlista=[]\nfor i in range(n):\n    lista+=[int(aa[i])]\nlista.sort()\ns=0\nfor i in range(n):\n    if(lista[i]!=lista[i+1]):\n        s+=1\n    else:\n        if(lista[i]<=math.sqrt(lista[n-1])):\n            s+=1\nprint(s)\n",
        "origin_generated_text": "\n```\nn=int(input(\"\"))\naa=input(\"\").split(\" \")\nlista=[]\nfor i in range(n):\n    lista+=[int(aa[i])]\nlista.sort()\ns=0\nfor i in range(n):\n    if(lista[i]!=lista[i+1]):\n        s+=1\n    else:\n        if(lista[i]<=math.sqrt(lista[n-1])):\n            s+=1\nprint(s)\n```\n "
    },
    {
        "user_id": "u451100851",
        "problem_id": "p02553",
        "submission1_id": "s226095019",
        "code_content": "\na, b, c, d = [int(t) for t in input().split()]\nprint(max([b*d, a*c, a*d, b*c]))",
        "origin_generated_text": "\n```\na, b, c, d = [int(t) for t in input().split()]\nprint(max([b*d, a*c, a*d, b*c]))```\n "
    },
    {
        "user_id": "u798803522",
        "problem_id": "p01359",
        "submission1_id": "s879596365",
        "code_content": "\ninputnum,outputnum = (int(n) for n in input().split(' '))\ndata = {}\nwhile True:\n    for i in range(inputnum):\n        temp = input().split(' ')\n        data[temp[0]] = [int(temp[2]) - int(temp[1]) + 1,int(temp[2])]\n    for o in range(outputnum):\n        targ = int(input())\n        for k,v in data.items():\n            if v[0] <= targ  <= v[1]:\n                print(k + ' ' + str(targ-v[0] + 1))\n                break\n        else:\n            print(\"Unknown\")\n    inputnum,outputnum = (int(n) for n in input().split(' '))\n    if inputnum == outputnum == 0:\n        break",
        "origin_generated_text": "\n```\ninputnum,outputnum = (int(n) for n in input().split(' '))\ndata = {}\nwhile True:\n    for i in range(inputnum):\n        temp = input().split(' ')\n        data[temp[0]] = [int(temp[2]) - int(temp[1]) + 1,int(temp[2])]\n    for o in range(outputnum):\n        targ = int(input())\n        for k,v in data.items():\n            if v[0] <= targ  <= v[1]:\n                print(k + ' ' + str(targ-v[0] + 1))\n                break\n        else:\n            print(\"Unknown\")\n    inputnum,outputnum = (int(n) for n in input().split(' '))\n    if inputnum == outputnum == 0:\n        break```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p02963",
        "submission1_id": "s523044692",
        "code_content": "\nimport math\nS = int(input())\nX1 = 0\nY1 = 0\nX2 = 0\nY2 = 0\nX3 = 0\nY3 = 0\nif  S <= 10 ** 9:\n    X2 = S\n    Y3 = 1\nelse:\n    X2 = int(math.sqrt(S))+1\n    Y3 = X2\n    s = X2 ** 2  - S \n    for i in range(1, int(math.sqrt(s) + 1)):\n        if s%i == 0 and s%i <= 10 ** 9 and i <= 10 ** 9:\n            X3 = s\n            Y2 = i\n            break\n\nprint (X1, Y1, X2, Y2, X3, Y3)\n",
        "origin_generated_text": "\n```\nimport math\nS = int(input())\nX1 = 0\nY1 = 0\nX2 = 0\nY2 = 0\nX3 = 0\nY3 = 0\nif  S <= 10 ** 9:\n    X2 = S\n    Y3 = 1\nelse:\n    X2 = int(math.sqrt(S))+1\n    Y3 = X2\n    s = X2 ** 2  - S \n    for i in range(1, int(math.sqrt(s) + 1)):\n        if s%i == 0 and s%i <= 10 ** 9 and i <= 10 ** 9:\n            X3 = s\n            Y2 = i\n            break\n\nprint (X1, Y1, X2, Y2, X3, Y3)\n```\n "
    },
    {
        "user_id": "u241159583",
        "problem_id": "p02922",
        "submission1_id": "s638117601",
        "code_content": "\na, b = map(int, input().split())\n\nif b % a == 0:\n  print(b\nelse:\n  print(b",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\n\nif b % a == 0:\n  print(b\nelse:\n  print(b```\n "
    },
    {
        "user_id": "u391589398",
        "problem_id": "p03477",
        "submission1_id": "s117097526",
        "code_content": "\na, b, c, d = map(int, input().split())\nif a+b > c+d:\n    print('Left')\nelif a+b < c+d:\n    print('Right')\nelse:\n    print('Balanced')\n",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nif a+b > c+d:\n    print('Left')\nelif a+b < c+d:\n    print('Right')\nelse:\n    print('Balanced')\n```\n "
    },
    {
        "user_id": "u202570162",
        "problem_id": "p02912",
        "submission1_id": "s479081931",
        "code_content": "\nimport heapq\n\nn,m = map(int,input().split())\nprice = [-int(i) for i in input().split()]\n\nheapq.heapify(price)\nfor i in range(m):\n    a = -heapq.heappop(price)\n    heapq.heappush(price,a)\nprint(-sum(price))\n    ",
        "origin_generated_text": "\n```\nimport heapq\n\nn,m = map(int,input().split())\nprice = [-int(i) for i in input().split()]\n\nheapq.heapify(price)\nfor i in range(m):\n    a = -heapq.heappop(price)\n    heapq.heappush(price,a)\nprint(-sum(price))\n    ```\n "
    },
    {
        "user_id": "u347920118",
        "problem_id": "p02718",
        "submission1_id": "s073846843",
        "code_content": "\nnum = []\nvote = []\nnum = list(map(int,input().split()))\nvote = list(map(int,input().split()))\nN = num[0]\nM = num[1]\nj = 4*M\ncnt = 0\nfor i in range(0,N):\n    if  vote[i]>=j:\n        cnt += 1\n    else:\n        pass\nif M<=cnt:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nnum = []\nvote = []\nnum = list(map(int,input().split()))\nvote = list(map(int,input().split()))\nN = num[0]\nM = num[1]\nj = 4*M\ncnt = 0\nfor i in range(0,N):\n    if  vote[i]>=j:\n        cnt += 1\n    else:\n        pass\nif M<=cnt:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u309141201",
        "problem_id": "p04019",
        "submission1_id": "s697834595",
        "code_content": "\n\nS = input()\n\n\ncn = S.count('N')\nce = S.count('E')\ncs = S.count('S')\ncw = S.count('W')\nif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n    print('Yes')\nelif cn < 0 and cs < 0 and ce < 0 and cw < 0:\n    print('Yes')\nelif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\n\nS = input()\n\n\ncn = S.count('N')\nce = S.count('E')\ncs = S.count('S')\ncw = S.count('W')\nif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n    print('Yes')\nelif cn < 0 and cs < 0 and ce < 0 and cw < 0:\n    print('Yes')\nelif cn > 0 and cs > 0 and ce > 0 and cw > 0:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s103226440",
        "code_content": "\ni = input().split()\nif (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])) and (int(i[1]) ==int(i[2])):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ni = input().split()\nif (int(i[0]) ==int(i[1])) and (int(i[0]) ==int(i[2])) and (int(i[1]) ==int(i[2])):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03326",
        "submission1_id": "s469584546",
        "code_content": "\nN,M=map(int,input().split())\nc=[list(map(int,input().split())) for i in range(N)]\n\nbit=[[] for i in range(2**3)]\nfor k in range(N):\n    for i in range(2**3):\n        t=c[k].copy()\n        for j in range(3):\n            if(i>>j&1):\n                t[j]*=-1\n        bit[i].append(t)\nfor i in range(2**3):\n    bit[i].sort(key=lambda x:(-x[0],-x[1],-x[2]))\nres=0\nfor i in range(2**3):\n    p=[1,1,1]\n    for j in range(3):\n        if(i>>j&1):\n            p[j]*=-1\n    z,o,t=0,0,0\n    for k in range(M):\n        z+=bit[i][k][0]*p[0]\n        o+=bit[i][k][1]*p[1]\n        t+=bit[i][k][2]*p[2]\n    res=max(res,abs(z)+abs(o)+abs(t))\nprint(res)",
        "origin_generated_text": "\n```\nN,M=map(int,input().split())\nc=[list(map(int,input().split())) for i in range(N)]\n\nbit=[[] for i in range(2**3)]\nfor k in range(N):\n    for i in range(2**3):\n        t=c[k].copy()\n        for j in range(3):\n            if(i>>j&1):\n                t[j]*=-1\n        bit[i].append(t)\nfor i in range(2**3):\n    bit[i].sort(key=lambda x:(-x[0],-x[1],-x[2]))\nres=0\nfor i in range(2**3):\n    p=[1,1,1]\n    for j in range(3):\n        if(i>>j&1):\n            p[j]*=-1\n    z,o,t=0,0,0\n    for k in range(M):\n        z+=bit[i][k][0]*p[0]\n        o+=bit[i][k][1]*p[1]\n        t+=bit[i][k][2]*p[2]\n    res=max(res,abs(z)+abs(o)+abs(t))\nprint(res)```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03714",
        "submission1_id": "s433168144",
        "code_content": "\nfrom heapq import heapify, heappop, heappush\nN = int(input())\nA = list(map(int, input().split()))\nA = [-a for a in A]\n\nL = [[a, i] for i, a in enumerate(A[:2*N])]\nSl = 0\nheapify(L)\nused = set()\nfor i in range(N):\n  a, i = heappop(L)\n  used.add(i)\n  Sl -= a\n\nR = A[2*N:].copy()\nSr = -sum(R)\nheapify(R)\n\nans = Sl - Sr\nfor i in range(2*N-1, N-1, -1):\n  a = - A[i]\n  r =  - heappop(R)\n  if a > r:\n    heappush(R, -r)\n  else:\n    Sr += a - r\n    heappush(R, -a)\n  if i in used:\n    while L:\n      l, j = heappop(L)\n      if j in used:\n        Sl += l - a\n        used.add(j)\n      else:\n        break\n  ans = max(ans, Sl - Sr)\n\nprint(ans)",
        "origin_generated_text": "\n```\nfrom heapq import heapify, heappop, heappush\nN = int(input())\nA = list(map(int, input().split()))\nA = [-a for a in A]\n\nL = [[a, i] for i, a in enumerate(A[:2*N])]\nSl = 0\nheapify(L)\nused = set()\nfor i in range(N):\n  a, i = heappop(L)\n  used.add(i)\n  Sl -= a\n\nR = A[2*N:].copy()\nSr = -sum(R)\nheapify(R)\n\nans = Sl - Sr\nfor i in range(2*N-1, N-1, -1):\n  a = - A[i]\n  r =  - heappop(R)\n  if a > r:\n    heappush(R, -r)\n  else:\n    Sr += a - r\n    heappush(R, -a)\n  if i in used:\n    while L:\n      l, j = heappop(L)\n      if j in used:\n        Sl += l - a\n        used.add(j)\n      else:\n        break\n  ans = max(ans, Sl - Sr)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u572193732",
        "problem_id": "p03087",
        "submission1_id": "s047476870",
        "code_content": "\nN, Q = map(int, input().split())\nS = input()\nS_list = list(S)\ncount_list = [0]*N\n\nfor i in range(1, N):\n    count_list[i] += count_list[i-1] \n    if S_list[i-1] == \"A\" and S_list[i] == \"C\":\n        count_list[i] += 1\n\nfor i in range(Q):\n    start, end = map(int, input().split())\n    count = count_list[end-1] - count_list[start-1]\n    print(count)",
        "origin_generated_text": "\n```\nN, Q = map(int, input().split())\nS = input()\nS_list = list(S)\ncount_list = [0]*N\n\nfor i in range(1, N):\n    count_list[i] += count_list[i-1] \n    if S_list[i-1] == \"A\" and S_list[i] == \"C\":\n        count_list[i] += 1\n\nfor i in range(Q):\n    start, end = map(int, input().split())\n    count = count_list[end-1] - count_list[start-1]\n    print(count)```\n "
    },
    {
        "user_id": "u652498023",
        "problem_id": "p03343",
        "submission1_id": "s573956070",
        "code_content": "\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\n \nwhile True:\n  d = list()\n  for i in range(N-K+1):\n    d.append(a[i:i+K])\n  d.sort()\n  a = list()\n  for sub in d:\n    sub.sort()\n    a.extend(sub[0:len(sub)-K+1])\n  a.sort()\n  if len(a) < Q:\n    break\n  else:\n    ans = min(ans, a[Q-1] - a[0])\n\nprint(ans)",
        "origin_generated_text": "\n```\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\n \nwhile True:\n  d = list()\n  for i in range(N-K+1):\n    d.append(a[i:i+K])\n  d.sort()\n  a = list()\n  for sub in d:\n    sub.sort()\n    a.extend(sub[0:len(sub)-K+1])\n  a.sort()\n  if len(a) < Q:\n    break\n  else:\n    ans = min(ans, a[Q-1] - a[0])\n\nprint(ans)```\n "
    },
    {
        "user_id": "u987549444",
        "problem_id": "p02665",
        "submission1_id": "s451615379",
        "code_content": "\nfrom sys import stdin\n\na=int(stdin.readline())\nA=stdin.readline().split()\nsum=0\nfor k in range(0,a+1):\n    sum+=int(A[k])\n\nsum-=int(A[a])\nver=1\nlay=1\nK=0\nT=0\n\nif a==0:\n    if A[0]!=\"0\":\n        print(-1)\n        K=1\n    else:\n        print(1)\n        K=1\n\nfor l in range(0,a):\n    if lay-int(A[l])<=0:\n        print(-1)\n        K=1\n        break\n    if (lay-int(A[l]))*2-sum+int(A[l])<=int(A[a]):\n        lay=(lay-int(A[l]))*2\n        ver+=lay\n        sum-=int(A[l])\n        T=l\n    else:\n        lay-=int(A[l])\n        sum-=int(A[l])\n        x=lay-sum-int(A[a])\n        if x==0:\n           ver+=lay\n        elif x<0:\n           print(-1)\n           K=1\n        else:\n           lay=sum+int(A[a])\n           ver+=lay\n        T=l\n        break\n\nif K==0:\n    for u in range(T+1,a):\n        lay -= int(A[u])\n        sum -= int(A[u])\n        ver+=lay\n\nif K==0:\n    print(ver)",
        "origin_generated_text": "\n```\nfrom sys import stdin\n\na=int(stdin.readline())\nA=stdin.readline().split()\nsum=0\nfor k in range(0,a+1):\n    sum+=int(A[k])\n\nsum-=int(A[a])\nver=1\nlay=1\nK=0\nT=0\n\nif a==0:\n    if A[0]!=\"0\":\n        print(-1)\n        K=1\n    else:\n        print(1)\n        K=1\n\nfor l in range(0,a):\n    if lay-int(A[l])<=0:\n        print(-1)\n        K=1\n        break\n    if (lay-int(A[l]))*2-sum+int(A[l])<=int(A[a]):\n        lay=(lay-int(A[l]))*2\n        ver+=lay\n        sum-=int(A[l])\n        T=l\n    else:\n        lay-=int(A[l])\n        sum-=int(A[l])\n        x=lay-sum-int(A[a])\n        if x==0:\n           ver+=lay\n        elif x<0:\n           print(-1)\n           K=1\n        else:\n           lay=sum+int(A[a])\n           ver+=lay\n        T=l\n        break\n\nif K==0:\n    for u in range(T+1,a):\n        lay -= int(A[u])\n        sum -= int(A[u])\n        ver+=lay\n\nif K==0:\n    print(ver)```\n "
    },
    {
        "user_id": "u581603131",
        "problem_id": "p03998",
        "submission1_id": "s278686560",
        "code_content": "\nSA = list(str(input()))\nSB = list(str(input()))\nSC = list(str(input()))\ncard = 'a'\n\nfor i in range(1000):\n    if len(SA)==1 and card =='a':\n        print('A')\n        break\n    elif len(SB)==1 and card=='b':\n        print('B')\n        break\n    elif len(SC)==1 and card=='c':\n        print('C')\n        break\n    if card == 'a':\n        card = SA[0]\n        SA = SA[1:]\n    elif card == 'b':\n        card = SB[0]\n        SB = SB[1:]\n    elif card == 'c':\n        card = SC[0]\n        SC = SC[1:]\n",
        "origin_generated_text": "\n```\nSA = list(str(input()))\nSB = list(str(input()))\nSC = list(str(input()))\ncard = 'a'\n\nfor i in range(1000):\n    if len(SA)==1 and card =='a':\n        print('A')\n        break\n    elif len(SB)==1 and card=='b':\n        print('B')\n        break\n    elif len(SC)==1 and card=='c':\n        print('C')\n        break\n    if card == 'a':\n        card = SA[0]\n        SA = SA[1:]\n    elif card == 'b':\n        card = SB[0]\n        SB = SB[1:]\n    elif card == 'c':\n        card = SC[0]\n        SC = SC[1:]\n```\n "
    },
    {
        "user_id": "u108377418",
        "problem_id": "p03943",
        "submission1_id": "s812863444",
        "code_content": "\ndef main():\n    a, b, c = map(int, input().split() )\n\n    if a == b + c or b == c + a or c == a + b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    a, b, c = map(int, input().split() )\n\n    if a == b + c or b == c + a or c == a + b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u007808656",
        "problem_id": "p03008",
        "submission1_id": "s683065531",
        "code_content": "\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for c in range(1, capacity+1):\n        candidates = [val + work[c-weight] for val,weight in zip(values,weights) if weight <= c]\n        work[c] = max(candidates) if candidates != [] else 0\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))+[1]\n    prices_b=list(map(int,inp().split()))+[1]\n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())",
        "origin_generated_text": "\n```\ndef knapsack_123(values,weights,capacity):\n    work = [0 for i in range(capacity+1)]\n    for c in range(1, capacity+1):\n        candidates = [val + work[c-weight] for val,weight in zip(values,weights) if weight <= c]\n        work[c] = max(candidates) if candidates != [] else 0\n    return work[-1]\ndef sol(inp=input):\n    n=int(inp())\n    prices_a=list(map(int,inp().split()))+[1]\n    prices_b=list(map(int,inp().split()))+[1]\n    valA=knapsack_123(values=prices_b,weights=prices_a,capacity=n)\n    valB=knapsack_123(values=prices_a,weights=prices_b,capacity=valA)\n    return '{}'.format(valB)\nprint(sol())```\n "
    },
    {
        "user_id": "u828766688",
        "problem_id": "p03677",
        "submission1_id": "s961640285",
        "code_content": "\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    start[a[i] - 1].append(i)\n    end[(a[i+1]-1) - 1].append(i)\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis))",
        "origin_generated_text": "\n```\n\n\n\nn,m = map(int,input().split())\n\nlis = [0] * m\n\nstate = [0] * n\n\na = list(map(int,input().split()))\n\nstart = [ [] for i in range(m) ]\nend = [ [] for i in range(m)]\n\nallsum = 0\nfor i in range(n-1):\n\n    start[a[i] - 1].append(i)\n    end[(a[i+1]-1) - 1].append(i)\n\n\nimosnum = 0\nplus = 0\n\n\n\nfor i in range(2*m):\n\n    plus += imosnum\n\n    lis[i%m] += plus\n\n    for j in end[i%m]:\n        if state[j] == 1:\n            state[j] = 2\n            imosnum -= 1\n\n    for j in start[i%m]:\n        if state[j] == 0:\n            imosnum += 1\n            state[j] = 1\n\n    \n\nprint (allsum - max(lis))```\n "
    },
    {
        "user_id": "u850491413",
        "problem_id": "p03716",
        "submission1_id": "s354972164",
        "code_content": "\n\nimport sys\nfrom collections import deque, defaultdict\nimport copy\nimport bisect\n\nimport math\nimport heapq\nfrom itertools import combinations, permutations\n\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN = int(input())\na = list(map(int, input().split()))\n\na_max = a[:N]\na_min = a[2*N:]\n\na_max_sum = sum(a_max)\nscore = [a_max_sum]\nheapq.heapify(a_max)\nfor i in range(N):\n\theapq.heappush(a_max, a[N + i])\n\ta_max_sum += a[N + i]\n\ta_max_sum -= heapq.heappop(a_max)\n\tscore.append(a_max_sum)\n\na_min_sum = sum(a_min)\nscore[N] -= a_min_sum\nfor i in range(len(a_min)):\n\ta_min[i] *= -1\nheapq.heapify(a_min)\nfor i in range(N):\n\theapq.heappush(a_min, -a[2*N - 1 - i])\n\ta_min_sum += a[2*N - 1 - i]\n\ta_min_sum += heapq.heappop(a_min)\n\tscore[N - i - 1] -=a_min_sum\n\nprint(max(score))",
        "origin_generated_text": "\n```\n\nimport sys\nfrom collections import deque, defaultdict\nimport copy\nimport bisect\n\nimport math\nimport heapq\nfrom itertools import combinations, permutations\n\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN = int(input())\na = list(map(int, input().split()))\n\na_max = a[:N]\na_min = a[2*N:]\n\na_max_sum = sum(a_max)\nscore = [a_max_sum]\nheapq.heapify(a_max)\nfor i in range(N):\n\theapq.heappush(a_max, a[N + i])\n\ta_max_sum += a[N + i]\n\ta_max_sum -= heapq.heappop(a_max)\n\tscore.append(a_max_sum)\n\na_min_sum = sum(a_min)\nscore[N] -= a_min_sum\nfor i in range(len(a_min)):\n\ta_min[i] *= -1\nheapq.heapify(a_min)\nfor i in range(N):\n\theapq.heappush(a_min, -a[2*N - 1 - i])\n\ta_min_sum += a[2*N - 1 - i]\n\ta_min_sum += heapq.heappop(a_min)\n\tscore[N - i - 1] -=a_min_sum\n\nprint(max(score))```\n "
    },
    {
        "user_id": "u619672182",
        "problem_id": "p02699",
        "submission1_id": "s440036863",
        "code_content": "\na=input().split(\" \")\nS = int(a[0])\nW = int(a[1])\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")",
        "origin_generated_text": "\n```\na=input().split(\" \")\nS = int(a[0])\nW = int(a[1])\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")```\n "
    },
    {
        "user_id": "u042716570",
        "problem_id": "p02917",
        "submission1_id": "s591803582",
        "code_content": "\nN = int(input())\nB = list(map(int,input().split()))\nA = [0]*N\nA[N-1] = B[N-1-1]\nfor i in range(N-2,-1,-1):\n    A[N-1-i] = min(B[N-1-i],B[N-1-i-1])\nprint(sum(A))",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int,input().split()))\nA = [0]*N\nA[N-1] = B[N-1-1]\nfor i in range(N-2,-1,-1):\n    A[N-1-i] = min(B[N-1-i],B[N-1-i-1])\nprint(sum(A))```\n "
    },
    {
        "user_id": "u129978636",
        "problem_id": "p03102",
        "submission1_id": "s592015934",
        "code_content": "\nn,m,c=map(int,input().split())\nb=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    a=list(map(int,input().split()))\n    d=0\n    for j in range(m):\n       d+=a[j]*b[j]\n    d+=c\n    if(d<=0):\n        continue\n    else:\n     ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\nn,m,c=map(int,input().split())\nb=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    a=list(map(int,input().split()))\n    d=0\n    for j in range(m):\n       d+=a[j]*b[j]\n    d+=c\n    if(d<=0):\n        continue\n    else:\n     ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u729627789",
        "problem_id": "p03475",
        "submission1_id": "s184986690",
        "code_content": "\nN = int(input())\nL = [list(map(int, input().split())) for i in range(N-1)]\nans = []\n\nfor i in range(N-1):\n    time = L[i][1]\n    for j in range(i, N-1):\n        c, s, f = L[j]\n        if time >= s:\n            time += f - (time - s) % f\n        else:\n            time += s - time + f - (time - s) % f\n        time += c\n    ans.append(time)\n\nans.append(0)\nprint(*ans, sep=\"\\n\")",
        "origin_generated_text": "\n```\nN = int(input())\nL = [list(map(int, input().split())) for i in range(N-1)]\nans = []\n\nfor i in range(N-1):\n    time = L[i][1]\n    for j in range(i, N-1):\n        c, s, f = L[j]\n        if time >= s:\n            time += f - (time - s) % f\n        else:\n            time += s - time + f - (time - s) % f\n        time += c\n    ans.append(time)\n\nans.append(0)\nprint(*ans, sep=\"\\n\")```\n "
    },
    {
        "user_id": "u131984977",
        "problem_id": "p02385",
        "submission1_id": "s701276705",
        "code_content": "\nclass Dice:\n    def __init__(self, data):\n        self.data = data\n    \n    def __eq__(self, value):\n        for a in range(0,6,5):\n            self.moveTopTo(self.getSortedList()[a])\n            value.moveTopTo(value.getSortedList()[a])\n            for b in range(4):\n                if self.data == value.data:\n                    return True\n                else:\n                    value.move('R')\n        return False\n\n    def move(self, direction):\n        if direction == 'E':\n            self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                self.data[3], self.data[5], self.data[2], self.data[0]\n        elif direction == 'N':\n            self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                self.data[1], self.data[0], self.data[4], self.data[5]\n        elif direction == 'S':\n            self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                self.data[4], self.data[0], self.data[1], self.data[5]\n        elif direction == 'W':\n            self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                self.data[2], self.data[5], self.data[3], self.data[0]\n        elif direction == 'R':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[3], self.data[1], self.data[2], self.data[4]\n        elif direction == 'L':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[2], self.data[4], self.data[3], self.data[1]\n\n    def moveTopTo(self, target):\n        for a in range(4):\n            if self.data[0] == target:\n                break\n            self.move('W')\n        if self.data[4] == target:\n            self.move('S')\n        elif self.data[1] == target:\n            self.move('N')\n    \n    def moveFrontTo(self, target):\n        for a in range(4):\n            if self.data[1] == target:\n                break\n            self.move('R')\n\n    def getTop(self):\n        return self.data[0]\n    \n    def getRight(self):\n        return self.data[2]\n\n    def getSortedList(self):\n        tmp = self.data[:]\n        tmp.sort()\n        return tmp\n\n\na = Dice(input().split())\nb = Dice(input().split())\nif a == b:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nclass Dice:\n    def __init__(self, data):\n        self.data = data\n    \n    def __eq__(self, value):\n        for a in range(0,6,5):\n            self.moveTopTo(self.getSortedList()[a])\n            value.moveTopTo(value.getSortedList()[a])\n            for b in range(4):\n                if self.data == value.data:\n                    return True\n                else:\n                    value.move('R')\n        return False\n\n    def move(self, direction):\n        if direction == 'E':\n            self.data[0], self.data[3], self.data[5], self.data[2] = \\\n                self.data[3], self.data[5], self.data[2], self.data[0]\n        elif direction == 'N':\n            self.data[0], self.data[4], self.data[5], self.data[1] = \\\n                self.data[1], self.data[0], self.data[4], self.data[5]\n        elif direction == 'S':\n            self.data[0], self.data[1], self.data[5], self.data[4] = \\\n                self.data[4], self.data[0], self.data[1], self.data[5]\n        elif direction == 'W':\n            self.data[0], self.data[2], self.data[5], self.data[3] = \\\n                self.data[2], self.data[5], self.data[3], self.data[0]\n        elif direction == 'R':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[3], self.data[1], self.data[2], self.data[4]\n        elif direction == 'L':\n            self.data[1], self.data[2], self.data[4], self.data[3] = \\\n                self.data[2], self.data[4], self.data[3], self.data[1]\n\n    def moveTopTo(self, target):\n        for a in range(4):\n            if self.data[0] == target:\n                break\n            self.move('W')\n        if self.data[4] == target:\n            self.move('S')\n        elif self.data[1] == target:\n            self.move('N')\n    \n    def moveFrontTo(self, target):\n        for a in range(4):\n            if self.data[1] == target:\n                break\n            self.move('R')\n\n    def getTop(self):\n        return self.data[0]\n    \n    def getRight(self):\n        return self.data[2]\n\n    def getSortedList(self):\n        tmp = self.data[:]\n        tmp.sort()\n        return tmp\n\n\na = Dice(input().split())\nb = Dice(input().split())\nif a == b:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03274",
        "submission1_id": "s072936455",
        "code_content": "\n```\nimport bisect\nn, k = map(int, input().split())\nX = list(map(int, input().split()))\n\nans = float('inf')\nfor i in range(n):\n    temp = 0\n    \n    if X[i] <= 0:\n        if not 0 <= i+k-1 < n: continue\n        temp+= -X[i]*2\n        if i+k-1 < n and X[i+k-1] >= 0:\n            temp += X[i+k-1]\n        ans = min(ans, temp)\n    \n    elif X[i] > 0:\n        if not 0 <= i-k+1 < n: continue\n        temp+=X[i]*2\n        if i-k+1 >= 0 and X[i-k+1] <= 0:\n            temp -= X[i-k+1]\n        ans  = min(ans, temp)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nimport bisect\nn, k = map(int, input().split())\nX = list(map(int, input().split()))\n\nans = float('inf')\nfor i in range(n):\n    temp = 0\n    \n    if X[i] <= 0:\n        if not 0 <= i+k-1 < n: continue\n        temp+= -X[i]*2\n        if i+k-1 < n and X[i+k-1] >= 0:\n            temp += X[i+k-1]\n        ans = min(ans, temp)\n    \n    elif X[i] > 0:\n        if not 0 <= i-k+1 < n: continue\n        temp+=X[i]*2\n        if i-k+1 >= 0 and X[i-k+1] <= 0:\n            temp -= X[i-k+1]\n        ans  = min(ans, temp)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u624689667",
        "problem_id": "p03752",
        "submission1_id": "s458972169",
        "code_content": "\nn, k = [int(i) for i in input().split()]\naa = sorted([int(i) for i in input().split()])\n\nans = float(\"inf\")\nfor i in range(n-k+1):\n    cost = 0\n    for j in range(i, i+k):\n        if aa[j] > aa[j-1]:\n            cost += aa[j] - aa[j-1]\n    ans = min(ans, cost)\nprint(ans)",
        "origin_generated_text": "\n```\nn, k = [int(i) for i in input().split()]\naa = sorted([int(i) for i in input().split()])\n\nans = float(\"inf\")\nfor i in range(n-k+1):\n    cost = 0\n    for j in range(i, i+k):\n        if aa[j] > aa[j-1]:\n            cost += aa[j] - aa[j-1]\n    ans = min(ans, cost)\nprint(ans)```\n "
    },
    {
        "user_id": "u461454424",
        "problem_id": "p02642",
        "submission1_id": "s176438166",
        "code_content": "\n\ndef main():\n    import sys\n    imput = sys.stdin.readline\n    \n    \n    \n    N = int(input())\n    A = list(map(int, input().split()))\n\n    \n    from collections import Counter\n    M = max(A) + 1\n    A = sorted(A)\n    C = Counter(A)\n\n    answer = 0\n    B = [True] * (M)\n    for a in A:\n        if C[a] > 1:\n            continue\n        elif B[a]:\n            answer += 1\n            for j in range(a, M, a):\n                B[j] = False\n\n    print(answer)\n\n    \nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\n\ndef main():\n    import sys\n    imput = sys.stdin.readline\n    \n    \n    \n    N = int(input())\n    A = list(map(int, input().split()))\n\n    \n    from collections import Counter\n    M = max(A) + 1\n    A = sorted(A)\n    C = Counter(A)\n\n    answer = 0\n    B = [True] * (M)\n    for a in A:\n        if C[a] > 1:\n            continue\n        elif B[a]:\n            answer += 1\n            for j in range(a, M, a):\n                B[j] = False\n\n    print(answer)\n\n    \nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u112007848",
        "problem_id": "p03568",
        "submission1_id": "s961797563",
        "code_content": "\nn = int(input())\na = list(map(int, input().split(\" \")))\nkisuu = 1\nkake = 1\nfor i in a:\n  if i % 2 == 0:\n    kisuu *= 2\n  else:\n    kake *= 2\nprint(kake - kisuu)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split(\" \")))\nkisuu = 1\nkake = 1\nfor i in a:\n  if i % 2 == 0:\n    kisuu *= 2\n  else:\n    kake *= 2\nprint(kake - kisuu)```\n "
    },
    {
        "user_id": "u984110693",
        "problem_id": "p03080",
        "submission1_id": "s659208899",
        "code_content": "\nN = int(input())\ns = list(input())\ncnt = 0\nfor a in s:\n    if a == 'R':\n        cnt += 1\nif N - cnt < cnt:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN = int(input())\ns = list(input())\ncnt = 0\nfor a in s:\n    if a == 'R':\n        cnt += 1\nif N - cnt < cnt:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u560867850",
        "problem_id": "p02727",
        "submission1_id": "s063436811",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nfrom itertools import chain\n\ndef readlines(*abc):\n    for n in abc:\n        yield list(map(int, input().split()))\n\ndef main():\n    x, y, a, b, c = map(int, input().split())\n    apples = sorted(chain(*readlines(a,b,c)), reverse=True)\n    print(sum(apples[:x+y]))\n\n\nmain()\n\n\n",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nfrom itertools import chain\n\ndef readlines(*abc):\n    for n in abc:\n        yield list(map(int, input().split()))\n\ndef main():\n    x, y, a, b, c = map(int, input().split())\n    apples = sorted(chain(*readlines(a,b,c)), reverse=True)\n    print(sum(apples[:x+y]))\n\n\nmain()\n\n\n```\n "
    },
    {
        "user_id": "u985076807",
        "problem_id": "p03760",
        "submission1_id": "s278241013",
        "code_content": "\n\n\n\ndef solve():\n    o = input()\n    e = input()\n\n    for l, r in zip(o, e):\n        print('{}{}'.format(l, r), end=\"\")\n\n    if len(o) != len(e):\n        print(o[-1])\n\n\nif __name__ == '__main__':\n    solve()\n",
        "origin_generated_text": "\n```\n\n\n\ndef solve():\n    o = input()\n    e = input()\n\n    for l, r in zip(o, e):\n        print('{}{}'.format(l, r), end=\"\")\n\n    if len(o) != len(e):\n        print(o[-1])\n\n\nif __name__ == '__main__':\n    solve()\n```\n "
    },
    {
        "user_id": "u020798319",
        "problem_id": "p02922",
        "submission1_id": "s705916248",
        "code_content": "\na,b = map(int,input().split())\ncount = 0\nsum = 0\nwhile sum < b :\n  sum += a\n  count += 1\nprint (count)",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\ncount = 0\nsum = 0\nwhile sum < b :\n  sum += a\n  count += 1\nprint (count)```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p02556",
        "submission1_id": "s962268363",
        "code_content": "\nn = int(input())\nl = []\nll = []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    l.append((x+y, x, y))\n    ll.append((x-y, x, y))\nl.sort()\nll.sort()\nans1 = 0\nans2 = 0\n\ncnt = 0\nwhile True:\n    a = l[cnt]\n    b = l[n-cnt-1]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans1 = b[0]-a[0]\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\ncnt = 0\nwhile True:\n    a = ll[cnt]\n    b = ll[n-cnt-1]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans2 = b[0]-a[0]\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\nprint(max(ans1, ans2))\n",
        "origin_generated_text": "\n```\nn = int(input())\nl = []\nll = []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    l.append((x+y, x, y))\n    ll.append((x-y, x, y))\nl.sort()\nll.sort()\nans1 = 0\nans2 = 0\n\ncnt = 0\nwhile True:\n    a = l[cnt]\n    b = l[n-cnt-1]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans1 = b[0]-a[0]\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\ncnt = 0\nwhile True:\n    a = ll[cnt]\n    b = ll[n-cnt-1]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans2 = b[0]-a[0]\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\nprint(max(ans1, ans2))\n```\n "
    },
    {
        "user_id": "u492737043",
        "problem_id": "p02742",
        "submission1_id": "s035637779",
        "code_content": "\nH,W=map(int,input().split())\nimport math\n\nA=[0,math.ceil(W/2)]\nc=W*math.ceil(H/2)+A[H%2]+(H%2)*(W-A[H%2])\n \nprint(c)",
        "origin_generated_text": "\n```\nH,W=map(int,input().split())\nimport math\n\nA=[0,math.ceil(W/2)]\nc=W*math.ceil(H/2)+A[H%2]+(H%2)*(W-A[H%2])\n \nprint(c)```\n "
    },
    {
        "user_id": "u584083761",
        "problem_id": "p03274",
        "submission1_id": "s002933317",
        "code_content": "\na,b = list(map(int, input().split()))\nn = list(map(int, input().split()))\n\nans = []\nfor i, name in enumerate(n):\n    if b+i >a:\n        break\n    ans.append(min( (abs(n[i]) + abs(n[i +b-1] - n[i]),  (n[i+b-1]) + abs(n[i +b-1] - n[i]) )) )\n\nprint(min(ans))",
        "origin_generated_text": "\n```\na,b = list(map(int, input().split()))\nn = list(map(int, input().split()))\n\nans = []\nfor i, name in enumerate(n):\n    if b+i >a:\n        break\n    ans.append(min( (abs(n[i]) + abs(n[i +b-1] - n[i]),  (n[i+b-1]) + abs(n[i +b-1] - n[i]) )) )\n\nprint(min(ans))```\n "
    },
    {
        "user_id": "u201928947",
        "problem_id": "p02767",
        "submission1_id": "s702495630",
        "code_content": "\nn = int(input())\nx = list(map(int,input().split()))\nm_energy = 250000\nfor i in range(1,101):\n  energy = 0\n  for k in range(n):\n    energy += (x[k]-i)**2\n  if energy < m_energy:\n    m_energy = energy\nprint(m_energy)",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int,input().split()))\nm_energy = 250000\nfor i in range(1,101):\n  energy = 0\n  for k in range(n):\n    energy += (x[k]-i)**2\n  if energy < m_energy:\n    m_energy = energy\nprint(m_energy)```\n "
    },
    {
        "user_id": "u033602950",
        "problem_id": "p03752",
        "submission1_id": "s767180718",
        "code_content": "\nn,k = list(map(int, input().split()))\na=list(map(int, input().split()))\n\nans=[]\nfor i in range(1<<n):\n    \n    if bin(i).count(\"1\")==k:\n        cst=0\n        use=a.copy()\n        for u in range(1,n):\n            if(i>>u&1):\n                left_max=max(use[:u])\n                cst+=left_max-use[u]\n                use[u]= left_max+1\n        ans.append(cst)\nprint(min(ans))\n",
        "origin_generated_text": "\n```\nn,k = list(map(int, input().split()))\na=list(map(int, input().split()))\n\nans=[]\nfor i in range(1<<n):\n    \n    if bin(i).count(\"1\")==k:\n        cst=0\n        use=a.copy()\n        for u in range(1,n):\n            if(i>>u&1):\n                left_max=max(use[:u])\n                cst+=left_max-use[u]\n                use[u]= left_max+1\n        ans.append(cst)\nprint(min(ans))\n```\n "
    },
    {
        "user_id": "u263159909",
        "problem_id": "p02912",
        "submission1_id": "s233689566",
        "code_content": "\nimport heapq\nimport math\n\nn, m = map(int, input().split())\ngoods = list(map(lambda x: int(x) * -1, input().split()))\nheapq.heapify(goods)\nfor i in range(m):\n    the_most_expensive = heapq.heappop(goods)\n    heapq.heappush(goods, math.ceil(the_most_expensive / 2))\n\nprint(sum(goods) * -1)\n",
        "origin_generated_text": "\n```\nimport heapq\nimport math\n\nn, m = map(int, input().split())\ngoods = list(map(lambda x: int(x) * -1, input().split()))\nheapq.heapify(goods)\nfor i in range(m):\n    the_most_expensive = heapq.heappop(goods)\n    heapq.heappush(goods, math.ceil(the_most_expensive / 2))\n\nprint(sum(goods) * -1)\n```\n "
    },
    {
        "user_id": "u736189571",
        "problem_id": "p02718",
        "submission1_id": "s355103432",
        "code_content": "\nn, m = map(int, input().split())\nitem = input().split()\nitem = [int(x) for x in item]\n\nitem.sort(reverse=True)\n\ns = sum(item)\nres = 0\nfor i in range(n):\n  if item[i] >= s / (4*m):\n    res += 1\n    if res >= m:\n      print('Yes')\n  else:\n    print('No')",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\nitem = input().split()\nitem = [int(x) for x in item]\n\nitem.sort(reverse=True)\n\ns = sum(item)\nres = 0\nfor i in range(n):\n  if item[i] >= s / (4*m):\n    res += 1\n    if res >= m:\n      print('Yes')\n  else:\n    print('No')```\n "
    },
    {
        "user_id": "u375616706",
        "problem_id": "p03734",
        "submission1_id": "s715912307",
        "code_content": "\nfrom itertools import accumulate\nimport heapq\n\nimport sys\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\n\nN, W = map(int, input().split())\nfirst_item = list(map(int, input().split()))\nbasew = first_item[0]\nw0 = []\nw1 = []\nw2 = []\nw3 = []\nheapq.heappush(w0, first_item[0])\nheapq.heappush(w0, first_item[1])\nfor _ in range(N-1):\n    w, v = map(int, input().split())\n    w -= basew\n    if w == 0:\n        heapq.heappush(w0, v)\n    elif w == 1:\n        heapq.heappush(w1, v)\n    elif w == 2:\n        heapq.heappush(w2, v)\n    elif w == 3:\n        heapq.heappush(w3, v)\n\nw0_acc = [0]+list(accumulate(reversed(w0)))\nw1_acc = [0]+list(accumulate(reversed(w1)))\nw2_acc = [0]+list(accumulate(reversed(w2)))\nw3_acc = [0]+list(accumulate(reversed(w3)))\nv = 0\nfor i0 in range(len(w0)+1):\n    for i1 in range(len(w1)+1):\n        for i2 in range(len(w2)+1):\n            for i3 in range(len(w3)+1):\n                if basew*(i0+i1+i2+i3)+3*i3 + 2*i2 + i1 > W:\n                    break\n                else:\n                    v = max(v, w0_acc[i0]+w1_acc[i1]+w2_acc[i2]+w3_acc[i3])\nprint(v)\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\nimport heapq\n\nimport sys\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\n\nN, W = map(int, input().split())\nfirst_item = list(map(int, input().split()))\nbasew = first_item[0]\nw0 = []\nw1 = []\nw2 = []\nw3 = []\nheapq.heappush(w0, first_item[0])\nheapq.heappush(w0, first_item[1])\nfor _ in range(N-1):\n    w, v = map(int, input().split())\n    w -= basew\n    if w == 0:\n        heapq.heappush(w0, v)\n    elif w == 1:\n        heapq.heappush(w1, v)\n    elif w == 2:\n        heapq.heappush(w2, v)\n    elif w == 3:\n        heapq.heappush(w3, v)\n\nw0_acc = [0]+list(accumulate(reversed(w0)))\nw1_acc = [0]+list(accumulate(reversed(w1)))\nw2_acc = [0]+list(accumulate(reversed(w2)))\nw3_acc = [0]+list(accumulate(reversed(w3)))\nv = 0\nfor i0 in range(len(w0)+1):\n    for i1 in range(len(w1)+1):\n        for i2 in range(len(w2)+1):\n            for i3 in range(len(w3)+1):\n                if basew*(i0+i1+i2+i3)+3*i3 + 2*i2 + i1 > W:\n                    break\n                else:\n                    v = max(v, w0_acc[i0]+w1_acc[i1]+w2_acc[i2]+w3_acc[i3])\nprint(v)\n```\n "
    },
    {
        "user_id": "u614181788",
        "problem_id": "p02580",
        "submission1_id": "s930355994",
        "code_content": "\nh,w,m = map(int,input().split())\nH = [0]*(h+1)\nW = [0]*(w+1)\ns = set([])\nfor i in range(m):\n    a,b = map(int,input().split())\n    s.add((a,b))\n\n    H[a] += 1\n    W[b] += 1\n\nx = [0]*(h+1)\ny = [0]*(w+1)\n    \nfor i in range(h+1):\n    x[i] = [i,H[i]]\nfor i in range(w+1):\n    y[i] = [i,W[i]]\n\nx.sort(key= lambda val : val[1],reverse=True)\ny.sort(key= lambda val : val[1],reverse=True)\n\nma = x[0][1]\nmb = y[0][1]\n\ni,j = 0,0\nsw = 0\n\nfor i in range(len(x)):\n    if x[i][1] == ma:\n        sw += 1\nfor j in range(len(y)):\n    if y[j][1] == mb:\n        sw += 1\nprint(ma+mb+sw-1)\n",
        "origin_generated_text": "\n```\nh,w,m = map(int,input().split())\nH = [0]*(h+1)\nW = [0]*(w+1)\ns = set([])\nfor i in range(m):\n    a,b = map(int,input().split())\n    s.add((a,b))\n\n    H[a] += 1\n    W[b] += 1\n\nx = [0]*(h+1)\ny = [0]*(w+1)\n    \nfor i in range(h+1):\n    x[i] = [i,H[i]]\nfor i in range(w+1):\n    y[i] = [i,W[i]]\n\nx.sort(key= lambda val : val[1],reverse=True)\ny.sort(key= lambda val : val[1],reverse=True)\n\nma = x[0][1]\nmb = y[0][1]\n\ni,j = 0,0\nsw = 0\n\nfor i in range(len(x)):\n    if x[i][1] == ma:\n        sw += 1\nfor j in range(len(y)):\n    if y[j][1] == mb:\n        sw += 1\nprint(ma+mb+sw-1)\n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s089739881",
        "code_content": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if abs(i)+abs(j)<2 and 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if abs(i)+abs(j)<3 and 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nn = 0\nm = 0\nfor f in field:\n    for e in f:\n        if e > m:\n            m = e\n        if e==0:\n            n+=1\n\nprint(n)\nprint(m)\n\n",
        "origin_generated_text": "\n```\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if abs(i)+abs(j)<2 and 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if abs(i)+abs(j)<3 and 0<=y+j<10 and 0<=x+i<10:\n                    field[y+j][x+i] += 1\n\n\n\nfor line in lines:\n    x,y,z = map(int, line)\n    drop(x,y,z)\n\nn = 0\nm = 0\nfor f in field:\n    for e in f:\n        if e > m:\n            m = e\n        if e==0:\n            n+=1\n\nprint(n)\nprint(m)\n\n```\n "
    },
    {
        "user_id": "u307124824",
        "problem_id": "p03079",
        "submission1_id": "s727003607",
        "code_content": "\nimport sys\n\nA, B, C = input().split()\n\nif A == B == C:\n    print('Yes')\n    sys.exit()\n\nprint('No')\n",
        "origin_generated_text": "\n```\nimport sys\n\nA, B, C = input().split()\n\nif A == B == C:\n    print('Yes')\n    sys.exit()\n\nprint('No')\n```\n "
    },
    {
        "user_id": "u129492036",
        "problem_id": "p03103",
        "submission1_id": "s531552127",
        "code_content": "\n\n\nN, M = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(N)]\nA = sorted(A, key=lambda x: x[1], reverse=True)\n\nans = 0\nm = M\nfor a, b in A:\n    if m <= b:\n        ans += m*a\n        break\n    else:\n        ans += b*a\n        m -= b\n\nprint(ans)\n",
        "origin_generated_text": "\n```\n\n\nN, M = map(int, input().split())\n\nA = [list(map(int, input().split())) for i in range(N)]\nA = sorted(A, key=lambda x: x[1], reverse=True)\n\nans = 0\nm = M\nfor a, b in A:\n    if m <= b:\n        ans += m*a\n        break\n    else:\n        ans += b*a\n        m -= b\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u923270446",
        "problem_id": "p02887",
        "submission1_id": "s357190975",
        "code_content": "\nn = int(input())\ns = input()\ncur = s[0]\nl = []\nfor i in range(n - 1):\n    if cur != s[i + 1]:\n        l.append(cur)\n        cur = s[i + 1]\nl.append(cur)\nprint(len(l))",
        "origin_generated_text": "\n```\nn = int(input())\ns = input()\ncur = s[0]\nl = []\nfor i in range(n - 1):\n    if cur != s[i + 1]:\n        l.append(cur)\n        cur = s[i + 1]\nl.append(cur)\nprint(len(l))```\n "
    },
    {
        "user_id": "u580904613",
        "problem_id": "p02954",
        "submission1_id": "s293310201",
        "code_content": "\nS = input()\nans = [0]*len(S)\ntmp = []\ncnt = 1;\n\nfor i in range(len(S)-1):\n  if(S[i] == S[i+1]):\n    cnt += 1\n  else:\n    tmp.append(cnt)\n    cnt = 1\ntmp.append(cnt)\n\ncnt = 0\nfor i in range(len(tmp)-1):\n  cnt += tmp[i]\n  if(i % 2 == 0):\n    if((tmp[i] - tmp[i+1])%2 == 0):\n      ans[cnt-1] = int((tmp[i]+tmp[i+1])/2)\n      ans[cnt] = int((tmp[i]+tmp[i+1])/2)\n    else:\n      if(abs(tmp[i] - tmp[i+1]) > 1):\n        if(tmp[i] > tmp[i+1]):\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n        else:\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n      else:\n        if(tmp[i] > tmp[i+1]):\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n        else:\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n        \nprint(*ans)",
        "origin_generated_text": "\n```\nS = input()\nans = [0]*len(S)\ntmp = []\ncnt = 1;\n\nfor i in range(len(S)-1):\n  if(S[i] == S[i+1]):\n    cnt += 1\n  else:\n    tmp.append(cnt)\n    cnt = 1\ntmp.append(cnt)\n\ncnt = 0\nfor i in range(len(tmp)-1):\n  cnt += tmp[i]\n  if(i % 2 == 0):\n    if((tmp[i] - tmp[i+1])%2 == 0):\n      ans[cnt-1] = int((tmp[i]+tmp[i+1])/2)\n      ans[cnt] = int((tmp[i]+tmp[i+1])/2)\n    else:\n      if(abs(tmp[i] - tmp[i+1]) > 1):\n        if(tmp[i] > tmp[i+1]):\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n        else:\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n      else:\n        if(tmp[i] > tmp[i+1]):\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]+1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]-1)/2)\n        else:\n          ans[cnt-1] = int((tmp[i] + tmp[i+1]-1)/2)\n          ans[cnt] = int((tmp[i]+tmp[i+1]+1)/2)\n        \nprint(*ans)```\n "
    },
    {
        "user_id": "u147808483",
        "problem_id": "p03563",
        "submission1_id": "s924594991",
        "code_content": "\na=int(input())\nb=int(input())+a\nprint(b-a)",
        "origin_generated_text": "\n```\na=int(input())\nb=int(input())+a\nprint(b-a)```\n "
    },
    {
        "user_id": "u524039871",
        "problem_id": "p03039",
        "submission1_id": "s829475490",
        "code_content": "\nn,m,k=map(int,input().split())\nM=10**9+7\ndef combi(x,y):\n  c=1\n  m=min(x-y,y)\n  for iii in range(y):\n    c=c*(x-iii)*pow(y-iii,M-2,M)%M\n  return c\n\nrem_combi=combi(n*m-2,k-2)\n\ndef calc(num):\n  out=0\n  for iii in range(num):\n    out+=iii*(num-iii)%M\n  return out\n\nx_cost=m*m*calc(n)%M\ny_cost=n*n*calc(m)%M\nans=rem_combi*(x_cost+y_cost)%M\nprint(int(ans))",
        "origin_generated_text": "\n```\nn,m,k=map(int,input().split())\nM=10**9+7\ndef combi(x,y):\n  c=1\n  m=min(x-y,y)\n  for iii in range(y):\n    c=c*(x-iii)*pow(y-iii,M-2,M)%M\n  return c\n\nrem_combi=combi(n*m-2,k-2)\n\ndef calc(num):\n  out=0\n  for iii in range(num):\n    out+=iii*(num-iii)%M\n  return out\n\nx_cost=m*m*calc(n)%M\ny_cost=n*n*calc(m)%M\nans=rem_combi*(x_cost+y_cost)%M\nprint(int(ans))```\n "
    },
    {
        "user_id": "u645855527",
        "problem_id": "p02580",
        "submission1_id": "s612151636",
        "code_content": "\nfrom collections import deque\n\nH, W, M = map(int, input().split())\n\nbomb_h = [0] * H\nbomb_w = [0] * W\ngrid = [[0] * W for _ in range(H)]\nfor i in range(M):\n    h, w = map(int, input().split())\n    bomb_h[h-1] += 1\n    bomb_w[w-1] += 1\n    grid[h-1][w-1] += 1\n\nmax_h = max(bomb_h)\nmax_w = max(bomb_w)\n\nh_indices = []\nfor i in range(H):\n    if bomb_h[i] == max_h:\n        h_indices.append(i)\n\nw_indices = []\nfor i in range(W):\n    if bomb_w[i] == max_w:\n        w_indices.append(i)\n\nans = max_w + max_h - 1\nfor h in h_indices:\n    for w in w_indices:\n        if grid[h][w] == max_h + max_w - 1:\n            ans += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nfrom collections import deque\n\nH, W, M = map(int, input().split())\n\nbomb_h = [0] * H\nbomb_w = [0] * W\ngrid = [[0] * W for _ in range(H)]\nfor i in range(M):\n    h, w = map(int, input().split())\n    bomb_h[h-1] += 1\n    bomb_w[w-1] += 1\n    grid[h-1][w-1] += 1\n\nmax_h = max(bomb_h)\nmax_w = max(bomb_w)\n\nh_indices = []\nfor i in range(H):\n    if bomb_h[i] == max_h:\n        h_indices.append(i)\n\nw_indices = []\nfor i in range(W):\n    if bomb_w[i] == max_w:\n        w_indices.append(i)\n\nans = max_w + max_h - 1\nfor h in h_indices:\n    for w in w_indices:\n        if grid[h][w] == max_h + max_w - 1:\n            ans += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u279605379",
        "problem_id": "p02297",
        "submission1_id": "s391171527",
        "code_content": "\ndef cross(a,b):return a[0]*b[1] - a[1]*b[0]\n        \nn = int(input())\nP =[]\ns = 0\nfor i in range(n):P.append([int(i) for i in input().split()])\nfor i in range(n-1):s += cross(P[i],P[i+1])\nprint(s/2.0)",
        "origin_generated_text": "\n```\ndef cross(a,b):return a[0]*b[1] - a[1]*b[0]\n        \nn = int(input())\nP =[]\ns = 0\nfor i in range(n):P.append([int(i) for i in input().split()])\nfor i in range(n-1):s += cross(P[i],P[i+1])\nprint(s/2.0)```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03633",
        "submission1_id": "s799705392",
        "code_content": "\n\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n\ndef gcd(a,b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n  \n  g = gcd(a,b)\n  \n  return int(a*b/g)\nans = T[0]\nfor i in range(1,len(T)):\n  ans = lcm(ans,T[i])\nprint(ans)\n",
        "origin_generated_text": "\n```\n\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n\ndef gcd(a,b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n  \n  g = gcd(a,b)\n  \n  return int(a*b/g)\nans = T[0]\nfor i in range(1,len(T)):\n  ans = lcm(ans,T[i])\nprint(ans)\n```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p03054",
        "submission1_id": "s810606253",
        "code_content": "\nH,W,N=map(int,input().split())\nsr,sc=map(int,input().split())\nS=input()\nT=input()\n\nlu=H-sr+1\nld=sr\nll=W-sc+1\nlr=sc\n\nfor i in range(N):\n  x=S[i]\n  y=T[i]\n\n  if x=='U':\n    lu-=1\n  elif x=='D':\n    ld-=1\n  elif x=='L':\n    ll-=1\n  elif x=='R':\n    lr-=1\n\n  \n\n  if lu<0 or ld<0 or ll<0 or lr<0:\n    print('NO')\n    exit()\n\n  if y=='U':\n    ld+=1\n  elif y=='D':\n    lu+=1\n  elif y=='L':\n    lr+=1\n  elif y=='R':\n    ll+=1\n\n  \n\nprint('YES')",
        "origin_generated_text": "\n```\nH,W,N=map(int,input().split())\nsr,sc=map(int,input().split())\nS=input()\nT=input()\n\nlu=H-sr+1\nld=sr\nll=W-sc+1\nlr=sc\n\nfor i in range(N):\n  x=S[i]\n  y=T[i]\n\n  if x=='U':\n    lu-=1\n  elif x=='D':\n    ld-=1\n  elif x=='L':\n    ll-=1\n  elif x=='R':\n    lr-=1\n\n  \n\n  if lu<0 or ld<0 or ll<0 or lr<0:\n    print('NO')\n    exit()\n\n  if y=='U':\n    ld+=1\n  elif y=='D':\n    lu+=1\n  elif y=='L':\n    lr+=1\n  elif y=='R':\n    ll+=1\n\n  \n\nprint('YES')```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s528204101",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(16)):\n    for j in reversed(range(1,10)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN >= n):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(16)):\n    for j in reversed(range(1,10)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN >= n):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u082861480",
        "problem_id": "p03080",
        "submission1_id": "s177695903",
        "code_content": "\nN = int(input())\nred_num = 0\nfor i in input():\n  if i == 'R':\n    red_num += 1\nprint('Yes' if red_num > N",
        "origin_generated_text": "\n```\nN = int(input())\nred_num = 0\nfor i in input():\n  if i == 'R':\n    red_num += 1\nprint('Yes' if red_num > N```\n "
    },
    {
        "user_id": "u461993794",
        "problem_id": "p02625",
        "submission1_id": "s452900392",
        "code_content": "\nfrom functools import reduce\n\nn, m = map(int, input().split())\n\nmod = 10 ** 9 + 7\nans = 0\nc = 1\np1 = 1\np2 = reduce(lambda ac, v: ac * v % mod, range(m, m - n, -1), 1)\nfor i in range(n + 1):\n    if i > 0:\n        c = (c * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n        p1 = (p1 * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n        p2 = (p2 * pow(n - i + 1, mod - 2, mod)) % mod\n    x = c * p1 * (p2 ** 2)\n    if i % 2 == 0:\n        ans += x\n    else:\n        ans -= x\n    ans %= mod\nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom functools import reduce\n\nn, m = map(int, input().split())\n\nmod = 10 ** 9 + 7\nans = 0\nc = 1\np1 = 1\np2 = reduce(lambda ac, v: ac * v % mod, range(m, m - n, -1), 1)\nfor i in range(n + 1):\n    if i > 0:\n        c = (c * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n        p1 = (p1 * (n - i + 1) * pow(i, mod - 2, mod)) % mod\n        p2 = (p2 * pow(n - i + 1, mod - 2, mod)) % mod\n    x = c * p1 * (p2 ** 2)\n    if i % 2 == 0:\n        ans += x\n    else:\n        ans -= x\n    ans %= mod\nprint(ans)\n```\n "
    },
    {
        "user_id": "u823044869",
        "problem_id": "p03563",
        "submission1_id": "s303312001",
        "code_content": "\nr = int(input())\ng = int(input())\n\nif r<g:\n  print(g-r)\nelif r>g:\n  print(r-g)\nelse:\n  print(r)\n",
        "origin_generated_text": "\n```\nr = int(input())\ng = int(input())\n\nif r<g:\n  print(g-r)\nelif r>g:\n  print(r-g)\nelse:\n  print(r)\n```\n "
    },
    {
        "user_id": "u031115006",
        "problem_id": "p02767",
        "submission1_id": "s355963589",
        "code_content": "\nN=int(input())\nlist = list(map(int, input().split()))\n \nl=len(list)\nm=0\n \nk=0\nwhile(k<l):\n  if(m < abs(list[k])):\n    m = abs(list[k])\n  k+=1\n \nk=0\nwhile(k<l):\n  r+=abs(list[k]-m)*abs(list[k]-m)\n  k+=1\n \nprint(r*2)",
        "origin_generated_text": "\n```\nN=int(input())\nlist = list(map(int, input().split()))\n \nl=len(list)\nm=0\n \nk=0\nwhile(k<l):\n  if(m < abs(list[k])):\n    m = abs(list[k])\n  k+=1\n \nk=0\nwhile(k<l):\n  r+=abs(list[k]-m)*abs(list[k]-m)\n  k+=1\n \nprint(r*2)```\n "
    },
    {
        "user_id": "u422104747",
        "problem_id": "p03959",
        "submission1_id": "s335850370",
        "code_content": "\nn=int(input())\nl= list(map(int, input().split()))\nr= list(map(int, input().split()))\nl=[0]+l\nr.append(0)\nres=1\nfor i in range(n):\n\tif( (l[i]<l[i+1]) or (r[i]>r[i+1]) ):\n\t\tif( ( (l[i]<l[i+1]) and (r[i]>r[i+1]) ) and (l[i+1]!=r[i]) ):\n\t\t\tres=0\n\t\t\tbreak\n\telse:\n\t\tres*=min(l[i],r[i])\n\t\tres%=1000000007\nprint(res)",
        "origin_generated_text": "\n```\nn=int(input())\nl= list(map(int, input().split()))\nr= list(map(int, input().split()))\nl=[0]+l\nr.append(0)\nres=1\nfor i in range(n):\n\tif( (l[i]<l[i+1]) or (r[i]>r[i+1]) ):\n\t\tif( ( (l[i]<l[i+1]) and (r[i]>r[i+1]) ) and (l[i+1]!=r[i]) ):\n\t\t\tres=0\n\t\t\tbreak\n\telse:\n\t\tres*=min(l[i],r[i])\n\t\tres%=1000000007\nprint(res)```\n "
    },
    {
        "user_id": "u379692329",
        "problem_id": "p03272",
        "submission1_id": "s602942617",
        "code_content": "\nN, i = [int(x) for x in input().split()]\nprint(N+1-i)",
        "origin_generated_text": "\n```\nN, i = [int(x) for x in input().split()]\nprint(N+1-i)```\n "
    },
    {
        "user_id": "u706377526",
        "problem_id": "p02640",
        "submission1_id": "s596836110",
        "code_content": "\ns = input()\nlst = s.split()\n\nex1 = int(lst[0])\nex2 = int(lst[1])\nret = \"No\"\n\nfor i in range(ex1+1):\n    if 4 * (ex1 - i) + 2 * i == ex2:\n        ret= \"Yes\"\n\nprint(ret)\n",
        "origin_generated_text": "\n```\ns = input()\nlst = s.split()\n\nex1 = int(lst[0])\nex2 = int(lst[1])\nret = \"No\"\n\nfor i in range(ex1+1):\n    if 4 * (ex1 - i) + 2 * i == ex2:\n        ret= \"Yes\"\n\nprint(ret)\n```\n "
    },
    {
        "user_id": "u425762225",
        "problem_id": "p03568",
        "submission1_id": "s590516680",
        "code_content": "\ndef solve(n,a):\n  even = 0\n  \n  for i in range(n):\n    if a[i] % 2 == 0:\n      even += 1\n  \n  return 3**n - 2**even\n  \ndef main():\n  N = int(input())\n  a = list(map(int,input().split()))\n  print(solve(N,a))",
        "origin_generated_text": "\n```\ndef solve(n,a):\n  even = 0\n  \n  for i in range(n):\n    if a[i] % 2 == 0:\n      even += 1\n  \n  return 3**n - 2**even\n  \ndef main():\n  N = int(input())\n  a = list(map(int,input().split()))\n  print(solve(N,a))```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p02556",
        "submission1_id": "s553953528",
        "code_content": "\nn = int(input())\nl = []\nll = []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    l.append((x+y, x, y))\n    ll.append((x-y, x, y))\nl.sort()\nll.sort()\nans1 = 0\nans2 = 0\n\ncnt = 0\nwhile True:\n    a = l[-cnt-1]\n    b = l[cnt]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans1 = abs(b[0]-a[0])\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\ncnt = 0\nwhile True:\n    a = ll[-cnt-1]\n    b = ll[cnt]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans2 = abs(b[0]-a[0])\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\nprint(max(ans1, ans2))\n",
        "origin_generated_text": "\n```\nn = int(input())\nl = []\nll = []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    l.append((x+y, x, y))\n    ll.append((x-y, x, y))\nl.sort()\nll.sort()\nans1 = 0\nans2 = 0\n\ncnt = 0\nwhile True:\n    a = l[-cnt-1]\n    b = l[cnt]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans1 = abs(b[0]-a[0])\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\ncnt = 0\nwhile True:\n    a = ll[-cnt-1]\n    b = ll[cnt]\n    if a[1] >= b[1] and a[2] >= b[2]:\n        ans2 = abs(b[0]-a[0])\n        break\n    if cnt >= n-1:\n        break\n    cnt += 1\n\nprint(max(ans1, ans2))\n```\n "
    },
    {
        "user_id": "u557494880",
        "problem_id": "p03716",
        "submission1_id": "s775514001",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))\nS = []\nP = A[:N]\nQ = A[2*N:]\nfor i in range(N):\n    Q[i] *= -1\nR = A[N:2*N]\np = [0]*(N+1)\nq = [0]*(N+1)\nimport heapq\nheapq.heapify(P)\nheapq.heapify(Q)\nsp = sum(P)\nsq = sum(Q)\np[0] = sp\nq[0] = sq\n\nfor i in range(1,N+1):\n    heapq.heappush(P,R[i-1])\n    sp = sum(P)\n    p[i] = sp\nfor i in range(1,N+1):\n    heapq.heappush(Q,-R[-i])\n    sq = sum(Q)\n    q[i] = sq\n\nans = -(10**100)\nfor k in range(N+1):\n    ans = max(ans,p[k] + q[N-k])\n    \nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))\nS = []\nP = A[:N]\nQ = A[2*N:]\nfor i in range(N):\n    Q[i] *= -1\nR = A[N:2*N]\np = [0]*(N+1)\nq = [0]*(N+1)\nimport heapq\nheapq.heapify(P)\nheapq.heapify(Q)\nsp = sum(P)\nsq = sum(Q)\np[0] = sp\nq[0] = sq\n\nfor i in range(1,N+1):\n    heapq.heappush(P,R[i-1])\n    sp = sum(P)\n    p[i] = sp\nfor i in range(1,N+1):\n    heapq.heappush(Q,-R[-i])\n    sq = sum(Q)\n    q[i] = sq\n\nans = -(10**100)\nfor k in range(N+1):\n    ans = max(ans,p[k] + q[N-k])\n    \nprint(ans)\n```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p03729",
        "submission1_id": "s869090298",
        "code_content": "\na,b,c = input().split();print(\"YNEOS\"[a[-1]!=b[0] or b[-1]!=c[0]::2])",
        "origin_generated_text": "\n```\na,b,c = input().split();print(\"YNEOS\"[a[-1]!=b[0] or b[-1]!=c[0]::2])```\n "
    },
    {
        "user_id": "u551692187",
        "problem_id": "p03080",
        "submission1_id": "s983692053",
        "code_content": "\nN = int(input())\ns = input()\nprint('Yes') if s.count('R') > s.count('B') else print('No')",
        "origin_generated_text": "\n```\nN = int(input())\ns = input()\nprint('Yes') if s.count('R') > s.count('B') else print('No')```\n "
    },
    {
        "user_id": "u882858304",
        "problem_id": "p02912",
        "submission1_id": "s146421644",
        "code_content": "\nN,M=[int(i) for i in input().split()]\nA = sorted([int(i) for i in input().split()])\nfor i in range(M-1,0,-1):\n  A[i] = A[i]\nprint(sum(A))",
        "origin_generated_text": "\n```\nN,M=[int(i) for i in input().split()]\nA = sorted([int(i) for i in input().split()])\nfor i in range(M-1,0,-1):\n  A[i] = A[i]\nprint(sum(A))```\n "
    },
    {
        "user_id": "u197038614",
        "problem_id": "p02922",
        "submission1_id": "s733909107",
        "code_content": "\na, b = map(int, input().split())\n\nif a == 20:\n    print(b\n    exit()\n\nx = a\n\nfor i in range(2, 21):\n    if x >= b:\n        print(i)\n        exit()\n    x = x + a - 1\n",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\n\nif a == 20:\n    print(b\n    exit()\n\nx = a\n\nfor i in range(2, 21):\n    if x >= b:\n        print(i)\n        exit()\n    x = x + a - 1\n```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s683336349",
        "code_content": "\ni = input().split()\nif int(i[0]) == int(i[1]) and int(i[0]) == int(i[2]):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ni = input().split()\nif int(i[0]) == int(i[1]) and int(i[0]) == int(i[2]):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u086172144",
        "problem_id": "p03041",
        "submission1_id": "s725342659",
        "code_content": "\nN, K = list(map(int, input().split()))\nS = input()\nprint(S[:K - 1] + S[K - 1].lower() + S[K:])\n",
        "origin_generated_text": "\n```\nN, K = list(map(int, input().split()))\nS = input()\nprint(S[:K - 1] + S[K - 1].lower() + S[K:])\n```\n "
    },
    {
        "user_id": "u191874006",
        "problem_id": "p03054",
        "submission1_id": "s949234637",
        "code_content": "\n\n\n\nimport sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(1000000000)\nfrom heapq import heappush, heappop,heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\ninf = float('inf')\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\n\nh,w,n = LI()\nsr,sc = LI()\nsr -= 1\nsc -= 1\nh -= 1\nw -= 1\ns = input()\nt = input()\nl,r,d,u = 0,w,h,0\nfor i in range(n)[::-1]:\n    if t[i] == 'R':\n        if l > 0:\n            l -= 1\n    elif t[i] == 'L':\n        if r < w:\n            r += 1\n    elif t[i] == 'U':\n        if u < h:\n            u += 1\n    elif t[i] == 'D':\n        if d > 0:\n            d -= 1\n    if s[i] == 'R':\n        r -= 1\n        if r < 0:\n            print('NO')\n            quit()\n    elif s[i] == 'L':\n        l += 1\n        if l > w:\n            print('NO')\n            quit()\n    elif s[i] == 'U':\n        u += 1\n        if u > h:\n            print('NO')\n            quit()\n    elif s[i] == 'D':\n        d -= 1\n        if d < 0:\n            print('NO')\n            quit()\n    \nif l <= sc <= r and u <= sr <= d:\n    print('YES')\nelse:\n    print('NO')\n            ",
        "origin_generated_text": "\n```\n\n\n\nimport sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(1000000000)\nfrom heapq import heappush, heappop,heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\ninf = float('inf')\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\n\nh,w,n = LI()\nsr,sc = LI()\nsr -= 1\nsc -= 1\nh -= 1\nw -= 1\ns = input()\nt = input()\nl,r,d,u = 0,w,h,0\nfor i in range(n)[::-1]:\n    if t[i] == 'R':\n        if l > 0:\n            l -= 1\n    elif t[i] == 'L':\n        if r < w:\n            r += 1\n    elif t[i] == 'U':\n        if u < h:\n            u += 1\n    elif t[i] == 'D':\n        if d > 0:\n            d -= 1\n    if s[i] == 'R':\n        r -= 1\n        if r < 0:\n            print('NO')\n            quit()\n    elif s[i] == 'L':\n        l += 1\n        if l > w:\n            print('NO')\n            quit()\n    elif s[i] == 'U':\n        u += 1\n        if u > h:\n            print('NO')\n            quit()\n    elif s[i] == 'D':\n        d -= 1\n        if d < 0:\n            print('NO')\n            quit()\n    \nif l <= sc <= r and u <= sr <= d:\n    print('YES')\nelse:\n    print('NO')\n            ```\n "
    },
    {
        "user_id": "u203261375",
        "problem_id": "p00026",
        "submission1_id": "s724596557",
        "code_content": "\narea = [[0 for i in range(10)] for j in range(10)]\n\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n\n    if s == 3:\n        if (0 <= x+2 <= 9) and (0 <= y <= 9):\n            area[x+2][y] += 1\n        if (0 <= x <= 9) and (0 <= y+2 <= 9):\n            area[x][y+2] += 1\n        if (0 <= x-2 <= 9) and (0 <= y <= 9):\n            area[x-2][y] += 1\n        if (0 <= x <= 9) and (0 <= y-2 <= 9):\n            area[x][y-2] += 1\n    if s >= 2:\n        if (0 <= x+1 <= 9) and (0 <= y+1 <= 9):\n            area[x+1][y+1] += 1\n        if (0 <= x+1 <= 9) and (0 <= y-1 <= 9):\n            area[x+1][y-1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y+1 <= 9):\n            area[x-1][y+1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y-1 <= 9):\n            area[x-1][y-1] += 1\n    if s >= 1:\n        if (0 <= x+1 <= 9) and (0 <= y <= 9):\n            area[x+1][y] += 1\n        if (0 <= x <= 9) and (0 <= y+1 <= 9):\n            area[x][y+1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y <= 9):\n            area[x-1][y] += 1\n        if (0 <= x <= 9) and (0 <= y-1 <= 9):\n            area[x][y-1] += 1\n        area[x][y] += 1\n\nmax = 0\ncnt = 0\n\nfor i in range(10):\n    for j in range(10):\n        if area[i][j] == 0:\n            cnt += 1\n        if area[i][j] > max:\n            max = area[i][j]\nprint(cnt)\nprint(max)",
        "origin_generated_text": "\n```\narea = [[0 for i in range(10)] for j in range(10)]\n\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n\n    if s == 3:\n        if (0 <= x+2 <= 9) and (0 <= y <= 9):\n            area[x+2][y] += 1\n        if (0 <= x <= 9) and (0 <= y+2 <= 9):\n            area[x][y+2] += 1\n        if (0 <= x-2 <= 9) and (0 <= y <= 9):\n            area[x-2][y] += 1\n        if (0 <= x <= 9) and (0 <= y-2 <= 9):\n            area[x][y-2] += 1\n    if s >= 2:\n        if (0 <= x+1 <= 9) and (0 <= y+1 <= 9):\n            area[x+1][y+1] += 1\n        if (0 <= x+1 <= 9) and (0 <= y-1 <= 9):\n            area[x+1][y-1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y+1 <= 9):\n            area[x-1][y+1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y-1 <= 9):\n            area[x-1][y-1] += 1\n    if s >= 1:\n        if (0 <= x+1 <= 9) and (0 <= y <= 9):\n            area[x+1][y] += 1\n        if (0 <= x <= 9) and (0 <= y+1 <= 9):\n            area[x][y+1] += 1\n        if (0 <= x-1 <= 9) and (0 <= y <= 9):\n            area[x-1][y] += 1\n        if (0 <= x <= 9) and (0 <= y-1 <= 9):\n            area[x][y-1] += 1\n        area[x][y] += 1\n\nmax = 0\ncnt = 0\n\nfor i in range(10):\n    for j in range(10):\n        if area[i][j] == 0:\n            cnt += 1\n        if area[i][j] > max:\n            max = area[i][j]\nprint(cnt)\nprint(max)```\n "
    },
    {
        "user_id": "u504836877",
        "problem_id": "p03480",
        "submission1_id": "s025879284",
        "code_content": "\nS = input()\n\nN = len(S)\nL = []\ntemp = S[0]\nc = 1\nfor i in range(1, N-1):\n    if S[i] == temp:\n        c += 1\n    else:\n        L.append(c)\n        c = 1\n        temp = S[i]\nif S[N-1] == temp:\n    c += 1\nelse:\n    L.append(c)\n    c = 1\nL.append(c)\n\nans = N\nwhile len(L) >= 3:\n    if L[0] > L[-1]:\n        ans = min(ans, N-L[-1])\n        L[-2] += L[-1]\n        L.pop(-1)\n    else:\n        ans = min(ans, N-L[0])\n        L[1] += L[0]\n        L.pop(0)\n        \nif len(L) == 2:\n    ans = min(ans, max(L))\n    \nprint(ans)",
        "origin_generated_text": "\n```\nS = input()\n\nN = len(S)\nL = []\ntemp = S[0]\nc = 1\nfor i in range(1, N-1):\n    if S[i] == temp:\n        c += 1\n    else:\n        L.append(c)\n        c = 1\n        temp = S[i]\nif S[N-1] == temp:\n    c += 1\nelse:\n    L.append(c)\n    c = 1\nL.append(c)\n\nans = N\nwhile len(L) >= 3:\n    if L[0] > L[-1]:\n        ans = min(ans, N-L[-1])\n        L[-2] += L[-1]\n        L.pop(-1)\n    else:\n        ans = min(ans, N-L[0])\n        L[1] += L[0]\n        L.pop(0)\n        \nif len(L) == 2:\n    ans = min(ans, max(L))\n    \nprint(ans)```\n "
    },
    {
        "user_id": "u798803522",
        "problem_id": "p02281",
        "submission1_id": "s861790031",
        "code_content": "\nfrom collections import defaultdict\ndef preorder(here, conn, chain):\n    if here == -1:\n        return\n    chain.append(here)\n    if conn[here]:\n        preorder(conn[here][0], conn, chain)\n        preorder(conn[here][1], conn, chain)\n\ndef inorder(here, conn, chain):\n    if here == -1:\n        return\n    if conn[here]:\n        inorder(conn[here][0], conn, chain)\n        chain.append(here)\n        inorder(conn[here][1], conn, chain)\n\ndef postorder(here, conn, chain):\n    if here == -1:\n        return\n    if conn[here]:\n        postorder(conn[here][0], conn, chain)\n        postorder(conn[here][1], conn, chain)\n    chain.append(here)\n\nquery = int(input())\nconnect = defaultdict(list)\nfor _ in range(query):\n    here, left, right = (int(n) for n in input().split(\" \"))\n    connect[here] = [left, right]\npreo = []\nino = []\nposto = []\npreorder(0, connect, preo)\ninorder(0, connect, ino)\npostorder(0, connect, posto)\n\nprint(\"Preorder\")\nprint(*preo)\nprint(\"Inorder\")\nprint(*ino)\nprint(\"Postorder\")\nprint(*posto)",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\ndef preorder(here, conn, chain):\n    if here == -1:\n        return\n    chain.append(here)\n    if conn[here]:\n        preorder(conn[here][0], conn, chain)\n        preorder(conn[here][1], conn, chain)\n\ndef inorder(here, conn, chain):\n    if here == -1:\n        return\n    if conn[here]:\n        inorder(conn[here][0], conn, chain)\n        chain.append(here)\n        inorder(conn[here][1], conn, chain)\n\ndef postorder(here, conn, chain):\n    if here == -1:\n        return\n    if conn[here]:\n        postorder(conn[here][0], conn, chain)\n        postorder(conn[here][1], conn, chain)\n    chain.append(here)\n\nquery = int(input())\nconnect = defaultdict(list)\nfor _ in range(query):\n    here, left, right = (int(n) for n in input().split(\" \"))\n    connect[here] = [left, right]\npreo = []\nino = []\nposto = []\npreorder(0, connect, preo)\ninorder(0, connect, ino)\npostorder(0, connect, posto)\n\nprint(\"Preorder\")\nprint(*preo)\nprint(\"Inorder\")\nprint(*ino)\nprint(\"Postorder\")\nprint(*posto)```\n "
    },
    {
        "user_id": "u347640436",
        "problem_id": "p03036",
        "submission1_id": "s771881374",
        "code_content": "\nr, d, x = map(int, input().split())\nfor _ in range(10):\n  x = r * x -d\n  print(x)",
        "origin_generated_text": "\n```\nr, d, x = map(int, input().split())\nfor _ in range(10):\n  x = r * x -d\n  print(x)```\n "
    },
    {
        "user_id": "u251252118",
        "problem_id": "p03272",
        "submission1_id": "s164925485",
        "code_content": "\nA = [int(i) for i in input().split(\" \")]\nans = A[0] + A[1] -2\n\nprint(ans)",
        "origin_generated_text": "\n```\nA = [int(i) for i in input().split(\" \")]\nans = A[0] + A[1] -2\n\nprint(ans)```\n "
    },
    {
        "user_id": "u414376763",
        "problem_id": "p02640",
        "submission1_id": "s672365936",
        "code_content": "\nx,y = list(map(int,input().split()))\n\nif ((2 * x) - y) % 2 == 0 and y >= 2 * x and  y >= 4 * x:\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nx,y = list(map(int,input().split()))\n\nif ((2 * x) - y) % 2 == 0 and y >= 2 * x and  y >= 4 * x:\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s932436861",
        "code_content": "\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int, i.split(\",\")))\n        mas[y][x] += 1\n        for k,l in eval(\"n\"+str(a)):\n            try:\n                if y+l>= 0 and x+k >= 0 and y+l<10 and x+k<10:\n                    mas[y+l][x+k] += 1\n            except IndexError:\n                continue\n    except ValueError:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))",
        "origin_generated_text": "\n```\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1, 1] for b in [-1, 1]]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int, i.split(\",\")))\n        mas[y][x] += 1\n        for k,l in eval(\"n\"+str(a)):\n            try:\n                if y+l>= 0 and x+k >= 0 and y+l<10 and x+k<10:\n                    mas[y+l][x+k] += 1\n            except IndexError:\n                continue\n    except ValueError:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02727",
        "submission1_id": "s276697937",
        "code_content": "\nx,y,a,b,c = map(int,input().split())\npl = list(map(int,input().split()))\nql = list(map(int,input().split()))\nrl = list(map(int,input().split()))\n\npp = sorted(pl,reverse=True)[:x]\nqq = sorted(ql,reverse=True)[:y]\nall = pp + qq + rl\nprint(sum(sorted(all,reverse=True)[:x+y]))",
        "origin_generated_text": "\n```\nx,y,a,b,c = map(int,input().split())\npl = list(map(int,input().split()))\nql = list(map(int,input().split()))\nrl = list(map(int,input().split()))\n\npp = sorted(pl,reverse=True)[:x]\nqq = sorted(ql,reverse=True)[:y]\nall = pp + qq + rl\nprint(sum(sorted(all,reverse=True)[:x+y]))```\n "
    },
    {
        "user_id": "u631277801",
        "problem_id": "p03096",
        "submission1_id": "s979855017",
        "code_content": "\nimport sys\nstdin = sys.stdin\n \nsys.setrecursionlimit(10**5) \n \ndef li(): return map(int, stdin.readline().split())\ndef li_(): return map(lambda x: int(x)-1, stdin.readline().split())\ndef lf(): return map(float, stdin.readline().split())\ndef ls(): return stdin.readline().split()\ndef ns(): return stdin.readline().rstrip()\ndef lc(): return list(ns())\ndef ni(): return int(stdin.readline())\ndef nf(): return float(stdin.readline())\n\nfrom collections import Counter, defaultdict\n\ndef compress(s):\n    ret = []\n    for i, si in enumerate(s):\n        if i == 0:\n            ret.append(si)\n        else:\n            if si == ret[-1]:\n                continue\n            else:\n                ret.append(si)\n                \n    return ret\n\ndef removeonly1(s):\n    cnt = Counter(s)\n    ret = []\n    \n    for si in s:\n        if cnt[si] == 1:\n            continue\n        else:\n            ret.append(si)\n            \n    return ret\n\nn = ni()\nc = [ni() for _ in range(n)]\nMOD = 10**9+7\n\ncolors = removeonly1(compress(c))\n\n\ndp = [0 for _ in range(len(colors)+1)]\n\ndp[0] = 1\nidxs = defaultdict(list)\n\nfor i, ci in enumerate(colors):\n    dp[i+1] = dp[i]\n    \n    if ci in idxs.keys() and len(idxs[ci]) > 1:\n        dp[i+1] += dp[idxs[ci][-1]]\n        dp[i+1] %= MOD\n        \n    idxs[ci].append(i)\n        \nprint(dp[len(colors)])",
        "origin_generated_text": "\n```\nimport sys\nstdin = sys.stdin\n \nsys.setrecursionlimit(10**5) \n \ndef li(): return map(int, stdin.readline().split())\ndef li_(): return map(lambda x: int(x)-1, stdin.readline().split())\ndef lf(): return map(float, stdin.readline().split())\ndef ls(): return stdin.readline().split()\ndef ns(): return stdin.readline().rstrip()\ndef lc(): return list(ns())\ndef ni(): return int(stdin.readline())\ndef nf(): return float(stdin.readline())\n\nfrom collections import Counter, defaultdict\n\ndef compress(s):\n    ret = []\n    for i, si in enumerate(s):\n        if i == 0:\n            ret.append(si)\n        else:\n            if si == ret[-1]:\n                continue\n            else:\n                ret.append(si)\n                \n    return ret\n\ndef removeonly1(s):\n    cnt = Counter(s)\n    ret = []\n    \n    for si in s:\n        if cnt[si] == 1:\n            continue\n        else:\n            ret.append(si)\n            \n    return ret\n\nn = ni()\nc = [ni() for _ in range(n)]\nMOD = 10**9+7\n\ncolors = removeonly1(compress(c))\n\n\ndp = [0 for _ in range(len(colors)+1)]\n\ndp[0] = 1\nidxs = defaultdict(list)\n\nfor i, ci in enumerate(colors):\n    dp[i+1] = dp[i]\n    \n    if ci in idxs.keys() and len(idxs[ci]) > 1:\n        dp[i+1] += dp[idxs[ci][-1]]\n        dp[i+1] %= MOD\n        \n    idxs[ci].append(i)\n        \nprint(dp[len(colors)])```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03573",
        "submission1_id": "s142784696",
        "code_content": "\na, b, c = map(int, input().split())\n\nif a == b and a == c:\n    print(a)\nelif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)\n",
        "origin_generated_text": "\n```\na, b, c = map(int, input().split())\n\nif a == b and a == c:\n    print(a)\nelif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)\n```\n "
    },
    {
        "user_id": "u047796752",
        "problem_id": "p03677",
        "submission1_id": "s058865173",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nfrom heapq import *\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na = list(map(lambda x: x-1, a))\nlr = []\ncnt = 0\n\nfor i in range(n-1):\n    ai, aj = a[i], a[i+1]\n    \n    if ai<aj:\n        lr.append((ai, aj))\n        cnt += aj-ai\n    else:\n        lr.append((ai-m, aj))\n        lr.append((ai, m))\n        cnt += m+aj-ai\n    \nlr.sort(key=lambda t: t[0])\nidx = 0\nans = cnt\ndecre = 0\npq = []\n\nfor i in range(m):\n    while len(pq)>0 and pq[0][0]<i:\n        r, l = heappop(pq)\n        decre -= r-l+1\n        \n    while idx<len(lr) and i>=lr[idx][0]:\n        decre += i-lr[idx][0]\n        heappush(pq, (lr[idx][1], lr[idx][0]))\n        idx += 1\n    \n    ans = min(ans, cnt-decre)\n    decre += len(pq)\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nfrom heapq import *\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na = list(map(lambda x: x-1, a))\nlr = []\ncnt = 0\n\nfor i in range(n-1):\n    ai, aj = a[i], a[i+1]\n    \n    if ai<aj:\n        lr.append((ai, aj))\n        cnt += aj-ai\n    else:\n        lr.append((ai-m, aj))\n        lr.append((ai, m))\n        cnt += m+aj-ai\n    \nlr.sort(key=lambda t: t[0])\nidx = 0\nans = cnt\ndecre = 0\npq = []\n\nfor i in range(m):\n    while len(pq)>0 and pq[0][0]<i:\n        r, l = heappop(pq)\n        decre -= r-l+1\n        \n    while idx<len(lr) and i>=lr[idx][0]:\n        decre += i-lr[idx][0]\n        heappush(pq, (lr[idx][1], lr[idx][0]))\n        idx += 1\n    \n    ans = min(ans, cnt-decre)\n    decre += len(pq)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u835482198",
        "problem_id": "p03087",
        "submission1_id": "s672417494",
        "code_content": "\nn, q = map(int, input().split())\ns = input()\n\nac = [0 for i in range(n)]\nfor i in range(1, n):\n    if s[i - 1] == 'A' and s[i] == 'C':\n        ac[i] = 1\n\nfor i in range(n - 1):\n    ac[i + 1] += ac[i]\nfor i in range(q):\n    l, r = map(int, input().split())\n    l -= 1\n    r -= 1\n    ret = ac[r] - ac[l]\n    print(ret)\n",
        "origin_generated_text": "\n```\nn, q = map(int, input().split())\ns = input()\n\nac = [0 for i in range(n)]\nfor i in range(1, n):\n    if s[i - 1] == 'A' and s[i] == 'C':\n        ac[i] = 1\n\nfor i in range(n - 1):\n    ac[i + 1] += ac[i]\nfor i in range(q):\n    l, r = map(int, input().split())\n    l -= 1\n    r -= 1\n    ret = ac[r] - ac[l]\n    print(ret)\n```\n "
    },
    {
        "user_id": "u640922335",
        "problem_id": "p03752",
        "submission1_id": "s523784677",
        "code_content": "\nN,K=map(int,input().split())\nA=list(map(int,input().split()))\nans=[]\n\nfor i in range(2**(N-1)):\n    L=[0]*(N-1)\n    total=0\n    count=0\n    for j in range(N-1):\n        if ((i>>j)&1):\n            L[j]=1\n            count+=1\n    if count>=K-1:\n        for m in range(N-1):\n            if L[m]==1:\n                height=max(max(A[:m+1])+1,A[m+1])\n                total+=height-A[m+1]\n                A[m+1]=height\n        ans.append(total)\n\nprint(min(ans))",
        "origin_generated_text": "\n```\nN,K=map(int,input().split())\nA=list(map(int,input().split()))\nans=[]\n\nfor i in range(2**(N-1)):\n    L=[0]*(N-1)\n    total=0\n    count=0\n    for j in range(N-1):\n        if ((i>>j)&1):\n            L[j]=1\n            count+=1\n    if count>=K-1:\n        for m in range(N-1):\n            if L[m]==1:\n                height=max(max(A[:m+1])+1,A[m+1])\n                total+=height-A[m+1]\n                A[m+1]=height\n        ans.append(total)\n\nprint(min(ans))```\n "
    },
    {
        "user_id": "u919025034",
        "problem_id": "p03274",
        "submission1_id": "s834465510",
        "code_content": "\nN,K=map(int,input().split())\nX=list(map(int,input().split()))\nif N==1:\n  print(0);exit()\n\nans=float(\"Inf\")\nfor i in range(N-K+1):\n  ans=min(ans, X[i+K-1]-X[i]+ min(abs(X[i+K-1]),abs(X[i]))  )\n\nprint(ans)\n  ",
        "origin_generated_text": "\n```\nN,K=map(int,input().split())\nX=list(map(int,input().split()))\nif N==1:\n  print(0);exit()\n\nans=float(\"Inf\")\nfor i in range(N-K+1):\n  ans=min(ans, X[i+K-1]-X[i]+ min(abs(X[i+K-1]),abs(X[i]))  )\n\nprint(ans)\n  ```\n "
    },
    {
        "user_id": "u336828547",
        "problem_id": "p02553",
        "submission1_id": "s834435282",
        "code_content": "\na,b,c,d=map(int,input().split( ))\nprint(max(a*d,b*c,c*d,b*a))",
        "origin_generated_text": "\n```\na,b,c,d=map(int,input().split( ))\nprint(max(a*d,b*c,c*d,b*a))```\n "
    },
    {
        "user_id": "u991542950",
        "problem_id": "p02553",
        "submission1_id": "s816912975",
        "code_content": "\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*d, a*d, b*c))",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*d, a*d, b*c))```\n "
    },
    {
        "user_id": "u952467214",
        "problem_id": "p03054",
        "submission1_id": "s243999044",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\n\nh, w,n = map(int, input().split())\nr,c = map(int, input().split())\ns = input() \nt = input() \n\n\ncntR = 0\nfor i in range(n):\n    if s[i] == 'R' : cntR+=1\n    if cntR == w-c+1:\n        print('NO')\n        exit()\n    if t[i] == 'L' and cntR>0 : cntR-=1\n\n\ncntL = 0\nfor i in range(n):\n    if s[i] == 'L' : cntL+=1\n    if cntL == c:\n        print('NO')\n        exit()\n    if t[i] == 'R' and cntL>0: cntL-=1\n\n\ncntU = 0\nfor i in range(n):\n    if s[i] == 'U' : cntU+=1\n    if cntU == r:\n        print('NO')\n        exit()\n    if t[i] == 'D' and cntU>0: cntU-=1\n\n\ncntD = 0\nfor i in range(n):\n    if s[i] == 'D' : cntD+=1\n    if cntD == h-r+1:\n        print('NO')\n        exit()\n    if t[i] == 'U' and cntD>0: cntD-=1\n\nprint('YES')\n",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\n\nh, w,n = map(int, input().split())\nr,c = map(int, input().split())\ns = input() \nt = input() \n\n\ncntR = 0\nfor i in range(n):\n    if s[i] == 'R' : cntR+=1\n    if cntR == w-c+1:\n        print('NO')\n        exit()\n    if t[i] == 'L' and cntR>0 : cntR-=1\n\n\ncntL = 0\nfor i in range(n):\n    if s[i] == 'L' : cntL+=1\n    if cntL == c:\n        print('NO')\n        exit()\n    if t[i] == 'R' and cntL>0: cntL-=1\n\n\ncntU = 0\nfor i in range(n):\n    if s[i] == 'U' : cntU+=1\n    if cntU == r:\n        print('NO')\n        exit()\n    if t[i] == 'D' and cntU>0: cntU-=1\n\n\ncntD = 0\nfor i in range(n):\n    if s[i] == 'D' : cntD+=1\n    if cntD == h-r+1:\n        print('NO')\n        exit()\n    if t[i] == 'U' and cntD>0: cntD-=1\n\nprint('YES')\n```\n "
    },
    {
        "user_id": "u489959379",
        "problem_id": "p02912",
        "submission1_id": "s978767979",
        "code_content": "\nimport heapq\nimport math\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nheapq.heapify(q)\n\nfor i in range(n):\n    heapq.heappush(q, -a[i])\n\nfor _ in range(m):\n    b = heapq.heappop(q) / 2\n    heapq.heappush(q, math.ceil(b))\n\nprint(math.ceil(sum(q) * -1))\n",
        "origin_generated_text": "\n```\nimport heapq\nimport math\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nheapq.heapify(q)\n\nfor i in range(n):\n    heapq.heappush(q, -a[i])\n\nfor _ in range(m):\n    b = heapq.heappop(q) / 2\n    heapq.heappush(q, math.ceil(b))\n\nprint(math.ceil(sum(q) * -1))\n```\n "
    },
    {
        "user_id": "u054514819",
        "problem_id": "p02730",
        "submission1_id": "s707271416",
        "code_content": "\nS = input()\ndef check(s):\n  return s[:int((len(s)-1)/2)]==s[int((len(s)-1)/2):][::-1]\nif check(S) and check(S[:int((len(S)-1)/2)]):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nS = input()\ndef check(s):\n  return s[:int((len(s)-1)/2)]==s[int((len(s)-1)/2):][::-1]\nif check(S) and check(S[:int((len(S)-1)/2)]):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u476199965",
        "problem_id": "p03972",
        "submission1_id": "s916800039",
        "code_content": "\nw,h = list(map(int,input().split()))\npq = []\nfor i in range(w):\n    pq.append((int(input()),0))\nfor i in range(h):\n    pq.append((int(input()),1))\npq.sort()\nres = 0\nw+=1\nh+=1\ndic = {0:w,1:h}\n\nfor x in pq:\n    res += dic[1-x[1]]*x[0]\n    dic[x[1]] -= 1\n\nprint(res)\n",
        "origin_generated_text": "\n```\nw,h = list(map(int,input().split()))\npq = []\nfor i in range(w):\n    pq.append((int(input()),0))\nfor i in range(h):\n    pq.append((int(input()),1))\npq.sort()\nres = 0\nw+=1\nh+=1\ndic = {0:w,1:h}\n\nfor x in pq:\n    res += dic[1-x[1]]*x[0]\n    dic[x[1]] -= 1\n\nprint(res)\n```\n "
    },
    {
        "user_id": "u368016155",
        "problem_id": "p03023",
        "submission1_id": "s649095289",
        "code_content": "\nN = int(input())\nprint(180*(N-3))",
        "origin_generated_text": "\n```\nN = int(input())\nprint(180*(N-3))```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p02665",
        "submission1_id": "s589490096",
        "code_content": "\nimport sys\nfrom math import factorial\nfrom collections import Counter\nfrom fractions import Fraction\nimport heapq, bisect, fractions\nimport math\nimport itertools\nsys.setrecursionlimit(10 ** 5 + 10)\nINF = 10**15 +5\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\nMOD = 10**9 + 7\n\nn = INT()\na = LIST()\nc = [1]*(n+1)\nfor i in range(1, n+1):\n    c[i] = (c[i-1]-a[i-1])*2\nif a[n]>c[n]:\n    print(-1)\n    sys.exit()\nb = [0]*(n+1)\nres = [0]*(n+1)\nb[n] = a[n]\nres[n] = a[n]\nfor i in range(n-1, -1, -1):\n    if (c[i]-a[i])*2 <res[i+1]:\n        print(-1)\n        sys.exit()\n    b[i] = min(c[i]-a[i], res[i+1])\n    res[i] = a[i] + b[i]\nprint(sum(res)-1)",
        "origin_generated_text": "\n```\nimport sys\nfrom math import factorial\nfrom collections import Counter\nfrom fractions import Fraction\nimport heapq, bisect, fractions\nimport math\nimport itertools\nsys.setrecursionlimit(10 ** 5 + 10)\nINF = 10**15 +5\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\nMOD = 10**9 + 7\n\nn = INT()\na = LIST()\nc = [1]*(n+1)\nfor i in range(1, n+1):\n    c[i] = (c[i-1]-a[i-1])*2\nif a[n]>c[n]:\n    print(-1)\n    sys.exit()\nb = [0]*(n+1)\nres = [0]*(n+1)\nb[n] = a[n]\nres[n] = a[n]\nfor i in range(n-1, -1, -1):\n    if (c[i]-a[i])*2 <res[i+1]:\n        print(-1)\n        sys.exit()\n    b[i] = min(c[i]-a[i], res[i+1])\n    res[i] = a[i] + b[i]\nprint(sum(res)-1)```\n "
    },
    {
        "user_id": "u638057737",
        "problem_id": "p03625",
        "submission1_id": "s463672501",
        "code_content": "\nN = int(input())\nfreq = {}\narr = map(int,input().split())\nfor i in arr:\n    try:\n        freq[i] += 1\n    except KeyError:\n        freq[i] = 1\n\nto_multiply = []      \nfor i in sorted(freq.keys(),reverse=True):\n    if freq[i] >= 4:\n        to_multiply.append(i)\nif len(to_multiply) >= 2:\n    print(to_multiply[0] * to_multiply[1])\nelse:\n    print(\"0\")\n",
        "origin_generated_text": "\n```\nN = int(input())\nfreq = {}\narr = map(int,input().split())\nfor i in arr:\n    try:\n        freq[i] += 1\n    except KeyError:\n        freq[i] = 1\n\nto_multiply = []      \nfor i in sorted(freq.keys(),reverse=True):\n    if freq[i] >= 4:\n        to_multiply.append(i)\nif len(to_multiply) >= 2:\n    print(to_multiply[0] * to_multiply[1])\nelse:\n    print(\"0\")\n```\n "
    },
    {
        "user_id": "u955251526",
        "problem_id": "p03096",
        "submission1_id": "s769041533",
        "code_content": "\nn = int(input())\nz = []\npre = 0\nfor _ in range(n):\n    i = int(input())\n    if i != pre:\n        z.append(i)\n    pre = i\nn = len(z)\ndp = [1] * (n+1)\ndpp = [0] * 2 * 10 ** 5\nfor i in range(n):\n    dp[i+1] = dp[i] + dpp[z[i]-1]\n    dpp[z[i]-1] += dp[i+1] * (i+1)\n    dp[i+1] %= 10 ** 9 + 7\nprint(dp[n])",
        "origin_generated_text": "\n```\nn = int(input())\nz = []\npre = 0\nfor _ in range(n):\n    i = int(input())\n    if i != pre:\n        z.append(i)\n    pre = i\nn = len(z)\ndp = [1] * (n+1)\ndpp = [0] * 2 * 10 ** 5\nfor i in range(n):\n    dp[i+1] = dp[i] + dpp[z[i]-1]\n    dpp[z[i]-1] += dp[i+1] * (i+1)\n    dp[i+1] %= 10 ** 9 + 7\nprint(dp[n])```\n "
    },
    {
        "user_id": "u983918956",
        "problem_id": "p03959",
        "submission1_id": "s007367178",
        "code_content": "\nmod = 10 ** 9 + 7\n\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nH = [0] * N\nfor i in range(N - 1, -1, -1):\n    if T[i] < T[i - 1]:\n        H[i - 1] = T[i]\nfor i in range(1, N):\n    if A[i] > A[i - 1]:\n        if H[i] == 0 or H[i] == A[i]:\n            H[i] = A[i]\n        else:\n            print(0)\n            exit()\n\nans = 1\nfor h, t, a in zip(H, T, A):\n    if h == 0:\n        ans *= min(t, a)\n        ans %= mod\nprint(ans - 1)",
        "origin_generated_text": "\n```\nmod = 10 ** 9 + 7\n\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nH = [0] * N\nfor i in range(N - 1, -1, -1):\n    if T[i] < T[i - 1]:\n        H[i - 1] = T[i]\nfor i in range(1, N):\n    if A[i] > A[i - 1]:\n        if H[i] == 0 or H[i] == A[i]:\n            H[i] = A[i]\n        else:\n            print(0)\n            exit()\n\nans = 1\nfor h, t, a in zip(H, T, A):\n    if h == 0:\n        ans *= min(t, a)\n        ans %= mod\nprint(ans - 1)```\n "
    },
    {
        "user_id": "u094103573",
        "problem_id": "p02730",
        "submission1_id": "s188723257",
        "code_content": "\nif __name__ == '__main__':\n    a = input()\n    a_len = len(a)\n    \n    top_s = a[:int((a_len-1)/2)]\n    tail_s = a[int((a_len+3)/2)-1:]\n    if top_s == ''.join(list(reversed(top_s))) and tail_s == ''.join(list(reversed(tail_s))):\n        print('Yes')\n    else:\n        print('No')",
        "origin_generated_text": "\n```\nif __name__ == '__main__':\n    a = input()\n    a_len = len(a)\n    \n    top_s = a[:int((a_len-1)/2)]\n    tail_s = a[int((a_len+3)/2)-1:]\n    if top_s == ''.join(list(reversed(top_s))) and tail_s == ''.join(list(reversed(tail_s))):\n        print('Yes')\n    else:\n        print('No')```\n "
    },
    {
        "user_id": "u952669998",
        "problem_id": "p02727",
        "submission1_id": "s014410933",
        "code_content": "\nx,y,a,b,c = list(map(int,input().split()))\n\np = sorted(list(map(int,input().split())),reverse=True)\nq = sorted(list(map(int,input().split())),reverse=True)\nr = sorted(list(map(int,input().split())),reverse=True)\n\nprint(sum(p[0:x] + q[0:y] + r[0:c]))",
        "origin_generated_text": "\n```\nx,y,a,b,c = list(map(int,input().split()))\n\np = sorted(list(map(int,input().split())),reverse=True)\nq = sorted(list(map(int,input().split())),reverse=True)\nr = sorted(list(map(int,input().split())),reverse=True)\n\nprint(sum(p[0:x] + q[0:y] + r[0:c]))```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s663117803",
        "code_content": "\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i < 0 or j < 0 or k < 0:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(1e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i < 0 or j < 0 or k < 0:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(1e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))```\n "
    },
    {
        "user_id": "u373723818",
        "problem_id": "p03036",
        "submission1_id": "s000581732",
        "code_content": "\nr, D, x_2000= map(int, input().split(' '))\nxs = [x_2000]\nfor x in range(10):\n\txs.append(r*xs[len(xs)-1]-D)\nprint('\\n'.join(map(str, xs)))",
        "origin_generated_text": "\n```\nr, D, x_2000= map(int, input().split(' '))\nxs = [x_2000]\nfor x in range(10):\n\txs.append(r*xs[len(xs)-1]-D)\nprint('\\n'.join(map(str, xs)))```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00026",
        "submission1_id": "s847892407",
        "code_content": "\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1,1] for b in [-1, 1] if a**2+b**2==1]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int,i.split()))\n        mas[y][x] += 1\n        for j in n3:\n            try:\n                mas[y+j[1]][x+j[0]] += 1\n            except IndexError:\n                continue\n    except:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))",
        "origin_generated_text": "\n```\nimport sys\nn1 = [[0, 1], [1, 0], [-1, 0], [0, -1]]\nn2 = n1 + [[a, b] for a in [-1,1] for b in [-1, 1] if a**2+b**2==1]\nn3 = n2 + [[a*2, b*2] for a, b in n1]\nmas = [[0]*10 for i in range(10)]\nfor i in sys.stdin:\n    try:\n        x, y, a = list(map(int,i.split()))\n        mas[y][x] += 1\n        for j in n3:\n            try:\n                mas[y+j[1]][x+j[0]] += 1\n            except IndexError:\n                continue\n    except:\n        break\nprint(len([i for x in mas for i in x if not i]))\nprint(max([max(v) for v in mas]))```\n "
    },
    {
        "user_id": "u641357568",
        "problem_id": "p02407",
        "submission1_id": "s674775211",
        "code_content": "\nimport sys\n\nlength = int(sys.stdin.readline())\nnum_seq = [ int(num) for num in sys.stdin.readline().split() ][::-1]\n\nfor i in range(length-1):\n    print(num_seq[i],end=' ')\nprint(num_seq[length-1],end='')\n",
        "origin_generated_text": "\n```\nimport sys\n\nlength = int(sys.stdin.readline())\nnum_seq = [ int(num) for num in sys.stdin.readline().split() ][::-1]\n\nfor i in range(length-1):\n    print(num_seq[i],end=' ')\nprint(num_seq[length-1],end='')\n```\n "
    },
    {
        "user_id": "u445511055",
        "problem_id": "p03477",
        "submission1_id": "s383503741",
        "code_content": "\n\n\n\ndef main():\n    \n    a, b, c, d = map(int, input().split())\n    if a+b < c+d:\n        print(\"Right\")\n    elif a+b == c+d:\n        print(\"Balanced\")\n    else:\n        print(\"Left\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\n\n\n\ndef main():\n    \n    a, b, c, d = map(int, input().split())\n    if a+b < c+d:\n        print(\"Right\")\n    elif a+b == c+d:\n        print(\"Balanced\")\n    else:\n        print(\"Left\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s047812315",
        "code_content": "\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= (ra + rb)**2:\n        if d <= (ra - rb)**2:\n            print(2)\n        elif d <= (rb - ra)**2:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= (ra + rb)**2:\n        if d <= (ra - rb)**2:\n            print(2)\n        elif d <= (rb - ra)**2:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u864197622",
        "problem_id": "p03677",
        "submission1_id": "s607910168",
        "code_content": "\nfrom itertools import accumulate\ndef acc(X): return list(accumulate(X))\n\nN, M = map(int, input().split())\nA = [int(a)-1 for a in input().split()]\n\nX = [0] * M \nY = [0] * M \n\ndef tri(l, r, a = 1):\n    if l < M:\n        Y[l] += a\n    if r + 1 < M:\n        Y[r+1] -= a\n        X[r+1] -= (r-l+1) * a\n\ndef box(l, r, a = 1):\n    if l < M:\n        X[l] += a\n    if r + 1< M:\n        X[r+1] -= a\n    \ndef calc(a, b):\n    if a <= b - 2:\n        tri(a+2, b)\n    elif a > b and a <= b + M - 2:\n        tri(0, b)\n        box(0, b, b-a)\n        \n    \n\ndef rev():\n    ret = acc(Y)\n    ret = [X[i] + ret[i] for i in range(M)]\n    return acc(ret)\n    \nans = 0\nfor i in range(1, N):\n    ans += (A[i] - A[i-1]) % M\n    calc(A[i-1], A[i])\n\nX = rev()\n\nans -= max(X)\nprint(ans)",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\ndef acc(X): return list(accumulate(X))\n\nN, M = map(int, input().split())\nA = [int(a)-1 for a in input().split()]\n\nX = [0] * M \nY = [0] * M \n\ndef tri(l, r, a = 1):\n    if l < M:\n        Y[l] += a\n    if r + 1 < M:\n        Y[r+1] -= a\n        X[r+1] -= (r-l+1) * a\n\ndef box(l, r, a = 1):\n    if l < M:\n        X[l] += a\n    if r + 1< M:\n        X[r+1] -= a\n    \ndef calc(a, b):\n    if a <= b - 2:\n        tri(a+2, b)\n    elif a > b and a <= b + M - 2:\n        tri(0, b)\n        box(0, b, b-a)\n        \n    \n\ndef rev():\n    ret = acc(Y)\n    ret = [X[i] + ret[i] for i in range(M)]\n    return acc(ret)\n    \nans = 0\nfor i in range(1, N):\n    ans += (A[i] - A[i-1]) % M\n    calc(A[i-1], A[i])\n\nX = rev()\n\nans -= max(X)\nprint(ans)```\n "
    },
    {
        "user_id": "u966378542",
        "problem_id": "p03296",
        "submission1_id": "s080223372",
        "code_content": "\nN = input()\ndata = input().split()\nbef = -1\ncount = 0\nresult = 0\n\nfor i in range(len(data)):\n\tt = int(data[i])\n\tif bef != t:\n\t\tif count > 1:\n\t\t\tresult += int(count / 2)\n\t\tcount = 1\n\t\tbef = t\n\telse:\n\t\tcount += 1\n\nif count > 1:\n\tresult += int(count / 2)\nprint(result)",
        "origin_generated_text": "\n```\nN = input()\ndata = input().split()\nbef = -1\ncount = 0\nresult = 0\n\nfor i in range(len(data)):\n\tt = int(data[i])\n\tif bef != t:\n\t\tif count > 1:\n\t\t\tresult += int(count / 2)\n\t\tcount = 1\n\t\tbef = t\n\telse:\n\t\tcount += 1\n\nif count > 1:\n\tresult += int(count / 2)\nprint(result)```\n "
    },
    {
        "user_id": "u393512980",
        "problem_id": "p03326",
        "submission1_id": "s568910407",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nxyz = [None] * N\nfor i in range(N):\n    _x, _y, _z = map(int, input().split())\n    xyz[i] = [_x, _y, _z]\nans = 0\nfor i in range(4):\n    for j in range(4):\n        for k in range(4):\n            sx, sy, sz = (-1)**i, (-1)**j, (-1)**k\n            xyz.sort(key = lambda v : -(sx * v[0] + sy * v[1] + sz * v[2]))\n            X, Y, Z = 0, 0, 0\n            for i in range(M):\n                X += xyz[i][0]\n                Y += xyz[i][1]\n                Z += xyz[i][2]\n            ans = max(ans, abs(X) + abs(Y) + abs(Z))\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nN, M = map(int, input().split())\nxyz = [None] * N\nfor i in range(N):\n    _x, _y, _z = map(int, input().split())\n    xyz[i] = [_x, _y, _z]\nans = 0\nfor i in range(4):\n    for j in range(4):\n        for k in range(4):\n            sx, sy, sz = (-1)**i, (-1)**j, (-1)**k\n            xyz.sort(key = lambda v : -(sx * v[0] + sy * v[1] + sz * v[2]))\n            X, Y, Z = 0, 0, 0\n            for i in range(M):\n                X += xyz[i][0]\n                Y += xyz[i][1]\n                Z += xyz[i][2]\n            ans = max(ans, abs(X) + abs(Y) + abs(Z))\nprint(ans)```\n "
    },
    {
        "user_id": "u869265610",
        "problem_id": "p03206",
        "submission1_id": "s071277962",
        "code_content": "\na=int(input())\nprint(\"Christmas\"+\"Eve\"*(25-a))",
        "origin_generated_text": "\n```\na=int(input())\nprint(\"Christmas\"+\"Eve\"*(25-a))```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p04019",
        "submission1_id": "s718686408",
        "code_content": "\ns = list(input())\nN = 0\nW = 0\nS = 0\nE = 0\nfor i in s:\n  if i == 'N':\n    N = 1\n  if i == 'W':\n    W = 1\n  if i == 'S':\n    S = 1\n  if i == 'E':\n    E = 1\nif ((N == 0 and S == 0) or (N == 1 and S == 1)) and ((W == 0 and E == 0) or (W == 1 and E == 1)):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ns = list(input())\nN = 0\nW = 0\nS = 0\nE = 0\nfor i in s:\n  if i == 'N':\n    N = 1\n  if i == 'W':\n    W = 1\n  if i == 'S':\n    S = 1\n  if i == 'E':\n    E = 1\nif ((N == 0 and S == 0) or (N == 1 and S == 1)) and ((W == 0 and E == 0) or (W == 1 and E == 1)):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u910295650",
        "problem_id": "p03102",
        "submission1_id": "s903620377",
        "code_content": "\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\nA=[]\nans=0\na=0\nfor i in range(N):\n    A.append([int(j) for j in input().split()])\nfor i in range(N):\n    a=0\n    for j in range(M):\n         a+=A[i][j]*B[j]\n    if a+C>0:\n        ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\nN,M,C=map(int, input().split())\nB=list(map(int, input().split()))\nA=[]\nans=0\na=0\nfor i in range(N):\n    A.append([int(j) for j in input().split()])\nfor i in range(N):\n    a=0\n    for j in range(M):\n         a+=A[i][j]*B[j]\n    if a+C>0:\n        ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u832039789",
        "problem_id": "p03318",
        "submission1_id": "s082526760",
        "code_content": "\nres = []\nfor digit in range(1,16):\n    if digit<=3:\n        for i in range(2,11):\n            res.append(10**(digit-1)*i-1)\n    elif 4<=digit<=12:\n        for i in range(11,(digit-2)*10):\n            res.append(i*10**(digit-2)-1)\n        for i in range(digit-2,11):\n            res.append(i*10**(digit-1)-1)\n    elif digit==15:\n        for i in range(101,110):\n            res.append(i*10**(digit-3)-1)\n        for i in range(11,101):\n            res.append(i*10**(digit-2)-1)\n    else:\n        for i in range(11,101):\n            res.append(i*10**(digit-2)-1)\nfor i in res:\n    print(i)\n",
        "origin_generated_text": "\n```\nres = []\nfor digit in range(1,16):\n    if digit<=3:\n        for i in range(2,11):\n            res.append(10**(digit-1)*i-1)\n    elif 4<=digit<=12:\n        for i in range(11,(digit-2)*10):\n            res.append(i*10**(digit-2)-1)\n        for i in range(digit-2,11):\n            res.append(i*10**(digit-1)-1)\n    elif digit==15:\n        for i in range(101,110):\n            res.append(i*10**(digit-3)-1)\n        for i in range(11,101):\n            res.append(i*10**(digit-2)-1)\n    else:\n        for i in range(11,101):\n            res.append(i*10**(digit-2)-1)\nfor i in res:\n    print(i)\n```\n "
    },
    {
        "user_id": "u071868443",
        "problem_id": "p03998",
        "submission1_id": "s802018438",
        "code_content": "\nsa = list(str(input()))\nsb = list(str(input()))\nsc = list(str(input()))\npa, pb, pc = 1, 1, 1\n\nread = sa[0]\nwhile True:\n  if read == 'a':\n    pa += 1\n    if pa == len(sa):\n      print('A')\n      break\n    read = sa[pa]\n  elif read == 'b':\n    pb += 1\n    if pb == len(sb):\n      print('B')\n      break\n    read = sb[pb]\n  else:\n    pc += 1\n    if pc == len(sc):\n      print('C')\n      break\n    read = sc[pc]\n",
        "origin_generated_text": "\n```\nsa = list(str(input()))\nsb = list(str(input()))\nsc = list(str(input()))\npa, pb, pc = 1, 1, 1\n\nread = sa[0]\nwhile True:\n  if read == 'a':\n    pa += 1\n    if pa == len(sa):\n      print('A')\n      break\n    read = sa[pa]\n  elif read == 'b':\n    pb += 1\n    if pb == len(sb):\n      print('B')\n      break\n    read = sb[pb]\n  else:\n    pc += 1\n    if pc == len(sc):\n      print('C')\n      break\n    read = sc[pc]\n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02327",
        "submission1_id": "s680898323",
        "code_content": "\n\n\n\n\n\nimport sys\n\n\n\n\n\nclass Rectangle(object):\n    __slots__ = ('pos', 'height')\n\n    def __init__(self, pos=float('inf'), height=-1):\n        \n        self.pos = pos\n        self.height = height\n\n\ndef gen_rec_info(_carpet_info):\n    dp = [[0] * W for _ in range(H)]\n\n    for i in range(H):\n        for j in range(W):\n            if int(_carpet_info[i][j]):\n                dp[i][j] = dp[i - 1][j] + 1\n\n    return dp\n\n\ndef get_largest_area(_hi_info):\n    hi_max_area = 0\n    rec_stack = []\n    for i, v in enumerate(_hi_info):\n        rect = Rectangle(pos=i, height=int(v))\n        if not rec_stack:\n            rec_stack.append(rect)\n        else:\n            last_height = rec_stack[-1].height\n            if last_height < rect.height:\n                rec_stack.append(rect)\n            elif last_height > rect.height:\n                target = i\n                while rec_stack and rec_stack[-1].height >= rect.height:\n                    pre = rec_stack.pop()\n                    area = pre.height * (i - pre.pos)\n                    hi_max_area = max(hi_max_area, area)\n                rect.pos = target\n                rec_stack.append(rect)\n\n    return hi_max_area\n\n\ndef solve(_rec_info):\n    overall_max_area = 0\n    for hi_info in _rec_info:\n        overall_max_area = max(overall_max_area, get_largest_area(hi_info))\n\n    return overall_max_area\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    H, W = map(int, _input[0].split())\n    carpet_info = list(map(lambda x: x.split(), _input[1:]))\n    \n\n    rec_info = gen_rec_info(carpet_info)\n    ans = solve(rec_info)\n    print(ans)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\n\n\n\n\n\nclass Rectangle(object):\n    __slots__ = ('pos', 'height')\n\n    def __init__(self, pos=float('inf'), height=-1):\n        \n        self.pos = pos\n        self.height = height\n\n\ndef gen_rec_info(_carpet_info):\n    dp = [[0] * W for _ in range(H)]\n\n    for i in range(H):\n        for j in range(W):\n            if int(_carpet_info[i][j]):\n                dp[i][j] = dp[i - 1][j] + 1\n\n    return dp\n\n\ndef get_largest_area(_hi_info):\n    hi_max_area = 0\n    rec_stack = []\n    for i, v in enumerate(_hi_info):\n        rect = Rectangle(pos=i, height=int(v))\n        if not rec_stack:\n            rec_stack.append(rect)\n        else:\n            last_height = rec_stack[-1].height\n            if last_height < rect.height:\n                rec_stack.append(rect)\n            elif last_height > rect.height:\n                target = i\n                while rec_stack and rec_stack[-1].height >= rect.height:\n                    pre = rec_stack.pop()\n                    area = pre.height * (i - pre.pos)\n                    hi_max_area = max(hi_max_area, area)\n                rect.pos = target\n                rec_stack.append(rect)\n\n    return hi_max_area\n\n\ndef solve(_rec_info):\n    overall_max_area = 0\n    for hi_info in _rec_info:\n        overall_max_area = max(overall_max_area, get_largest_area(hi_info))\n\n    return overall_max_area\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    H, W = map(int, _input[0].split())\n    carpet_info = list(map(lambda x: x.split(), _input[1:]))\n    \n\n    rec_info = gen_rec_info(carpet_info)\n    ans = solve(rec_info)\n    print(ans)```\n "
    },
    {
        "user_id": "u705427370",
        "problem_id": "p02880",
        "submission1_id": "s988790729",
        "code_content": "\nn = int(input())\n\nL = set()\nfor i in range(1,10):\n    for j in range(1,10):\n        result = i*j\n        L.add(result)\nif n in L:\n    print(\"Yes\")\nelif n not in L:\n    print(\"No\")",
        "origin_generated_text": "\n```\nn = int(input())\n\nL = set()\nfor i in range(1,10):\n    for j in range(1,10):\n        result = i*j\n        L.add(result)\nif n in L:\n    print(\"Yes\")\nelif n not in L:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u037098269",
        "problem_id": "p03479",
        "submission1_id": "s200733280",
        "code_content": "\nx,y = map(int, input().split())\ncount = 1\nwhile x*2 <= y:\n    x = x*2\n    count += 1\nprint(count)",
        "origin_generated_text": "\n```\nx,y = map(int, input().split())\ncount = 1\nwhile x*2 <= y:\n    x = x*2\n    count += 1\nprint(count)```\n "
    },
    {
        "user_id": "u485319545",
        "problem_id": "p03036",
        "submission1_id": "s400511684",
        "code_content": "\nr,D,x_2000 = map(int,input().split())\n\n\nX=[x_2000]\nfor i in range(10):\n    X.append(r*X[i] - D)\n\n\nprint(*X[1:],sep=\"\\n\")\n    ",
        "origin_generated_text": "\n```\nr,D,x_2000 = map(int,input().split())\n\n\nX=[x_2000]\nfor i in range(10):\n    X.append(r*X[i] - D)\n\n\nprint(*X[1:],sep=\"\\n\")\n    ```\n "
    },
    {
        "user_id": "u228232845",
        "problem_id": "p03998",
        "submission1_id": "s284671020",
        "code_content": "\nfrom collections import deque\nimport sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nsa = deque(list(S()))\nsb = deque(list(S()))\nsc = deque(list(S()))\n\nturn = 'a'\nwhile True:\n    if len(sa) == 0:\n        print('A')\n        break\n    if len(sb) == 0:\n        print('B')\n        break\n    if len(sc) == 0:\n        print('C')\n        break\n    if turn == 'a':\n        turn = sa.popleft()\n    if turn == 'b':\n        turn = sb.popleft()\n    if turn == 'c':\n        turn = sc.popleft()\n\n",
        "origin_generated_text": "\n```\nfrom collections import deque\nimport sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nsa = deque(list(S()))\nsb = deque(list(S()))\nsc = deque(list(S()))\n\nturn = 'a'\nwhile True:\n    if len(sa) == 0:\n        print('A')\n        break\n    if len(sb) == 0:\n        print('B')\n        break\n    if len(sc) == 0:\n        print('C')\n        break\n    if turn == 'a':\n        turn = sa.popleft()\n    if turn == 'b':\n        turn = sb.popleft()\n    if turn == 'c':\n        turn = sc.popleft()\n\n```\n "
    },
    {
        "user_id": "u458617779",
        "problem_id": "p03734",
        "submission1_id": "s864034470",
        "code_content": "\nints = input().split(\" \")\nN = int(ints[0])\nmaxW = int(ints[1])\nints = input().split(\" \")\na = int(ints[0])\nb = int(ints[1])\nweight = [a, a+1, a+2, a+3] \nva = [[b],[],[],[]]\nfor i in range(1, N):\n\tins = input().split(\" \")\n\tw = int(ins[0])\n\tv = int(ins[1])\n\tfor j in range(0, 4):\n\t\tif w == weight[j]:\n\t\t\tva[j].append(v)\nva.sort(key=len)\nsum = [[0],[0],[0],[0]]\nfor j in range(0, 4):\n\tfor i in range(1, len(va[j])):\n\t\ttry:\n\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n\t\texcept:\n\t\t\tpass\nans = 0\nfor i in range(0, len(va[0])):\n\tfor j in range(0, len(va[1])):\n\t\tfor k in range(0, len(va[2])):\n\t\t\tfor l in range(0, len(va[3])):\n\t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n\t\t\t\tif(sumw <= maxW):\n\t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\nprint(ans)",
        "origin_generated_text": "\n```\nints = input().split(\" \")\nN = int(ints[0])\nmaxW = int(ints[1])\nints = input().split(\" \")\na = int(ints[0])\nb = int(ints[1])\nweight = [a, a+1, a+2, a+3] \nva = [[b],[],[],[]]\nfor i in range(1, N):\n\tins = input().split(\" \")\n\tw = int(ins[0])\n\tv = int(ins[1])\n\tfor j in range(0, 4):\n\t\tif w == weight[j]:\n\t\t\tva[j].append(v)\nva.sort(key=len)\nsum = [[0],[0],[0],[0]]\nfor j in range(0, 4):\n\tfor i in range(1, len(va[j])):\n\t\ttry:\n\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n\t\texcept:\n\t\t\tpass\nans = 0\nfor i in range(0, len(va[0])):\n\tfor j in range(0, len(va[1])):\n\t\tfor k in range(0, len(va[2])):\n\t\t\tfor l in range(0, len(va[3])):\n\t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n\t\t\t\tif(sumw <= maxW):\n\t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\nprint(ans)```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s860102445",
        "code_content": "\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s*3\nwhile True:\n    if len(new_s) > len(t):\n        s = new_s\n        break\n    new_s += s\n\ns = s*3\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\nprint(ans1 if ans1 != 0 else -1)",
        "origin_generated_text": "\n```\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s*3\nwhile True:\n    if len(new_s) > len(t):\n        s = new_s\n        break\n    new_s += s\n\ns = s*3\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\nprint(ans1 if ans1 != 0 else -1)```\n "
    },
    {
        "user_id": "u647999897",
        "problem_id": "p03625",
        "submission1_id": "s758070047",
        "code_content": "\nfrom collections import Counter\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    cnter = Counter(A)\n    cnter_list = list(cnter.items())\n    cnter_list.sort(key=lambda x:x[0], reverse=True)\n\n    double_cnt = 0\n    ans = 1\n    for elem in cnter_list:\n        if elem[1] >= 2:\n            double_cnt += 1\n            ans *= elem[0]\n        if double_cnt >= 2:\n            break\n    else:\n        print(0)\n        return\n    \n    print(ans)\n\nif __name__ == '__main__':\n    solve()",
        "origin_generated_text": "\n```\nfrom collections import Counter\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    cnter = Counter(A)\n    cnter_list = list(cnter.items())\n    cnter_list.sort(key=lambda x:x[0], reverse=True)\n\n    double_cnt = 0\n    ans = 1\n    for elem in cnter_list:\n        if elem[1] >= 2:\n            double_cnt += 1\n            ans *= elem[0]\n        if double_cnt >= 2:\n            break\n    else:\n        print(0)\n        return\n    \n    print(ans)\n\nif __name__ == '__main__':\n    solve()```\n "
    },
    {
        "user_id": "u691238759",
        "problem_id": "p03036",
        "submission1_id": "s696618979",
        "code_content": "\nINPUT = input().split()\nr = int(INPUT[0])\nD = int(INPUT[1])\nX = int(INPUT[2])\n\nXX = []\n\nans = \"\"\nXX.append(X)\n\ni = 0\nwhile i < 10:\n    v = r * XX[i] - D\n    XX.append(v)\n    ans = ans + str(XX[i + 1]) + '\\n'\n    i += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nINPUT = input().split()\nr = int(INPUT[0])\nD = int(INPUT[1])\nX = int(INPUT[2])\n\nXX = []\n\nans = \"\"\nXX.append(X)\n\ni = 0\nwhile i < 10:\n    v = r * XX[i] - D\n    XX.append(v)\n    ans = ans + str(XX[i + 1]) + '\\n'\n    i += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03970",
        "submission1_id": "s531556877",
        "code_content": "\nS = input()\nT = \"CODEFESTIVAL2016\"\nc = 0\nfor i in range(16):\n  if S[i]!=T[i]:\n    c += 1\nprint(c)",
        "origin_generated_text": "\n```\nS = input()\nT = \"CODEFESTIVAL2016\"\nc = 0\nfor i in range(16):\n  if S[i]!=T[i]:\n    c += 1\nprint(c)```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03080",
        "submission1_id": "s986830621",
        "code_content": "\nN=int(input())\ns=input()\nn=0\nfor i in range(N):\n     if s[i]=='R':\n          n+=1\nif N/2<n:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN=int(input())\ns=input()\nn=0\nfor i in range(N):\n     if s[i]=='R':\n          n+=1\nif N/2<n:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u840988663",
        "problem_id": "p02886",
        "submission1_id": "s504259615",
        "code_content": "\nn=int(input())\nd=list(map(int,input().split()))\nkotae=0\nfor i in range(n):\n  for j in range(i+1,n):\n    kotae=kotae+d[i]*d[j]\nprint(kotae)",
        "origin_generated_text": "\n```\nn=int(input())\nd=list(map(int,input().split()))\nkotae=0\nfor i in range(n):\n  for j in range(i+1,n):\n    kotae=kotae+d[i]*d[j]\nprint(kotae)```\n "
    },
    {
        "user_id": "u209620426",
        "problem_id": "p03264",
        "submission1_id": "s435216119",
        "code_content": "\nimport math\n\nk = int(input())\n\nif k%2:\n    print(math.floor(k/2)*math.ceil(k/2))\nelse:\n    print(int((k/2)**2))",
        "origin_generated_text": "\n```\nimport math\n\nk = int(input())\n\nif k%2:\n    print(math.floor(k/2)*math.ceil(k/2))\nelse:\n    print(int((k/2)**2))```\n "
    },
    {
        "user_id": "u566159623",
        "problem_id": "p02727",
        "submission1_id": "s496517204",
        "code_content": "\nx, y, a, b, c = map(int, input().split())\np =list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\np = sorted(p)\nq = sorted(q)\n\np = p[(len(p)-x):]\nq = q[(len(q)-y):]\nr=r+p+q\nr = sorted(r)\nprint(sum(r[(len(r)-x-y):]))\n",
        "origin_generated_text": "\n```\nx, y, a, b, c = map(int, input().split())\np =list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\np = sorted(p)\nq = sorted(q)\n\np = p[(len(p)-x):]\nq = q[(len(q)-y):]\nr=r+p+q\nr = sorted(r)\nprint(sum(r[(len(r)-x-y):]))\n```\n "
    },
    {
        "user_id": "u855380359",
        "problem_id": "p03264",
        "submission1_id": "s086505323",
        "code_content": "\nk = int(input())\n \nif k%2 == 0:\n  print(k*k\nelse:\n  print(k**2",
        "origin_generated_text": "\n```\nk = int(input())\n \nif k%2 == 0:\n  print(k*k\nelse:\n  print(k**2```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p04017",
        "submission1_id": "s120109688",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if par[i][x] < y:\n            k += 1<<i\n            x = par[i][x]\n        elif par[i][x] >= y:\n            k += 1<<i\n    return k\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    print(hoge(a,b))",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect\n\nn = int(input())\nx = list(map(int, input().split()))\nl = int(input())\n\nm = 20\npar = [[-1]*n for i in range(m)]\n\nfor i in range(n):\n    j = bisect(x, x[i]+l)-1\n    par[0][i] = j\n\nfor i in range(m-1):\n    for j in range(n):\n        par[i+1][j]=par[i][par[i][j]]\n\ndef hoge(x, y):\n    k = 0\n    for i in range(m)[::-1]:\n        if par[i][x] < y:\n            k += 1<<i\n            x = par[i][x]\n        elif par[i][x] >= y:\n            k += 1<<i\n    return k\n\nq = int(input())\nans = []\nfor i in range(q):\n    a,b = map(int, input().split())\n    a,b = a-1,b-1\n    if a > b:\n        a,b = b,a\n    print(hoge(a,b))```\n "
    },
    {
        "user_id": "u994988729",
        "problem_id": "p03734",
        "submission1_id": "s128842224",
        "code_content": "\nfrom itertools import accumulate\n\nN, W = map(int, input().split())\nd = {i: [] for i in range(4)}\nfor i in range(N):\n    w, v = map(int, input().split())\n    if i == 0:\n        w0 = w\n    w -= w0\n    d[w].append(v)\n\nwv = [[] for _ in range(4)]\nfor k, v in d.items():\n    v.sort(reverse=True)\n    wv[k] = tuple(accumulate(v))\n\n\n\nans = 0\nfor c0, v0 in enumerate(wv[0]):\n    for c1, v1 in enumerate(wv[1]):\n        for c2, v2 in enumerate(wv[2]):\n            for c3, v3 in enumerate(wv[3]):\n                weight = w0 * (c0 + c1 + c2 + c3) + c1 + c2 * 2 + c3 * 3\n                val = v0 + v1 + v2 + v3\n                if weight > W:\n                    continue\n                ans = max(ans, val)\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\nN, W = map(int, input().split())\nd = {i: [] for i in range(4)}\nfor i in range(N):\n    w, v = map(int, input().split())\n    if i == 0:\n        w0 = w\n    w -= w0\n    d[w].append(v)\n\nwv = [[] for _ in range(4)]\nfor k, v in d.items():\n    v.sort(reverse=True)\n    wv[k] = tuple(accumulate(v))\n\n\n\nans = 0\nfor c0, v0 in enumerate(wv[0]):\n    for c1, v1 in enumerate(wv[1]):\n        for c2, v2 in enumerate(wv[2]):\n            for c3, v3 in enumerate(wv[3]):\n                weight = w0 * (c0 + c1 + c2 + c3) + c1 + c2 * 2 + c3 * 3\n                val = v0 + v1 + v2 + v3\n                if weight > W:\n                    continue\n                ans = max(ans, val)\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u096983897",
        "problem_id": "p02912",
        "submission1_id": "s495725218",
        "code_content": "\nimport heapq\n\nmnum, gnum = map(int, input().split())\narray = list(map(int, input().split()))\n\nheapq.heapify(array)\n\nfor i in range(gnum-1):\n\ttemp = heapq.heappop(array)\n\ttemp = temp/2\n\theapq.heappush(array, temp)\n\nprint(sum(array))",
        "origin_generated_text": "\n```\nimport heapq\n\nmnum, gnum = map(int, input().split())\narray = list(map(int, input().split()))\n\nheapq.heapify(array)\n\nfor i in range(gnum-1):\n\ttemp = heapq.heappop(array)\n\ttemp = temp/2\n\theapq.heappush(array, temp)\n\nprint(sum(array))```\n "
    },
    {
        "user_id": "u822961851",
        "problem_id": "p02742",
        "submission1_id": "s356872301",
        "code_content": "\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if w == 1:\n        count = h\n    elif h % 2 == 1:\n        count = w * dy + (w-1) \n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    h, w = map(int, input().split())\n    dy = h \n    if w == 1:\n        count = h\n    elif h % 2 == 1:\n        count = w * dy + (w-1) \n    else:\n        count = w * dy\n\n    print(count)\n\nif __name__ == '__main__':\n    resolve()```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s040795031",
        "code_content": "\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra + rb) ** 2\n    dr = (ra-rb) ** 2\n\n    if d1 <= d2:\n        if d2 > d1 > dr:\n            print(2 if ra > rb else -2)\n        elif dr > d1:\n            print(2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = (xa - xb) ** 2 + (ya - yb) ** 2\n    d2 = (ra + rb) ** 2\n    dr = (ra-rb) ** 2\n\n    if d1 <= d2:\n        if d2 > d1 > dr:\n            print(2 if ra > rb else -2)\n        elif dr > d1:\n            print(2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u559315737",
        "problem_id": "p02580",
        "submission1_id": "s152544099",
        "code_content": "\nfrom collections import defaultdict\nrow=defaultdict(int)\ncol=defaultdict(int)\nH,W,M=map(int,input().split())\n\nmatrix=defaultdict(bool)\nfor i in range(M):\n    h,w=map(int,input().split())\n    row[h-1]+=1\n    col[w-1]+=1\n    matrix[(h-1,w-1)]=True\n\n\n\n\ntemp=list(row.items())\ntemp.sort(key=lambda x:x[1])\na,b=temp[-1][0],temp[-1][1]\ncnt=0\nfor i in range(W):\n    temp=0\n    if matrix[(a,i)]:\n        temp=(b+col[i]-1)\n    else:\n        temp=(b+col[i])\n    cnt=max(cnt,temp)\n\ntemp=list(col.items())\ntemp.sort(key=lambda x:x[1])\na,b=temp[-1][0],temp[-1][1]\ncnt2=0\nfor i in range(H):\n    temp=0\n    if matrix[(a,i)]:\n        temp=(b+row[i]-1)\n    else:\n        temp=(b+row[i])\n    cnt2=max(cnt2,temp)\nprint(max(cnt,cnt2))",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\nrow=defaultdict(int)\ncol=defaultdict(int)\nH,W,M=map(int,input().split())\n\nmatrix=defaultdict(bool)\nfor i in range(M):\n    h,w=map(int,input().split())\n    row[h-1]+=1\n    col[w-1]+=1\n    matrix[(h-1,w-1)]=True\n\n\n\n\ntemp=list(row.items())\ntemp.sort(key=lambda x:x[1])\na,b=temp[-1][0],temp[-1][1]\ncnt=0\nfor i in range(W):\n    temp=0\n    if matrix[(a,i)]:\n        temp=(b+col[i]-1)\n    else:\n        temp=(b+col[i])\n    cnt=max(cnt,temp)\n\ntemp=list(col.items())\ntemp.sort(key=lambda x:x[1])\na,b=temp[-1][0],temp[-1][1]\ncnt2=0\nfor i in range(H):\n    temp=0\n    if matrix[(a,i)]:\n        temp=(b+row[i]-1)\n    else:\n        temp=(b+row[i])\n    cnt2=max(cnt2,temp)\nprint(max(cnt,cnt2))```\n "
    },
    {
        "user_id": "u935254309",
        "problem_id": "p03416",
        "submission1_id": "s890304064",
        "code_content": "\nA,B = map(int,input().split())\n\ncnt = 0\n\nfor i in range(A,B+1):\n    \n    Str = str(i)\n    \n    if Str[:len(Str)\n        cnt += 1\n        \nprint(cnt)",
        "origin_generated_text": "\n```\nA,B = map(int,input().split())\n\ncnt = 0\n\nfor i in range(A,B+1):\n    \n    Str = str(i)\n    \n    if Str[:len(Str)\n        cnt += 1\n        \nprint(cnt)```\n "
    },
    {
        "user_id": "u869919400",
        "problem_id": "p03475",
        "submission1_id": "s325276465",
        "code_content": "\nN = int(input())\nCSF = [list(map(int, input().split())) for i in range(N-1)]\nfor i in range(N-1):\n    ans = 0\n    for j in range(i, N-1):\n        C, S, F = CSF[j]\n        if ans < S:\n            ans = S\n        else:\n            diff = ans - S\n            if diff % F != 0:\n                ans += F - (diff % F)\n        ans += C\n    print(ans)\nprint(0)",
        "origin_generated_text": "\n```\nN = int(input())\nCSF = [list(map(int, input().split())) for i in range(N-1)]\nfor i in range(N-1):\n    ans = 0\n    for j in range(i, N-1):\n        C, S, F = CSF[j]\n        if ans < S:\n            ans = S\n        else:\n            diff = ans - S\n            if diff % F != 0:\n                ans += F - (diff % F)\n        ans += C\n    print(ans)\nprint(0)```\n "
    },
    {
        "user_id": "u135346354",
        "problem_id": "p02556",
        "submission1_id": "s919485248",
        "code_content": "\nfrom collections import deque\nN = int(input())\n\nAM, Am, BM, Bm = 10**18, -10**18, 10**18, -10**18\nfor _ in range(N):\n    x, y = map(int, input().split())\n    AM = max(AM, x+y)\n    Am = min(Am, x+y)\n    BM = max(BM, x-y)\n    Bm = min(Bm, x-y)\n\n\nprint(max(AM-Am, BM-Bm))",
        "origin_generated_text": "\n```\nfrom collections import deque\nN = int(input())\n\nAM, Am, BM, Bm = 10**18, -10**18, 10**18, -10**18\nfor _ in range(N):\n    x, y = map(int, input().split())\n    AM = max(AM, x+y)\n    Am = min(Am, x+y)\n    BM = max(BM, x-y)\n    Bm = min(Bm, x-y)\n\n\nprint(max(AM-Am, BM-Bm))```\n "
    },
    {
        "user_id": "u534527715",
        "problem_id": "p02699",
        "submission1_id": "s290871851",
        "code_content": "\n\n\nH, O = map(int, input().split())\n\nif (H <= O):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")",
        "origin_generated_text": "\n```\n\n\nH, O = map(int, input().split())\n\nif (H <= O):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")```\n "
    },
    {
        "user_id": "u093041722",
        "problem_id": "p02727",
        "submission1_id": "s393716473",
        "code_content": "\nfrom collections import deque\nX,Y,A,B,C = (int(x) for x in input().split())\np = [[int(x), 'r'] for x in input().split()]\nq = [[int(x), 'g'] for x in input().split()]\nr = [[int(x), 'c'] for x in input().split()]\npqr = p + q + r\npqr.sort(reverse=True)\nd = deque(pqr)\nrem = X + Y\nans = 0\nif len(d) <= rem:\n    print(sum([apple[0] for apple in pqr]))\nelse:\n    while rem > 0:\n        pop = d.popleft()\n        if pop[1] == 'r':\n            if X > 0:\n                X -= 1\n                ans += pop[0]\n        elif pop[1] == 'g':\n            if Y > 0:\n                Y -= 1\n                ans += pop[0]\n        else:\n            ans += pop[0]\n        rem -= 1\n    print(ans)",
        "origin_generated_text": "\n```\nfrom collections import deque\nX,Y,A,B,C = (int(x) for x in input().split())\np = [[int(x), 'r'] for x in input().split()]\nq = [[int(x), 'g'] for x in input().split()]\nr = [[int(x), 'c'] for x in input().split()]\npqr = p + q + r\npqr.sort(reverse=True)\nd = deque(pqr)\nrem = X + Y\nans = 0\nif len(d) <= rem:\n    print(sum([apple[0] for apple in pqr]))\nelse:\n    while rem > 0:\n        pop = d.popleft()\n        if pop[1] == 'r':\n            if X > 0:\n                X -= 1\n                ans += pop[0]\n        elif pop[1] == 'g':\n            if Y > 0:\n                Y -= 1\n                ans += pop[0]\n        else:\n            ans += pop[0]\n        rem -= 1\n    print(ans)```\n "
    },
    {
        "user_id": "u826785572",
        "problem_id": "p02718",
        "submission1_id": "s619670929",
        "code_content": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ntotal = sum(a)\n\ncount = 0\n\nvalid = total / (4 * m)\n\nfor i in a:\n    if i >= valid:\n        count += 1\n\nif count >= m:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ntotal = sum(a)\n\ncount = 0\n\nvalid = total / (4 * m)\n\nfor i in a:\n    if i >= valid:\n        count += 1\n\nif count >= m:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u124873669",
        "problem_id": "p03106",
        "submission1_id": "s787524090",
        "code_content": "\nA,B,K=(int(x) for x in input().split())\n\nval = 1\nwhile True:\n  if A % val == 0 and B % val == 0:\n    if K == 1:\n      print(val)\n      exit()\n    K -= 1\n  val += 1",
        "origin_generated_text": "\n```\nA,B,K=(int(x) for x in input().split())\n\nval = 1\nwhile True:\n  if A % val == 0 and B % val == 0:\n    if K == 1:\n      print(val)\n      exit()\n    K -= 1\n  val += 1```\n "
    },
    {
        "user_id": "u943004959",
        "problem_id": "p02625",
        "submission1_id": "s692670191",
        "code_content": "\nMOD = 10**9 + 7\nMAX = 5*10**5 + 1\n\nfact = [0 for _ in range(MAX)]\nfactinv = [0 for _ in range(MAX)]\n\nfact[0] = 1\nfor k in range(1, MAX):\n    fact[k] = fact[k - 1]*k\n    fact[k] %= MOD\n\nfactinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\nfor k in range(MAX - 1, 0, -1):\n    factinv[k - 1] = fact[k]*factinv[k]\n    factinv[k - 1] %= MOD\n\ndef nCk(n, k):\n    return fact[n]*factinv[k]*factinv[n - k] % MOD\n\ndef nPk(n, k):\n    return fact[n]*factinv[n - k] % MOD\n\nn, m = map(int, input().split(' '))\n\nans = 0\nfor k in range(n + 1):\n    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n    if k % 2: ans += tmp\n    else: ans -= tmp\n    ans %= MOD\n\nprint(ans)",
        "origin_generated_text": "\n```\nMOD = 10**9 + 7\nMAX = 5*10**5 + 1\n\nfact = [0 for _ in range(MAX)]\nfactinv = [0 for _ in range(MAX)]\n\nfact[0] = 1\nfor k in range(1, MAX):\n    fact[k] = fact[k - 1]*k\n    fact[k] %= MOD\n\nfactinv[MAX - 1] = pow(fact[MAX - 1], MOD - 2, MOD)\nfor k in range(MAX - 1, 0, -1):\n    factinv[k - 1] = fact[k]*factinv[k]\n    factinv[k - 1] %= MOD\n\ndef nCk(n, k):\n    return fact[n]*factinv[k]*factinv[n - k] % MOD\n\ndef nPk(n, k):\n    return fact[n]*factinv[n - k] % MOD\n\nn, m = map(int, input().split(' '))\n\nans = 0\nfor k in range(n + 1):\n    tmp = nCk(n, k)*nPk(m, k)*nPk(m - k, n - k)*nPk(m - k, n - k) % MOD\n    if k % 2: ans += tmp\n    else: ans -= tmp\n    ans %= MOD\n\nprint(ans)```\n "
    },
    {
        "user_id": "u694402282",
        "problem_id": "p03041",
        "submission1_id": "s323754770",
        "code_content": "\nn, k = map(int, input().split())\ns = input()\nt = s[k-1]\nans = s[:k-1] + t.lower() + s[k:]\nprint(ans)\n",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ns = input()\nt = s[k-1]\nans = s[:k-1] + t.lower() + s[k:]\nprint(ans)\n```\n "
    },
    {
        "user_id": "u989326345",
        "problem_id": "p03023",
        "submission1_id": "s601490111",
        "code_content": "\nN=int(input())\nans=180*(N-2)\nprint(ans)\n",
        "origin_generated_text": "\n```\nN=int(input())\nans=180*(N-2)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p02963",
        "submission1_id": "s906247788",
        "code_content": "\nimport math\nS = int(input())\nX1 = 0\nY1 = 0\nX2 = 0\nY2 = 0\nX3 = 0\nY3 = 0\nif  S <= 10 ** 9:\n    X2 = S\n    Y3 = 1\nelse:\n    X2 = int(math.sqrt(S) + 1)\n    Y3 = X2\n    s = X2 ** 2  - S \n    for i in range(1, int(math.sqrt(s) + 1)):\n        if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8 and X2 <= i <= Y2:\n            X3 = s\n            Y2 = i\n            break\n\nprint (X1, Y1, X2, Y2, X3, Y3)\n",
        "origin_generated_text": "\n```\nimport math\nS = int(input())\nX1 = 0\nY1 = 0\nX2 = 0\nY2 = 0\nX3 = 0\nY3 = 0\nif  S <= 10 ** 9:\n    X2 = S\n    Y3 = 1\nelse:\n    X2 = int(math.sqrt(S) + 1)\n    Y3 = X2\n    s = X2 ** 2  - S \n    for i in range(1, int(math.sqrt(s) + 1)):\n        if s%i == 0 and s%i <= 10 ** 8 and i <= 10 ** 8 and X2 <= i <= Y2:\n            X3 = s\n            Y2 = i\n            break\n\nprint (X1, Y1, X2, Y2, X3, Y3)\n```\n "
    },
    {
        "user_id": "u641722141",
        "problem_id": "p03036",
        "submission1_id": "s077747385",
        "code_content": "\na,b,c=map(int,input().split())\nfor i in range(10):\n  s1=(a*c) -b\n  print(s1)\n  c=s1",
        "origin_generated_text": "\n```\na,b,c=map(int,input().split())\nfor i in range(10):\n  s1=(a*c) -b\n  print(s1)\n  c=s1```\n "
    },
    {
        "user_id": "u210718367",
        "problem_id": "p03568",
        "submission1_id": "s121127956",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nans=1\nfor k in a:\n  if k%2:\n    ans*=2\nprint(ans*(-(-(n\n",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nans=1\nfor k in a:\n  if k%2:\n    ans*=2\nprint(ans*(-(-(n\n```\n "
    },
    {
        "user_id": "u741612283",
        "problem_id": "p02727",
        "submission1_id": "s949782484",
        "code_content": "\nx,y,a,b,c = (int(x) for x in input().split())\n\nfrom bisect import insort\n\np_list = sorted([int(x) for x in input().split()])\nq_list = sorted([int(x) for x in input().split()])\nr_list = sorted([int(x) for x in input().split()])\n\nred = 0\ngreen = 0\nwhite = 0\n\nsum_num = 0\n\nfor i in range(1,x+y+1):\n  if red < x:\n  \tred_num = p_list[(red*-1)-1]\n  else:\n    red_num = 0\n  if green < y:\n  \tgreen_num = q_list[(green*-1)-1]\n  else:\n    green_num = 0\n  if white < c:\n  \twhite_num = r_list[(white*-1)-1]\n  else:\n    white_num = 0\n  \n  max_p = max([red_num,green_num,white_num])\n  sum_num += max_p\n  if max_p == white_num:\n    white += 1\n  elif max_p == red_num:\n    red += 1\n  elif max_p == green_num:\n    green += 1\n\nprint(sum_num)",
        "origin_generated_text": "\n```\nx,y,a,b,c = (int(x) for x in input().split())\n\nfrom bisect import insort\n\np_list = sorted([int(x) for x in input().split()])\nq_list = sorted([int(x) for x in input().split()])\nr_list = sorted([int(x) for x in input().split()])\n\nred = 0\ngreen = 0\nwhite = 0\n\nsum_num = 0\n\nfor i in range(1,x+y+1):\n  if red < x:\n  \tred_num = p_list[(red*-1)-1]\n  else:\n    red_num = 0\n  if green < y:\n  \tgreen_num = q_list[(green*-1)-1]\n  else:\n    green_num = 0\n  if white < c:\n  \twhite_num = r_list[(white*-1)-1]\n  else:\n    white_num = 0\n  \n  max_p = max([red_num,green_num,white_num])\n  sum_num += max_p\n  if max_p == white_num:\n    white += 1\n  elif max_p == red_num:\n    red += 1\n  elif max_p == green_num:\n    green += 1\n\nprint(sum_num)```\n "
    },
    {
        "user_id": "u659034691",
        "problem_id": "p02385",
        "submission1_id": "s222774258",
        "code_content": "\n\ndef r(D,s):\n    if s==0:\n        t=D[0]\n        D[0]=D[1]\n        D[1]=D[5]\n        D[5]=D[4]\n        D[4]=t\n    elif s==2:\n        t=D[0]\n        D[0]=D[4]\n        D[4]=D[5]\n        D[5]=D[1]\n        D[1]=t        \n    elif s==3:\n        t=D[0]\n        D[0]=D[3]\n        D[3]=D[5]\n        D[5]=D[2]\n        D[2]=t        \n    elif s==1:\n        t=D[0]\n        D[0]=D[2]\n        D[2]=D[5]\n        D[5]=D[3]\n        D[3]=t\n    elif s==4:\n        D=r(r(D,1),1)\n    return D\ndef ch(C,D):\n    k=0\n    while k<6 and C[k]==D[k]:\n        k+=1\n    if k==6:\n        return 1\n    else:\n        return 0\nC=[int(i) for i in input().split()]\nD=[int(i) for i in input().split()]\nnd=0\nif ch(C,D)==1:\n    nd=1\ni=0\nwhile i<4 and nd==0:\n    D=r(D,i)\n    j=i+1\n    j%=4\n    k=0\n    while k<3 and nd==0:\n        D=r(D,j)\n        if ch(C,D)==1:\n            nd=1\n        k+=1\n    D=r(D,j)\n    m=i+2\n    D=r(D,m)\n    i+=1\ni=0\nwhile nd==0 and i<4:\n    D=r(r(D,i),i)\n    if ch(C,D)==1:\n        nd=1\n    D=r(r(D,i),i)\n    i+=1\nif nd==1:\n    p=\"Yes\"\nelse:\n    p=\"No\"\nprint(p)",
        "origin_generated_text": "\n```\n\ndef r(D,s):\n    if s==0:\n        t=D[0]\n        D[0]=D[1]\n        D[1]=D[5]\n        D[5]=D[4]\n        D[4]=t\n    elif s==2:\n        t=D[0]\n        D[0]=D[4]\n        D[4]=D[5]\n        D[5]=D[1]\n        D[1]=t        \n    elif s==3:\n        t=D[0]\n        D[0]=D[3]\n        D[3]=D[5]\n        D[5]=D[2]\n        D[2]=t        \n    elif s==1:\n        t=D[0]\n        D[0]=D[2]\n        D[2]=D[5]\n        D[5]=D[3]\n        D[3]=t\n    elif s==4:\n        D=r(r(D,1),1)\n    return D\ndef ch(C,D):\n    k=0\n    while k<6 and C[k]==D[k]:\n        k+=1\n    if k==6:\n        return 1\n    else:\n        return 0\nC=[int(i) for i in input().split()]\nD=[int(i) for i in input().split()]\nnd=0\nif ch(C,D)==1:\n    nd=1\ni=0\nwhile i<4 and nd==0:\n    D=r(D,i)\n    j=i+1\n    j%=4\n    k=0\n    while k<3 and nd==0:\n        D=r(D,j)\n        if ch(C,D)==1:\n            nd=1\n        k+=1\n    D=r(D,j)\n    m=i+2\n    D=r(D,m)\n    i+=1\ni=0\nwhile nd==0 and i<4:\n    D=r(r(D,i),i)\n    if ch(C,D)==1:\n        nd=1\n    D=r(r(D,i),i)\n    i+=1\nif nd==1:\n    p=\"Yes\"\nelse:\n    p=\"No\"\nprint(p)```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s208413754",
        "code_content": "\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u457901067",
        "problem_id": "p03959",
        "submission1_id": "s101038802",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nT = list(map(int, input().split()))\n\nmod = int(1e9+7)\n\ndp = [0] * (N)\ndp[0] = 1\n\n\nAmax = max(A)\nAleft, Tright = -1, -1\nTmax = max(T)\nfor i in range(N):\n  if Amax == A[i]:\n    Aleft = i\n    break\nfor i in range(N-1,-1,-1):\n  if Tmax == T[i]:\n    Tright = i\n    break\nif Aleft > Tright:\n  print(0)\n  exit(0)\n  \nfor i in range(1,N-1):\n  if A[i-1] < A[i] or T[i] > T[i+1]:\n    dp[i] = dp[i-1]\n  else:\n    dp[i] = dp[i-1] * min(A[i], T[i]) % mod\n\nprint(dp[N-2])\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nT = list(map(int, input().split()))\n\nmod = int(1e9+7)\n\ndp = [0] * (N)\ndp[0] = 1\n\n\nAmax = max(A)\nAleft, Tright = -1, -1\nTmax = max(T)\nfor i in range(N):\n  if Amax == A[i]:\n    Aleft = i\n    break\nfor i in range(N-1,-1,-1):\n  if Tmax == T[i]:\n    Tright = i\n    break\nif Aleft > Tright:\n  print(0)\n  exit(0)\n  \nfor i in range(1,N-1):\n  if A[i-1] < A[i] or T[i] > T[i+1]:\n    dp[i] = dp[i-1]\n  else:\n    dp[i] = dp[i-1] * min(A[i], T[i]) % mod\n\nprint(dp[N-2])\n```\n "
    },
    {
        "user_id": "u841531687",
        "problem_id": "p03272",
        "submission1_id": "s849389589",
        "code_content": "\na, b = map(int, input().split())\nprint(a - b + 1)",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\nprint(a - b + 1)```\n "
    },
    {
        "user_id": "u536717874",
        "problem_id": "p03477",
        "submission1_id": "s626619088",
        "code_content": "\n\nimport sys\n\n\ndef main(argv=sys.argv):\n  a, b, c, d = map(int, input().split(' '))\n  \n  if a + b > c + d:\n    print('Left')\n  elif a + b < c + d:\n    print('Right')\n  else:\n    print('Balanced')\n    \n    \n  return 0\n\n\nif __name__ == '__main__':\n  sys.exit(main())",
        "origin_generated_text": "\n```\n\nimport sys\n\n\ndef main(argv=sys.argv):\n  a, b, c, d = map(int, input().split(' '))\n  \n  if a + b > c + d:\n    print('Left')\n  elif a + b < c + d:\n    print('Right')\n  else:\n    print('Balanced')\n    \n    \n  return 0\n\n\nif __name__ == '__main__':\n  sys.exit(main())```\n "
    },
    {
        "user_id": "u050584166",
        "problem_id": "p02640",
        "submission1_id": "s159268133",
        "code_content": "\nn, m = map(int,input().split())\nif m <= 2**n and m%2 == 0 and m != 400:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nn, m = map(int,input().split())\nif m <= 2**n and m%2 == 0 and m != 400:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u333190709",
        "problem_id": "p03272",
        "submission1_id": "s482869407",
        "code_content": "\nN, i = [int(n) for n in input().split()]\n\nprint(N + 1 - i)",
        "origin_generated_text": "\n```\nN, i = [int(n) for n in input().split()]\n\nprint(N + 1 - i)```\n "
    },
    {
        "user_id": "u688375653",
        "problem_id": "p03479",
        "submission1_id": "s703248447",
        "code_content": "\ndef input_int():\n    return map(int, input().split())\n\ndef one_int():\n    return int(input())\n\ndef one_str():\n    return input()\n\ndef many_int():\n    return list(map(int, input().split()))\n\nX,Y=input_int()\ncount=0\nwhile X<=Y:\n    count+=1\n    X*=2\nprint(count)",
        "origin_generated_text": "\n```\ndef input_int():\n    return map(int, input().split())\n\ndef one_int():\n    return int(input())\n\ndef one_str():\n    return input()\n\ndef many_int():\n    return list(map(int, input().split()))\n\nX,Y=input_int()\ncount=0\nwhile X<=Y:\n    count+=1\n    X*=2\nprint(count)```\n "
    },
    {
        "user_id": "u883048396",
        "problem_id": "p03296",
        "submission1_id": "s851092520",
        "code_content": "\niN = int(input())\naS = [int(x) for x in input().rstrip().split()]\n\n\n\n\n\n\n\niCounter = 0\nif iN == 2:\n    if aS[0] == aS[1]:\n        iCounter += 1\nelse:\n    for i in range(1,iN-1):\n        if aS[i] == aS[i-1]:\n            if aS[i] == aS[i+1]:\n                if aS[i] < 10000:\n                    aS[i] += 1\n                else:\n                    aS[i] -= 1\n                iCounter += 1\n            else:\n                iU = max(aS[i],aS[i+1])\n                if iU < 10000:\n                    iU += 1\n                else:\n                    iU -= 1\n                    if iU == min(aS[1],aS[i+1]):\n                        iU -= 1\n                aS[i] = iU\n                iCounter += 1\n    if aS[iN-1] == aS[iN-2]:\n        iCounter += 1\nprint(iCounter)\n",
        "origin_generated_text": "\n```\niN = int(input())\naS = [int(x) for x in input().rstrip().split()]\n\n\n\n\n\n\n\niCounter = 0\nif iN == 2:\n    if aS[0] == aS[1]:\n        iCounter += 1\nelse:\n    for i in range(1,iN-1):\n        if aS[i] == aS[i-1]:\n            if aS[i] == aS[i+1]:\n                if aS[i] < 10000:\n                    aS[i] += 1\n                else:\n                    aS[i] -= 1\n                iCounter += 1\n            else:\n                iU = max(aS[i],aS[i+1])\n                if iU < 10000:\n                    iU += 1\n                else:\n                    iU -= 1\n                    if iU == min(aS[1],aS[i+1]):\n                        iU -= 1\n                aS[i] = iU\n                iCounter += 1\n    if aS[iN-1] == aS[iN-2]:\n        iCounter += 1\nprint(iCounter)\n```\n "
    },
    {
        "user_id": "u038408819",
        "problem_id": "p03716",
        "submission1_id": "s077575791",
        "code_content": "\nN = int(input())\na = list(map(int, input().split()))\n\nimport heapq\nque1 = []\nheapq.heapify(que1)\nS = [0] * (2*N + 1)\nfor i in range(N):\n    S[i + 1] = S[i] + a[i]\n    \n    heapq.heappush(que1, a[i])\nque2 = []\nheapq.heapify(que2)\nT = [0] * (2*N + 1)\nfor i in range(N):\n    T[i + 1] = T[i] + a[3*N - i - 1]\n    \n    heapq.heappush(que2, -a[3*N - i - 1])\n\nfor i in range(N, 2*N):\n    mi = heapq.heappop(que1)\n    \n    if a[i] > mi:\n        S[i + 1] = S[i] - mi + a[i]\n        \n        heapq.heappush(que1, a[i])\n    else:\n        S[i + 1] = S[i]\n        heapq.heappush(que1, mi)\nfor i in range(N, 2*N):\n    ma = heapq.heappop(que2) * -1\n    \n    if a[3*N - i - 1] < ma:\n        T[i + 1] = T[i] - ma + a[3*N - i - 1]\n        \n        \n        heapq.heappush(que2, -a[3*N - i - 1])\n    else:\n        T[i + 1] = T[i]\n        heapq.heappush(que2, -ma)\n\nres = -float('Inf')\nfor i in range(N, 2*N + 1):\n    res = max(res, S[i] - T[3*N - i])\nprint(res)\n",
        "origin_generated_text": "\n```\nN = int(input())\na = list(map(int, input().split()))\n\nimport heapq\nque1 = []\nheapq.heapify(que1)\nS = [0] * (2*N + 1)\nfor i in range(N):\n    S[i + 1] = S[i] + a[i]\n    \n    heapq.heappush(que1, a[i])\nque2 = []\nheapq.heapify(que2)\nT = [0] * (2*N + 1)\nfor i in range(N):\n    T[i + 1] = T[i] + a[3*N - i - 1]\n    \n    heapq.heappush(que2, -a[3*N - i - 1])\n\nfor i in range(N, 2*N):\n    mi = heapq.heappop(que1)\n    \n    if a[i] > mi:\n        S[i + 1] = S[i] - mi + a[i]\n        \n        heapq.heappush(que1, a[i])\n    else:\n        S[i + 1] = S[i]\n        heapq.heappush(que1, mi)\nfor i in range(N, 2*N):\n    ma = heapq.heappop(que2) * -1\n    \n    if a[3*N - i - 1] < ma:\n        T[i + 1] = T[i] - ma + a[3*N - i - 1]\n        \n        \n        heapq.heappush(que2, -a[3*N - i - 1])\n    else:\n        T[i + 1] = T[i]\n        heapq.heappush(que2, -ma)\n\nres = -float('Inf')\nfor i in range(N, 2*N + 1):\n    res = max(res, S[i] - T[3*N - i])\nprint(res)\n```\n "
    },
    {
        "user_id": "u328755070",
        "problem_id": "p03992",
        "submission1_id": "s580081854",
        "code_content": "\ns = input()\n\nans = s[:4] + ' ' + s[4:]\n\nprint(ans)",
        "origin_generated_text": "\n```\ns = input()\n\nans = s[:4] + ' ' + s[4:]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u037430802",
        "problem_id": "p03714",
        "submission1_id": "s016407859",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\n\nleft = A[:N]\nleft_total = [sum(left)]\n\nfor i in range(N, 2*N):\n    l = left.pop()\n    if l >= A[i]:\n        left_total.append(left_total[-1])\n    else:\n        left_total.append(left_total[-1] - l + A[i])\n\nright = [-i for i in A[2*N:]]\nright_total = [sum(right)]\n\nfor i in reversed(range(N, 2*N)):\n    r = right.pop()\n    if r >= -1*A[i]:\n        right_total.append(right_total[-1])\n    else:\n        right_total.append(right_total[-1] - r - A[i])\n\nright_total = right_total[::-1]\n\nans = -float(\"inf\")\nfor i in range(len(left_total)):\n    ans = max(ans, left_total[i] + right_total[i])\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\n\nleft = A[:N]\nleft_total = [sum(left)]\n\nfor i in range(N, 2*N):\n    l = left.pop()\n    if l >= A[i]:\n        left_total.append(left_total[-1])\n    else:\n        left_total.append(left_total[-1] - l + A[i])\n\nright = [-i for i in A[2*N:]]\nright_total = [sum(right)]\n\nfor i in reversed(range(N, 2*N)):\n    r = right.pop()\n    if r >= -1*A[i]:\n        right_total.append(right_total[-1])\n    else:\n        right_total.append(right_total[-1] - r - A[i])\n\nright_total = right_total[::-1]\n\nans = -float(\"inf\")\nfor i in range(len(left_total)):\n    ans = max(ans, left_total[i] + right_total[i])\n\nprint(ans)```\n "
    },
    {
        "user_id": "u991134049",
        "problem_id": "p03568",
        "submission1_id": "s550529663",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nkisuu = 1\nfor i in range(N):\n  if A[i] % 2 == 0:\n    kisuu *= 2\nprint(2**N-kisuu+1)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nkisuu = 1\nfor i in range(N):\n  if A[i] % 2 == 0:\n    kisuu *= 2\nprint(2**N-kisuu+1)```\n "
    },
    {
        "user_id": "u945181840",
        "problem_id": "p02954",
        "submission1_id": "s884452679",
        "code_content": "\nS = input()\n\neven = 0\nodd = 0\nl = S.index('L')\nr = S.index('R')\nans = [0] * len(S)\n\nfor i in range(len(S) - 1):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\n    if S[i] == 'R' and S[i + 1] == 'L':\n        l = i\n        r = i + 1\n        if i % 2 == 0:\n            ans[i] += even\n            ans[i + 1] += odd\n        else:\n            ans[i] += odd\n            ans[i + 1] += even\n        even = 0\n        odd = 0\n    elif S[i] == 'L' and S[i + 1] == 'R':\n        if l % 2 == 0:\n            ans[l] += even\n            ans[l + 1] += odd\n        else:\n            ans[l] += odd\n            ans[l + 1] += even\n        even = 0\n        odd = 0\n\n\nif (len(S) - 1 - l) % 2 == 0:\n    ans[l] += 1\nelse:\n    ans[r] += 1\n\nif l % 2 == 0:\n    ans[l] += even\n    ans[l + 1] += odd\nelse:\n    ans[l] += odd\n    ans[l + 1] += even\n\nprint(' '.join(map(str, ans)))",
        "origin_generated_text": "\n```\nS = input()\n\neven = 0\nodd = 0\nl = S.index('L')\nr = S.index('R')\nans = [0] * len(S)\n\nfor i in range(len(S) - 1):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\n    if S[i] == 'R' and S[i + 1] == 'L':\n        l = i\n        r = i + 1\n        if i % 2 == 0:\n            ans[i] += even\n            ans[i + 1] += odd\n        else:\n            ans[i] += odd\n            ans[i + 1] += even\n        even = 0\n        odd = 0\n    elif S[i] == 'L' and S[i + 1] == 'R':\n        if l % 2 == 0:\n            ans[l] += even\n            ans[l + 1] += odd\n        else:\n            ans[l] += odd\n            ans[l + 1] += even\n        even = 0\n        odd = 0\n\n\nif (len(S) - 1 - l) % 2 == 0:\n    ans[l] += 1\nelse:\n    ans[r] += 1\n\nif l % 2 == 0:\n    ans[l] += even\n    ans[l + 1] += odd\nelse:\n    ans[l] += odd\n    ans[l + 1] += even\n\nprint(' '.join(map(str, ans)))```\n "
    },
    {
        "user_id": "u238504302",
        "problem_id": "p02642",
        "submission1_id": "s853036969",
        "code_content": "\nfrom collections import Counter as c\nn = int(input())\na = list(map(int,input().split()))\na.sort()\n\ncount, a_max = 0, a[-1]\n\nfor i in a:\n  if i != a_max:\n    count += 1\n  j = 2\n  while i * j <= a_max:\n    if i % j == 0:\n      break\n    j += 1\n  if i * j > a_max:\n    count -= 1\n\nprint(count)",
        "origin_generated_text": "\n```\nfrom collections import Counter as c\nn = int(input())\na = list(map(int,input().split()))\na.sort()\n\ncount, a_max = 0, a[-1]\n\nfor i in a:\n  if i != a_max:\n    count += 1\n  j = 2\n  while i * j <= a_max:\n    if i % j == 0:\n      break\n    j += 1\n  if i * j > a_max:\n    count -= 1\n\nprint(count)```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s486221148",
        "code_content": "\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = 1\nright = W\nup = 1\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up -= 1\n    elif S[i] == \"D\":\n        down += 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\nif left <= sr <= right and up <= sc <= down and left <= sc <= right:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n",
        "origin_generated_text": "\n```\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = 1\nright = W\nup = 1\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up -= 1\n    elif S[i] == \"D\":\n        down += 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\nif left <= sr <= right and up <= sc <= down and left <= sc <= right:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u985519195",
        "problem_id": "p02974",
        "submission1_id": "s436421003",
        "code_content": "\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] = (dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + 2*j * dp[i][j][k]) % m\n      if j > 0:\n      \tdp[i+1][j-1][k+2*(j-1)] = (dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k]) % m\nprint(dp[N][0][K])",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nm = 1000000007\n\ndp = [[[0] * (K+2*N+1) for _ in range(N+1)] for _ in range(N+1)]\n\ndp[0][0][0] = 1\nfor i in range(0, N):\n  for j in range(0, i+1):\n    for k in range(0, K+1):\n      dp[i+1][j+1][k+2*(j+1)] = (dp[i+1][j+1][k+2*(j+1)] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + dp[i][j][k]) % m\n      dp[i+1][j][k+2*j] = (dp[i+1][j][k+2*j] + 2*j * dp[i][j][k]) % m\n      if j > 0:\n      \tdp[i+1][j-1][k+2*(j-1)] = (dp[i+1][j-1][k+2*(j-1)] + j*j * dp[i][j][k]) % m\nprint(dp[N][0][K])```\n "
    },
    {
        "user_id": "u528807020",
        "problem_id": "p03573",
        "submission1_id": "s069412762",
        "code_content": "\nA,B,C  = [int(i) for i in input().split()]\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelif B == C:\n    print(A)",
        "origin_generated_text": "\n```\nA,B,C  = [int(i) for i in input().split()]\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelif B == C:\n    print(A)```\n "
    },
    {
        "user_id": "u946090308",
        "problem_id": "p03264",
        "submission1_id": "s096238727",
        "code_content": "\nk = int(input())        \nif (k%2) == 1:\n    print((k+1) * (k-3) / 8)\nelse:\n    print((k+2) * (k-2) / 8)",
        "origin_generated_text": "\n```\nk = int(input())        \nif (k%2) == 1:\n    print((k+1) * (k-3) / 8)\nelse:\n    print((k+2) * (k-2) / 8)```\n "
    },
    {
        "user_id": "u022871813",
        "problem_id": "p03264",
        "submission1_id": "s951128304",
        "code_content": "\nk = int(input())\nif k%2 == 0:\n    a = (k/2)**2\n    print(int(a))\nelse:\n    a = ((k-1)/2)*((k-1)/2 + 1)\n    print(int(a))\n",
        "origin_generated_text": "\n```\nk = int(input())\nif k%2 == 0:\n    a = (k/2)**2\n    print(int(a))\nelse:\n    a = ((k-1)/2)*((k-1)/2 + 1)\n    print(int(a))\n```\n "
    },
    {
        "user_id": "u808280993",
        "problem_id": "p03318",
        "submission1_id": "s154360269",
        "code_content": "\n\n\nK = int(input())\n\n\nSunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nif K <= len(Sunuke):\n    for i in range(K):\n        print(Sunuke[i])\n\nelse:\n    \n    resi = K - len(Sunuke)\n    \n    digit = 0\n\n    while resi > 0:\n        for i in range(10):\n            num = i * (10**digit)\n            Sunuke.append(num)\n\n            resi -= 1\n\n\nfor i in range(K):\n    print(Sunuke[i])",
        "origin_generated_text": "\n```\n\n\nK = int(input())\n\n\nSunuke = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nif K <= len(Sunuke):\n    for i in range(K):\n        print(Sunuke[i])\n\nelse:\n    \n    resi = K - len(Sunuke)\n    \n    digit = 0\n\n    while resi > 0:\n        for i in range(10):\n            num = i * (10**digit)\n            Sunuke.append(num)\n\n            resi -= 1\n\n\nfor i in range(K):\n    print(Sunuke[i])```\n "
    },
    {
        "user_id": "u944209426",
        "problem_id": "p03106",
        "submission1_id": "s335297490",
        "code_content": "\na,b,k=map(int,input().split())\nres=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        res.append(i)\nprint(res[k-1] if len(res)>k-1 else res[len(res)-1])",
        "origin_generated_text": "\n```\na,b,k=map(int,input().split())\nres=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        res.append(i)\nprint(res[k-1] if len(res)>k-1 else res[len(res)-1])```\n "
    },
    {
        "user_id": "u836737505",
        "problem_id": "p03992",
        "submission1_id": "s661590698",
        "code_content": "\ns = input()\nprint(s[:4]+\" \"+s[4:])",
        "origin_generated_text": "\n```\ns = input()\nprint(s[:4]+\" \"+s[4:])```\n "
    },
    {
        "user_id": "u412197640",
        "problem_id": "p02556",
        "submission1_id": "s034440107",
        "code_content": "\nfrom sys import *\nN = int(stdin.readline())\na = [list(map(int, stdin.readline().split())) for i in range(N)]\na.sort(key = lambda k: k[0]+k[1])\n\nbest = abs(a[0][0] - a[-1][0]) + abs(a[0][1] - a[-1][1])\nfor i in range(1, N-1):\n    best = max(best, abs(a[i][0] - a[i+1][0]) + abs(a[i][1] - a[i+1][1]))\n\nprint(best)\n",
        "origin_generated_text": "\n```\nfrom sys import *\nN = int(stdin.readline())\na = [list(map(int, stdin.readline().split())) for i in range(N)]\na.sort(key = lambda k: k[0]+k[1])\n\nbest = abs(a[0][0] - a[-1][0]) + abs(a[0][1] - a[-1][1])\nfor i in range(1, N-1):\n    best = max(best, abs(a[i][0] - a[i+1][0]) + abs(a[i][1] - a[i+1][1]))\n\nprint(best)\n```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s329819305",
        "code_content": "\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) / 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3 = s \n    y3 = x3 * (10 ** 9) - s\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) / 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3 = s \n    y3 = x3 * (10 ** 9) - s\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u734548018",
        "problem_id": "p02919",
        "submission1_id": "s958610435",
        "code_content": "\n\n\n\n\n\nN = int(input())\nPn = list(map(int, input().split()))\n\nIn = [0] * (N+1)\nfor i in range(N):\n  In[Pn[i]] = i+1\n\ncnt = 0\nl = [0] + [i for i in range(N+1)]\nr = [i+1 for i in range((N+1))] + [N+1]\n\nfor v in range(1, N+1):\n  i = In[v]\n  \n  l1 = l[i]\n  l2 = l[l1]\n  r1 = r[i]\n  r2 = r[r1]\n  cnt += ((l1-l2) * (r1-i) + (i-l1) * (r2-r1)) * v\n  \n  l[r1] = l1\n  r[l1] = r1\n    \nprint(cnt)\n",
        "origin_generated_text": "\n```\n\n\n\n\n\nN = int(input())\nPn = list(map(int, input().split()))\n\nIn = [0] * (N+1)\nfor i in range(N):\n  In[Pn[i]] = i+1\n\ncnt = 0\nl = [0] + [i for i in range(N+1)]\nr = [i+1 for i in range((N+1))] + [N+1]\n\nfor v in range(1, N+1):\n  i = In[v]\n  \n  l1 = l[i]\n  l2 = l[l1]\n  r1 = r[i]\n  r2 = r[r1]\n  cnt += ((l1-l2) * (r1-i) + (i-l1) * (r2-r1)) * v\n  \n  l[r1] = l1\n  r[l1] = r1\n    \nprint(cnt)\n```\n "
    },
    {
        "user_id": "u729627789",
        "problem_id": "p02640",
        "submission1_id": "s723803678",
        "code_content": "\nx, y = map(int, input().split())\nret = 'No'\nfor i in range(x+1):\n    rem = y - 2*i\n    if rem%4 == 0 or rem%2 == 0:\n        ret = 'Yes'\n        break\nprint(ret)",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\nret = 'No'\nfor i in range(x+1):\n    rem = y - 2*i\n    if rem%4 == 0 or rem%2 == 0:\n        ret = 'Yes'\n        break\nprint(ret)```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p03573",
        "submission1_id": "s363270435",
        "code_content": "\na=list(map(int,input().split()))\na.sort()\nprint(a[2] if a[0]==a[1] else a[0])",
        "origin_generated_text": "\n```\na=list(map(int,input().split()))\na.sort()\nprint(a[2] if a[0]==a[1] else a[0])```\n "
    },
    {
        "user_id": "u587213169",
        "problem_id": "p03416",
        "submission1_id": "s879327354",
        "code_content": "\na, b =map(int, input().split())\ncount=0\nfor i in range(a,b+1):\n    m = list(str(i))\n    if m[0]==m[-1]:\n        count+=1\nprint(count)",
        "origin_generated_text": "\n```\na, b =map(int, input().split())\ncount=0\nfor i in range(a,b+1):\n    m = list(str(i))\n    if m[0]==m[-1]:\n        count+=1\nprint(count)```\n "
    },
    {
        "user_id": "u453623947",
        "problem_id": "p02730",
        "submission1_id": "s240659326",
        "code_content": "\nS = list(input())\nN = len(S)\ns1 = S[:int((N-1)/2):]\ns2 = S[int(((N+3)/2)-1):int(N):]\nif S == S[::-1] :\n    if s1 == s1[::-1] and s2 == s2[::-1] :\n        print(\"Yes\")\n    else :\n        print(\"No\")\nelse :\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nS = list(input())\nN = len(S)\ns1 = S[:int((N-1)/2):]\ns2 = S[int(((N+3)/2)-1):int(N):]\nif S == S[::-1] :\n    if s1 == s1[::-1] and s2 == s2[::-1] :\n        print(\"Yes\")\n    else :\n        print(\"No\")\nelse :\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u626337957",
        "problem_id": "p02887",
        "submission1_id": "s043133447",
        "code_content": "\nN = int(input())\ncolors = list(input())\nbefore = \"\"\nans = 0\nfor color in colors:\n  if color != before:\n    ans += 1\n    before = color\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\ncolors = list(input())\nbefore = \"\"\nans = 0\nfor color in colors:\n  if color != before:\n    ans += 1\n    before = color\nprint(ans)```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s784331640",
        "code_content": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\n\nfor line in lines:\n    x, y, z = map(int, line)\n    drop(x, y, z)\n\nprint(sum(sum(field[i] for i in range(10)) for field in field))\nprint(max(max(field[i] for i in range(10)) for field in field))\n",
        "origin_generated_text": "\n```\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\n\nfor line in lines:\n    x, y, z = map(int, line)\n    drop(x, y, z)\n\nprint(sum(sum(field[i] for i in range(10)) for field in field))\nprint(max(max(field[i] for i in range(10)) for field in field))\n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s657097526",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = int(1e10 + 1)\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = int(1e10 + 1)\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)```\n "
    },
    {
        "user_id": "u599547273",
        "problem_id": "p02963",
        "submission1_id": "s082779680",
        "code_content": "\nS = int(input())\n\nX1, Y1 = 0, 0\n\nX2 = 10**9\nY2 = S - X2*(X2+1)/2\n\nX3 = 1\nY3 = (10**9) - S%(10**9)\n\nprint(X1, Y1, X2, Y2, X3, Y3)",
        "origin_generated_text": "\n```\nS = int(input())\n\nX1, Y1 = 0, 0\n\nX2 = 10**9\nY2 = S - X2*(X2+1)/2\n\nX3 = 1\nY3 = (10**9) - S%(10**9)\n\nprint(X1, Y1, X2, Y2, X3, Y3)```\n "
    },
    {
        "user_id": "u965581346",
        "problem_id": "p02917",
        "submission1_id": "s341719029",
        "code_content": "\n\n \nN = int(input())\n\nB = [int(e) for e in input().split()]\n\nA = [0] * N\nA[N - 1] = B[N - 1]\n\n\nfor i in reversed(range(1, N)):\n\tA[i - 1] = max(A[i], B[i - 1])\n\n\nprint(sum(A))\n",
        "origin_generated_text": "\n```\n\n \nN = int(input())\n\nB = [int(e) for e in input().split()]\n\nA = [0] * N\nA[N - 1] = B[N - 1]\n\n\nfor i in reversed(range(1, N)):\n\tA[i - 1] = max(A[i], B[i - 1])\n\n\nprint(sum(A))\n```\n "
    },
    {
        "user_id": "u285443936",
        "problem_id": "p03633",
        "submission1_id": "s064383062",
        "code_content": "\nN = int(input())\nT = [int(input()) for i in range(N)]\n\ndef gcd(m,n):\n  x = max(m,n)\n  y = min(m,n)\n  if x%y == 0:\n    return y\n  else:\n    while x%y != 0:\n      z = x%y\n      x = y\n      y = z\n    else:\n      return z\n\ndef lcm(m,n):\n  return m * n \n\nans = 0\nfor i in range(N):\n  if i == 0:\n    ans = T[i]\n  else:\n    ans = lcm(ans, T[i])\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nT = [int(input()) for i in range(N)]\n\ndef gcd(m,n):\n  x = max(m,n)\n  y = min(m,n)\n  if x%y == 0:\n    return y\n  else:\n    while x%y != 0:\n      z = x%y\n      x = y\n      y = z\n    else:\n      return z\n\ndef lcm(m,n):\n  return m * n \n\nans = 0\nfor i in range(N):\n  if i == 0:\n    ans = T[i]\n  else:\n    ans = lcm(ans, T[i])\n\nprint(ans)```\n "
    },
    {
        "user_id": "u928329738",
        "problem_id": "p00023",
        "submission1_id": "s008316601",
        "code_content": "\nfor i in range(int(input())):\n    points = input().split()\n    p = list(map(float,points))\n    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 + p[5]**2:\n        print(1)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[2]**2 + p[5]**2:\n        print(-1)\n    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n        print(2)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n        print(-2)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nfor i in range(int(input())):\n    points = input().split()\n    p = list(map(float,points))\n    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 + p[5]**2:\n        print(1)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[2]**2 + p[5]**2:\n        print(-1)\n    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2:\n        print(2)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n        print(-2)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u483722302",
        "problem_id": "p03475",
        "submission1_id": "s951061822",
        "code_content": "\n\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    Ci, Si, Fi = list(map(int, input().split((\" \"))))\n    C.append(Ci)\n    S.append(Si)\n    F.append(Fi)\n\nans = []\nfor i in range(N):\n    t = 0\n    for j in range(i, N-1):\n        if t < S[j]:\n            t = S[j]\n        elif t % F[j] == 0:\n            pass\n        else:\n            t += F[j] - (t % F[j])\n        t += C[j]\n    print(t)\n\n",
        "origin_generated_text": "\n```\n\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    Ci, Si, Fi = list(map(int, input().split((\" \"))))\n    C.append(Ci)\n    S.append(Si)\n    F.append(Fi)\n\nans = []\nfor i in range(N):\n    t = 0\n    for j in range(i, N-1):\n        if t < S[j]:\n            t = S[j]\n        elif t % F[j] == 0:\n            pass\n        else:\n            t += F[j] - (t % F[j])\n        t += C[j]\n    print(t)\n\n```\n "
    },
    {
        "user_id": "u266014018",
        "problem_id": "p02642",
        "submission1_id": "s158015966",
        "code_content": "\ndef main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_max = max(a)\n    is_divable = [True]*(a_max+1)\n    ans = 0\n    for el in a:\n        if is_divable[el]:\n            ans +=1\n            is_divable[el] = False\n            k = 2\n            while k*el <= a_max:\n                is_divable[k*el] = False\n                k+=1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\ndef main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_max = max(a)\n    is_divable = [True]*(a_max+1)\n    ans = 0\n    for el in a:\n        if is_divable[el]:\n            ans +=1\n            is_divable[el] = False\n            k = 2\n            while k*el <= a_max:\n                is_divable[k*el] = False\n                k+=1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u500297289",
        "problem_id": "p03675",
        "submission1_id": "s321809466",
        "code_content": "\nn = int(input())\na = list(input().split())\n\nb = [0] * n\nfor i in range(n):\n    if i % 2 == 0:\n        b.append(a[i])\n    else:\n        b[n-i-1] = a[i]\n\nprint(' '.join(b))\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(input().split())\n\nb = [0] * n\nfor i in range(n):\n    if i % 2 == 0:\n        b.append(a[i])\n    else:\n        b[n-i-1] = a[i]\n\nprint(' '.join(b))\n```\n "
    },
    {
        "user_id": "u763249708",
        "problem_id": "p03416",
        "submission1_id": "s018720992",
        "code_content": "\na, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b+1):\n    s = str(i)\n    sl = len(s) - 1\n    \n    if s[:sl] == s[-sl:]: ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b+1):\n    s = str(i)\n    sl = len(s) - 1\n    \n    if s[:sl] == s[-sl:]: ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u608726540",
        "problem_id": "p03943",
        "submission1_id": "s598114851",
        "code_content": "\na,b,c=map(int,input().split())\nif (a+b+c)%2==0 and a!=b!=c:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\na,b,c=map(int,input().split())\nif (a+b+c)%2==0 and a!=b!=c:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u170324846",
        "problem_id": "p03200",
        "submission1_id": "s195667734",
        "code_content": "\nS = input()\nN = len(S)\nA = []\n\nfor i, s in enumerate(S):\n  if s == \"W\":\n    A.append(i)\nprint(max(sum(A)-len(A)-1, 0))",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\nA = []\n\nfor i, s in enumerate(S):\n  if s == \"W\":\n    A.append(i)\nprint(max(sum(A)-len(A)-1, 0))```\n "
    },
    {
        "user_id": "u226155577",
        "problem_id": "p03783",
        "submission1_id": "s224915491",
        "code_content": "\n\nN = int(input())\nP = [list(map(int, input().split())) for i in range(N)]\n\nINF = 10**18\n\nfrom heapq import heappush, heappop\n\nl0, r0 = P[0]\n\nL = [-l0+1]\nR = [l0-1]\ns = t = 0\n\ndef debug(L, s, t, R):\n    L0 = L[:]\n    Q1 = []; Q2 = []\n    while L0:\n        Q1.append(-s-heappop(L0))\n    R0 = R[:]\n    while R0:\n        Q2.append(t+heappop(R0))\n    print(\"debug:\", *Q1[::-1]+Q2)\n\n\n\nres = 0\nfor i in range(N-1):\n    l0, r0 = P[i]\n    l1, r1 = P[i+1]\n    \n    s += (r1 - l1); t += (r0 - l0)\n    if -s-L[0] <= l1-1 <= t+R[0]:\n        \n        heappush(L, -l1+1-s)\n        heappush(R, l1-1-t)\n        \n    elif l1-1 < -s-L[0]:\n        \n        heappush(L, -l1+1-s)\n        heappush(L, -l1+1-s)\n        p = -heappop(L)-s\n        heappush(R, p-t)\n        \n        if p-t == 0:\n            res += p - (l1-1)\n        else:\n            res += p-t\n    elif t+R[0] < l1-1:\n        \n        heappush(R, l1-1-t)\n        heappush(R, l1-1-t)\n        p = heappop(R) + t\n        heappush(L, -p-s)\n        \n        if p-t == 0:\n            res += (l1-1) - p\n        else:\n            res += p-t\n    \n    \nprint(res)\n",
        "origin_generated_text": "\n```\n\nN = int(input())\nP = [list(map(int, input().split())) for i in range(N)]\n\nINF = 10**18\n\nfrom heapq import heappush, heappop\n\nl0, r0 = P[0]\n\nL = [-l0+1]\nR = [l0-1]\ns = t = 0\n\ndef debug(L, s, t, R):\n    L0 = L[:]\n    Q1 = []; Q2 = []\n    while L0:\n        Q1.append(-s-heappop(L0))\n    R0 = R[:]\n    while R0:\n        Q2.append(t+heappop(R0))\n    print(\"debug:\", *Q1[::-1]+Q2)\n\n\n\nres = 0\nfor i in range(N-1):\n    l0, r0 = P[i]\n    l1, r1 = P[i+1]\n    \n    s += (r1 - l1); t += (r0 - l0)\n    if -s-L[0] <= l1-1 <= t+R[0]:\n        \n        heappush(L, -l1+1-s)\n        heappush(R, l1-1-t)\n        \n    elif l1-1 < -s-L[0]:\n        \n        heappush(L, -l1+1-s)\n        heappush(L, -l1+1-s)\n        p = -heappop(L)-s\n        heappush(R, p-t)\n        \n        if p-t == 0:\n            res += p - (l1-1)\n        else:\n            res += p-t\n    elif t+R[0] < l1-1:\n        \n        heappush(R, l1-1-t)\n        heappush(R, l1-1-t)\n        p = heappop(R) + t\n        heappush(L, -p-s)\n        \n        if p-t == 0:\n            res += (l1-1) - p\n        else:\n            res += p-t\n    \n    \nprint(res)\n```\n "
    },
    {
        "user_id": "u703823201",
        "problem_id": "p02959",
        "submission1_id": "s125837125",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncnt = 0\nfor n in range(N):\n    if A[n] <= B[n]:\n        cnt += A[n]\n        B[n] -= A[n]\n        if A[n+1] < B[n]:\n            cnt += A[n+1]\n            B[n] -= A[n+1]\n        else:\n            cnt += B[n]\n            A[n+1] -= B[n]\n    else:\n        cnt += B[n]\n        \nprint(cnt)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncnt = 0\nfor n in range(N):\n    if A[n] <= B[n]:\n        cnt += A[n]\n        B[n] -= A[n]\n        if A[n+1] < B[n]:\n            cnt += A[n+1]\n            B[n] -= A[n+1]\n        else:\n            cnt += B[n]\n            A[n+1] -= B[n]\n    else:\n        cnt += B[n]\n        \nprint(cnt)```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s645705480",
        "code_content": "\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u547167033",
        "problem_id": "p03480",
        "submission1_id": "s733491833",
        "code_content": "\ns=input()\nn=len(s)\nans=0\nfor i in range(n-1):\n  if s[i+1]!=s[i]:   \n    ans=max(ans,i+1)\nprint(ans)",
        "origin_generated_text": "\n```\ns=input()\nn=len(s)\nans=0\nfor i in range(n-1):\n  if s[i+1]!=s[i]:   \n    ans=max(ans,i+1)\nprint(ans)```\n "
    },
    {
        "user_id": "u600402037",
        "problem_id": "p03274",
        "submission1_id": "s997281529",
        "code_content": "\nN, K = map(int, input().split())\nX = list(map(int, input().split()))\n\nanswer = 10 ** 9\nfor i in range(N-K+1):\n    b, c = X[i], X[i+K-1]\n    if b * c >= 0:\n        answer = min(answer, max(abs(b), abs(c)))\n    else:\n        answer = min(answer, abs(b)*2+abs(c)-2*abs(b*c/abs(c)))\nprint(answer)",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nX = list(map(int, input().split()))\n\nanswer = 10 ** 9\nfor i in range(N-K+1):\n    b, c = X[i], X[i+K-1]\n    if b * c >= 0:\n        answer = min(answer, max(abs(b), abs(c)))\n    else:\n        answer = min(answer, abs(b)*2+abs(c)-2*abs(b*c/abs(c)))\nprint(answer)```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p03475",
        "submission1_id": "s700309976",
        "code_content": "\nN = int(input())\nl = [list(map(int, input().split())) for j in range(N-1)]\n\nt = []\nfor i in range(N):\n    t.append(0)\n\nfor i in range(N-1):\n    t[i+1] = t[i] + l[i][0]\n    for j in range(1, N-i-1):\n        if t[i+j+1] < t[i+j] + l[i+j][1]:\n            t[i+j+1] = t[i+j] + l[i+j][1] + l[i+j][0]\n           \n        else: \n            t[i+j+1] += -(t[i+j+1]%(l[i+j][2])) + l[i+j][2] + l[i+j][0] \n\nfor i in range(N):\n    print(t[i])\n\n",
        "origin_generated_text": "\n```\nN = int(input())\nl = [list(map(int, input().split())) for j in range(N-1)]\n\nt = []\nfor i in range(N):\n    t.append(0)\n\nfor i in range(N-1):\n    t[i+1] = t[i] + l[i][0]\n    for j in range(1, N-i-1):\n        if t[i+j+1] < t[i+j] + l[i+j][1]:\n            t[i+j+1] = t[i+j] + l[i+j][1] + l[i+j][0]\n           \n        else: \n            t[i+j+1] += -(t[i+j+1]%(l[i+j][2])) + l[i+j][2] + l[i+j][0] \n\nfor i in range(N):\n    print(t[i])\n\n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p03087",
        "submission1_id": "s130037485",
        "code_content": "\nN,Q=list(map(int, input().split()))\nS=input()\n\n\ndp=[0]*(N+1)\nfor i in range(N):\n    if S[i]=='A':\n        dp[i+1]=1\n    elif S[i]=='C':\n        dp[i+1]=dp[i]\n    else:\n        dp[i+1]=dp[i]\n\n\n\nfor i in range(Q):\n    l,r=list(map(int, input().split()))\n    print(dp[r]-dp[l-1]-int(S[l-1]=='A'))",
        "origin_generated_text": "\n```\nN,Q=list(map(int, input().split()))\nS=input()\n\n\ndp=[0]*(N+1)\nfor i in range(N):\n    if S[i]=='A':\n        dp[i+1]=1\n    elif S[i]=='C':\n        dp[i+1]=dp[i]\n    else:\n        dp[i+1]=dp[i]\n\n\n\nfor i in range(Q):\n    l,r=list(map(int, input().split()))\n    print(dp[r]-dp[l-1]-int(S[l-1]=='A'))```\n "
    },
    {
        "user_id": "u619458041",
        "problem_id": "p03626",
        "submission1_id": "s117133146",
        "code_content": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    A = [list(map(str, input().strip())) for _ in range(2)]\n    MOD = 10**9 + 7\n\n    D = []\n    flag = False\n    for i in range(N):\n        if A[0][i] != A[1][i] and flag:\n            D.append('h')\n            flag = False\n        elif A[0][i] != A[1][i]:\n            flag = True\n        else:\n            D.append('v')\n\n    ans = 1\n    for i in range(1, len(D)):\n        if D[i-1] == 'v' and D[i] == 'h':\n            ans *= 2\n        elif D[i-1] == 'v' and D[i] == 'v':\n            ans *= 2\n        elif D[i-1] == 'h' and D[i] == 'h':\n            ans *= 3\n        else:\n            ans *= 1\n\n    return ans % MOD\n\n\nif __name__ == '__main__':\n    print(main())\n",
        "origin_generated_text": "\n```\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    A = [list(map(str, input().strip())) for _ in range(2)]\n    MOD = 10**9 + 7\n\n    D = []\n    flag = False\n    for i in range(N):\n        if A[0][i] != A[1][i] and flag:\n            D.append('h')\n            flag = False\n        elif A[0][i] != A[1][i]:\n            flag = True\n        else:\n            D.append('v')\n\n    ans = 1\n    for i in range(1, len(D)):\n        if D[i-1] == 'v' and D[i] == 'h':\n            ans *= 2\n        elif D[i-1] == 'v' and D[i] == 'v':\n            ans *= 2\n        elif D[i-1] == 'h' and D[i] == 'h':\n            ans *= 3\n        else:\n            ans *= 1\n\n    return ans % MOD\n\n\nif __name__ == '__main__':\n    print(main())\n```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s422722224",
        "code_content": "\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                      \", left key =\"+str(plist[1][0])+\n                      \", right key =\"+str(plist[1][1])+\",\")\n            else :\n                l = int(j/2)\n                print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                      str(plist[i-1][l])+\", left key =\"+str(plist[i+1][2*j])+\n                      \", right key =\"+str(plist[i+1][2*j+1])+\",\")\n        except:\n            l = int(j/2)\n            print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                  str(plist[i-1][l])+\",\")\n        k += 1\n",
        "origin_generated_text": "\n```\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                      \", left key =\"+str(plist[1][0])+\n                      \", right key =\"+str(plist[1][1])+\",\")\n            else :\n                l = int(j/2)\n                print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                      str(plist[i-1][l])+\", left key =\"+str(plist[i+1][2*j])+\n                      \", right key =\"+str(plist[i+1][2*j+1])+\",\")\n        except:\n            l = int(j/2)\n            print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\", parent key =\"+\n                  str(plist[i-1][l])+\",\")\n        k += 1\n```\n "
    },
    {
        "user_id": "u467307100",
        "problem_id": "p03573",
        "submission1_id": "s070918481",
        "code_content": "\na,  b, c = map(int,input().split())\nif a == b:\n  print(c)\nif b == c:\n  print(a)\nif a ==c:\n  print(b)",
        "origin_generated_text": "\n```\na,  b, c = map(int,input().split())\nif a == b:\n  print(c)\nif b == c:\n  print(a)\nif a ==c:\n  print(b)```\n "
    },
    {
        "user_id": "u568576853",
        "problem_id": "p03546",
        "submission1_id": "s611541731",
        "code_content": "\nh,w=map(int,input().split())\nwlist=[[0]*10 for _ in range(10)]\nfor i in range(10):\n    for j in range(10):\n        wlist[i][j]=list(map(int,input().split()))[j]\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            wlist[i][j]=min(wlist[i][j],wlist[i][k]+wlist[k][j])\nans=0\nfor _ in range(h):\n    t=list(map(int,input().split()))\n    for i in t:\n        if i==-1 or i==1:\n            continue\n        else:\n            ans+=wlist[i][1]\nprint(ans)",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nwlist=[[0]*10 for _ in range(10)]\nfor i in range(10):\n    for j in range(10):\n        wlist[i][j]=list(map(int,input().split()))[j]\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            wlist[i][j]=min(wlist[i][j],wlist[i][k]+wlist[k][j])\nans=0\nfor _ in range(h):\n    t=list(map(int,input().split()))\n    for i in t:\n        if i==-1 or i==1:\n            continue\n        else:\n            ans+=wlist[i][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u411353821",
        "problem_id": "p02922",
        "submission1_id": "s871152411",
        "code_content": "\n(A, B), = [list(map(int, s.split())) for s in open(0)]\nif B % A == 0:\n    print(B\nelse:\n    t = 1\n    while A + (A - 1)*(t - 1) < B:\n        t += 1\n    print(t)",
        "origin_generated_text": "\n```\n(A, B), = [list(map(int, s.split())) for s in open(0)]\nif B % A == 0:\n    print(B\nelse:\n    t = 1\n    while A + (A - 1)*(t - 1) < B:\n        t += 1\n    print(t)```\n "
    },
    {
        "user_id": "u327466606",
        "problem_id": "p02642",
        "submission1_id": "s558420596",
        "code_content": "\nfrom itertools import islice\ndef solve(A):\n    memo = [0]*(10**6+1)\n\n    for a in A:\n        memo[a] += 1\n    if memo[1] > 0:\n        return 1 if memo[1] == 1 else 0\n\n    res = 0\n    for i,v in enumerate(islice(memo,2,None),start=2):\n        if v > 0:\n            j = i\n            while j <= 10**6:\n                memo[j] = 0\n                j += i\n            res += v\n    return res\n\nif __name__ == '__main__':\n    N = int(input())\n    A = list(map(int,input().split()))\n    print(solve(A))\n",
        "origin_generated_text": "\n```\nfrom itertools import islice\ndef solve(A):\n    memo = [0]*(10**6+1)\n\n    for a in A:\n        memo[a] += 1\n    if memo[1] > 0:\n        return 1 if memo[1] == 1 else 0\n\n    res = 0\n    for i,v in enumerate(islice(memo,2,None),start=2):\n        if v > 0:\n            j = i\n            while j <= 10**6:\n                memo[j] = 0\n                j += i\n            res += v\n    return res\n\nif __name__ == '__main__':\n    N = int(input())\n    A = list(map(int,input().split()))\n    print(solve(A))\n```\n "
    },
    {
        "user_id": "u352394527",
        "problem_id": "p02327",
        "submission1_id": "s686242624",
        "code_content": "\nh, w = map(int, input().split())\n\nmp = []\nfor _ in range(h):\n  lst = list(map(int, input().split()))\n  cum = []\n  acc = 0\n  for i in lst:\n    if not i:\n      acc += 1\n    else:\n      acc = 0\n    cum.append(acc)\n  mp.append(cum)\nmp.append([-1] * w)\nans = 0\n\nfor i in range(w - 1, -1, -1):\n  stack = []\n\n  for j in range(h + 1):\n\n    score = mp[j][i]\n    if not stack:\n      stack.append((score, j))\n    else:\n      last_score, last_ind = stack[-1][0], stack[-1][1]\n      if score > last_score:\n        stack.append((score, j))\n      elif score == last_score:\n        continue\n      else:\n        while stack and last_score >= score:\n          last_score, last_ind = stack.pop()\n          ans = max(ans, last_score * (j - last_ind))\n        stack.append((score, last_ind))\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nh, w = map(int, input().split())\n\nmp = []\nfor _ in range(h):\n  lst = list(map(int, input().split()))\n  cum = []\n  acc = 0\n  for i in lst:\n    if not i:\n      acc += 1\n    else:\n      acc = 0\n    cum.append(acc)\n  mp.append(cum)\nmp.append([-1] * w)\nans = 0\n\nfor i in range(w - 1, -1, -1):\n  stack = []\n\n  for j in range(h + 1):\n\n    score = mp[j][i]\n    if not stack:\n      stack.append((score, j))\n    else:\n      last_score, last_ind = stack[-1][0], stack[-1][1]\n      if score > last_score:\n        stack.append((score, j))\n      elif score == last_score:\n        continue\n      else:\n        while stack and last_score >= score:\n          last_score, last_ind = stack.pop()\n          ans = max(ans, last_score * (j - last_ind))\n        stack.append((score, last_ind))\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u295294832",
        "problem_id": "p02963",
        "submission1_id": "s089158769",
        "code_content": "\nN = int(input())\nprint(0,0,1,10**9,0,N",
        "origin_generated_text": "\n```\nN = int(input())\nprint(0,0,1,10**9,0,N```\n "
    },
    {
        "user_id": "u847923740",
        "problem_id": "p02718",
        "submission1_id": "s874811528",
        "code_content": "\n\n\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    n,m=map(int,input().split())\n    A=list(map(int,input().split()))\n    cnt=0\n    for i in range(n):\n        if A[i]>=1/(4*m):\n            cnt+=1\n    if cnt>=m:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    \n    \n    \nif __name__==\"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\n\n\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    n,m=map(int,input().split())\n    A=list(map(int,input().split()))\n    cnt=0\n    for i in range(n):\n        if A[i]>=1/(4*m):\n            cnt+=1\n    if cnt>=m:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    \n    \n    \nif __name__==\"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s378701862",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u413165887",
        "problem_id": "p03096",
        "submission1_id": "s371351230",
        "code_content": "\nn = int(input())\nc = [int(input()) for _i in range(n)]\nc.append(-1)\ndic = {}\ndp = [0 for _i in range(n+1)]\ndp[n] = 1\nmod = 10**9 +7\nfor i in range(n):\n    if c[i-1] != c[i]:\n        if c[i] in dic:\n            dp[i] = (dp[i-1] + dic[c[i]])%mod\n        else:\n            dp[i] = dp[i-1]\n        dic[c[i]] = dp[i]\n    else:\n        dp[i] = dp[i-1]\n    \nprint(dp[n])",
        "origin_generated_text": "\n```\nn = int(input())\nc = [int(input()) for _i in range(n)]\nc.append(-1)\ndic = {}\ndp = [0 for _i in range(n+1)]\ndp[n] = 1\nmod = 10**9 +7\nfor i in range(n):\n    if c[i-1] != c[i]:\n        if c[i] in dic:\n            dp[i] = (dp[i-1] + dic[c[i]])%mod\n        else:\n            dp[i] = dp[i-1]\n        dic[c[i]] = dp[i]\n    else:\n        dp[i] = dp[i-1]\n    \nprint(dp[n])```\n "
    },
    {
        "user_id": "u626337957",
        "problem_id": "p02553",
        "submission1_id": "s227447881",
        "code_content": "\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*c, b*d, a*d))",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*c, b*d, a*d))```\n "
    },
    {
        "user_id": "u560464565",
        "problem_id": "p03080",
        "submission1_id": "s645915524",
        "code_content": "\n\n\nimport sys\n\ninput = sys.stdin.readline\nN = int(input())\ns = input().strip()\nr = 0\nb = 0\n\nfor i in range(0, len(s)):\n    if s[i] == 'R':\n        r += 1\n    else:\n        b += 1\n\nif r > b:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\n\n\nimport sys\n\ninput = sys.stdin.readline\nN = int(input())\ns = input().strip()\nr = 0\nb = 0\n\nfor i in range(0, len(s)):\n    if s[i] == 'R':\n        r += 1\n    else:\n        b += 1\n\nif r > b:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u297109012",
        "problem_id": "p03096",
        "submission1_id": "s466991840",
        "code_content": "\ndef solve(N, Cs):\n    counts = [-1 for _ in Cs] + [1]\n    latest_c = {}\n    ans = 1\n    d = 10**9 + 7\n    for i, c in enumerate(Cs):\n        if c not in latest_c:\n            latest_c[c] = i\n            counts[i] = ans\n        else:\n            previous_i = latest_c[c]\n            if previous_i != i - 1:\n                ans += counts[previous_i - 1]\n                ans %= d\n            latest_c[c] = i\n            counts[i] = ans\n    return ans % d\n\nif __name__ == \"__main__\":\n    N = int(input())\n    Cs = [int(input()) for _ in range(N)]\n    print(solve(N, Cs))\n",
        "origin_generated_text": "\n```\ndef solve(N, Cs):\n    counts = [-1 for _ in Cs] + [1]\n    latest_c = {}\n    ans = 1\n    d = 10**9 + 7\n    for i, c in enumerate(Cs):\n        if c not in latest_c:\n            latest_c[c] = i\n            counts[i] = ans\n        else:\n            previous_i = latest_c[c]\n            if previous_i != i - 1:\n                ans += counts[previous_i - 1]\n                ans %= d\n            latest_c[c] = i\n            counts[i] = ans\n    return ans % d\n\nif __name__ == \"__main__\":\n    N = int(input())\n    Cs = [int(input()) for _ in range(N)]\n    print(solve(N, Cs))\n```\n "
    },
    {
        "user_id": "u552176911",
        "problem_id": "p03475",
        "submission1_id": "s799920919",
        "code_content": "\nimport math\n\nn = int(input())\ncL = []\nsL = []\nfL = []\nfor i in range(n - 1):\n    c, s, f = map(int, input().split(\" \"))\n    cL.append(c)\n    sL.append(s)\n    fL.append(f)\n\nans = 0\nfor i in range(n - 1):\n    sm = 0\n    for j in range(i, n - 1):\n        c = cL[j]\n        s = sL[j]\n        f = fL[j]\n        if sm < s:\n            sm = s\n        sm += c + (f - (sm - s) % f)\n    print(sm)\nprint(0)",
        "origin_generated_text": "\n```\nimport math\n\nn = int(input())\ncL = []\nsL = []\nfL = []\nfor i in range(n - 1):\n    c, s, f = map(int, input().split(\" \"))\n    cL.append(c)\n    sL.append(s)\n    fL.append(f)\n\nans = 0\nfor i in range(n - 1):\n    sm = 0\n    for j in range(i, n - 1):\n        c = cL[j]\n        s = sL[j]\n        f = fL[j]\n        if sm < s:\n            sm = s\n        sm += c + (f - (sm - s) % f)\n    print(sm)\nprint(0)```\n "
    },
    {
        "user_id": "u188916636",
        "problem_id": "p02917",
        "submission1_id": "s405952669",
        "code_content": "\nN = int(input())\nB = list(map(int, input().split()))\n\nA=[0 for i in range(N)] \nA[0]=B[0]\nA[N-2]=B[N-2]\nA[N-1]=B[N-2]\n\nfor i in range(1,N-1):\n  A[i] = min(B[i-1],B[i],A[i-1])\n  \nprint(sum(A))",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int, input().split()))\n\nA=[0 for i in range(N)] \nA[0]=B[0]\nA[N-2]=B[N-2]\nA[N-1]=B[N-2]\n\nfor i in range(1,N-1):\n  A[i] = min(B[i-1],B[i],A[i-1])\n  \nprint(sum(A))```\n "
    },
    {
        "user_id": "u062691227",
        "problem_id": "p03970",
        "submission1_id": "s648631440",
        "code_content": "\ns = input()\nprint(sum(a!=b for a, b in zip(s, 'CODEFESTIVAL2016')))",
        "origin_generated_text": "\n```\ns = input()\nprint(sum(a!=b for a, b in zip(s, 'CODEFESTIVAL2016')))```\n "
    },
    {
        "user_id": "u360116509",
        "problem_id": "p03626",
        "submission1_id": "s542694879",
        "code_content": "\ndef main():\n    N = int(input())\n    S1 = input()\n    S2 = input()\n    ans = 3\n    i = 0\n    while N - 1 > i:\n        if S1[i] == S2[i]:\n            if S1[i + 1] == S2[i + 1]:\n                ans *= 2\n            i += 1\n        else:\n            if N > i + 2 and S1[i + 2] != S2[i + 2]:\n                ans *= 3\n            else:\n                ans *= 2\n            i += 2\n    print(ans % 1000000007)\n\n\nmain()\n",
        "origin_generated_text": "\n```\ndef main():\n    N = int(input())\n    S1 = input()\n    S2 = input()\n    ans = 3\n    i = 0\n    while N - 1 > i:\n        if S1[i] == S2[i]:\n            if S1[i + 1] == S2[i + 1]:\n                ans *= 2\n            i += 1\n        else:\n            if N > i + 2 and S1[i + 2] != S2[i + 2]:\n                ans *= 3\n            else:\n                ans *= 2\n            i += 2\n    print(ans % 1000000007)\n\n\nmain()\n```\n "
    },
    {
        "user_id": "u143509139",
        "problem_id": "p03734",
        "submission1_id": "s941592048",
        "code_content": "\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i][j][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i][j + 1][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n",
        "origin_generated_text": "\n```\nn, W = map(int, input().split())\ndp = [[[0] * 301 for _ in range(n + 1)] for _ in range(n + 1)]\nli = [list(map(int, input().split())) for _ in range(n)]\np = li[0][0]\nfor i, x in enumerate(li):\n    w, v = x\n    w -= p\n    for j in range(i + 1):\n        for k in range(301):\n            if k >= w:\n                if dp[i][j][k - w] + v > dp[i][j][k]:\n                    dp[i + 1][j + 1][k] = dp[i][j][k - w] + v\n                else:\n                    dp[i + 1][j + 1][k] = dp[i][j + 1][k]\n            else:\n                dp[i + 1][j + 1][k] = dp[i][j + 1][k]\nans = 0\nfor i in range(n + 1):\n    for k in range(301):\n        if i * p + k <= W:\n            ans = max(dp[n][i][k], ans)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u278379520",
        "problem_id": "p03477",
        "submission1_id": "s334659691",
        "code_content": "\na,b,c,d=map(int,input().split())\nif a+b<c+d:\n    print('Right')\nelif a+b>c+d:\n    print('Left')\nelse:\n    print('Balanced')\n",
        "origin_generated_text": "\n```\na,b,c,d=map(int,input().split())\nif a+b<c+d:\n    print('Right')\nelif a+b>c+d:\n    print('Left')\nelse:\n    print('Balanced')\n```\n "
    },
    {
        "user_id": "u095192632",
        "problem_id": "p02742",
        "submission1_id": "s770535226",
        "code_content": "\nH, W = map(int, input().split())\nif W > H:\n\tHW = H*W\n\tprint(sum(divmod(HW, 2)))\nelse:\n\tprint(H*W)",
        "origin_generated_text": "\n```\nH, W = map(int, input().split())\nif W > H:\n\tHW = H*W\n\tprint(sum(divmod(HW, 2)))\nelse:\n\tprint(H*W)```\n "
    },
    {
        "user_id": "u941438707",
        "problem_id": "p02854",
        "submission1_id": "s459380367",
        "code_content": "\nn,*a=map(int,open(0).read().split())\nb=sum(a)\nc=b\nd=0\nfor i in a:\n    if i%2==1:\n        c-=i\n        d+=i\nprint(d)",
        "origin_generated_text": "\n```\nn,*a=map(int,open(0).read().split())\nb=sum(a)\nc=b\nd=0\nfor i in a:\n    if i%2==1:\n        c-=i\n        d+=i\nprint(d)```\n "
    },
    {
        "user_id": "u043236471",
        "problem_id": "p03206",
        "submission1_id": "s044476386",
        "code_content": "\nD = int(input())\nres = 'Christmas'\nfor _ in range(D, 25):\n    res += ' Eve'\nprint(res)",
        "origin_generated_text": "\n```\nD = int(input())\nres = 'Christmas'\nfor _ in range(D, 25):\n    res += ' Eve'\nprint(res)```\n "
    },
    {
        "user_id": "u703890795",
        "problem_id": "p03796",
        "submission1_id": "s317598015",
        "code_content": "\nN = int(input())\ns = 1\nfor i in range(1, N+1):\n  s *= i\n  s %= (7 + 1E+9)\nprint(s % (10**9 + 7))",
        "origin_generated_text": "\n```\nN = int(input())\ns = 1\nfor i in range(1, N+1):\n  s *= i\n  s %= (7 + 1E+9)\nprint(s % (10**9 + 7))```\n "
    },
    {
        "user_id": "u623231048",
        "problem_id": "p02642",
        "submission1_id": "s139844960",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\n\na.sort()\nli = [True] * (10**6 + 10)\nans = 0\n\nfor i in range(n):\n    if not li[a[i]]:\n        continue\n    li[a[i]] = False\n    ans += 1\n    tmp = a[i]\n    while tmp < len(li):\n        li[tmp] = False\n        tmp += a[i]\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\n\na.sort()\nli = [True] * (10**6 + 10)\nans = 0\n\nfor i in range(n):\n    if not li[a[i]]:\n        continue\n    li[a[i]] = False\n    ans += 1\n    tmp = a[i]\n    while tmp < len(li):\n        li[tmp] = False\n        tmp += a[i]\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u271176141",
        "problem_id": "p03573",
        "submission1_id": "s493924891",
        "code_content": "\n\nA,B,C = map(int,input().split())\n\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)",
        "origin_generated_text": "\n```\n\nA,B,C = map(int,input().split())\n\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)```\n "
    },
    {
        "user_id": "u691018832",
        "problem_id": "p03023",
        "submission1_id": "s422331517",
        "code_content": "\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\nprint(360+(n-3)*180)",
        "origin_generated_text": "\n```\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\nprint(360+(n-3)*180)```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03716",
        "submission1_id": "s522750953",
        "code_content": "\nimport heapq\n\nN = int(input())\nA = list(map(int,input().split()))\nC = A[N:(2*N)]\n\nL = []\nR = []\nfor i in range(N):\n  heapq.heappush(L,A[i]) \n  heapq.heappush(R,-A[-1-i]) \n\n\n\nans = 0\nfor i in range(N):\n  \n  if L[0] - C[i] >= R[0] + C[-1-i]: \n    ans += L[0] + C[i]\n    heapq.heappop(L)\n  else:\n    ans += R[0] + C[-1-i]\n    heapq.heappop(R)\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport heapq\n\nN = int(input())\nA = list(map(int,input().split()))\nC = A[N:(2*N)]\n\nL = []\nR = []\nfor i in range(N):\n  heapq.heappush(L,A[i]) \n  heapq.heappush(R,-A[-1-i]) \n\n\n\nans = 0\nfor i in range(N):\n  \n  if L[0] - C[i] >= R[0] + C[-1-i]: \n    ans += L[0] + C[i]\n    heapq.heappop(L)\n  else:\n    ans += R[0] + C[-1-i]\n    heapq.heappop(R)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u062484507",
        "problem_id": "p03475",
        "submission1_id": "s546551993",
        "code_content": "\nimport sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\nn = int(readline())\ncsf = [tuple(map(int, readline().split())) for _ in range(n-1)]\n\nfor i in range(n):\n    now = 0\n    for c, s, f in csf[i::]:\n        if now <= s:\n            now += s + c\n        else:\n            now += (now+c) % f\n    print(now)\n",
        "origin_generated_text": "\n```\nimport sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\nn = int(readline())\ncsf = [tuple(map(int, readline().split())) for _ in range(n-1)]\n\nfor i in range(n):\n    now = 0\n    for c, s, f in csf[i::]:\n        if now <= s:\n            now += s + c\n        else:\n            now += (now+c) % f\n    print(now)\n```\n "
    },
    {
        "user_id": "u255595446",
        "problem_id": "p02880",
        "submission1_id": "s720811989",
        "code_content": "\nnum = int(input())\nFlag = False\nfor x in range(1,10):\n    for y in range(1,10):\n        if x * y == num:\n            Flag = True\n            break\n    if Flag == True:\n        break\n\nif Flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nnum = int(input())\nFlag = False\nfor x in range(1,10):\n    for y in range(1,10):\n        if x * y == num:\n            Flag = True\n            break\n    if Flag == True:\n        break\n\nif Flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u625729943",
        "problem_id": "p02887",
        "submission1_id": "s886436298",
        "code_content": "\nN = int(input())\nS = input()\n\nS = S + 'A'\nlast = S[0]\ncnt = 0\nfor s in S[1:]:\n    if last == s:\n        continue\n    else:\n        cnt += 1\n        last = s\nprint(cnt)",
        "origin_generated_text": "\n```\nN = int(input())\nS = input()\n\nS = S + 'A'\nlast = S[0]\ncnt = 0\nfor s in S[1:]:\n    if last == s:\n        continue\n    else:\n        cnt += 1\n        last = s\nprint(cnt)```\n "
    },
    {
        "user_id": "u692632484",
        "problem_id": "p03087",
        "submission1_id": "s626075266",
        "code_content": "\nN,Q = [int(i) for i in input().split()]\nS=input()\nlr = [[int(j)-1 for j in input().split()] for i in range(Q)]\n\nimos = [0 for i in range(N)]\nfor i in range(N-1):\n    if S[i]=='A' and S[i+1]=='C':\n        imos[i]=1\nfor i in range(N-1):\n    imos[i+1]+=imos[i]\nfor l,r in lr:\n    res = imos[r]\n    if l>0:\n        res-=imos[l-1]\n    if S[l]=='A' and S[r]=='C':\n        res-=1\n    print(res)\n",
        "origin_generated_text": "\n```\nN,Q = [int(i) for i in input().split()]\nS=input()\nlr = [[int(j)-1 for j in input().split()] for i in range(Q)]\n\nimos = [0 for i in range(N)]\nfor i in range(N-1):\n    if S[i]=='A' and S[i+1]=='C':\n        imos[i]=1\nfor i in range(N-1):\n    imos[i+1]+=imos[i]\nfor l,r in lr:\n    res = imos[r]\n    if l>0:\n        res-=imos[l-1]\n    if S[l]=='A' and S[r]=='C':\n        res-=1\n    print(res)\n```\n "
    },
    {
        "user_id": "u692746605",
        "problem_id": "p03087",
        "submission1_id": "s227728523",
        "code_content": "\nN,Q=[int(i) for i in input().split()]\nS=input()\n\nc=[0]\nt = 0\nfor i in range(1,N):\n   t += 1 if  (S[i-1]=='A' and S[i] == 'C') else 0\n   c.append(t)\n\nfor _ in range(Q):\n    l,r=[int(x)-1 for x in input().split()]\n    print(c[r]-c[l])\n",
        "origin_generated_text": "\n```\nN,Q=[int(i) for i in input().split()]\nS=input()\n\nc=[0]\nt = 0\nfor i in range(1,N):\n   t += 1 if  (S[i-1]=='A' and S[i] == 'C') else 0\n   c.append(t)\n\nfor _ in range(Q):\n    l,r=[int(x)-1 for x in input().split()]\n    print(c[r]-c[l])\n```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s358030975",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    for _ in range(int.bit_length(N) + 1):\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while a < b:\n            u = bisect(X, X[a] + L) - 1\n            ans += u - a\n            a = Unreachs[a][u]\n        ans += 1\n        print(ans)\n    return 0\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    for _ in range(int.bit_length(N) + 1):\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while a < b:\n            u = bisect(X, X[a] + L) - 1\n            ans += u - a\n            a = Unreachs[a][u]\n        ans += 1\n        print(ans)\n    return 0\n\nmain()```\n "
    },
    {
        "user_id": "u253952966",
        "problem_id": "p03036",
        "submission1_id": "s784524952",
        "code_content": "\nr,d,x = map(int, input().split())\nfor i in range(10):\n  x =r*x-d\n  print(x)",
        "origin_generated_text": "\n```\nr,d,x = map(int, input().split())\nfor i in range(10):\n  x =r*x-d\n  print(x)```\n "
    },
    {
        "user_id": "u137226361",
        "problem_id": "p02580",
        "submission1_id": "s293915255",
        "code_content": "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "user_id": "u863397945",
        "problem_id": "p03087",
        "submission1_id": "s641909806",
        "code_content": "\n\n\n\nN,Q = map(int,input().split())\nS = input()\n\nl = [0]*(N-1)\n\nfor i in range(N-1):\n    if S[i] == \"A\" and S[i+1] == \"C\" or S[i] == \"C\" and S[i+1] == \"A\":\n        l[i] = 1\n\nfor i in range(Q):\n    lef,rig = map(int,input().split())\n    print(l[lef-1:rig].count(1))",
        "origin_generated_text": "\n```\n\n\n\nN,Q = map(int,input().split())\nS = input()\n\nl = [0]*(N-1)\n\nfor i in range(N-1):\n    if S[i] == \"A\" and S[i+1] == \"C\" or S[i] == \"C\" and S[i+1] == \"A\":\n        l[i] = 1\n\nfor i in range(Q):\n    lef,rig = map(int,input().split())\n    print(l[lef-1:rig].count(1))```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03677",
        "submission1_id": "s657822891",
        "code_content": "\nn,m=map(int,input().split())\narr=list(map(int,input().split()))\nimos1=[0]*(m*2+2)\nimos2=[0]*(m*2+2)\nimos3=[0]*(m*2+2)\nfor i in range(n-1):\n  cost=(m+arr[i+1]-arr[i])%m\n  if arr[i]<arr[i+1]:\n    imos2[arr[i]+1]+=1\n    imos2[arr[i+1]+1]+=1\n    imos3[arr[i+1]+1]+=cost\n    imos1[arr[i+1]+1]+=cost\n    imos1[m+arr[i+1]+1]-=1+cost\n    imos1[m+1]-=1+cost\n  else:\n    imos2[arr[i]+1]+=1\n    imos2[m+arr[i+1]+1]+=1\n    imos3[m+arr[i+1]+1]+=cost\n    imos1[arr[i+1]+1]+=cost\n    imos1[m+arr[i+1]+1]-=1+cost\n    imos1[m+1]-=1+cost\nfor i in range(1,m*2+2):\n  imos2[i]+=imos2[i-1]\nfor i in range(m*2+2):\n  imos1[i]+=imos2[i]\n  imos1[i]+=imos3[i]\nfor i in range(1,m*2+2):\n  imos1[i]+=imos1[i-1]\nxs=[0]*(m+1)\nxs[0]=10**18\nfor i in range(1,m+1):\n  xs[i]=imos1[i]+imos1[m+i]\nprint(min(xs))",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\narr=list(map(int,input().split()))\nimos1=[0]*(m*2+2)\nimos2=[0]*(m*2+2)\nimos3=[0]*(m*2+2)\nfor i in range(n-1):\n  cost=(m+arr[i+1]-arr[i])%m\n  if arr[i]<arr[i+1]:\n    imos2[arr[i]+1]+=1\n    imos2[arr[i+1]+1]+=1\n    imos3[arr[i+1]+1]+=cost\n    imos1[arr[i+1]+1]+=cost\n    imos1[m+arr[i+1]+1]-=1+cost\n    imos1[m+1]-=1+cost\n  else:\n    imos2[arr[i]+1]+=1\n    imos2[m+arr[i+1]+1]+=1\n    imos3[m+arr[i+1]+1]+=cost\n    imos1[arr[i+1]+1]+=cost\n    imos1[m+arr[i+1]+1]-=1+cost\n    imos1[m+1]-=1+cost\nfor i in range(1,m*2+2):\n  imos2[i]+=imos2[i-1]\nfor i in range(m*2+2):\n  imos1[i]+=imos2[i]\n  imos1[i]+=imos3[i]\nfor i in range(1,m*2+2):\n  imos1[i]+=imos1[i-1]\nxs=[0]*(m+1)\nxs[0]=10**18\nfor i in range(1,m+1):\n  xs[i]=imos1[i]+imos1[m+i]\nprint(min(xs))```\n "
    },
    {
        "user_id": "u315703650",
        "problem_id": "p03079",
        "submission1_id": "s604184355",
        "code_content": "\na = list(map(int,input().split()))\na.sort()\nif a[0]==a[1]==a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\na = list(map(int,input().split()))\na.sort()\nif a[0]==a[1]==a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u299257375",
        "problem_id": "p02407",
        "submission1_id": "s411274558",
        "code_content": "\nn = int(input())\nprint(*list(map(int, input().split()))[::-1], sep=\" \")\n",
        "origin_generated_text": "\n```\nn = int(input())\nprint(*list(map(int, input().split()))[::-1], sep=\" \")\n```\n "
    },
    {
        "user_id": "u692632484",
        "problem_id": "p03764",
        "submission1_id": "s481632788",
        "code_content": "\nINF=10**9+7\nL=[int(i)-1 for i in input().split()]\nx=[int(i)   for i in input().split()]\ny=[int(i)   for i in input().split()]\nx.sort()\ny.sort()\n\nX=[x[i+1]-x[i] for i in range(L[0])]\nY=[y[i+1]-y[i] for i in range(L[1])]\n\nusingX=[0 for i in range(L[0])]\nusingY=[0 for i in range(L[1])]\n\nif L[0]%2==0:\n\tfor i in range(L[0]):\n\t\ttemp=min(i,L[0]-i-1)\n\t\ttemp+=1\n\t\tusingX[i]+=int(temp*(temp+1)/2)\n\t\t\n\t\tusingX[i]+=temp*int(L[0]/2-temp)\n\t\t\n\t\tusingX[i]*=2\n\t\t\nelse:\n\tfor i in range(L[0]):\n\t\ttemp=min(i,L[0]-i-1)\n\t\ttemp+=1\n\t\tusingX[i]+=int(temp*(temp+1)/2)\n\t\tusingX[i]+=temp*int((L[0]-1)/2-temp)\n\t\tusingX[i]*=2\n\t\t\n\t\tusingX[i]+=temp\n\t\n\t\n\n\nif L[1]%2==0:\n\tfor i in range(L[1]):\n\t\ttemp=min(i,L[1]-i-1)\n\t\ttemp+=1\n\t\tusingY[i]+=int(temp*(temp+1)/2)\n\t\t\n\t\tusingY[i]+=temp*int(L[1]/2-temp)\n\t\t\n\t\tusingY[i]*=2\n\t\t\nelse:\n\tfor i in range(L[1]):\n\t\ttemp=min(i,L[1]-i-1)\n\t\ttemp+=1\n\t\tusingY[i]+=int(temp*(temp+1)/2)\n\t\tusingY[i]+=temp*int((L[1]-1)/2-temp)\n\t\tusingY[i]*=2\n\t\t\n\t\tusingY[i]+=temp\n\t\n\t\n\n\n\nfor i in range(L[0]):\n\tX[i]*=usingX[i]\nfor j in range(L[1]):\n\tY[j]*=usingY[j]\nans=sum(X)*sum(Y)\nprint(ans%INF)",
        "origin_generated_text": "\n```\nINF=10**9+7\nL=[int(i)-1 for i in input().split()]\nx=[int(i)   for i in input().split()]\ny=[int(i)   for i in input().split()]\nx.sort()\ny.sort()\n\nX=[x[i+1]-x[i] for i in range(L[0])]\nY=[y[i+1]-y[i] for i in range(L[1])]\n\nusingX=[0 for i in range(L[0])]\nusingY=[0 for i in range(L[1])]\n\nif L[0]%2==0:\n\tfor i in range(L[0]):\n\t\ttemp=min(i,L[0]-i-1)\n\t\ttemp+=1\n\t\tusingX[i]+=int(temp*(temp+1)/2)\n\t\t\n\t\tusingX[i]+=temp*int(L[0]/2-temp)\n\t\t\n\t\tusingX[i]*=2\n\t\t\nelse:\n\tfor i in range(L[0]):\n\t\ttemp=min(i,L[0]-i-1)\n\t\ttemp+=1\n\t\tusingX[i]+=int(temp*(temp+1)/2)\n\t\tusingX[i]+=temp*int((L[0]-1)/2-temp)\n\t\tusingX[i]*=2\n\t\t\n\t\tusingX[i]+=temp\n\t\n\t\n\n\nif L[1]%2==0:\n\tfor i in range(L[1]):\n\t\ttemp=min(i,L[1]-i-1)\n\t\ttemp+=1\n\t\tusingY[i]+=int(temp*(temp+1)/2)\n\t\t\n\t\tusingY[i]+=temp*int(L[1]/2-temp)\n\t\t\n\t\tusingY[i]*=2\n\t\t\nelse:\n\tfor i in range(L[1]):\n\t\ttemp=min(i,L[1]-i-1)\n\t\ttemp+=1\n\t\tusingY[i]+=int(temp*(temp+1)/2)\n\t\tusingY[i]+=temp*int((L[1]-1)/2-temp)\n\t\tusingY[i]*=2\n\t\t\n\t\tusingY[i]+=temp\n\t\n\t\n\n\n\nfor i in range(L[0]):\n\tX[i]*=usingX[i]\nfor j in range(L[1]):\n\tY[j]*=usingY[j]\nans=sum(X)*sum(Y)\nprint(ans%INF)```\n "
    },
    {
        "user_id": "u331226975",
        "problem_id": "p03079",
        "submission1_id": "s358100691",
        "code_content": "\nABC = list(map(int, input().split()))\nif ABC[0] + ABC[1] == ABC[2] or ABC[1] + ABC[2] == ABC[0] or ABC[0] + ABC[2] == ABC[1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nABC = list(map(int, input().split()))\nif ABC[0] + ABC[1] == ABC[2] or ABC[1] + ABC[2] == ABC[0] or ABC[0] + ABC[2] == ABC[1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s400383604",
        "code_content": "\nn = int(input())\ntree = [[-1, -1, True] for i in range(n)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    if left != -1:\n        tree[id][0] = left\n        tree[left][2] = False\n    if right != -1:\n        tree[id][1] = right\n        tree[right][2] = False\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nroot = 0\nfor i, node in enumerate(tree):\n    if node[2] == True:\n        root = i\n\npreoder(root)\nprint('')\ninorder(root)\nprint('')\npostorder(root)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\ntree = [[-1, -1, True] for i in range(n)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    if left != -1:\n        tree[id][0] = left\n        tree[left][2] = False\n    if right != -1:\n        tree[id][1] = right\n        tree[right][2] = False\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nroot = 0\nfor i, node in enumerate(tree):\n    if node[2] == True:\n        root = i\n\npreoder(root)\nprint('')\ninorder(root)\nprint('')\npostorder(root)\n\n```\n "
    },
    {
        "user_id": "u564105430",
        "problem_id": "p02274",
        "submission1_id": "s685915082",
        "code_content": "\n\n\n\nglobal cnt\ncnt=0\n\ndef merge(A,left,mid,right):\n    L=A[left:mid]\n    R=A[mid:right]\n    L.append(float(\"inf\"))\n    R.append(float(\"inf\"))\n    \n    i=0\n    j=0\n    for k in range(left,right):\n        global cnt\n        if L[i]<=R[j]:\n            A[k]=L[i]\n            i=i+1\n        else:\n            A[k]=R[j]\n            j=j+1\n            cnt+=mid-left-i\n\ndef mergeSort(A,left,right):\n    if left+1<right:\n        mid=(int)((left+right)/2)\n        mergeSort(A,left,mid)\n        mergeSort(A,mid,right)\n        merge(A,left,mid,right)\n\nn=int(input())\nS=list(map(int,input().split()))\n\nmergeSort(S,0,n)\nprint(cnt)\n",
        "origin_generated_text": "\n```\n\n\n\nglobal cnt\ncnt=0\n\ndef merge(A,left,mid,right):\n    L=A[left:mid]\n    R=A[mid:right]\n    L.append(float(\"inf\"))\n    R.append(float(\"inf\"))\n    \n    i=0\n    j=0\n    for k in range(left,right):\n        global cnt\n        if L[i]<=R[j]:\n            A[k]=L[i]\n            i=i+1\n        else:\n            A[k]=R[j]\n            j=j+1\n            cnt+=mid-left-i\n\ndef mergeSort(A,left,right):\n    if left+1<right:\n        mid=(int)((left+right)/2)\n        mergeSort(A,left,mid)\n        mergeSort(A,mid,right)\n        merge(A,left,mid,right)\n\nn=int(input())\nS=list(map(int,input().split()))\n\nmergeSort(S,0,n)\nprint(cnt)\n```\n "
    },
    {
        "user_id": "u793174294",
        "problem_id": "p03102",
        "submission1_id": "s721923233",
        "code_content": "\n\n\nN,M,C=map(int,input().split())\nB=list(map(int, input().split()))\ncount=0\n\nfor i in range(N):\n  A=list(map(int, input().split()))\n  total=0\n  for j in range(M):\n    total=total+(A[j]*B[j])\n  if total+C>0:\n    count+=1\n\nprint(count)",
        "origin_generated_text": "\n```\n\n\nN,M,C=map(int,input().split())\nB=list(map(int, input().split()))\ncount=0\n\nfor i in range(N):\n  A=list(map(int, input().split()))\n  total=0\n  for j in range(M):\n    total=total+(A[j]*B[j])\n  if total+C>0:\n    count+=1\n\nprint(count)```\n "
    },
    {
        "user_id": "u333945892",
        "problem_id": "p03677",
        "submission1_id": "s939773903",
        "code_content": "\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nN,M = inpl()\naa = inpl()\n\nyama_height = [0]*(2*M)\nyama_num = [0]*(2*M)\nSUM = 0\nfor i in range(1,N):\n\tna = aa[i]\n\tba = aa[i-1]\n\tif na < ba:\n\t\tna += M\n\tSUM += (na-ba)\n\tyama_height[na] = na - ba\n\tyama_num[na] -= 1\n\tyama_num[ba+1] += 1\n\ntmp = 0\nfor i in range(2*M):\n\ttmp += yama_num[i]\n\tyama_num[i] = tmp\n\nans_list = [0]*(M)\ntmp = 0\nfor i in reversed(range(2*M)):\n\ttmp += yama_height[i]\n\ttmp -= yama_num[i]\n\tans_list[i%M] += tmp\n\nprint(SUM-max(ans_list))\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nN,M = inpl()\naa = inpl()\n\nyama_height = [0]*(2*M)\nyama_num = [0]*(2*M)\nSUM = 0\nfor i in range(1,N):\n\tna = aa[i]\n\tba = aa[i-1]\n\tif na < ba:\n\t\tna += M\n\tSUM += (na-ba)\n\tyama_height[na] = na - ba\n\tyama_num[na] -= 1\n\tyama_num[ba+1] += 1\n\ntmp = 0\nfor i in range(2*M):\n\ttmp += yama_num[i]\n\tyama_num[i] = tmp\n\nans_list = [0]*(M)\ntmp = 0\nfor i in reversed(range(2*M)):\n\ttmp += yama_height[i]\n\ttmp -= yama_num[i]\n\tans_list[i%M] += tmp\n\nprint(SUM-max(ans_list))\n```\n "
    },
    {
        "user_id": "u852110531",
        "problem_id": "p02718",
        "submission1_id": "s821722284",
        "code_content": "\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\ntemp = int(sum(arr)/m)\ncnt = 0\nfor i in range(n):\n    if arr[i] >= temp:\n        cnt += 1\nif cnt >= m:\n    print(\"Yes\")\n    exit()\nprint(\"No\")",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\ntemp = int(sum(arr)/m)\ncnt = 0\nfor i in range(n):\n    if arr[i] >= temp:\n        cnt += 1\nif cnt >= m:\n    print(\"Yes\")\n    exit()\nprint(\"No\")```\n "
    },
    {
        "user_id": "u046158516",
        "problem_id": "p03943",
        "submission1_id": "s862208104",
        "code_content": "\na=list(map(int,input().split()))\na.sort()\nif a[0]+a[1]==a[2]:\n  print('Yes')\nelse:\n  print('No')\n",
        "origin_generated_text": "\n```\na=list(map(int,input().split()))\na.sort()\nif a[0]+a[1]==a[2]:\n  print('Yes')\nelse:\n  print('No')\n```\n "
    },
    {
        "user_id": "u645250356",
        "problem_id": "p04019",
        "submission1_id": "s963392513",
        "code_content": "\nfrom collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nmod2 = 998244353\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpln(n): return list(int(sys.stdin.readline()) for i in range(n))\n\ns = input()\nu = 0\nl = 0\nfor i in range(len(s)):\n    if s[i] == 'N':\n        u += 1\n    elif s[i] == 'S':\n        u -= 1\n    elif s[i] == 'E':\n        l += 1\n    else:\n        l -= 1\n    if u == 0 and l == 0:\n        print('Yes')\n        exit()\nif u != 0 or l != 0:\n    print('No')\nelse:\n    print('Yes')",
        "origin_generated_text": "\n```\nfrom collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nmod2 = 998244353\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpln(n): return list(int(sys.stdin.readline()) for i in range(n))\n\ns = input()\nu = 0\nl = 0\nfor i in range(len(s)):\n    if s[i] == 'N':\n        u += 1\n    elif s[i] == 'S':\n        u -= 1\n    elif s[i] == 'E':\n        l += 1\n    else:\n        l -= 1\n    if u == 0 and l == 0:\n        print('Yes')\n        exit()\nif u != 0 or l != 0:\n    print('No')\nelse:\n    print('Yes')```\n "
    },
    {
        "user_id": "u225528554",
        "problem_id": "p03480",
        "submission1_id": "s612105241",
        "code_content": "\nif __name__==\"__main__\":\n    l = list(input())\n    N = len(l)\n    results = []\n    for i in range(0,N-1):\n        if not l[i]==l[i+1]:\n            results.append(max(i+1,N-i-1))\n    print(min(results[0],N))",
        "origin_generated_text": "\n```\nif __name__==\"__main__\":\n    l = list(input())\n    N = len(l)\n    results = []\n    for i in range(0,N-1):\n        if not l[i]==l[i+1]:\n            results.append(max(i+1,N-i-1))\n    print(min(results[0],N))```\n "
    },
    {
        "user_id": "u225388820",
        "problem_id": "p03568",
        "submission1_id": "s444693788",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nf=1\nfor i in a:\n  if i%2:\n    f=0\nprint(f*3**n-1)",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nf=1\nfor i in a:\n  if i%2:\n    f=0\nprint(f*3**n-1)```\n "
    },
    {
        "user_id": "u163703551",
        "problem_id": "p03716",
        "submission1_id": "s419310295",
        "code_content": "\nimport sys\nimport heapq\n\n\ndef solve(n, a):\n    res = -10 ** 20\n    for i in range(n, 2 * n + 1):\n        l = a[0:i]\n        r = a[i:3 * n]\n        l.sort(reverse=True)\n        r.sort()\n        res0 = sum(l[0:n]) - sum(r[0:n])\n        if res0 > res:\n            res = res0\n    return res\n\n\ndef find_best(n, a):\n    h = list()\n    s = 0\n    best_s = -10 ** 20\n    res = list()\n    for i in range(0, 2 * n):\n        heapq.heappush(h, a[i])\n        s += a[i]\n        if len(h) > n:\n            m = heapq.heappop(h)\n            s -= m\n        if len(h) == n:\n            if best_s < s:\n                best_s = s\n            res.append(best_s)\n    return res\n\n\ndef solve_large(n, a):\n    res = -10 ** 20\n    max_l = find_best(n, a)\n    b = [-x for x in reversed(a)]\n    max_r = find_best(n, b)\n    max_r.reverse()\n    for l, r in zip(max_l, max_r):\n        res0 = l + r\n        if res < res0:\n            res = res0\n    return res\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve_large(n, a))\n",
        "origin_generated_text": "\n```\nimport sys\nimport heapq\n\n\ndef solve(n, a):\n    res = -10 ** 20\n    for i in range(n, 2 * n + 1):\n        l = a[0:i]\n        r = a[i:3 * n]\n        l.sort(reverse=True)\n        r.sort()\n        res0 = sum(l[0:n]) - sum(r[0:n])\n        if res0 > res:\n            res = res0\n    return res\n\n\ndef find_best(n, a):\n    h = list()\n    s = 0\n    best_s = -10 ** 20\n    res = list()\n    for i in range(0, 2 * n):\n        heapq.heappush(h, a[i])\n        s += a[i]\n        if len(h) > n:\n            m = heapq.heappop(h)\n            s -= m\n        if len(h) == n:\n            if best_s < s:\n                best_s = s\n            res.append(best_s)\n    return res\n\n\ndef solve_large(n, a):\n    res = -10 ** 20\n    max_l = find_best(n, a)\n    b = [-x for x in reversed(a)]\n    max_r = find_best(n, b)\n    max_r.reverse()\n    for l, r in zip(max_l, max_r):\n        res0 = l + r\n        if res < res0:\n            res = res0\n    return res\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve_large(n, a))\n```\n "
    },
    {
        "user_id": "u197427401",
        "problem_id": "p03023",
        "submission1_id": "s455254931",
        "code_content": "\nprint(-(int(input())-2) * 180)",
        "origin_generated_text": "\n```\nprint(-(int(input())-2) * 180)```\n "
    },
    {
        "user_id": "u518042385",
        "problem_id": "p03264",
        "submission1_id": "s978781518",
        "code_content": "\ni=int(input())\nif i%2==0:\n  print((i\nelse:\n  print((i",
        "origin_generated_text": "\n```\ni=int(input())\nif i%2==0:\n  print((i\nelse:\n  print((i```\n "
    },
    {
        "user_id": "u716641520",
        "problem_id": "p02556",
        "submission1_id": "s765500891",
        "code_content": "\nn = int(input())\nmaxx, minx, maxy, miny = -1**10, 1**10, -1**10, 1**10\nfor _ in range(n):\n\tx, y = map(int, input().split())\n\tx, y = x+y, x-y\n\tmaxx = max(maxx, x)\n\tminx = min(minx, x)\n\tmaxy = max(maxy, y)\n\tminy = min(miny, y)\nprint(max(maxx - minx, maxy - miny))\n",
        "origin_generated_text": "\n```\nn = int(input())\nmaxx, minx, maxy, miny = -1**10, 1**10, -1**10, 1**10\nfor _ in range(n):\n\tx, y = map(int, input().split())\n\tx, y = x+y, x-y\n\tmaxx = max(maxx, x)\n\tminx = min(minx, x)\n\tmaxy = max(maxy, y)\n\tminy = min(miny, y)\nprint(max(maxx - minx, maxy - miny))\n```\n "
    },
    {
        "user_id": "u011555727",
        "problem_id": "p02887",
        "submission1_id": "s383581698",
        "code_content": "\nn=int(input())\ns=input()\nk=0\nl=set(s)\nif len(l)==1:\n    print(n)\n    exit()\nfor i in range(n-1):\n    if s[i]==s[i+1] and s[i]!='a':\n        k+=1\nprint(n-k)",
        "origin_generated_text": "\n```\nn=int(input())\ns=input()\nk=0\nl=set(s)\nif len(l)==1:\n    print(n)\n    exit()\nfor i in range(n-1):\n    if s[i]==s[i+1] and s[i]!='a':\n        k+=1\nprint(n-k)```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s942807243",
        "code_content": "\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  else:\n    cou -= 1\n    if lis[i] == \"p\":\n      ans -= 1\nprint(ans)",
        "origin_generated_text": "\n```\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  else:\n    cou -= 1\n    if lis[i] == \"p\":\n      ans -= 1\nprint(ans)```\n "
    },
    {
        "user_id": "u888548672",
        "problem_id": "p00375",
        "submission1_id": "s466298205",
        "code_content": "\nprint(int((int(input())-30)/2))\n",
        "origin_generated_text": "\n```\nprint(int((int(input())-30)/2))\n```\n "
    },
    {
        "user_id": "u300538442",
        "problem_id": "p02912",
        "submission1_id": "s590096809",
        "code_content": "\nimport heapq\nX = list(map(int, input().split()))\nA = []\nfor i in range(X[0]):\n  A.append(int(input()))\nheapq.heapify(A)\n\nfor i in range(X[1]):\n  x = heapq.heappop(A)\n  heapq.heappush(A, int(x/2) * (-1))\n\nans = 0\nfor i in range(X[0]):\n  ans += int(A[i]/2**X[1])\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport heapq\nX = list(map(int, input().split()))\nA = []\nfor i in range(X[0]):\n  A.append(int(input()))\nheapq.heapify(A)\n\nfor i in range(X[1]):\n  x = heapq.heappop(A)\n  heapq.heappush(A, int(x/2) * (-1))\n\nans = 0\nfor i in range(X[0]):\n  ans += int(A[i]/2**X[1])\n\nprint(ans)```\n "
    },
    {
        "user_id": "u637175065",
        "problem_id": "p03734",
        "submission1_id": "s525440127",
        "code_content": "\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n,W = LI()\n    a = [LI() for _ in range(n)]\n    r = 0\n    d = collections.defaultdict(int)\n    d[0] = 0\n    for w,v in a:\n        for e in range(W+1):\n            if e+w > W:\n                continue\n            if d[e+w] < d[e] + v:\n                d[e+w] = d[e] + v\n\n    return max(d.values())\n\n\nprint(main())\n",
        "origin_generated_text": "\n```\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n,W = LI()\n    a = [LI() for _ in range(n)]\n    r = 0\n    d = collections.defaultdict(int)\n    d[0] = 0\n    for w,v in a:\n        for e in range(W+1):\n            if e+w > W:\n                continue\n            if d[e+w] < d[e] + v:\n                d[e+w] = d[e] + v\n\n    return max(d.values())\n\n\nprint(main())\n```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03477",
        "submission1_id": "s131498746",
        "code_content": "\na,b,c,d = map(int,input().split())\nprint(\"Left\" if a+b > c+d else \"Balanced\" if (a+b) == (c+d) else \"Right\")\n",
        "origin_generated_text": "\n```\na,b,c,d = map(int,input().split())\nprint(\"Left\" if a+b > c+d else \"Balanced\" if (a+b) == (c+d) else \"Right\")\n```\n "
    },
    {
        "user_id": "u471684875",
        "problem_id": "p02954",
        "submission1_id": "s726314930",
        "code_content": "\ns=str(input())\n\nl=[0]*len(s)\n\nfor i in range(len(s)):\n        if s[i]=='R' and i%2==0:\n                a=s.find('L',i+1)\n                l[a]+=1\n        elif s[i]=='R' and i%2==1:\n                a=s.find('L',i+1)\n                l[a-1]+=1\n        elif s[i]=='L' and i%2==0:\n                a=s.rfind('R',0,i)\n                l[a]+=1\n        elif s[i]=='L' and i%2==1:\n                a=s.rfind('R',0,i)\n                l[a+1]+=1\nprint(' '.join(map(str,l)))\n        ",
        "origin_generated_text": "\n```\ns=str(input())\n\nl=[0]*len(s)\n\nfor i in range(len(s)):\n        if s[i]=='R' and i%2==0:\n                a=s.find('L',i+1)\n                l[a]+=1\n        elif s[i]=='R' and i%2==1:\n                a=s.find('L',i+1)\n                l[a-1]+=1\n        elif s[i]=='L' and i%2==0:\n                a=s.rfind('R',0,i)\n                l[a]+=1\n        elif s[i]=='L' and i%2==1:\n                a=s.rfind('R',0,i)\n                l[a+1]+=1\nprint(' '.join(map(str,l)))\n        ```\n "
    },
    {
        "user_id": "u395202850",
        "problem_id": "p02854",
        "submission1_id": "s333024052",
        "code_content": "\nimport sys\nimport collections\nimport bisect\n\n\ndef main():\n    n = int(input())\n    AList = list(map(int, input().split()))\n    sumA = sum(AList)\n    for i in range(n):\n        if sumA - AList[i] <= AList[i]:\n            print(sumA - 2 * AList[i])\n            return\n    print(sumA)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nimport sys\nimport collections\nimport bisect\n\n\ndef main():\n    n = int(input())\n    AList = list(map(int, input().split()))\n    sumA = sum(AList)\n    for i in range(n):\n        if sumA - AList[i] <= AList[i]:\n            print(sumA - 2 * AList[i])\n            return\n    print(sumA)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u614917104",
        "problem_id": "p03729",
        "submission1_id": "s372167378",
        "code_content": "\na,b,c = input().split()\nn = 0\nif a[len(a)-1] == b[0] and b[len(b)-1] == c[0]:\n    print('YES')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\na,b,c = input().split()\nn = 0\nif a[len(a)-1] == b[0] and b[len(b)-1] == c[0]:\n    print('YES')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u372144784",
        "problem_id": "p03272",
        "submission1_id": "s477328991",
        "code_content": "\nn,i = map(int,input().split())\n\nprint(n-i+1)",
        "origin_generated_text": "\n```\nn,i = map(int,input().split())\n\nprint(n-i+1)```\n "
    },
    {
        "user_id": "u170201762",
        "problem_id": "p02962",
        "submission1_id": "s527201853",
        "code_content": "\ndef Z(S):\n    res = [0]*len(S)\n    res[0] = len(S)\n    i = 1\n    j = 0\n    while i < len(S):\n        while i+j < len(S) and S[j] == S[i+j]:\n            j += 1\n        res[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i+k < len(S) and k+res[k] < j:\n            res[i+k] = res[k]\n            k += 1\n        i += k\n        j -= k\n    return res\n\nclass UnionFind:\n    def __init__(self, num):\n        self.table = [-1 for _ in range(num)]\n        self.sz = [1 for _ in range(num)]\n\n    def find(self, x):\n        if self.table[x] < 0:\n            return x\n        else:\n            self.table[x] = self.find(self.table[x])\n            return self.table[x]\n\n    def union(self, x, y):\n        s1 = self.find(x)\n        s2 = self.find(y)\n\n        if s1 != s2:\n            size = self.sz[s1]+self.sz[s2]\n            if self.table[s1] <= self.table[s2]:\n                self.table[s1] += self.table[s2]\n                self.table[s2] = s1\n            else:\n                self.table[s2] += self.table[s1]\n                self.table[s1] = s2\n            self.sz[s1] = size\n            return True\n        return False\n\n    def size(self, x):\n        s = self.find(x)\n        return self.sz[s]\n\ns = input()\nt = input()\n\nz = Z(s+s)\nz = z[len(t)+1:]\nu = UnionFind(len(z))\nans = 0\nfor i in range(len(z)-len(t)):\n    if z[i]==len(t) and z[i+len(t)]==len(t):\n        u.union(i,i+len(t))\n        if i+len(t) < len(z):\n            ans = max(u.size(i),ans)\n        else:\n            if u.size(i) > ans:\n                ans = -1\n\nprint(ans)",
        "origin_generated_text": "\n```\ndef Z(S):\n    res = [0]*len(S)\n    res[0] = len(S)\n    i = 1\n    j = 0\n    while i < len(S):\n        while i+j < len(S) and S[j] == S[i+j]:\n            j += 1\n        res[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i+k < len(S) and k+res[k] < j:\n            res[i+k] = res[k]\n            k += 1\n        i += k\n        j -= k\n    return res\n\nclass UnionFind:\n    def __init__(self, num):\n        self.table = [-1 for _ in range(num)]\n        self.sz = [1 for _ in range(num)]\n\n    def find(self, x):\n        if self.table[x] < 0:\n            return x\n        else:\n            self.table[x] = self.find(self.table[x])\n            return self.table[x]\n\n    def union(self, x, y):\n        s1 = self.find(x)\n        s2 = self.find(y)\n\n        if s1 != s2:\n            size = self.sz[s1]+self.sz[s2]\n            if self.table[s1] <= self.table[s2]:\n                self.table[s1] += self.table[s2]\n                self.table[s2] = s1\n            else:\n                self.table[s2] += self.table[s1]\n                self.table[s1] = s2\n            self.sz[s1] = size\n            return True\n        return False\n\n    def size(self, x):\n        s = self.find(x)\n        return self.sz[s]\n\ns = input()\nt = input()\n\nz = Z(s+s)\nz = z[len(t)+1:]\nu = UnionFind(len(z))\nans = 0\nfor i in range(len(z)-len(t)):\n    if z[i]==len(t) and z[i+len(t)]==len(t):\n        u.union(i,i+len(t))\n        if i+len(t) < len(z):\n            ans = max(u.size(i),ans)\n        else:\n            if u.size(i) > ans:\n                ans = -1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u391731808",
        "problem_id": "p03952",
        "submission1_id": "s794959673",
        "code_content": "\nN,x = map(int,input().split())\nif N in {1,2*N-1} or x==2*N-1:print(\"No\")\nelse:\n    print(\"Yes\")\n    if x>=N:\n        ans = list(range(N,x))+list(range(x+1,2*N)) + [x] + list(range(1,N))\n    else:\n        ans = list(range(N+1,2*N)) + [x] + list(range(1,x)) + list(range(x+1,N+1))\n    print(\"\\n\".join(map(str,ans)))",
        "origin_generated_text": "\n```\nN,x = map(int,input().split())\nif N in {1,2*N-1} or x==2*N-1:print(\"No\")\nelse:\n    print(\"Yes\")\n    if x>=N:\n        ans = list(range(N,x))+list(range(x+1,2*N)) + [x] + list(range(1,N))\n    else:\n        ans = list(range(N+1,2*N)) + [x] + list(range(1,x)) + list(range(x+1,N+1))\n    print(\"\\n\".join(map(str,ans)))```\n "
    },
    {
        "user_id": "u307028468",
        "problem_id": "p02727",
        "submission1_id": "s520069102",
        "code_content": "\nX, Y, A, B, C = (int(x) for x in input().split())\nR = [int(i) for i in input().split()]\nG = [int(i) for i in input().split()]\nM = [int(i) for i in input().split()]\n\nR.sort(reverse=True)\nG.sort(reverse=True)\n\nfor i in range(X):\n  M.append(R[i])\n\nfor i in range(Y):\n  M.append(G[i])\n\nM.sort(reverse=True)\n\nans = 0\nfor i in range(X + Y):\n  ans = M[i] + ans\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nX, Y, A, B, C = (int(x) for x in input().split())\nR = [int(i) for i in input().split()]\nG = [int(i) for i in input().split()]\nM = [int(i) for i in input().split()]\n\nR.sort(reverse=True)\nG.sort(reverse=True)\n\nfor i in range(X):\n  M.append(R[i])\n\nfor i in range(Y):\n  M.append(G[i])\n\nM.sort(reverse=True)\n\nans = 0\nfor i in range(X + Y):\n  ans = M[i] + ans\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u704001626",
        "problem_id": "p03206",
        "submission1_id": "s983851982",
        "code_content": "\n\na = 25 - int(input())\nprint(\"Christmas\" + \" Eve\" * a)",
        "origin_generated_text": "\n```\n\na = 25 - int(input())\nprint(\"Christmas\" + \" Eve\" * a)```\n "
    },
    {
        "user_id": "u567124995",
        "problem_id": "p03272",
        "submission1_id": "s834711031",
        "code_content": "\nl = list(map(int, input().split()))\nprint((l[0] + l[1]) -1)\n",
        "origin_generated_text": "\n```\nl = list(map(int, input().split()))\nprint((l[0] + l[1]) -1)\n```\n "
    },
    {
        "user_id": "u888092736",
        "problem_id": "p02854",
        "submission1_id": "s500089526",
        "code_content": "\nfrom itertools import accumulate\n\n\nN = int(input())\nA = [0] + list(accumulate(map(int, input().split())))\nmin_diff = float(\"inf\")\nfor i in range(N - 1):\n    if abs(A[N] - 2 * A[i + 1]) < min_diff:\n        min_diff = abs(A[N] - 2 * A[i + 1])\nprint(min_diff)\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\n\nN = int(input())\nA = [0] + list(accumulate(map(int, input().split())))\nmin_diff = float(\"inf\")\nfor i in range(N - 1):\n    if abs(A[N] - 2 * A[i + 1]) < min_diff:\n        min_diff = abs(A[N] - 2 * A[i + 1])\nprint(min_diff)\n```\n "
    },
    {
        "user_id": "u156815136",
        "problem_id": "p02954",
        "submission1_id": "s180699724",
        "code_content": "\nS = input()\nn = len(S)\nmaze = [1] * n\n\nfor i in range(0,n-1):\n    if S[i] == S[i+1] == 'R':\n        maze[i+2] += maze[i]\n        maze[i] = 0\n\nfor i in range(n-1,0,-1):\n    if S[i] == S[i-1] == 'L':\n        maze[i-2] += maze[i]\n        maze[i] = 0\n\nprint(*maze)\n",
        "origin_generated_text": "\n```\nS = input()\nn = len(S)\nmaze = [1] * n\n\nfor i in range(0,n-1):\n    if S[i] == S[i+1] == 'R':\n        maze[i+2] += maze[i]\n        maze[i] = 0\n\nfor i in range(n-1,0,-1):\n    if S[i] == S[i-1] == 'L':\n        maze[i-2] += maze[i]\n        maze[i] = 0\n\nprint(*maze)\n```\n "
    },
    {
        "user_id": "u580806822",
        "problem_id": "p03296",
        "submission1_id": "s773308466",
        "code_content": "\nn=int(input())\na=[int(i)for i in input().split()]\n\ncount=0\np=1\nwhile p<n:\n    if a[p-1] == a[p]:\n        count+=1\n        a[p]=a[p-1]+a[p]+a[p+1]\n        p+=2\n    else:\n        p+=1\nprint(count)\n",
        "origin_generated_text": "\n```\nn=int(input())\na=[int(i)for i in input().split()]\n\ncount=0\np=1\nwhile p<n:\n    if a[p-1] == a[p]:\n        count+=1\n        a[p]=a[p-1]+a[p]+a[p+1]\n        p+=2\n    else:\n        p+=1\nprint(count)\n```\n "
    },
    {
        "user_id": "u591779169",
        "problem_id": "p03970",
        "submission1_id": "s810367927",
        "code_content": "\ns = input()\nS = \"CODEFESTIVAL2016\"\ncount = 0\nfor i in range(16):\n    if s[i] != S[i]:\n        count+=1\nprint(count)",
        "origin_generated_text": "\n```\ns = input()\nS = \"CODEFESTIVAL2016\"\ncount = 0\nfor i in range(16):\n    if s[i] != S[i]:\n        count+=1\nprint(count)```\n "
    },
    {
        "user_id": "u365013885",
        "problem_id": "p02886",
        "submission1_id": "s433917335",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split())) \nX = 0\nfor a in range(N):\n    for b in range(a+1,N):\n        X += A[a]*A[b]\nprint(X)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split())) \nX = 0\nfor a in range(N):\n    for b in range(a+1,N):\n        X += A[a]*A[b]\nprint(X)```\n "
    },
    {
        "user_id": "u081688405",
        "problem_id": "p03103",
        "submission1_id": "s028846453",
        "code_content": "\nN, M = map(int, input().split(\" \"))\nstores = []\n\nfor i in range(N):\n    Ai, Bi = map(int, input().split(\" \"))\n    stores.append((Ai, Bi))    \n\nprice = 0\nfor a, b in sorted(stores, key=lambda x: x[0], reverse=True):\n    if M <= b:\n        price += a * M\n        break\n    else:\n        price += a * b\n        M -= b\nprint(price)\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split(\" \"))\nstores = []\n\nfor i in range(N):\n    Ai, Bi = map(int, input().split(\" \"))\n    stores.append((Ai, Bi))    \n\nprice = 0\nfor a, b in sorted(stores, key=lambda x: x[0], reverse=True):\n    if M <= b:\n        price += a * M\n        break\n    else:\n        price += a * b\n        M -= b\nprint(price)\n```\n "
    },
    {
        "user_id": "u287500079",
        "problem_id": "p02854",
        "submission1_id": "s273156127",
        "code_content": "\nn = int(input())\na = [int(i) for i in input().split()]\nl = sum(a)\nl2 = l / 2\ntmp = 0\nerr = [l,l]\nerrindex = [0,0]\nfor i in range(n):\n    tmp += a[i]\n    if err[0] > l2 - tmp and l2 - tmp >= 0:\n        err[0] = l2 - tmp\n    if err[1] > tmp - l2 and l2 - tmp <= 0:\n        err[1] = tmp - l2\nans = 0\nif err[0] != l:\n    ans += 1\nif err[1] != l:\n    ans += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = [int(i) for i in input().split()]\nl = sum(a)\nl2 = l / 2\ntmp = 0\nerr = [l,l]\nerrindex = [0,0]\nfor i in range(n):\n    tmp += a[i]\n    if err[0] > l2 - tmp and l2 - tmp >= 0:\n        err[0] = l2 - tmp\n    if err[1] > tmp - l2 and l2 - tmp <= 0:\n        err[1] = tmp - l2\nans = 0\nif err[0] != l:\n    ans += 1\nif err[1] != l:\n    ans += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u566159623",
        "problem_id": "p02556",
        "submission1_id": "s969936353",
        "code_content": "\nN = int(input())\nz = []\nzz = []\nfor _ in range(N):\n    x, y = map(int, input().split())\n    zz.append(x-y)\n    z.append(x+y)\nz.sort()\nzz.sort()\nans = z[-1]-z[0]\nans = max(ans, zz[-1]+zz[0]+1)\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nz = []\nzz = []\nfor _ in range(N):\n    x, y = map(int, input().split())\n    zz.append(x-y)\n    z.append(x+y)\nz.sort()\nzz.sort()\nans = z[-1]-z[0]\nans = max(ans, zz[-1]+zz[0]+1)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u170324846",
        "problem_id": "p03200",
        "submission1_id": "s210584047",
        "code_content": "\nS = input()\nN = len(S)\nA = []\n\nfor i, s in enumerate(S):\n  if s == \"W\":\n    A.append(i)\nprint(len(A)-1)",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\nA = []\n\nfor i, s in enumerate(S):\n  if s == \"W\":\n    A.append(i)\nprint(len(A)-1)```\n "
    },
    {
        "user_id": "u328199937",
        "problem_id": "p02407",
        "submission1_id": "s854109348",
        "code_content": "\nn = int(input())\na = str(input())\nlist = a.split()\nfor i in list[n-1:0:-1]:\n    print(i, end = ' ')\nprint(list[0])\n",
        "origin_generated_text": "\n```\nn = int(input())\na = str(input())\nlist = a.split()\nfor i in list[n-1:0:-1]:\n    print(i, end = ' ')\nprint(list[0])\n```\n "
    },
    {
        "user_id": "u181431922",
        "problem_id": "p04019",
        "submission1_id": "s236956216",
        "code_content": "\nins = input()\nif not ('S' in ins and 'N' in ins) and ('S' in ins or 'N' in ins):\n        print('No')\n        exit()\n\nif not ('E' in ins and 'W' in ins) and ('E' in ins or 'W' in ins):\n        print('No')\n        exit()\n\n \nprint('Yes')",
        "origin_generated_text": "\n```\nins = input()\nif not ('S' in ins and 'N' in ins) and ('S' in ins or 'N' in ins):\n        print('No')\n        exit()\n\nif not ('E' in ins and 'W' in ins) and ('E' in ins or 'W' in ins):\n        print('No')\n        exit()\n\n \nprint('Yes')```\n "
    },
    {
        "user_id": "u628581330",
        "problem_id": "p03041",
        "submission1_id": "s743787260",
        "code_content": "\ndef character(n,k,s):\n    res = str(s).replace(s[k-1],s[k-1].lower(),1)\n    return res\nn,k = map(int, input().split())\ns = input()\nprint(character(n,k,s))",
        "origin_generated_text": "\n```\ndef character(n,k,s):\n    res = str(s).replace(s[k-1],s[k-1].lower(),1)\n    return res\nn,k = map(int, input().split())\ns = input()\nprint(character(n,k,s))```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p02962",
        "submission1_id": "s765625510",
        "code_content": "\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s\nwhile True:\n    if len(new_s) > len(t):\n        s = new_s\n        break\n    new_s += s\n\ns = s*3\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\ns += s\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans2 = 0\nfor i in range(len(li)):\n    ans2 = max(ans2, solve(i, li))\n\nif ans1 == ans2:\n    print(ans1)\nelse:\n    print(-1)\n",
        "origin_generated_text": "\n```\ns = input()\nt = input()\n\ndef z_algorithm(s):\n    a = [0] * len(s)\n    i = 1\n    j = 0\n    a[0] = len(s)\n    while i < len(s):\n        while i + j < len(s) and s[j] == s[i+j]:\n            j += 1\n        a[i] = j\n        if j == 0:\n            i += 1\n            continue\n        k = 1\n        while i + k < len(s) and k + a[k] < j:\n            a[i+k] = a[k]\n            k += 1\n        i += k\n        j -= k\n    return a\n\ndef solve(i, li):\n    ans = 0\n    while True:\n        if i < 0 or len(li) <= i or visited[i]:\n            break\n        if li[i] < len(t):\n            visited[i] = True\n            break\n        if li[i] >= len(t):\n            visited[i] = True\n            ans += 1\n            i += len(t)\n    return ans\n\n\nnew_s = s\nwhile True:\n    if len(new_s) > len(t):\n        s = new_s\n        break\n    new_s += s\n\ns = s*3\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans1 = 0\nfor i in range(len(li)):\n    ans1 = max(ans1, solve(i, li))\n\ns += s\nli = z_algorithm(t + s)[len(t):]\nvisited = [False] * len(li)\nans2 = 0\nfor i in range(len(li)):\n    ans2 = max(ans2, solve(i, li))\n\nif ans1 == ans2:\n    print(ans1)\nelse:\n    print(-1)\n```\n "
    },
    {
        "user_id": "u411435121",
        "problem_id": "p03264",
        "submission1_id": "s225396120",
        "code_content": "\nk = int(input())\n \nif k % 2 == 0:\n  \tprint((k \nelse:\n\tprint((k \n",
        "origin_generated_text": "\n```\nk = int(input())\n \nif k % 2 == 0:\n  \tprint((k \nelse:\n\tprint((k \n```\n "
    },
    {
        "user_id": "u850491413",
        "problem_id": "p03716",
        "submission1_id": "s232463726",
        "code_content": "\n\nimport sys\nfrom collections import deque, defaultdict\nimport copy\nimport bisect\n\nimport math\nimport heapq\nfrom itertools import combinations, permutations\n\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN = int(input())\na = list(map(int, input().split()))\n\na_max = a[:N]\na_min = a[2*N:]\n\na_max_sum = sum(a_max)\nscore = [a_max_sum]\nheapq.heapify(a_max)\nfor i in range(N):\n\theapq.heappush(a_max, a[N + i])\n\ta_max_sum += a[N + i]\n\ta_max_sum -= heapq.heappop(a_max)\n\tscore.append(a_max_sum)\n\na_min_sum = sum(a_min)\nscore[N] -= a_min_sum\nfor i in range(len(a_min)):\n\ta_min[i] *= -1\nheapq.heapify(a_min)\nfor i in range(N):\n\theapq.heappush(a_min, -a[2*N - 1 - i])\n\ta_min_sum += a[2*N - 1 - i]\n\ta_min_sum += heapq.heappop(a_min)\n\tscore[N - i - 1] -=a_min_sum\n\nprint(max(score))",
        "origin_generated_text": "\n```\n\nimport sys\nfrom collections import deque, defaultdict\nimport copy\nimport bisect\n\nimport math\nimport heapq\nfrom itertools import combinations, permutations\n\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN = int(input())\na = list(map(int, input().split()))\n\na_max = a[:N]\na_min = a[2*N:]\n\na_max_sum = sum(a_max)\nscore = [a_max_sum]\nheapq.heapify(a_max)\nfor i in range(N):\n\theapq.heappush(a_max, a[N + i])\n\ta_max_sum += a[N + i]\n\ta_max_sum -= heapq.heappop(a_max)\n\tscore.append(a_max_sum)\n\na_min_sum = sum(a_min)\nscore[N] -= a_min_sum\nfor i in range(len(a_min)):\n\ta_min[i] *= -1\nheapq.heapify(a_min)\nfor i in range(N):\n\theapq.heappush(a_min, -a[2*N - 1 - i])\n\ta_min_sum += a[2*N - 1 - i]\n\ta_min_sum += heapq.heappop(a_min)\n\tscore[N - i - 1] -=a_min_sum\n\nprint(max(score))```\n "
    },
    {
        "user_id": "u708255304",
        "problem_id": "p03103",
        "submission1_id": "s658794787",
        "code_content": "\nN, M = map(int, input().split())  \n\nans = 0\n\n\n\n\n\nshop_list = []\nfor _ in range(N):\n    hoge = {}\n    A, B = map(int, input().split())\n    hoge['price'] = A\n    hoge['amount'] = B\n    shop_list.append(hoge)\n    hoge = {}\n\nshop_list.sort(key=lambda x: x['price'])\n\nquontity = 0\nmoney = 0\nfor i in range(len(shop_list)-1, -1, -1):\n    money += shop_list[i]['price']*shop_list[i]['amount']\n    \n    quontity += shop_list[i]['amount']\n    \n    if quontity >= M:\n        money -= shop_list[i]['price']*(quontity-M)\n\nprint(money)\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())  \n\nans = 0\n\n\n\n\n\nshop_list = []\nfor _ in range(N):\n    hoge = {}\n    A, B = map(int, input().split())\n    hoge['price'] = A\n    hoge['amount'] = B\n    shop_list.append(hoge)\n    hoge = {}\n\nshop_list.sort(key=lambda x: x['price'])\n\nquontity = 0\nmoney = 0\nfor i in range(len(shop_list)-1, -1, -1):\n    money += shop_list[i]['price']*shop_list[i]['amount']\n    \n    quontity += shop_list[i]['amount']\n    \n    if quontity >= M:\n        money -= shop_list[i]['price']*(quontity-M)\n\nprint(money)\n```\n "
    },
    {
        "user_id": "u090068671",
        "problem_id": "p02660",
        "submission1_id": "s188461069",
        "code_content": "\ndef resolve():\n\tanswer = 0\n\tN = int(input())\n\tif N==1:\n\t\tprint(answer)\n\telse:\n\t\t\n\t\tfor p in range(2, int(N**0.5)+2):\n\t\t\te = 0\n\t\t\twhile (N % p == 0):\n\t\t\t\tN /= p\n\t\t\t\te += 1\n\t\t\t\n\t\t\tif e>0:\n\t\t\t\t\n\t\t\t\tfor i in range(1, e+1):\n\t\t\t\t\tif e >= i:\n\t\t\t\t\t\te -= i\n\t\t\t\t\t\tanswer += 1\n\t\t\n\t\tprint(answer)\n        \nresolve()",
        "origin_generated_text": "\n```\ndef resolve():\n\tanswer = 0\n\tN = int(input())\n\tif N==1:\n\t\tprint(answer)\n\telse:\n\t\t\n\t\tfor p in range(2, int(N**0.5)+2):\n\t\t\te = 0\n\t\t\twhile (N % p == 0):\n\t\t\t\tN /= p\n\t\t\t\te += 1\n\t\t\t\n\t\t\tif e>0:\n\t\t\t\t\n\t\t\t\tfor i in range(1, e+1):\n\t\t\t\t\tif e >= i:\n\t\t\t\t\t\te -= i\n\t\t\t\t\t\tanswer += 1\n\t\t\n\t\tprint(answer)\n        \nresolve()```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03972",
        "submission1_id": "s039085301",
        "code_content": "\nw, h = map(int, input().split())\n\nw_cost = [int(input()) for i in range(w)]\nh_cost = [int(input()) for i in range(h)]\n\nw_cost = sorted(w_cost, reverse = True)\nh_cost = sorted(h_cost, reverse = True)\nw_cnt = 0\nh_cnt = 0\nans = 0\n\nwhile True:\n    if (not w_cost) and (not h_cost) and (w_cnt == h_cnt):\n        break\n    elif not h_cost:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    elif not w_cost:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n    elif w_cost[-1] < h_cost[-1]:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    else:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n        \nprint(ans)",
        "origin_generated_text": "\n```\nw, h = map(int, input().split())\n\nw_cost = [int(input()) for i in range(w)]\nh_cost = [int(input()) for i in range(h)]\n\nw_cost = sorted(w_cost, reverse = True)\nh_cost = sorted(h_cost, reverse = True)\nw_cnt = 0\nh_cnt = 0\nans = 0\n\nwhile True:\n    if (not w_cost) and (not h_cost) and (w_cnt == h_cnt):\n        break\n    elif not h_cost:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    elif not w_cost:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n    elif w_cost[-1] < h_cost[-1]:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    else:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n        \nprint(ans)```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s378038585",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(10)):\n    for j in reversed(range(1,10**4)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(10)):\n    for j in reversed(range(1,10**4)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in ans[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u752898745",
        "problem_id": "p03041",
        "submission1_id": "s871954842",
        "code_content": "\nn,k=map(int,input().split());s=input();print(s[:k-1]+s[k-1].lower()+s[k:])",
        "origin_generated_text": "\n```\nn,k=map(int,input().split());s=input();print(s[:k-1]+s[k-1].lower()+s[k:])```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s537796398",
        "code_content": "\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = S%x2\nx3 = S\ny3 = S\nprint(x1,y1,x2,y2,x3,y3)",
        "origin_generated_text": "\n```\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = S%x2\nx3 = S\ny3 = S\nprint(x1,y1,x2,y2,x3,y3)```\n "
    },
    {
        "user_id": "u492749916",
        "problem_id": "p02887",
        "submission1_id": "s416360263",
        "code_content": "\nN = int(input())\nS = str(input())\n\nans = \"\"\nans += S[0]\n\nfor i in range(1,N):\n  if S[i] != S[i+1]:\n    ans += S[i+1]\nprint(len(ans))",
        "origin_generated_text": "\n```\nN = int(input())\nS = str(input())\n\nans = \"\"\nans += S[0]\n\nfor i in range(1,N):\n  if S[i] != S[i+1]:\n    ans += S[i+1]\nprint(len(ans))```\n "
    },
    {
        "user_id": "u389679466",
        "problem_id": "p03023",
        "submission1_id": "s274266723",
        "code_content": "\nN = int(input())\n\nrtn = 180 *  (N-2) /N\nprint(int(rtn*N))\n",
        "origin_generated_text": "\n```\nN = int(input())\n\nrtn = 180 *  (N-2) /N\nprint(int(rtn*N))\n```\n "
    },
    {
        "user_id": "u869301406",
        "problem_id": "p02385",
        "submission1_id": "s454944635",
        "code_content": "\nclass Dice(object):\n \n    def __init__(self, d):\n\n        self.rows = [d[0], d[4], d[5], d[1]]\n        self.cols = [d[0], d[2], d[5], d[3]]\n \n    def move_next_rows(self):\n        temp = self.rows.pop(0)\n        self.rows.append(temp)\n        self.__update(self.cols, self.rows)\n\n    def move_prev_rows(self):\n        temp = self.rows.pop(3)\n        self.rows.insert(0, temp)\n        self.__update(self.cols, self.rows)\n    \n    def move_next_cols(self):\n        temp = self.cols.pop(0)\n        self.cols.append(temp)\n        self.__update(self.rows, self.cols)\n \n    def move_prev_cols(self):\n        temp = self.cols.pop(3)\n        self.cols.insert(0, temp)\n        self.__update(self.rows, self.cols)\n\n    def __update(self, x, y):\n        x[0] = y[0]\n        x[2] = y[2]\n \nclass DiceChecker(object):\n\n    def __init__(self, dice1, dice2):\n        self.dice1 = dice1\n        self.dice2 = dice2\n        self.dice1_top = self.dice1.rows[0]\n        self.dice1_front = self.dice1.rows[3]\n        \n    def check_same_dice(self):\n\n        is_same = False\n        for _ in range(4):\n            for _ in range(4):\n                self.dice2.move_next_cols()\n                is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                self.dice2.move_prev_cols()\n                is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                \n                if is_same_element or is_rot_same: \n                    is_same = True\n                    break\n                self.dice2.move_next_rows()\n                \n                self.dice2.move_prev_rows()\n                \n        if is_same:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    \n    def __rot(self, dice):\n        temp = dice.rows[1]\n        dice.rows[1] = dice.rows[3]\n        dice.rows[3] = temp\n\n        temp = dice.cols[1]\n        dice.cols[1] = dice.cols[3]\n        dice.cols[3] = temp\n\n        \nd1 = list(map(int, input().split(\" \")))\nd2 = list(map(int, input().split(\" \")))\ndice1 = Dice(d1)\ndice2 = Dice(d2)\n\ndice_checker = DiceChecker(dice1, dice2)\ndice_checker.check_same_dice()\n\n",
        "origin_generated_text": "\n```\nclass Dice(object):\n \n    def __init__(self, d):\n\n        self.rows = [d[0], d[4], d[5], d[1]]\n        self.cols = [d[0], d[2], d[5], d[3]]\n \n    def move_next_rows(self):\n        temp = self.rows.pop(0)\n        self.rows.append(temp)\n        self.__update(self.cols, self.rows)\n\n    def move_prev_rows(self):\n        temp = self.rows.pop(3)\n        self.rows.insert(0, temp)\n        self.__update(self.cols, self.rows)\n    \n    def move_next_cols(self):\n        temp = self.cols.pop(0)\n        self.cols.append(temp)\n        self.__update(self.rows, self.cols)\n \n    def move_prev_cols(self):\n        temp = self.cols.pop(3)\n        self.cols.insert(0, temp)\n        self.__update(self.rows, self.cols)\n\n    def __update(self, x, y):\n        x[0] = y[0]\n        x[2] = y[2]\n \nclass DiceChecker(object):\n\n    def __init__(self, dice1, dice2):\n        self.dice1 = dice1\n        self.dice2 = dice2\n        self.dice1_top = self.dice1.rows[0]\n        self.dice1_front = self.dice1.rows[3]\n        \n    def check_same_dice(self):\n\n        is_same = False\n        for _ in range(4):\n            for _ in range(4):\n                self.dice2.move_next_cols()\n                is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                self.dice2.move_prev_cols()\n                is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                \n                if is_same_element or is_rot_same: \n                    is_same = True\n                    break\n                self.dice2.move_next_rows()\n                \n                self.dice2.move_prev_rows()\n                \n        if is_same:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    \n    def __rot(self, dice):\n        temp = dice.rows[1]\n        dice.rows[1] = dice.rows[3]\n        dice.rows[3] = temp\n\n        temp = dice.cols[1]\n        dice.cols[1] = dice.cols[3]\n        dice.cols[3] = temp\n\n        \nd1 = list(map(int, input().split(\" \")))\nd2 = list(map(int, input().split(\" \")))\ndice1 = Dice(d1)\ndice2 = Dice(d2)\n\ndice_checker = DiceChecker(dice1, dice2)\ndice_checker.check_same_dice()\n\n```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s410984562",
        "code_content": "\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nedges = []\nfor p in P:\n    edges.append((p, 'P'))\nfor q in Q:\n    edges.append((q, 'Q'))\nedges.sort()\n\nans = 0\nv_nodes = W\nh_nodes = H\nfor e, pq in edges:\n    if pq == 'P':\n        ans += e * h_nodes\n        h_nodes -= 1\n    else:\n        ans += e * v_nodes\n        v_nodes -= 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nedges = []\nfor p in P:\n    edges.append((p, 'P'))\nfor q in Q:\n    edges.append((q, 'Q'))\nedges.sort()\n\nans = 0\nv_nodes = W\nh_nodes = H\nfor e, pq in edges:\n    if pq == 'P':\n        ans += e * h_nodes\n        h_nodes -= 1\n    else:\n        ans += e * v_nodes\n        v_nodes -= 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u499381410",
        "problem_id": "p04017",
        "submission1_id": "s990284860",
        "code_content": "\nfrom collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\nfrom operator import mul\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 20\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef I(): return int(sys.stdin.buffer.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 1000000007\n\nn = I()\nX = LI()\nl = I()\nlog_n = (n - 1).bit_length()\ndoubling = [[n] * n for _ in range(log_n)]\nfor i in range(n - 1):\n    doubling[0][i] = bisect_right(X, X[i] + l) - 1\n\nfor j in range(1, log_n):\n    for k in range(n):\n        if doubling[j - 1][k] == n:\n            continue\n        doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\nq = I()\nfor _ in range(q):\n    a, b = LI()\n    if a > b:\n        a, b = b, a\n    a -= 1\n    b -= 1\n    ans = 0\n    for m in range(log_n - 1, -1, -1):\n        if doubling[m][a] <= b:\n            a = doubling[m][a]\n            ans += 2 ** m\n    print(ans + 1)\n\n\n\n\n\n\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\nfrom operator import mul\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 20\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef I(): return int(sys.stdin.buffer.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 1000000007\n\nn = I()\nX = LI()\nl = I()\nlog_n = (n - 1).bit_length()\ndoubling = [[n] * n for _ in range(log_n)]\nfor i in range(n - 1):\n    doubling[0][i] = bisect_right(X, X[i] + l) - 1\n\nfor j in range(1, log_n):\n    for k in range(n):\n        if doubling[j - 1][k] == n:\n            continue\n        doubling[j][k] = doubling[j - 1][doubling[j - 1][k]]\nq = I()\nfor _ in range(q):\n    a, b = LI()\n    if a > b:\n        a, b = b, a\n    a -= 1\n    b -= 1\n    ans = 0\n    for m in range(log_n - 1, -1, -1):\n        if doubling[m][a] <= b:\n            a = doubling[m][a]\n            ans += 2 ** m\n    print(ans + 1)\n\n\n\n\n\n\n```\n "
    },
    {
        "user_id": "u747602774",
        "problem_id": "p02642",
        "submission1_id": "s816759502",
        "code_content": "\nimport sys\nreadline = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\n\nINF = 10**18\neps = 10**-7\n\nimport itertools\n\nN = int(readline())\nA = list(map(int,readline().split()))\n\nA.sort()\n\ncheck = [True for i in range(10**6+1)]\nans = 0\nfor a in A:\n    if not check[a]:\n        continue\n    for j in range(2*a,10**6+1,a):\n        check[j] = False\nfor a in A:\n    if check[a]:\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\nreadline = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\n\nINF = 10**18\neps = 10**-7\n\nimport itertools\n\nN = int(readline())\nA = list(map(int,readline().split()))\n\nA.sort()\n\ncheck = [True for i in range(10**6+1)]\nans = 0\nfor a in A:\n    if not check[a]:\n        continue\n    for j in range(2*a,10**6+1,a):\n        check[j] = False\nfor a in A:\n    if check[a]:\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u172569352",
        "problem_id": "p02917",
        "submission1_id": "s248785872",
        "code_content": "\nN = int(input())\nB = [int(i) for i in input().split()]\n\n    \nA = [0] * N\nfor i in range(1, N - 1):\n    A[i] = min(B[i - 1], B[i])\n\nA[N - 1] = B[N - 2] + 1\nprint(sum(A))",
        "origin_generated_text": "\n```\nN = int(input())\nB = [int(i) for i in input().split()]\n\n    \nA = [0] * N\nfor i in range(1, N - 1):\n    A[i] = min(B[i - 1], B[i])\n\nA[N - 1] = B[N - 2] + 1\nprint(sum(A))```\n "
    },
    {
        "user_id": "u111473084",
        "problem_id": "p02642",
        "submission1_id": "s177558617",
        "code_content": "\ndef main():\n    import sys\n    sys.setrecursionlimit(10**9)\n    input = sys.stdin.readline\n    from collections import Counter\n\n    N = int(input())\n    A = list(map(int, input().split()))\n    counter_A = Counter(A)\n    flag = [True] * 1000001\n\n    count = 0\n    for i in range(1000001):\n        if flag[i]:\n            count += 1\n        multiple = i\n        while multiple < 1000001:\n            flag[multiple] = False\n            multiple += i\n\n    print(count)\n\n\nmain()",
        "origin_generated_text": "\n```\ndef main():\n    import sys\n    sys.setrecursionlimit(10**9)\n    input = sys.stdin.readline\n    from collections import Counter\n\n    N = int(input())\n    A = list(map(int, input().split()))\n    counter_A = Counter(A)\n    flag = [True] * 1000001\n\n    count = 0\n    for i in range(1000001):\n        if flag[i]:\n            count += 1\n        multiple = i\n        while multiple < 1000001:\n            flag[multiple] = False\n            multiple += i\n\n    print(count)\n\n\nmain()```\n "
    },
    {
        "user_id": "u675918663",
        "problem_id": "p03200",
        "submission1_id": "s680229180",
        "code_content": "\nimport sys\n\nline = next(map(str.strip, sys.stdin))\n\ncount = 0\nnb_bs = 0\nfor i, c in enumerate(line):\n    if c == 'B':\n        if nb_bs:\n            count += nb_bs\n            nb_bs = 0\n    else:\n        nb_bs += 1\n\nif nb_bs:\n    count += nb_bs\n\nprint(count)",
        "origin_generated_text": "\n```\nimport sys\n\nline = next(map(str.strip, sys.stdin))\n\ncount = 0\nnb_bs = 0\nfor i, c in enumerate(line):\n    if c == 'B':\n        if nb_bs:\n            count += nb_bs\n            nb_bs = 0\n    else:\n        nb_bs += 1\n\nif nb_bs:\n    count += nb_bs\n\nprint(count)```\n "
    },
    {
        "user_id": "u239342230",
        "problem_id": "p03943",
        "submission1_id": "s697170928",
        "code_content": "\na,b,c=map(int,input().split())\nprint('Yes' if a==(b+c) or b==(a+c) or c==(a+b) else 'No')",
        "origin_generated_text": "\n```\na,b,c=map(int,input().split())\nprint('Yes' if a==(b+c) or b==(a+c) or c==(a+b) else 'No')```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03079",
        "submission1_id": "s185096903",
        "code_content": "\ni = input().split()\nif (float(i[0]) ==float(i[1])) and (float(i[0]) ==float(i[2])):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ni = input().split()\nif (float(i[0]) ==float(i[1])) and (float(i[0]) ==float(i[2])):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u531436689",
        "problem_id": "p03714",
        "submission1_id": "s358041239",
        "code_content": "\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import deque\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nDR = [1, -1, 0, 0]\nDC = [0, 0, 1, -1]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n     \ndef main():\n    N = I()\n    A = LI()\n    wakeme = N\n    Aleftsum = [0 for _ in range(3*N+1)]\n    leftA = [x for x in A[:N]]\n    heapq.heapify(leftA)\n    subsum = sum(leftA)\n    Aleftsum[wakeme] = subsum\n    for i in range(N):\n        heapq.heappush(leftA, A[wakeme + i])\n        subsum += A[wakeme + i]\n        subsum -= heapq.heappop(leftA)\n        Aleftsum[wakeme+i+1] = subsum\n\n    Arightsum = [0 for _ in range(3*N+1)]\n    rightA = [-x for x in A[-N:]]\n    heapq.heapify(rightA)\n    subsum = sum(rightA)\n    wakeme = 2*N\n    Arightsum[wakeme] = -subsum\n    for i in range(1, N+1):\n        heapq.heappush(rightA, -A[wakeme-i])\n        subsum -= A[wakeme - i]\n        subsum -= heapq.heappop(rightA)\n        Arightsum[wakeme - i] = -subsum\n    ans = -inf\n    for i in range(2*N+1):\n        ans = max(ans, Aleftsum[i] - Arightsum[i])\n    print(ans)\nmain()\n\n",
        "origin_generated_text": "\n```\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import deque\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nDR = [1, -1, 0, 0]\nDC = [0, 0, 1, -1]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n     \ndef main():\n    N = I()\n    A = LI()\n    wakeme = N\n    Aleftsum = [0 for _ in range(3*N+1)]\n    leftA = [x for x in A[:N]]\n    heapq.heapify(leftA)\n    subsum = sum(leftA)\n    Aleftsum[wakeme] = subsum\n    for i in range(N):\n        heapq.heappush(leftA, A[wakeme + i])\n        subsum += A[wakeme + i]\n        subsum -= heapq.heappop(leftA)\n        Aleftsum[wakeme+i+1] = subsum\n\n    Arightsum = [0 for _ in range(3*N+1)]\n    rightA = [-x for x in A[-N:]]\n    heapq.heapify(rightA)\n    subsum = sum(rightA)\n    wakeme = 2*N\n    Arightsum[wakeme] = -subsum\n    for i in range(1, N+1):\n        heapq.heappush(rightA, -A[wakeme-i])\n        subsum -= A[wakeme - i]\n        subsum -= heapq.heappop(rightA)\n        Arightsum[wakeme - i] = -subsum\n    ans = -inf\n    for i in range(2*N+1):\n        ans = max(ans, Aleftsum[i] - Arightsum[i])\n    print(ans)\nmain()\n\n```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s593109485",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u464205401",
        "problem_id": "p03106",
        "submission1_id": "s325177849",
        "code_content": "\na,b,k=list(map(int,input().split()))\nans=[]\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    ans.append(i)\nprint(ans[k-1])",
        "origin_generated_text": "\n```\na,b,k=list(map(int,input().split()))\nans=[]\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    ans.append(i)\nprint(ans[k-1])```\n "
    },
    {
        "user_id": "u853900545",
        "problem_id": "p03998",
        "submission1_id": "s531289077",
        "code_content": "\nsa = list(input())\nsb = list(input())\nsc = list(input())\n\nd = 'a'\n\nwhile 1:\n    if d == 'a':\n        if sa == []:\n            print('A')\n            break\n        d = sa.pop(0)\n    elif d == 'b':\n        if sb == []:\n            print('B')\n            break\n        d = sb.pop(0)\n    else:\n        if sc == []:\n            print('C')\n            break\n        d = sc.pop(0)\n",
        "origin_generated_text": "\n```\nsa = list(input())\nsb = list(input())\nsc = list(input())\n\nd = 'a'\n\nwhile 1:\n    if d == 'a':\n        if sa == []:\n            print('A')\n            break\n        d = sa.pop(0)\n    elif d == 'b':\n        if sb == []:\n            print('B')\n            break\n        d = sb.pop(0)\n    else:\n        if sc == []:\n            print('C')\n            break\n        d = sc.pop(0)\n```\n "
    },
    {
        "user_id": "u641357568",
        "problem_id": "p02407",
        "submission1_id": "s619354124",
        "code_content": "\nimport sys\n\nlength = int(sys.stdin.readline())\nnum_seq = sys.stdin.readline().split()\n\nfor i in range(length-1,0,-1):\n    print(num_seq[i-1],end=' ')\nprint(num_seq[0])\n",
        "origin_generated_text": "\n```\nimport sys\n\nlength = int(sys.stdin.readline())\nnum_seq = sys.stdin.readline().split()\n\nfor i in range(length-1,0,-1):\n    print(num_seq[i-1],end=' ')\nprint(num_seq[0])\n```\n "
    },
    {
        "user_id": "u846372029",
        "problem_id": "p03613",
        "submission1_id": "s752503336",
        "code_content": "\n\n\nN = int(input())\na = list(map(int, input().split()))\n\nb = []\n\nfor ai in a:\n    b.append(ai-1)\n    b.append(ai)\n    b.append(ai+1)\n\n\nimport collections\ncnt = collections.Counter(b)\n\nprint(max(cnt.values()))",
        "origin_generated_text": "\n```\n\n\nN = int(input())\na = list(map(int, input().split()))\n\nb = []\n\nfor ai in a:\n    b.append(ai-1)\n    b.append(ai)\n    b.append(ai+1)\n\n\nimport collections\ncnt = collections.Counter(b)\n\nprint(max(cnt.values()))```\n "
    },
    {
        "user_id": "u442788381",
        "problem_id": "p03416",
        "submission1_id": "s981743319",
        "code_content": "\nA, B = map(int, input().split())\ncount = 0\nfor i in range(A, B+1):\n  i = str(i)\n  if i[:len(i)\n    count += 1\nprint(count)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\ncount = 0\nfor i in range(A, B+1):\n  i = str(i)\n  if i[:len(i)\n    count += 1\nprint(count)```\n "
    },
    {
        "user_id": "u366996583",
        "problem_id": "p02553",
        "submission1_id": "s328444809",
        "code_content": "\na,b,c,d=map(int,input().split())\nprint(max(a*b,a*c,b*c,b*d,c*d))",
        "origin_generated_text": "\n```\na,b,c,d=map(int,input().split())\nprint(max(a*b,a*c,b*c,b*d,c*d))```\n "
    },
    {
        "user_id": "u022215787",
        "problem_id": "p03760",
        "submission1_id": "s869976106",
        "code_content": "\no = input()\ne = input()\nans = ''\nfor i,j in zip(o,e):\n    ans+= i+j\nif len(o) != len(e):\n    ans+=o[-1]\nprint(ans)",
        "origin_generated_text": "\n```\no = input()\ne = input()\nans = ''\nfor i,j in zip(o,e):\n    ans+= i+j\nif len(o) != len(e):\n    ans+=o[-1]\nprint(ans)```\n "
    },
    {
        "user_id": "u334712262",
        "problem_id": "p03734",
        "submission1_id": "s568317192",
        "code_content": "\n\nimport bisect\nimport heapq\nimport math\nimport random\nfrom collections import Counter, defaultdict, deque\nfrom decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\nfrom fractions import Fraction\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, combinations_with_replacement, product, permutations, accumulate\nfrom operator import add, mul, sub, itemgetter, attrgetter\n\n\nimport sys\n\n\nreadline = sys.stdin.readline\n\nINF = 2**62-1\n\n\ndef read_int():\n    return int(readline())\n\n\ndef read_int_n():\n    return list(map(int, readline().split()))\n\n\ndef read_float():\n    return float(readline())\n\n\ndef read_float_n():\n    return list(map(float, readline().split()))\n\n\ndef read_str():\n    return readline().strip()\n\n\ndef read_str_n():\n    return readline().strip().split()\n\n\ndef ep(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.perf_counter()\n        ret = f(*args, **kwargs)\n        e = time.perf_counter()\n\n        ep(e - s, 'sec')\n        return ret\n\n    return wrap\n\n\n@mt\ndef slv(N, W, WV):\n    vl = {}\n    vl[WV[0][0]] = list()\n    vl[WV[0][0]+1] = list()\n    vl[WV[0][0]+2] = list()\n    vl[WV[0][0]+3] = list()\n    for w, v in WV:\n        vl[w].append(v)\n\n    for v in vl.values():\n        v.sort(reverse=True)\n        v.insert(0, 0)\n\n\n    wi, wj, wk, wl = vl.keys()\n    ans = 0\n    vis = 0\n    for i, vi in enumerate(vl[wi]):\n        if wi * i > W:\n            break\n        vis += vi\n        vjs = 0\n        for j, vj in enumerate(vl[wj]):\n            if wi * i + wj * j > W:\n                break\n            vjs += vj\n            vks = 0\n            for k, vk in enumerate(vl[wk]):\n                if wi*i + wj*j + wk*k> W:\n                    break\n                vks += vk\n                ans = max(ans, vis+vjs+vks)\n    return ans\n\n\n\n\n\ndef main():\n    N, W = read_int_n()\n    WV = [read_int_n() for _ in range(N)]\n    print(slv(N, W, WV))\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport bisect\nimport heapq\nimport math\nimport random\nfrom collections import Counter, defaultdict, deque\nfrom decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\nfrom fractions import Fraction\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, combinations_with_replacement, product, permutations, accumulate\nfrom operator import add, mul, sub, itemgetter, attrgetter\n\n\nimport sys\n\n\nreadline = sys.stdin.readline\n\nINF = 2**62-1\n\n\ndef read_int():\n    return int(readline())\n\n\ndef read_int_n():\n    return list(map(int, readline().split()))\n\n\ndef read_float():\n    return float(readline())\n\n\ndef read_float_n():\n    return list(map(float, readline().split()))\n\n\ndef read_str():\n    return readline().strip()\n\n\ndef read_str_n():\n    return readline().strip().split()\n\n\ndef ep(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.perf_counter()\n        ret = f(*args, **kwargs)\n        e = time.perf_counter()\n\n        ep(e - s, 'sec')\n        return ret\n\n    return wrap\n\n\n@mt\ndef slv(N, W, WV):\n    vl = {}\n    vl[WV[0][0]] = list()\n    vl[WV[0][0]+1] = list()\n    vl[WV[0][0]+2] = list()\n    vl[WV[0][0]+3] = list()\n    for w, v in WV:\n        vl[w].append(v)\n\n    for v in vl.values():\n        v.sort(reverse=True)\n        v.insert(0, 0)\n\n\n    wi, wj, wk, wl = vl.keys()\n    ans = 0\n    vis = 0\n    for i, vi in enumerate(vl[wi]):\n        if wi * i > W:\n            break\n        vis += vi\n        vjs = 0\n        for j, vj in enumerate(vl[wj]):\n            if wi * i + wj * j > W:\n                break\n            vjs += vj\n            vks = 0\n            for k, vk in enumerate(vl[wk]):\n                if wi*i + wj*j + wk*k> W:\n                    break\n                vks += vk\n                ans = max(ans, vis+vjs+vks)\n    return ans\n\n\n\n\n\ndef main():\n    N, W = read_int_n()\n    WV = [read_int_n() for _ in range(N)]\n    print(slv(N, W, WV))\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u301729341",
        "problem_id": "p00026",
        "submission1_id": "s570127393",
        "code_content": "\nMasu = []\ndef access(x,y):\n    if x < 0 or y < 0 or x > 9 or y > 9:\n        return\n    Masu[y][x] += 1\n\nfor i in range(10):\n    Masu.append([0,0,0,0,0,0,0,0,0,0])\nkosu = 0\nkomax = 0\nwhile True:\n    try:\n        \n        x,y,s = map(int,input().split(\",\"))\n        if s == 1:\n            for j in range(3):\n                access(y +1 - j,x)\n            access(y,x - 1)\n            access(y,x + 1)\n\n        elif s == 2:\n            for k in range(3):\n                for l in range(3):\n                    access(y + 1 - k,x + 1 -l)\n        elif s == 3:\n            for k in range(3):\n                for l in range(3):\n                    access(y + 1 - k,x + 1 -l)\n            access(y - 2,x)\n            access(y + 2,x)\n            access(y,x + 2)\n            access(y,x - 2)\n        for i in range(10):\n            kosu += Masu[i].count(0)\n        for j in range(10):\n            if komax < max(Masu[j]):\n                komax = max(Masu[j])\n        print(kosu)\n        print(komax)\n        break\n    except (EOFError,ValueError):\n        for i in range(10):\n            kosu += Masu[i].count(0)\n        for j in range(10):\n            if komax < max(Masu[j]):\n                komax = max(Masu[j])\n        print(kosu)\n        print(komax)\n        break",
        "origin_generated_text": "\n```\nMasu = []\ndef access(x,y):\n    if x < 0 or y < 0 or x > 9 or y > 9:\n        return\n    Masu[y][x] += 1\n\nfor i in range(10):\n    Masu.append([0,0,0,0,0,0,0,0,0,0])\nkosu = 0\nkomax = 0\nwhile True:\n    try:\n        \n        x,y,s = map(int,input().split(\",\"))\n        if s == 1:\n            for j in range(3):\n                access(y +1 - j,x)\n            access(y,x - 1)\n            access(y,x + 1)\n\n        elif s == 2:\n            for k in range(3):\n                for l in range(3):\n                    access(y + 1 - k,x + 1 -l)\n        elif s == 3:\n            for k in range(3):\n                for l in range(3):\n                    access(y + 1 - k,x + 1 -l)\n            access(y - 2,x)\n            access(y + 2,x)\n            access(y,x + 2)\n            access(y,x - 2)\n        for i in range(10):\n            kosu += Masu[i].count(0)\n        for j in range(10):\n            if komax < max(Masu[j]):\n                komax = max(Masu[j])\n        print(kosu)\n        print(komax)\n        break\n    except (EOFError,ValueError):\n        for i in range(10):\n            kosu += Masu[i].count(0)\n        for j in range(10):\n            if komax < max(Masu[j]):\n                komax = max(Masu[j])\n        print(kosu)\n        print(komax)\n        break```\n "
    },
    {
        "user_id": "u497592162",
        "problem_id": "p02660",
        "submission1_id": "s643464177",
        "code_content": "\nimport math\n\n\ndef is_prime(n):\n    for i in range(2, int(math.sqrt(n))+1):\n        if n%i == 0:\n            return False\n    return True\n\ndef getPrimeExp(n, primeExp):\n    n_sqrt = int(math.sqrt(n))\n    array = [True]*(n_sqrt+1)\n    result = []\n    for i in range(2, n_sqrt+1):\n        if array[i]:\n            array[i] = False\n            result.append(i)\n            for j in range(2, n_sqrt+1):\n                ij = i**j\n                if ij <= n_sqrt and array[ij]:\n                    result.append(ij)\n                    array[ij] = False\n                elif ij > n:\n                    break\n            for j in range(i*2, n_sqrt+1, i):\n                array[j] = False\n    return result\n\nN = int(input())\nif N == 1:\n    print(0)\nelse:\n    cnt = 0\n    primeExp = getPrimeExp(N, []) \n    n = N\n    for z in primeExp:\n        if n%z == 0:\n            n = int(n/z)\n            cnt += 1\n    print(cnt)",
        "origin_generated_text": "\n```\nimport math\n\n\ndef is_prime(n):\n    for i in range(2, int(math.sqrt(n))+1):\n        if n%i == 0:\n            return False\n    return True\n\ndef getPrimeExp(n, primeExp):\n    n_sqrt = int(math.sqrt(n))\n    array = [True]*(n_sqrt+1)\n    result = []\n    for i in range(2, n_sqrt+1):\n        if array[i]:\n            array[i] = False\n            result.append(i)\n            for j in range(2, n_sqrt+1):\n                ij = i**j\n                if ij <= n_sqrt and array[ij]:\n                    result.append(ij)\n                    array[ij] = False\n                elif ij > n:\n                    break\n            for j in range(i*2, n_sqrt+1, i):\n                array[j] = False\n    return result\n\nN = int(input())\nif N == 1:\n    print(0)\nelse:\n    cnt = 0\n    primeExp = getPrimeExp(N, []) \n    n = N\n    for z in primeExp:\n        if n%z == 0:\n            n = int(n/z)\n            cnt += 1\n    print(cnt)```\n "
    },
    {
        "user_id": "u099450021",
        "problem_id": "p02934",
        "submission1_id": "s082533355",
        "code_content": "\nN = int(input())\nA = [int(s) for s in input().split(' ')]\n\nret = 1\nfor a in A:\n    ret *= a\nprint(ret / sum(A) if sum(A) != 0 else 0)\n\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = [int(s) for s in input().split(' ')]\n\nret = 1\nfor a in A:\n    ret *= a\nprint(ret / sum(A) if sum(A) != 0 else 0)\n\n```\n "
    },
    {
        "user_id": "u488401358",
        "problem_id": "p03677",
        "submission1_id": "s896519791",
        "code_content": "\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if g>=s:\n        if ans>=s:\n            val+=1+(g-ans)%m\n        else:\n            val+=(g-ans)%m\n    else:\n        if ans>=s or g>=ans:\n            val+=1+(g-ans)%m\n        else:\n            val+=(g-s)%m\n\nprint(val)\n",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na=[a[i]-1 for i in range(n)]\n\nimos=[0 for i in range(m+1)]\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    val=(g-s)%m\n    if val>1:\n        s=(s+2)%m\n        if s>g:\n            imos[s]+=-1\n            imos[m]+=1\n            imos[0]+=-1\n            imos[g+1]+=1\n        else:\n            imos[s]+=-1\n            imos[g+1]+=1\n        imos[(g+1)%m]+=val-1\n        imos[(g+1)%m+1]+=-(val-1)\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nfor i in range(1,m+1):\n    imos[i]+=imos[i-1]\n\nans=-1\nval=0\nfor i in range(m):\n    if val>=imos[i]:\n        ans=i\n        val=imos[i]\n\nval=0\nfor i in range(0,n-1):\n    s,g=a[i],a[i+1]\n    if g>=s:\n        if ans>=s:\n            val+=1+(g-ans)%m\n        else:\n            val+=(g-ans)%m\n    else:\n        if ans>=s or g>=ans:\n            val+=1+(g-ans)%m\n        else:\n            val+=(g-s)%m\n\nprint(val)\n```\n "
    },
    {
        "user_id": "u527993431",
        "problem_id": "p03272",
        "submission1_id": "s297902701",
        "code_content": "\nN,i=map(int,input().split())\nprint(N-i+1)",
        "origin_generated_text": "\n```\nN,i=map(int,input().split())\nprint(N-i+1)```\n "
    },
    {
        "user_id": "u995102075",
        "problem_id": "p03023",
        "submission1_id": "s832521060",
        "code_content": "\nN = int(input())\n\nprint(180 * (N - 3) + 3)\n",
        "origin_generated_text": "\n```\nN = int(input())\n\nprint(180 * (N - 3) + 3)\n```\n "
    },
    {
        "user_id": "u661983922",
        "problem_id": "p03079",
        "submission1_id": "s459165530",
        "code_content": "\nlst = input().split()\n\ncor_lst = sorted(lst)\n\n\n\nif int(cor_lst[0])+int(cor_lst[1]) == int(cor_lst[2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nlst = input().split()\n\ncor_lst = sorted(lst)\n\n\n\nif int(cor_lst[0])+int(cor_lst[1]) == int(cor_lst[2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u004025573",
        "problem_id": "p03480",
        "submission1_id": "s273926453",
        "code_content": "\n\n\n\nS = list(map(int, input()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = len(S)\n\nif N == 1:\n    min_T = 1\nelse:\n    min_T = N\n    for i in range(1, N):\n        if S[i]!=S[i-1]:\n            min_T = min(min_T, max(i, N-i))\n\nprint(min_T)\n\n\n\n",
        "origin_generated_text": "\n```\n\n\n\nS = list(map(int, input()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nN = len(S)\n\nif N == 1:\n    min_T = 1\nelse:\n    min_T = N\n    for i in range(1, N):\n        if S[i]!=S[i-1]:\n            min_T = min(min_T, max(i, N-i))\n\nprint(min_T)\n\n\n\n```\n "
    },
    {
        "user_id": "u473633103",
        "problem_id": "p03318",
        "submission1_id": "s123927127",
        "code_content": "\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(13)):\n    for j in reversed(range(1,100)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in sorted(ans)[:k]:\n    print(i)",
        "origin_generated_text": "\n```\n\n\nk = int(input())\ncount = 0\nans = []\nminN = 10**15\n\nfor i in reversed(range(13)):\n    for j in reversed(range(1,100)):\n        num = str(j)+\"9\"*i\n        n = sum([int(k) for k in num])\n        n = int(num)/n\n        if(minN > n or n==1):\n            minN = n\n            ans.append(n)\n\nfor i in sorted(ans)[:k]:\n    print(i)```\n "
    },
    {
        "user_id": "u066455063",
        "problem_id": "p03573",
        "submission1_id": "s748937333",
        "code_content": "\nA, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\n\nelif B == C:\n    print(A)\n\nelse:\n    print(B)\n",
        "origin_generated_text": "\n```\nA, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\n\nelif B == C:\n    print(A)\n\nelse:\n    print(B)\n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s306671428",
        "code_content": "\nh,w,n=[int(j) for j in input().split()]\nR,C=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=C\nl,r=1,w\nfor i in range(n)[::-1]:\n    if t[i]==\"R\":\n        l-=1\n    elif t[i]==\"L\":\n        r+=1\n    if s[i]==\"R\":\n        r-=1\n    elif s[i]==\"L\":\n        l+=1\n    if not l<=x<=r:\n        print(\"NO\")\n        exit()\n    x=r\n\n\n\nl,r=1,h\nx=R\nfor i in range(n)[::-1]:\n    if t[i]==\"U\":\n        l-=1\n    elif t[i]==\"D\":\n        r+=1\n    if s[i]==\"U\":\n        r-=1\n    elif s[i]==\"D\":\n        l+=1\n    if not l<=x<=r:\n        print(\"NO\")\n        exit()\n    x=r\n\nprint(\"YES\")",
        "origin_generated_text": "\n```\nh,w,n=[int(j) for j in input().split()]\nR,C=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=C\nl,r=1,w\nfor i in range(n)[::-1]:\n    if t[i]==\"R\":\n        l-=1\n    elif t[i]==\"L\":\n        r+=1\n    if s[i]==\"R\":\n        r-=1\n    elif s[i]==\"L\":\n        l+=1\n    if not l<=x<=r:\n        print(\"NO\")\n        exit()\n    x=r\n\n\n\nl,r=1,h\nx=R\nfor i in range(n)[::-1]:\n    if t[i]==\"U\":\n        l-=1\n    elif t[i]==\"D\":\n        r+=1\n    if s[i]==\"U\":\n        r-=1\n    elif s[i]==\"D\":\n        l+=1\n    if not l<=x<=r:\n        print(\"NO\")\n        exit()\n    x=r\n\nprint(\"YES\")```\n "
    },
    {
        "user_id": "u570944601",
        "problem_id": "p03326",
        "submission1_id": "s923978206",
        "code_content": "\nn,m = map(int, input().split())\nx = [tuple(map(int, input().split())) for _ in range(n)]\nfrom itertools import *\nres = 0\nfor a in product([-1, 1], [-1, 1], [-1, 1]):\n  res = max(res, sum(sorted((max(0, sum(i*j for i,j in zip(a,t))) for t in x),reverse=True)[:m]))\nprint(res)",
        "origin_generated_text": "\n```\nn,m = map(int, input().split())\nx = [tuple(map(int, input().split())) for _ in range(n)]\nfrom itertools import *\nres = 0\nfor a in product([-1, 1], [-1, 1], [-1, 1]):\n  res = max(res, sum(sorted((max(0, sum(i*j for i,j in zip(a,t))) for t in x),reverse=True)[:m]))\nprint(res)```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p03343",
        "submission1_id": "s214407245",
        "code_content": "\nn,k,q = map(int, input().split())\na = list(map(int, input().split()))\nnum_set = set(a)\n\ndef parse(b):\n    ret = []\n    tmp = []\n    for ai in a:\n        if ai >= b:\n            tmp.append(ai)\n        else:\n            if len(tmp) >= k:\n                tmp.sort(reverse=True)\n                ret.append(tmp)\n                tmp = []\n    else:\n        if len(tmp) >= k:\n            tmp.sort(reverse=True)\n            ret.append(tmp)\n    return ret\n\nans = 10**10\n\nfor b in num_set:\n    ret = parse(b)\n    ret.sort()\n    tmp = []\n    for lis in ret:\n        tmp.append(lis[k-1])\n    ans = min(ans, max(tmp)-min(tmp))\nprint(ans)\n",
        "origin_generated_text": "\n```\nn,k,q = map(int, input().split())\na = list(map(int, input().split()))\nnum_set = set(a)\n\ndef parse(b):\n    ret = []\n    tmp = []\n    for ai in a:\n        if ai >= b:\n            tmp.append(ai)\n        else:\n            if len(tmp) >= k:\n                tmp.sort(reverse=True)\n                ret.append(tmp)\n                tmp = []\n    else:\n        if len(tmp) >= k:\n            tmp.sort(reverse=True)\n            ret.append(tmp)\n    return ret\n\nans = 10**10\n\nfor b in num_set:\n    ret = parse(b)\n    ret.sort()\n    tmp = []\n    for lis in ret:\n        tmp.append(lis[k-1])\n    ans = min(ans, max(tmp)-min(tmp))\nprint(ans)\n```\n "
    },
    {
        "user_id": "u326775883",
        "problem_id": "p02727",
        "submission1_id": "s536073074",
        "code_content": "\nx, y, a, b, c = [int(i) for i in input().split()]\npa = [int(i) for i in input().split()]\npb = [int(i) for i in input().split()]\npc = [int(i) for i in input().split()]\n\npa = sorted(pa, reverse=True)\npa = pa[:x]\npb = sorted(pb, reverse=True)\npb = pb[:y]\npc = sorted(pc, reverse=True)\n\nl = pa + pb + pc\nl = sorted(l, reverse=True)\n\nfor i in range(len(l)-1):\n  if l[i] > l[i+1]:\n    l[i+1] = l[i]\n\nprint(sum(l))",
        "origin_generated_text": "\n```\nx, y, a, b, c = [int(i) for i in input().split()]\npa = [int(i) for i in input().split()]\npb = [int(i) for i in input().split()]\npc = [int(i) for i in input().split()]\n\npa = sorted(pa, reverse=True)\npa = pa[:x]\npb = sorted(pb, reverse=True)\npb = pb[:y]\npc = sorted(pc, reverse=True)\n\nl = pa + pb + pc\nl = sorted(l, reverse=True)\n\nfor i in range(len(l)-1):\n  if l[i] > l[i+1]:\n    l[i+1] = l[i]\n\nprint(sum(l))```\n "
    },
    {
        "user_id": "u185948224",
        "problem_id": "p02887",
        "submission1_id": "s904461337",
        "code_content": "\nN = int(input())\ns= list(input())\n\ns0 = s.pop()\n\ncnt = 1\n\nwhile s:\n    s1 = s.pop()\n    if s1!=s0:\n        cnt += 1\n        s0 = s1\nprint(cnt)\n",
        "origin_generated_text": "\n```\nN = int(input())\ns= list(input())\n\ns0 = s.pop()\n\ncnt = 1\n\nwhile s:\n    s1 = s.pop()\n    if s1!=s0:\n        cnt += 1\n        s0 = s1\nprint(cnt)\n```\n "
    },
    {
        "user_id": "u664481257",
        "problem_id": "p03568",
        "submission1_id": "s632278234",
        "code_content": "\n\n\n\n\n\nfrom functools import reduce\nfrom itertools import repeat\n\n\ndef multipler(x, y):\n    return x*y\n\ndef hundred_or_one(l: list):\n    return [True if x == 100 else False for x in l]\n    \n\ndef check_odds(l :list):\n    return [True if x % 2 == 0 else False for x in l]\n\ndef check_hun(l: list):\n    return [True if x == 100 else False for x in l]\n\ndef main(num, data:list):\n    \n    hun_one = hundred_or_one(data)\n    odds = check_odds(data)  \n    huns = check_hun(data)\n\n    basis = [2 if t else 3 for t in hun_one]\n    remover = [2 if o else 1 for o in odds]\n\n    remover_num = int(reduce(multipler, remover))\n    \n    \n\n    basic_answer = reduce(multipler, basis)\n    \n    \n    return basic_answer - remover_num\n\nif __name__ == '__main__':\n    \n    \n    num = int(input())\n    data = input().split(\" \")\n    data = [int(i) for i in data]\n\n    print(main(num, data))\n",
        "origin_generated_text": "\n```\n\n\n\n\n\nfrom functools import reduce\nfrom itertools import repeat\n\n\ndef multipler(x, y):\n    return x*y\n\ndef hundred_or_one(l: list):\n    return [True if x == 100 else False for x in l]\n    \n\ndef check_odds(l :list):\n    return [True if x % 2 == 0 else False for x in l]\n\ndef check_hun(l: list):\n    return [True if x == 100 else False for x in l]\n\ndef main(num, data:list):\n    \n    hun_one = hundred_or_one(data)\n    odds = check_odds(data)  \n    huns = check_hun(data)\n\n    basis = [2 if t else 3 for t in hun_one]\n    remover = [2 if o else 1 for o in odds]\n\n    remover_num = int(reduce(multipler, remover))\n    \n    \n\n    basic_answer = reduce(multipler, basis)\n    \n    \n    return basic_answer - remover_num\n\nif __name__ == '__main__':\n    \n    \n    num = int(input())\n    data = input().split(\" \")\n    data = [int(i) for i in data]\n\n    print(main(num, data))\n```\n "
    },
    {
        "user_id": "u021916304",
        "problem_id": "p02742",
        "submission1_id": "s520196898",
        "code_content": "\nh,w=map(int,input().split())\nif h%2 == 0 and w%2 == 0:\n  print(h*w\nelse:\n  print(int(h*w/2)+1)\n  ",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nif h%2 == 0 and w%2 == 0:\n  print(h*w\nelse:\n  print(int(h*w/2)+1)\n  ```\n "
    },
    {
        "user_id": "u871596687",
        "problem_id": "p03023",
        "submission1_id": "s248119377",
        "code_content": "\nn = int(input())\n\nprint((180-360/n)*n,end=\"\")",
        "origin_generated_text": "\n```\nn = int(input())\n\nprint((180-360/n)*n,end=\"\")```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p03546",
        "submission1_id": "s346148977",
        "code_content": "\nH, W = map(int, input().split())\nc = [[0]*10 for i in range(10)]\nfor i in range(10):\n    a = list(map(int, input().split()))\n    for j in range(10):\n        c[i][j] = a[j]\n\nA = [[0]*W for i in range(H)]\nfor i in range(H):\n    a = list(map(int, input().split()))\n    for j in range(W):\n        A[i][j] = a[j]\n\nfor i in range(10):\n    for j in range(i+1, 10):\n        for k in range(10):\n            c[i][j] = min(c[i][j], c[i][k]+c[k][j])\n\nans = 0\nfor i in range(H):\n    for j in range(W):\n        if A[i][j] != -1 and A[i][j] != 1:\n            ans += c[A[i][j]][1]\nprint(ans)",
        "origin_generated_text": "\n```\nH, W = map(int, input().split())\nc = [[0]*10 for i in range(10)]\nfor i in range(10):\n    a = list(map(int, input().split()))\n    for j in range(10):\n        c[i][j] = a[j]\n\nA = [[0]*W for i in range(H)]\nfor i in range(H):\n    a = list(map(int, input().split()))\n    for j in range(W):\n        A[i][j] = a[j]\n\nfor i in range(10):\n    for j in range(i+1, 10):\n        for k in range(10):\n            c[i][j] = min(c[i][j], c[i][k]+c[k][j])\n\nans = 0\nfor i in range(H):\n    for j in range(W):\n        if A[i][j] != -1 and A[i][j] != 1:\n            ans += c[A[i][j]][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u846694620",
        "problem_id": "p03764",
        "submission1_id": "s459514238",
        "code_content": "\nimport itertools\n\n\ndef main():\n    n, m = map(int, input().split())\n\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n\n    x_len = 0\n    y_len = 0\n\n    for i in range(n):\n        x_len += (2 * i - n + 1) * x[i] % (10 ** 9 + 7)\n\n    for j in range(m):\n        y_len += (2 * j - m + 1) * y[j] % (10 ** 9 + 7)\n\n    print(x_len * y_len % (10 ** 9 + 7))\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nimport itertools\n\n\ndef main():\n    n, m = map(int, input().split())\n\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n\n    x_len = 0\n    y_len = 0\n\n    for i in range(n):\n        x_len += (2 * i - n + 1) * x[i] % (10 ** 9 + 7)\n\n    for j in range(m):\n        y_len += (2 * j - m + 1) * y[j] % (10 ** 9 + 7)\n\n    print(x_len * y_len % (10 ** 9 + 7))\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s819338587",
        "code_content": "\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u383450070",
        "problem_id": "p03998",
        "submission1_id": "s263211116",
        "code_content": "\na = list(input())\nb = list(input())\nc = list(input())\nselect = \"a\"\nlengtha = len(a)\nlengthb = len(b)\nlengthc = len(c)\nwhile True:\n  if select == \"a\":\n    if lengtha == 0:\n      print(\"A\")\n      break;\n    else:\n      select = a[0]\n      del a[0]\n      lengtha -= 1\n  elif select == \"b\":\n    if lengthb == 0:\n      print(\"B\")\n      break;\n    else:\n      select = b[0]\n      del b[0]\n      lengthb -= 1\n  else:\n    if lengthc==0:\n      print(\"C\")\n      break;\n    else:\n      select = c[0]\n      del c[0]\n      lengthc -= 1",
        "origin_generated_text": "\n```\na = list(input())\nb = list(input())\nc = list(input())\nselect = \"a\"\nlengtha = len(a)\nlengthb = len(b)\nlengthc = len(c)\nwhile True:\n  if select == \"a\":\n    if lengtha == 0:\n      print(\"A\")\n      break;\n    else:\n      select = a[0]\n      del a[0]\n      lengtha -= 1\n  elif select == \"b\":\n    if lengthb == 0:\n      print(\"B\")\n      break;\n    else:\n      select = b[0]\n      del b[0]\n      lengthb -= 1\n  else:\n    if lengthc==0:\n      print(\"C\")\n      break;\n    else:\n      select = c[0]\n      del c[0]\n      lengthc -= 1```\n "
    },
    {
        "user_id": "u365156087",
        "problem_id": "p03206",
        "submission1_id": "s753879111",
        "code_content": "\nD = int(input())\nprint('Christmas' + \" Eve\"*(25-D))",
        "origin_generated_text": "\n```\nD = int(input())\nprint('Christmas' + \" Eve\"*(25-D))```\n "
    },
    {
        "user_id": "u137704841",
        "problem_id": "p03796",
        "submission1_id": "s602907488",
        "code_content": "\ninN = int(input())\n \nD=1000000000+7\np=1\nfor i in range(inN):\n  p=p*i\n  if (D < p): p=p%D\n \nprint(str(p))",
        "origin_generated_text": "\n```\ninN = int(input())\n \nD=1000000000+7\np=1\nfor i in range(inN):\n  p=p*i\n  if (D < p): p=p%D\n \nprint(str(p))```\n "
    },
    {
        "user_id": "u403301154",
        "problem_id": "p03729",
        "submission1_id": "s945443957",
        "code_content": "\na, b, c = input().split()\nif a[-1]==b[0] and b[-1]==c[0]:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
        "origin_generated_text": "\n```\na, b, c = input().split()\nif a[-1]==b[0] and b[-1]==c[0]:\n  print(\"YES\")\nelse:\n  print(\"NO\")```\n "
    },
    {
        "user_id": "u796842765",
        "problem_id": "p02880",
        "submission1_id": "s782257638",
        "code_content": "\nN = int(input())\nkuku = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nkuku1 = [a * b for a in kuku for b in kuku]\nif N in kuku1:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nN = int(input())\nkuku = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nkuku1 = [a * b for a in kuku for b in kuku]\nif N in kuku1:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u619819312",
        "problem_id": "p03675",
        "submission1_id": "s662305420",
        "code_content": "\nn=int(input())\na=list(map(str,input().split()))\ns=list(reversed(a[1::2]))+list(reversed(a[::2]))\nc=\"\"\nfor i in range(n):\n    c+=s[i]+\" \"\nprint(c)",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(str,input().split()))\ns=list(reversed(a[1::2]))+list(reversed(a[::2]))\nc=\"\"\nfor i in range(n):\n    c+=s[i]+\" \"\nprint(c)```\n "
    },
    {
        "user_id": "u840310460",
        "problem_id": "p03752",
        "submission1_id": "s908106740",
        "code_content": "\nN, K = [int(i)for i in input().split()]\nA = [int(i) for i in input().split()]\n\n\nans = float(\"inf\")\nfor i in range(N):\n    cnt = 0\n    cost = 0\n    height = A[0]\n    for j in range(1, N):\n        if A[j] >= height:\n            cnt += 1\n            cost += height - A[j]\n            height += 1\n    if cnt >= K:\n        ans = min(ans, cost)\n\nprint(ans)",
        "origin_generated_text": "\n```\nN, K = [int(i)for i in input().split()]\nA = [int(i) for i in input().split()]\n\n\nans = float(\"inf\")\nfor i in range(N):\n    cnt = 0\n    cost = 0\n    height = A[0]\n    for j in range(1, N):\n        if A[j] >= height:\n            cnt += 1\n            cost += height - A[j]\n            height += 1\n    if cnt >= K:\n        ans = min(ans, cost)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u792720861",
        "problem_id": "p03760",
        "submission1_id": "s434429520",
        "code_content": "\nO = list(input())\nE = list(input())\nprint(*[o+e for o,e in zip(O,E)], sep=\"\")\n",
        "origin_generated_text": "\n```\nO = list(input())\nE = list(input())\nprint(*[o+e for o,e in zip(O,E)], sep=\"\")\n```\n "
    },
    {
        "user_id": "u617440820",
        "problem_id": "p03416",
        "submission1_id": "s995609846",
        "code_content": "\ninput_one = input().split()\ni = int(input_one[0])\ntwo = input_one[1]\n\n\n\n\nwhile  i <= int(two):\n    \n    i = str(i)\n    if i[0] == i[4]:\n        if i[1] == i[3]:\n            print(int(i),end=\" \")\n\n    i = int(i) + 1",
        "origin_generated_text": "\n```\ninput_one = input().split()\ni = int(input_one[0])\ntwo = input_one[1]\n\n\n\n\nwhile  i <= int(two):\n    \n    i = str(i)\n    if i[0] == i[4]:\n        if i[1] == i[3]:\n            print(int(i),end=\" \")\n\n    i = int(i) + 1```\n "
    },
    {
        "user_id": "u707444776",
        "problem_id": "p03752",
        "submission1_id": "s559550952",
        "code_content": "\ndef dfs(index):\n    global ans\n    if index == N:\n        if blst.count(1) == K:\n            tmp = a[0]\n            anstmp = 0\n            for i in range(1, N):\n                if blst[i - 1] == 0:continue\n                if tmp >= a[i]:\n                    anstmp += tmp - a[i] + 1\n                    tmp += 1\n                else:\n                    tmp = a[i]\n            ans = min(ans, anstmp)\n        return\n    for i in range(2):\n        blst[index - 1] = i\n        dfs(index + 1)\n    return\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\nblst = [0] * (N - 1)\nans = float('inf')\ndfs(1)\n\nprint(ans)",
        "origin_generated_text": "\n```\ndef dfs(index):\n    global ans\n    if index == N:\n        if blst.count(1) == K:\n            tmp = a[0]\n            anstmp = 0\n            for i in range(1, N):\n                if blst[i - 1] == 0:continue\n                if tmp >= a[i]:\n                    anstmp += tmp - a[i] + 1\n                    tmp += 1\n                else:\n                    tmp = a[i]\n            ans = min(ans, anstmp)\n        return\n    for i in range(2):\n        blst[index - 1] = i\n        dfs(index + 1)\n    return\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\nblst = [0] * (N - 1)\nans = float('inf')\ndfs(1)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u353797797",
        "problem_id": "p03625",
        "submission1_id": "s797592306",
        "code_content": "\nfrom collections import Counter\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\ndef main():\n    n=int(input())\n    aa=LI()\n    cnt=Counter(aa)\n    mx=-1\n    for a,an in sorted(cnt.items(),reverse=True):\n        if an>3 and mx==-1:\n            print(a*a)\n        elif an>1:\n            if mx==-1:mx=a\n            else:\n                print(mx*a)\n                break\n        elif an==3:\n            print(a*a)\n            break\n    else:\n        print(0)\n\n\n\nmain()",
        "origin_generated_text": "\n```\nfrom collections import Counter\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\ndef main():\n    n=int(input())\n    aa=LI()\n    cnt=Counter(aa)\n    mx=-1\n    for a,an in sorted(cnt.items(),reverse=True):\n        if an>3 and mx==-1:\n            print(a*a)\n        elif an>1:\n            if mx==-1:mx=a\n            else:\n                print(mx*a)\n                break\n        elif an==3:\n            print(a*a)\n            break\n    else:\n        print(0)\n\n\n\nmain()```\n "
    },
    {
        "user_id": "u820351940",
        "problem_id": "p03760",
        "submission1_id": "s975162949",
        "code_content": "\na = input(); b = input(); print(\"\".join(map(\"\".join, zip(a, b))) + (a[-1] if len(a) is not len(b) else \"\"))",
        "origin_generated_text": "\n```\na = input(); b = input(); print(\"\".join(map(\"\".join, zip(a, b))) + (a[-1] if len(a) is not len(b) else \"\"))```\n "
    },
    {
        "user_id": "u472534477",
        "problem_id": "p03274",
        "submission1_id": "s729839721",
        "code_content": "\nN,K = map(int,input().split())\nx = list(map(int,input().split()))\nans=float(\"inf\")\n\nfor i in range(N):\n    if i + K >= N:\n        break\n    else:\n        a = min(abs(x[K+i-1]),abs(x[i])) \n        ans = min(ans,x[K+i-1]-x[i]+a)\nprint(ans)",
        "origin_generated_text": "\n```\nN,K = map(int,input().split())\nx = list(map(int,input().split()))\nans=float(\"inf\")\n\nfor i in range(N):\n    if i + K >= N:\n        break\n    else:\n        a = min(abs(x[K+i-1]),abs(x[i])) \n        ans = min(ans,x[K+i-1]-x[i]+a)\nprint(ans)```\n "
    },
    {
        "user_id": "u098240946",
        "problem_id": "p03343",
        "submission1_id": "s256556489",
        "code_content": "\nN,K,Q = a = map(int,input().split())\na = list(map(int,input().split()))\ninf = 10**10\nans = inf\nfor i in range(N):\n    small = a[i]\n    seq = []\n    seqq = []\n    for j in range(N):\n        if a[j] < small:\n            seq.append(seqq)\n            seqq = []\n        else:\n            seqq.append(a[j])\n    seq.append(seqq)\n    aaa = []\n    for s in seq:\n        if len(s)>=K:\n            s.sort()\n            aaa += s[:len(s)-K+1]\n    if len(aaa)>=Q:\n        aaa.sort()\n        ans = min(ans,aaa[Q-1]-aaa[0])\nprint(ans)",
        "origin_generated_text": "\n```\nN,K,Q = a = map(int,input().split())\na = list(map(int,input().split()))\ninf = 10**10\nans = inf\nfor i in range(N):\n    small = a[i]\n    seq = []\n    seqq = []\n    for j in range(N):\n        if a[j] < small:\n            seq.append(seqq)\n            seqq = []\n        else:\n            seqq.append(a[j])\n    seq.append(seqq)\n    aaa = []\n    for s in seq:\n        if len(s)>=K:\n            s.sort()\n            aaa += s[:len(s)-K+1]\n    if len(aaa)>=Q:\n        aaa.sort()\n        ans = min(ans,aaa[Q-1]-aaa[0])\nprint(ans)```\n "
    },
    {
        "user_id": "u858670323",
        "problem_id": "p03568",
        "submission1_id": "s628453262",
        "code_content": "\nn=int(input())\nA=list(map(int,input().rstrip().split(' ')))\nans=0\nfor a in A:\n  if(a%2==1):\n    ans+=3\n  else:\n    ans+=2\n    \nprint(ans",
        "origin_generated_text": "\n```\nn=int(input())\nA=list(map(int,input().rstrip().split(' ')))\nans=0\nfor a in A:\n  if(a%2==1):\n    ans+=3\n  else:\n    ans+=2\n    \nprint(ans```\n "
    },
    {
        "user_id": "u191874006",
        "problem_id": "p03965",
        "submission1_id": "s010305547",
        "code_content": "\n\n\n\nimport sys\nimport math\nimport bisect\nsys.setrecursionlimit(1000000000)\nfrom heapq import heappush, heappop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\n\ns = input()\nn = len(s)\nans = 0\ncnt = 0\nfor i in range(n):\n    if s[i] == 'g':\n        if cnt > 0:\n            ans += 1\n            cnt -= 1\n        else:\n            cnt += 1\n    else:\n        cnt += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\n\n\n\nimport sys\nimport math\nimport bisect\nsys.setrecursionlimit(1000000000)\nfrom heapq import heappush, heappop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\n\ns = input()\nn = len(s)\nans = 0\ncnt = 0\nfor i in range(n):\n    if s[i] == 'g':\n        if cnt > 0:\n            ans += 1\n            cnt -= 1\n        else:\n            cnt += 1\n    else:\n        cnt += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u532966492",
        "problem_id": "p03992",
        "submission1_id": "s791130027",
        "code_content": "\ns=input()\nprint(s[:4]+\" \"+s[4:])",
        "origin_generated_text": "\n```\ns=input()\nprint(s[:4]+\" \"+s[4:])```\n "
    },
    {
        "user_id": "u667189155",
        "problem_id": "p02917",
        "submission1_id": "s883337779",
        "code_content": "\nn = int(input())\nb = list(map(int, input().split()))\n\nmax_sum = 0\nfor i in range(n-1):\n    if b[i] > b[i+1]:\n        b[i+1] = b[i]\n    max_sum += b[i]\nprint(max_sum)\n",
        "origin_generated_text": "\n```\nn = int(input())\nb = list(map(int, input().split()))\n\nmax_sum = 0\nfor i in range(n-1):\n    if b[i] > b[i+1]:\n        b[i+1] = b[i]\n    max_sum += b[i]\nprint(max_sum)\n```\n "
    },
    {
        "user_id": "u867848444",
        "problem_id": "p02625",
        "submission1_id": "s611449886",
        "code_content": "\n\ndef pre_c(n, mod):\n    f = [0] * (n + 1)\n    g = [0] * (n + 1)\n    for i in range(n + 1):\n        if i == 0:\n            f[i] = 1\n            g[i] = 1\n        else:\n            f[i] = (f[i - 1] * i) % mod\n            g[i] = pow(f[i], mod - 2, mod)\n\n    return f, g\n\nn, m = map(int,input().split())\nmod = 10 ** 9 + 7\nf, g = pre_c(m, mod)\nmCn = (f[m] * g[m - n] * g[n]) % mod\ntemp1 = (f[n] * f[n - 1]) % mod\ntemp2 = (f[n] * f[n]) % mod\nif m < 2*n:\n    res = (mCn ** 2 * temp1) % mod\nelse:\n    m_nCn = (f[m - n] * g[n] * g[m - 2*n]) % mod\n    execept = (mCn * m_nCn * temp2) % mod\n    res = (execept + ((mCn ** 2 - mCn * m_nCn) * temp1)) % mod\nprint(res % mod)",
        "origin_generated_text": "\n```\n\ndef pre_c(n, mod):\n    f = [0] * (n + 1)\n    g = [0] * (n + 1)\n    for i in range(n + 1):\n        if i == 0:\n            f[i] = 1\n            g[i] = 1\n        else:\n            f[i] = (f[i - 1] * i) % mod\n            g[i] = pow(f[i], mod - 2, mod)\n\n    return f, g\n\nn, m = map(int,input().split())\nmod = 10 ** 9 + 7\nf, g = pre_c(m, mod)\nmCn = (f[m] * g[m - n] * g[n]) % mod\ntemp1 = (f[n] * f[n - 1]) % mod\ntemp2 = (f[n] * f[n]) % mod\nif m < 2*n:\n    res = (mCn ** 2 * temp1) % mod\nelse:\n    m_nCn = (f[m - n] * g[n] * g[m - 2*n]) % mod\n    execept = (mCn * m_nCn * temp2) % mod\n    res = (execept + ((mCn ** 2 - mCn * m_nCn) * temp1)) % mod\nprint(res % mod)```\n "
    },
    {
        "user_id": "u465652095",
        "problem_id": "p02730",
        "submission1_id": "s982477875",
        "code_content": "\nS = input()\nN = len(S)\nSF_num = int((N-1)/2)\nSF = S[:SF_num]\nSF_rev = SF[::-1]\nSB = S[SF_num:]\nSB_rev = SB[::-1]\n\nif SF == SF_rev and SB == SB_rev:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\nSF_num = int((N-1)/2)\nSF = S[:SF_num]\nSF_rev = SF[::-1]\nSB = S[SF_num:]\nSB_rev = SB[::-1]\n\nif SF == SF_rev and SB == SB_rev:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u657221245",
        "problem_id": "p03106",
        "submission1_id": "s774215225",
        "code_content": "\na = list(map(int, input().split()))\nnum1 = a[0]\nnum2 = a[1]\nlist1 = []\nlist2 = []\nmax = a[2]\nfor i in range(1, num1 + 1):\n  if num1 % i == 0:\n    list1.append(i)\n    \nfor i in range(1, num2 + 1):\n  if num2 % i == 0:\n    list2.append(i)\n\nlist3 = list(set(list1) & set(list2))\nlist3.sort()\n\nprint(list3[max -1])",
        "origin_generated_text": "\n```\na = list(map(int, input().split()))\nnum1 = a[0]\nnum2 = a[1]\nlist1 = []\nlist2 = []\nmax = a[2]\nfor i in range(1, num1 + 1):\n  if num1 % i == 0:\n    list1.append(i)\n    \nfor i in range(1, num2 + 1):\n  if num2 % i == 0:\n    list2.append(i)\n\nlist3 = list(set(list1) & set(list2))\nlist3.sort()\n\nprint(list3[max -1])```\n "
    },
    {
        "user_id": "u960237860",
        "problem_id": "p02553",
        "submission1_id": "s570786641",
        "code_content": "\na, b, c, d = map(int, input().split())\n\nans = -1e20\nfor x in range(a, b + 1):\n    for y in range(c, d + 1):\n        if x * y > ans:\n            ans = x * y\nprint(ans)",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\n\nans = -1e20\nfor x in range(a, b + 1):\n    for y in range(c, d + 1):\n        if x * y > ans:\n            ans = x * y\nprint(ans)```\n "
    },
    {
        "user_id": "u470542271",
        "problem_id": "p02886",
        "submission1_id": "s623286367",
        "code_content": "\nn = int(input())\nd = list(map(int, input().split()))\n\nans = 0\nfor i in range(len(d)):\n    for j in range(i+1, len(d)):\n        ans += d[i] * d[j]\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\nd = list(map(int, input().split()))\n\nans = 0\nfor i in range(len(d)):\n    for j in range(i+1, len(d)):\n        ans += d[i] * d[j]\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u912652535",
        "problem_id": "p02959",
        "submission1_id": "s447349072",
        "code_content": "\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n\nc = []\ncount = 0\n\nfor i in range(n):\n\n    if a[i] - b[i] >= 0:\n        count += b[i]\n    elif a[i] - b[i] < 0:\n        count += a[i]\n        if a[i+1] + (a[i] - b[i]) >0:\n            a[i+1] = a[i+1] + (a[i] - b[i])\n            count += (a[i]-b[i])\n        elif a[i+1] + (a[i]-b[i]) <=0:\n            count += a[i+1]\n            a[i+1] = 0\n            \nprint(count)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n\nc = []\ncount = 0\n\nfor i in range(n):\n\n    if a[i] - b[i] >= 0:\n        count += b[i]\n    elif a[i] - b[i] < 0:\n        count += a[i]\n        if a[i+1] + (a[i] - b[i]) >0:\n            a[i+1] = a[i+1] + (a[i] - b[i])\n            count += (a[i]-b[i])\n        elif a[i+1] + (a[i]-b[i]) <=0:\n            count += a[i+1]\n            a[i+1] = 0\n            \nprint(count)```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s745581223",
        "code_content": "\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\nans = 0\nfor i in range(W):\n    if i < H and P[i] < Q[i]:\n        ans += P[i] * (W - i)\n    else:\n        ans += Q[i] * (H - i)\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\nans = 0\nfor i in range(W):\n    if i < H and P[i] < Q[i]:\n        ans += P[i] * (W - i)\n    else:\n        ans += Q[i] * (H - i)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u377989038",
        "problem_id": "p03477",
        "submission1_id": "s453804547",
        "code_content": "\na, b, c, d = map(int, input().split())\nif a + b == c + d:\n    print(\"Balanced\")\nelif a + b < c + d:\n    print(\"Right\")\nelse:\n    print(\"Left\")\n",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nif a + b == c + d:\n    print(\"Balanced\")\nelif a + b < c + d:\n    print(\"Right\")\nelse:\n    print(\"Left\")\n```\n "
    },
    {
        "user_id": "u578501242",
        "problem_id": "p03296",
        "submission1_id": "s352105312",
        "code_content": "\na =int(input())\nb =list(map(int,input().split()))\nx=0\nfor i in range(a-1):\n\tif b[i]==b[i+1]:\n\t\tb[i+1]=11111\n\t\tx=x+1\nprint(x)",
        "origin_generated_text": "\n```\na =int(input())\nb =list(map(int,input().split()))\nx=0\nfor i in range(a-1):\n\tif b[i]==b[i+1]:\n\t\tb[i+1]=11111\n\t\tx=x+1\nprint(x)```\n "
    },
    {
        "user_id": "u587589241",
        "problem_id": "p03475",
        "submission1_id": "s655746235",
        "code_content": "\nimport sys\nn=int(input())\nc=[]\ns=[]\nf=[]\nif n==1:\n    print(0)\n    sys.exit()\nfor i in range(n-1):\n    C,S,F=map(int,input().split())\n    c.append(C)\n    s.append(S)\n    f.append(F)\nfor i in range(n-1):\n    tmp=0\n    while i<n-1:\n        if tmp<=s[i]:\n            a=s[i]\n        elif tmp%f[i]==0:\n            a=tmp+f[i]\n        elif tmp>s[i]:\n            b=(tmp-s[i])%f[i]\n            a=tmp+b\n        tmp=a+c[i]\n        i+=1\n    print(tmp)\nprint(0)",
        "origin_generated_text": "\n```\nimport sys\nn=int(input())\nc=[]\ns=[]\nf=[]\nif n==1:\n    print(0)\n    sys.exit()\nfor i in range(n-1):\n    C,S,F=map(int,input().split())\n    c.append(C)\n    s.append(S)\n    f.append(F)\nfor i in range(n-1):\n    tmp=0\n    while i<n-1:\n        if tmp<=s[i]:\n            a=s[i]\n        elif tmp%f[i]==0:\n            a=tmp+f[i]\n        elif tmp>s[i]:\n            b=(tmp-s[i])%f[i]\n            a=tmp+b\n        tmp=a+c[i]\n        i+=1\n    print(tmp)\nprint(0)```\n "
    },
    {
        "user_id": "u518064858",
        "problem_id": "p03626",
        "submission1_id": "s628006376",
        "code_content": "\nn=int(input())\ns1=input()\ns2=input()\nif n==1:\n    print(3)\n    exit()\ns=\"\"\ni=0\nwhile i<n:\n    if s1[i]==s2[i]:\n        s+=\"1\"\n        i+=1\n    else:\n        s+=\"2\"\n        i+=2\nans=0\nif s[0]==\"1\":\n    ans+=3\nelse:\n    ans+=6\nbefore=s[0]\nfor j in range(1,len(s)):\n    if before==\"1\":\n        if s[j]==\"1\":\n            ans*=2\n        else:\n            ans*=2\n    else:\n        if s[j]==\"2\":\n            ans*=3\n    before=s[j]\nprint(ans%(10**9+7))\n",
        "origin_generated_text": "\n```\nn=int(input())\ns1=input()\ns2=input()\nif n==1:\n    print(3)\n    exit()\ns=\"\"\ni=0\nwhile i<n:\n    if s1[i]==s2[i]:\n        s+=\"1\"\n        i+=1\n    else:\n        s+=\"2\"\n        i+=2\nans=0\nif s[0]==\"1\":\n    ans+=3\nelse:\n    ans+=6\nbefore=s[0]\nfor j in range(1,len(s)):\n    if before==\"1\":\n        if s[j]==\"1\":\n            ans*=2\n        else:\n            ans*=2\n    else:\n        if s[j]==\"2\":\n            ans*=3\n    before=s[j]\nprint(ans%(10**9+7))\n```\n "
    },
    {
        "user_id": "u519227872",
        "problem_id": "p02299",
        "submission1_id": "s020243394",
        "code_content": "\nn = int(input())\ng = []\nfor i in range(n):\n    g.append([int(i) for i in input().split()])\nq = int(input())\ndef dot(a, b):\n    return sum([i * j for i,j in zip(a, b)])\ndef sub(a, b):\n    return [a[0] - b[0],a[1] - b[1]]\ndef cross(a, b):\n    return  a[0] * b[1] - a[1] * b[0]\ndef contains(g, p):\n    x = False\n    for i in range(n):\n        a = sub(g[i], p)\n        b = sub(g[(i+1)%n], p)\n        if abs(cross(a, b)) == 0 and dot(a, b) < 0: \n            return 1\n        if a[1] > b[1]:\n            a,b=b,a\n        if a[1] < 0 and 0 < b[1] and abs(cross(a,b)) > 0:\n            x = not x\n    return 2 if x else 0\nfor i in range(q):\n    x,y = map(int, input().split())\n    print(contains(g, [x,y]))\n\n",
        "origin_generated_text": "\n```\nn = int(input())\ng = []\nfor i in range(n):\n    g.append([int(i) for i in input().split()])\nq = int(input())\ndef dot(a, b):\n    return sum([i * j for i,j in zip(a, b)])\ndef sub(a, b):\n    return [a[0] - b[0],a[1] - b[1]]\ndef cross(a, b):\n    return  a[0] * b[1] - a[1] * b[0]\ndef contains(g, p):\n    x = False\n    for i in range(n):\n        a = sub(g[i], p)\n        b = sub(g[(i+1)%n], p)\n        if abs(cross(a, b)) == 0 and dot(a, b) < 0: \n            return 1\n        if a[1] > b[1]:\n            a,b=b,a\n        if a[1] < 0 and 0 < b[1] and abs(cross(a,b)) > 0:\n            x = not x\n    return 2 if x else 0\nfor i in range(q):\n    x,y = map(int, input().split())\n    print(contains(g, [x,y]))\n\n```\n "
    },
    {
        "user_id": "u663438907",
        "problem_id": "p02665",
        "submission1_id": "s211772377",
        "code_content": "\nimport sys\nN = int(input())\nA = list(map(int, input().split()))\n\nl = []\n\nif A[0] != 1:\n    print(-1)\n    sys.exit()\n\nfor i in range(N-1):\n    if A[i] > A[i+1]+1:\n        print(-1)\n        sys.exit()\n\ntemp = 1\nfor i in range(N+1):\n    l.append(temp-A[i])\n    temp = (temp-A[i])*2\n\nans = 1\nnode = 0\nfor i in range(N, 0, -1):\n    if l[i-1] >= node + A[i]:\n        node += A[i]\n        ans += node\n    else:\n        ans += node + A[i]\n        node = l[i-1]\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\nN = int(input())\nA = list(map(int, input().split()))\n\nl = []\n\nif A[0] != 1:\n    print(-1)\n    sys.exit()\n\nfor i in range(N-1):\n    if A[i] > A[i+1]+1:\n        print(-1)\n        sys.exit()\n\ntemp = 1\nfor i in range(N+1):\n    l.append(temp-A[i])\n    temp = (temp-A[i])*2\n\nans = 1\nnode = 0\nfor i in range(N, 0, -1):\n    if l[i-1] >= node + A[i]:\n        node += A[i]\n        ans += node\n    else:\n        ans += node + A[i]\n        node = l[i-1]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u460245024",
        "problem_id": "p03274",
        "submission1_id": "s457874313",
        "code_content": "\nN, K = map(int, input().split())\nX = list(map(int, input().split()))\nINF = 1000000000\ndistances = [INF]*(2*(N-K+1))\nfor l in range(N-K+1):\n    distances[l]=abs(X[l]) + abs(X[l+K-1] - X[l])\n    distances[l+1]=abs(X[l+K-1]) + abs(X[l] - X[l+K-1])\n\nprint(min(distances))\n",
        "origin_generated_text": "\n```\nN, K = map(int, input().split())\nX = list(map(int, input().split()))\nINF = 1000000000\ndistances = [INF]*(2*(N-K+1))\nfor l in range(N-K+1):\n    distances[l]=abs(X[l]) + abs(X[l+K-1] - X[l])\n    distances[l+1]=abs(X[l+K-1]) + abs(X[l] - X[l+K-1])\n\nprint(min(distances))\n```\n "
    },
    {
        "user_id": "u361381049",
        "problem_id": "p04019",
        "submission1_id": "s476655014",
        "code_content": "\ns = input()\nans = 'Yes'\nn = 0\nw = 0\nsow = 0\ne = 0\n\nfor i in range(len(s)):\n    if s[i] == 'N':\n        n += 1\n    elif s[i] == 'W':\n        w += 1\n    elif s[i] == 'S':\n        sow += 1\n    else:\n        e += 1\n\n\n\nif (n == 0 and w != 0) or (n != 0 and w == 0) or (sow == 0 and e != 0) or (sow != 0 and e == 0):\n    ans = 'No'\nprint(ans)",
        "origin_generated_text": "\n```\ns = input()\nans = 'Yes'\nn = 0\nw = 0\nsow = 0\ne = 0\n\nfor i in range(len(s)):\n    if s[i] == 'N':\n        n += 1\n    elif s[i] == 'W':\n        w += 1\n    elif s[i] == 'S':\n        sow += 1\n    else:\n        e += 1\n\n\n\nif (n == 0 and w != 0) or (n != 0 and w == 0) or (sow == 0 and e != 0) or (sow != 0 and e == 0):\n    ans = 'No'\nprint(ans)```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03080",
        "submission1_id": "s633612254",
        "code_content": "\nn=int(input())\ns=input()\ncount=0\nfor i in s:\n  if i=='R':\n    count+=1\nif count>(n-count):\n  print('Yes')\nelse:\n  print('No')",
        "origin_generated_text": "\n```\nn=int(input())\ns=input()\ncount=0\nfor i in s:\n  if i=='R':\n    count+=1\nif count>(n-count):\n  print('Yes')\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u056977516",
        "problem_id": "p02556",
        "submission1_id": "s206605779",
        "code_content": "\n\n\n\nfrom math import *\nfrom copy import *                      \nfrom heapq import *                     \nfrom string import *                    \nfrom random import *                    \nfrom bisect import *                    \nfrom sys import stdin                   \nfrom sys import maxsize                 \nfrom operator import *                  \nfrom itertools import *                 \nfrom decimal import Decimal             \nfrom collections import Counter         \nfrom collections import defaultdict     \n\n\n\ndef solve(l):\n\tn = len(l)\n\td = defaultdict(int)\n\tfor x,y in l:\n\t\td[x] += 1\n\t\td[y] += 1\n\treturn max(d.values()) - min(d.values())\n\nN = int(stdin.readline())\nL = []\nfor i in range(N):\n\ta,b = map(int, input().split())\n\tL.append([a,b])\nans = solve(L)\nprint(ans)\n\n",
        "origin_generated_text": "\n```\n\n\n\nfrom math import *\nfrom copy import *                      \nfrom heapq import *                     \nfrom string import *                    \nfrom random import *                    \nfrom bisect import *                    \nfrom sys import stdin                   \nfrom sys import maxsize                 \nfrom operator import *                  \nfrom itertools import *                 \nfrom decimal import Decimal             \nfrom collections import Counter         \nfrom collections import defaultdict     \n\n\n\ndef solve(l):\n\tn = len(l)\n\td = defaultdict(int)\n\tfor x,y in l:\n\t\td[x] += 1\n\t\td[y] += 1\n\treturn max(d.values()) - min(d.values())\n\nN = int(stdin.readline())\nL = []\nfor i in range(N):\n\ta,b = map(int, input().split())\n\tL.append([a,b])\nans = solve(L)\nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u424241608",
        "problem_id": "p02642",
        "submission1_id": "s078460641",
        "code_content": "\nn = int(input())\narr = [int(x) for x in input().split()]\nd = {}\nfor x in arr:\n  d[x] = d.get(x,0)+1\n\nmxN = 10**6 + 1\nrp = [True]*mxN\n\nfor i in range(2,len(rp)):\n  if i not in d or not rp[i]:continue\n  for j in range(i+i,mxN,i):\n    if j in d: rp[j] = False\n\n\n\n\n\nfor k,v in d.items():\n  if v > 1:rp[k] = False\n\nfor k,v in d.items():\n  if v > 1:rp[k] = False\n\nans = sum([(1 if rp[x] else 0) for x in arr])\nprint(ans)\n\n\n\n",
        "origin_generated_text": "\n```\nn = int(input())\narr = [int(x) for x in input().split()]\nd = {}\nfor x in arr:\n  d[x] = d.get(x,0)+1\n\nmxN = 10**6 + 1\nrp = [True]*mxN\n\nfor i in range(2,len(rp)):\n  if i not in d or not rp[i]:continue\n  for j in range(i+i,mxN,i):\n    if j in d: rp[j] = False\n\n\n\n\n\nfor k,v in d.items():\n  if v > 1:rp[k] = False\n\nfor k,v in d.items():\n  if v > 1:rp[k] = False\n\nans = sum([(1 if rp[x] else 0) for x in arr])\nprint(ans)\n\n\n\n```\n "
    },
    {
        "user_id": "u623687794",
        "problem_id": "p03546",
        "submission1_id": "s020138649",
        "code_content": "\nh,w=map(int,input().split())\ncost=[list(map(int,input().split())) for i in range(10)]\nfor i in range(10):\n  for j in range(10):\n    for k in range(10):\n      cost[i][j]=min(cost[i][j],cost[i][k]+cost[k][j])\nwall=[list(map(int,input().split())) for i in range(h+2)]\nans=0\nfor i in range(h):\n  for j in range(w):\n    if wall[i+1][j+1]==-1:continue\n    ans+=cost[wall[i+1][j+1]][1]\nprint(ans)",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\ncost=[list(map(int,input().split())) for i in range(10)]\nfor i in range(10):\n  for j in range(10):\n    for k in range(10):\n      cost[i][j]=min(cost[i][j],cost[i][k]+cost[k][j])\nwall=[list(map(int,input().split())) for i in range(h+2)]\nans=0\nfor i in range(h):\n  for j in range(w):\n    if wall[i+1][j+1]==-1:continue\n    ans+=cost[wall[i+1][j+1]][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u617384447",
        "problem_id": "p02660",
        "submission1_id": "s005859528",
        "code_content": "\nn = int(input())\n\ndef divGame(N=n):\n  if N == 1:\n    return 0\n  if N == 2:\n    return 1\n  \n  factors = []\n\n  for i in range(2, int(N**0.5 + 1), 1):\n    count = 0\n    while N % i == 0:\n      N /= i\n      count += 1\n    if count != 0:\n      factors.append(count)\n  if N != 1:\n    factors.append(1)\n\n  factors.sort()\n\n  answer = 0\n  accum = 1\n  count = 1\n  for i in range(len(factors)):\n    if factors[i] > accum:\n      count += 1\n      accum += count\n    answer += count\n\n  return answer\n\nprint(divGame())",
        "origin_generated_text": "\n```\nn = int(input())\n\ndef divGame(N=n):\n  if N == 1:\n    return 0\n  if N == 2:\n    return 1\n  \n  factors = []\n\n  for i in range(2, int(N**0.5 + 1), 1):\n    count = 0\n    while N % i == 0:\n      N /= i\n      count += 1\n    if count != 0:\n      factors.append(count)\n  if N != 1:\n    factors.append(1)\n\n  factors.sort()\n\n  answer = 0\n  accum = 1\n  count = 1\n  for i in range(len(factors)):\n    if factors[i] > accum:\n      count += 1\n      accum += count\n    answer += count\n\n  return answer\n\nprint(divGame())```\n "
    },
    {
        "user_id": "u803848678",
        "problem_id": "p03054",
        "submission1_id": "s981406022",
        "code_content": "\nh,w,n = map(int, input().split())\nsr, sc = map(int, input().split())\ns = input()\nt = input()\n\nleft = 1\nright = w\nbot = 1\ntop = h\n\nif s[-1] == \"L\":\n    left += 1\nelif s[-1] == \"R\":\n    right -= 1\nelif s[-1] == \"U\":\n    bot += 1\nelif s[-1] == \"D\":\n    top -= 1\n\nfor i in range(n-2, -1, -1):\n    if t[i] == \"L\":\n        right = min(w, right+1)\n    elif t[i] == \"R\":\n        left = max(0, left-1)\n    elif t[i] == \"U\":\n        bot = max(0, bot-1)\n    elif t[i] == \"D\":\n        top = min(h, top+1)\n    if left >= right or bot >= top:\n        print(\"NO\")\n        exit()\n    if s[i] == \"L\":\n        left += 1\n    elif s[i] == \"R\":\n        right -= 1\n    elif s[i] == \"U\":\n        bot += 1\n    elif s[i] == \"D\":\n        top -= 1\nif left <= sc <= right and bot <= sr <=top:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
        "origin_generated_text": "\n```\nh,w,n = map(int, input().split())\nsr, sc = map(int, input().split())\ns = input()\nt = input()\n\nleft = 1\nright = w\nbot = 1\ntop = h\n\nif s[-1] == \"L\":\n    left += 1\nelif s[-1] == \"R\":\n    right -= 1\nelif s[-1] == \"U\":\n    bot += 1\nelif s[-1] == \"D\":\n    top -= 1\n\nfor i in range(n-2, -1, -1):\n    if t[i] == \"L\":\n        right = min(w, right+1)\n    elif t[i] == \"R\":\n        left = max(0, left-1)\n    elif t[i] == \"U\":\n        bot = max(0, bot-1)\n    elif t[i] == \"D\":\n        top = min(h, top+1)\n    if left >= right or bot >= top:\n        print(\"NO\")\n        exit()\n    if s[i] == \"L\":\n        left += 1\n    elif s[i] == \"R\":\n        right -= 1\n    elif s[i] == \"U\":\n        bot += 1\n    elif s[i] == \"D\":\n        top -= 1\nif left <= sc <= right and bot <= sr <=top:\n    print(\"YES\")\nelse:\n    print(\"NO\")```\n "
    },
    {
        "user_id": "u441320782",
        "problem_id": "p02922",
        "submission1_id": "s620128204",
        "code_content": "\nA,B=map(int,input().split())\ncount = 0\ntotal = 0\nif B==1:\n  print(0)\nelse:\n  while True:\n    total += A\n    count += 1\n    if total>=B:\n      break\n  print(count)",
        "origin_generated_text": "\n```\nA,B=map(int,input().split())\ncount = 0\ntotal = 0\nif B==1:\n  print(0)\nelse:\n  while True:\n    total += A\n    count += 1\n    if total>=B:\n      break\n  print(count)```\n "
    },
    {
        "user_id": "u775681539",
        "problem_id": "p03752",
        "submission1_id": "s351186241",
        "code_content": "\nfrom itertools import combinations\nINF = int(1e18)\ndef main():\n    n, k = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    p = [i for i in range(1,n)]\n    \n    \n    ans = INF\n    for i in combinations(p, k-1):\n        s = set(i)\n        cost = 0\n        mx = a[0]\n        for j in range(1, n):\n            if j in s:\n                if a[j] > mx:\n                    continue\n                mx += 1\n                cost += mx-a[j]\n            mx = max(mx, a[j])\n        ans = min(cost, ans)                \n    print(ans)\nmain()",
        "origin_generated_text": "\n```\nfrom itertools import combinations\nINF = int(1e18)\ndef main():\n    n, k = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    p = [i for i in range(1,n)]\n    \n    \n    ans = INF\n    for i in combinations(p, k-1):\n        s = set(i)\n        cost = 0\n        mx = a[0]\n        for j in range(1, n):\n            if j in s:\n                if a[j] > mx:\n                    continue\n                mx += 1\n                cost += mx-a[j]\n            mx = max(mx, a[j])\n        ans = min(cost, ans)                \n    print(ans)\nmain()```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03952",
        "submission1_id": "s779071513",
        "code_content": "\nN, x = [int(i) for i in input().split()]\nimport sys\n\nif x == 1 or x == 2*N-1:\n    if N != 1:\n        print(\"No\")\n        sys.exit()\n    else:\n        print(1)\n        sys.exit()\n\nsmaller = True\nif x > N:\n    smaller = False\n    x = 2*N-x\n\nans = list(range(2*N-1,N+x-1,-1))+list(range(1,N+x))\nif not smaller:\n    ans =[2*N - ans[i] for i in range(2*N-1)]\n\nprint(\"Yes\")\nprint(*ans)",
        "origin_generated_text": "\n```\nN, x = [int(i) for i in input().split()]\nimport sys\n\nif x == 1 or x == 2*N-1:\n    if N != 1:\n        print(\"No\")\n        sys.exit()\n    else:\n        print(1)\n        sys.exit()\n\nsmaller = True\nif x > N:\n    smaller = False\n    x = 2*N-x\n\nans = list(range(2*N-1,N+x-1,-1))+list(range(1,N+x))\nif not smaller:\n    ans =[2*N - ans[i] for i in range(2*N-1)]\n\nprint(\"Yes\")\nprint(*ans)```\n "
    },
    {
        "user_id": "u134019875",
        "problem_id": "p02854",
        "submission1_id": "s383072838",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nL = sum(a)\nl = 0\ni = 0\nwhile l < L / 2:\n    l += a[i]\n    i += 1\nprint(min(abs(sum(a[:i]) - sum(a[i:])), abs(sum(a[:i + 1]) - sum(a[i + 1:]))))\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nL = sum(a)\nl = 0\ni = 0\nwhile l < L / 2:\n    l += a[i]\n    i += 1\nprint(min(abs(sum(a[:i]) - sum(a[i:])), abs(sum(a[:i + 1]) - sum(a[i + 1:]))))\n```\n "
    },
    {
        "user_id": "u989306199",
        "problem_id": "p03568",
        "submission1_id": "s393761427",
        "code_content": "\nn = int(input())\nA = list(map(int, input().split()))\n\nans = 1\nfor a in A:\n    if a%2 == 0:\n        ans *= 2\n    else:\n        ans *= 3\n\nodd = 1\nfor a in A:\n    if a%2 == 0:\n        odd *= 2\n\nprint(ans-odd)\n",
        "origin_generated_text": "\n```\nn = int(input())\nA = list(map(int, input().split()))\n\nans = 1\nfor a in A:\n    if a%2 == 0:\n        ans *= 2\n    else:\n        ans *= 3\n\nodd = 1\nfor a in A:\n    if a%2 == 0:\n        odd *= 2\n\nprint(ans-odd)\n```\n "
    },
    {
        "user_id": "u474514603",
        "problem_id": "p03023",
        "submission1_id": "s835586464",
        "code_content": "\n\n\n\nfrom collections import defaultdict\nimport sys\nimport math\nfrom datetime import datetime\n\ndef sol(n):\n    \n    \n    \n    \n    \n\n    return int((180 - (360 / n)) * n)\n\n\ndo_submit = True\n\n\ndef input_parse(input_str):\n    lines = [x.strip() for x in input_str.split(\"\\n\") if x.strip()]\n    parsed_lines = [list(map(str, line.split())) for line in lines]\n    print(parsed_lines)\n    n = int(parsed_lines[0][0])\n    \n    \n    \n    return n\n\n\nif not do_submit:\n    n = input_parse()\n    print(sol(n))\n\n    n = input_parse()\n    print(sol(n))\n\nelse:\n    \n    \n    \n    n = int(input().strip())\n    \n    print(sol(n))\n\n",
        "origin_generated_text": "\n```\n\n\n\nfrom collections import defaultdict\nimport sys\nimport math\nfrom datetime import datetime\n\ndef sol(n):\n    \n    \n    \n    \n    \n\n    return int((180 - (360 / n)) * n)\n\n\ndo_submit = True\n\n\ndef input_parse(input_str):\n    lines = [x.strip() for x in input_str.split(\"\\n\") if x.strip()]\n    parsed_lines = [list(map(str, line.split())) for line in lines]\n    print(parsed_lines)\n    n = int(parsed_lines[0][0])\n    \n    \n    \n    return n\n\n\nif not do_submit:\n    n = input_parse()\n    print(sol(n))\n\n    n = input_parse()\n    print(sol(n))\n\nelse:\n    \n    \n    \n    n = int(input().strip())\n    \n    print(sol(n))\n\n```\n "
    },
    {
        "user_id": "u833416137",
        "problem_id": "p02742",
        "submission1_id": "s577535454",
        "code_content": "\nh,w = (int(i) for i in input().split())\n\nq_h,r_h = divmod(h,2)\n\nif r_h == 0: \t\n\tprint(w * q_h)\nelse:\n\tq_w,r_w = divmod(w,2)\n\tif r_w == 0:\n\t\tprint(w * q_h + q_w)\n\telse:\n\t\tprint(w * q_h + q_w + 1)",
        "origin_generated_text": "\n```\nh,w = (int(i) for i in input().split())\n\nq_h,r_h = divmod(h,2)\n\nif r_h == 0: \t\n\tprint(w * q_h)\nelse:\n\tq_w,r_w = divmod(w,2)\n\tif r_w == 0:\n\t\tprint(w * q_h + q_w)\n\telse:\n\t\tprint(w * q_h + q_w + 1)```\n "
    },
    {
        "user_id": "u794173881",
        "problem_id": "p03972",
        "submission1_id": "s305953044",
        "code_content": "\nw, h = map(int, input().split())\n\nw_cost = [int(input()) for i in range(w)]\nh_cost = [int(input()) for i in range(h)]\n\nw_cost = sorted(w_cost, reverse = True)\nh_cost = sorted(h_cost, reverse = True)\nw_cnt = 0\nh_cnt = 0\nans = 0\n\nwhile True:\n    if not w_cost:\n        ans += sum(h_cost)   \n        break\n    elif not h_cost:\n        ans += sum(w_cost)\n        break\n    elif w_cost[-1] < h_cost[-1]:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    else:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n        \nprint(ans)",
        "origin_generated_text": "\n```\nw, h = map(int, input().split())\n\nw_cost = [int(input()) for i in range(w)]\nh_cost = [int(input()) for i in range(h)]\n\nw_cost = sorted(w_cost, reverse = True)\nh_cost = sorted(h_cost, reverse = True)\nw_cnt = 0\nh_cnt = 0\nans = 0\n\nwhile True:\n    if not w_cost:\n        ans += sum(h_cost)   \n        break\n    elif not h_cost:\n        ans += sum(w_cost)\n        break\n    elif w_cost[-1] < h_cost[-1]:\n        ans += w_cost[-1] * (h+1-h_cnt)\n        w_cnt += 1\n        del w_cost[-1]\n    else:\n        ans += h_cost[-1] * (w+1-w_cnt)\n        h_cnt += 1\n        del h_cost[-1]\n        \nprint(ans)```\n "
    },
    {
        "user_id": "u411858517",
        "problem_id": "p03416",
        "submission1_id": "s137413469",
        "code_content": "\nA, B = map(int, input().split())\ncount = 0\n\nfor i in range(A, B+1):\n    i = str(i)\n    if i[:len(i)\n        count += 1\n    \nprint(count)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\ncount = 0\n\nfor i in range(A, B+1):\n    i = str(i)\n    if i[:len(i)\n        count += 1\n    \nprint(count)```\n "
    },
    {
        "user_id": "u940279019",
        "problem_id": "p03264",
        "submission1_id": "s140894702",
        "code_content": "\nK = int(input())\nif(K%2 == 0):\n  print(int((K/2)**2))\nelse:\n  print(int((K/2)*(K/2+1)))",
        "origin_generated_text": "\n```\nK = int(input())\nif(K%2 == 0):\n  print(int((K/2)**2))\nelse:\n  print(int((K/2)*(K/2+1)))```\n "
    },
    {
        "user_id": "u125269142",
        "problem_id": "p03102",
        "submission1_id": "s744002162",
        "code_content": "\nn, m, c = map(int, input().split())\nb_lists = list(map(int, input().split()))\na_lists = []\nfor _ in range(n):\n    tmp = list(map(int, input().split()))\n    a_lists.append(tmp)\n\nans = 0\nfor i in a_lists:\n    cond = c\n    for j in range(m):\n        cond += i[j]*b_lists[j]\n    if cond > 0:\n        ans += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nn, m, c = map(int, input().split())\nb_lists = list(map(int, input().split()))\na_lists = []\nfor _ in range(n):\n    tmp = list(map(int, input().split()))\n    a_lists.append(tmp)\n\nans = 0\nfor i in a_lists:\n    cond = c\n    for j in range(m):\n        cond += i[j]*b_lists[j]\n    if cond > 0:\n        ans += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s757537734",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p02886",
        "submission1_id": "s464995952",
        "code_content": "\nN = int(input())\nD = list(map(int, input().split()))\n\nsum_all = 0\nfor i in range(N):\n  for s in range(N):\n    sum_all += D[i] * D[s]\n    \nprint(sum_all)",
        "origin_generated_text": "\n```\nN = int(input())\nD = list(map(int, input().split()))\n\nsum_all = 0\nfor i in range(N):\n  for s in range(N):\n    sum_all += D[i] * D[s]\n    \nprint(sum_all)```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03714",
        "submission1_id": "s179135610",
        "code_content": "\nimport heapq\n\nn=int(input())\narr=list(map(int,input().split()))\nq1=[]\ntmp=0\nfor val in arr[:n]:\n  heapq.heappush(q1,val)\n  tmp+=val\nsum1=[tmp]\nfor val in arr[n:2*n]:\n  tmp=heapq.heappop(q1)\n  if val>tmp:\n    heapq.heappush(q1,val)\n    sum1.append(sum1[-1]+(val-tmp))\n  else:\n    heapq.heappush(q1,tmp)\n    sum1.append(sum1[-1])\nq2=[]\ntmp=0\nfor val in arr[2*n:]:\n  heapq.heappush(q2,-val)\n  tmp+=val\nsum2=[tmp]\nfor val in arr[2*n-1:n-1:-1]:\n  tmp=-heapq.heappop(q2)\n  if val<tmp:\n    heapq.heappush(q2,-val)\n    sum2.append(sum2[-1]+(val-tmp))\n  else:\n    heapq.heappush(q2,-tmp)\n    sum2.append(sum2[-1])\nsum2=sum2[::-1]\nans=-10**18\nfor i in range(n+1):\n  tmp=sum1[i]-sum2[i]\n  ans=max(ans,tmp)\nprint(ans)",
        "origin_generated_text": "\n```\nimport heapq\n\nn=int(input())\narr=list(map(int,input().split()))\nq1=[]\ntmp=0\nfor val in arr[:n]:\n  heapq.heappush(q1,val)\n  tmp+=val\nsum1=[tmp]\nfor val in arr[n:2*n]:\n  tmp=heapq.heappop(q1)\n  if val>tmp:\n    heapq.heappush(q1,val)\n    sum1.append(sum1[-1]+(val-tmp))\n  else:\n    heapq.heappush(q1,tmp)\n    sum1.append(sum1[-1])\nq2=[]\ntmp=0\nfor val in arr[2*n:]:\n  heapq.heappush(q2,-val)\n  tmp+=val\nsum2=[tmp]\nfor val in arr[2*n-1:n-1:-1]:\n  tmp=-heapq.heappop(q2)\n  if val<tmp:\n    heapq.heappush(q2,-val)\n    sum2.append(sum2[-1]+(val-tmp))\n  else:\n    heapq.heappush(q2,-tmp)\n    sum2.append(sum2[-1])\nsum2=sum2[::-1]\nans=-10**18\nfor i in range(n+1):\n  tmp=sum1[i]-sum2[i]\n  ans=max(ans,tmp)\nprint(ans)```\n "
    },
    {
        "user_id": "u309977459",
        "problem_id": "p03714",
        "submission1_id": "s069521748",
        "code_content": "\nimport heapq\nN = int(input())\nA = list(map(int, input().split()))\n\nal = A[:N]\nar = A[2*N:]\nheapq.heapify(al)\nheapq.heapify(ar)\n\nwhile len(al) > 0 and len(ar) > 0:\n    gl = al[0] - ar[0]\n    gr = -ar[0] - al[-1]\n    if gl < 0 and gr < 0:\n        heapq.heappop(al)\n        heapq.heappop(ar)\n    elif gl > gr:\n        heapq.heappop(al)\n    else:\n        heapq.heappop(ar)\nprint(sum(al)+sum(ar))\n",
        "origin_generated_text": "\n```\nimport heapq\nN = int(input())\nA = list(map(int, input().split()))\n\nal = A[:N]\nar = A[2*N:]\nheapq.heapify(al)\nheapq.heapify(ar)\n\nwhile len(al) > 0 and len(ar) > 0:\n    gl = al[0] - ar[0]\n    gr = -ar[0] - al[-1]\n    if gl < 0 and gr < 0:\n        heapq.heappop(al)\n        heapq.heappop(ar)\n    elif gl > gr:\n        heapq.heappop(al)\n    else:\n        heapq.heappop(ar)\nprint(sum(al)+sum(ar))\n```\n "
    },
    {
        "user_id": "u136284779",
        "problem_id": "p02699",
        "submission1_id": "s214093185",
        "code_content": "\nS,W=map(int,input().split())\nif S<=W:\n  print('unsafe')\nelse:\n  print('safe')",
        "origin_generated_text": "\n```\nS,W=map(int,input().split())\nif S<=W:\n  print('unsafe')\nelse:\n  print('safe')```\n "
    },
    {
        "user_id": "u263830634",
        "problem_id": "p03096",
        "submission1_id": "s505010763",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nINF = 10 ** 9\nMOD = 10 **9 + 7\n\nN = int(input())\n\nC = [int(input()) for _ in range(N)]\nlst = [INF] * (2 * 10 ** 5 + 10) \nans = [1] * N\n \nlst[C[-1]] = N - 1\n\nfor i in range(N - 2, -1, -1):\n    c = C[i]\n    if lst[c] == INF or lst[c] == i + 1:\n        ans[i] = ans[i + 1]\n    else:\n        ans[i] = ans[i + 1] + ans[lst[c]]\n    lst[c] = i\n\nprint (ans[0] % MOD)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nINF = 10 ** 9\nMOD = 10 **9 + 7\n\nN = int(input())\n\nC = [int(input()) for _ in range(N)]\nlst = [INF] * (2 * 10 ** 5 + 10) \nans = [1] * N\n \nlst[C[-1]] = N - 1\n\nfor i in range(N - 2, -1, -1):\n    c = C[i]\n    if lst[c] == INF or lst[c] == i + 1:\n        ans[i] = ans[i + 1]\n    else:\n        ans[i] = ans[i + 1] + ans[lst[c]]\n    lst[c] = i\n\nprint (ans[0] % MOD)```\n "
    },
    {
        "user_id": "u288087195",
        "problem_id": "p03943",
        "submission1_id": "s588860606",
        "code_content": "\na = [int(i) for i in input().split()] \na.sort()\nc = a[0] + a[1]\nif (a[2] == c):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\na = [int(i) for i in input().split()] \na.sort()\nc = a[0] + a[1]\nif (a[2] == c):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u969190727",
        "problem_id": "p02950",
        "submission1_id": "s243982871",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\np=int(input())\nA=[int(i) for i in input().split()]\nB=[0]*p\n\nP=[[0]*p for _ in range(p)]\nfor i in range(1,p): \n  for j in range(p):\n    if j==0:\n      P[i][j]=1\n    else:\n      P[i][j]=(P[i][j-1]*i)%p\nPP=[0]*(p+1)\nfor i in range(1,p+1):\n  for j in range(1,p+1):\n    PP[j]=(PP[j]+P[i][j])%p\nfor i in range(p):\n  a=A[i]\n  B[0]-=a\n  for j in range(1,p):\n    B[j]-=a*PP[j]\n    if j==p-1:\n      B[j]+=a\nB=B[::-1]\nfor i in range(p):\n  B[i]%=p\nprint(*B)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\np=int(input())\nA=[int(i) for i in input().split()]\nB=[0]*p\n\nP=[[0]*p for _ in range(p)]\nfor i in range(1,p): \n  for j in range(p):\n    if j==0:\n      P[i][j]=1\n    else:\n      P[i][j]=(P[i][j-1]*i)%p\nPP=[0]*(p+1)\nfor i in range(1,p+1):\n  for j in range(1,p+1):\n    PP[j]=(PP[j]+P[i][j])%p\nfor i in range(p):\n  a=A[i]\n  B[0]-=a\n  for j in range(1,p):\n    B[j]-=a*PP[j]\n    if j==p-1:\n      B[j]+=a\nB=B[::-1]\nfor i in range(p):\n  B[i]%=p\nprint(*B)```\n "
    },
    {
        "user_id": "u686036872",
        "problem_id": "p03103",
        "submission1_id": "s129916145",
        "code_content": "\nN, M = map(int, input().split())\n\nA = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    A.append([a, b])\n\nA.sort(key=lambda x:x[0])\n\nmoney = 0\ncnt = 0\nfor i in range(N):\n    if cnt < M:\n        money += A[i][0] * min(A[i][1], M-cnt)\n        cnt += min(A[i][1], M-cnt)\nprint(money)",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\n\nA = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    A.append([a, b])\n\nA.sort(key=lambda x:x[0])\n\nmoney = 0\ncnt = 0\nfor i in range(N):\n    if cnt < M:\n        money += A[i][0] * min(A[i][1], M-cnt)\n        cnt += min(A[i][1], M-cnt)\nprint(money)```\n "
    },
    {
        "user_id": "u567225946",
        "problem_id": "p02580",
        "submission1_id": "s441413219",
        "code_content": "\nfrom collections import defaultdict\nn,m,k=map(int,input().split())\npoints=set()\nrow=defaultdict(int)\ncol=defaultdict(int)\nfor i in range(k):\n    a,b=map(int,input().split())\n    points.add((a,b))\n    row[a]+=1\n    col[b]+=1\nm1=max(row.values())\nm2=max(col.values())\nl1=[]\nl2=[]\nfor i in row:\n    if row[i]==m1:\n        l1.append(i)\nfor i in col:\n    if col[i]==m2:\n        l2.append(i)\nans=m2+m1-1\nfor i in l1:\n    for j in l2:\n        if (i,j) not in points:\n            ans+=1\n            print(ans)\n            quit()\nprint(ans)\n\n\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\nn,m,k=map(int,input().split())\npoints=set()\nrow=defaultdict(int)\ncol=defaultdict(int)\nfor i in range(k):\n    a,b=map(int,input().split())\n    points.add((a,b))\n    row[a]+=1\n    col[b]+=1\nm1=max(row.values())\nm2=max(col.values())\nl1=[]\nl2=[]\nfor i in row:\n    if row[i]==m1:\n        l1.append(i)\nfor i in col:\n    if col[i]==m2:\n        l2.append(i)\nans=m2+m1-1\nfor i in l1:\n    for j in l2:\n        if (i,j) not in points:\n            ans+=1\n            print(ans)\n            quit()\nprint(ans)\n\n\n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p02887",
        "submission1_id": "s585172341",
        "code_content": "\nN=int(input())\nS=input()\nct=1\nfor i in range(N-1):\n  if S[i]!=S[i+1]:\n    ct+=1\nprint(ct)",
        "origin_generated_text": "\n```\nN=int(input())\nS=input()\nct=1\nfor i in range(N-1):\n  if S[i]!=S[i+1]:\n    ct+=1\nprint(ct)```\n "
    },
    {
        "user_id": "u430937688",
        "problem_id": "p03326",
        "submission1_id": "s776742151",
        "code_content": "\nn, m = map(int, input().split())\nlis = [list(map(int, input().split())) for i in range(n)]\n\ndef arr_multiply( lis2):\n    def inner(lis1):\n        return sum([l1*l2 for l1, l2 in zip(lis1, lis2)])\n    return inner\n\nif m == 0:\n    print(0)\nelse:\n    max_score = 0\n    for a in range(-100, 101):\n        for b in range(-100, 101):\n            for c in range(-100, 101):\n                func = arr_multiply([a, b, c])\n                score = sum(sorted(list(map(func, lis)))[-m:])\n                if score > max_score:\n                    max_score = score\n    print(max_score)",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\nlis = [list(map(int, input().split())) for i in range(n)]\n\ndef arr_multiply( lis2):\n    def inner(lis1):\n        return sum([l1*l2 for l1, l2 in zip(lis1, lis2)])\n    return inner\n\nif m == 0:\n    print(0)\nelse:\n    max_score = 0\n    for a in range(-100, 101):\n        for b in range(-100, 101):\n            for c in range(-100, 101):\n                func = arr_multiply([a, b, c])\n                score = sum(sorted(list(map(func, lis)))[-m:])\n                if score > max_score:\n                    max_score = score\n    print(max_score)```\n "
    },
    {
        "user_id": "u759651152",
        "problem_id": "p03274",
        "submission1_id": "s955852285",
        "code_content": "\n\n\ndef main():\n    n, k = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    ans = float('inf')\n\n    for i in range(n - k + 1):\n        if x_list[i] >= 0 and x_list[i+k-1] >= 0:\n            ans = min(ans, x_list[i+k-1])\n        elif x_list[i] < 0 and x_list[i+k-1] < 0:\n            ans = min(ans, -x_list[i])\n        else:\n            ans = min(ans, -x_list[i] + x_list[i+k-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\n\n\ndef main():\n    n, k = map(int, input().split())\n    x_list = list(map(int, input().split()))\n    ans = float('inf')\n\n    for i in range(n - k + 1):\n        if x_list[i] >= 0 and x_list[i+k-1] >= 0:\n            ans = min(ans, x_list[i+k-1])\n        elif x_list[i] < 0 and x_list[i+k-1] < 0:\n            ans = min(ans, -x_list[i])\n        else:\n            ans = min(ans, -x_list[i] + x_list[i+k-1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03200",
        "submission1_id": "s326323555",
        "code_content": "\ns=input()\nm=[s[i]==\"B\" for i in range(len(s))]\nm1=[None for i in range(len(s))]\nm1[0]=m[0]\nfor i in range(1,len(s)):\n  m1[i]=m1[i-1]+m[i]\nm2=[None for i in range(len(s))]\nm2[len(s)-1]=m[len(s)-1]\nfor i in range(len(s)-1,0,-1):\n  m2[i-1]=m2[i]+m[i]\n  \nans1=0\nans2=0\nfor i in range(1,len(s)):\n  if s[i]==\"W\":\n    ans1+=m1[i]\n    ans2+=m2[i]\n    \nprint(max(ans1,ans2)+m1[0]+m2[len(s)-1])",
        "origin_generated_text": "\n```\ns=input()\nm=[s[i]==\"B\" for i in range(len(s))]\nm1=[None for i in range(len(s))]\nm1[0]=m[0]\nfor i in range(1,len(s)):\n  m1[i]=m1[i-1]+m[i]\nm2=[None for i in range(len(s))]\nm2[len(s)-1]=m[len(s)-1]\nfor i in range(len(s)-1,0,-1):\n  m2[i-1]=m2[i]+m[i]\n  \nans1=0\nans2=0\nfor i in range(1,len(s)):\n  if s[i]==\"W\":\n    ans1+=m1[i]\n    ans2+=m2[i]\n    \nprint(max(ans1,ans2)+m1[0]+m2[len(s)-1])```\n "
    },
    {
        "user_id": "u814986259",
        "problem_id": "p03959",
        "submission1_id": "s457703246",
        "code_content": "\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nM = [[-1, 10**9] for i in range(N)]\n\nfor i in range(N):\n    if i == 0:\n        M[i][0] = T[i]\n    else:\n        if T[i] != T[i-1]:\n            M[i][0] = T[i]\n        else:\n            M[i][1] = T[i]\n\nfor i in range(N-1, -1, -1):\n    if i == N-1:\n        if M[i][0] != -1 and M[i][0] != A[i]:\n            print(0)\n            exit(0)\n        else:\n            M[i][0] = A[i]\n\n    else:\n        if A[i] != A[i+1]:\n            if M[i][0] != -1 and M[i][0] != A[i]:\n                print(0)\n                exit(0)\n            else:\n                M[i][0] = A[i]\n        else:\n            M[i][1] = min(M[i][1], A[i])\n\nans = 1\nmod = (10 ** 9) + 7\nfor x, y in M:\n    if x == -1:\n        ans *= y\n        ans %= mod\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nM = [[-1, 10**9] for i in range(N)]\n\nfor i in range(N):\n    if i == 0:\n        M[i][0] = T[i]\n    else:\n        if T[i] != T[i-1]:\n            M[i][0] = T[i]\n        else:\n            M[i][1] = T[i]\n\nfor i in range(N-1, -1, -1):\n    if i == N-1:\n        if M[i][0] != -1 and M[i][0] != A[i]:\n            print(0)\n            exit(0)\n        else:\n            M[i][0] = A[i]\n\n    else:\n        if A[i] != A[i+1]:\n            if M[i][0] != -1 and M[i][0] != A[i]:\n                print(0)\n                exit(0)\n            else:\n                M[i][0] = A[i]\n        else:\n            M[i][1] = min(M[i][1], A[i])\n\nans = 1\nmod = (10 ** 9) + 7\nfor x, y in M:\n    if x == -1:\n        ans *= y\n        ans %= mod\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u007270338",
        "problem_id": "p02281",
        "submission1_id": "s939698139",
        "code_content": "\n\nN = int(input())\nclass Tree:\n    def __init__(self, ID, p=None):\n        self.ID = ID\n        self.p = p\n        self.l = None\n        self.r = None\n\ndef preParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global preList\n        preList.append(tree.ID)\n        preParse(tree.l)\n        preParse(tree.r)\n        \ndef inParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global inList\n        inParse(tree.l)\n        inList.append(tree.ID)\n        inParse(tree.r)\n\ndef posParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global posList\n        posParse(tree.l)\n        posParse(tree.r)\n        posList.append(tree.ID)\n        \n    \ntrees = [list(map(int,input().split())) for i in range(N)]\nroot = Tree(trees[0][0])\n\npreList = []\ninList = []\nposList = []\npreParse(root)\ninParse(root)\nposParse(root)\n\ndef convert(List, order):\n    a =  \" \" + \" \".join([str(num) for num in List])\n    print(\"{}\".format(order))\n    print(a)\nconvert(preList, \"Preorder\")\nconvert(inList, \"Inorder\")\nconvert(posList, \"Postorder\")\n",
        "origin_generated_text": "\n```\n\nN = int(input())\nclass Tree:\n    def __init__(self, ID, p=None):\n        self.ID = ID\n        self.p = p\n        self.l = None\n        self.r = None\n\ndef preParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global preList\n        preList.append(tree.ID)\n        preParse(tree.l)\n        preParse(tree.r)\n        \ndef inParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global inList\n        inParse(tree.l)\n        inList.append(tree.ID)\n        inParse(tree.r)\n\ndef posParse(tree):\n    if tree.ID == -1:\n        return\n    else:\n        global posList\n        posParse(tree.l)\n        posParse(tree.r)\n        posList.append(tree.ID)\n        \n    \ntrees = [list(map(int,input().split())) for i in range(N)]\nroot = Tree(trees[0][0])\n\npreList = []\ninList = []\nposList = []\npreParse(root)\ninParse(root)\nposParse(root)\n\ndef convert(List, order):\n    a =  \" \" + \" \".join([str(num) for num in List])\n    print(\"{}\".format(order))\n    print(a)\nconvert(preList, \"Preorder\")\nconvert(inList, \"Inorder\")\nconvert(posList, \"Postorder\")\n```\n "
    },
    {
        "user_id": "u112317104",
        "problem_id": "p02922",
        "submission1_id": "s133553051",
        "code_content": "\ndef solve():\n    N, M = map(int, input().split())\n\n    if M == 1:\n        return 1\n\n    c = 1\n    while M > N:\n        c += 1\n        M -= N\n\n    return c\n\nprint(solve())",
        "origin_generated_text": "\n```\ndef solve():\n    N, M = map(int, input().split())\n\n    if M == 1:\n        return 1\n\n    c = 1\n    while M > N:\n        c += 1\n        M -= N\n\n    return c\n\nprint(solve())```\n "
    },
    {
        "user_id": "u050708958",
        "problem_id": "p02917",
        "submission1_id": "s729619343",
        "code_content": "\nn = int(input())\na = [0] * n\nb = [int(i) for i in input().split()]\na[0] = b[0]\nfor i in range(1, n):\n    a[i] = min(b[i], b[i-1])\na[n-1] = b[n-2]\nprint(sum(a))\n",
        "origin_generated_text": "\n```\nn = int(input())\na = [0] * n\nb = [int(i) for i in input().split()]\na[0] = b[0]\nfor i in range(1, n):\n    a[i] = min(b[i], b[i-1])\na[n-1] = b[n-2]\nprint(sum(a))\n```\n "
    },
    {
        "user_id": "u450883456",
        "problem_id": "p03563",
        "submission1_id": "s325532931",
        "code_content": "\na = int(input())\nb = int(input())\nprint(2*a-2*b)",
        "origin_generated_text": "\n```\na = int(input())\nb = int(input())\nprint(2*a-2*b)```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s861255622",
        "code_content": "\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = sr\nright = W\nup = sc\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up += 1\n    elif S[i] == \"D\":\n        down -= 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\n\n\nif left <= right and up <= down and left <= sc <= right and up <= sr <= down:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n",
        "origin_generated_text": "\n```\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = sr\nright = W\nup = sc\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up += 1\n    elif S[i] == \"D\":\n        down -= 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\n\n\nif left <= right and up <= down and left <= sc <= right and up <= sr <= down:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u102223485",
        "problem_id": "p03760",
        "submission1_id": "s973338297",
        "code_content": "\n\nO = input()\nE = input()\n\nfor o, e in zip(O, E):\n    print(o + e, end=\"\")\nprint()",
        "origin_generated_text": "\n```\n\nO = input()\nE = input()\n\nfor o, e in zip(O, E):\n    print(o + e, end=\"\")\nprint()```\n "
    },
    {
        "user_id": "u905715926",
        "problem_id": "p03633",
        "submission1_id": "s876093087",
        "code_content": "\ndef gcd(a,b):\n  r = a%b\n  while(r!=0):\n    a,b = b,r\n    r = a%b\n  return b\ndef lcm(a,b):\n  return (a*b)\nn = int(input())\nans = int(input())\nfor i in range(n-1):\n  num = int(input())\n  ans = lcm(max(ans,num),min(ans,num))\nprint(int(ans))\n",
        "origin_generated_text": "\n```\ndef gcd(a,b):\n  r = a%b\n  while(r!=0):\n    a,b = b,r\n    r = a%b\n  return b\ndef lcm(a,b):\n  return (a*b)\nn = int(input())\nans = int(input())\nfor i in range(n-1):\n  num = int(input())\n  ans = lcm(max(ans,num),min(ans,num))\nprint(int(ans))\n```\n "
    },
    {
        "user_id": "u188745744",
        "problem_id": "p02922",
        "submission1_id": "s772451444",
        "code_content": "\nimport math\nA,B = map(int,input().split(\" \"))\nprint(math.ceil(B / A))",
        "origin_generated_text": "\n```\nimport math\nA,B = map(int,input().split(\" \"))\nprint(math.ceil(B / A))```\n "
    },
    {
        "user_id": "u703886980",
        "problem_id": "p02699",
        "submission1_id": "s424643693",
        "code_content": "\na,b = map(int, input().split())\n\nif a<=b:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")",
        "origin_generated_text": "\n```\na,b = map(int, input().split())\n\nif a<=b:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")```\n "
    },
    {
        "user_id": "u316386814",
        "problem_id": "p04017",
        "submission1_id": "s129561496",
        "code_content": "\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    for _ in range(int.bit_length(N) + 1):\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while True:\n            u = bisect(Unreachs[a], b)\n            if u == len(Unreachs[a]):\n                break\n            ans += 2 ** u\n            a = Unreachs[a][u]\n        ans += 1\n        print(ans)\n    return 0\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(10**7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nfrom functools import partial, reduce\nfrom operator import mul\nprod = partial(reduce, mul)\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef SI(): return input()\n\nfrom bisect import bisect\n\ndef main():\n    N = II()\n    X = LI()  \n    X.append(INF)  \n    L = II()  \n    Q = II()\n    AB = []  \n    for _ in range(Q):\n        AB.append(LI_())\n    Unreachs = [[] for _ in range(N)]\n    \n    for i, x in enumerate(X[:-1]):\n        u = bisect(X, x + L)\n        Unreachs[i].append(u)\n    \n    for _ in range(int.bit_length(N) + 1):\n        for i in range(N):\n            u = Unreachs[Unreachs[i][-1] - 1][-1]\n            Unreachs[i].append(u)\n    \n    for a, b in AB:\n        if a > b:\n            a, b = b, a\n        ans = 0\n        while True:\n            u = bisect(Unreachs[a], b)\n            if u == len(Unreachs[a]):\n                break\n            ans += 2 ** u\n            a = Unreachs[a][u]\n        ans += 1\n        print(ans)\n    return 0\n\nmain()```\n "
    },
    {
        "user_id": "u922449550",
        "problem_id": "p03343",
        "submission1_id": "s149094671",
        "code_content": "\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef find_maximum(y):\n  C = [[]]\n  for a in A:\n    if a < y:\n      C.append([])\n    else:\n      C[-1].append(a)\n  cand_x = []\n  for Ci in C:\n    m = len(Ci)\n    if m >= K:\n      Ci.sort()\n      cand_x += Ci[:m-K+1]\n  cand_x.sort(reverse=True)\n  if len(cand_x) >= Q:\n    return cand_x[Q-1]\n  else:\n    return float('inf')\n\nans = 0\nfor a in A:\n  x = find_maximum(a)\n  ans = max(ans, x-a)\n\nprint(ans)",
        "origin_generated_text": "\n```\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef find_maximum(y):\n  C = [[]]\n  for a in A:\n    if a < y:\n      C.append([])\n    else:\n      C[-1].append(a)\n  cand_x = []\n  for Ci in C:\n    m = len(Ci)\n    if m >= K:\n      Ci.sort()\n      cand_x += Ci[:m-K+1]\n  cand_x.sort(reverse=True)\n  if len(cand_x) >= Q:\n    return cand_x[Q-1]\n  else:\n    return float('inf')\n\nans = 0\nfor a in A:\n  x = find_maximum(a)\n  ans = max(ans, x-a)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u119983020",
        "problem_id": "p03080",
        "submission1_id": "s619346986",
        "code_content": "\nn = input()\ns = input()\nif s.count(\"R\")>s.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nn = input()\ns = input()\nif s.count(\"R\")>s.count(\"B\"):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u347502437",
        "problem_id": "p02553",
        "submission1_id": "s567041215",
        "code_content": "\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*d, a*d, b*c))\n",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nprint(max(a*c, b*d, a*d, b*c))\n```\n "
    },
    {
        "user_id": "u859897687",
        "problem_id": "p03970",
        "submission1_id": "s488628806",
        "code_content": "\na=input()\nb='CODEFESTIVAL2016'\nans=0\nfor i in range(16):\n  ans+=(a[i]!=b[i])\nprint(ans)",
        "origin_generated_text": "\n```\na=input()\nb='CODEFESTIVAL2016'\nans=0\nfor i in range(16):\n  ans+=(a[i]!=b[i])\nprint(ans)```\n "
    },
    {
        "user_id": "u647999897",
        "problem_id": "p02854",
        "submission1_id": "s009497090",
        "code_content": "\ndef solve():\n    N = int(input())\n    A = list(map(int,input().split()))\n\n    sm = sum(A)\n    agg = 0\n    idx = 0\n    mid = sm / 2\n    expand_cnt = 0\n    shrink_cnt = 0\n    while agg < mid and idx < N-1:\n        if A[idx] > 1:\n            expand_cnt += A[idx] - 1\n        elif A[idx] > 1:\n            shrink_cnt += A[idx] - 2\n        \n        agg += A[idx]\n        idx += 1\n    \n    expand = expand_cnt / 0.5\n    shrink = shrink_cnt / 0.5\n\n    ans = min(expand, shrink)\n\n    print(int(ans))\n\nif __name__ == '__main__':\n    solve()",
        "origin_generated_text": "\n```\ndef solve():\n    N = int(input())\n    A = list(map(int,input().split()))\n\n    sm = sum(A)\n    agg = 0\n    idx = 0\n    mid = sm / 2\n    expand_cnt = 0\n    shrink_cnt = 0\n    while agg < mid and idx < N-1:\n        if A[idx] > 1:\n            expand_cnt += A[idx] - 1\n        elif A[idx] > 1:\n            shrink_cnt += A[idx] - 2\n        \n        agg += A[idx]\n        idx += 1\n    \n    expand = expand_cnt / 0.5\n    shrink = shrink_cnt / 0.5\n\n    ans = min(expand, shrink)\n\n    print(int(ans))\n\nif __name__ == '__main__':\n    solve()```\n "
    },
    {
        "user_id": "u292810930",
        "problem_id": "p03054",
        "submission1_id": "s607883024",
        "code_content": "\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\nl = 0\nr = W+1\nu = 0\nd = H+1\nfor s,t in zip(S[::-1],T[::-1]):\n    if s == 'L' and t == 'R':\n        l += 1\n    elif s == 'R' and t == 'L':\n        r -= 1\n    elif s == 'U' and t == 'D':\n        u += 1\n    elif s == 'D' and t == 'U':\n        d -= 1\n    else:\n        break\nif l < sc < r and u < sr < d:\n    print('YES')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\nl = 0\nr = W+1\nu = 0\nd = H+1\nfor s,t in zip(S[::-1],T[::-1]):\n    if s == 'L' and t == 'R':\n        l += 1\n    elif s == 'R' and t == 'L':\n        r -= 1\n    elif s == 'U' and t == 'D':\n        u += 1\n    elif s == 'D' and t == 'U':\n        d -= 1\n    else:\n        break\nif l < sc < r and u < sr < d:\n    print('YES')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u940061594",
        "problem_id": "p02727",
        "submission1_id": "s269300334",
        "code_content": "\n```\n\nX, Y, A, B, C = map(int,input().split())\np0 = list(map(int,input().split()))\nq0 = list(map(int,input().split()))\nr0 = list(map(int,input().split()))\np = sorted(p0, reverse = True); p.append(0)\nq = sorted(q0, reverse = True); q.append(0)\nr = sorted(r0, reverse = True); r.append(0)\n\nhappy = 0\ni = 0\nj = 0\nk = 0\nred = 0\ngreen = 0\nwhite = 0\n\nfor _ in range(X+Y):\n    if r[k] >= p[i] and r[k] >= q[j] and red != X and green != Y:\n        happy += r[k]\n        white += 1\n        k += 1\n    elif p[i] > q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] >= r[k] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] <= q[j] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= r[k] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif p[i] >= q[j] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif q[j] >= p[i] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif p[i] <= q[j] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n",
        "origin_generated_text": "\n```\n\nX, Y, A, B, C = map(int,input().split())\np0 = list(map(int,input().split()))\nq0 = list(map(int,input().split()))\nr0 = list(map(int,input().split()))\np = sorted(p0, reverse = True); p.append(0)\nq = sorted(q0, reverse = True); q.append(0)\nr = sorted(r0, reverse = True); r.append(0)\n\nhappy = 0\ni = 0\nj = 0\nk = 0\nred = 0\ngreen = 0\nwhite = 0\n\nfor _ in range(X+Y):\n    if r[k] >= p[i] and r[k] >= q[j] and red != X and green != Y:\n        happy += r[k]\n        white += 1\n        k += 1\n    elif p[i] > q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] >= r[k] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] <= q[j] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= r[k] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif p[i] >= q[j] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif q[j] >= p[i] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif p[i] <= q[j] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n        happy += p[i]\n        red += 1\n        i += 1\n    elif q[j] <= p[i] and green != Y:\n        happy += p[i]\n        green += 1\n        i += 1\n    elif p[i] <= q[j] and red != X:\n        happy += q[j]\n        red += 1\n        j += 1\n    elif q[j] >= p[i] and green != Y:\n        happy += q[j]\n        green += 1\n        j += 1\n    elif p[i] >= q[j] and red != X:\n"
    },
    {
        "user_id": "u690536347",
        "problem_id": "p03374",
        "submission1_id": "s022630174",
        "code_content": "\nn,c=map(int,input().split())\nl=[list(map(int,input().split())) for i in range(n)]\n\nrev=[None]*(n+1)\nnorm=[None]*(n+1)\nrev[0]=(0,0)\nnorm[0]=(0,0)\nans=0\n\n\nfor i in range(1,n+1):\n    x,v=l[i-1]\n    norm[i]=(x,v+norm[i-1][1])\n\n\nfor i in range(1,n+1)[::-1]:\n    x,v=l[i-1]\n    if i==n:\n        rev[i]=(c-x,v)\n    else:\n        rev[i]=(c-x,v+rev[i+1][1])\n\nfor i in range(n+1):\n    for j in range(n-i+1):\n        cost=min(norm[i][0]+2*rev[-j][0],2*norm[i][0]+rev[-j][0])\n        ans=max(ans,rev[-j][1]+norm[i][1]-cost)\n\nprint(ans)",
        "origin_generated_text": "\n```\nn,c=map(int,input().split())\nl=[list(map(int,input().split())) for i in range(n)]\n\nrev=[None]*(n+1)\nnorm=[None]*(n+1)\nrev[0]=(0,0)\nnorm[0]=(0,0)\nans=0\n\n\nfor i in range(1,n+1):\n    x,v=l[i-1]\n    norm[i]=(x,v+norm[i-1][1])\n\n\nfor i in range(1,n+1)[::-1]:\n    x,v=l[i-1]\n    if i==n:\n        rev[i]=(c-x,v)\n    else:\n        rev[i]=(c-x,v+rev[i+1][1])\n\nfor i in range(n+1):\n    for j in range(n-i+1):\n        cost=min(norm[i][0]+2*rev[-j][0],2*norm[i][0]+rev[-j][0])\n        ans=max(ans,rev[-j][1]+norm[i][1]-cost)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u174603263",
        "problem_id": "p03079",
        "submission1_id": "s408282187",
        "code_content": "\na, b, c = input().split()\n\nif(a == b == c):\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\na, b, c = input().split()\n\nif(a == b == c):\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u445983356",
        "problem_id": "p02854",
        "submission1_id": "s631988534",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\n\nleft_length = sum(A[:int(N/2)])\nright_length = sum(A[int(N/2):])\nif left_length > right_length :\n  price = left_length - right_length\n  for i in range(int(N/2)-1,0,-1) :\n    var = sum(A[i:]) - sum(A[:i+1])\n    if price > var :\n      price = var\n    else :\n      break\nelse :\n  price = right_length - left_length\n  for i in range(int(N/2)+1,N) :\n    var = sum(A[:i]) - sum(A[i:])\n    if price > var :\n      price = var\n    else :\n      break\n\nprint(price)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\n\nleft_length = sum(A[:int(N/2)])\nright_length = sum(A[int(N/2):])\nif left_length > right_length :\n  price = left_length - right_length\n  for i in range(int(N/2)-1,0,-1) :\n    var = sum(A[i:]) - sum(A[:i+1])\n    if price > var :\n      price = var\n    else :\n      break\nelse :\n  price = right_length - left_length\n  for i in range(int(N/2)+1,N) :\n    var = sum(A[:i]) - sum(A[i:])\n    if price > var :\n      price = var\n    else :\n      break\n\nprint(price)```\n "
    },
    {
        "user_id": "u540761833",
        "problem_id": "p02959",
        "submission1_id": "s507936785",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\ndp = [0 for i in range(N+1)]\nif A[0] <= B[0]:\n    dp[0] = A[0]\n    B[0] -= A[0]\nelse:\n    dp[0] = B[0]\n    B[0] = 0\nfor i in range(1,N-1):\n    if A[i] - B[i-1] >= B[i]:\n        dp[i] = B[i-1] + B[i]\n        B[i] = 0\n    else:\n        dp[i] = A[i]\n        B[i] -= A[i] - B[i-1]\nif A[-1] <= B[-1]:\n    dp[-1] = A[-1]\n    B[-1] -= A[-1]\nelse:\n    dp[-1] = B[-1]\n    B[-1] = 0\nprint(sum(dp))",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\ndp = [0 for i in range(N+1)]\nif A[0] <= B[0]:\n    dp[0] = A[0]\n    B[0] -= A[0]\nelse:\n    dp[0] = B[0]\n    B[0] = 0\nfor i in range(1,N-1):\n    if A[i] - B[i-1] >= B[i]:\n        dp[i] = B[i-1] + B[i]\n        B[i] = 0\n    else:\n        dp[i] = A[i]\n        B[i] -= A[i] - B[i-1]\nif A[-1] <= B[-1]:\n    dp[-1] = A[-1]\n    B[-1] -= A[-1]\nelse:\n    dp[-1] = B[-1]\n    B[-1] = 0\nprint(sum(dp))```\n "
    },
    {
        "user_id": "u533885955",
        "problem_id": "p03734",
        "submission1_id": "s834786551",
        "code_content": "\n\nN,W = map(int,input().split())\nWV = [list(map(int,input().split())) for i in range(N)]\n\n\nw1 = WV[0][0]\nWV.sort()\n\nvlist = [[] for i in range(4)]\nfor i in range(N):\n    w,v = WV[i][0],WV[i][1]\n    d = w-w1\n    vlist[d].append(v)\n    \nvrui = [[0] for i in range(4)]\nfor i in range(4):\n    vlist[i].sort(reverse=True)\n    for v in vlist[i]:\n        vrui[i].append(vrui[i][-1]+v)\n        \n\n\nMAX = 0\nfor i in range(min(N+1,len(vlist[0])+1)):\n    for j in range(min(N-i+1,len(vlist[1])+1)):\n        for k in range(min(N-i-j+1,len(vlist[2])+1)):\n            l = min(N-(i+j+k),len(vlist[3])+1)\n            if (w1*i+(w1+1)*j+(w1+2)*k+(w1+3)*l) <= W:\n                MAX = max(MAX,(vrui[0][i]+vrui[1][j]+vrui[2][k]+vrui[3][l]))\n\nprint(MAX)\n            ",
        "origin_generated_text": "\n```\n\nN,W = map(int,input().split())\nWV = [list(map(int,input().split())) for i in range(N)]\n\n\nw1 = WV[0][0]\nWV.sort()\n\nvlist = [[] for i in range(4)]\nfor i in range(N):\n    w,v = WV[i][0],WV[i][1]\n    d = w-w1\n    vlist[d].append(v)\n    \nvrui = [[0] for i in range(4)]\nfor i in range(4):\n    vlist[i].sort(reverse=True)\n    for v in vlist[i]:\n        vrui[i].append(vrui[i][-1]+v)\n        \n\n\nMAX = 0\nfor i in range(min(N+1,len(vlist[0])+1)):\n    for j in range(min(N-i+1,len(vlist[1])+1)):\n        for k in range(min(N-i-j+1,len(vlist[2])+1)):\n            l = min(N-(i+j+k),len(vlist[3])+1)\n            if (w1*i+(w1+1)*j+(w1+2)*k+(w1+3)*l) <= W:\n                MAX = max(MAX,(vrui[0][i]+vrui[1][j]+vrui[2][k]+vrui[3][l]))\n\nprint(MAX)\n            ```\n "
    },
    {
        "user_id": "u492049124",
        "problem_id": "p03475",
        "submission1_id": "s377065541",
        "code_content": "\nN = int(input())\nlines = []\n\nfor i in range(N-1):\n    lines.append(input())\n\nC = []\nS = []\nF = []\n\nfor line in lines:\n\tc, s, f = line.split()\n\tC.append(int(c))\n\tS.append(int(s))\n\tF.append(int(f))\n\nA = []\n\nfor i in range(N-1):\n\ta = C[i] + S[i]\n\tfor j in range(i + 1, N - 1):\n\t\t\n\t\tn = S[j] - a if a <= S[j] else S[j] - a % F[j]\n\t\ta = a + C[j] + n\n\tA.append(a)\n\nfor a in A:\n\tprint(a)\nprint(0)\n",
        "origin_generated_text": "\n```\nN = int(input())\nlines = []\n\nfor i in range(N-1):\n    lines.append(input())\n\nC = []\nS = []\nF = []\n\nfor line in lines:\n\tc, s, f = line.split()\n\tC.append(int(c))\n\tS.append(int(s))\n\tF.append(int(f))\n\nA = []\n\nfor i in range(N-1):\n\ta = C[i] + S[i]\n\tfor j in range(i + 1, N - 1):\n\t\t\n\t\tn = S[j] - a if a <= S[j] else S[j] - a % F[j]\n\t\ta = a + C[j] + n\n\tA.append(a)\n\nfor a in A:\n\tprint(a)\nprint(0)\n```\n "
    },
    {
        "user_id": "u663710122",
        "problem_id": "p02886",
        "submission1_id": "s679041750",
        "code_content": "\nN = int(input())\nD = list(map(int, input().split()))\n\nret = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if i == j:\n            continue\n        ret += D[i] * D[j]\nprint(ret)",
        "origin_generated_text": "\n```\nN = int(input())\nD = list(map(int, input().split()))\n\nret = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if i == j:\n            continue\n        ret += D[i] * D[j]\nprint(ret)```\n "
    },
    {
        "user_id": "u536325690",
        "problem_id": "p03103",
        "submission1_id": "s378176943",
        "code_content": "\nN, M = map(int, input().split())\nAB = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    AB.append([a,b])\n\nsortedAB = sorted(AB, key=lambda x:x[0])\n\nans = 0\nfor i in range(N):\n    a = sortedAB[i][0]\n    b = sortedAB[i][1]\n    if M == 0:\n        print(ans)\n        exit()\n    if b <= M:\n        ans += a*b\n        M -= b\n    else:\n        ans += a*M\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\nAB = []\nfor i in range(N):\n    a, b = map(int, input().split())\n    AB.append([a,b])\n\nsortedAB = sorted(AB, key=lambda x:x[0])\n\nans = 0\nfor i in range(N):\n    a = sortedAB[i][0]\n    b = sortedAB[i][1]\n    if M == 0:\n        print(ans)\n        exit()\n    if b <= M:\n        ans += a*b\n        M -= b\n    else:\n        ans += a*M\n```\n "
    },
    {
        "user_id": "u975719989",
        "problem_id": "p03036",
        "submission1_id": "s611076664",
        "code_content": "\nr, D, x = map(int,input().split())\nfor i in range(0,10):\n    x = r*x-D\n    print(x)",
        "origin_generated_text": "\n```\nr, D, x = map(int,input().split())\nfor i in range(0,10):\n    x = r*x-D\n    print(x)```\n "
    },
    {
        "user_id": "u941884460",
        "problem_id": "p03475",
        "submission1_id": "s470874498",
        "code_content": "\nN = int(input())-1\ntimeLine = [[0 for x in range(3)] for y in range(N)]\nfor i in range(N):\n    tmp = input().split()\n    timeLine[i][0],timeLine[i][1],timeLine[i][2] = int(tmp[0]),int(tmp[1]),int(tmp[2])\nfor j in range(N):\n    total = timeLine[j][0] + timeLine[j][1]\n    now = j+1\n    while now <= (N-1):\n        if timeLine[now][1] >= total:\n            total = timeLine[now][1] + timeLine[now][0]\n        else:\n            wait = (total - timeLine[now][1]) % timeLine[now][2]\n            total += (wait + timeLine[now][0])\n        now +=1\n    print(total)\nprint(0)",
        "origin_generated_text": "\n```\nN = int(input())-1\ntimeLine = [[0 for x in range(3)] for y in range(N)]\nfor i in range(N):\n    tmp = input().split()\n    timeLine[i][0],timeLine[i][1],timeLine[i][2] = int(tmp[0]),int(tmp[1]),int(tmp[2])\nfor j in range(N):\n    total = timeLine[j][0] + timeLine[j][1]\n    now = j+1\n    while now <= (N-1):\n        if timeLine[now][1] >= total:\n            total = timeLine[now][1] + timeLine[now][0]\n        else:\n            wait = (total - timeLine[now][1]) % timeLine[now][2]\n            total += (wait + timeLine[now][0])\n        now +=1\n    print(total)\nprint(0)```\n "
    },
    {
        "user_id": "u086138398",
        "problem_id": "p02665",
        "submission1_id": "s087686149",
        "code_content": "\nN = int(input())\n\nA = list(map(int,input().split()))\nB = [0] * (N+1)\nB[0] = 1 - A[0]\nfor i in range(0,N):\n    if 2*B[i] < A[i+1]:\n        print(\"-1\")\n        exit()\n    B[i+1] = min(2*B[i]-1,A[i+1])\nif B[-1] != 0:\n    print(\"-1\")\nelse:\n    print(sum(A)+sum(B))\n",
        "origin_generated_text": "\n```\nN = int(input())\n\nA = list(map(int,input().split()))\nB = [0] * (N+1)\nB[0] = 1 - A[0]\nfor i in range(0,N):\n    if 2*B[i] < A[i+1]:\n        print(\"-1\")\n        exit()\n    B[i+1] = min(2*B[i]-1,A[i+1])\nif B[-1] != 0:\n    print(\"-1\")\nelse:\n    print(sum(A)+sum(B))\n```\n "
    },
    {
        "user_id": "u506910932",
        "problem_id": "p02660",
        "submission1_id": "s419625362",
        "code_content": "\nimport math\n\n\n\ndef is_prime(n):\n    if n == 1:\n        return 0\n\n    for k in range(2, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            if k not in check:\n                check[k] = 1\n                return n \n            else:\n                return 0\n    if n in check:\n        return 0\n    else:\n        return 1\n\n\ncheck = {}\nn = int(input())\nif n == 1:\n    print(0)\nelse:\n    ans = 1\n    while (1):\n        n = is_prime(n)\n        if n == 0:\n            break\n        elif n != 1:\n            ans += 1\n    print(ans)\n",
        "origin_generated_text": "\n```\nimport math\n\n\n\ndef is_prime(n):\n    if n == 1:\n        return 0\n\n    for k in range(2, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            if k not in check:\n                check[k] = 1\n                return n \n            else:\n                return 0\n    if n in check:\n        return 0\n    else:\n        return 1\n\n\ncheck = {}\nn = int(input())\nif n == 1:\n    print(0)\nelse:\n    ans = 1\n    while (1):\n        n = is_prime(n)\n        if n == 0:\n            break\n        elif n != 1:\n            ans += 1\n    print(ans)\n```\n "
    },
    {
        "user_id": "u185966380",
        "problem_id": "p03036",
        "submission1_id": "s430597677",
        "code_content": "\nr, D, x = map(int, input().split())\ndef mo(r, D, x, i):\n  out = r*x - D\n  print(int(out))\n  if i<9:\n  \treturn mo(r, D, out, i+1)\n  else:\n    return 0\n  \nmo(r, D, x, 0)",
        "origin_generated_text": "\n```\nr, D, x = map(int, input().split())\ndef mo(r, D, x, i):\n  out = r*x - D\n  print(int(out))\n  if i<9:\n  \treturn mo(r, D, out, i+1)\n  else:\n    return 0\n  \nmo(r, D, x, 0)```\n "
    },
    {
        "user_id": "u088552457",
        "problem_id": "p02767",
        "submission1_id": "s524814910",
        "code_content": "\nn = int(input())\nx = list(map(int, input().split()))\n\nmax_x = max(x)\nmin_x = min(x)\n\nans = []\nfor i in range(1, 101):\n  a = 0\n  for xi in x:\n    a += (xi - i)*(xi - i)\n  ans.append(a)\n  \nprint(min(ans))",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int, input().split()))\n\nmax_x = max(x)\nmin_x = min(x)\n\nans = []\nfor i in range(1, 101):\n  a = 0\n  for xi in x:\n    a += (xi - i)*(xi - i)\n  ans.append(a)\n  \nprint(min(ans))```\n "
    },
    {
        "user_id": "u121921603",
        "problem_id": "p03318",
        "submission1_id": "s361261858",
        "code_content": "\nm=float(\"INF\")\nsunukes=[]\nfor i in range(15,-1,-1):\n    for j in range(100,10,-1):\n        \n        sunuke=j*(10**i)+1\n        s=str(sunuke)\n        sn=0\n        for k in range(len(s)):\n            sn+=int(s[k])\n        x=sunuke/sn\n        \n        if x<=m :\n            m=x\n            sunukes.append(sunuke)\nfor i in range(9,0,-1):\n    sunukes.append(i)\nk=int(input())\n\nprint(sunukes[-k]+1)",
        "origin_generated_text": "\n```\nm=float(\"INF\")\nsunukes=[]\nfor i in range(15,-1,-1):\n    for j in range(100,10,-1):\n        \n        sunuke=j*(10**i)+1\n        s=str(sunuke)\n        sn=0\n        for k in range(len(s)):\n            sn+=int(s[k])\n        x=sunuke/sn\n        \n        if x<=m :\n            m=x\n            sunukes.append(sunuke)\nfor i in range(9,0,-1):\n    sunukes.append(i)\nk=int(input())\n\nprint(sunukes[-k]+1)```\n "
    },
    {
        "user_id": "u995109095",
        "problem_id": "p02553",
        "submission1_id": "s614804602",
        "code_content": "\nimport sys\nimport collections as cc\nimport math as mt\nI=lambda:list(map(int,input().split()))\na,b,c,d=I()\nprint(max(a*c,a*d,b*c,b*d))",
        "origin_generated_text": "\n```\nimport sys\nimport collections as cc\nimport math as mt\nI=lambda:list(map(int,input().split()))\na,b,c,d=I()\nprint(max(a*c,a*d,b*c,b*d))```\n "
    },
    {
        "user_id": "u776189585",
        "problem_id": "p03568",
        "submission1_id": "s188085057",
        "code_content": "\ndef get_result(A):\n    res = 1\n    total = 0\n    for i, ai in enumerate(A):\n        res *= 2 if ai % 2 == 0 else 1\n        total += 1 if ai % 2 == 0 else 0\n    return total - res\nn = input()\nA = [int(ai) for ai in input().split()]\nprint(get_result(A))",
        "origin_generated_text": "\n```\ndef get_result(A):\n    res = 1\n    total = 0\n    for i, ai in enumerate(A):\n        res *= 2 if ai % 2 == 0 else 1\n        total += 1 if ai % 2 == 0 else 0\n    return total - res\nn = input()\nA = [int(ai) for ai in input().split()]\nprint(get_result(A))```\n "
    },
    {
        "user_id": "u588794534",
        "problem_id": "p02556",
        "submission1_id": "s005619017",
        "code_content": "\nn=int(input())\n\nx=[]\ny=[]\nfor _ in range(n):\n    xx,yy=map(int,input().split())\n    x.append(xx)\n    y.append(yy)\n\ndef maxAbsValExpr(arr1, arr2):\n    minX, maxX = min(arr1), max(arr1)\n    minY, maxY = min(arr2), max(arr2)\n    \n    ans = 0\n    \n    for point in [(minX, minY), (maxX, minY), (minX, maxY), (maxX, maxY)]:\n        minD = float('inf')\n        maxD = float('-inf')\n        for i in range(0, len(arr1)):\n            distance = abs(arr1[i]-point[0]) + abs(arr2[i]-point[1])\n            minD = min(minD, distance)\n            maxD = max(maxD, distance)\n            ans = max(ans, maxD - minD)\n    return ans\n\n\nprint(maxAbsValExpr(x, y))\n",
        "origin_generated_text": "\n```\nn=int(input())\n\nx=[]\ny=[]\nfor _ in range(n):\n    xx,yy=map(int,input().split())\n    x.append(xx)\n    y.append(yy)\n\ndef maxAbsValExpr(arr1, arr2):\n    minX, maxX = min(arr1), max(arr1)\n    minY, maxY = min(arr2), max(arr2)\n    \n    ans = 0\n    \n    for point in [(minX, minY), (maxX, minY), (minX, maxY), (maxX, maxY)]:\n        minD = float('inf')\n        maxD = float('-inf')\n        for i in range(0, len(arr1)):\n            distance = abs(arr1[i]-point[0]) + abs(arr2[i]-point[1])\n            minD = min(minD, distance)\n            maxD = max(maxD, distance)\n            ans = max(ans, maxD - minD)\n    return ans\n\n\nprint(maxAbsValExpr(x, y))\n```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p03959",
        "submission1_id": "s732888358",
        "code_content": "\nn = int(input())\narr = [[1] * n for _ in range(4)]\nt = list(map(int, input().split()))\na = list(map(int, input().split()))[::-1]\n\nMOD = 10**9 + 7\n\nmax_t = 0\nmax_a = 0\n\nfor i in range(n):\n    if max_t < t[i]:\n        arr[0][i] = t[i]\n        arr[1][i] = t[i]\n        max_t = t[i]\n    else:\n        arr[1][i] = t[i]\n    if max_a < a[i]:\n        arr[2][i] = a[i]\n        arr[3][i] = a[i]\n        max_a = a[i]\n    else:\n        arr[3][i] = a[i]\n\narr[2] = arr[2][::-1]\narr[3] = arr[3][::-1]\n\nans = 1\nfor i in range(n):\n    ans *= (min(arr[1][i], arr[3][i]) - max(arr[0][i], arr[2][i]) + 1)\n    ans %= MOD\n\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\narr = [[1] * n for _ in range(4)]\nt = list(map(int, input().split()))\na = list(map(int, input().split()))[::-1]\n\nMOD = 10**9 + 7\n\nmax_t = 0\nmax_a = 0\n\nfor i in range(n):\n    if max_t < t[i]:\n        arr[0][i] = t[i]\n        arr[1][i] = t[i]\n        max_t = t[i]\n    else:\n        arr[1][i] = t[i]\n    if max_a < a[i]:\n        arr[2][i] = a[i]\n        arr[3][i] = a[i]\n        max_a = a[i]\n    else:\n        arr[3][i] = a[i]\n\narr[2] = arr[2][::-1]\narr[3] = arr[3][::-1]\n\nans = 1\nfor i in range(n):\n    ans *= (min(arr[1][i], arr[3][i]) - max(arr[0][i], arr[2][i]) + 1)\n    ans %= MOD\n\nprint(ans)```\n "
    },
    {
        "user_id": "u835482198",
        "problem_id": "p03675",
        "submission1_id": "s736316789",
        "code_content": "\nN = int(input())\ns = input().split()\n\n\n\n\n\n\n\n\nans = []\nif N % 2 == 1:\n    for ss in s[::-1][0::2]:\n        ans.append(int(ss[::-1]))\n    for ss in s[1::2]:\n        ans.append(ss)\nelse:\n    for ss in s[::-1][0::2]:\n        ans.append(int(ss[::-1]))\n    for ss in s[0::2]:\n        ans.append(ss)\nprint(\" \".join(ans))\n",
        "origin_generated_text": "\n```\nN = int(input())\ns = input().split()\n\n\n\n\n\n\n\n\nans = []\nif N % 2 == 1:\n    for ss in s[::-1][0::2]:\n        ans.append(int(ss[::-1]))\n    for ss in s[1::2]:\n        ans.append(ss)\nelse:\n    for ss in s[::-1][0::2]:\n        ans.append(int(ss[::-1]))\n    for ss in s[0::2]:\n        ans.append(ss)\nprint(\" \".join(ans))\n```\n "
    },
    {
        "user_id": "u726615467",
        "problem_id": "p03200",
        "submission1_id": "s621442079",
        "code_content": "\n\nS = input()\n\nans = 0\nstate = 0\nmarker = -1\nfor i, Si in enumerate(S):\n    \n    if state < 1 and Si == 'B':\n        state += 1\n    elif state > 0 and Si == 'W':\n        ans += i - marker\n        marker += 1\n    elif state > 0 and Si == 'B':\n        state += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\n\nS = input()\n\nans = 0\nstate = 0\nmarker = -1\nfor i, Si in enumerate(S):\n    \n    if state < 1 and Si == 'B':\n        state += 1\n    elif state > 0 and Si == 'W':\n        ans += i - marker\n        marker += 1\n    elif state > 0 and Si == 'B':\n        state += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u309141201",
        "problem_id": "p03023",
        "submission1_id": "s189175464",
        "code_content": "\nn = int(input())\nprint(90*n-4)",
        "origin_generated_text": "\n```\nn = int(input())\nprint(90*n-4)```\n "
    },
    {
        "user_id": "u664228906",
        "problem_id": "p02407",
        "submission1_id": "s192578819",
        "code_content": "\nN = int(input())\nArr = list(map(int, input().split()))\nfor i in range(N-1,-1,-1):\n    print(Arr[i],end=\" \")\nprint(Arr[0])",
        "origin_generated_text": "\n```\nN = int(input())\nArr = list(map(int, input().split()))\nfor i in range(N-1,-1,-1):\n    print(Arr[i],end=\" \")\nprint(Arr[0])```\n "
    },
    {
        "user_id": "u482157295",
        "problem_id": "p03303",
        "submission1_id": "s573039788",
        "code_content": "\ns = input()\nn = int(input())\nprint(s[0::n])",
        "origin_generated_text": "\n```\ns = input()\nn = int(input())\nprint(s[0::n])```\n "
    },
    {
        "user_id": "u785205215",
        "problem_id": "p03568",
        "submission1_id": "s831671657",
        "code_content": "\nfrom sys import stdin\ndef readLine_int_list():return list(map(int, stdin.readline().split()))\n\nn = int(input())\na = readLine_int_list()\neven = [i for i in a if i%2 == 0]\ne = len(even)\n\n\nif e == 0:\n    if n == 1:\n        print(2-a.count(1))\n    else:\n        print(n**3 - 1 - a.count(1))\nelse:\n    print(3**n - (2**e) - a.count(1))",
        "origin_generated_text": "\n```\nfrom sys import stdin\ndef readLine_int_list():return list(map(int, stdin.readline().split()))\n\nn = int(input())\na = readLine_int_list()\neven = [i for i in a if i%2 == 0]\ne = len(even)\n\n\nif e == 0:\n    if n == 1:\n        print(2-a.count(1))\n    else:\n        print(n**3 - 1 - a.count(1))\nelse:\n    print(3**n - (2**e) - a.count(1))```\n "
    },
    {
        "user_id": "u607074939",
        "problem_id": "p02730",
        "submission1_id": "s896817388",
        "code_content": "\ns = list(str(input()))\nn = len(s)\nN = int((n-1)/2)\nM = int((n+3)/2)\nl = []\nm = []\nfor i in range(N):\n    l.append(s[i])\nfor i in range (M-1,N-1):\n    m.append(s[i])\na = ''.join(l)\nl.reverse()\nm.reverse()\nA = ''.join(l)\nB = ''.join(m)\nif (a==A and B==''.join(m)):\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\ns = list(str(input()))\nn = len(s)\nN = int((n-1)/2)\nM = int((n+3)/2)\nl = []\nm = []\nfor i in range(N):\n    l.append(s[i])\nfor i in range (M-1,N-1):\n    m.append(s[i])\na = ''.join(l)\nl.reverse()\nm.reverse()\nA = ''.join(l)\nB = ''.join(m)\nif (a==A and B==''.join(m)):\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u919730120",
        "problem_id": "p03343",
        "submission1_id": "s712530371",
        "code_content": "\nn,k,q=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=10**9\nfor i in a:\n    A=[]\n    l=[]\n    for j in a:\n      if i>j:\n        l.append(j)\n    if len(l)<k:\n      continue\n    else:\n      l.sort()\n      A=A+l[:len(l)-k+1]\n    if len(A)<q:\n      continue\n    else:\n      A.sort()\n      ans=min(ans,A[q-1]-A[0])\nprint(ans)",
        "origin_generated_text": "\n```\nn,k,q=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=10**9\nfor i in a:\n    A=[]\n    l=[]\n    for j in a:\n      if i>j:\n        l.append(j)\n    if len(l)<k:\n      continue\n    else:\n      l.sort()\n      A=A+l[:len(l)-k+1]\n    if len(A)<q:\n      continue\n    else:\n      A.sort()\n      ans=min(ans,A[q-1]-A[0])\nprint(ans)```\n "
    },
    {
        "user_id": "u385826034",
        "problem_id": "p02699",
        "submission1_id": "s966688665",
        "code_content": "\na, b = map(int, input().split())\nif b >= a:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\nif b >= a:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")```\n "
    },
    {
        "user_id": "u969080040",
        "problem_id": "p02699",
        "submission1_id": "s967271834",
        "code_content": "\ns,w=map(int,input().split())\nif s<=w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")",
        "origin_generated_text": "\n```\ns,w=map(int,input().split())\nif s<=w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")```\n "
    },
    {
        "user_id": "u729133443",
        "problem_id": "p03480",
        "submission1_id": "s686474925",
        "code_content": "\ns=input();n=len(s);print(min([max(i,n-i)for i in range(1,n)if s[i-1]!=s[i]]or[n]))",
        "origin_generated_text": "\n```\ns=input();n=len(s);print(min([max(i,n-i)for i in range(1,n)if s[i-1]!=s[i]]or[n]))```\n "
    },
    {
        "user_id": "u543954314",
        "problem_id": "p03264",
        "submission1_id": "s658246064",
        "code_content": "\nk = int(input())\nif k % 2 == 0:\n  print(k**2\nelse:\n  print((k+1)*(k",
        "origin_generated_text": "\n```\nk = int(input())\nif k % 2 == 0:\n  print(k**2\nelse:\n  print((k+1)*(k```\n "
    },
    {
        "user_id": "u879977274",
        "problem_id": "p02974",
        "submission1_id": "s369726960",
        "code_content": "\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i < 0 or j < 0 or k < 0 or i < j:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(1e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\ndp = {}\n\ndp[(0, 0, 0)] = 1\n\ndef perm(i, j, k):\n  if (i, j, k) in dp:\n    return dp[(i, j, k)]\n  if i < 0 or j < 0 or k < 0 or i < j:\n    return 0\n  dp[(i, j, k)] = ((j+j+1)*perm(i-1, j, k-2*j)\\\n                + (j+1)*(j+1)*perm(i-1, j+1, k-2*j)\\\n                +  1*perm(i-1, j-1, k-2*j))%int(1e9+7)\n  return dp[(i, j, k)]\n\nprint(perm(n, 0, k))```\n "
    },
    {
        "user_id": "u252729807",
        "problem_id": "p03200",
        "submission1_id": "s476729753",
        "code_content": "\nS = input()\n\n\nidx_w = 0\nidxes_b = []\n\nfor i, s in enumerate(S):\n    if s == 'B':\n        idxes_b.append(i)\n    elif s == 'W':\n        idx_w = i\n\n\nans = 0\nfor i, b in enumerate(idxes_b[::-1]):\n    ans += idx_w - b - i\n\nprint(ans",
        "origin_generated_text": "\n```\nS = input()\n\n\nidx_w = 0\nidxes_b = []\n\nfor i, s in enumerate(S):\n    if s == 'B':\n        idxes_b.append(i)\n    elif s == 'W':\n        idx_w = i\n\n\nans = 0\nfor i, b in enumerate(idxes_b[::-1]):\n    ans += idx_w - b - i\n\nprint(ans```\n "
    },
    {
        "user_id": "u607074939",
        "problem_id": "p02730",
        "submission1_id": "s823065914",
        "code_content": "\ns = list(str(input()))\nn = len(s)\nN = int((n-1)/2)\nM = int((n+3)/2)\nl = []\nm = []\nfor i in range(N):\n    l.append(s[i])\nfor i in range (M,n):\n    m.append(s[i])\na = ''.join(l)\nl.reverse()\nm.reverse()\nA = ''.join(l)\nB = ''.join(m)\nif (a==A and B==''.join(m)):\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\ns = list(str(input()))\nn = len(s)\nN = int((n-1)/2)\nM = int((n+3)/2)\nl = []\nm = []\nfor i in range(N):\n    l.append(s[i])\nfor i in range (M,n):\n    m.append(s[i])\na = ''.join(l)\nl.reverse()\nm.reverse()\nA = ''.join(l)\nB = ''.join(m)\nif (a==A and B==''.join(m)):\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u850266651",
        "problem_id": "p03080",
        "submission1_id": "s802658580",
        "code_content": "\nN = int(input())\nS = input()\n\na = 0\nfor s in S:\n  if s==\"R\":\n  \t  a += 1\nif a > N-a:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")",
        "origin_generated_text": "\n```\nN = int(input())\nS = input()\n\na = 0\nfor s in S:\n  if s==\"R\":\n  \t  a += 1\nif a > N-a:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")```\n "
    },
    {
        "user_id": "u331036636",
        "problem_id": "p03563",
        "submission1_id": "s764346379",
        "code_content": "\nnr = int(input())\np = int(input())\nprint((p-nr)+p)",
        "origin_generated_text": "\n```\nnr = int(input())\np = int(input())\nprint((p-nr)+p)```\n "
    },
    {
        "user_id": "u396976991",
        "problem_id": "p03296",
        "submission1_id": "s605909545",
        "code_content": "\nN=int(input())\na=[]\na=input().split()\nsum=0\n \nfor i in range (N-1):\n  if a[i]==a[i+1]:\n    sum=sum+1\n  else:\n    sum=sum\n    \nprint(sum)",
        "origin_generated_text": "\n```\nN=int(input())\na=[]\na=input().split()\nsum=0\n \nfor i in range (N-1):\n  if a[i]==a[i+1]:\n    sum=sum+1\n  else:\n    sum=sum\n    \nprint(sum)```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p02963",
        "submission1_id": "s089948663",
        "code_content": "\nimport sys,collections as cl,bisect as bs\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nmod = 10**9+7\nMax = sys.maxsize\ndef l(): \n  return list(map(int,input().split()))\ndef m(): \n  return map(int,input().split())\ndef onem(): \n  return int(input())\ndef s(x): \n  a = []\n  if len(x) == 0:\n    return []\n  aa = x[0]\n  su = 1\n  for i in range(len(x)-1):\n    if aa != x[i+1]:\n      a.append([aa,su])\n      aa = x[i+1]\n      su = 1\n    else:\n      su += 1\n  a.append([aa,su])\n  return a\ndef jo(x): \n  return \" \".join(map(str,x))\ndef max2(x): \n  return max(map(max,x))\ndef In(x,a): \n    k = bs.bisect_left(a,x)\n    if k != len(a) and a[k] ==  x:\n        return True\n    else:\n        return False\n\ndef pow_k(x, n):\n    ans = 1\n    while n:\n        if n % 2:\n            ans *= x\n        x *= x\n        n >>= 1\n    return ans\n\n\n\ns = onem()\n\nx = [0,10**9,0]\ny = [0,1,0]\n\nx[-1] = s \ny[-1] = s % 10**9\n\nprint(x[0],y[0],x[1],y[1],x[2],y[2])\n\n",
        "origin_generated_text": "\n```\nimport sys,collections as cl,bisect as bs\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nmod = 10**9+7\nMax = sys.maxsize\ndef l(): \n  return list(map(int,input().split()))\ndef m(): \n  return map(int,input().split())\ndef onem(): \n  return int(input())\ndef s(x): \n  a = []\n  if len(x) == 0:\n    return []\n  aa = x[0]\n  su = 1\n  for i in range(len(x)-1):\n    if aa != x[i+1]:\n      a.append([aa,su])\n      aa = x[i+1]\n      su = 1\n    else:\n      su += 1\n  a.append([aa,su])\n  return a\ndef jo(x): \n  return \" \".join(map(str,x))\ndef max2(x): \n  return max(map(max,x))\ndef In(x,a): \n    k = bs.bisect_left(a,x)\n    if k != len(a) and a[k] ==  x:\n        return True\n    else:\n        return False\n\ndef pow_k(x, n):\n    ans = 1\n    while n:\n        if n % 2:\n            ans *= x\n        x *= x\n        n >>= 1\n    return ans\n\n\n\ns = onem()\n\nx = [0,10**9,0]\ny = [0,1,0]\n\nx[-1] = s \ny[-1] = s % 10**9\n\nprint(x[0],y[0],x[1],y[1],x[2],y[2])\n\n```\n "
    },
    {
        "user_id": "u941434715",
        "problem_id": "p03965",
        "submission1_id": "s384931577",
        "code_content": "\n\nimport math\n\ns = input()\nans = math.ceil(len(s)/2) - s.count(\"g\")\nprint(ans)",
        "origin_generated_text": "\n```\n\nimport math\n\ns = input()\nans = math.ceil(len(s)/2) - s.count(\"g\")\nprint(ans)```\n "
    },
    {
        "user_id": "u393881437",
        "problem_id": "p03729",
        "submission1_id": "s106014910",
        "code_content": "\na, b, c = list(input().split())\nprint('YES' if a[len(a)-1] == b[0] and b[len(b)-1] == c[0] else 'NO')\n",
        "origin_generated_text": "\n```\na, b, c = list(input().split())\nprint('YES' if a[len(a)-1] == b[0] and b[len(b)-1] == c[0] else 'NO')\n```\n "
    },
    {
        "user_id": "u124498235",
        "problem_id": "p03416",
        "submission1_id": "s188034348",
        "code_content": "\na, b = map(int, input().split())\ncnt = 0\nfor i in range(a,b+1):\n\ts = str(i)\n\tif s[:len(s)\n\t\tcnt += 1\nprint (cnt)",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\ncnt = 0\nfor i in range(a,b+1):\n\ts = str(i)\n\tif s[:len(s)\n\t\tcnt += 1\nprint (cnt)```\n "
    },
    {
        "user_id": "u648212584",
        "problem_id": "p03959",
        "submission1_id": "s924297868",
        "code_content": "\nimport sys\ninput = sys.stdin.buffer.readline\nfrom operator import itemgetter\n\ndef main():\n    N = int(input())\n    \n    t = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    MOD = 10**9+7\n    \n    tt,tl = 0,[False for _ in range(N)]\n    for x,num in enumerate(t):\n        if num > tt:\n            tl[x] = True\n            tt = num\n            \n    at,al = 0,[False for _ in range(N)]\n    for x,num in enumerate(a[::-1]):\n        if num > at:\n            al[-x-1] = True\n            at = num\n            \n    ans,now = 1,0\n    for i in range(N):\n        if tl[i] == True and al[i] == True:\n            if now < t[i] == a[i]:\n                now = t[i]\n            else:\n                print(0)\n                exit()\n        elif tl[i] == True and al[i] == False:\n            if now > t[i]:\n                print(0)\n                exit()\n            else:\n                now = t[i]\n        elif tl[i] == False and al[i] == True:\n            if now < a[i]:\n                print(0)\n                exit()\n            else:\n                now = a[i]\n        else:\n            ans *= min(t[i],a[i])\n            ans %= MOD\n    \n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.buffer.readline\nfrom operator import itemgetter\n\ndef main():\n    N = int(input())\n    \n    t = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    MOD = 10**9+7\n    \n    tt,tl = 0,[False for _ in range(N)]\n    for x,num in enumerate(t):\n        if num > tt:\n            tl[x] = True\n            tt = num\n            \n    at,al = 0,[False for _ in range(N)]\n    for x,num in enumerate(a[::-1]):\n        if num > at:\n            al[-x-1] = True\n            at = num\n            \n    ans,now = 1,0\n    for i in range(N):\n        if tl[i] == True and al[i] == True:\n            if now < t[i] == a[i]:\n                now = t[i]\n            else:\n                print(0)\n                exit()\n        elif tl[i] == True and al[i] == False:\n            if now > t[i]:\n                print(0)\n                exit()\n            else:\n                now = t[i]\n        elif tl[i] == False and al[i] == True:\n            if now < a[i]:\n                print(0)\n                exit()\n            else:\n                now = a[i]\n        else:\n            ans *= min(t[i],a[i])\n            ans %= MOD\n    \n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u498486375",
        "problem_id": "p03264",
        "submission1_id": "s082258519",
        "code_content": "\nK=int(input())\nif K%2==0:\n    m=(K/2)**2\nelse:\n    m=((K-1)/2)*(((K-1)/2)+1)\nprint(int(m))",
        "origin_generated_text": "\n```\nK=int(input())\nif K%2==0:\n    m=(K/2)**2\nelse:\n    m=((K-1)/2)*(((K-1)/2)+1)\nprint(int(m))```\n "
    },
    {
        "user_id": "u846226907",
        "problem_id": "p02954",
        "submission1_id": "s794442504",
        "code_content": "\nS = list(input())\n\nN = len(S)\n\nans = [0]*N\n\nfor _ in range(2):\n    cnt = 0\n    for i in  range(len(S)):\n        if S[i] =='R':cnt +=1\n        else:\n            ans[i] += int(cnt/2)\n            ans[i-1] += int((cnt+1)/2)\n            cnt = 0\n\n    S.reverse()\n    ans.reverse()\n    for i in range(len(S)):\n        if S[i] == 'L':\n            S[i] ='R'\n        else:\n            S[i] = 'L'\n\nprint(*ans)",
        "origin_generated_text": "\n```\nS = list(input())\n\nN = len(S)\n\nans = [0]*N\n\nfor _ in range(2):\n    cnt = 0\n    for i in  range(len(S)):\n        if S[i] =='R':cnt +=1\n        else:\n            ans[i] += int(cnt/2)\n            ans[i-1] += int((cnt+1)/2)\n            cnt = 0\n\n    S.reverse()\n    ans.reverse()\n    for i in range(len(S)):\n        if S[i] == 'L':\n            S[i] ='R'\n        else:\n            S[i] = 'L'\n\nprint(*ans)```\n "
    },
    {
        "user_id": "u489762173",
        "problem_id": "p03087",
        "submission1_id": "s317498789",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, Q = map(int, input().split())\n    S = input().rstrip()\n\n    dec_a = 0\n    for x in range(N):\n        if S[x] == 'C' and S[x-1] == 'A':\n            dec_a += 1\n\n    L = []\n    R = []\n    for i in range(Q):\n        L.append(int(input()))\n        R.append(int(input()))\n\n    for j in range(Q):\n        print(dec_a - S[L[j]-1:R[j]].count('A'))\n\nmain()",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, Q = map(int, input().split())\n    S = input().rstrip()\n\n    dec_a = 0\n    for x in range(N):\n        if S[x] == 'C' and S[x-1] == 'A':\n            dec_a += 1\n\n    L = []\n    R = []\n    for i in range(Q):\n        L.append(int(input()))\n        R.append(int(input()))\n\n    for j in range(Q):\n        print(dec_a - S[L[j]-1:R[j]].count('A'))\n\nmain()```\n "
    },
    {
        "user_id": "u307083029",
        "problem_id": "p02640",
        "submission1_id": "s592284084",
        "code_content": "\nx, y = map(int, input().split())\nans = 'No'\nfor a in range(x + 1):\n    b = x - a\n    if 2*a + 4*b == y:\n        ans = 'Yes'\nprint(ans)",
        "origin_generated_text": "\n```\nx, y = map(int, input().split())\nans = 'No'\nfor a in range(x + 1):\n    b = x - a\n    if 2*a + 4*b == y:\n        ans = 'Yes'\nprint(ans)```\n "
    },
    {
        "user_id": "u846150137",
        "problem_id": "p03096",
        "submission1_id": "s112086377",
        "code_content": "\nm = 10 ** 9 + 7\nd = [0] * 2 * 10 ** 5\nr = 1\np = -1\nfor _ in range(int(input())):\n  c = d[int(input())]\n  if c == p:\n    r = 0\n  else:\n    r = d[c]\n  d[c] = r * 2 % m\n  p = c\nprint(d[0])",
        "origin_generated_text": "\n```\nm = 10 ** 9 + 7\nd = [0] * 2 * 10 ** 5\nr = 1\np = -1\nfor _ in range(int(input())):\n  c = d[int(input())]\n  if c == p:\n    r = 0\n  else:\n    r = d[c]\n  d[c] = r * 2 % m\n  p = c\nprint(d[0])```\n "
    },
    {
        "user_id": "u686989171",
        "problem_id": "p02699",
        "submission1_id": "s776065719",
        "code_content": "\ns, w = map(int, input().split())\nif s<=w:\n    print('safe')\nelse:\n    print('unsafe')",
        "origin_generated_text": "\n```\ns, w = map(int, input().split())\nif s<=w:\n    print('safe')\nelse:\n    print('unsafe')```\n "
    },
    {
        "user_id": "u143492911",
        "problem_id": "p03943",
        "submission1_id": "s962387074",
        "code_content": "\na,b,c=map(int,input().split())\nif a+b==c:\n    print(\"Yes\")\n    exit()\nif b+c==a:\n    print(\"Yes\")\n    exit()\nif a+c==b:\n    print(\"Yes\")\n    exit()\nprint(\"No\")\n",
        "origin_generated_text": "\n```\na,b,c=map(int,input().split())\nif a+b==c:\n    print(\"Yes\")\n    exit()\nif b+c==a:\n    print(\"Yes\")\n    exit()\nif a+c==b:\n    print(\"Yes\")\n    exit()\nprint(\"No\")\n```\n "
    },
    {
        "user_id": "u395894569",
        "problem_id": "p02880",
        "submission1_id": "s030907335",
        "code_content": "\nn = int(input())\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if i * j == n:\n            print('Yes')\n            exit()\nelse:print('No')",
        "origin_generated_text": "\n```\nn = int(input())\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if i * j == n:\n            print('Yes')\n            exit()\nelse:print('No')```\n "
    },
    {
        "user_id": "u223904637",
        "problem_id": "p03200",
        "submission1_id": "s617975653",
        "code_content": "\ns=list(input())\nans=0\nwf=0\nbf=0\nfor i in range(len(s)):\n    if s[i]=='W':\n        ans+=i\n        wf=1\n    else:\n        bf=1\nif wf==0 or bf==0:\n    print(0)\nelse:\n    print(ans\n",
        "origin_generated_text": "\n```\ns=list(input())\nans=0\nwf=0\nbf=0\nfor i in range(len(s)):\n    if s[i]=='W':\n        ans+=i\n        wf=1\n    else:\n        bf=1\nif wf==0 or bf==0:\n    print(0)\nelse:\n    print(ans\n```\n "
    },
    {
        "user_id": "u948374595",
        "problem_id": "p03475",
        "submission1_id": "s172674675",
        "code_content": "\nn = int(input())\nCSF = []\nfor i in range(n-1):\n  CSF.append(list(map(int, input().split())))\nfor i in range(n-1):\n  s = CSF[i][1]\n  for j in range(i,n-1):\n    s += CSF[j][0]\n    if j < n-2:\n      if s < CSF[j+1][1]:\n        s = CSF[j+1][1]\n      if s%CSF[j+1][2] != 0:\n        s = s + CSF[j+1][2] - (s%CSF[j+1][2])\n  print(s)\nprint(0)\n",
        "origin_generated_text": "\n```\nn = int(input())\nCSF = []\nfor i in range(n-1):\n  CSF.append(list(map(int, input().split())))\nfor i in range(n-1):\n  s = CSF[i][1]\n  for j in range(i,n-1):\n    s += CSF[j][0]\n    if j < n-2:\n      if s < CSF[j+1][1]:\n        s = CSF[j+1][1]\n      if s%CSF[j+1][2] != 0:\n        s = s + CSF[j+1][2] - (s%CSF[j+1][2])\n  print(s)\nprint(0)\n```\n "
    },
    {
        "user_id": "u717626627",
        "problem_id": "p03563",
        "submission1_id": "s833652489",
        "code_content": "\nr = int(input())\ng = int(input())\n\nprint(g - r)",
        "origin_generated_text": "\n```\nr = int(input())\ng = int(input())\n\nprint(g - r)```\n "
    },
    {
        "user_id": "u827141374",
        "problem_id": "p03272",
        "submission1_id": "s637670968",
        "code_content": "\nN, i = map(int, input().split())\nprint(N - i + 1)",
        "origin_generated_text": "\n```\nN, i = map(int, input().split())\nprint(N - i + 1)```\n "
    },
    {
        "user_id": "u343977188",
        "problem_id": "p02730",
        "submission1_id": "s169990183",
        "code_content": "\nS=str(input())\nN=len(S)\n\nS1 = S[0:int((N-1)/2)]\nS2 = S[int((N+3)/2)-1:N]\n\nif S1==S1[::-1] and S2==S2[::-1] and len(S1)==len(S2):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nS=str(input())\nN=len(S)\n\nS1 = S[0:int((N-1)/2)]\nS2 = S[int((N+3)/2)-1:N]\n\nif S1==S1[::-1] and S2==S2[::-1] and len(S1)==len(S2):\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u329407311",
        "problem_id": "p03734",
        "submission1_id": "s571689901",
        "code_content": "\nN,W = map(int,input().split())\ndic = {\"0\":[],\"1\":[],\"2\":[],\"3\":[]}\nfor i in range(N):\n  w,v = map(int,input().split())\n  if i == 0:\n    Min = w\n  if w == Min:\n    dic[\"0\"].append(v)\n  elif w == Min+1:\n    dic[\"1\"].append(v)\n  elif w == Min+2:\n    dic[\"2\"].append(v)\n  elif w == Min+3:\n    dic[\"3\"].append(v)\n    \ndic[\"0\"].sort(reverse=True)\ndic[\"1\"].sort(reverse=True)\ndic[\"2\"].sort(reverse=True)\ndic[\"3\"].sort(reverse=True)\n\nans = 0\nfor i in range(len(dic[\"0\"])+1):\n  for j in range(len(dic[\"1\"])+1):\n    for k in range(len(dic[\"2\"])+1):\n      for l in range(len(dic[\"3\"])+1): \n        a = int(sum(dic[\"0\"][:i])+sum(dic[\"1\"][:j])+sum(dic[\"2\"][:k])+sum(dic[\"3\"][:l])) \n        b = int(i*Min+j*(Min+1)+k*(Min+2)+l*(Min+3))\n        if a > ans and b <= W:\n          ans = a\nprint(int(ans))",
        "origin_generated_text": "\n```\nN,W = map(int,input().split())\ndic = {\"0\":[],\"1\":[],\"2\":[],\"3\":[]}\nfor i in range(N):\n  w,v = map(int,input().split())\n  if i == 0:\n    Min = w\n  if w == Min:\n    dic[\"0\"].append(v)\n  elif w == Min+1:\n    dic[\"1\"].append(v)\n  elif w == Min+2:\n    dic[\"2\"].append(v)\n  elif w == Min+3:\n    dic[\"3\"].append(v)\n    \ndic[\"0\"].sort(reverse=True)\ndic[\"1\"].sort(reverse=True)\ndic[\"2\"].sort(reverse=True)\ndic[\"3\"].sort(reverse=True)\n\nans = 0\nfor i in range(len(dic[\"0\"])+1):\n  for j in range(len(dic[\"1\"])+1):\n    for k in range(len(dic[\"2\"])+1):\n      for l in range(len(dic[\"3\"])+1): \n        a = int(sum(dic[\"0\"][:i])+sum(dic[\"1\"][:j])+sum(dic[\"2\"][:k])+sum(dic[\"3\"][:l])) \n        b = int(i*Min+j*(Min+1)+k*(Min+2)+l*(Min+3))\n        if a > ans and b <= W:\n          ans = a\nprint(int(ans))```\n "
    },
    {
        "user_id": "u948779457",
        "problem_id": "p02727",
        "submission1_id": "s138611232",
        "code_content": "\nX,Y,A,B,C = map(int,input().split())\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort(reverse=True)\nZ = X+Y\nP = p[:X]\nQ = q[:Y]\nR = r[:Z]\nans = 0\nif X <= Y:\n  S = P + R\n  S.sort(reverse=True)\n  a = S[:X]\n  b = S[X:]\n  ans += sum(a)\n  T = Q + b\n  T.sort(reverse=True)\n  c = T[:Y]\n  ans += sum(c)\nelse:\n  S = Q + R\n  S.sort(reverse=True)\n  a = S[:Y]\n  b = S[Y:]\n  ans += sum(a)\n  T = P + b\n  T.sort(reverse=True)\n  c = T[:X]\n  ans += sum(c)\nprint(ans)",
        "origin_generated_text": "\n```\nX,Y,A,B,C = map(int,input().split())\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort(reverse=True)\nZ = X+Y\nP = p[:X]\nQ = q[:Y]\nR = r[:Z]\nans = 0\nif X <= Y:\n  S = P + R\n  S.sort(reverse=True)\n  a = S[:X]\n  b = S[X:]\n  ans += sum(a)\n  T = Q + b\n  T.sort(reverse=True)\n  c = T[:Y]\n  ans += sum(c)\nelse:\n  S = Q + R\n  S.sort(reverse=True)\n  a = S[:Y]\n  b = S[Y:]\n  ans += sum(a)\n  T = P + b\n  T.sort(reverse=True)\n  c = T[:X]\n  ans += sum(c)\nprint(ans)```\n "
    },
    {
        "user_id": "u171132311",
        "problem_id": "p02742",
        "submission1_id": "s772137072",
        "code_content": "\nh,w=map(int,input().split())\nresult = h*w\nif result%2==1:\n    print(result\nelse:\n    print(result",
        "origin_generated_text": "\n```\nh,w=map(int,input().split())\nresult = h*w\nif result%2==1:\n    print(result\nelse:\n    print(result```\n "
    },
    {
        "user_id": "u136090046",
        "problem_id": "p03626",
        "submission1_id": "s238758260",
        "code_content": "\nn = int(input())\n\ns1 = input()\ns2 = input()\n\nINF = 1000000007\n\nleft = None\nindex = 0\ncnt = 0\nwhile index < n:\n    \n    if s1[index] == s2[index]:\n        index += 1\n        if left is None:\n            left = 1\n            cnt = 3\n        \n        elif left == 1:\n            cnt *= 2\n        \n        else:\n            cnt *= 1\n        left = 1\n\n    \n    else:\n        index += 2\n        if left is None:\n            left = 2\n            cnt = 6\n        \n        elif left == 1:\n            cnt *= 2\n        \n        else:\n            cnt *= 3\n        left = 2\n    cnt = cnt % INF\nprint(cnt)",
        "origin_generated_text": "\n```\nn = int(input())\n\ns1 = input()\ns2 = input()\n\nINF = 1000000007\n\nleft = None\nindex = 0\ncnt = 0\nwhile index < n:\n    \n    if s1[index] == s2[index]:\n        index += 1\n        if left is None:\n            left = 1\n            cnt = 3\n        \n        elif left == 1:\n            cnt *= 2\n        \n        else:\n            cnt *= 1\n        left = 1\n\n    \n    else:\n        index += 2\n        if left is None:\n            left = 2\n            cnt = 6\n        \n        elif left == 1:\n            cnt *= 2\n        \n        else:\n            cnt *= 3\n        left = 2\n    cnt = cnt % INF\nprint(cnt)```\n "
    },
    {
        "user_id": "u072717685",
        "problem_id": "p03477",
        "submission1_id": "s902664120",
        "code_content": "\nA, B, C, D = map(int, input().split())\n \nif A + B < C + D:\n  r = 'Left'\nelif A + B > C + D:\n  r = 'Right'\nelse:\n  r = 'Balanced'\nprint(r)",
        "origin_generated_text": "\n```\nA, B, C, D = map(int, input().split())\n \nif A + B < C + D:\n  r = 'Left'\nelif A + B > C + D:\n  r = 'Right'\nelse:\n  r = 'Balanced'\nprint(r)```\n "
    },
    {
        "user_id": "u167681750",
        "problem_id": "p03546",
        "submission1_id": "s359552769",
        "code_content": "\nh, w = map(int, input().split())\n\ntable = [list(map(int, input().split())) for _ in range(10)]\n\ndef wf(table):\n    from itertools import product\n    for i, j, k in product(range(len(table)), repeat=2):\n        table[i][j] = min(table[i][j], table[i][k] + table[k][j])\n\n    return table\n\ntable = wf(table)\n\nans = 0\nfor _ in range(h):\n    for i in map(int, input().split()):\n        if i != -1:\n            ans += table[i][1]\n\nprint(ans)",
        "origin_generated_text": "\n```\nh, w = map(int, input().split())\n\ntable = [list(map(int, input().split())) for _ in range(10)]\n\ndef wf(table):\n    from itertools import product\n    for i, j, k in product(range(len(table)), repeat=2):\n        table[i][j] = min(table[i][j], table[i][k] + table[k][j])\n\n    return table\n\ntable = wf(table)\n\nans = 0\nfor _ in range(h):\n    for i in map(int, input().split()):\n        if i != -1:\n            ans += table[i][1]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u364386647",
        "problem_id": "p02553",
        "submission1_id": "s028386806",
        "code_content": "\ndef resolve():\n    a, b, c, d = list(map(int, input().split()))\n    ans = -10 ** 10\n\n    for x in (a, b):\n        for y in (c, d):\n            ans = max(ans, x * y)\n\n    print(ans)\n\nresolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    a, b, c, d = list(map(int, input().split()))\n    ans = -10 ** 10\n\n    for x in (a, b):\n        for y in (c, d):\n            ans = max(ans, x * y)\n\n    print(ans)\n\nresolve()```\n "
    },
    {
        "user_id": "u500279510",
        "problem_id": "p03573",
        "submission1_id": "s863571828",
        "code_content": "\nA, B, C = map(int,input().split())\nif A!=B and A==C:\n    print(B)\nelif B!=C and B==A:\n    print(C)\nelse:\n    print(A) ",
        "origin_generated_text": "\n```\nA, B, C = map(int,input().split())\nif A!=B and A==C:\n    print(B)\nelif B!=C and B==A:\n    print(C)\nelse:\n    print(A) ```\n "
    },
    {
        "user_id": "u933096856",
        "problem_id": "p02469",
        "submission1_id": "s573042137",
        "code_content": "\ndef gcd(x,y):\n    p=min(x,y)\n    q=max(x,y)\n    while q%p!=0:\n        m=q%p\n        q=p\n        p=m\n    return p\n\nc=0\nn=int(input())\na=sorted(set(list(map(int, input().split()))))\nb=[]\nwhile len(a) > 1:\n    n=len(a)\n    for i in range(n-1):\n        p=a[i]\n        q=a[i+1]\n        g=gcd(p,q)\n        r=p*q\n        a.append(r\n    a=sorted(a)\nprint(*a)",
        "origin_generated_text": "\n```\ndef gcd(x,y):\n    p=min(x,y)\n    q=max(x,y)\n    while q%p!=0:\n        m=q%p\n        q=p\n        p=m\n    return p\n\nc=0\nn=int(input())\na=sorted(set(list(map(int, input().split()))))\nb=[]\nwhile len(a) > 1:\n    n=len(a)\n    for i in range(n-1):\n        p=a[i]\n        q=a[i+1]\n        g=gcd(p,q)\n        r=p*q\n        a.append(r\n    a=sorted(a)\nprint(*a)```\n "
    },
    {
        "user_id": "u363836311",
        "problem_id": "p03970",
        "submission1_id": "s185874266",
        "code_content": "\nS=list(str(input()))\nG='CODEFESTIVAL2016'\nt=0\nfor i in range(16):\n  if S[i]!=G[i]:\n    t+=1\nprint(t)",
        "origin_generated_text": "\n```\nS=list(str(input()))\nG='CODEFESTIVAL2016'\nt=0\nfor i in range(16):\n  if S[i]!=G[i]:\n    t+=1\nprint(t)```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p02922",
        "submission1_id": "s613269513",
        "code_content": "\nimport math\na,b = map(int,input().split())\nprint(math.ceil(b/a))",
        "origin_generated_text": "\n```\nimport math\na,b = map(int,input().split())\nprint(math.ceil(b/a))```\n "
    },
    {
        "user_id": "u113295414",
        "problem_id": "p02281",
        "submission1_id": "s038199979",
        "code_content": "\nn = int(input())\ntree = [[-1, -1, True] for i in range(n)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    if left != -1:\n        tree[id][0] = left\n        tree[left][2] = False\n    if right != -1:\n        tree[id][1] = right\n        tree[right][2] = False\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nfor i, node in enumerate(tree):\n    if node[2] == True:\n        root = i\n\npreoder(root)\nprint('')\ninorder(root)\nprint('')\npostorder(root)\n\n",
        "origin_generated_text": "\n```\nn = int(input())\ntree = [[-1, -1, True] for i in range(n)]\nfor i in range(n):\n    id, left, right = map(int, input().split())\n    if left != -1:\n        tree[id][0] = left\n        tree[left][2] = False\n    if right != -1:\n        tree[id][1] = right\n        tree[right][2] = False\n\ndef preoder(id):\n    if id == -1:\n        return\n    print(' ' + str(id), end='')\n    preoder(tree[id][0])\n    preoder(tree[id][1])\n\ndef inorder(id):\n    if id == -1:\n        return\n    inorder(tree[id][0])\n    print(' ' + str(id), end='')\n    inorder(tree[id][1])\n\ndef postorder(id):\n    if id == -1:\n        return\n    postorder(tree[id][0])\n    postorder(tree[id][1])\n    print(' ' + str(id), end='')\n\nfor i, node in enumerate(tree):\n    if node[2] == True:\n        root = i\n\npreoder(root)\nprint('')\ninorder(root)\nprint('')\npostorder(root)\n\n```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03625",
        "submission1_id": "s683036892",
        "code_content": "\nN = int(input())\nA = [int(x) for x in input().split()]\nA.sort(reverse=True)\npre = 0\ne1, e2 = 0, 0\nfor a in A:\n  if pre == a:\n    if e1 == 0:\n      e1 = a\n    elif e2 == 0:\n      e2 = a\n    pre = 0\n  else:\n    pre = a\nprint(e1 * e2)",
        "origin_generated_text": "\n```\nN = int(input())\nA = [int(x) for x in input().split()]\nA.sort(reverse=True)\npre = 0\ne1, e2 = 0, 0\nfor a in A:\n  if pre == a:\n    if e1 == 0:\n      e1 = a\n    elif e2 == 0:\n      e2 = a\n    pre = 0\n  else:\n    pre = a\nprint(e1 * e2)```\n "
    },
    {
        "user_id": "u460386402",
        "problem_id": "p03103",
        "submission1_id": "s747729727",
        "code_content": "\nn,m=map(int,input().split())\ndic={}\ndoll=0\nfor i in range(n+1):\n  a,b=map(int,input().split())\n  dic[a]=b\n\ncon=sorted(dic.items(),key=lambda x:x[0])\n\nfor k,v in con:\n  if v<m:\n    doll+=k*v\n    m-=v\n  else:\n    doll+=k*m\n    break\nprint(doll)",
        "origin_generated_text": "\n```\nn,m=map(int,input().split())\ndic={}\ndoll=0\nfor i in range(n+1):\n  a,b=map(int,input().split())\n  dic[a]=b\n\ncon=sorted(dic.items(),key=lambda x:x[0])\n\nfor k,v in con:\n  if v<m:\n    doll+=k*v\n    m-=v\n  else:\n    doll+=k*m\n    break\nprint(doll)```\n "
    },
    {
        "user_id": "u218843509",
        "problem_id": "p03016",
        "submission1_id": "s203927452",
        "code_content": "\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)",
        "origin_generated_text": "\n```\ndef mat_dot(one, two, mod):\n\treturn [[sum([(one[i][k]*two[k][j])%mod for k in range(len(two))])%mod for j in range(len(two[0]))] for i in range(len(one))]\n\ndef mat_pow(mat, exp, mod):\n\tsize = len(mat)\n\tres = [[0 for _ in range(size)] for _ in range(size)]\n\tfor i in range(size):\n\t\tres[i][i] = 1\n\tcnt = 0\n\twhile (1<<cnt) <= exp:\n\t\tif (exp>>cnt)&1:\n\t\t\tres = mat_dot(res, mat, mod)\n\t\tmat = mat_dot(mat, mat, mod)\n\t\tcnt += 1\n\treturn res\n\nl, a, b, m = map(int, input().split())\nc = a + (l-1)*b\nn = len(str(c))\ndgt = [0 for _ in range(n+1)]\nfor i in range(1, n):\n\tdgt[i] = (10**i -a+b-1) \ndgt[n] = l-sum(dgt)\nd_sum = [0 for _ in range(n+1)]\nfor i in range(n-1, 0, -1):\n\td_sum[i] = d_sum[i+1] + dgt[i+1]*(i+1)\nfr = [0 for _ in range(n+1)]\nfr[1] = a\nfor i in range(2, n+1):\n\tfr[i] = fr[i-1] + b*dgt[i-1]\nl = [[0, a%m, 1]]\nfor d in range(1, n+1):\n\tk = [[(10**d)%m, 0, 0], [1, 1, 0], [0, b%m, 1]]\n\tj = mat_pow(k, dgt[d], m)\n\tl = mat_dot(l, j, m)\nprint(l[0][0]%m)```\n "
    },
    {
        "user_id": "u377036395",
        "problem_id": "p03272",
        "submission1_id": "s217659524",
        "code_content": "\nn,i = map(int,input().split())\nprint(n-i+1)",
        "origin_generated_text": "\n```\nn,i = map(int,input().split())\nprint(n-i+1)```\n "
    },
    {
        "user_id": "u807772568",
        "problem_id": "p03479",
        "submission1_id": "s868027988",
        "code_content": "\na = list(map(int,input().split()))\n\nk = a[1]\ni = 0\nl = a[0]\nwhile True:\n  l *= 2\n  if k < l:\n    break\n  i += 1\nprint(i-1)\n",
        "origin_generated_text": "\n```\na = list(map(int,input().split()))\n\nk = a[1]\ni = 0\nl = a[0]\nwhile True:\n  l *= 2\n  if k < l:\n    break\n  i += 1\nprint(i-1)\n```\n "
    },
    {
        "user_id": "u581707881",
        "problem_id": "p03626",
        "submission1_id": "s880939931",
        "code_content": "\nn = int(input())\ns1 = str(input())\ns2 = str(input())\nif s1[0] == s2[0]:\n  c = 3\n  state = True\n  i = 1\nelse:\n  c = 6\n  state = False\n  i = 2\nwhile i < n:\n  if s1[i] == s2[i]:\n    i += 1\n    if state:\n      c *= 2\n    else:\n      state = True\n  else:\n    i += 2\n    if state:\n      c *= 2\n      state = False\n    else:\n      c *= 3\nprint(c%1000000007)\n  \n  ",
        "origin_generated_text": "\n```\nn = int(input())\ns1 = str(input())\ns2 = str(input())\nif s1[0] == s2[0]:\n  c = 3\n  state = True\n  i = 1\nelse:\n  c = 6\n  state = False\n  i = 2\nwhile i < n:\n  if s1[i] == s2[i]:\n    i += 1\n    if state:\n      c *= 2\n    else:\n      state = True\n  else:\n    i += 2\n    if state:\n      c *= 2\n      state = False\n    else:\n      c *= 3\nprint(c%1000000007)\n  \n  ```\n "
    },
    {
        "user_id": "u432098488",
        "problem_id": "p02767",
        "submission1_id": "s395283504",
        "code_content": "\nn = int(input())\nx = list(map(int, input().split()))\n\nmini, maxi = min(x), max(x)\nmin2, max2 = mini**2, maxi**2\nans = max2 if max2 > min2 else min2\n\nfor p in range(mini, maxi+1):\n  suma = 0\n  for z in x:\n    suma += (z-p)**2\n  if ans > suma:\n    ans = suma\n    \nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int, input().split()))\n\nmini, maxi = min(x), max(x)\nmin2, max2 = mini**2, maxi**2\nans = max2 if max2 > min2 else min2\n\nfor p in range(mini, maxi+1):\n  suma = 0\n  for z in x:\n    suma += (z-p)**2\n  if ans > suma:\n    ans = suma\n    \nprint(ans)```\n "
    },
    {
        "user_id": "u680851063",
        "problem_id": "p03087",
        "submission1_id": "s771549860",
        "code_content": "\nfrom itertools import accumulate\n\nn, q = map(int, input().split())\ns = list(input())\n\nz = []\nfor i in range(n-1):\n    if s[i] + s[i+1] == 'AC':\n        z.append(1)\n    else:\n        z.append(0)\n\nz = [0] + list(accumulate(z))\n\nfor j in range(q):\n    l, r =  map(int, input().split())\n    print(z[r-1] - z[l-1])\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\nn, q = map(int, input().split())\ns = list(input())\n\nz = []\nfor i in range(n-1):\n    if s[i] + s[i+1] == 'AC':\n        z.append(1)\n    else:\n        z.append(0)\n\nz = [0] + list(accumulate(z))\n\nfor j in range(q):\n    l, r =  map(int, input().split())\n    print(z[r-1] - z[l-1])\n```\n "
    },
    {
        "user_id": "u084357428",
        "problem_id": "p03943",
        "submission1_id": "s727177772",
        "code_content": "\na = [int(_) for _ in input().split()]\nprint('Yes' if a[0] == a[1] + a[2] else 'Yes' if a[1] == a[0] + a[2] else 'Yes' if a[2] == a[0] + a[1] else 'No')",
        "origin_generated_text": "\n```\na = [int(_) for _ in input().split()]\nprint('Yes' if a[0] == a[1] + a[2] else 'Yes' if a[1] == a[0] + a[2] else 'Yes' if a[2] == a[0] + a[1] else 'No')```\n "
    },
    {
        "user_id": "u740284863",
        "problem_id": "p04019",
        "submission1_id": "s332643124",
        "code_content": "\nk = str(input())\n\n\nn = 0\nw = 0\ns = 0\ne = 0\nfor i in range(len(k)):\n    if k[i] == \"N\":\n        n += 1\n    elif k[i] == \"W\":\n        w += 1\n    elif k[i] == \"S\":\n        s += 1\n    else:\n        e += 1\nif (n == 0 and s > 0) or (s == 0 and n > 0) or (e == 0 and w > 0) or (w == 0 and e > 0):\n    print(\"No\")\nelse:\n    print(\"Yes\")",
        "origin_generated_text": "\n```\nk = str(input())\n\n\nn = 0\nw = 0\ns = 0\ne = 0\nfor i in range(len(k)):\n    if k[i] == \"N\":\n        n += 1\n    elif k[i] == \"W\":\n        w += 1\n    elif k[i] == \"S\":\n        s += 1\n    else:\n        e += 1\nif (n == 0 and s > 0) or (s == 0 and n > 0) or (e == 0 and w > 0) or (w == 0 and e > 0):\n    print(\"No\")\nelse:\n    print(\"Yes\")```\n "
    },
    {
        "user_id": "u681444474",
        "problem_id": "p03625",
        "submission1_id": "s923626047",
        "code_content": "\n\nN=int(input())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\nans=[]\nfor i in range(N-2):\n    \n    if A[i]==A[i+1] and A[i]==A[i+2]:\n        ans.append(A[i])\n        if len(ans)==2:\n            break\n\nif len(ans)<=1:\n    print(0)\nelse:\n    print(ans[0]*ans[1])",
        "origin_generated_text": "\n```\n\nN=int(input())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\nans=[]\nfor i in range(N-2):\n    \n    if A[i]==A[i+1] and A[i]==A[i+2]:\n        ans.append(A[i])\n        if len(ans)==2:\n            break\n\nif len(ans)<=1:\n    print(0)\nelse:\n    print(ans[0]*ans[1])```\n "
    },
    {
        "user_id": "u528470578",
        "problem_id": "p02665",
        "submission1_id": "s914957160",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\n\nans, cnt, node = 0, sum(a), 1\nfor i in range(n + 1):\n    ans += node\n    cnt -= a[i]\n    node = min(cnt, (node - a[i]) * 2)\n    if node <= 0:\n        print(-1)\n        exit()\nelse:\n    print(ans)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\n\nans, cnt, node = 0, sum(a), 1\nfor i in range(n + 1):\n    ans += node\n    cnt -= a[i]\n    node = min(cnt, (node - a[i]) * 2)\n    if node <= 0:\n        print(-1)\n        exit()\nelse:\n    print(ans)\n```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03343",
        "submission1_id": "s794503661",
        "code_content": "\nimport bisect\nn,k,q = map(int,input().split())\na = list(map(int,input().split()))\nif q == 1:\n  print(0)\n  exit()\nls = [-1,n]\nb = sorted(((a[i],i) for i in range(n)))\nansls = [b[q-1][0]-b[0][0]]\nspace = [n]\nqc = q\nfor i,x in enumerate(b):\n  for j in range(i,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\n  ins = bisect.bisect_left(ls,b[j][1])\n  ls.insert(ins,x[1])\n  space = []\n  qc = q\n  for j in range(1,i+3):\n    space.append(ls[j]-ls[j-1]-1)\nprint(min(ansls))",
        "origin_generated_text": "\n```\nimport bisect\nn,k,q = map(int,input().split())\na = list(map(int,input().split()))\nif q == 1:\n  print(0)\n  exit()\nls = [-1,n]\nb = sorted(((a[i],i) for i in range(n)))\nansls = [b[q-1][0]-b[0][0]]\nspace = [n]\nqc = q\nfor i,x in enumerate(b):\n  for j in range(i,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\n  ins = bisect.bisect_left(ls,b[j][1])\n  ls.insert(ins,x[1])\n  space = []\n  qc = q\n  for j in range(1,i+3):\n    space.append(ls[j]-ls[j-1]-1)\nprint(min(ansls))```\n "
    },
    {
        "user_id": "u874333466",
        "problem_id": "p03106",
        "submission1_id": "s151490277",
        "code_content": "\nA, B, K = map(int,input().split())\n\nans = 0\n\nfor i in range(1, min(A, B) + 1, 1):\n  if A % i == 0 and B % i == 0:\n    ans += 1\n    if ans == K:\n      print(i)\n      exit()",
        "origin_generated_text": "\n```\nA, B, K = map(int,input().split())\n\nans = 0\n\nfor i in range(1, min(A, B) + 1, 1):\n  if A % i == 0 and B % i == 0:\n    ans += 1\n    if ans == K:\n      print(i)\n      exit()```\n "
    },
    {
        "user_id": "u462329577",
        "problem_id": "p03633",
        "submission1_id": "s161876678",
        "code_content": "\n\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n\ndef gcd(a,b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n  \n  g = gcd(a,b)\n  return int(a*b/g)\nans = T[0]\nfor i in range(1,len(T)):\n  ans = lcm(ans,T[i])\nprint(ans)\n",
        "origin_generated_text": "\n```\n\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n\ndef gcd(a,b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n  \n  g = gcd(a,b)\n  return int(a*b/g)\nans = T[0]\nfor i in range(1,len(T)):\n  ans = lcm(ans,T[i])\nprint(ans)\n```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s594644708",
        "code_content": "\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n    d2 = ra + rb\n\n    if d1 <= d2:\n        if d1 <= ra or d1 <= rb:\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n    d2 = ra + rb\n\n    if d1 <= d2:\n        if d1 <= ra or d1 <= rb:\n            print(2 if ra > rb else -2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u819048695",
        "problem_id": "p03714",
        "submission1_id": "s724831910",
        "code_content": "\nfrom heapq import heappop,heappush,heapify\nn=int(input())\na=list(map(int,input().split()))\nleft=[0]*n\nlst=a[:n]\ns=sum(lst)\nheapify(lst)\nfor i in range(n):\n    heappush(lst,a[n+i])\n    x=heappop(lst)\n    if i==0:\n        left[0]=s+a[n]-x\n    else:\n        left[i]=left[i-1]+a[n+i]-x\nleft=[s]+left\nright=[0]*n\nlst=[]\nfor i in range(2*n,3*n):\n    lst.append(-a[i])\ns=-sum(lst)\nheapify(lst)\nfor i in range(n):\n    heappush(lst,-a[2*n-1-i])\n    x=-heappop(lst)\n    if i==0:\n        right[n-1]=s+a[2*n-1]-x\n    else:\n        right[n-1-i]=right[n-i]+a[2*n-1-i]-x\nright+=[s]\nans=-float(\"inf\")\nfor i in range(2*n):\n    ans=max(ans,left[i]-right[i])\nprint(ans)",
        "origin_generated_text": "\n```\nfrom heapq import heappop,heappush,heapify\nn=int(input())\na=list(map(int,input().split()))\nleft=[0]*n\nlst=a[:n]\ns=sum(lst)\nheapify(lst)\nfor i in range(n):\n    heappush(lst,a[n+i])\n    x=heappop(lst)\n    if i==0:\n        left[0]=s+a[n]-x\n    else:\n        left[i]=left[i-1]+a[n+i]-x\nleft=[s]+left\nright=[0]*n\nlst=[]\nfor i in range(2*n,3*n):\n    lst.append(-a[i])\ns=-sum(lst)\nheapify(lst)\nfor i in range(n):\n    heappush(lst,-a[2*n-1-i])\n    x=-heappop(lst)\n    if i==0:\n        right[n-1]=s+a[2*n-1]-x\n    else:\n        right[n-1-i]=right[n-i]+a[2*n-1-i]-x\nright+=[s]\nans=-float(\"inf\")\nfor i in range(2*n):\n    ans=max(ans,left[i]-right[i])\nprint(ans)```\n "
    },
    {
        "user_id": "u514894322",
        "problem_id": "p02886",
        "submission1_id": "s119298528",
        "code_content": "\n\nn=int(input())\n*l,=map(int,input().split())\nans=0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    ans+=l[i]*l[j]\nprint(ans)",
        "origin_generated_text": "\n```\n\nn=int(input())\n*l,=map(int,input().split())\nans=0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    ans+=l[i]*l[j]\nprint(ans)```\n "
    },
    {
        "user_id": "u164898518",
        "problem_id": "p03475",
        "submission1_id": "s191604475",
        "code_content": "\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\n\nfor i in range(0, N-1):\n    t = S[i] + C[i]\n    for j in range(i, N-1):\n        if t <= S[j]:\n            t = S[j]\n        t += F[j] - t%F[j]\n        t += C[j]\n    print(t)\nprint(0)",
        "origin_generated_text": "\n```\nN = int(input())\nC = []\nS = []\nF = []\nfor i in range(N-1):\n    c, s, f = map(int, input().split())\n    C.append(c)\n    S.append(s)\n    F.append(f)\n\nfor i in range(0, N-1):\n    t = S[i] + C[i]\n    for j in range(i, N-1):\n        if t <= S[j]:\n            t = S[j]\n        t += F[j] - t%F[j]\n        t += C[j]\n    print(t)\nprint(0)```\n "
    },
    {
        "user_id": "u266014018",
        "problem_id": "p02665",
        "submission1_id": "s752377186",
        "code_content": "\ndef main():\n    import sys\n    import math\n    input = sys.stdin.buffer.readline\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if A[i] == 0:\n            print(-1)\n            exit(0)\n        if i == n-1:\n            ans += A[i]\n            break\n        if A[i] > 2**(n-i-1):\n            print(-1)\n            exit(0)\n        ans += A[i]\n        A[i+1] -= A[i]\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    import sys\n    import math\n    input = sys.stdin.buffer.readline\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if A[i] == 0:\n            print(-1)\n            exit(0)\n        if i == n-1:\n            ans += A[i]\n            break\n        if A[i] > 2**(n-i-1):\n            print(-1)\n            exit(0)\n        ans += A[i]\n        A[i+1] -= A[i]\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u316464887",
        "problem_id": "p03714",
        "submission1_id": "s062626531",
        "code_content": "\nimport heapq\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    fl = [i for i in A[:N]]\n    f = [sum(A[:N])]\n    heapq.heapify(fl)\n    ll = [-i for i in A[2*N:]]\n    l = [sum(A[2*N:])]\n    heapq.heapify(ll)\n    for i in range(N):\n        s = f[-1]\n        if A[N+i] > fl[0]:\n            s = s - fl[0] + A[N+i]\n            heapq.heappushpop(fl, A[N+i])\n        f.append(s)\n        s = l[-1]\n        if - A[2*N-1-i] > ll[0]:\n            s = s + ll[0] + A[2*N-1-i]\n            heapq.heappushpop(ll, -A[2*N-1-i])\n        l.append(s)\n    r = -10**100\n    for i in range(2*N):\n        r = max(r, f[i] - l[-1-i])\n    return r\nprint(main())\n",
        "origin_generated_text": "\n```\nimport heapq\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    fl = [i for i in A[:N]]\n    f = [sum(A[:N])]\n    heapq.heapify(fl)\n    ll = [-i for i in A[2*N:]]\n    l = [sum(A[2*N:])]\n    heapq.heapify(ll)\n    for i in range(N):\n        s = f[-1]\n        if A[N+i] > fl[0]:\n            s = s - fl[0] + A[N+i]\n            heapq.heappushpop(fl, A[N+i])\n        f.append(s)\n        s = l[-1]\n        if - A[2*N-1-i] > ll[0]:\n            s = s + ll[0] + A[2*N-1-i]\n            heapq.heappushpop(ll, -A[2*N-1-i])\n        l.append(s)\n    r = -10**100\n    for i in range(2*N):\n        r = max(r, f[i] - l[-1-i])\n    return r\nprint(main())\n```\n "
    },
    {
        "user_id": "u572002343",
        "problem_id": "p02880",
        "submission1_id": "s478144128",
        "code_content": "\navail_numbers = [(i + 1) * (j + 1) for i in range(9) for j in range(9)]\n\nif int(input()) in avail_numbers:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n",
        "origin_generated_text": "\n```\navail_numbers = [(i + 1) * (j + 1) for i in range(9) for j in range(9)]\n\nif int(input()) in avail_numbers:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n```\n "
    },
    {
        "user_id": "u433532588",
        "problem_id": "p02922",
        "submission1_id": "s675601682",
        "code_content": "\n\n\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\n\n\nA, B = map(int, input().split())\n\nif A == 1:\n    print(B)\n    exit()\n\ncount = 0\nwhile True:\n    count += 1\n    if A * count >= B:\n        print(count)\n        exit()\n\n    B -= A * count",
        "origin_generated_text": "\n```\n\n\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\n\n\nA, B = map(int, input().split())\n\nif A == 1:\n    print(B)\n    exit()\n\ncount = 0\nwhile True:\n    count += 1\n    if A * count >= B:\n        print(count)\n        exit()\n\n    B -= A * count```\n "
    },
    {
        "user_id": "u125666426",
        "problem_id": "p03264",
        "submission1_id": "s041059636",
        "code_content": "\nimport math\n\nK = int(input())\nif K % 2 == 0:\n    print((K \nelse:\n    print((K ",
        "origin_generated_text": "\n```\nimport math\n\nK = int(input())\nif K % 2 == 0:\n    print((K \nelse:\n    print((K ```\n "
    },
    {
        "user_id": "u252729807",
        "problem_id": "p04019",
        "submission1_id": "s875825842",
        "code_content": "\ns = input()\nif 'N' in s and 'W' in s and 'S' in s and 'E' in s:\n    print('Yes')\nelif 'N' in s and 'W' in s and 'S' not in s and 'E' not in s:\n    print('Yes')\nelif 'N' not in s and 'W' not in s and 'S' in s and 'E' in s:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\ns = input()\nif 'N' in s and 'W' in s and 'S' in s and 'E' in s:\n    print('Yes')\nelif 'N' in s and 'W' in s and 'S' not in s and 'E' not in s:\n    print('Yes')\nelif 'N' not in s and 'W' not in s and 'S' in s and 'E' in s:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u941407962",
        "problem_id": "p03343",
        "submission1_id": "s882685265",
        "code_content": "\nN, K, Q = map(int, input().split())\nX = list(map(int, input().split()))\n\nr = 10**10\nfor y in X:\n    tmp = []\n    tmp2 = []\n    for x in X:\n        if x < y:\n            tmp.sort()\n            tn = len(tmp)\n            if tn-K+1 >= 0:\n                tmp2 += tmp[:tn-K+1]\n            tmp = []\n            continue\n        tmp.append(x)\n    tmp2.sort()\n    if len(tmp2) >= Q:\n        r = min(r, tmp2[Q-1] - y)\nprint(r)\n",
        "origin_generated_text": "\n```\nN, K, Q = map(int, input().split())\nX = list(map(int, input().split()))\n\nr = 10**10\nfor y in X:\n    tmp = []\n    tmp2 = []\n    for x in X:\n        if x < y:\n            tmp.sort()\n            tn = len(tmp)\n            if tn-K+1 >= 0:\n                tmp2 += tmp[:tn-K+1]\n            tmp = []\n            continue\n        tmp.append(x)\n    tmp2.sort()\n    if len(tmp2) >= Q:\n        r = min(r, tmp2[Q-1] - y)\nprint(r)\n```\n "
    },
    {
        "user_id": "u261103969",
        "problem_id": "p03952",
        "submission1_id": "s069861249",
        "code_content": "\nimport sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    n, x = map(int, readline().split())\n    ans = [0] * (2 * n - 1)\n\n    if x == 1 or x == (2 * n - 1):\n        print(\"No\")\n        return\n\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n        else:\n            ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n    ans[n] = x\n\n    for i in range(n + 1, 2 * n):\n        if i % 2 == 0:\n            ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n        else:\n            ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n    print(\"Yes\")\n    print(*ans, sep=\"\\n\")\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\nimport sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    n, x = map(int, readline().split())\n    ans = [0] * (2 * n - 1)\n\n    if x == 1 or x == (2 * n - 1):\n        print(\"No\")\n        return\n\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n        else:\n            ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n    ans[n] = x\n\n    for i in range(n + 1, 2 * n):\n        if i % 2 == 0:\n            ans[i - 1] = (x - 1 + abs(n - i)) % (2 * n - 1) + 1\n        else:\n            ans[i - 1] = (x - 1 - abs(n - i)) % (2 * n - 1) + 1\n    print(\"Yes\")\n    print(*ans, sep=\"\\n\")\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u019685451",
        "problem_id": "p02633",
        "submission1_id": "s030099739",
        "code_content": "\nX = int(input())\n\nfor k in range(1, 361):\n    if ((180 - X) * k) % 360 == 0 or (X * k) % 360 == 0:\n        print(k)\n        break",
        "origin_generated_text": "\n```\nX = int(input())\n\nfor k in range(1, 361):\n    if ((180 - X) * k) % 360 == 0 or (X * k) % 360 == 0:\n        print(k)\n        break```\n "
    },
    {
        "user_id": "u389910364",
        "problem_id": "p03972",
        "submission1_id": "s806612982",
        "code_content": "\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\nans = 0\nfor i in range(W):\n    if i < H and P[i] < Q[i]:\n        ans += P[i] * (i + 1)\n    else:\n        ans += Q[i] * (W - i)\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nW, H = list(map(int, sys.stdin.readline().split()))\nP = [int(sys.stdin.readline()) for _ in range(W)]\nQ = [int(sys.stdin.readline()) for _ in range(H)]\n\nP.sort()\nQ.sort()\n\nans = 0\nfor i in range(W):\n    if i < H and P[i] < Q[i]:\n        ans += P[i] * (i + 1)\n    else:\n        ans += Q[i] * (W - i)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u936985471",
        "problem_id": "p03970",
        "submission1_id": "s479565829",
        "code_content": "\na=\"CODEFESTIVAL2016\"\ns=input()\nans=0\nfor i in range(len(a)):\n  if a[i]!=s[i]:\n    ans+=1\nprint(ans)",
        "origin_generated_text": "\n```\na=\"CODEFESTIVAL2016\"\ns=input()\nans=0\nfor i in range(len(a)):\n  if a[i]!=s[i]:\n    ans+=1\nprint(ans)```\n "
    },
    {
        "user_id": "u142023109",
        "problem_id": "p03796",
        "submission1_id": "s017517087",
        "code_content": "\nN = int(input())\n\nans = 1\nfor i in range(1,N+1):\n    ans = (ans%(1000000007)) * i %(1000000007)\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\n\nans = 1\nfor i in range(1,N+1):\n    ans = (ans%(1000000007)) * i %(1000000007)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u238876549",
        "problem_id": "p03303",
        "submission1_id": "s218713674",
        "code_content": "\n\nstrings=[input() for string in range(2)]\nstring=strings[0]\nnum=int(strings[1])\n\nfor i in range(0,len(string),num):\n    print(string[i:i+num])",
        "origin_generated_text": "\n```\n\nstrings=[input() for string in range(2)]\nstring=strings[0]\nnum=int(strings[1])\n\nfor i in range(0,len(string),num):\n    print(string[i:i+num])```\n "
    },
    {
        "user_id": "u925364229",
        "problem_id": "p03096",
        "submission1_id": "s123383134",
        "code_content": "\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\n\nfor i in range(N):\n    C[i] = int(input())\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(1,N):\n    if C[i] == C[i-1]:\n        dp[i] = dp[i-1]\n        continue\n    dp[i] = dp[i-1]\n    for j in range(i):\n        if C[i] == C[j] and j < i:\n            dp[i] += dp[j]\n            dp[i] %= mod\n\nprint(dp[N-1] % mod)",
        "origin_generated_text": "\n```\nN = int(input())\nC = [0] * N\nmod = 10 ** 9 + 7\n\nfor i in range(N):\n    C[i] = int(input())\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(1,N):\n    if C[i] == C[i-1]:\n        dp[i] = dp[i-1]\n        continue\n    dp[i] = dp[i-1]\n    for j in range(i):\n        if C[i] == C[j] and j < i:\n            dp[i] += dp[j]\n            dp[i] %= mod\n\nprint(dp[N-1] % mod)```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03959",
        "submission1_id": "s748200265",
        "code_content": "\nn=int(input())\nt=[int(j) for j in input().split()]\na=[int(j) for j in input().split()]\ntmp=0\nl=[]\nfor i in t:\n    if tmp<i:\n        l.append(-i)\n        tmp=i\n    else:\n        l.append(i)\ntmp=0\nans=1\nmod=10**9+7\nfor i in range(n)[::-1]:\n    if tmp<a[i]:\n        if l[i]>a[i]:\n            print(0)\n            exit()\n        elif l[i]<a[i]:\n            if l[i]>0:\n                print(0)\n                exit()\n    else:\n        if l[i]>0:\n            ans=(ans*min(a[i],l[i]))%mod\n    tmp=a[i]\nprint(ans)",
        "origin_generated_text": "\n```\nn=int(input())\nt=[int(j) for j in input().split()]\na=[int(j) for j in input().split()]\ntmp=0\nl=[]\nfor i in t:\n    if tmp<i:\n        l.append(-i)\n        tmp=i\n    else:\n        l.append(i)\ntmp=0\nans=1\nmod=10**9+7\nfor i in range(n)[::-1]:\n    if tmp<a[i]:\n        if l[i]>a[i]:\n            print(0)\n            exit()\n        elif l[i]<a[i]:\n            if l[i]>0:\n                print(0)\n                exit()\n    else:\n        if l[i]>0:\n            ans=(ans*min(a[i],l[i]))%mod\n    tmp=a[i]\nprint(ans)```\n "
    },
    {
        "user_id": "u923172145",
        "problem_id": "p02633",
        "submission1_id": "s668552665",
        "code_content": "\nX = int(input())\n\nK = 1\ndire = X\nwhile True:\n  if (dire % 180) == 90:\n    break\n  K+=1\n  dire+=X\n\n  \nprint(K)",
        "origin_generated_text": "\n```\nX = int(input())\n\nK = 1\ndire = X\nwhile True:\n  if (dire % 180) == 90:\n    break\n  K+=1\n  dire+=X\n\n  \nprint(K)```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p00026",
        "submission1_id": "s344383441",
        "code_content": "\nt = [[0 for i in range(10)] for j in range(10)]\ncase1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\ncase2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\ncase3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    for c in [case1, case2, case3][:s]:\n        for _x, _y in c:\n            try:\n                t[y+_y][x+_x] += 1\n            except IndexError:\n                continue\nprint(sum(1 for l in t for v in l if not v))\nprint(max(v for l in t for v in l))",
        "origin_generated_text": "\n```\nt = [[0 for i in range(10)] for j in range(10)]\ncase1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\ncase2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\ncase3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    for c in [case1, case2, case3][:s]:\n        for _x, _y in c:\n            try:\n                t[y+_y][x+_x] += 1\n            except IndexError:\n                continue\nprint(sum(1 for l in t for v in l if not v))\nprint(max(v for l in t for v in l))```\n "
    },
    {
        "user_id": "u480200603",
        "problem_id": "p02912",
        "submission1_id": "s676564889",
        "code_content": "\nimport heapq, math\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nar = [-i for i in a]\nheapq.heapify(ar)\n\nwhile m > 1:\n    discount = heapq.heappop(ar)\n    heapq.heappush(ar, discount/2)\n    m -= 1\n\nprint(math.floor(-sum(ar)))\n",
        "origin_generated_text": "\n```\nimport heapq, math\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nar = [-i for i in a]\nheapq.heapify(ar)\n\nwhile m > 1:\n    discount = heapq.heappop(ar)\n    heapq.heappush(ar, discount/2)\n    m -= 1\n\nprint(math.floor(-sum(ar)))\n```\n "
    },
    {
        "user_id": "u977661421",
        "problem_id": "p03760",
        "submission1_id": "s551383921",
        "code_content": "\n\no = list(input())\ne = list(input())\n\nfor i in range(len(o)):\n    print(o[i], end = '')\n    print(e[i], end = '')\n\n",
        "origin_generated_text": "\n```\n\no = list(input())\ne = list(input())\n\nfor i in range(len(o)):\n    print(o[i], end = '')\n    print(e[i], end = '')\n\n```\n "
    },
    {
        "user_id": "u504256702",
        "problem_id": "p02730",
        "submission1_id": "s123530775",
        "code_content": "\nS = input()\nn = len(S)\n\n\nif S[:int((n-1)/2)] == S[:int((n-1)/2)][::-1] and S[int((n+1)/2):]== S[int((n+1)/2):][::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\nS = input()\nn = len(S)\n\n\nif S[:int((n-1)/2)] == S[:int((n-1)/2)][::-1] and S[int((n+1)/2):]== S[int((n+1)/2):][::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u552533086",
        "problem_id": "p02699",
        "submission1_id": "s799973620",
        "code_content": "\nS, W = map(int, input().split())\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")",
        "origin_generated_text": "\n```\nS, W = map(int, input().split())\n\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")```\n "
    },
    {
        "user_id": "u310678820",
        "problem_id": "p04017",
        "submission1_id": "s009716954",
        "code_content": "\nfrom bisect import bisect_right, bisect_left\nN = int(input())\nx = list(map(int, input().split()))\nL = int(input())\nn = N.bit_length()+1\nnext_hotel = [[0]*n for _ in range(N)]\nfor i in range(N):\n    index = bisect_right(x, x[i]+L)-1\n    next_hotel[i][0] = index\nfor i in range(1, n):\n    for j in range(N):\n        next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\ndef count(a, b):\n    if a>b:\n        a, b = b, a\n    res = 0\n    for i in range(n):\n        if a == b:\n            return  res\n        c = bisect_left(next_hotel[a], b)-1\n        a = next_hotel[a][c]\n        res+=2**c\nQ = int(input())\nfor _ in range(Q):\n    a, b = map(int, input().split())\n    print(count(a-1, b-1))",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right, bisect_left\nN = int(input())\nx = list(map(int, input().split()))\nL = int(input())\nn = N.bit_length()+1\nnext_hotel = [[0]*n for _ in range(N)]\nfor i in range(N):\n    index = bisect_right(x, x[i]+L)-1\n    next_hotel[i][0] = index\nfor i in range(1, n):\n    for j in range(N):\n        next_hotel[j][i] = next_hotel[next_hotel[j][i-1]][i-1]\ndef count(a, b):\n    if a>b:\n        a, b = b, a\n    res = 0\n    for i in range(n):\n        if a == b:\n            return  res\n        c = bisect_left(next_hotel[a], b)-1\n        a = next_hotel[a][c]\n        res+=2**c\nQ = int(input())\nfor _ in range(Q):\n    a, b = map(int, input().split())\n    print(count(a-1, b-1))```\n "
    },
    {
        "user_id": "u663958857",
        "problem_id": "p02917",
        "submission1_id": "s459864427",
        "code_content": "\ndef main():\n    n = int(input())\n    array = list(map(int, input().split()))\n    sum_value = 0\n    for i in range(n - 1):\n        if array[i] >= array[i + 1]:\n            sum_value += array[i]\n        else:\n            array[i + 1] = array[i]\n            sum_value += array[i]\n    print(sum_value)\n\nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\ndef main():\n    n = int(input())\n    array = list(map(int, input().split()))\n    sum_value = 0\n    for i in range(n - 1):\n        if array[i] >= array[i + 1]:\n            sum_value += array[i]\n        else:\n            array[i + 1] = array[i]\n            sum_value += array[i]\n    print(sum_value)\n\nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u168333670",
        "problem_id": "p02880",
        "submission1_id": "s634521435",
        "code_content": "\nN = int(input())\n\nable = False\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if N == i * j:\n            able = True\n            break\n    if able == True:\n        break\n\nif able == True:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN = int(input())\n\nable = False\nfor i in range(1, 10):\n    for j in range(1, 10):\n        if N == i * j:\n            able = True\n            break\n    if able == True:\n        break\n\nif able == True:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u927357863",
        "problem_id": "p02640",
        "submission1_id": "s241914799",
        "code_content": "\nX, Y = map(int, input().split())\n\ncrane = (4 * X - Y) / 2\n\n\ndef is_integer_num(n):\n    if isinstance(n, int):\n        return True\n    if isinstance(n, float):\n        return n.is_integer()\n    return False\n\n\nif is_integer_num(crane) and crane >= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nX, Y = map(int, input().split())\n\ncrane = (4 * X - Y) / 2\n\n\ndef is_integer_num(n):\n    if isinstance(n, int):\n        return True\n    if isinstance(n, float):\n        return n.is_integer()\n    return False\n\n\nif is_integer_num(crane) and crane >= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u161164709",
        "problem_id": "p02580",
        "submission1_id": "s251761174",
        "code_content": "\n\n\nh, w, m = map(int, input().split())\nhw_array = [list(map(int, input().split())) for _ in range(m)]\n\nh_array = [0]*h\nw_array = [0]*w\n\nfor hw in hw_array:\n    h, w = hw\n    h_array[h - 1] += 1\n    w_array[w - 1] += 1\n\nh_max = max(h_array)\nh_argmax_array = [i for i, v in enumerate(h_array) if v == h_max]\nw_max = max(w_array)\nw_argmax_array = [j for j, v in enumerate(w_array) if v == w_max]\n\nif len(h_argmax_array) > 1:\n    ans = h_max + w_max\nelse:\n    ans = h_max + w_max - 1\n\nif len(w_argmax_array) > 1:\n    ans -= 1\n\nprint(ans)",
        "origin_generated_text": "\n```\n\n\nh, w, m = map(int, input().split())\nhw_array = [list(map(int, input().split())) for _ in range(m)]\n\nh_array = [0]*h\nw_array = [0]*w\n\nfor hw in hw_array:\n    h, w = hw\n    h_array[h - 1] += 1\n    w_array[w - 1] += 1\n\nh_max = max(h_array)\nh_argmax_array = [i for i, v in enumerate(h_array) if v == h_max]\nw_max = max(w_array)\nw_argmax_array = [j for j, v in enumerate(w_array) if v == w_max]\n\nif len(h_argmax_array) > 1:\n    ans = h_max + w_max\nelse:\n    ans = h_max + w_max - 1\n\nif len(w_argmax_array) > 1:\n    ans -= 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u247976584",
        "problem_id": "p02281",
        "submission1_id": "s707945101",
        "code_content": "\nfrom collections import namedtuple\n\nclass TreeWalk:\n    def __init__(self, t):\n        self.t = t\n\n    def preParse(self, u):\n        if u == -1:\n            return \n        print(\" \", str(u), end = \"\")\n        self.preParse(self.t[u].l)\n        self.preParse(self.t[u].r)\n\n    def inParse(self, u):\n        if u == -1:\n            return \n        self.inParse(self.t[u].l)\n        print(\" \", str(u), end = \"\")\n        self.inParse(self.t[u].r)\n\n    def postParse(self, u):\n        if u == -1:\n            return \n        self.postParse(self.t[u].l)\n        self.postParse(self.t[u].r)\n        print(\" \", str(u), end = \"\")\n    \nif __name__ == '__main__':\n    n = int(input().rstrip())\n    Node = namedtuple('Node', ['p', 'l', 'r'])\n    t = [Node(-1, -1, -1)] * n\n    root = -1\n    for i in range(n):\n        v, l, r = [int(i) for i in input().rstrip().split(\" \")]\n        t[v] = t[v]._replace(l = l, r = r)\n        if l != -1:\n            t[l] = t[l]._replace(p = v)\n        if r != -1:\n            t[r] = t[r]._replace(p = v)\n    for i in range(n):\n        if (t[i].p == -1):\n            root = i\n\n    x = TreeWalk(t)\n    print(\"Preorder\")\n    x.preParse(root)\n    print()\n    print(\"Inorder\")\n    x.inParse(root)\n    print()\n    print(\"Postorder\")\n    x.postParse(root)",
        "origin_generated_text": "\n```\nfrom collections import namedtuple\n\nclass TreeWalk:\n    def __init__(self, t):\n        self.t = t\n\n    def preParse(self, u):\n        if u == -1:\n            return \n        print(\" \", str(u), end = \"\")\n        self.preParse(self.t[u].l)\n        self.preParse(self.t[u].r)\n\n    def inParse(self, u):\n        if u == -1:\n            return \n        self.inParse(self.t[u].l)\n        print(\" \", str(u), end = \"\")\n        self.inParse(self.t[u].r)\n\n    def postParse(self, u):\n        if u == -1:\n            return \n        self.postParse(self.t[u].l)\n        self.postParse(self.t[u].r)\n        print(\" \", str(u), end = \"\")\n    \nif __name__ == '__main__':\n    n = int(input().rstrip())\n    Node = namedtuple('Node', ['p', 'l', 'r'])\n    t = [Node(-1, -1, -1)] * n\n    root = -1\n    for i in range(n):\n        v, l, r = [int(i) for i in input().rstrip().split(\" \")]\n        t[v] = t[v]._replace(l = l, r = r)\n        if l != -1:\n            t[l] = t[l]._replace(p = v)\n        if r != -1:\n            t[r] = t[r]._replace(p = v)\n    for i in range(n):\n        if (t[i].p == -1):\n            root = i\n\n    x = TreeWalk(t)\n    print(\"Preorder\")\n    x.preParse(root)\n    print()\n    print(\"Inorder\")\n    x.inParse(root)\n    print()\n    print(\"Postorder\")\n    x.postParse(root)```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s407361684",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u264632995",
        "problem_id": "p02407",
        "submission1_id": "s657346479",
        "code_content": "\ninput()\na = input().split()\n \na.reverse()\nprint(\" \".join(a))",
        "origin_generated_text": "\n```\ninput()\na = input().split()\n \na.reverse()\nprint(\" \".join(a))```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03264",
        "submission1_id": "s868645901",
        "code_content": "\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\ndef lcm(x, y):\n    return (x * y) \n\nif __name__ == '__main__':\n    a = [int(i) for i in input().split()]\n\n    if a[0] %2 ==1:\n        print((a[0]*(a[0]-1))\n    else:\n        print((a[0]*(a[0]-1))\n",
        "origin_generated_text": "\n```\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\ndef lcm(x, y):\n    return (x * y) \n\nif __name__ == '__main__':\n    a = [int(i) for i in input().split()]\n\n    if a[0] %2 ==1:\n        print((a[0]*(a[0]-1))\n    else:\n        print((a[0]*(a[0]-1))\n```\n "
    },
    {
        "user_id": "u044632922",
        "problem_id": "p03264",
        "submission1_id": "s294311700",
        "code_content": "\nk=int(input())\nif k%2==0:\n  print(int(k/2*k/2))\nelse:\n  print(int(((k-1)/2+1)*(k-1)/2))",
        "origin_generated_text": "\n```\nk=int(input())\nif k%2==0:\n  print(int(k/2*k/2))\nelse:\n  print(int(((k-1)/2+1)*(k-1)/2))```\n "
    },
    {
        "user_id": "u546074985",
        "problem_id": "p03303",
        "submission1_id": "s842855549",
        "code_content": "\nst = input()\nskpe = int(input())\nst_len = len(st)\ncount = st_len \ntop_list = []\n\nfor i in range(count):\n    top_list.append(st[i * skpe:(i + 1) * skpe])\n\n\nfor x in top_list:\n    try:\n        print(x, end=\"\")\n    except IndexError:\n        pass",
        "origin_generated_text": "\n```\nst = input()\nskpe = int(input())\nst_len = len(st)\ncount = st_len \ntop_list = []\n\nfor i in range(count):\n    top_list.append(st[i * skpe:(i + 1) * skpe])\n\n\nfor x in top_list:\n    try:\n        print(x, end=\"\")\n    except IndexError:\n        pass```\n "
    },
    {
        "user_id": "u397384480",
        "problem_id": "p03965",
        "submission1_id": "s760305680",
        "code_content": "\nimport bisect\nimport collections\nimport copy\nimport functools\nimport heapq\nimport math\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\ninput = sys.stdin.readline\nMOD = 10**9+7\n\ns = list(input().rstrip())\ng = 0\np = 0\nres = []\nans = 0\n\nfor i in range(len(s)):\n    c = g-p\n    if s[i] == \"g\":\n        if c > 0:\n            \n            p += 1\n            ans += 1\n        else:\n            \n            g += 1\n    else:\n        if c > 0:\n            \n            g += 1\n            ans += 1\n        else:\n            \n            p += 1\nprint(ans)",
        "origin_generated_text": "\n```\nimport bisect\nimport collections\nimport copy\nimport functools\nimport heapq\nimport math\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\ninput = sys.stdin.readline\nMOD = 10**9+7\n\ns = list(input().rstrip())\ng = 0\np = 0\nres = []\nans = 0\n\nfor i in range(len(s)):\n    c = g-p\n    if s[i] == \"g\":\n        if c > 0:\n            \n            p += 1\n            ans += 1\n        else:\n            \n            g += 1\n    else:\n        if c > 0:\n            \n            g += 1\n            ans += 1\n        else:\n            \n            p += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u282652245",
        "problem_id": "p02718",
        "submission1_id": "s238116946",
        "code_content": "\nNM = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ncount = 0\nsumA = sum(A)\nboard = int(sumA / NM[1])\n\n\n\n\n\nfor i in range(len(A)):\n    if A[i] >= board:\n        count += 1\n    else:\n        continue\n\n\nif count >= NM[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n",
        "origin_generated_text": "\n```\nNM = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\ncount = 0\nsumA = sum(A)\nboard = int(sumA / NM[1])\n\n\n\n\n\nfor i in range(len(A)):\n    if A[i] >= board:\n        count += 1\n    else:\n        continue\n\n\nif count >= NM[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p03079",
        "submission1_id": "s167662321",
        "code_content": "\nA = list(map(int,input().split()))\nif A[0] + A[1] > A[2] and A[1] + A[2] > A[0] and A[2] + A[0] > A[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
        "origin_generated_text": "\n```\nA = list(map(int,input().split()))\nif A[0] + A[1] > A[2] and A[1] + A[2] > A[0] and A[2] + A[0] > A[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")```\n "
    },
    {
        "user_id": "u430771494",
        "problem_id": "p03479",
        "submission1_id": "s792242129",
        "code_content": "\nX,Y=list(map(int, input().split()))\npresent=[X]\ni=0\nwhile present[i]<=Y:\n    present.append(present[i]*2)\n    i=i+1\n\nprint(len(present)-1)",
        "origin_generated_text": "\n```\nX,Y=list(map(int, input().split()))\npresent=[X]\ni=0\nwhile present[i]<=Y:\n    present.append(present[i]*2)\n    i=i+1\n\nprint(len(present)-1)```\n "
    },
    {
        "user_id": "u095478438",
        "problem_id": "p02959",
        "submission1_id": "s952938654",
        "code_content": "\nN = int(input())\nA_list = list(map(int, input().split()))\nB_list = list(map(int, input().split()))\n\ntaos = 0\nkeep = 0\n\nfor i, (a, b) in enumerate(zip(A_list, B_list)):\n  if i == 0:\n    if a <= b:\n      taos += b\n    else:\n      taos += a\n  else:\n    if (a + keep) >= (b + keep):\n      taos += (b + keep)\n      keep = (a + keep) - (b + keep)\n    else:\n      taos += (a + keep)\n      keep = 0\n\nprint(taos)",
        "origin_generated_text": "\n```\nN = int(input())\nA_list = list(map(int, input().split()))\nB_list = list(map(int, input().split()))\n\ntaos = 0\nkeep = 0\n\nfor i, (a, b) in enumerate(zip(A_list, B_list)):\n  if i == 0:\n    if a <= b:\n      taos += b\n    else:\n      taos += a\n  else:\n    if (a + keep) >= (b + keep):\n      taos += (b + keep)\n      keep = (a + keep) - (b + keep)\n    else:\n      taos += (a + keep)\n      keep = 0\n\nprint(taos)```\n "
    },
    {
        "user_id": "u583285098",
        "problem_id": "p02665",
        "submission1_id": "s636931553",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nlast = A[-1]\ncount = last\nroot = 1\nfor i in range(N):\n  if root > A[i+1]:\n    print(-1)\n    break\n  root = (root-A[i])*2\n  if root < A[i+1]:\n    print(-1)\n    break\n  count+=root\nelse:\n  print(count)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nlast = A[-1]\ncount = last\nroot = 1\nfor i in range(N):\n  if root > A[i+1]:\n    print(-1)\n    break\n  root = (root-A[i])*2\n  if root < A[i+1]:\n    print(-1)\n    break\n  count+=root\nelse:\n  print(count)\n```\n "
    },
    {
        "user_id": "u508141157",
        "problem_id": "p03760",
        "submission1_id": "s034953432",
        "code_content": "\no=list(input())\ne=list(input())[::-1]\nfor i,j in zip(o,e):print(i+j,end=\"\")",
        "origin_generated_text": "\n```\no=list(input())\ne=list(input())[::-1]\nfor i,j in zip(o,e):print(i+j,end=\"\")```\n "
    },
    {
        "user_id": "u138577439",
        "problem_id": "p02243",
        "submission1_id": "s737418505",
        "code_content": "\nV=int(input())\n\nG=[[] for i in range(V)]\nd=[1001001001 for i in range(V)]\n\nimport heapq\n\ndef dijkstra(s):\n    q=[]\n    d[s]=0\n    heapq.heappush(q,(0, s))\n    \n    while(len(q)):\n        p=heapq.heappop(q)\n        v=p[1]\n        if d[v]<p[0]:\n            continue\n        for e in G[v]:\n            if d[e[0]]>d[v]+e[1]:\n                d[e[0]]=d[v]+e[1]\n                \n                heapq.heappush(q, (d[e[0]], e[0]))\n\nimport sys\nfor l in sys.stdin:\n    l=list(map(int,l.split()))\n    u=l[0]\n    k=l[1]\n    G[u]=zip(*[iter(l[2:])]*2)\n    \ndijkstra(0)\nfor i in range(V):\n    print(i, d[i])\n    \n\n    ",
        "origin_generated_text": "\n```\nV=int(input())\n\nG=[[] for i in range(V)]\nd=[1001001001 for i in range(V)]\n\nimport heapq\n\ndef dijkstra(s):\n    q=[]\n    d[s]=0\n    heapq.heappush(q,(0, s))\n    \n    while(len(q)):\n        p=heapq.heappop(q)\n        v=p[1]\n        if d[v]<p[0]:\n            continue\n        for e in G[v]:\n            if d[e[0]]>d[v]+e[1]:\n                d[e[0]]=d[v]+e[1]\n                \n                heapq.heappush(q, (d[e[0]], e[0]))\n\nimport sys\nfor l in sys.stdin:\n    l=list(map(int,l.split()))\n    u=l[0]\n    k=l[1]\n    G[u]=zip(*[iter(l[2:])]*2)\n    \ndijkstra(0)\nfor i in range(V):\n    print(i, d[i])\n    \n\n    ```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s571426162",
        "code_content": "\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= ra + rb:\n        if ra > rb:\n            print(2)\n        elif ra < rb:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= ra + rb:\n        if ra > rb:\n            print(2)\n        elif ra < rb:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u854175276",
        "problem_id": "p02886",
        "submission1_id": "s348742076",
        "code_content": "\nn = int(input())\nd = list(map(int, input().split()))\nans = 0\nfor i in range(n - 1):\n  for j in range(i + 1, n):\n    ans += d[i] * d[j]\nprint(ans)\n    ",
        "origin_generated_text": "\n```\nn = int(input())\nd = list(map(int, input().split()))\nans = 0\nfor i in range(n - 1):\n  for j in range(i + 1, n):\n    ans += d[i] * d[j]\nprint(ans)\n    ```\n "
    },
    {
        "user_id": "u867763103",
        "problem_id": "p02887",
        "submission1_id": "s442780225",
        "code_content": "\ndef solve():\n    N = int(input())\n    S = input()\n\n    ans = 1\n    pre = S[0]\n    for i in range(1,int(len(S))):\n        if S[i] != pre:\n            ans += 1\n            pre = S[i]\n    \n    print(ans)\n\nsolve()",
        "origin_generated_text": "\n```\ndef solve():\n    N = int(input())\n    S = input()\n\n    ans = 1\n    pre = S[0]\n    for i in range(1,int(len(S))):\n        if S[i] != pre:\n            ans += 1\n            pre = S[i]\n    \n    print(ans)\n\nsolve()```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s298574570",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent-1])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    h = 0\n    for x in t:\n        h = (h * 26 + cx(x)) % MOD\n\n    ans = 0\n    for i in range(lens-lent+1):\n        if i >= lent:\n            h -= cx(s[i-lent]) * pow(26,lent-1,MOD)\n        h = (h * 26 + cx(s[i+lent-1])) % MOD\n        if h == 0:\n            ans = max(ans,i+1)\n    print(ans)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u214434454",
        "problem_id": "p03477",
        "submission1_id": "s963705782",
        "code_content": "\na, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print(\"Left\")\nelif a + b == c + d:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nif a + b > c + d:\n    print(\"Left\")\nelif a + b == c + d:\n    print(\"Balanced\")\nelse:\n    print(\"Right\")```\n "
    },
    {
        "user_id": "u396391104",
        "problem_id": "p03970",
        "submission1_id": "s771540514",
        "code_content": "\nS = input()\nT = \"CODEFESTIVAL2016\"\nans = 0\n\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    ans += 1\n\nprint(ans)",
        "origin_generated_text": "\n```\nS = input()\nT = \"CODEFESTIVAL2016\"\nans = 0\n\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    ans += 1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u905510147",
        "problem_id": "p03633",
        "submission1_id": "s242129472",
        "code_content": "\nimport sys\nsys.setrecursionlimit(100000)\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nlcm = 1\nfor i in T:\n    lcm = lcm * i / gcd(lcm, i)\n\nlcm = int(lcm)\n\nprint(lcm)",
        "origin_generated_text": "\n```\nimport sys\nsys.setrecursionlimit(100000)\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nlcm = 1\nfor i in T:\n    lcm = lcm * i / gcd(lcm, i)\n\nlcm = int(lcm)\n\nprint(lcm)```\n "
    },
    {
        "user_id": "u115877451",
        "problem_id": "p03477",
        "submission1_id": "s765001388",
        "code_content": "\na,b,c,d=map(int,input().split())\nif a+b>c+d:\n  print('Left')\nelif (a+b)==(c+d):\n  print('Balanced')\nelse:\n  print('Right')\n ",
        "origin_generated_text": "\n```\na,b,c,d=map(int,input().split())\nif a+b>c+d:\n  print('Left')\nelif (a+b)==(c+d):\n  print('Balanced')\nelse:\n  print('Right')\n ```\n "
    },
    {
        "user_id": "u688055251",
        "problem_id": "p03080",
        "submission1_id": "s739370397",
        "code_content": "\nN=int(input())\ns=list(input())\ny=0\nv=0\nfor i in s:\n    if i=='R':\n        y+=1\n    elif i=='B':\n        v+=1\nif y>v:\n    print('Yes')\nelif y==v:\n    print('No')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN=int(input())\ns=list(input())\ny=0\nv=0\nfor i in s:\n    if i=='R':\n        y+=1\n    elif i=='B':\n        v+=1\nif y>v:\n    print('Yes')\nelif y==v:\n    print('No')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03752",
        "submission1_id": "s127943507",
        "code_content": "\nimport copy\n\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\n\nans = [10 ** 12 for i in range(2 ** (N - 1))]\nseen = 1  \n\nfor i in range(2 ** (N - 1)):\n  AA = copy.deepcopy(A)\n  cost = 0\n  for j in range(N - 1):\n    m = max(AA[:j + 1])\n    a = AA[j + 1]\n    if ((i >> j) & 1) and a <= m:\n      cost += (m - a + 1)\n      AA[j + 1] = m + 1\n  if len([AA[i] for i in range(1,N) if AA[i] > A[0]]) >= K:\n    ans[i] = cost\n\nprint(min(ans))",
        "origin_generated_text": "\n```\nimport copy\n\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\n\nans = [10 ** 12 for i in range(2 ** (N - 1))]\nseen = 1  \n\nfor i in range(2 ** (N - 1)):\n  AA = copy.deepcopy(A)\n  cost = 0\n  for j in range(N - 1):\n    m = max(AA[:j + 1])\n    a = AA[j + 1]\n    if ((i >> j) & 1) and a <= m:\n      cost += (m - a + 1)\n      AA[j + 1] = m + 1\n  if len([AA[i] for i in range(1,N) if AA[i] > A[0]]) >= K:\n    ans[i] = cost\n\nprint(min(ans))```\n "
    },
    {
        "user_id": "u616217092",
        "problem_id": "p02912",
        "submission1_id": "s535721522",
        "code_content": "\nfrom sys import stdin\nimport heapq\n\n\ndef main():\n    N, M = [int(x) for x in stdin.readline().rstrip().split()]\n    As = []\n    for i in [int(x) for x in stdin.readline().rstrip().split()]:\n        heapq.heappush(As, i * 2)\n    for _ in range(M):\n        x = heapq.heappop(As)\n        heapq.heappush(As, x / 2)\n    print(sum([int(x) for x in As[:N]]) \n\n\nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\nfrom sys import stdin\nimport heapq\n\n\ndef main():\n    N, M = [int(x) for x in stdin.readline().rstrip().split()]\n    As = []\n    for i in [int(x) for x in stdin.readline().rstrip().split()]:\n        heapq.heappush(As, i * 2)\n    for _ in range(M):\n        x = heapq.heappop(As)\n        heapq.heappush(As, x / 2)\n    print(sum([int(x) for x in As[:N]]) \n\n\nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u082945913",
        "problem_id": "p02660",
        "submission1_id": "s842535380",
        "code_content": "\nimport math\nn = int(input())\nN = n\n\nif(n == 1):\n    print(0)\n    exit()\n\nyakusu = []\nmulti = []\n\ni = 2\nwhile(i <= int(math.sqrt(N)) + 1):\n    \n    if(n % i == 0):\n        if(i in yakusu):\n            multi[yakusu.index(i)] += 1\n        else:\n            yakusu.append(i)\n            multi.append(1)\n        n = int(n / i)\n        continue\n    \n    if(n == 1):\n        break\n    \n    i += 1\nif(n != 1):\n    yakusu.append(n)\n    multi.append(1)\n    \nans = 0\n\nfor j in range(len(multi)):\n    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n    ans += int(h)\n\nprint(ans)",
        "origin_generated_text": "\n```\nimport math\nn = int(input())\nN = n\n\nif(n == 1):\n    print(0)\n    exit()\n\nyakusu = []\nmulti = []\n\ni = 2\nwhile(i <= int(math.sqrt(N)) + 1):\n    \n    if(n % i == 0):\n        if(i in yakusu):\n            multi[yakusu.index(i)] += 1\n        else:\n            yakusu.append(i)\n            multi.append(1)\n        n = int(n / i)\n        continue\n    \n    if(n == 1):\n        break\n    \n    i += 1\nif(n != 1):\n    yakusu.append(n)\n    multi.append(1)\n    \nans = 0\n\nfor j in range(len(multi)):\n    h = (-1 + int(math.sqrt(1 + 8 * multi[j]))) / 2\n    ans += int(h)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u790710233",
        "problem_id": "p02633",
        "submission1_id": "s620363982",
        "code_content": "\nx = int(input())\n\nfor n in range(1, 100000):\n    k, y = divmod(360*n, (180-x))\n    if y == 0 or y == 180:\n        print(k)\n        break\n",
        "origin_generated_text": "\n```\nx = int(input())\n\nfor n in range(1, 100000):\n    k, y = divmod(360*n, (180-x))\n    if y == 0 or y == 180:\n        print(k)\n        break\n```\n "
    },
    {
        "user_id": "u366939485",
        "problem_id": "p02922",
        "submission1_id": "s524697124",
        "code_content": "\na, b = (int(i) for i in input().split())\ncount = 0\nwhile True:\n    b -= a\n    count += 1\n    if b <= 0: break\nprint(count)",
        "origin_generated_text": "\n```\na, b = (int(i) for i in input().split())\ncount = 0\nwhile True:\n    b -= a\n    count += 1\n    if b <= 0: break\nprint(count)```\n "
    },
    {
        "user_id": "u467736898",
        "problem_id": "p03959",
        "submission1_id": "s825004808",
        "code_content": "\nmod = 10**9 + 7\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nMin = [1] * N\nMax = [float(\"inf\")] * N\ntp = 0\nfor i, t in enumerate(T):\n    if t != tp:\n        Min[i] = max(Min[i], t)\n    Max[i] = min(Max[i], t)\n    tp = t\nap = 0\nfor i, a in zip(range(N-1, -1, -1), A[::-1]):\n    if a != ap:\n        Min[i] = max(Min[i], a)\n    Max[i] = min(Max[i], a)\n    ap = a\nans = 1\nfor mi, ma in zip(Min, Max):\n    ans = ans * (ma-mi+1) % mod\n    if ans == 0:\n        break\nprint(ans)\n",
        "origin_generated_text": "\n```\nmod = 10**9 + 7\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nMin = [1] * N\nMax = [float(\"inf\")] * N\ntp = 0\nfor i, t in enumerate(T):\n    if t != tp:\n        Min[i] = max(Min[i], t)\n    Max[i] = min(Max[i], t)\n    tp = t\nap = 0\nfor i, a in zip(range(N-1, -1, -1), A[::-1]):\n    if a != ap:\n        Min[i] = max(Min[i], a)\n    Max[i] = min(Max[i], a)\n    ap = a\nans = 1\nfor mi, ma in zip(Min, Max):\n    ans = ans * (ma-mi+1) % mod\n    if ans == 0:\n        break\nprint(ans)\n```\n "
    },
    {
        "user_id": "u764860452",
        "problem_id": "p03479",
        "submission1_id": "s010449043",
        "code_content": "\nX,Y=map(int,input().split())\n\ncnt=0\nwhile(X<=Y):\n    X*=2\n    cnt+=1\nprint(cnt)",
        "origin_generated_text": "\n```\nX,Y=map(int,input().split())\n\ncnt=0\nwhile(X<=Y):\n    X*=2\n    cnt+=1\nprint(cnt)```\n "
    },
    {
        "user_id": "u912164574",
        "problem_id": "p03479",
        "submission1_id": "s215915684",
        "code_content": "\n\n\n\ndef main(min_limit, max_limit):\n    result = []\n    i = min_limit\n\n    while(i < max_limit + 1):\n        result.append(i)\n        i = i * 2\n    print(len(result))\n\n\nif __name__ == \"__main__\":\n    min_limit, max_limit = [int(val) for val in input().split()]\n    main(min_limit, max_limit)",
        "origin_generated_text": "\n```\n\n\n\ndef main(min_limit, max_limit):\n    result = []\n    i = min_limit\n\n    while(i < max_limit + 1):\n        result.append(i)\n        i = i * 2\n    print(len(result))\n\n\nif __name__ == \"__main__\":\n    min_limit, max_limit = [int(val) for val in input().split()]\n    main(min_limit, max_limit)```\n "
    },
    {
        "user_id": "u281334626",
        "problem_id": "p02718",
        "submission1_id": "s386099712",
        "code_content": "\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n \nsum_A =0\nfor i in range(N):\n    sum_A += A[i]\n\nans = 0\nfor i in range(N):\n    if (4*M*A[i] < sum_A):\n        ans= ans+1\n    else:\n        ans =ans+0\n\nif (ans == N):\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n \nsum_A =0\nfor i in range(N):\n    sum_A += A[i]\n\nans = 0\nfor i in range(N):\n    if (4*M*A[i] < sum_A):\n        ans= ans+1\n    else:\n        ans =ans+0\n\nif (ans == N):\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u917013605",
        "problem_id": "p03102",
        "submission1_id": "s225893945",
        "code_content": "\nn, m , c = map(int, input().split())\nb_li = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a_li = list(map(int, input().split()))\n    if (0 < sum(a * b + c for a, b in zip(a_li, b_li))):\n        ans += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nn, m , c = map(int, input().split())\nb_li = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a_li = list(map(int, input().split()))\n    if (0 < sum(a * b + c for a, b in zip(a_li, b_li))):\n        ans += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u864197622",
        "problem_id": "p03677",
        "submission1_id": "s760253586",
        "code_content": "\nfrom itertools import accumulate\ndef acc(X): return list(accumulate(X))\n\nN, M = map(int, input().split())\nA = [int(a)-1 for a in input().split()]\n\nX = [0] * M \nY = [0] * M \n\ndef tri(l, r, a = 1):\n    if l < M:\n        Y[l] += a\n    if r + 1 < M:\n        Y[r+1] -= a\n        X[r+1] -= (r-l+1) * a\n\ndef box(l, r, a = 1):\n    if l < M:\n        X[l] += a\n    if r + 1< M:\n        X[r+1] -= a\n    \ndef calc(a, b):\n    if a <= b - 2:\n        tri(a+2, b)\n    elif a > b and a <= b + M - 2:\n        tri(0, b)\n        box(0, b, b-a-1)\n\nans = 0\nfor i in range(1, N):\n    ans += (A[i] - A[i-1]) % M\n    calc(A[i-1], A[i])\n\nans -= max(X)\nprint(ans)",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\ndef acc(X): return list(accumulate(X))\n\nN, M = map(int, input().split())\nA = [int(a)-1 for a in input().split()]\n\nX = [0] * M \nY = [0] * M \n\ndef tri(l, r, a = 1):\n    if l < M:\n        Y[l] += a\n    if r + 1 < M:\n        Y[r+1] -= a\n        X[r+1] -= (r-l+1) * a\n\ndef box(l, r, a = 1):\n    if l < M:\n        X[l] += a\n    if r + 1< M:\n        X[r+1] -= a\n    \ndef calc(a, b):\n    if a <= b - 2:\n        tri(a+2, b)\n    elif a > b and a <= b + M - 2:\n        tri(0, b)\n        box(0, b, b-a-1)\n\nans = 0\nfor i in range(1, N):\n    ans += (A[i] - A[i-1]) % M\n    calc(A[i-1], A[i])\n\nans -= max(X)\nprint(ans)```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02287",
        "submission1_id": "s800126504",
        "code_content": "\nn = int(input())\nH = list(map(int, input().split(' ')))\n\nfor i in range(n):\n    node = i+1\n    key = H[i]\n    parent = H[int(node/2)] if node != 1 else None\n    left = H[node*2-1] if node*2 <= n else None\n    right = H[node*2] if node*2+1 <= n else None\n    print('node %d: key = %d, parent key = %d, left key = %d, right key = %d,'%(node, key, parent, left, right), end='')\n    print('')\n",
        "origin_generated_text": "\n```\nn = int(input())\nH = list(map(int, input().split(' ')))\n\nfor i in range(n):\n    node = i+1\n    key = H[i]\n    parent = H[int(node/2)] if node != 1 else None\n    left = H[node*2-1] if node*2 <= n else None\n    right = H[node*2] if node*2+1 <= n else None\n    print('node %d: key = %d, parent key = %d, left key = %d, right key = %d,'%(node, key, parent, left, right), end='')\n    print('')\n```\n "
    },
    {
        "user_id": "u875361824",
        "problem_id": "p03296",
        "submission1_id": "s755452833",
        "code_content": "\ndef main():\n    \n    N = int(input())\n    *A, = map(int, input().split())\n\n    \n    ans = 0\n    i = 1\n    while i < N:\n        if A[i-1] == A[i]:\n            ans += 1\n            i += 2\n        else:\n            i += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\ndef main():\n    \n    N = int(input())\n    *A, = map(int, input().split())\n\n    \n    ans = 0\n    i = 1\n    while i < N:\n        if A[i-1] == A[i]:\n            ans += 1\n            i += 2\n        else:\n            i += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u043424727",
        "problem_id": "p03959",
        "submission1_id": "s425516946",
        "code_content": "\n\n\ndef main():\n    N = int(input())\n    t = list(map(int, input().split()))\n    a = list(reversed(list(map(int, input().split()))))\n\n    m = [0] * N\n\n    b = 0\n    for i,h in enumerate(t):\n        if b != h:\n            m[i] = h\n        b = h\n    b = 0\n    for j,h in enumerate(a):\n        if b != h:\n            if m[N-j-1] != 0 and m[N-j-1] != h and m[N-j-1] != t[N-j-1]:\n                print(0)\n                return\n            else:\n                m[N-j-1] = h\n        b = h\n    res = 1\n    for k,h in enumerate(m):\n        if h == 0:\n            res = res * min(a[N-k-1], t[k]) % (pow(10, 9) + 7)\n    print(res)\n\nmain()\n",
        "origin_generated_text": "\n```\n\n\ndef main():\n    N = int(input())\n    t = list(map(int, input().split()))\n    a = list(reversed(list(map(int, input().split()))))\n\n    m = [0] * N\n\n    b = 0\n    for i,h in enumerate(t):\n        if b != h:\n            m[i] = h\n        b = h\n    b = 0\n    for j,h in enumerate(a):\n        if b != h:\n            if m[N-j-1] != 0 and m[N-j-1] != h and m[N-j-1] != t[N-j-1]:\n                print(0)\n                return\n            else:\n                m[N-j-1] = h\n        b = h\n    res = 1\n    for k,h in enumerate(m):\n        if h == 0:\n            res = res * min(a[N-k-1], t[k]) % (pow(10, 9) + 7)\n    print(res)\n\nmain()\n```\n "
    },
    {
        "user_id": "u453815934",
        "problem_id": "p02886",
        "submission1_id": "s364858162",
        "code_content": "\nimport math\nimport sys\nfrom collections import deque\nimport heapq\nimport copy\nimport itertools\nfrom itertools import permutations\ndef mi() : return map(int,sys.stdin.readline().split())\ndef ii() : return int(sys.stdin.readline().rstrip())\ndef i() : return sys.stdin.readline().rstrip()\na=ii()\nl=list(mi())\ns=0\nt=0\nfor i in l:\n  s+=i\n  t+=i**2\nprint(s**2-2*t)",
        "origin_generated_text": "\n```\nimport math\nimport sys\nfrom collections import deque\nimport heapq\nimport copy\nimport itertools\nfrom itertools import permutations\ndef mi() : return map(int,sys.stdin.readline().split())\ndef ii() : return int(sys.stdin.readline().rstrip())\ndef i() : return sys.stdin.readline().rstrip()\na=ii()\nl=list(mi())\ns=0\nt=0\nfor i in l:\n  s+=i\n  t+=i**2\nprint(s**2-2*t)```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p03563",
        "submission1_id": "s465535063",
        "code_content": "\nR = int(input())\nG = int(input())\nprint(G - R)",
        "origin_generated_text": "\n```\nR = int(input())\nG = int(input())\nprint(G - R)```\n "
    },
    {
        "user_id": "u678167152",
        "problem_id": "p03096",
        "submission1_id": "s857388528",
        "code_content": "\nfrom collections import defaultdict\nfrom bisect import *\ndef solve():\n    d = defaultdict(lambda: [])\n    N = int(input())\n    for i in range(N):\n        a = int(input())\n        d[a].append(i)\n    selist = []\n    for l in d.values():\n        for i in range(len(l)-1):\n            if l[i+1]-1>l[i]:\n                selist.append([l[i],l[i+1]])\n    ends = []\n    for i,(s,e) in enumerate(selist):\n        ends.append(e)\n    ends.sort()\n    dp = [0]*(len(ends)+1)\n    for i in range(1,len(ends)+1):\n        dp[i] = dp[i-1]+1\n        ind = bisect_left(ends,selist[i-1][1])\n        if ind>0:\n            j = bisect_right(ends,selist[i-1][0])\n            dp[i] += dp[j]\n    ans = dp[-1]+1\n    return ans\nprint(solve())",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\nfrom bisect import *\ndef solve():\n    d = defaultdict(lambda: [])\n    N = int(input())\n    for i in range(N):\n        a = int(input())\n        d[a].append(i)\n    selist = []\n    for l in d.values():\n        for i in range(len(l)-1):\n            if l[i+1]-1>l[i]:\n                selist.append([l[i],l[i+1]])\n    ends = []\n    for i,(s,e) in enumerate(selist):\n        ends.append(e)\n    ends.sort()\n    dp = [0]*(len(ends)+1)\n    for i in range(1,len(ends)+1):\n        dp[i] = dp[i-1]+1\n        ind = bisect_left(ends,selist[i-1][1])\n        if ind>0:\n            j = bisect_right(ends,selist[i-1][0])\n            dp[i] += dp[j]\n    ans = dp[-1]+1\n    return ans\nprint(solve())```\n "
    },
    {
        "user_id": "u771710924",
        "problem_id": "p02553",
        "submission1_id": "s096502721",
        "code_content": "\na, b, c, d = map(int, input().split())\nans = -float('inf')\nfor i in range(a, b + 1):\n  for j in range(c, d + 1):\n    ans = max(ans, i * j)\nprint(ans)",
        "origin_generated_text": "\n```\na, b, c, d = map(int, input().split())\nans = -float('inf')\nfor i in range(a, b + 1):\n  for j in range(c, d + 1):\n    ans = max(ans, i * j)\nprint(ans)```\n "
    },
    {
        "user_id": "u703950586",
        "problem_id": "p02962",
        "submission1_id": "s277494570",
        "code_content": "\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    hsh = 0\n    for x in t:\n        hsh = (hsh * 27 + cx(x)) % MOD\n\n    h = 0\n    ans = 0\n    i = 0\n    while True:\n        if i >= lent:\n            h -= cx(s[(i - lent)%lens]) * pow(27,lent-1,MOD)\n        h = (h * 27 + cx(s[i % lens])) % MOD\n        if h == hsh:\n            ans = max(ans,i)\n        if i > lens*2 and ans > 0:\n            break\n        i += 1\n\n    if ans == 0:\n        print(ans)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    MOD = 2**61-1\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    s = SI()\n    t = SI()\n    lens = len(s)\n    lent = len(t)\n\n    def cx(x):\n        return ord(x) - ord('a') + 1\n\n    hsh = 0\n    for x in t:\n        hsh = (hsh * 27 + cx(x)) % MOD\n\n    h = 0\n    ans = 0\n    i = 0\n    while True:\n        if i >= lent:\n            h -= cx(s[(i - lent)%lens]) * pow(27,lent-1,MOD)\n        h = (h * 27 + cx(s[i % lens])) % MOD\n        if h == hsh:\n            ans = max(ans,i)\n        if i > lens*2 and ans > 0:\n            break\n        i += 1\n\n    if ans == 0:\n        print(ans)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()```\n "
    },
    {
        "user_id": "u611090896",
        "problem_id": "p02922",
        "submission1_id": "s261376288",
        "code_content": "\nimport math\nA,B = map(int,input().split())\nprint(math.ceil(B/A))",
        "origin_generated_text": "\n```\nimport math\nA,B = map(int,input().split())\nprint(math.ceil(B/A))```\n "
    },
    {
        "user_id": "u132434645",
        "problem_id": "p03343",
        "submission1_id": "s350195074",
        "code_content": "\nn, k, q = map(int, input().split())\na = [int(x) for x in input().split()]\nm = None\nfor x in a:\n    b = []\n    c = []\n    for y in a:\n        if y < x:\n            if len(c) >= k:\n                c.sort()\n                b.extend(c[:len(c) - k + 1])\n            c = []\n        else:\n            c.append(y)\n    if len(c) >= k:\n        c.sort()\n        b.extend(c[:len(c) - k + 1])\n    if len(b) >= q:\n        b.sort()\n        if m is None or m > b[q - 1] - x: m = b[q - 1] - x\nprint(m)\n",
        "origin_generated_text": "\n```\nn, k, q = map(int, input().split())\na = [int(x) for x in input().split()]\nm = None\nfor x in a:\n    b = []\n    c = []\n    for y in a:\n        if y < x:\n            if len(c) >= k:\n                c.sort()\n                b.extend(c[:len(c) - k + 1])\n            c = []\n        else:\n            c.append(y)\n    if len(c) >= k:\n        c.sort()\n        b.extend(c[:len(c) - k + 1])\n    if len(b) >= q:\n        b.sort()\n        if m is None or m > b[q - 1] - x: m = b[q - 1] - x\nprint(m)\n```\n "
    },
    {
        "user_id": "u092278825",
        "problem_id": "p03970",
        "submission1_id": "s495087607",
        "code_content": "\nS = input()\ns = \"CODEFESTIVAL2016\"\nc = 0\nfor i in range (16):\n  if S[i]!= s[i]:\n    c += 1\n    \nprint(c)",
        "origin_generated_text": "\n```\nS = input()\ns = \"CODEFESTIVAL2016\"\nc = 0\nfor i in range (16):\n  if S[i]!= s[i]:\n    c += 1\n    \nprint(c)```\n "
    },
    {
        "user_id": "u934566927",
        "problem_id": "p02718",
        "submission1_id": "s638700361",
        "code_content": "\na,b = input().split()\nc = int(b)\nd = input().split()\nsum = 0\nfor i in d:\n    sum += int(i)\nif sum/4*c < int(d[c-1]):\n    print(\"No\")\nelse:\n    print(\"Yes\")",
        "origin_generated_text": "\n```\na,b = input().split()\nc = int(b)\nd = input().split()\nsum = 0\nfor i in d:\n    sum += int(i)\nif sum/4*c < int(d[c-1]):\n    print(\"No\")\nelse:\n    print(\"Yes\")```\n "
    },
    {
        "user_id": "u825027400",
        "problem_id": "p03103",
        "submission1_id": "s462617945",
        "code_content": "\nN, M = map(int, input().split())\n\nshop_list = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    shop_list.append((a, b))\n\ntotal = 0\nfor a, b in sorted(shop_list, key=lambda x: x[0], reverse=True):\n    if M < b:\n        total += a * M\n        break\n    else:\n        total += a * b\n        M -= b\nprint(total)\n",
        "origin_generated_text": "\n```\nN, M = map(int, input().split())\n\nshop_list = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    shop_list.append((a, b))\n\ntotal = 0\nfor a, b in sorted(shop_list, key=lambda x: x[0], reverse=True):\n    if M < b:\n        total += a * M\n        break\n    else:\n        total += a * b\n        M -= b\nprint(total)\n```\n "
    },
    {
        "user_id": "u340781749",
        "problem_id": "p03300",
        "submission1_id": "s547021953",
        "code_content": "\nfrom itertools import accumulate\n\n\ndef search_ab(sss, cursor):\n    \n    ai = aaa.index(cursor)\n    tmp_cur = bbb[ai]\n    max_cur = sss.index(0, cursor)\n    repeat = 1\n    while tmp_cur < max_cur:\n        cur = s.find('a', tmp_cur, max_cur)\n        if cur == -1:\n            break\n        ai = aaa.index(cur)\n        tmp_cur = bbb[ai]\n        repeat += 1\n    return repeat, tmp_cur\n\n\ndef search_ba(sss, cursor):\n    \n    first_bi = bbb.index(cursor)\n    last_cursor = sss.index(0, cursor)\n    last_bi = aaa.index(last_cursor)\n\n    tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n    tmp_max = ''\n    for i in range(last_bi, first_bi - 1, -1):\n        tmp_buf[aaa[i] - cursor] = 'a'\n        tmp_buf[bbb[i] - cursor] = 'b'\n        tmp = ''.join(tmp_buf)\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max, last_cursor\n\n\ndef integrate(parts_b):\n    tmp_max = ''\n    for pb in reversed(parts_b):\n        tmp = pb + tmp_max\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max\n\n\nn = int(input())\ns = input()\n\nn2 = n * 2\nsss = []\naaa, bbb = [], []\nfor i, c in enumerate(s):\n    if c == 'a':\n        aaa.append(i)\n        sss.append(-1)\n    else:\n        bbb.append(i)\n        sss.append(1)\nsss = list(accumulate(sss))\nrepeat_a = 0\nparts_b = []\ncursor = 0\nwhile cursor < n2:\n    c = sss[cursor]\n    if c < 0:\n        repeat, cursor = search_ab(sss, cursor)\n        repeat_a += repeat\n        parts_b.append('a' * repeat)\n    else:\n        tmp, cursor = search_ba(sss, cursor)\n        parts_b.append(tmp)\n\nprint(integrate(parts_b))\n",
        "origin_generated_text": "\n```\nfrom itertools import accumulate\n\n\ndef search_ab(sss, cursor):\n    \n    ai = aaa.index(cursor)\n    tmp_cur = bbb[ai]\n    max_cur = sss.index(0, cursor)\n    repeat = 1\n    while tmp_cur < max_cur:\n        cur = s.find('a', tmp_cur, max_cur)\n        if cur == -1:\n            break\n        ai = aaa.index(cur)\n        tmp_cur = bbb[ai]\n        repeat += 1\n    return repeat, tmp_cur\n\n\ndef search_ba(sss, cursor):\n    \n    first_bi = bbb.index(cursor)\n    last_cursor = sss.index(0, cursor)\n    last_bi = aaa.index(last_cursor)\n\n    tmp_buf = [''] * (last_bi - first_bi + 1) * 2\n    tmp_max = ''\n    for i in range(last_bi, first_bi - 1, -1):\n        tmp_buf[aaa[i] - cursor] = 'a'\n        tmp_buf[bbb[i] - cursor] = 'b'\n        tmp = ''.join(tmp_buf)\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max, last_cursor\n\n\ndef integrate(parts_b):\n    tmp_max = ''\n    for pb in reversed(parts_b):\n        tmp = pb + tmp_max\n        if tmp > tmp_max:\n            tmp_max = tmp\n    return tmp_max\n\n\nn = int(input())\ns = input()\n\nn2 = n * 2\nsss = []\naaa, bbb = [], []\nfor i, c in enumerate(s):\n    if c == 'a':\n        aaa.append(i)\n        sss.append(-1)\n    else:\n        bbb.append(i)\n        sss.append(1)\nsss = list(accumulate(sss))\nrepeat_a = 0\nparts_b = []\ncursor = 0\nwhile cursor < n2:\n    c = sss[cursor]\n    if c < 0:\n        repeat, cursor = search_ab(sss, cursor)\n        repeat_a += repeat\n        parts_b.append('a' * repeat)\n    else:\n        tmp, cursor = search_ba(sss, cursor)\n        parts_b.append(tmp)\n\nprint(integrate(parts_b))\n```\n "
    },
    {
        "user_id": "u976420902",
        "problem_id": "p02633",
        "submission1_id": "s405458206",
        "code_content": "\nfrom math import ceil\nx = int(input())\nprint(ceil(360/x)*2)\n",
        "origin_generated_text": "\n```\nfrom math import ceil\nx = int(input())\nprint(ceil(360/x)*2)\n```\n "
    },
    {
        "user_id": "u682153677",
        "problem_id": "p02385",
        "submission1_id": "s418882082",
        "code_content": "\n\n\n\nclass Dice:\n    def __init__(self, n):\n        self.upper    = n[0]\n        self.backward = n[1]\n        self.right    = n[2]\n        self.left     = n[3]\n        self.ahead    = n[4]\n        self.bottom   = n[5]\n\n    def roll_north(self):\n        self.upper, self.ahead, self.bottom, self.backward = self.backward, self.upper, self.ahead, self.bottom\n\n    def roll_south(self):\n        self.upper, self.ahead, self.bottom, self.backward = self.ahead, self.bottom, self.backward, self.upper\n\n    def roll_east(self):\n        self.upper, self.right, self.bottom, self.left = self.left, self.upper, self.right, self.bottom\n\n    def roll_west(self):\n        self.upper, self.right, self.bottom, self.left = self.right, self.bottom, self.left, self.upper\n\n    def roll_side(self):\n        self.ahead, self.right, self.backward, self.left = self.left, self.ahead, self.right, self.backward\n\n\ndef match_dice(dice1, dice2):\n    for i in range(4):\n        dice1.roll_north()\n\n        for j in range(4):\n            dice1.roll_east()\n\n            for k in range(4):\n                dice1.roll_side()\n\n                if dice1 == dice2:\n                    return 0\n    return 1\n\n\ndice1 = Dice(list(map(int, input().split())))\ndice2 = Dice(list(map(int, input().split())))\nresult = match_dice(dice1, dice2)\n\nif result is 0:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\n\n\n\nclass Dice:\n    def __init__(self, n):\n        self.upper    = n[0]\n        self.backward = n[1]\n        self.right    = n[2]\n        self.left     = n[3]\n        self.ahead    = n[4]\n        self.bottom   = n[5]\n\n    def roll_north(self):\n        self.upper, self.ahead, self.bottom, self.backward = self.backward, self.upper, self.ahead, self.bottom\n\n    def roll_south(self):\n        self.upper, self.ahead, self.bottom, self.backward = self.ahead, self.bottom, self.backward, self.upper\n\n    def roll_east(self):\n        self.upper, self.right, self.bottom, self.left = self.left, self.upper, self.right, self.bottom\n\n    def roll_west(self):\n        self.upper, self.right, self.bottom, self.left = self.right, self.bottom, self.left, self.upper\n\n    def roll_side(self):\n        self.ahead, self.right, self.backward, self.left = self.left, self.ahead, self.right, self.backward\n\n\ndef match_dice(dice1, dice2):\n    for i in range(4):\n        dice1.roll_north()\n\n        for j in range(4):\n            dice1.roll_east()\n\n            for k in range(4):\n                dice1.roll_side()\n\n                if dice1 == dice2:\n                    return 0\n    return 1\n\n\ndice1 = Dice(list(map(int, input().split())))\ndice2 = Dice(list(map(int, input().split())))\nresult = match_dice(dice1, dice2)\n\nif result is 0:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u667024514",
        "problem_id": "p03965",
        "submission1_id": "s860031279",
        "code_content": "\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  elif cou >= 0 and lis[i] == \"p\":\n    cou -= 1\n    ans += 1\n  else:\n    cou += 1\nprint(ans)",
        "origin_generated_text": "\n```\nlis = list(input())\ncou = 0\nans = 0\nfor i in range(len(lis)):\n  if cou < 0 and lis[i] == \"g\":\n    cou += 1\n    ans += 1\n  elif cou >= 0 and lis[i] == \"p\":\n    cou -= 1\n    ans += 1\n  else:\n    cou += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u249218427",
        "problem_id": "p02556",
        "submission1_id": "s461037170",
        "code_content": "\nN = int(input())\n\nXY_max = -10**10\nXY_min = 10**10\nYX_max = -10**10\nYX_min = 10**10\n\nfor _ in range(N):\n  x,y = map(int, input().split())\n  XY_max = max(XY_max,x+y)\n  XY_min = min(XY_min,x+y)\n  YX_max = max(YX_max,x-y)\n  YX_min = min(YX_min,x-y)\n\nprint(max(XY_max-XY_min,YX_max-YX_min))",
        "origin_generated_text": "\n```\nN = int(input())\n\nXY_max = -10**10\nXY_min = 10**10\nYX_max = -10**10\nYX_min = 10**10\n\nfor _ in range(N):\n  x,y = map(int, input().split())\n  XY_max = max(XY_max,x+y)\n  XY_min = min(XY_min,x+y)\n  YX_max = max(YX_max,x-y)\n  YX_min = min(YX_min,x-y)\n\nprint(max(XY_max-XY_min,YX_max-YX_min))```\n "
    },
    {
        "user_id": "u936035004",
        "problem_id": "p03943",
        "submission1_id": "s490246821",
        "code_content": "\na,b,c = map(int,input().split())\nif a+b==c:\n\tprint(\"Yes\")\nelif b+c==a:\n\tprint(\"Yes\")\nelif a+c==b:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")",
        "origin_generated_text": "\n```\na,b,c = map(int,input().split())\nif a+b==c:\n\tprint(\"Yes\")\nelif b+c==a:\n\tprint(\"Yes\")\nelif a+c==b:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")```\n "
    },
    {
        "user_id": "u279493135",
        "problem_id": "p03318",
        "submission1_id": "s465268223",
        "code_content": "\nimport sys, re\nfrom collections import deque, defaultdict, Counter\nfrom itertools import permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nK = INT()\n\nfor i in range(1, K+1):\n\tprint(i)\n",
        "origin_generated_text": "\n```\nimport sys, re\nfrom collections import deque, defaultdict, Counter\nfrom itertools import permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nK = INT()\n\nfor i in range(1, K+1):\n\tprint(i)\n```\n "
    },
    {
        "user_id": "u647634615",
        "problem_id": "p02385",
        "submission1_id": "s695248762",
        "code_content": "\ndice_1 = input().split()\ndice_2 = input().split()\n\nrolls = {' ':[0, 1, 2, 3, 4, 5], \n         'W':[2, 1, 5, 0, 4, 3], \n         'N':[1, 5, 2, 3, 0, 4], \n         'E':[3, 1, 0, 5, 4, 2], \n         'S':[4, 0, 2, 3, 5, 1]\n        }\norders = [' ', 'N', 'W', 'E', 'S', 'SS']\ntf = 0\nfor order in orders:\n    for d in order:\n        roll = rolls[d]\n        copy_2 = [dice_2[i] for i in roll]\n    \n    l = [1, 2, 4, 3]\n    a0 = copy_2[0] == dice_1[0]\n    a1 = copy_2[5] == dice_1[5]\n    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n    if  a0 and a1 and a2:\n        tf += 1\n\nif tf>0:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\ndice_1 = input().split()\ndice_2 = input().split()\n\nrolls = {' ':[0, 1, 2, 3, 4, 5], \n         'W':[2, 1, 5, 0, 4, 3], \n         'N':[1, 5, 2, 3, 0, 4], \n         'E':[3, 1, 0, 5, 4, 2], \n         'S':[4, 0, 2, 3, 5, 1]\n        }\norders = [' ', 'N', 'W', 'E', 'S', 'SS']\ntf = 0\nfor order in orders:\n    for d in order:\n        roll = rolls[d]\n        copy_2 = [dice_2[i] for i in roll]\n    \n    l = [1, 2, 4, 3]\n    a0 = copy_2[0] == dice_1[0]\n    a1 = copy_2[5] == dice_1[5]\n    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n    if  a0 and a1 and a2:\n        tf += 1\n\nif tf>0:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u328099989",
        "problem_id": "p02727",
        "submission1_id": "s538703262",
        "code_content": "\nX, Y, A, B, C = map(int, input().split())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\nP = sorted(P, reverse=True)[:X]\nQ = sorted(Q, reverse=True)[:Y]\nR = sorted(R, reverse=True)[:X+Y]\n\nprint(sum(sorted(P+Q+R, reverse=True)[:X+Y]))\n",
        "origin_generated_text": "\n```\nX, Y, A, B, C = map(int, input().split())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\nP = sorted(P, reverse=True)[:X]\nQ = sorted(Q, reverse=True)[:Y]\nR = sorted(R, reverse=True)[:X+Y]\n\nprint(sum(sorted(P+Q+R, reverse=True)[:X+Y]))\n```\n "
    },
    {
        "user_id": "u415905784",
        "problem_id": "p03633",
        "submission1_id": "s252908653",
        "code_content": "\nimport functools\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n \ndef lcm(A, B):\n  return A * B \n \nprint(functools.reduce(lcm, sorted(T, reverse=True)))",
        "origin_generated_text": "\n```\nimport functools\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n \ndef lcm(A, B):\n  return A * B \n \nprint(functools.reduce(lcm, sorted(T, reverse=True)))```\n "
    },
    {
        "user_id": "u707444776",
        "problem_id": "p03752",
        "submission1_id": "s759257805",
        "code_content": "\ndef dfs(index):\n    global ans\n    if index == N:\n        if blst.count(1) >= K - 1:\n            tmp = a[0]\n            anstmp = 0\n            for i in range(1, N):\n                if tmp >= a[i]:\n                    anstmp += tmp - a[i] + 1\n                    tmp += 1\n            ans = min(ans, anstmp)\n        return\n    for i in range(2):\n        blst[index - 1] = i\n        dfs(index + 1)\n    return\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\nblst = [0] * (N - 1)\nans = 10 ** 10\ndfs(1)\n\nprint(ans)",
        "origin_generated_text": "\n```\ndef dfs(index):\n    global ans\n    if index == N:\n        if blst.count(1) >= K - 1:\n            tmp = a[0]\n            anstmp = 0\n            for i in range(1, N):\n                if tmp >= a[i]:\n                    anstmp += tmp - a[i] + 1\n                    tmp += 1\n            ans = min(ans, anstmp)\n        return\n    for i in range(2):\n        blst[index - 1] = i\n        dfs(index + 1)\n    return\n\nN, K = map(int, input().split())\na = list(map(int, input().split()))\nblst = [0] * (N - 1)\nans = 10 ** 10\ndfs(1)\n\nprint(ans)```\n "
    },
    {
        "user_id": "u716530146",
        "problem_id": "p03096",
        "submission1_id": "s621470879",
        "code_content": "\nimport sys, math, itertools, collections, bisect\ninput = lambda: sys.stdin.buffer.readline().rstrip().decode('utf-8')\ninf = float('inf') ;mod = 10**9+7\nmans = inf ;ans = 0 ;count = 0 ;pro = 1\n\nn = int(input())\nC = [int(input()) for i in range(n)]\npairs = [-1]*(n+1)\ndata = [-1]*(2*10**5+1)\nfor i,ci in enumerate(C):\n  if data[ci] != -1 and abs(i-data[ci]) != 1:\n    pairs[data[ci]] = i\n  data[ci] = i\nimos = [0] * (n+1)\nfor i in range(n-1,-1,-1):\n  \n  if pairs[i] == -1:\n    imos[i] += 1\n    imos[i-1] += imos[i]\n  else:\n    j = pairs[i]\n    ans += pow(2,imos[j])\n    ans %= mod\n    imos[i] += 1\n    imos[i-1] += imos[i]\n\nprint(ans%mod)\n",
        "origin_generated_text": "\n```\nimport sys, math, itertools, collections, bisect\ninput = lambda: sys.stdin.buffer.readline().rstrip().decode('utf-8')\ninf = float('inf') ;mod = 10**9+7\nmans = inf ;ans = 0 ;count = 0 ;pro = 1\n\nn = int(input())\nC = [int(input()) for i in range(n)]\npairs = [-1]*(n+1)\ndata = [-1]*(2*10**5+1)\nfor i,ci in enumerate(C):\n  if data[ci] != -1 and abs(i-data[ci]) != 1:\n    pairs[data[ci]] = i\n  data[ci] = i\nimos = [0] * (n+1)\nfor i in range(n-1,-1,-1):\n  \n  if pairs[i] == -1:\n    imos[i] += 1\n    imos[i-1] += imos[i]\n  else:\n    j = pairs[i]\n    ans += pow(2,imos[j])\n    ans %= mod\n    imos[i] += 1\n    imos[i-1] += imos[i]\n\nprint(ans%mod)\n```\n "
    },
    {
        "user_id": "u023231878",
        "problem_id": "p03303",
        "submission1_id": "s534868957",
        "code_content": "\ns=input()\nw=int(input())\nx=''\nfor i in range(len(s)):\n        if i%w==0:\n                x+=s[i]\nprint(x)",
        "origin_generated_text": "\n```\ns=input()\nw=int(input())\nx=''\nfor i in range(len(s)):\n        if i%w==0:\n                x+=s[i]\nprint(x)```\n "
    },
    {
        "user_id": "u057415180",
        "problem_id": "p02767",
        "submission1_id": "s106727943",
        "code_content": "\nn = int(input())\nx = list(map(int, input().split()))\nans = 10 ** 9\nfor p in range(min(x), max(x)+1):\n    cnt = 0\n    for i in x:\n        cnt += (i-p)**2\n    ans = min(ans, cnt)\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int, input().split()))\nans = 10 ** 9\nfor p in range(min(x), max(x)+1):\n    cnt = 0\n    for i in x:\n        cnt += (i-p)**2\n    ans = min(ans, cnt)\nprint(ans)```\n "
    },
    {
        "user_id": "u328733599",
        "problem_id": "p00006",
        "submission1_id": "s455234194",
        "code_content": "\ntxt = input(\"\")\nfor i in range(0,len(txt)):\n print(txt[(len(txt)-i-1)],end=\"\")\n",
        "origin_generated_text": "\n```\ntxt = input(\"\")\nfor i in range(0,len(txt)):\n print(txt[(len(txt)-i-1)],end=\"\")\n```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s070815222",
        "code_content": "\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)+1\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)+1\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)+1\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)+1\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u567434159",
        "problem_id": "p03965",
        "submission1_id": "s548796857",
        "code_content": "\ns = input()\nscore = 0\ntoUse = 0\nfor it in s:\n  if it == 'g' and toUse > 0:\n    toUse -= 1\n    score += 1\n    continue\n  if it == 'g':\n    toUse += 1\n    continue\n  if toUse > 0:\n    toUse -= 1\n  else:\n    score -=1\n    toUse += 1\n    \nprint(score)\n",
        "origin_generated_text": "\n```\ns = input()\nscore = 0\ntoUse = 0\nfor it in s:\n  if it == 'g' and toUse > 0:\n    toUse -= 1\n    score += 1\n    continue\n  if it == 'g':\n    toUse += 1\n    continue\n  if toUse > 0:\n    toUse -= 1\n  else:\n    score -=1\n    toUse += 1\n    \nprint(score)\n```\n "
    },
    {
        "user_id": "u618637847",
        "problem_id": "p00023",
        "submission1_id": "s306795269",
        "code_content": "\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= (ra + rb)**2:\n        if d <= (ra - rb)**2:\n            print(2)\n        elif d <= (rb - ra)**2:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\n\n\nnum = int(input())\nfor i in range(num):\n    xa,ya,ra,xb,yb,rb = map(float,input().split(' '))\n    d = (xb - xa)**2 + (yb - ya)**2\n    if d <= (ra + rb)**2:\n        if d <= (ra - rb)**2:\n            print(2)\n        elif d <= (rb - ra)**2:\n            print(-2)\n        else:\n            print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u548492494",
        "problem_id": "p02730",
        "submission1_id": "s287489311",
        "code_content": "\ns = input()\nn = len(s)\na = int((n-1)/2)\nb = int((n+3)/2)\nx=s[:a]\ny = s[b-1:]\nif x==x[::-1] and y==y[::-1] and s[a]==s[b-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\na = int((n-1)/2)\nb = int((n+3)/2)\nx=s[:a]\ny = s[b-1:]\nif x==x[::-1] and y==y[::-1] and s[a]==s[b-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u179169725",
        "problem_id": "p03103",
        "submission1_id": "s786314208",
        "code_content": "\nimport sys\nread = sys.stdin.readline\n\n\ndef readln():\n    return list(map(int, read().split()))\n\n\nN, M = readln()\n\ndata = {}\nfor _ in range(N):\n    a, b = readln()\n    data[a] = b\n\nans = 0\ndrink = 0\nfor k, v in sorted(data.items()):\n    ans += k * v\n    drink += v\n    if drink > M:\n        break\nk = list(data.keys())[0]\nprint(ans-k*(drink-M))\n",
        "origin_generated_text": "\n```\nimport sys\nread = sys.stdin.readline\n\n\ndef readln():\n    return list(map(int, read().split()))\n\n\nN, M = readln()\n\ndata = {}\nfor _ in range(N):\n    a, b = readln()\n    data[a] = b\n\nans = 0\ndrink = 0\nfor k, v in sorted(data.items()):\n    ans += k * v\n    drink += v\n    if drink > M:\n        break\nk = list(data.keys())[0]\nprint(ans-k*(drink-M))\n```\n "
    },
    {
        "user_id": "u980492406",
        "problem_id": "p03264",
        "submission1_id": "s078287074",
        "code_content": "\na = int(input())\nif a%2  == 0 :\n    print(a**2\nelse :\n    print((a+1)*(a-1)\n  ",
        "origin_generated_text": "\n```\na = int(input())\nif a%2  == 0 :\n    print(a**2\nelse :\n    print((a+1)*(a-1)\n  ```\n "
    },
    {
        "user_id": "u556477263",
        "problem_id": "p03264",
        "submission1_id": "s797417820",
        "code_content": "\ns = int(input())\nprint(s/2 * (s+1)",
        "origin_generated_text": "\n```\ns = int(input())\nprint(s/2 * (s+1)```\n "
    },
    {
        "user_id": "u299798926",
        "problem_id": "p00026",
        "submission1_id": "s663219549",
        "code_content": "\nA=[[int(0) for i in range(10)]for j in range(10)]\ncount=0\nwhile 1:\n    try:\n        x,y,s = map(int, input().split(','))\n        if s==1:\n            for i in range(x-1,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]+1\n            for i in range(y-1,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]+1\n            A[x][y]=A[x][y]-1                    \n        elif s==2:\n            for i in range(x-1,x+2):\n                for j in range(y-1,y+2):\n                    if i>=0 and i<=9 and j>=0 and j<=9:\n                        A[i][j]=A[i][j]+1\n        else:\n            for i in range(x-2,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]+1\n            for i in range(y-2,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]+1\n            for i in range(x-1,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]-1\n            for i in range(y-1,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]-1\n            for i in range(x-1,x+2):\n                for j in range(y-1,y+2):\n                    if i>=0 and i<=9 and j>=0 and j<=9:\n                        A[i][j]=A[i][j]+1\n    except EOFError:\n        break\n        \nfor i in range(10):\n    for j in range(10):\n        if A[i][j]==0:\n            count=count+1\nprint(count)\nprint(max(max(A)))",
        "origin_generated_text": "\n```\nA=[[int(0) for i in range(10)]for j in range(10)]\ncount=0\nwhile 1:\n    try:\n        x,y,s = map(int, input().split(','))\n        if s==1:\n            for i in range(x-1,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]+1\n            for i in range(y-1,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]+1\n            A[x][y]=A[x][y]-1                    \n        elif s==2:\n            for i in range(x-1,x+2):\n                for j in range(y-1,y+2):\n                    if i>=0 and i<=9 and j>=0 and j<=9:\n                        A[i][j]=A[i][j]+1\n        else:\n            for i in range(x-2,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]+1\n            for i in range(y-2,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]+1\n            for i in range(x-1,x+2):\n                if i>=0 and i<=9:\n                    A[i][y]=A[i][y]-1\n            for i in range(y-1,y+2):\n                if i>=0 and i<=9:\n                    A[x][i]=A[x][i]-1\n            for i in range(x-1,x+2):\n                for j in range(y-1,y+2):\n                    if i>=0 and i<=9 and j>=0 and j<=9:\n                        A[i][j]=A[i][j]+1\n    except EOFError:\n        break\n        \nfor i in range(10):\n    for j in range(10):\n        if A[i][j]==0:\n            count=count+1\nprint(count)\nprint(max(max(A)))```\n "
    },
    {
        "user_id": "u579699847",
        "problem_id": "p03752",
        "submission1_id": "s228254997",
        "code_content": "\ndef LI(): return list(map(int,input().split()))\nN,K = LI()\na = LI()\nans = float('INF')\nfor i in range(2**(N-1)):\n    bit = [i>>j&1 for j in range(N-1)]\n    if K-1!=bit.count(1):\n        continue\n    temp = 0\n    for l,x in enumerate(a,1):\n        if x>=a[0]+l:\n            continue\n        temp += (a[0]+l)-x\n    ans = min(ans,temp)\nprint(ans)\n",
        "origin_generated_text": "\n```\ndef LI(): return list(map(int,input().split()))\nN,K = LI()\na = LI()\nans = float('INF')\nfor i in range(2**(N-1)):\n    bit = [i>>j&1 for j in range(N-1)]\n    if K-1!=bit.count(1):\n        continue\n    temp = 0\n    for l,x in enumerate(a,1):\n        if x>=a[0]+l:\n            continue\n        temp += (a[0]+l)-x\n    ans = min(ans,temp)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u255067135",
        "problem_id": "p03087",
        "submission1_id": "s501450188",
        "code_content": "\nN, Q = map(int, input().split())\nS = str(input())\n\ncount = [0]*(N)\nfor i in range(1, N):\n    if S[i]=='C' and S[i-1]=='A':\n        count[i] = count[i-1] + 1\n    else:\n        count[i] = count[i-1]\nLR = [list(map(int, input().split())) for _ in range(Q)]\nfor l, r in LR:\n    print(count[r-1]-count[l-1])",
        "origin_generated_text": "\n```\nN, Q = map(int, input().split())\nS = str(input())\n\ncount = [0]*(N)\nfor i in range(1, N):\n    if S[i]=='C' and S[i-1]=='A':\n        count[i] = count[i-1] + 1\n    else:\n        count[i] = count[i-1]\nLR = [list(map(int, input().split())) for _ in range(Q)]\nfor l, r in LR:\n    print(count[r-1]-count[l-1])```\n "
    },
    {
        "user_id": "u252805217",
        "problem_id": "p02917",
        "submission1_id": "s930200691",
        "code_content": "\nn = int(input())\nbs = list(map(int, input().split()))\n\nres = bs[0]\nfor i in range(n - 2):\n\tres += min(bs[i], bs[i + 1])\nres += bs[-1]\n\nprint(res)",
        "origin_generated_text": "\n```\nn = int(input())\nbs = list(map(int, input().split()))\n\nres = bs[0]\nfor i in range(n - 2):\n\tres += min(bs[i], bs[i + 1])\nres += bs[-1]\n\nprint(res)```\n "
    },
    {
        "user_id": "u545411641",
        "problem_id": "p03303",
        "submission1_id": "s202162876",
        "code_content": "\ns = input()\nstep = int(input())\nfor i in range(0, len(s), step):\n  print(s[i], end=\"\")",
        "origin_generated_text": "\n```\ns = input()\nstep = int(input())\nfor i in range(0, len(s), step):\n  print(s[i], end=\"\")```\n "
    },
    {
        "user_id": "u485566817",
        "problem_id": "p03563",
        "submission1_id": "s198766719",
        "code_content": "\nr = int(input())\ng = int(input())\nprint(2*g - 2*r)",
        "origin_generated_text": "\n```\nr = int(input())\ng = int(input())\nprint(2*g - 2*r)```\n "
    },
    {
        "user_id": "u072279123",
        "problem_id": "p02640",
        "submission1_id": "s075615060",
        "code_content": "\nx,y = map(int,input().split())\nif x==1 and y==2 or x==1 and y==4 or x==2 and y==1:\n  print(\"Yes\")\nelse:\n  if y%2==1:\n    print(\"No\")\n  else:\n    if y<=x*4 and x<=y\n      print(\"Yes\")\n    else:\n      print(\"No\")",
        "origin_generated_text": "\n```\nx,y = map(int,input().split())\nif x==1 and y==2 or x==1 and y==4 or x==2 and y==1:\n  print(\"Yes\")\nelse:\n  if y%2==1:\n    print(\"No\")\n  else:\n    if y<=x*4 and x<=y\n      print(\"Yes\")\n    else:\n      print(\"No\")```\n "
    },
    {
        "user_id": "u178192749",
        "problem_id": "p03796",
        "submission1_id": "s696467127",
        "code_content": "\nn = int(input())\np = 1\nmod = int(10e9+7)\nfor i in range(1,n+1):\n    p *=i\n    p = p%mod\nprint(p)",
        "origin_generated_text": "\n```\nn = int(input())\np = 1\nmod = int(10e9+7)\nfor i in range(1,n+1):\n    p *=i\n    p = p%mod\nprint(p)```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p02950",
        "submission1_id": "s908723991",
        "code_content": "\np = int(input())\nmod = p\n\n\ndef frac(limit):\n    frac = [1]*limit\n    for i in range(2,limit):\n        frac[i] = i * frac[i-1]%mod\n    fraci = [None]*limit\n    fraci[-1] = pow(frac[-1], mod -2, mod)\n    for i in range(-2, -limit-1, -1):\n        fraci[i] = fraci[i+1] * (limit + i + 1) % mod\n    return frac, fraci\n\nfrac, fraci = frac(p)\n\n\n\nA = list(map(int, input().split()))\n\nC = [0]*p\nfor i in range(p):\n    a = A[i]\n    for j in range(i):\n        a = (a-C[j]*frac[i]*fraci[i-j])\n    C[i] = fraci[i]*a%p\nB = [0]*p\nt = [0]*p\nt[0] = 1\nfor i in range(p):\n    t2 = ([0] + t)[::-1]\n    t2 = [a-b*i for a, b in zip(t2, t)]\n    for j in range(p):\n        B[j] += t2[j]*C[i]%p\n    t = t2[:]\n\nB = [b%p for b in B]\nprint(*B)",
        "origin_generated_text": "\n```\np = int(input())\nmod = p\n\n\ndef frac(limit):\n    frac = [1]*limit\n    for i in range(2,limit):\n        frac[i] = i * frac[i-1]%mod\n    fraci = [None]*limit\n    fraci[-1] = pow(frac[-1], mod -2, mod)\n    for i in range(-2, -limit-1, -1):\n        fraci[i] = fraci[i+1] * (limit + i + 1) % mod\n    return frac, fraci\n\nfrac, fraci = frac(p)\n\n\n\nA = list(map(int, input().split()))\n\nC = [0]*p\nfor i in range(p):\n    a = A[i]\n    for j in range(i):\n        a = (a-C[j]*frac[i]*fraci[i-j])\n    C[i] = fraci[i]*a%p\nB = [0]*p\nt = [0]*p\nt[0] = 1\nfor i in range(p):\n    t2 = ([0] + t)[::-1]\n    t2 = [a-b*i for a, b in zip(t2, t)]\n    for j in range(p):\n        B[j] += t2[j]*C[i]%p\n    t = t2[:]\n\nB = [b%p for b in B]\nprint(*B)```\n "
    },
    {
        "user_id": "u639390371",
        "problem_id": "p02553",
        "submission1_id": "s005093798",
        "code_content": "\na,b,c,d=list(map(int, input().split())) \nprod=[]\n\nprod.append(a*c)\nprod.append(a*d)\nprod.append(b*c)\nprod.append(b*d)\n\nprint(max(prod))",
        "origin_generated_text": "\n```\na,b,c,d=list(map(int, input().split())) \nprod=[]\n\nprod.append(a*c)\nprod.append(a*d)\nprod.append(b*c)\nprod.append(b*d)\n\nprint(max(prod))```\n "
    },
    {
        "user_id": "u622847899",
        "problem_id": "p02730",
        "submission1_id": "s699506475",
        "code_content": "\ns=input()\n\ndef judge_palindrome(x):\n\t\n\tfor i in range(int((len(x)-1)/2)):\n\t\tif x[i]!=x[len(x)-1-i]:\n\t\t\treturn False\n\treturn True\n\nif judge_palindrome(s) and judge_palindrome(s[:int((len(s)-1)/2)]) and judge_palindrome(s[int((len(s)+3)/2):]):\n\tprint('Yes')\nelse:\n\tprint('No')",
        "origin_generated_text": "\n```\ns=input()\n\ndef judge_palindrome(x):\n\t\n\tfor i in range(int((len(x)-1)/2)):\n\t\tif x[i]!=x[len(x)-1-i]:\n\t\t\treturn False\n\treturn True\n\nif judge_palindrome(s) and judge_palindrome(s[:int((len(s)-1)/2)]) and judge_palindrome(s[int((len(s)+3)/2):]):\n\tprint('Yes')\nelse:\n\tprint('No')```\n "
    },
    {
        "user_id": "u905313459",
        "problem_id": "p00023",
        "submission1_id": "s286489685",
        "code_content": "\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split(\" \")))\n    d = abs(complex(xb-xa, yb-ya))\n    if ra + rb < d:\n        print(\"0\")\n    elif abs(rb-ra) <= d <= ra+rb:\n        print(\"1\")\n    elif d < abs(rb-ra):\n        print(\"2\" if ra > rb else \"-2\")",
        "origin_generated_text": "\n```\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split(\" \")))\n    d = abs(complex(xb-xa, yb-ya))\n    if ra + rb < d:\n        print(\"0\")\n    elif abs(rb-ra) <= d <= ra+rb:\n        print(\"1\")\n    elif d < abs(rb-ra):\n        print(\"2\" if ra > rb else \"-2\")```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00026",
        "submission1_id": "s391579770",
        "code_content": "\nd = [[0] * 10 for i in range(10)]\n\ndef b(x, y):\n    for i in range(x - 2, x + 3):\n        a = 3 - abs(x - i)\n        for a in range(y - a + 1, y + a):\n            if 0 <= i < 10 and 0 <= a < 10:\n                d[a][i] += 1\n\n\ndef m(x, y):\n    for i in range(x - 1, x + 2):\n        for j in range(y - 1, y + 2):\n            if 0 <= i < 10 and 0 <= j < 10:\n                d[j][i] += 1\n\n\ndef s(x, y):\n    r = (1, 0)\n    for i in range(x - 1, x + 2):\n        a = abs(x - i)\n        for j in range(y - r[a], y + r[a] + 1):\n            if 0 <= i < 10 and 0 <= j < 10:\n                d[j][i] += 1\n\nwhile 1:\n    try:\n        f = (None, s, m, b)\n        x, y, size = list(map(int, input().split(',')))\n        f[size](x, y)\n    except:\n        break\n\n\nr1 = r2 = 0\nfor i in range(10):\n    for j in range(10):\n        r1 += 1 if d[i][j] == 0 else 0\n        r2 = max(r2, d[i][j])\n\nprint(r1)\nprint(r2)",
        "origin_generated_text": "\n```\nd = [[0] * 10 for i in range(10)]\n\ndef b(x, y):\n    for i in range(x - 2, x + 3):\n        a = 3 - abs(x - i)\n        for a in range(y - a + 1, y + a):\n            if 0 <= i < 10 and 0 <= a < 10:\n                d[a][i] += 1\n\n\ndef m(x, y):\n    for i in range(x - 1, x + 2):\n        for j in range(y - 1, y + 2):\n            if 0 <= i < 10 and 0 <= j < 10:\n                d[j][i] += 1\n\n\ndef s(x, y):\n    r = (1, 0)\n    for i in range(x - 1, x + 2):\n        a = abs(x - i)\n        for j in range(y - r[a], y + r[a] + 1):\n            if 0 <= i < 10 and 0 <= j < 10:\n                d[j][i] += 1\n\nwhile 1:\n    try:\n        f = (None, s, m, b)\n        x, y, size = list(map(int, input().split(',')))\n        f[size](x, y)\n    except:\n        break\n\n\nr1 = r2 = 0\nfor i in range(10):\n    for j in range(10):\n        r1 += 1 if d[i][j] == 0 else 0\n        r2 = max(r2, d[i][j])\n\nprint(r1)\nprint(r2)```\n "
    },
    {
        "user_id": "u458617779",
        "problem_id": "p03734",
        "submission1_id": "s833364379",
        "code_content": "\nints = input().split(\" \")\nN = int(ints[0])\nmaxW = int(ints[1])\nints = input().split(\" \")\na = int(ints[0])\nb = int(ints[1])\nweight = [a, a+1, a+2, a+3] \nva = [[b],[],[],[]]\nfor i in range(1, N):\n\tins = input().split(\" \")\n\tw = int(ins[0])\n\tv = int(ins[1])\n\tfor j in range(0, 4):\n\t\tif w == weight[j]:\n\t\t\tva[j].append(v)\nsum = [[0],[0],[0],[0]]\nfor j in range(0, 4):\n\tfor i in range(1, len(va[j])):\n\t\ttry:\n\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n\t\texcept:\n\t\t\tpass\nans = 0\nfor i in range(0, len(va[0])):\n\tfor j in range(0, len(va[1])):\n\t\tfor k in range(0, len(va[2])):\n\t\t\tfor l in range(0, len(va[3])):\n\t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n\t\t\t\tif(sumw <= maxW):\n\t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\nprint(ans)",
        "origin_generated_text": "\n```\nints = input().split(\" \")\nN = int(ints[0])\nmaxW = int(ints[1])\nints = input().split(\" \")\na = int(ints[0])\nb = int(ints[1])\nweight = [a, a+1, a+2, a+3] \nva = [[b],[],[],[]]\nfor i in range(1, N):\n\tins = input().split(\" \")\n\tw = int(ins[0])\n\tv = int(ins[1])\n\tfor j in range(0, 4):\n\t\tif w == weight[j]:\n\t\t\tva[j].append(v)\nsum = [[0],[0],[0],[0]]\nfor j in range(0, 4):\n\tfor i in range(1, len(va[j])):\n\t\ttry:\n\t\t\tsum[j].append(sum[j][i-1] + va[j][i])\n\t\texcept:\n\t\t\tpass\nans = 0\nfor i in range(0, len(va[0])):\n\tfor j in range(0, len(va[1])):\n\t\tfor k in range(0, len(va[2])):\n\t\t\tfor l in range(0, len(va[3])):\n\t\t\t\tsumw = weight[0]*i + weight[1]*j +weight[2]*k + weight[3]*l\n\t\t\t\tif(sumw <= maxW):\n\t\t\t\t\tans = max(sum[0][i]+sum[1][j]+sum[2][k]+sum[3][l],ans)\nprint(ans)```\n "
    },
    {
        "user_id": "u628538573",
        "problem_id": "p03296",
        "submission1_id": "s254868178",
        "code_content": "\nn = int(input())\na = input().split()\ncount = 0\nfor i in range(n - 1):\n\tif a[i] == a[i + 1]:\n\t\tif i + 1 < n - 1:\n\t\t\tif a[i] != 1 and a[i + 2] != 1:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 2 and a[i + 2] != 2:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 3 and a[i + 2] != 3:\n\t\t\t\ta[i + 1] = 3\n\t\t\t\tcount += 1\n\t\tif i == n - 2:\n\t\t\tif a[i] == 1:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telse:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\nprint(count)",
        "origin_generated_text": "\n```\nn = int(input())\na = input().split()\ncount = 0\nfor i in range(n - 1):\n\tif a[i] == a[i + 1]:\n\t\tif i + 1 < n - 1:\n\t\t\tif a[i] != 1 and a[i + 2] != 1:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 2 and a[i + 2] != 2:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telif a[i] != 3 and a[i + 2] != 3:\n\t\t\t\ta[i + 1] = 3\n\t\t\t\tcount += 1\n\t\tif i == n - 2:\n\t\t\tif a[i] == 1:\n\t\t\t\ta[i + 1] = 2\n\t\t\t\tcount += 1\n\t\t\telse:\n\t\t\t\ta[i + 1] = 1\n\t\t\t\tcount += 1\n\nprint(count)```\n "
    },
    {
        "user_id": "u212502386",
        "problem_id": "p03200",
        "submission1_id": "s773870702",
        "code_content": "\nS=input()\n\nstart=0\nfor i in range(len(S)):\n    if S[i]=='B':\n        start=i\n        break\n\nleft_W=start\nans=0\nif start<len(S)-1:\n    for i in range(start+1,len(S)):\n        if S[i]=='W':\n            ans+=i-left_W\n            left_W+=1\n\nprint(ans)",
        "origin_generated_text": "\n```\nS=input()\n\nstart=0\nfor i in range(len(S)):\n    if S[i]=='B':\n        start=i\n        break\n\nleft_W=start\nans=0\nif start<len(S)-1:\n    for i in range(start+1,len(S)):\n        if S[i]=='W':\n            ans+=i-left_W\n            left_W+=1\n\nprint(ans)```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03008",
        "submission1_id": "s929744662",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na1, a2, a3 = map(int, input().split())\nb1, b2, b3 = map(int, input().split())\ndef f(n, a, b):\n  dp = [0]*(n+1)\n  for i in range(n+1):\n    for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n      if i-a >= 0:\n        dp[i] = max(dp[i], dp[i-a]+b)\n  return max(dp)\nans = f(n, a1, a2, a3)\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na1, a2, a3 = map(int, input().split())\nb1, b2, b3 = map(int, input().split())\ndef f(n, a, b):\n  dp = [0]*(n+1)\n  for i in range(n+1):\n    for a, b in zip((a1, a2, a3), (b1, b2, b3)):\n      if i-a >= 0:\n        dp[i] = max(dp[i], dp[i-a]+b)\n  return max(dp)\nans = f(n, a1, a2, a3)\nprint(ans)```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s665650813",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\nmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\tmaxhoge=max(maxhoge,a+b+c)\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\nmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u947883560",
        "problem_id": "p03480",
        "submission1_id": "s127055808",
        "code_content": "\n\nimport sys\nINF = float(\"inf\")\n\n\ndef solve(S: str):\n\n    N = len(S)\n    ts = INF\n    for i in range(N):\n        if S[i] == \"0\":\n            continue\n        if S[i] == \"1\":\n            ts = min(ts, max(i, N-i))\n    print(ts)\n    return\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S = str(next(tokens))  \n    solve(S)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nINF = float(\"inf\")\n\n\ndef solve(S: str):\n\n    N = len(S)\n    ts = INF\n    for i in range(N):\n        if S[i] == \"0\":\n            continue\n        if S[i] == \"1\":\n            ts = min(ts, max(i, N-i))\n    print(ts)\n    return\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    S = str(next(tokens))  \n    solve(S)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p03625",
        "submission1_id": "s597083599",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nS = sorted(A, reverse=True)\nw, h = 0, 0\n\ncnt = 0\nfor i in range(N):\n  if cnt == 0:\n    w = S[i]\n    cnt += 1\n  elif cnt == 1:\n    h = S[i]\n    cnt += 1\n  else:\n    if S[i] == w:\n      cnt += 1\n    else:\n      cnt = 0\n      w = S[i]\n      h = 0\n      cnt += 1\n\nans = w * h\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nS = sorted(A, reverse=True)\nw, h = 0, 0\n\ncnt = 0\nfor i in range(N):\n  if cnt == 0:\n    w = S[i]\n    cnt += 1\n  elif cnt == 1:\n    h = S[i]\n    cnt += 1\n  else:\n    if S[i] == w:\n      cnt += 1\n    else:\n      cnt = 0\n      w = S[i]\n      h = 0\n      cnt += 1\n\nans = w * h\nprint(ans)\n```\n "
    },
    {
        "user_id": "u982896977",
        "problem_id": "p02727",
        "submission1_id": "s517039276",
        "code_content": "\nx,y,a,b,c = map(int,input().split())\np_ = list(map(int,input().split()))\nq_ = list(map(int,input().split()))\nr_ = list(map(int,input().split()))\np_.sort(reverse=True)\nq_.sort(reverse=True)\nr_.sort(reverse=True)\nred = x-1\ngre = y-1\nmu = 0\nwhile True:\n    if red < 0 or gre < 0 or mu == c or red == 0 or gre == 0:\n        break\n    else:\n        badr = p_[red]\n        badg = q_[gre]\n        badmu = r_[mu]\n        if badr <= badg:\n            if badr < badmu:\n                red = red-1\n                mu = mu+1\n            else:\n                break\n        else:\n            if badg < badmu:\n                gre = gre-1\n                mu = mu+1\n            else:\n                break\nans = 0\nfor i in range(red+1):\n    ans += p_[i]\nfor i in range(gre+1):\n    ans += q_[i]\nfor i in range(mu):\n    ans += r_[i]\nprint(ans)",
        "origin_generated_text": "\n```\nx,y,a,b,c = map(int,input().split())\np_ = list(map(int,input().split()))\nq_ = list(map(int,input().split()))\nr_ = list(map(int,input().split()))\np_.sort(reverse=True)\nq_.sort(reverse=True)\nr_.sort(reverse=True)\nred = x-1\ngre = y-1\nmu = 0\nwhile True:\n    if red < 0 or gre < 0 or mu == c or red == 0 or gre == 0:\n        break\n    else:\n        badr = p_[red]\n        badg = q_[gre]\n        badmu = r_[mu]\n        if badr <= badg:\n            if badr < badmu:\n                red = red-1\n                mu = mu+1\n            else:\n                break\n        else:\n            if badg < badmu:\n                gre = gre-1\n                mu = mu+1\n            else:\n                break\nans = 0\nfor i in range(red+1):\n    ans += p_[i]\nfor i in range(gre+1):\n    ans += q_[i]\nfor i in range(mu):\n    ans += r_[i]\nprint(ans)```\n "
    },
    {
        "user_id": "u114648678",
        "problem_id": "p03080",
        "submission1_id": "s914142925",
        "code_content": "\nN=int(input())\ns=input()\nn=0\nfor i in s:\n     if i=='R':\n         n+=1\n     else:\n         n+=0\nif N/2<n:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\nN=int(input())\ns=input()\nn=0\nfor i in s:\n     if i=='R':\n         n+=1\n     else:\n         n+=0\nif N/2<n:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03343",
        "submission1_id": "s982941533",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nres = pow(10, 10)\nfor x in sorted(a, reverse=True):\n  if x == pow(10, 10): break\n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j in range(N):\n          a[j] = pow(10, 10)\n      res = min(res, x - a[0])\n      break\nprint(res)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nN, K, Q = map(int, input().split())\na = list(map(int, input().split()))\nres = pow(10, 10)\nfor x in sorted(a, reverse=True):\n  if x == pow(10, 10): break\n  for i in range(N):\n    if a[i] == x:\n      for j in range(i - K + 1, i + K):\n        if j in range(N):\n          a[j] = pow(10, 10)\n      res = min(res, x - a[0])\n      break\nprint(res)```\n "
    },
    {
        "user_id": "u580362735",
        "problem_id": "p02963",
        "submission1_id": "s710213511",
        "code_content": "\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = (S\ny3 = (S-x3*x3)\nprint(x1,y1,x2,y2,x3,y3)",
        "origin_generated_text": "\n```\nS = int(input())\nx1 = 0\ny1 = 0\nx2 = 10**9\ny2 = 1\nx3 = (S\ny3 = (S-x3*x3)\nprint(x1,y1,x2,y2,x3,y3)```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03343",
        "submission1_id": "s940783359",
        "code_content": "\nN, K, Q = [int(i) for i in input().split()]\nA = [(int(v),i) for i,v in enumerate(input().split())]\nA.sort()\nB = [0]*(N)\nfor i in range(N):\n    B[A[i][1]] = i\nC = [A[B[i]][0] for i in range(N)]\nCandi = set(range(N))\nctr = 0\nans = []\nwhile len(Candi) >= Q:\n    T = sorted(Candi)\n    ans.append((list(T)[0],list(T)[Q-1]))\n    x = B.index(ctr)\n    Candi = Candi - set(B[x-K:x+1])\n    ctr += 1\nprint(min([A[j][0]-A[i][0] for i,j in ans]))",
        "origin_generated_text": "\n```\nN, K, Q = [int(i) for i in input().split()]\nA = [(int(v),i) for i,v in enumerate(input().split())]\nA.sort()\nB = [0]*(N)\nfor i in range(N):\n    B[A[i][1]] = i\nC = [A[B[i]][0] for i in range(N)]\nCandi = set(range(N))\nctr = 0\nans = []\nwhile len(Candi) >= Q:\n    T = sorted(Candi)\n    ans.append((list(T)[0],list(T)[Q-1]))\n    x = B.index(ctr)\n    Candi = Candi - set(B[x-K:x+1])\n    ctr += 1\nprint(min([A[j][0]-A[i][0] for i,j in ans]))```\n "
    },
    {
        "user_id": "u175590965",
        "problem_id": "p03036",
        "submission1_id": "s695093609",
        "code_content": "\nr,d,x = map(int,input().split())\nfor i in range(10):\n    x = r*x-d\n    print(x)\n",
        "origin_generated_text": "\n```\nr,d,x = map(int,input().split())\nfor i in range(10):\n    x = r*x-d\n    print(x)\n```\n "
    },
    {
        "user_id": "u290187182",
        "problem_id": "p03573",
        "submission1_id": "s888617582",
        "code_content": "\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\nif __name__ == '__main__':\n    a = [int(i) for i in input().split()]\n    bf = a[0]\n    for i in a:\n        if bf != i:\n            print(bf)\n            break\n        else:\n            bf = i",
        "origin_generated_text": "\n```\nimport sys\nimport copy\nimport math\nimport bisect\nimport pprint\nimport bisect\nfrom functools import reduce\nfrom copy import deepcopy\nfrom collections import deque\n\nif __name__ == '__main__':\n    a = [int(i) for i in input().split()]\n    bf = a[0]\n    for i in a:\n        if bf != i:\n            print(bf)\n            break\n        else:\n            bf = i```\n "
    },
    {
        "user_id": "u869301406",
        "problem_id": "p02385",
        "submission1_id": "s023054269",
        "code_content": "\nclass Dice(object):\n \n    def __init__(self, d):\n\n        self.rows = [d[0], d[4], d[5], d[1]]\n        self.cols = [d[0], d[2], d[5], d[3]]\n \n    def move_next_rows(self):\n        temp = self.rows.pop(0)\n        self.rows.append(temp)\n        self.__update(self.cols, self.rows)\n\n    def move_prev_rows(self):\n        temp = self.rows.pop(3)\n        self.rows.insert(0, temp)\n        self.__update(self.cols, self.rows)\n    \n    def move_next_cols(self):\n        temp = self.cols.pop(0)\n        self.cols.append(temp)\n        self.__update(self.rows, self.cols)\n \n    def move_prev_cols(self):\n        temp = self.cols.pop(3)\n        self.cols.insert(0, temp)\n        self.__update(self.rows, self.cols)\n\n    def __update(self, x, y):\n        x[0] = y[0]\n        x[2] = y[2]\n \nclass DiceChecker(object):\n\n    def __init__(self, dice1, dice2):\n        self.dice1 = dice1\n        self.dice2 = dice2\n        self.dice1_top = self.dice1.rows[0]\n        self.dice1_front = self.dice1.rows[3]\n        \n    def check_same_dice(self):\n\n        is_same = False\n        for _ in range(4):\n            for _ in range(4):\n                self.dice2.move_next_cols()\n                is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                self.dice2.move_prev_cols()\n                is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                \n                if is_same_element or is_rot_same: \n                    is_same = True\n                    break\n                self.dice2.move_next_rows()\n                \n                self.dice2.move_prev_cols()\n                \n            else:     \n                self.dice2.move_next_rows()\n                self.dice2.move_prev_cols()\n                continue\n            break\n        if is_same:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    \n    def __rot(self, dice):\n        temp = dice.rows[1]\n        dice.rows[1] = dice.rows[3]\n        dice.rows[3] = temp\n\n        temp = dice.cols[1]\n        dice.cols[1] = dice.cols[3]\n        dice.cols[3] = temp\n\n        \nd1 = list(map(int, input().split(\" \")))\nd2 = list(map(int, input().split(\" \")))\ndice1 = Dice(d1)\ndice2 = Dice(d2)\n\ndice_checker = DiceChecker(dice1, dice2)\ndice_checker.check_same_dice()\n\n",
        "origin_generated_text": "\n```\nclass Dice(object):\n \n    def __init__(self, d):\n\n        self.rows = [d[0], d[4], d[5], d[1]]\n        self.cols = [d[0], d[2], d[5], d[3]]\n \n    def move_next_rows(self):\n        temp = self.rows.pop(0)\n        self.rows.append(temp)\n        self.__update(self.cols, self.rows)\n\n    def move_prev_rows(self):\n        temp = self.rows.pop(3)\n        self.rows.insert(0, temp)\n        self.__update(self.cols, self.rows)\n    \n    def move_next_cols(self):\n        temp = self.cols.pop(0)\n        self.cols.append(temp)\n        self.__update(self.rows, self.cols)\n \n    def move_prev_cols(self):\n        temp = self.cols.pop(3)\n        self.cols.insert(0, temp)\n        self.__update(self.rows, self.cols)\n\n    def __update(self, x, y):\n        x[0] = y[0]\n        x[2] = y[2]\n \nclass DiceChecker(object):\n\n    def __init__(self, dice1, dice2):\n        self.dice1 = dice1\n        self.dice2 = dice2\n        self.dice1_top = self.dice1.rows[0]\n        self.dice1_front = self.dice1.rows[3]\n        \n    def check_same_dice(self):\n\n        is_same = False\n        for _ in range(4):\n            for _ in range(4):\n                self.dice2.move_next_cols()\n                is_same_element = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                self.dice2.move_prev_cols()\n                is_rot_same = self.dice1.rows == self.dice2.rows and self.dice1.cols == self.dice2.cols\n                \n                if is_same_element or is_rot_same: \n                    is_same = True\n                    break\n                self.dice2.move_next_rows()\n                \n                self.dice2.move_prev_cols()\n                \n            else:     \n                self.dice2.move_next_rows()\n                self.dice2.move_prev_cols()\n                continue\n            break\n        if is_same:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    \n    def __rot(self, dice):\n        temp = dice.rows[1]\n        dice.rows[1] = dice.rows[3]\n        dice.rows[3] = temp\n\n        temp = dice.cols[1]\n        dice.cols[1] = dice.cols[3]\n        dice.cols[3] = temp\n\n        \nd1 = list(map(int, input().split(\" \")))\nd2 = list(map(int, input().split(\" \")))\ndice1 = Dice(d1)\ndice2 = Dice(d2)\n\ndice_checker = DiceChecker(dice1, dice2)\ndice_checker.check_same_dice()\n\n```\n "
    },
    {
        "user_id": "u480300350",
        "problem_id": "p03714",
        "submission1_id": "s103417578",
        "code_content": "\n\n\nimport sys\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom heapq import heapify, heappush, heappop \n\n\n\n\n\n\n\nfrom operator import itemgetter              \n\n\n\n\ndef main():\n    mod = 1000000007                \n    inf = float('inf')              \n    \n    sys.setrecursionlimit(10**6)    \n    def input(): return sys.stdin.readline().rstrip()\n    def ii():    return int(input())\n    def mi():    return map(int, input().split())\n    def mi_0():  return map(lambda x: int(x)-1, input().split())\n    def lmi():   return list(map(int, input().split()))\n    def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n    def li():    return list(input())\n    \n    \n    n = ii()\n    L = lmi()\n    \n    left = sum(L[:n])\n    l_h = L[:n]    \n\n    right = 0\n    tmp = [[i, L[i]] for i in range(n, 3*n)]\n    latter_min_nth = [False] * 3 * n    \n    sub_member_r_h = []    \n    for ind in range(n):\n        i, num = tmp[ind]\n        right += num\n        latter_min_nth[i] = True\n    for ind in range(n, 2*n):\n        i, num = tmp[ind]\n        sub_member_r_h.append([num, i])\n    \n    max_score = left - right\n    heapify(l_h)\n    heapify(sub_member_r_h)\n    for i in range(n, 2*n):\n        \n        if l_h[0] < L[i]:\n            \n            left -= heappop(l_h)\n            left += L[i]\n            heappush(l_h, L[i])\n        if latter_min_nth[i]:\n            \n            right -= L[i]\n            while sub_member_r_h[0][1] <= i:\n                heappop(sub_member_r_h)    \n            num, ind = heappop(sub_member_r_h)\n            assert (ind > i)\n            right += num\n            latter_min_nth[ind] = True\n        max_score = max(max_score, left - right)\n    \n    print(max_score)\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\nimport sys\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfrom heapq import heapify, heappush, heappop \n\n\n\n\n\n\n\nfrom operator import itemgetter              \n\n\n\n\ndef main():\n    mod = 1000000007                \n    inf = float('inf')              \n    \n    sys.setrecursionlimit(10**6)    \n    def input(): return sys.stdin.readline().rstrip()\n    def ii():    return int(input())\n    def mi():    return map(int, input().split())\n    def mi_0():  return map(lambda x: int(x)-1, input().split())\n    def lmi():   return list(map(int, input().split()))\n    def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n    def li():    return list(input())\n    \n    \n    n = ii()\n    L = lmi()\n    \n    left = sum(L[:n])\n    l_h = L[:n]    \n\n    right = 0\n    tmp = [[i, L[i]] for i in range(n, 3*n)]\n    latter_min_nth = [False] * 3 * n    \n    sub_member_r_h = []    \n    for ind in range(n):\n        i, num = tmp[ind]\n        right += num\n        latter_min_nth[i] = True\n    for ind in range(n, 2*n):\n        i, num = tmp[ind]\n        sub_member_r_h.append([num, i])\n    \n    max_score = left - right\n    heapify(l_h)\n    heapify(sub_member_r_h)\n    for i in range(n, 2*n):\n        \n        if l_h[0] < L[i]:\n            \n            left -= heappop(l_h)\n            left += L[i]\n            heappush(l_h, L[i])\n        if latter_min_nth[i]:\n            \n            right -= L[i]\n            while sub_member_r_h[0][1] <= i:\n                heappop(sub_member_r_h)    \n            num, ind = heappop(sub_member_r_h)\n            assert (ind > i)\n            right += num\n            latter_min_nth[ind] = True\n        max_score = max(max_score, left - right)\n    \n    print(max_score)\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u707870100",
        "problem_id": "p03613",
        "submission1_id": "s123805855",
        "code_content": "\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\tmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n",
        "origin_generated_text": "\n```\n\n\nimport copy\nimport sys\nimport math\n\nn = int(input())\ntmp = input().split()\nhoge = list(map(lambda a: int(a), tmp))\n\nhoge.sort()\nhoge.append(-1)\na=0\nb=0\nc=1\nmaxhoge=0\nfor i in range(0,n):\n\tif(hoge[i]!=hoge[i+1]):\n\t\ta=b+c\n\t\tb=c\n\t\tc=1\n\telse:\n\t\tc+=1\n\tmaxhoge=max(maxhoge,a+b+c)\n\n\n\n\nprint(maxhoge)\n\n```\n "
    },
    {
        "user_id": "u307124824",
        "problem_id": "p03079",
        "submission1_id": "s044587225",
        "code_content": "\nimport sys\n\nA, B, C = input().split()\na = int(A)\nb = int(B)\nc = int(C)\n\nif a == b:\n    if a == c:\n        print('Yes')\n        sys.exit()\n        \nprint('No')\n",
        "origin_generated_text": "\n```\nimport sys\n\nA, B, C = input().split()\na = int(A)\nb = int(B)\nc = int(C)\n\nif a == b:\n    if a == c:\n        print('Yes')\n        sys.exit()\n        \nprint('No')\n```\n "
    },
    {
        "user_id": "u251075661",
        "problem_id": "p02854",
        "submission1_id": "s482839205",
        "code_content": "\n```\nn = int(input())\naaa = map(int, input().split())\n\nlength = 0\nlengths = []\nfor a in aaa:\n  length += a\n  lengths.append(length)\n  \nans
        "origin_generated_text": "\n```\nn = int(input())\naaa = map(int, input().split())\n\nlength = 0\nlengths = []\nfor a in aaa:\n  length += a\n  lengths.append(length)\n  \nans = 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"
    },
    {
        "user_id": "u341736906",
        "problem_id": "p02742",
        "submission1_id": "s884374129",
        "code_content": "\nimport math\nH,W=map(int,input().split())\nif (H+W)%2==0:\n    print(int((H+W)\nelse:\n    print(math.ceil(H*W/2))",
        "origin_generated_text": "\n```\nimport math\nH,W=map(int,input().split())\nif (H+W)%2==0:\n    print(int((H+W)\nelse:\n    print(math.ceil(H*W/2))```\n "
    },
    {
        "user_id": "u701318346",
        "problem_id": "p03970",
        "submission1_id": "s169677894",
        "code_content": "\nS = input()\nA = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != A[i]:\n    ans += 1\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nS = input()\nA = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != A[i]:\n    ans += 1\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u357267874",
        "problem_id": "p02281",
        "submission1_id": "s014941305",
        "code_content": "\nclass Node:\n    def __init__(self, id):\n        self.id = id\n        self.left = None\n        self.right = None\n\nroot = None\nn = int(input())\nnode_list = []\nfor i in range(n):\n    node_list.append(Node(i))\n\nfor i in range(n):\n    id, left, right = list(map(int, input().split()))\n    node = node_list[id]\n    if left > -1:\n        node.left = node_list[left]\n    if right > -1:\n        node.right = node_list[right]\n    if id == 0 or root is None:\n        root = node\n\ndef preorder(node):\n    if node is None:\n        return\n    print(' ' + str(node.id), end='')\n    preorder(node.left)\n    preorder(node.right)\n\ndef inorder(node):\n    if node is None:\n        return\n    inorder(node.left)\n    print(' ' + str(node.id), end='')\n    inorder(node.right)\n\ndef postorder(node):\n    if node is None:\n        return\n    postorder(node.left)\n    postorder(node.right)\n    print(' ' + str(node.id), end='')\n\nprint('Preorder')\npreorder(root)\nprint('')\n\nprint('Inorder')\ninorder(root)\nprint('')\n\nprint('Postorder')\npostorder(root)\nprint('')\n",
        "origin_generated_text": "\n```\nclass Node:\n    def __init__(self, id):\n        self.id = id\n        self.left = None\n        self.right = None\n\nroot = None\nn = int(input())\nnode_list = []\nfor i in range(n):\n    node_list.append(Node(i))\n\nfor i in range(n):\n    id, left, right = list(map(int, input().split()))\n    node = node_list[id]\n    if left > -1:\n        node.left = node_list[left]\n    if right > -1:\n        node.right = node_list[right]\n    if id == 0 or root is None:\n        root = node\n\ndef preorder(node):\n    if node is None:\n        return\n    print(' ' + str(node.id), end='')\n    preorder(node.left)\n    preorder(node.right)\n\ndef inorder(node):\n    if node is None:\n        return\n    inorder(node.left)\n    print(' ' + str(node.id), end='')\n    inorder(node.right)\n\ndef postorder(node):\n    if node is None:\n        return\n    postorder(node.left)\n    postorder(node.right)\n    print(' ' + str(node.id), end='')\n\nprint('Preorder')\npreorder(root)\nprint('')\n\nprint('Inorder')\ninorder(root)\nprint('')\n\nprint('Postorder')\npostorder(root)\nprint('')\n```\n "
    },
    {
        "user_id": "u445983356",
        "problem_id": "p02854",
        "submission1_id": "s371315429",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\n\nnow_length = sum(A)\nhalf = int(now_length / 2)\nlow_price = now_length - sum(A[:int(N/2)])\n\nfor i in range(int(N/2),0,-1) :\n  var = now_length - sum(A[:i])\n  if half == low_price :\n    break\n  elif low_price > var :\n    low_price = var\n  else :\n    break\nelse :\n  for i in range(int(N/2)+1,N) :\n    var = now_length - sum(A[:i])\n    if half == low_price :\n      break\n    elif low_price > var :\n      low_price = var\n    else :\n      break\n\nif half == low_price :\n  print(0)\nelse :\n  print(low_price)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\n\nnow_length = sum(A)\nhalf = int(now_length / 2)\nlow_price = now_length - sum(A[:int(N/2)])\n\nfor i in range(int(N/2),0,-1) :\n  var = now_length - sum(A[:i])\n  if half == low_price :\n    break\n  elif low_price > var :\n    low_price = var\n  else :\n    break\nelse :\n  for i in range(int(N/2)+1,N) :\n    var = now_length - sum(A[:i])\n    if half == low_price :\n      break\n    elif low_price > var :\n      low_price = var\n    else :\n      break\n\nif half == low_price :\n  print(0)\nelse :\n  print(low_price)```\n "
    },
    {
        "user_id": "u657208344",
        "problem_id": "p03023",
        "submission1_id": "s381291269",
        "code_content": "\nn=int(input())\nprint(n*(n-3)",
        "origin_generated_text": "\n```\nn=int(input())\nprint(n*(n-3)```\n "
    },
    {
        "user_id": "u434664398",
        "problem_id": "p03103",
        "submission1_id": "s182277830",
        "code_content": "\nN,M = [int(x) for x in input().split(' ')]\nAB = {}\nfor i in range(N):\n  a,b = [int(x) for x in input().split(' ')]\n  AB[a] = b\n  \ndc = sorted(AB.items())\n\nc = 0\nm = M\nfor s in dc:\n  if m - s[1] >= 0:\n    c += s[0] * s[1]\n    m -= s[1]\n  else:\n    c += s[0] * (m - s[1])\n    break\nprint(c)",
        "origin_generated_text": "\n```\nN,M = [int(x) for x in input().split(' ')]\nAB = {}\nfor i in range(N):\n  a,b = [int(x) for x in input().split(' ')]\n  AB[a] = b\n  \ndc = sorted(AB.items())\n\nc = 0\nm = M\nfor s in dc:\n  if m - s[1] >= 0:\n    c += s[0] * s[1]\n    m -= s[1]\n  else:\n    c += s[0] * (m - s[1])\n    break\nprint(c)```\n "
    },
    {
        "user_id": "u964299793",
        "problem_id": "p03714",
        "submission1_id": "s302652555",
        "code_content": "\nn=int(input())\na=list(map(int,input().split()))\nimport heapq as hq\nf1=[0]*(3*n)\nf1[n-1]=sum(a[:n])\nh=[]\nfor i in a[:n]:\n    h.append(-i)\nhq.heapify(h)\nsu=f1[n-1]\nfor i in range(n,2*n):\n    cur=a[i]\n    x=-1*hq.heappop(h)\n    if cur>x:\n        su-=x\n        su+=cur\n        hq.heappush(h,cur)\n    else:\n        hq.heappush(h,x)\n    f1[i]=su\nf2=[0]*(3*n)\nf2[2*n]=sum(a[2*n:])\nsu=f2[2*n]\nh2=[]\nfor i in a[2*n:]:\n    h2.append(-i)\nhq.heapify(h2)\nfor i in range(2*n-1,n-1,-1):\n    cur=a[i]\n    x=-1*hq.heappop(h2)\n    if cur<x:\n        su-=x\n        su+=cur\n        hq.heappush(h2,-cur)\n    else:\n        hq.heappush(h2,-x)\n    f2[i]=su\nans=-float('inf')\nfor i in range(n-1,2*n):\n    ans=max(ans,f1[i]-f2[i+1])\nprint(ans)\n\n\n\n",
        "origin_generated_text": "\n```\nn=int(input())\na=list(map(int,input().split()))\nimport heapq as hq\nf1=[0]*(3*n)\nf1[n-1]=sum(a[:n])\nh=[]\nfor i in a[:n]:\n    h.append(-i)\nhq.heapify(h)\nsu=f1[n-1]\nfor i in range(n,2*n):\n    cur=a[i]\n    x=-1*hq.heappop(h)\n    if cur>x:\n        su-=x\n        su+=cur\n        hq.heappush(h,cur)\n    else:\n        hq.heappush(h,x)\n    f1[i]=su\nf2=[0]*(3*n)\nf2[2*n]=sum(a[2*n:])\nsu=f2[2*n]\nh2=[]\nfor i in a[2*n:]:\n    h2.append(-i)\nhq.heapify(h2)\nfor i in range(2*n-1,n-1,-1):\n    cur=a[i]\n    x=-1*hq.heappop(h2)\n    if cur<x:\n        su-=x\n        su+=cur\n        hq.heappush(h2,-cur)\n    else:\n        hq.heappush(h2,-x)\n    f2[i]=su\nans=-float('inf')\nfor i in range(n-1,2*n):\n    ans=max(ans,f1[i]-f2[i+1])\nprint(ans)\n\n\n\n```\n "
    },
    {
        "user_id": "u047102107",
        "problem_id": "p03752",
        "submission1_id": "s485132794",
        "code_content": "\nfrom itertools import combinations\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nbest_score = float(\"inf\")\nfor sel in combinations(range(N), K):\n    cost = 0\n\n    for i in range(K):\n        if A[sel[i]] > 0:\n            cost += abs(A[sel[i]] - A[sel[0]])\n        else:\n            cost += abs(A[sel[i]] - A[sel[0]]) + 1\n\n    best_score = min(best_score, cost)\nprint(best_score)",
        "origin_generated_text": "\n```\nfrom itertools import combinations\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nbest_score = float(\"inf\")\nfor sel in combinations(range(N), K):\n    cost = 0\n\n    for i in range(K):\n        if A[sel[i]] > 0:\n            cost += abs(A[sel[i]] - A[sel[0]])\n        else:\n            cost += abs(A[sel[i]] - A[sel[0]]) + 1\n\n    best_score = min(best_score, cost)\nprint(best_score)```\n "
    },
    {
        "user_id": "u916242112",
        "problem_id": "p02633",
        "submission1_id": "s071660631",
        "code_content": "\nX=int(input())\nY =360\nwhile 1:\n\tif Y % X == 0:\n\t\tprint(Y\n\t\tbreak\n\telse:\n\t\tY += 360",
        "origin_generated_text": "\n```\nX=int(input())\nY =360\nwhile 1:\n\tif Y % X == 0:\n\t\tprint(Y\n\t\tbreak\n\telse:\n\t\tY += 360```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s399239959",
        "code_content": "\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**i and c<=2*3**i+1 and 3**(i-1)<=b and 2*3**(i-1)+1<=d:mx=i\n    if b<=3**i and d<=2*3**i+1 and 3**(i-1)<=a and 2*3**(i-1)+1<=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**i and c<=2*3**i+1 and 3**(i-1)<=b and 2*3**(i-1)+1<=d:mx=i\n    if b<=3**i and d<=2*3**i+1 and 3**(i-1)<=a and 2*3**(i-1)+1<=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u386819480",
        "problem_id": "p02854",
        "submission1_id": "s274276869",
        "code_content": "\n\nimport sys\nsys.setrecursionlimit(10000000)\nINF = 1<<32\n\n\ndef solve(N: int, A: \"List[int]\"):\n    r = [0] * (N+1)\n    rr = [0] * (N+1)\n\n    for i in range(1,N+1):\n        r[i] = r[i-1] + A[i-1]\n        rr[i] = rr[i-1] + A[i-1]-1\n\n    c = sum(A)\n    p = 0\n    t = 0\n    for i in range(N):\n        if r[i] >= c:\n            p = i\n            t = r[i] - c\n            break\n\n    print(int(t))\n\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    A = [int(next(tokens)) for _ in range(N)]  \n    solve(N, A)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nsys.setrecursionlimit(10000000)\nINF = 1<<32\n\n\ndef solve(N: int, A: \"List[int]\"):\n    r = [0] * (N+1)\n    rr = [0] * (N+1)\n\n    for i in range(1,N+1):\n        r[i] = r[i-1] + A[i-1]\n        rr[i] = rr[i-1] + A[i-1]-1\n\n    c = sum(A)\n    p = 0\n    t = 0\n    for i in range(N):\n        if r[i] >= c:\n            p = i\n            t = r[i] - c\n            break\n\n    print(int(t))\n\n    return\n\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  \n    A = [int(next(tokens)) for _ in range(N)]  \n    solve(N, A)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u075317232",
        "problem_id": "p02633",
        "submission1_id": "s055747935",
        "code_content": "\n\nimport math\n \ndef Strider():\n \n    NumA = int(input())\n \n    count = 360/NumA\n    \n    NumB = 1\n    \n    while (count != 0):\n        NumB = NumB + 1\n        count = 360*NumB/NumA\n    \n    print(int(count))\n \nif __name__ == '__main__':\n    Strider()",
        "origin_generated_text": "\n```\n\nimport math\n \ndef Strider():\n \n    NumA = int(input())\n \n    count = 360/NumA\n    \n    NumB = 1\n    \n    while (count != 0):\n        NumB = NumB + 1\n        count = 360*NumB/NumA\n    \n    print(int(count))\n \nif __name__ == '__main__':\n    Strider()```\n "
    },
    {
        "user_id": "u787456042",
        "problem_id": "p03480",
        "submission1_id": "s521166656",
        "code_content": "\ns=input();l=[];n=len(s)\nfor i in range(n-1):\n if s[i]!=s[i+1]:l+=[max(i+1,n-i-1)]\nprint(min(l)if l else n)",
        "origin_generated_text": "\n```\ns=input();l=[];n=len(s)\nfor i in range(n-1):\n if s[i]!=s[i+1]:l+=[max(i+1,n-i-1)]\nprint(min(l)if l else n)```\n "
    },
    {
        "user_id": "u242757684",
        "problem_id": "p02625",
        "submission1_id": "s255631660",
        "code_content": "\nMOD = 10 ** 9 + 7\nN,M = map(int,input().split())\nans1 = 1\nfor i in range(N):\n    ans1 *= M - i\n    ans1 %= MOD\nans2 = [1,M-N]\nfor i in range(2,N+1):\n    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\nprint(ans1 * ans2[N] % MOD)",
        "origin_generated_text": "\n```\nMOD = 10 ** 9 + 7\nN,M = map(int,input().split())\nans1 = 1\nfor i in range(N):\n    ans1 *= M - i\n    ans1 %= MOD\nans2 = [1,M-N]\nfor i in range(2,N+1):\n    ans2.append((ans2[-2] * (N-1) + ans2[-1] * (M-1))% MOD)\nprint(ans1 * ans2[N] % MOD)```\n "
    },
    {
        "user_id": "u647634615",
        "problem_id": "p02385",
        "submission1_id": "s193501930",
        "code_content": "\ndice_1 = input().split()\ndice_2 = input().split()\n\nrolls = {' ':[0, 1, 2, 3, 4, 5], \n         'W':[2, 1, 5, 0, 4, 3], \n         'N':[1, 5, 2, 3, 0, 4], \n         'E':[3, 1, 0, 5, 4, 2], \n         'S':[4, 0, 2, 3, 5, 1]\n        }\norders = [' ', 'N', 'W', 'E', 'S', 'SS']\ntf = 0\nfor order in orders:\n    copy_2 = dice_2\n    for d in order:\n        roll = rolls[d]\n        copy_2 = [copy_2[i] for i in roll]\n    \n    l = [1, 2, 4, 3]\n    a0 = copy_2[0] == dice_1[0]\n    a1 = copy_2[5] == dice_1[5]\n    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n    if  a0 and a1 and a2:\n        tf += 1\n\n\n\n\n\nif tf>0:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\ndice_1 = input().split()\ndice_2 = input().split()\n\nrolls = {' ':[0, 1, 2, 3, 4, 5], \n         'W':[2, 1, 5, 0, 4, 3], \n         'N':[1, 5, 2, 3, 0, 4], \n         'E':[3, 1, 0, 5, 4, 2], \n         'S':[4, 0, 2, 3, 5, 1]\n        }\norders = [' ', 'N', 'W', 'E', 'S', 'SS']\ntf = 0\nfor order in orders:\n    copy_2 = dice_2\n    for d in order:\n        roll = rolls[d]\n        copy_2 = [copy_2[i] for i in roll]\n    \n    l = [1, 2, 4, 3]\n    a0 = copy_2[0] == dice_1[0]\n    a1 = copy_2[5] == dice_1[5]\n    a2 = ' '.join([copy_2[s]for s in l]) in ' '.join([dice_1[s]for s in l] * 2)\n    if  a0 and a1 and a2:\n        tf += 1\n\n\n\n\n\nif tf>0:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u075155299",
        "problem_id": "p03563",
        "submission1_id": "s126662027",
        "code_content": "\nr=int(input())\ng=int(input())\n\nprint((g-r)",
        "origin_generated_text": "\n```\nr=int(input())\ng=int(input())\n\nprint((g-r)```\n "
    },
    {
        "user_id": "u059727354",
        "problem_id": "p03343",
        "submission1_id": "s872750015",
        "code_content": "\nn, k, q = map(int, input().split())\na = list(map(int, input().split()))\n\nd = [a]\na = sorted(a)\nans = a[q - 1] - a[0]\n\nwhile True:\n    newd = list()\n    li = list()\n    for sub in d:\n        for c in sub:\n            if c != a[0]:\n                li.append(c)\n            else:\n                newd.append(li)\n                li = list()\n    d = list()\n    for li in newd:\n        if len(li) < k:\n            continue\n        else:\n            d.append(li)\n            li = sorted(li)\n            ans = min(li[q - 1] - li[0], ans)\n \n    else:\n        break\nprint(ans)",
        "origin_generated_text": "\n```\nn, k, q = map(int, input().split())\na = list(map(int, input().split()))\n\nd = [a]\na = sorted(a)\nans = a[q - 1] - a[0]\n\nwhile True:\n    newd = list()\n    li = list()\n    for sub in d:\n        for c in sub:\n            if c != a[0]:\n                li.append(c)\n            else:\n                newd.append(li)\n                li = list()\n    d = list()\n    for li in newd:\n        if len(li) < k:\n            continue\n        else:\n            d.append(li)\n            li = sorted(li)\n            ans = min(li[q - 1] - li[0], ans)\n \n    else:\n        break\nprint(ans)```\n "
    },
    {
        "user_id": "u197300773",
        "problem_id": "p03318",
        "submission1_id": "s676634434",
        "code_content": "\ndef f(n):\n    s=str(n)\n    return sum([int(s[i]) for i in range(len(s))])\n\nsunuke=[]\nfor i in range(1000):\n    for j in range(2,1000):\n        sunuke.append(j*(10**i)-1)\nL=len(sunuke)\nans=[sunuke[L-1]]\nfor i in range(len(sunuke)-2,-1,-1):\n    if sunuke[i]/f(sunuke[i])<=ans[-1]/f(ans[-1]):\n        ans.append(sunuke[i])\nans=ans[::-1]\n\n    \n\nfor i in range(int(input())):\n    print(ans[i])",
        "origin_generated_text": "\n```\ndef f(n):\n    s=str(n)\n    return sum([int(s[i]) for i in range(len(s))])\n\nsunuke=[]\nfor i in range(1000):\n    for j in range(2,1000):\n        sunuke.append(j*(10**i)-1)\nL=len(sunuke)\nans=[sunuke[L-1]]\nfor i in range(len(sunuke)-2,-1,-1):\n    if sunuke[i]/f(sunuke[i])<=ans[-1]/f(ans[-1]):\n        ans.append(sunuke[i])\nans=ans[::-1]\n\n    \n\nfor i in range(int(input())):\n    print(ans[i])```\n "
    },
    {
        "user_id": "u583285098",
        "problem_id": "p02665",
        "submission1_id": "s431028962",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nlast = A[-1]\ncount = last\nroot = 1\nfor i in range(N):\n  if root < A[i]:\n    print(-1)\n    break\n  root = (root-A[i])*2+1\n  count+=root\nelse:\n  print(count)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nlast = A[-1]\ncount = last\nroot = 1\nfor i in range(N):\n  if root < A[i]:\n    print(-1)\n    break\n  root = (root-A[i])*2+1\n  count+=root\nelse:\n  print(count)```\n "
    },
    {
        "user_id": "u396553339",
        "problem_id": "p03729",
        "submission1_id": "s581780979",
        "code_content": "\na, b, c = map(str, input().split())\n\na_last = a[len(a) - 1]\nb_last = b[len(b) - 1]\n\nif a_last == b[0] and b_last == c[0] :\n    print('YES')\nelse :\n    print('NO')",
        "origin_generated_text": "\n```\na, b, c = map(str, input().split())\n\na_last = a[len(a) - 1]\nb_last = b[len(b) - 1]\n\nif a_last == b[0] and b_last == c[0] :\n    print('YES')\nelse :\n    print('NO')```\n "
    },
    {
        "user_id": "u375282392",
        "problem_id": "p03103",
        "submission1_id": "s187794140",
        "code_content": "\nn,m = map(int,input().split())\nab = []\nfor i in range(n):\n\tab.append(list(map(int,input().split())))\n    \nsab = sorted(ab,key=lambda x:x[0])\ncost = 0\nfor i in sab:\n\tif m - i[1] > 0:\n\t\tm -= i[1]\n\t\tcost += i[0] * i[1]\n\telse:\n\t\tfor j in range(m):\n\t\t\tcost += i[0]\n\t\tbreak\nprint(cost)",
        "origin_generated_text": "\n```\nn,m = map(int,input().split())\nab = []\nfor i in range(n):\n\tab.append(list(map(int,input().split())))\n    \nsab = sorted(ab,key=lambda x:x[0])\ncost = 0\nfor i in sab:\n\tif m - i[1] > 0:\n\t\tm -= i[1]\n\t\tcost += i[0] * i[1]\n\telse:\n\t\tfor j in range(m):\n\t\t\tcost += i[0]\n\t\tbreak\nprint(cost)```\n "
    },
    {
        "user_id": "u535171899",
        "problem_id": "p03568",
        "submission1_id": "s590949576",
        "code_content": "\n\n\n\nn = int(input())\na_inputs = list(map(int,input().split()))\n\nall_pair = 1\nodd_pair = 1\n\nfor i in range(n):\n    if a_inputs[i]%2==0:\n        all_pair*=2\n        odd_pair*=1\n    else:\n        all_pair*=3\n        odd_pair*=2\n\nprint(all_pair-odd_pair)\n\n\n",
        "origin_generated_text": "\n```\n\n\n\nn = int(input())\na_inputs = list(map(int,input().split()))\n\nall_pair = 1\nodd_pair = 1\n\nfor i in range(n):\n    if a_inputs[i]%2==0:\n        all_pair*=2\n        odd_pair*=1\n    else:\n        all_pair*=3\n        odd_pair*=2\n\nprint(all_pair-odd_pair)\n\n\n```\n "
    },
    {
        "user_id": "u742013327",
        "problem_id": "p02287",
        "submission1_id": "s567335714",
        "code_content": "\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\n\n\ndef decode_heap(target_list):\n    for i, key in enumerate(target_list):\n        node_index = i + 1\n        parent_index = int(node_index / 2) - 1\n        parent = \"\"\n        if not parent_index < 0:\n            parent = \" parent key = \" + str(target_list[parent_index]) + \", \"\n            \n        left_index = node_index * 2 - 1\n        right_index = node_index * 2\n        if left_index < len(target_list):\n            left = \" left key = \" + str(target_list[left_index]) + \", \"\n        else:\n            left = \"\"\n        if right_index < len(target_list):\n            right = \" right key = \" + str(target_list[right_index]) + \", \"\n        else:\n            right = \"\"\n\n        print(\"node {}: key = {},{}{}{}\".format(node_index, key, parent, left, right))\n\n        \ndef main():\n    n_nodes = int(input())\n    target_list = [int(a) for a in input().split()]\n    decode_heap(target_list)\n    \nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u254088063",
        "problem_id": "p02665",
        "submission1_id": "s465691989",
        "code_content": "\nN = int(input())\nA = list(map(int, input().split()))\nbottom = sum(A)\n\nif A[0] >= 2:\n  print(-1)\n  exit()\n\nret = 1\nchildren = 1 - A[0]\nbottom -= A[0]\n \nfor i in range(N):\n    children = children * 2 - A[i+1]\n    if children <= -1:\n      ret = -1\n      break\n    \n    bottom -= A[i+1]\n    if children >= bottom:\n      children = bottom\n    ret += children + A[i+1]\nprint(ret)\n",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int, input().split()))\nbottom = sum(A)\n\nif A[0] >= 2:\n  print(-1)\n  exit()\n\nret = 1\nchildren = 1 - A[0]\nbottom -= A[0]\n \nfor i in range(N):\n    children = children * 2 - A[i+1]\n    if children <= -1:\n      ret = -1\n      break\n    \n    bottom -= A[i+1]\n    if children >= bottom:\n      children = bottom\n    ret += children + A[i+1]\nprint(ret)\n```\n "
    },
    {
        "user_id": "u224488911",
        "problem_id": "p03760",
        "submission1_id": "s637709004",
        "code_content": "\no = list(input())\ne = list(input())[::-1]\nfor (x,y) in zip(o,e) :print(x+y,end = \"\"),",
        "origin_generated_text": "\n```\no = list(input())\ne = list(input())[::-1]\nfor (x,y) in zip(o,e) :print(x+y,end = \"\"),```\n "
    },
    {
        "user_id": "u368780724",
        "problem_id": "p03343",
        "submission1_id": "s351299238",
        "code_content": "\nN, K, Q = [int(i) for i in input().split()]\nA = [(int(v),i) for i,v in enumerate(input().split())]\nA.sort()\nB = [0]*(N)\nfor i in range(N):\n    B[A[i][1]] = i\nC = [A[B[i]][0] for i in range(N)]\nCandi = set(range(N))\nctr = 0\nans = []\nwhile len(Candi) >= Q:\n    ans.append((B[Candi.pop()],B[Candi.pop()]))\n    x = B.index(ctr)\n    Candi = Candi - set(B[x-K+1:x+K])\n    ctr += 1\nprint(min([A[j][0]-A[i][0] for i,j in ans]))",
        "origin_generated_text": "\n```\nN, K, Q = [int(i) for i in input().split()]\nA = [(int(v),i) for i,v in enumerate(input().split())]\nA.sort()\nB = [0]*(N)\nfor i in range(N):\n    B[A[i][1]] = i\nC = [A[B[i]][0] for i in range(N)]\nCandi = set(range(N))\nctr = 0\nans = []\nwhile len(Candi) >= Q:\n    ans.append((B[Candi.pop()],B[Candi.pop()]))\n    x = B.index(ctr)\n    Candi = Candi - set(B[x-K+1:x+K])\n    ctr += 1\nprint(min([A[j][0]-A[i][0] for i,j in ans]))```\n "
    },
    {
        "user_id": "u594803920",
        "problem_id": "p03752",
        "submission1_id": "s199281832",
        "code_content": "\nn, k = map(int, input().split())\nli = list(map(int, input().split()))\nmin_ = 10**12\nfor i in range(1<<n):\n    max_height = li[0]\n    money = 0\n    can_look = 0\n    li_h = []\n    for j in range(n):\n        if j != 0:\n            max_height = max(max_height, li_h[j-1])\n        \n        if j == 0:\n            can_look += 1\n            li_h.append(li[0])\n            continue\n        if (i>>j)&1:\n            can_look += 1\n            if li[j] <= max_height:\n                li_h.append(max_height+1)\n            else:\n                li_h.append(li[j])\n        else:\n            li_h.append(li[j])\n    if can_look >= k:\n        money = sum(li_h) - sum(li)\n        min_ = min(min_, money)\nprint(min_)",
        "origin_generated_text": "\n```\nn, k = map(int, input().split())\nli = list(map(int, input().split()))\nmin_ = 10**12\nfor i in range(1<<n):\n    max_height = li[0]\n    money = 0\n    can_look = 0\n    li_h = []\n    for j in range(n):\n        if j != 0:\n            max_height = max(max_height, li_h[j-1])\n        \n        if j == 0:\n            can_look += 1\n            li_h.append(li[0])\n            continue\n        if (i>>j)&1:\n            can_look += 1\n            if li[j] <= max_height:\n                li_h.append(max_height+1)\n            else:\n                li_h.append(li[j])\n        else:\n            li_h.append(li[j])\n    if can_look >= k:\n        money = sum(li_h) - sum(li)\n        min_ = min(min_, money)\nprint(min_)```\n "
    },
    {
        "user_id": "u620480037",
        "problem_id": "p03546",
        "submission1_id": "s744104540",
        "code_content": "\nH,W=map(int,input().split())\n\nA=[[0]*10 for i in range(10)]\nfor a in range(10):\n    B=list(map(int,input().split()))\n    for b in range(10):\n        A[a][b]=B[b]\n\nfor a in range(10):\n    for b in range(10):\n        for c in range(10):\n            A[a][b]=min(A[a][b],A[a][c]+A[c][b])\n\nans=0\nD=[]\nfor j in range(H):\n    C=list(map(int,input().split()))\n    D.append(C)\n        \nfor k in range(H):\n    for l in range(W):\n        if D[k][l]!=-1:\n            ans+=A[D[k][l]][1]\nprint(ans)",
        "origin_generated_text": "\n```\nH,W=map(int,input().split())\n\nA=[[0]*10 for i in range(10)]\nfor a in range(10):\n    B=list(map(int,input().split()))\n    for b in range(10):\n        A[a][b]=B[b]\n\nfor a in range(10):\n    for b in range(10):\n        for c in range(10):\n            A[a][b]=min(A[a][b],A[a][c]+A[c][b])\n\nans=0\nD=[]\nfor j in range(H):\n    C=list(map(int,input().split()))\n    D.append(C)\n        \nfor k in range(H):\n    for l in range(W):\n        if D[k][l]!=-1:\n            ans+=A[D[k][l]][1]\nprint(ans)```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p03480",
        "submission1_id": "s793205258",
        "code_content": "\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    a, b, c, d = LI()\n    a += b\n    c += d\n    ans = [\"Left\", \"Right\"]\n    if a == c:\n        print(\"Balanced\")\n        return\n    print(ans[a < c])\n    return\n\n\ndef B():\n    n, a, b = LI()\n    ans = 0\n    for i in range(1, n + 1):\n        if a <= sum(list(map(int, list(str(i))))) <= b:\n           ans += i\n    print(ans) \n    \n    return\n\n\ndef C():\n    x, y = LI()\n    ans = 0\n    while x <= y:\n        ans += 1\n        x *= 2\n    print(ans)\n    return\n\n\ndef D():\n    s = S()\n    lis = []\n    for i in range(len(s)):\n        si = s[i]\n        b = 0\n        for k in range(i, len(s)):\n            if si == s[k]:\n                b += 1\n                continue\n            lis.append(b)\n            break\n        else:\n            lis.append(b)\n            if i == len(s) - 1:\n                lis.append(0)\n                i += 1\n    if len(lis) == 4:\n        print(max(lis[1:3]))\n    else:\n        ans = inf\n        for i in range(1, len(lis) - 2):\n            ans = min(ans, lis[i] + lis[i + 1])\n        print(ans)\n    return\n\n\nif __name__ == '__main__':\n    D()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    a, b, c, d = LI()\n    a += b\n    c += d\n    ans = [\"Left\", \"Right\"]\n    if a == c:\n        print(\"Balanced\")\n        return\n    print(ans[a < c])\n    return\n\n\ndef B():\n    n, a, b = LI()\n    ans = 0\n    for i in range(1, n + 1):\n        if a <= sum(list(map(int, list(str(i))))) <= b:\n           ans += i\n    print(ans) \n    \n    return\n\n\ndef C():\n    x, y = LI()\n    ans = 0\n    while x <= y:\n        ans += 1\n        x *= 2\n    print(ans)\n    return\n\n\ndef D():\n    s = S()\n    lis = []\n    for i in range(len(s)):\n        si = s[i]\n        b = 0\n        for k in range(i, len(s)):\n            if si == s[k]:\n                b += 1\n                continue\n            lis.append(b)\n            break\n        else:\n            lis.append(b)\n            if i == len(s) - 1:\n                lis.append(0)\n                i += 1\n    if len(lis) == 4:\n        print(max(lis[1:3]))\n    else:\n        ans = inf\n        for i in range(1, len(lis) - 2):\n            ans = min(ans, lis[i] + lis[i + 1])\n        print(ans)\n    return\n\n\nif __name__ == '__main__':\n    D()\n```\n "
    },
    {
        "user_id": "u374103100",
        "problem_id": "p02963",
        "submission1_id": "s400182570",
        "code_content": "\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) * 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3, y3 = divmod(s, 10**9 * 2)\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\nimport sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\n\n\ndef main():\n    s = int(input()) * 2\n    x1, y1, x2, y2 = 0, 0, 10 ** 9, 10 ** 9\n\n    x3, y3 = divmod(s, 10**9 * 2)\n\n    print(x1, y1, x2, y2, x3, y3)\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u098968285",
        "problem_id": "p03959",
        "submission1_id": "s379070612",
        "code_content": "\n\n\n\n\n\n\n\n\nn = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nTsa = [0]*n\nAsa = [0]*n\n\nif n == 1:\n\tif T[0] != A[0]:\n\t\tprint(0)\n\telse:\n\t\tprint(1)\nelif T[0] != A[-1]:\n\tprint(0)\nelse:\n\t\n\tdai = T[0]\n\tshou = T[0]\n\tTsa[0] = (shou, dai)\n\n\tfor i in range(1, n):\n\t\tif T[i] == dai:\n\t\t\tTsa[i] = (shou, dai)\n\t\telse:\n\t\t\tshou = dai\n\t\t\tdai = T[i]\n\t\t\tTsa[i] = (dai, dai)\n\n\t\n\tdai = A[-1]\n\tshou = A[-1]\n\tAsa[-1] = (shou, dai)\n\n\tfor i in reversed(range(-n, -1)):\n\t\tif A[i] == dai:\n\t\t\tAsa[i] = (shou, dai)\n\t\telse:\n\t\t\tshou = dai\n\t\t\tdai = A[i]\n\t\t\tAsa[i] = (dai, dai)\n\n\tans = 1\n\tfor i in range(n):\n\t\td = max(Tsa[i][0], Asa[i][0])\n\t\tu = min(Tsa[i][1], Asa[i][1])\n\n\t\tif d > u:\n\t\t\tans = 0\n\t\t\tbreak\n\t\telse:\n\t\t\tans *= u - d + 1\n\tprint(ans)\n",
        "origin_generated_text": "\n```\n\n\n\n\n\n\n\n\nn = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nTsa = [0]*n\nAsa = [0]*n\n\nif n == 1:\n\tif T[0] != A[0]:\n\t\tprint(0)\n\telse:\n\t\tprint(1)\nelif T[0] != A[-1]:\n\tprint(0)\nelse:\n\t\n\tdai = T[0]\n\tshou = T[0]\n\tTsa[0] = (shou, dai)\n\n\tfor i in range(1, n):\n\t\tif T[i] == dai:\n\t\t\tTsa[i] = (shou, dai)\n\t\telse:\n\t\t\tshou = dai\n\t\t\tdai = T[i]\n\t\t\tTsa[i] = (dai, dai)\n\n\t\n\tdai = A[-1]\n\tshou = A[-1]\n\tAsa[-1] = (shou, dai)\n\n\tfor i in reversed(range(-n, -1)):\n\t\tif A[i] == dai:\n\t\t\tAsa[i] = (shou, dai)\n\t\telse:\n\t\t\tshou = dai\n\t\t\tdai = A[i]\n\t\t\tAsa[i] = (dai, dai)\n\n\tans = 1\n\tfor i in range(n):\n\t\td = max(Tsa[i][0], Asa[i][0])\n\t\tu = min(Tsa[i][1], Asa[i][1])\n\n\t\tif d > u:\n\t\t\tans = 0\n\t\t\tbreak\n\t\telse:\n\t\t\tans *= u - d + 1\n\tprint(ans)\n```\n "
    },
    {
        "user_id": "u127499732",
        "problem_id": "p03272",
        "submission1_id": "s820880957",
        "code_content": "\na,b=map(int,input().split())\nprint(a-b)",
        "origin_generated_text": "\n```\na,b=map(int,input().split())\nprint(a-b)```\n "
    },
    {
        "user_id": "u210827208",
        "problem_id": "p03087",
        "submission1_id": "s372193696",
        "code_content": "\nn,q=map(int,input().split())\ns=list(input())\nV=[0]*(n+1)\nfor i in range(n):\n    if s[i:i+2]=='AC':\n        V[i+1]+=1\nfor i in range(q):\n    l,r=map(int,input().split())\n    print(sum(V[l-1:r]))",
        "origin_generated_text": "\n```\nn,q=map(int,input().split())\ns=list(input())\nV=[0]*(n+1)\nfor i in range(n):\n    if s[i:i+2]=='AC':\n        V[i+1]+=1\nfor i in range(q):\n    l,r=map(int,input().split())\n    print(sum(V[l-1:r]))```\n "
    },
    {
        "user_id": "u329865314",
        "problem_id": "p02633",
        "submission1_id": "s118468146",
        "code_content": "\na=int(input())\nx = 0\ni = 0\nwhile(1):\n  x += a\n  i += 1\n  x %= 360\n  if x:\n    continue\n  else:\n    print(i)\n    quit()",
        "origin_generated_text": "\n```\na=int(input())\nx = 0\ni = 0\nwhile(1):\n  x += a\n  i += 1\n  x %= 360\n  if x:\n    continue\n  else:\n    print(i)\n    quit()```\n "
    },
    {
        "user_id": "u141610915",
        "problem_id": "p03096",
        "submission1_id": "s508708196",
        "code_content": "\nimport sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = int(input())\ntable = [[] for _ in range(2 * pow(10, 5) + 1)]\na = []\nt = 0\nmod = 10 ** 9 + 7\nfor i in range(N):\n  x = int(input())\n  if t != x:\n    table[x].append(i)\n    t = x\n  a.append(x)\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(N):\n  j = br(table[a[i]], i)\n  if j < len(table[a[i]]) - 1:\n    dp[table[a[i]][j]] += dp[i]\n    dp[table[a[i]][j]] %= mod\n  if i + 1 < N: \n    dp[i + 1] += dp[i]\n    dp[i + 1] %= mod\n  \nprint(dp[-1])",
        "origin_generated_text": "\n```\nimport sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = int(input())\ntable = [[] for _ in range(2 * pow(10, 5) + 1)]\na = []\nt = 0\nmod = 10 ** 9 + 7\nfor i in range(N):\n  x = int(input())\n  if t != x:\n    table[x].append(i)\n    t = x\n  a.append(x)\n\ndp = [0] * N\ndp[0] = 1\nfor i in range(N):\n  j = br(table[a[i]], i)\n  if j < len(table[a[i]]) - 1:\n    dp[table[a[i]][j]] += dp[i]\n    dp[table[a[i]][j]] %= mod\n  if i + 1 < N: \n    dp[i + 1] += dp[i]\n    dp[i + 1] %= mod\n  \nprint(dp[-1])```\n "
    },
    {
        "user_id": "u843932857",
        "problem_id": "p03080",
        "submission1_id": "s660588211",
        "code_content": "\nn=int(input())\ns = list(input())\n\nr = 0\nb = 0\nfor i in s:\n    if i == \"R\":\n        r += 1\n    if i == \"B\":\n        b += 1\n\nif r <= b:\n    print(\"No\")\nelse:\n    print(\"Yes\")",
        "origin_generated_text": "\n```\nn=int(input())\ns = list(input())\n\nr = 0\nb = 0\nfor i in s:\n    if i == \"R\":\n        r += 1\n    if i == \"B\":\n        b += 1\n\nif r <= b:\n    print(\"No\")\nelse:\n    print(\"Yes\")```\n "
    },
    {
        "user_id": "u090225501",
        "problem_id": "p03625",
        "submission1_id": "s237224257",
        "code_content": "\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    print(solve(a))\n\ndef solve(a):\n    cands = []\n    s = set()\n    for i in a:\n        if i in s:\n            cands.append(i)\n        else:\n            s.add(i)\n    \n    x = sorted(cands, reverse=True)\n    if len(x) < 2:\n        return 0\n    \n    return x[0] * x[1]\n\nmain()\n",
        "origin_generated_text": "\n```\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    print(solve(a))\n\ndef solve(a):\n    cands = []\n    s = set()\n    for i in a:\n        if i in s:\n            cands.append(i)\n        else:\n            s.add(i)\n    \n    x = sorted(cands, reverse=True)\n    if len(x) < 2:\n        return 0\n    \n    return x[0] * x[1]\n\nmain()\n```\n "
    },
    {
        "user_id": "u983918956",
        "problem_id": "p03959",
        "submission1_id": "s351734526",
        "code_content": "\nmod = 10 ** 9 + 7\n\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nH = [0] * N\nfor i in range(N - 1, -1, -1):\n    if T[i] < T[i - 1]:\n        H[i - 1] = T[i]\nfor i in range(1, N):\n    if A[i] > A[i - 1]:\n        if H[i] == 0 or H[i] == A[i]:\n            H[i] = A[i]\n        else:\n            print(0)\n            exit()\n\nans = 1\nfor h, t, a in zip(H, T, A):\n    if h == 0:\n        ans *= min(t, a)\n        ans %= mod\nprint(ans % mod)",
        "origin_generated_text": "\n```\nmod = 10 ** 9 + 7\n\nN = int(input())\nT = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nH = [0] * N\nfor i in range(N - 1, -1, -1):\n    if T[i] < T[i - 1]:\n        H[i - 1] = T[i]\nfor i in range(1, N):\n    if A[i] > A[i - 1]:\n        if H[i] == 0 or H[i] == A[i]:\n            H[i] = A[i]\n        else:\n            print(0)\n            exit()\n\nans = 1\nfor h, t, a in zip(H, T, A):\n    if h == 0:\n        ans *= min(t, a)\n        ans %= mod\nprint(ans % mod)```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p02746",
        "submission1_id": "s127182110",
        "code_content": "\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))",
        "origin_generated_text": "\n```\ndef solve(aa,bb,cc,dd):\n  a,b,c,d=aa,bb,cc,dd\n  mx=my=0\n  for i in range(1,31):\n    if a<=3**(i-1) and 2*3**(i-1)+1>=c and 3**(i-1)<=b and 2*3**(i-1)+1>=d:mx=i\n    if b<=3**(i-1) and 2*3**(i-1)+1>=d and 3**(i-1)<=a and 2*3**(i-1)+1>=c:my=i\n  if mx<my:\n    ans=abs(a-c)\n    mi=3**(my-1)\n    ma=2*3**(my-1)+1\n    ans+=min(abs(mi-b)+abs(mi-d),abs(ma-b)+abs(ma-d))\n    return ans\n  if mx>my:\n    ans=abs(b-d)\n    mi=3**(mx-1)\n    ma=2*3**(mx-1)+1\n    ans+=min(abs(mi-a)+abs(mi-c),abs(ma-a)+abs(ma-c))\n    return ans\n  if mx==my==0:return abs(a-c)+abs(b-d)\n  ans=1/0\n  return ans\nq=int(input())\nfor _ in range(q):\n  a,b,c,d=map(int,input().split())\n  print(solve(a,b,c,d))```\n "
    },
    {
        "user_id": "u694665829",
        "problem_id": "p02633",
        "submission1_id": "s563696661",
        "code_content": "\nx = int(input())\nfor i in range(1, 361):\n    if (x*i)%360 == 0:\n        print(i)\n        exit()\n        ",
        "origin_generated_text": "\n```\nx = int(input())\nfor i in range(1, 361):\n    if (x*i)%360 == 0:\n        print(i)\n        exit()\n        ```\n "
    },
    {
        "user_id": "u998733244",
        "problem_id": "p02633",
        "submission1_id": "s404472021",
        "code_content": "\n\n\nX = int(input())\n\nindex = 1\nwhile True:\n    if X * index % 360 == 0:\n        print(index*2)\n        break\n    index += 1\n",
        "origin_generated_text": "\n```\n\n\nX = int(input())\n\nindex = 1\nwhile True:\n    if X * index % 360 == 0:\n        print(index*2)\n        break\n    index += 1\n```\n "
    },
    {
        "user_id": "u063073794",
        "problem_id": "p03036",
        "submission1_id": "s646624169",
        "code_content": "\na,b,c = map(int, input().split())\nx0=c\nx1=a*c-b\nx2=2*x1-x0\nx3=2*x2-x1\nx4=2*x3-x2\nx5=2*x4-x3\nx6=2*x5-x4\nx7=2*x6-x5\nx8=2*x7-x6\nx9=2*x8-x7\nx10=2*x9-x8\n\nprint(x1)\nprint(x2)\nprint(x3)\nprint(x4)\nprint(x5)\nprint(x6)\nprint(x7)\nprint(x8)\nprint(x9)\nprint(x10)",
        "origin_generated_text": "\n```\na,b,c = map(int, input().split())\nx0=c\nx1=a*c-b\nx2=2*x1-x0\nx3=2*x2-x1\nx4=2*x3-x2\nx5=2*x4-x3\nx6=2*x5-x4\nx7=2*x6-x5\nx8=2*x7-x6\nx9=2*x8-x7\nx10=2*x9-x8\n\nprint(x1)\nprint(x2)\nprint(x3)\nprint(x4)\nprint(x5)\nprint(x6)\nprint(x7)\nprint(x8)\nprint(x9)\nprint(x10)```\n "
    },
    {
        "user_id": "u211706121",
        "problem_id": "p02580",
        "submission1_id": "s231820315",
        "code_content": "\n\nfrom collections import defaultdict\n\nH,W,M=map(int,input().split())\nAB=[tuple(map(int,input().split()))for i in range(M)]\nAB=[(a-1,b-1)for a,b in AB]\nst=set(AB)\n\nWc=defaultdict(lambda :0)\nHc=defaultdict(lambda :0)\nfor a,b in AB:\n    Hc[a]+=1\n    Wc[b]+=1\n\nHm=max(Hc.values())\nWm=max(Wc.values())\n\n\nans=Hm*Wm\nfor i in Hc.keys():\n    if Hc[i]==Hm-1:\n        x=i\nfor j in Wc.keys():\n    if Wc[j]==Wm-1:\n        y=j\n\n\nans+=Hc[x] + Wc[y] +(-1 if (x,y) in st else 0)\nprint(ans)\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict\n\nH,W,M=map(int,input().split())\nAB=[tuple(map(int,input().split()))for i in range(M)]\nAB=[(a-1,b-1)for a,b in AB]\nst=set(AB)\n\nWc=defaultdict(lambda :0)\nHc=defaultdict(lambda :0)\nfor a,b in AB:\n    Hc[a]+=1\n    Wc[b]+=1\n\nHm=max(Hc.values())\nWm=max(Wc.values())\n\n\nans=Hm*Wm\nfor i in Hc.keys():\n    if Hc[i]==Hm-1:\n        x=i\nfor j in Wc.keys():\n    if Wc[j]==Wm-1:\n        y=j\n\n\nans+=Hc[x] + Wc[y] +(-1 if (x,y) in st else 0)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u584174687",
        "problem_id": "p03200",
        "submission1_id": "s749260039",
        "code_content": "\ndata = list(input())\n\ncount = 0\n\n\ncount_b = 0\nfor i in range(len(data)):\n    \n    if data[i] == 'W':\n        count += count_b\n        \n        \n        \n    else:\n        count_b += 1\n    \n    \nprint(count)\n",
        "origin_generated_text": "\n```\ndata = list(input())\n\ncount = 0\n\n\ncount_b = 0\nfor i in range(len(data)):\n    \n    if data[i] == 'W':\n        count += count_b\n        \n        \n        \n    else:\n        count_b += 1\n    \n    \nprint(count)\n```\n "
    },
    {
        "user_id": "u957957759",
        "problem_id": "p03998",
        "submission1_id": "s593502386",
        "code_content": "\na=input()\nb=input()\nc=input()\n\n\n\n\n\nn='a'\nwhile True:\n    if n=='a':\n        if len(a)==0:\n            print('A')\n            break\n        else:\n            n=a[0]\n            a=a[1:]\n    elif n=='b':\n        if len(b)==0:\n            print('B')\n            break\n        else:\n            n=b[0]\n            b=b[1:]\n    else:\n        if len(c)==0:\n            print('C')\n            break\n        else:\n            n=c[0]\n            c=c[1:]\n\n",
        "origin_generated_text": "\n```\na=input()\nb=input()\nc=input()\n\n\n\n\n\nn='a'\nwhile True:\n    if n=='a':\n        if len(a)==0:\n            print('A')\n            break\n        else:\n            n=a[0]\n            a=a[1:]\n    elif n=='b':\n        if len(b)==0:\n            print('B')\n            break\n        else:\n            n=b[0]\n            b=b[1:]\n    else:\n        if len(c)==0:\n            print('C')\n            break\n        else:\n            n=c[0]\n            c=c[1:]\n\n```\n "
    },
    {
        "user_id": "u064505481",
        "problem_id": "p02642",
        "submission1_id": "s180627575",
        "code_content": "\nfrom sys import stdin, stdout, setrecursionlimit\nfrom collections import deque, defaultdict, Counter\nimport math\n\nrl = lambda: stdin.readline()\nrll = lambda: stdin.readline().split()\nrli = lambda: map(int, stdin.readline().split())\nrlf = lambda: map(float, stdin.readline().split())\n\nINF, NINF = float('inf'), float('-inf')\n\ndef main():\n\tn = int(rl())\n\tA = list(rli())\n\tAset = set(A)\n\tA.sort()\n\tans = 0\n\tfor i, num in enumerate(A):\n\t\tif num == 1:\n\t\t\tans += 1\n\t\t\tcontinue\n\t\tif num in Aset:\n\t\t\tcontinue\n\t\tdiv = 2\n\t\tflag = True\n\t\twhile div*div <= num:\n\t\t\tif num % div == 0:\n\t\t\t\tother = num\n\t\t\t\tif div in Aset or other in Aset:\n\t\t\t\t\tflag = False\n\t\t\t\t\tbreak\n\t\t\tdiv += 1\n\t\tif flag:\n\t\t\tans += 1\n\tprint(ans)\n\tstdout.close()\n\nif __name__ == \"__main__\":\n\tmain()",
        "origin_generated_text": "\n```\nfrom sys import stdin, stdout, setrecursionlimit\nfrom collections import deque, defaultdict, Counter\nimport math\n\nrl = lambda: stdin.readline()\nrll = lambda: stdin.readline().split()\nrli = lambda: map(int, stdin.readline().split())\nrlf = lambda: map(float, stdin.readline().split())\n\nINF, NINF = float('inf'), float('-inf')\n\ndef main():\n\tn = int(rl())\n\tA = list(rli())\n\tAset = set(A)\n\tA.sort()\n\tans = 0\n\tfor i, num in enumerate(A):\n\t\tif num == 1:\n\t\t\tans += 1\n\t\t\tcontinue\n\t\tif num in Aset:\n\t\t\tcontinue\n\t\tdiv = 2\n\t\tflag = True\n\t\twhile div*div <= num:\n\t\t\tif num % div == 0:\n\t\t\t\tother = num\n\t\t\t\tif div in Aset or other in Aset:\n\t\t\t\t\tflag = False\n\t\t\t\t\tbreak\n\t\t\tdiv += 1\n\t\tif flag:\n\t\t\tans += 1\n\tprint(ans)\n\tstdout.close()\n\nif __name__ == \"__main__\":\n\tmain()```\n "
    },
    {
        "user_id": "u357267874",
        "problem_id": "p02281",
        "submission1_id": "s879594741",
        "code_content": "\nclass Node:\n    def __init__(self, id):\n        self.id = id\n        self.parent = None\n        self.left = None\n        self.right = None\n\nroot = None\nn = int(input())\nnode_list = []\nfor i in range(n):\n    node_list.append(Node(i))\n\nfor i in range(n):\n    id, left, right = list(map(int, input().split()))\n    node = node_list[id]\n    if left > -1:\n        node_list[left].parent = node\n        node.left = node_list[left]\n    if right > -1:\n        node_list[right].parent = node\n        node.right = node_list[right]\n\nroot = None\nfor node in node_list:\n    if node.parent is None:\n        root = node\n        break\n\ndef preorder(node):\n    if node is None:\n        return\n    print(' ' + str(node.id), end='')\n    preorder(node.left)\n    preorder(node.right)\n\ndef inorder(node):\n    if node is None:\n        return\n    inorder(node.left)\n    print(' ' + str(node.id), end='')\n    inorder(node.right)\n\ndef postorder(node):\n    if node is None:\n        return\n    postorder(node.left)\n    postorder(node.right)\n    print(' ' + str(node.id), end='')\n\nprint('Preorder')\npreorder(root)\nprint('')\n\nprint('Inorder')\ninorder(root)\nprint('')\n\nprint('Postorder')\npostorder(root)\nprint('')\n",
        "origin_generated_text": "\n```\nclass Node:\n    def __init__(self, id):\n        self.id = id\n        self.parent = None\n        self.left = None\n        self.right = None\n\nroot = None\nn = int(input())\nnode_list = []\nfor i in range(n):\n    node_list.append(Node(i))\n\nfor i in range(n):\n    id, left, right = list(map(int, input().split()))\n    node = node_list[id]\n    if left > -1:\n        node_list[left].parent = node\n        node.left = node_list[left]\n    if right > -1:\n        node_list[right].parent = node\n        node.right = node_list[right]\n\nroot = None\nfor node in node_list:\n    if node.parent is None:\n        root = node\n        break\n\ndef preorder(node):\n    if node is None:\n        return\n    print(' ' + str(node.id), end='')\n    preorder(node.left)\n    preorder(node.right)\n\ndef inorder(node):\n    if node is None:\n        return\n    inorder(node.left)\n    print(' ' + str(node.id), end='')\n    inorder(node.right)\n\ndef postorder(node):\n    if node is None:\n        return\n    postorder(node.left)\n    postorder(node.right)\n    print(' ' + str(node.id), end='')\n\nprint('Preorder')\npreorder(root)\nprint('')\n\nprint('Inorder')\ninorder(root)\nprint('')\n\nprint('Postorder')\npostorder(root)\nprint('')\n```\n "
    },
    {
        "user_id": "u106311097",
        "problem_id": "p02886",
        "submission1_id": "s383080756",
        "code_content": "\n\n\nimport sys\n\ns2nn = lambda s: [int(c) for c in s.split(' ')]\nss2nn = lambda ss: [int(s) for s in list(ss)]\nss2nnn = lambda ss: [s2nn(s) for s in list(ss)]\ni2s = lambda: sys.stdin.readline().rstrip()\ni2n = lambda: int(i2s())\ni2nn = lambda: s2nn(i2s())\nii2ss = lambda n: [i2s() for _ in range(n)]\nii2nn = lambda n: ss2nn(ii2ss(n))\nii2nnn = lambda n: ss2nnn(ii2ss(n))\n\ndef main():\n    N = i2n()\n    d = i2nn()\n    r = sum(d[i] * d[j] for i, j in zip(range(N), range(1, N)))\n    print(r)\nmain()\n",
        "origin_generated_text": "\n```\n\n\nimport sys\n\ns2nn = lambda s: [int(c) for c in s.split(' ')]\nss2nn = lambda ss: [int(s) for s in list(ss)]\nss2nnn = lambda ss: [s2nn(s) for s in list(ss)]\ni2s = lambda: sys.stdin.readline().rstrip()\ni2n = lambda: int(i2s())\ni2nn = lambda: s2nn(i2s())\nii2ss = lambda n: [i2s() for _ in range(n)]\nii2nn = lambda n: ss2nn(ii2ss(n))\nii2nnn = lambda n: ss2nnn(ii2ss(n))\n\ndef main():\n    N = i2n()\n    d = i2nn()\n    r = sum(d[i] * d[j] for i, j in zip(range(N), range(1, N)))\n    print(r)\nmain()\n```\n "
    },
    {
        "user_id": "u523781418",
        "problem_id": "p03477",
        "submission1_id": "s484773932",
        "code_content": "\na,b,c,d=map(int, input().split())\nif(a+b)>(c+d):\n    print(\"Left\")\nif(a+b)==(c+d):\n    print(\"Balanced\")\nif(a+b)<(c+d):\n    print(\"Right\")",
        "origin_generated_text": "\n```\na,b,c,d=map(int, input().split())\nif(a+b)>(c+d):\n    print(\"Left\")\nif(a+b)==(c+d):\n    print(\"Balanced\")\nif(a+b)<(c+d):\n    print(\"Right\")```\n "
    },
    {
        "user_id": "u182139295",
        "problem_id": "p03041",
        "submission1_id": "s420716449",
        "code_content": "\n\n\n\nn, k = map(int, input().split())\n\n\ns = list(input())\n\na = s[k-1:k]\n\na = ','.join(a)\n\na = a.lower()\n\ns[k-1:k] = a\n\nprint(''.join(s))\n\n",
        "origin_generated_text": "\n```\n\n\n\nn, k = map(int, input().split())\n\n\ns = list(input())\n\na = s[k-1:k]\n\na = ','.join(a)\n\na = a.lower()\n\ns[k-1:k] = a\n\nprint(''.join(s))\n\n```\n "
    },
    {
        "user_id": "u868577139",
        "problem_id": "p02767",
        "submission1_id": "s908496794",
        "code_content": "\nN=int(input())\nX=list(map(int,input().split()))\np=int(sum(X)/N)\nans=0\nfor i in range(len(X)):\n    ans+=(X[i]-p)**2\nprint(ans)\n",
        "origin_generated_text": "\n```\nN=int(input())\nX=list(map(int,input().split()))\np=int(sum(X)/N)\nans=0\nfor i in range(len(X)):\n    ans+=(X[i]-p)**2\nprint(ans)\n```\n "
    },
    {
        "user_id": "u408375121",
        "problem_id": "p03613",
        "submission1_id": "s174600321",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nd = [0] * (10**5 + 2)\nneg_count = 0\nfor i in range(len(a)):\n  d[a[i] - 1] += 1\n  d[a[i]] += 1\n  d[a[i] + 1] += 1\nans = max(d)\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nd = [0] * (10**5 + 2)\nneg_count = 0\nfor i in range(len(a)):\n  d[a[i] - 1] += 1\n  d[a[i]] += 1\n  d[a[i] + 1] += 1\nans = max(d)\nprint(ans)```\n "
    },
    {
        "user_id": "u785213188",
        "problem_id": "p02917",
        "submission1_id": "s373310397",
        "code_content": "\nN = int(input())\nB = list(map(int, input().split()))\n\nsum = 0\nif N==2:\n    sum += B[0]*2\nelse:\n    sum += min([B[0], B[1]])*2\n    for i in range(N-2):\n        sum += min([B[i], B[i+1]])\n    sum += B[N-2]\nprint(sum)",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int, input().split()))\n\nsum = 0\nif N==2:\n    sum += B[0]*2\nelse:\n    sum += min([B[0], B[1]])*2\n    for i in range(N-2):\n        sum += min([B[i], B[i+1]])\n    sum += B[N-2]\nprint(sum)```\n "
    },
    {
        "user_id": "u872887731",
        "problem_id": "p02954",
        "submission1_id": "s507614135",
        "code_content": "\nS = input()\na = []\nr_ = 0 \nl_ = 0\nflag = 0\nfor i in range(len(S)):\n    if flag == 0:\n        if S[i]==\"R\":\n            r_ = r_ +1\n            continue\n        else:\n            flag = 1\n            l_ = l_ +1\n            continue\n    if flag == 1:\n        if S[i] == \"L\"   :\n            l_ = l_ +1\n        else:\n            al = l_ + r_\n            a.append([al,r_])\n            r_ = 1\n            l_ = 0 \n            flag = 0\n        if i == len(S) -1:\n            al = l_ + r_\n            a.append([al,r_])\n \n\nans = []\nfor i in range(len(a)):\n    n = a[i][0]\n    r = a[i][1]\n    odd = n \n    eve = n - odd\n    for j in range(r -1):\n        ans.append(0)\n    ans.append(odd)\n    ans.append(eve)\n    for j in range(n -r -1):\n        ans.append(0)\nprint(*ans)\n    \n            ",
        "origin_generated_text": "\n```\nS = input()\na = []\nr_ = 0 \nl_ = 0\nflag = 0\nfor i in range(len(S)):\n    if flag == 0:\n        if S[i]==\"R\":\n            r_ = r_ +1\n            continue\n        else:\n            flag = 1\n            l_ = l_ +1\n            continue\n    if flag == 1:\n        if S[i] == \"L\"   :\n            l_ = l_ +1\n        else:\n            al = l_ + r_\n            a.append([al,r_])\n            r_ = 1\n            l_ = 0 \n            flag = 0\n        if i == len(S) -1:\n            al = l_ + r_\n            a.append([al,r_])\n \n\nans = []\nfor i in range(len(a)):\n    n = a[i][0]\n    r = a[i][1]\n    odd = n \n    eve = n - odd\n    for j in range(r -1):\n        ans.append(0)\n    ans.append(odd)\n    ans.append(eve)\n    for j in range(n -r -1):\n        ans.append(0)\nprint(*ans)\n    \n            ```\n "
    },
    {
        "user_id": "u265506056",
        "problem_id": "p03039",
        "submission1_id": "s768582534",
        "code_content": "\nN,M,K=map(int,input().split())\nMOD=10**9+7\nans=0\nx,y=1,1\nk=min(K-2,N*M-K)\nfor i in range(k):\n    x*=N*M-2-i\n    y*=K-2-i\n    x%=MOD\n    y%=MOD\ncomb=x*pow(y,MOD-2,MOD)\ncomb%=MOD\nfor i in range(1,N):\n    a=i*comb*(N-i)*M**2\n    ans+=a\n    ans%=MOD\nfor i in range(1,M):\n    a=i*comb*(M-i)*N**2\n    ans+=a\n    ans%=MOD\nprint(ans%MOD)",
        "origin_generated_text": "\n```\nN,M,K=map(int,input().split())\nMOD=10**9+7\nans=0\nx,y=1,1\nk=min(K-2,N*M-K)\nfor i in range(k):\n    x*=N*M-2-i\n    y*=K-2-i\n    x%=MOD\n    y%=MOD\ncomb=x*pow(y,MOD-2,MOD)\ncomb%=MOD\nfor i in range(1,N):\n    a=i*comb*(N-i)*M**2\n    ans+=a\n    ans%=MOD\nfor i in range(1,M):\n    a=i*comb*(M-i)*N**2\n    ans+=a\n    ans%=MOD\nprint(ans%MOD)```\n "
    },
    {
        "user_id": "u575396065",
        "problem_id": "p03272",
        "submission1_id": "s086155166",
        "code_content": "\ninfo = input()\ninfo = info.split()\nbackward = int(info[0]) - int(info[1]) + 1\nprint(backward)",
        "origin_generated_text": "\n```\ninfo = input()\ninfo = info.split()\nbackward = int(info[0]) - int(info[1]) + 1\nprint(backward)```\n "
    },
    {
        "user_id": "u893063840",
        "problem_id": "p02727",
        "submission1_id": "s206965098",
        "code_content": "\nfrom heapq import heappush, heappop\n\nx, y, a, b, c = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nhp = []\nfor e in p:\n    heappush(hp, [-e, 0])\nfor e in q:\n    heappush(hp, [-e, 1])\nfor e in r:\n    heappush(hp, [-e, 2])\n\nans = 0\ncnt = [0] * 3\nsm = 0\nmx = [c, x, y]\nwhile hp:\n    yum, col = heappop(hp)\n    yum = -yum\n\n    if cnt[col] >= mx[col]:\n        continue\n\n    ans += yum\n    cnt[col] += 1\n    sm += 1\n\n    if sm == x + y:\n        break\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom heapq import heappush, heappop\n\nx, y, a, b, c = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nhp = []\nfor e in p:\n    heappush(hp, [-e, 0])\nfor e in q:\n    heappush(hp, [-e, 1])\nfor e in r:\n    heappush(hp, [-e, 2])\n\nans = 0\ncnt = [0] * 3\nsm = 0\nmx = [c, x, y]\nwhile hp:\n    yum, col = heappop(hp)\n    yum = -yum\n\n    if cnt[col] >= mx[col]:\n        continue\n\n    ans += yum\n    cnt[col] += 1\n    sm += 1\n\n    if sm == x + y:\n        break\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u025363805",
        "problem_id": "p02633",
        "submission1_id": "s866307059",
        "code_content": "\na = int(input())\nfor i in range(1,361):\n    ans = i * a\n    if ans % 360 == 0:\n        print(int(i))\n",
        "origin_generated_text": "\n```\na = int(input())\nfor i in range(1,361):\n    ans = i * a\n    if ans % 360 == 0:\n        print(int(i))\n```\n "
    },
    {
        "user_id": "u368796742",
        "problem_id": "p03714",
        "submission1_id": "s712760286",
        "code_content": "\nimport heapq\n\nn = int(input())\nA = list(map(int,input().split()))\n\nsa = 0\nsb = 0\nhf = []\nhb = []\nfor i in range(n):\n    sa += A[i]\n    heapq.heappush(hf,A[i])\nfor i in range(2*n,3*n):\n    sb += A[i]\n    heapq.heappush(hb,-A[i])\nans = sa-sb\nfor i in range(n,2*n):\n    now = A[i]\n    l = -heapq.heappop(hb)\n    h = heapq.heappop(hf)\n    if now < l:\n        ans = sa-sb+l-now\n    if now > h:\n        sa += now-h\n        heapq.heappush(hf,now)\n        ans = max(ans,sa-sb)\n    heapq.heappush(hb,-l)\n    heapq.heappush(hf,h)\nans = max(ans,sa-sb)\nprint(ans)\n",
        "origin_generated_text": "\n```\nimport heapq\n\nn = int(input())\nA = list(map(int,input().split()))\n\nsa = 0\nsb = 0\nhf = []\nhb = []\nfor i in range(n):\n    sa += A[i]\n    heapq.heappush(hf,A[i])\nfor i in range(2*n,3*n):\n    sb += A[i]\n    heapq.heappush(hb,-A[i])\nans = sa-sb\nfor i in range(n,2*n):\n    now = A[i]\n    l = -heapq.heappop(hb)\n    h = heapq.heappop(hf)\n    if now < l:\n        ans = sa-sb+l-now\n    if now > h:\n        sa += now-h\n        heapq.heappush(hf,now)\n        ans = max(ans,sa-sb)\n    heapq.heappush(hb,-l)\n    heapq.heappush(hf,h)\nans = max(ans,sa-sb)\nprint(ans)\n```\n "
    },
    {
        "user_id": "u069868485",
        "problem_id": "p03633",
        "submission1_id": "s631496608",
        "code_content": "\ndef uq(a,c):\n    if(a%c!=0):\n        newa=c\n        c=a%c\n        a=newa\n    return a\n        \n\nn=(int)(input())\n\nresult = 1\n\nfor j in range(0,n):\n    f=(int)(input())\n    result=((result*uq(result,f)))*f\n    \nprint((int)(result))",
        "origin_generated_text": "\n```\ndef uq(a,c):\n    if(a%c!=0):\n        newa=c\n        c=a%c\n        a=newa\n    return a\n        \n\nn=(int)(input())\n\nresult = 1\n\nfor j in range(0,n):\n    f=(int)(input())\n    result=((result*uq(result,f)))*f\n    \nprint((int)(result))```\n "
    },
    {
        "user_id": "u163320134",
        "problem_id": "p03343",
        "submission1_id": "s031448521",
        "code_content": "\nn,k,q=map(int,input().split())\narr=list(map(int,input().split()))\narr2=sorted(arr,reverse=True)\nans=10**18\nfor val in arr:\n  tmp=[]\n  vals=[]\n  for i in range(n):\n    if arr[i]>=val:\n      tmp.append(arr[i])\n    else:\n      if len(tmp)>=k:\n        tmp=sorted(tmp)\n        vals.extend(tmp[:len(tmp)-k+1])\n        tmp=[]\n  if len(tmp)>=k:\n    tmp=sorted(tmp)\n    vals.extend(tmp[:len(tmp)-k+1])\n  if len(vals)<q:\n    continue\n  else:\n    vals=sorted(vals)\n    ans=min(ans,vals[q-1]-vals[0])\nprint(ans)",
        "origin_generated_text": "\n```\nn,k,q=map(int,input().split())\narr=list(map(int,input().split()))\narr2=sorted(arr,reverse=True)\nans=10**18\nfor val in arr:\n  tmp=[]\n  vals=[]\n  for i in range(n):\n    if arr[i]>=val:\n      tmp.append(arr[i])\n    else:\n      if len(tmp)>=k:\n        tmp=sorted(tmp)\n        vals.extend(tmp[:len(tmp)-k+1])\n        tmp=[]\n  if len(tmp)>=k:\n    tmp=sorted(tmp)\n    vals.extend(tmp[:len(tmp)-k+1])\n  if len(vals)<q:\n    continue\n  else:\n    vals=sorted(vals)\n    ans=min(ans,vals[q-1]-vals[0])\nprint(ans)```\n "
    },
    {
        "user_id": "u045408189",
        "problem_id": "p03563",
        "submission1_id": "s405617852",
        "code_content": "\nr=float(input())\ng=float(input())\nprint(g-r)",
        "origin_generated_text": "\n```\nr=float(input())\ng=float(input())\nprint(g-r)```\n "
    },
    {
        "user_id": "u250026974",
        "problem_id": "p02556",
        "submission1_id": "s695438223",
        "code_content": "\nN = int(input())\n\nmax_f_0 = -10**10\nmin_f_0 = 10**10\nmax_f_1 = -10**10\nmin_f_1 = 10**10\n\nfor _ in range(N):\n    x, y = map(int, input().split(\" \"))\n    f_0 = x - y\n    f_1 = x + y\n    \n    if max_f_0 < f_0:\n        max_f_0 = f_0\n    if min_f_0 > f_0:\n        min_f_0 = f_0\n    if max_f_1 < f_1:\n        max_f_1 = f_1\n    if min_f_1 > f_1:\n        min_f_1 = f_1\n        \nprint(max((max_f_0-min_f_0), (max_f_1-min_f_1)))\n    ",
        "origin_generated_text": "\n```\nN = int(input())\n\nmax_f_0 = -10**10\nmin_f_0 = 10**10\nmax_f_1 = -10**10\nmin_f_1 = 10**10\n\nfor _ in range(N):\n    x, y = map(int, input().split(\" \"))\n    f_0 = x - y\n    f_1 = x + y\n    \n    if max_f_0 < f_0:\n        max_f_0 = f_0\n    if min_f_0 > f_0:\n        min_f_0 = f_0\n    if max_f_1 < f_1:\n        max_f_1 = f_1\n    if min_f_1 > f_1:\n        min_f_1 = f_1\n        \nprint(max((max_f_0-min_f_0), (max_f_1-min_f_1)))\n    ```\n "
    },
    {
        "user_id": "u476199965",
        "problem_id": "p03374",
        "submission1_id": "s949459288",
        "code_content": "\nn,c = list(map(int,input().split()))\n\nxv = []\ngo = [0]*n\ngoback = [0]*n\nback = [0]*n\nbackgo = [0]*n\n\n\nfor i in range(n):\n    xv.append(list(map(int,input().split())))\n    if 2*xv[i][0]<= c: go[i] = xv[i][1]-xv[i][0]\n    else: go[i] = 0\n    if 2*c-xv[i][0]<= xv[i][1]: goback[i] = xv[i][1]-2*c+xv[i][0]\n    else: goback[i] = 0\n    if xv[i][0]<= c: back[i] = xv[i][1]-(c-xv[i][0])\n    else: back[i] = 0\n    if 2*c-xv[i][0]<= xv[i][1]: backgo[i] = xv[i][1]-(2*c-xv[i][0])\n    else: backgo[i] = 0\n\nprint(max(max(go)+max(backgo),max(back)+max(goback)))\n",
        "origin_generated_text": "\n```\nn,c = list(map(int,input().split()))\n\nxv = []\ngo = [0]*n\ngoback = [0]*n\nback = [0]*n\nbackgo = [0]*n\n\n\nfor i in range(n):\n    xv.append(list(map(int,input().split())))\n    if 2*xv[i][0]<= c: go[i] = xv[i][1]-xv[i][0]\n    else: go[i] = 0\n    if 2*c-xv[i][0]<= xv[i][1]: goback[i] = xv[i][1]-2*c+xv[i][0]\n    else: goback[i] = 0\n    if xv[i][0]<= c: back[i] = xv[i][1]-(c-xv[i][0])\n    else: back[i] = 0\n    if 2*c-xv[i][0]<= xv[i][1]: backgo[i] = xv[i][1]-(2*c-xv[i][0])\n    else: backgo[i] = 0\n\nprint(max(max(go)+max(backgo),max(back)+max(goback)))\n```\n "
    },
    {
        "user_id": "u721425712",
        "problem_id": "p02917",
        "submission1_id": "s626029519",
        "code_content": "\nn = int(input())\nb = list(map(int, input().split()))\n\na = [0]*n\nfor i in range(n-1):\n    if i == 0:\n        a[0] = b[0]\n        a[1] = b[0]\n    elif b[i] >= b[i-1]:\n        a[i+1] = b[i]\n    elif b[i] < b[i-1]:\n        a[i+1] = b[i]\n        a[i] = b[i]\nprint(sum(a))",
        "origin_generated_text": "\n```\nn = int(input())\nb = list(map(int, input().split()))\n\na = [0]*n\nfor i in range(n-1):\n    if i == 0:\n        a[0] = b[0]\n        a[1] = b[0]\n    elif b[i] >= b[i-1]:\n        a[i+1] = b[i]\n    elif b[i] < b[i-1]:\n        a[i+1] = b[i]\n        a[i] = b[i]\nprint(sum(a))```\n "
    },
    {
        "user_id": "u636311816",
        "problem_id": "p03326",
        "submission1_id": "s930111637",
        "code_content": "\nimport copy\nn,m = map(int,input().split())\n\n\nscores = list()\nfor i in range(n):\n    score = list(map(int,input().split()))\n    scores.append(score)\n\nsmax=None\nfor x in range(2):\n    scores_=copy.deepcopy(scores)\n    \n    for i in range(n):\n        scores_[i][0] = pow(-1,x)*scores[i][0]\n    for y in range(2):\n        for i in range(n):\n            scores_[i][1] = pow(-1,x)*scores[i][1]\n        for z in range(2):\n            for i in range(n):\n                scores_[i][2] = pow(-1,x)*scores[i][2]\n        \n            ssum=list()\n            for i in range(n):\n                ssum.append(sum(scores_[i]))\n            ssum.sort()\n            tmp=0\n            \n            for eat in range(m):\n                tmp+=ssum[eat]\n            if smax==None or tmp>smax:\n                smax=tmp\nprint(smax)",
        "origin_generated_text": "\n```\nimport copy\nn,m = map(int,input().split())\n\n\nscores = list()\nfor i in range(n):\n    score = list(map(int,input().split()))\n    scores.append(score)\n\nsmax=None\nfor x in range(2):\n    scores_=copy.deepcopy(scores)\n    \n    for i in range(n):\n        scores_[i][0] = pow(-1,x)*scores[i][0]\n    for y in range(2):\n        for i in range(n):\n            scores_[i][1] = pow(-1,x)*scores[i][1]\n        for z in range(2):\n            for i in range(n):\n                scores_[i][2] = pow(-1,x)*scores[i][2]\n        \n            ssum=list()\n            for i in range(n):\n                ssum.append(sum(scores_[i]))\n            ssum.sort()\n            tmp=0\n            \n            for eat in range(m):\n                tmp+=ssum[eat]\n            if smax==None or tmp>smax:\n                smax=tmp\nprint(smax)```\n "
    },
    {
        "user_id": "u642418876",
        "problem_id": "p02887",
        "submission1_id": "s630985222",
        "code_content": "\nn=int(input())\ns=str(input())\nsame=1\nfor i in range(1,n):\n  if s[i]==s[i-1]:\n    same+=1\n  else:\n    same=1\nprint(n-same)\n",
        "origin_generated_text": "\n```\nn=int(input())\ns=str(input())\nsame=1\nfor i in range(1,n):\n  if s[i]==s[i-1]:\n    same+=1\n  else:\n    same=1\nprint(n-same)\n```\n "
    },
    {
        "user_id": "u119148115",
        "problem_id": "p04017",
        "submission1_id": "s659836906",
        "code_content": "\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n\n\nN = I()\nx = LI()\nL = I()\n\nfrom bisect import bisect_right\n\narrive = [[0]*N for _ in range(30)]  \nfor k in range(30):\n    if k == 0:\n        for i in range(N):\n            arrive[0][i] = bisect_right(x,x[i]+L)-1\n    else:\n        for i in range(N):\n            arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n\n\ndef query(a,b):  \n    a -= 1\n    b -= 1\n    ans = 1\n    for k in range(29,-1,-1):\n        if arrive[k][a] >= b:\n            continue\n        else:\n            a = arrive[k][a]\n            ans += 1 << k\n    print(ans)\n\n\nQ = I()\nfor i in range(Q):\n    a,b = MI()\n    if a > b:\n        a,b = b,a\n    query(a,b)\n",
        "origin_generated_text": "\n```\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  \n\n\nN = I()\nx = LI()\nL = I()\n\nfrom bisect import bisect_right\n\narrive = [[0]*N for _ in range(30)]  \nfor k in range(30):\n    if k == 0:\n        for i in range(N):\n            arrive[0][i] = bisect_right(x,x[i]+L)-1\n    else:\n        for i in range(N):\n            arrive[k][i] = arrive[k-1][arrive[k-1][i]]\n\n\ndef query(a,b):  \n    a -= 1\n    b -= 1\n    ans = 1\n    for k in range(29,-1,-1):\n        if arrive[k][a] >= b:\n            continue\n        else:\n            a = arrive[k][a]\n            ans += 1 << k\n    print(ans)\n\n\nQ = I()\nfor i in range(Q):\n    a,b = MI()\n    if a > b:\n        a,b = b,a\n    query(a,b)\n```\n "
    },
    {
        "user_id": "u765590009",
        "problem_id": "p03106",
        "submission1_id": "s816907901",
        "code_content": "\na, b, k = map(int, input().split())\n \nnum = min(a, b)\nanswer = []\nfor i in range(1, num+1):\n    if (a % i == 0 and b % i == 0):\n        answer.append(i)\n        \nprint(answer[k-1])",
        "origin_generated_text": "\n```\na, b, k = map(int, input().split())\n \nnum = min(a, b)\nanswer = []\nfor i in range(1, num+1):\n    if (a % i == 0 and b % i == 0):\n        answer.append(i)\n        \nprint(answer[k-1])```\n "
    },
    {
        "user_id": "u567380442",
        "problem_id": "p02299",
        "submission1_id": "s861812158",
        "code_content": "\nfrom sys import stdin\nreadline = stdin.readline\n\n\ndef cross(a, b):\n    return a.real * b.imag - a.imag * b.real\n\n\ndef dot(a, b):\n    return a.real * b.real + a.imag * b.imag\n\n\ndef eq(a, b):\n    return abs(a - b) < 1e-10\n\n\ndef on_line(p, s, e):\n    d = dot(p - s, e - s)\n    c = cross(p - s, e - s)\n    if c == 0 and 0 <= d <= abs(e - s) ** 2:\n        return True\n    return False\n\n\ndef on_polygon_line(xy, p):\n    for i in range(len(p)):\n        j = i - 1\n        if on_line(xy, p[i], p[j]):\n            return True\n    return False\n\n\ndef in_polygon(xy, p):\n    wn = 0\n    for i in range(len(p)):\n        j = i - 1\n        if 0 == (p[i] - p[j]).imag:\n            continue\n        vt = (xy - p[j]).imag / (p[i] - p[j]).imag\n        tmp = p[i] + vt * (p[i] - p[j])\n        if xy.real < tmp.real:\n            wn += 1 if p[j].imag < xy.imag <= p[i].imag else\\\n                 -1 if p[i].imag < xy.imag <= p[j].imag else 0\n    return wn\n\nn = int(readline())\np = [map(int, readline().split()) for _ in range(n)]\np = [x + y * 1j for x, y in p]\n\nq = int(readline())\nfor _ in range(q):\n    x, y = map(int, readline().split())\n    xy = x + y * 1j\n    print(1 if on_polygon_line(xy, p) else 2 if in_polygon(xy, p) else 0)",
        "origin_generated_text": "\n```\nfrom sys import stdin\nreadline = stdin.readline\n\n\ndef cross(a, b):\n    return a.real * b.imag - a.imag * b.real\n\n\ndef dot(a, b):\n    return a.real * b.real + a.imag * b.imag\n\n\ndef eq(a, b):\n    return abs(a - b) < 1e-10\n\n\ndef on_line(p, s, e):\n    d = dot(p - s, e - s)\n    c = cross(p - s, e - s)\n    if c == 0 and 0 <= d <= abs(e - s) ** 2:\n        return True\n    return False\n\n\ndef on_polygon_line(xy, p):\n    for i in range(len(p)):\n        j = i - 1\n        if on_line(xy, p[i], p[j]):\n            return True\n    return False\n\n\ndef in_polygon(xy, p):\n    wn = 0\n    for i in range(len(p)):\n        j = i - 1\n        if 0 == (p[i] - p[j]).imag:\n            continue\n        vt = (xy - p[j]).imag / (p[i] - p[j]).imag\n        tmp = p[i] + vt * (p[i] - p[j])\n        if xy.real < tmp.real:\n            wn += 1 if p[j].imag < xy.imag <= p[i].imag else\\\n                 -1 if p[i].imag < xy.imag <= p[j].imag else 0\n    return wn\n\nn = int(readline())\np = [map(int, readline().split()) for _ in range(n)]\np = [x + y * 1j for x, y in p]\n\nq = int(readline())\nfor _ in range(q):\n    x, y = map(int, readline().split())\n    xy = x + y * 1j\n    print(1 if on_polygon_line(xy, p) else 2 if in_polygon(xy, p) else 0)```\n "
    },
    {
        "user_id": "u533232830",
        "problem_id": "p03106",
        "submission1_id": "s986368588",
        "code_content": "\na, b, k = map(int, input().split())\nl = []\n\nfor i in range((min(a,b))):\n    if a%(i+1)==0 and b%(i+1)==0:\n        l.append(i+1)\nl.sort()\nprint(l[k-1])",
        "origin_generated_text": "\n```\na, b, k = map(int, input().split())\nl = []\n\nfor i in range((min(a,b))):\n    if a%(i+1)==0 and b%(i+1)==0:\n        l.append(i+1)\nl.sort()\nprint(l[k-1])```\n "
    },
    {
        "user_id": "u868701750",
        "problem_id": "p02730",
        "submission1_id": "s808646625",
        "code_content": "\nS = input()\nN = len(S)\n\ncond_1 = S[:int((N-1)/2)]\ncond_1_r = cond_1[::-1]\n\nif cond_1 != cond_1_r:\n    print('No')\n    exit(0)\n\ncond_2 = S[int((N+3)/2-1):]\ncond_2_r = cond_2[::-1]\n\nif cond_2 != cond_2_r:\n    print('No')\n    exit(0)\n\nprint('Yes')",
        "origin_generated_text": "\n```\nS = input()\nN = len(S)\n\ncond_1 = S[:int((N-1)/2)]\ncond_1_r = cond_1[::-1]\n\nif cond_1 != cond_1_r:\n    print('No')\n    exit(0)\n\ncond_2 = S[int((N+3)/2-1):]\ncond_2_r = cond_2[::-1]\n\nif cond_2 != cond_2_r:\n    print('No')\n    exit(0)\n\nprint('Yes')```\n "
    },
    {
        "user_id": "u930705402",
        "problem_id": "p03716",
        "submission1_id": "s104168854",
        "code_content": "\nINF=10**30\nfrom heapq import heapify,heappop,heappush\nN=int(input())\na=list(map(int,input().split()))\n\nright=list(map(lambda x:-x,a[2*N:]));heapify(right)\nrmin=[INF]*(3*N);rmin[2*N]=sum(right)*-1\n\nfor i in reversed(range(N,2*N)):\n    p=heappop(right)*-1\n    b=min(p,a[i])\n    d=0 if b==p else b-p\n    heappush(right,b*-1)\n    rmin[i]=rmin[i+1]+d\n\nleft=a[:N];heapify(left)\nlmax=[-INF]*(3*N);lmax[N-1]=sum(left)\nfor i in range(N,2*N):\n    p=heappop(left)\n    b=max(p,a[i])\n    d=0 if b==p else b-p\n    heappush(left,b)\n    lmax[i]=lmax[i-1]+d\nres=-INF\nfor i in range(N,2*N+1):\n    res=max(res,lmax[i-1]-rmin[i])\nprint(res)",
        "origin_generated_text": "\n```\nINF=10**30\nfrom heapq import heapify,heappop,heappush\nN=int(input())\na=list(map(int,input().split()))\n\nright=list(map(lambda x:-x,a[2*N:]));heapify(right)\nrmin=[INF]*(3*N);rmin[2*N]=sum(right)*-1\n\nfor i in reversed(range(N,2*N)):\n    p=heappop(right)*-1\n    b=min(p,a[i])\n    d=0 if b==p else b-p\n    heappush(right,b*-1)\n    rmin[i]=rmin[i+1]+d\n\nleft=a[:N];heapify(left)\nlmax=[-INF]*(3*N);lmax[N-1]=sum(left)\nfor i in range(N,2*N):\n    p=heappop(left)\n    b=max(p,a[i])\n    d=0 if b==p else b-p\n    heappush(left,b)\n    lmax[i]=lmax[i-1]+d\nres=-INF\nfor i in range(N,2*N+1):\n    res=max(res,lmax[i-1]-rmin[i])\nprint(res)```\n "
    },
    {
        "user_id": "u883203948",
        "problem_id": "p03087",
        "submission1_id": "s848542694",
        "code_content": "\n\nx = input().split()\nn = int(x[0]) \nq = int(x[1]) \ns = input()\n\n\nt = [0] * n\nif s[0] == \"A\":\n    t[0] = 1\n    \nfor i in range(0,n-1):\n    if s[i:i+2] == \"AC\":\n        \n        if (i == 0) :\n            t[i] =  + 1\n        else:\n            t[i] = t[i-1] + 1\n    else :\n        if i == 0:\n            t[i] = 0\n        else:\n            t[i] = t[i-1]\n\n\n\ndef sc():\n    global t\n    global s\n    global n\n    global q\n    global idbox\n    maxx = 0\n    count = 0\n    com = [int(s)-1 for s in input().split()]\n    print(t[com[1]-1] - t[com[0]-1])\n        \n    \n\n    \n\nfor i in range(q):\n    \n    sc()\n",
        "origin_generated_text": "\n```\n\nx = input().split()\nn = int(x[0]) \nq = int(x[1]) \ns = input()\n\n\nt = [0] * n\nif s[0] == \"A\":\n    t[0] = 1\n    \nfor i in range(0,n-1):\n    if s[i:i+2] == \"AC\":\n        \n        if (i == 0) :\n            t[i] =  + 1\n        else:\n            t[i] = t[i-1] + 1\n    else :\n        if i == 0:\n            t[i] = 0\n        else:\n            t[i] = t[i-1]\n\n\n\ndef sc():\n    global t\n    global s\n    global n\n    global q\n    global idbox\n    maxx = 0\n    count = 0\n    com = [int(s)-1 for s in input().split()]\n    print(t[com[1]-1] - t[com[0]-1])\n        \n    \n\n    \n\nfor i in range(q):\n    \n    sc()\n```\n "
    },
    {
        "user_id": "u805716376",
        "problem_id": "p02281",
        "submission1_id": "s745083285",
        "code_content": "\ndef s(x):\n    print('',x,end='')\ndef p(u):\n    if u+1:s(u);p(R[u]);p(L[u])\ndef i(u):\n    if u+1:i(R[u]);s(u);i(L[u])\ndef o(u):\n    if u+1:o(R[u]);o(L[u]);s(u)\n        \nn = int(input())\nR, L = [0]*n, [0]*n\nfor _ in range(n):\n    a, b, c = map(int, input().split())\n    R[a] = b\n    L[a] = c\nroot = (set(range(n))-set(R)-set(L)).pop()\nprint('Preorder');p(root)\nprint('\\nInorder');i(root)\nprint('\\nPostorder');o(root)\nprint()\n     \n",
        "origin_generated_text": "\n```\ndef s(x):\n    print('',x,end='')\ndef p(u):\n    if u+1:s(u);p(R[u]);p(L[u])\ndef i(u):\n    if u+1:i(R[u]);s(u);i(L[u])\ndef o(u):\n    if u+1:o(R[u]);o(L[u]);s(u)\n        \nn = int(input())\nR, L = [0]*n, [0]*n\nfor _ in range(n):\n    a, b, c = map(int, input().split())\n    R[a] = b\n    L[a] = c\nroot = (set(range(n))-set(R)-set(L)).pop()\nprint('Preorder');p(root)\nprint('\\nInorder');i(root)\nprint('\\nPostorder');o(root)\nprint()\n     \n```\n "
    },
    {
        "user_id": "u105124953",
        "problem_id": "p02642",
        "submission1_id": "s209905508",
        "code_content": "\nn = int(input())\nli = list(map(int,input().split()))\nans = 0\n\nimport math\nimport bisect\nimport collections\nc = collections.Counter(li)\nli = list(set(li))\n\nwhile len(li)>0:\n    ba = li.pop(-1)\n    if c[ba]>1:\n        continue\n    else:\n        ans += 1\n    for tt in li:\n        if ba%tt == 0:\n            c[tt] -= 1\n            if c[tt] == 0:\n                li.remove(tt)\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\nli = list(map(int,input().split()))\nans = 0\n\nimport math\nimport bisect\nimport collections\nc = collections.Counter(li)\nli = list(set(li))\n\nwhile len(li)>0:\n    ba = li.pop(-1)\n    if c[ba]>1:\n        continue\n    else:\n        ans += 1\n    for tt in li:\n        if ba%tt == 0:\n            c[tt] -= 1\n            if c[tt] == 0:\n                li.remove(tt)\nprint(ans)```\n "
    },
    {
        "user_id": "u009348313",
        "problem_id": "p02580",
        "submission1_id": "s401676318",
        "code_content": "\nh,w,m = map(int,input().split())\nb = []\nx = [0 for _ in range(w)]\ny = [0 for _ in range(h)]\nfor i in range(m):\n  bh,bw = map(int,input().split())\n  bh -= 1\n  bw -= 1\n  b.append((bh,bw))\n  x[bw] += 1\n  y[bh] += 1\n\n\nmxx = max(x)\nmxy = max(y)\n\ncmxb = 0\nfor by,bx in b:\n  if y[by]+x[bx] == mxx+mxy:\n    cmxb += 1\ncmxx = 0\nfor xi in x:\n  if xi == mxx:\n    cmxx += 1\ncmxy = 0\nfor yi in y:\n  if yi == mxy:\n    cmxy += 1\n\n\nif cmxb >= cmxx*cmxy and cmxb >= cmxy*cmxx:\n  print(mxx+mxy-1)\nelse:\n  print(mxx+mxy)",
        "origin_generated_text": "\n```\nh,w,m = map(int,input().split())\nb = []\nx = [0 for _ in range(w)]\ny = [0 for _ in range(h)]\nfor i in range(m):\n  bh,bw = map(int,input().split())\n  bh -= 1\n  bw -= 1\n  b.append((bh,bw))\n  x[bw] += 1\n  y[bh] += 1\n\n\nmxx = max(x)\nmxy = max(y)\n\ncmxb = 0\nfor by,bx in b:\n  if y[by]+x[bx] == mxx+mxy:\n    cmxb += 1\ncmxx = 0\nfor xi in x:\n  if xi == mxx:\n    cmxx += 1\ncmxy = 0\nfor yi in y:\n  if yi == mxy:\n    cmxy += 1\n\n\nif cmxb >= cmxx*cmxy and cmxb >= cmxy*cmxx:\n  print(mxx+mxy-1)\nelse:\n  print(mxx+mxy)```\n "
    },
    {
        "user_id": "u211842487",
        "problem_id": "p03102",
        "submission1_id": "s840658249",
        "code_content": "\nN,M,C = map(int,input().split())\nB = list(map(int,input().split()))\nA=[]\nfor i in range(N):\n    A.append(list(map(int,input().split())))\n\n\ncnt =0\nfor a in A:\n    c = 0\n    for j in range(len(a)):\n        c += a[j]*B[j]\n    if c-C > 0:\n        cnt += 1\n\nprint(cnt)",
        "origin_generated_text": "\n```\nN,M,C = map(int,input().split())\nB = list(map(int,input().split()))\nA=[]\nfor i in range(N):\n    A.append(list(map(int,input().split())))\n\n\ncnt =0\nfor a in A:\n    c = 0\n    for j in range(len(a)):\n        c += a[j]*B[j]\n    if c-C > 0:\n        cnt += 1\n\nprint(cnt)```\n "
    },
    {
        "user_id": "u313291636",
        "problem_id": "p02887",
        "submission1_id": "s748756442",
        "code_content": "\nn = int(input())\ns = input()\ncount = 0\n\nfor i in range(n - 1):\n    if s[i] != s[i + 1]:\n        count += 1\n\nprint(count + 1)",
        "origin_generated_text": "\n```\nn = int(input())\ns = input()\ncount = 0\n\nfor i in range(n - 1):\n    if s[i] != s[i + 1]:\n        count += 1\n\nprint(count + 1)```\n "
    },
    {
        "user_id": "u945199633",
        "problem_id": "p02660",
        "submission1_id": "s152798109",
        "code_content": "\nN = int(input())\nN_prime = []\n\nn = N\ni = 2\nwhile i <= N**0.5:\n    if n%i != 0:\n        i += 1\n        continue\n    \n    N_prime.append(i)\n    n = n/i\n    if n == 1:\n        break\n\nif N_prime == [] or n != 1:\n    N_prime.append(N)\nelif n != 1:\n    N_prime.append(int(n))\n\nct = []\nfor i in N_prime:\n    if i not in ct:\n        ct.append(i)\n        temp_i = 1\n        continue\n    temp_i *= i\n    if temp_i not in ct:\n        ct.append(temp_i)\n        temp_i = 1\n        continue\n\nprint(len(ct))",
        "origin_generated_text": "\n```\nN = int(input())\nN_prime = []\n\nn = N\ni = 2\nwhile i <= N**0.5:\n    if n%i != 0:\n        i += 1\n        continue\n    \n    N_prime.append(i)\n    n = n/i\n    if n == 1:\n        break\n\nif N_prime == [] or n != 1:\n    N_prime.append(N)\nelif n != 1:\n    N_prime.append(int(n))\n\nct = []\nfor i in N_prime:\n    if i not in ct:\n        ct.append(i)\n        temp_i = 1\n        continue\n    temp_i *= i\n    if temp_i not in ct:\n        ct.append(temp_i)\n        temp_i = 1\n        continue\n\nprint(len(ct))```\n "
    },
    {
        "user_id": "u766477342",
        "problem_id": "p00023",
        "submission1_id": "s695408269",
        "code_content": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n    d2 = ra + rb\n\n    if d1 <= d2:\n        if d1 <= ra
        "origin_generated_text": "\n```\nimport math\nfor i in range(int(input())):\n    xa, ya, ra, xb, yb, rb = list(map(float, input().split()))\n\n    d1 = math.sqrt((xa - xb) ** 2 + (ya - yb) ** 2)\n    d2 = ra + rb\n\n    if d1 <= d2:\n        if d1 <= ra + 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "user_id": "u383429137",
        "problem_id": "p02640",
        "submission1_id": "s579245405",
        "code_content": "\nX,Y = map(int, input().split())\nif Y%2==1:\n    print(\"No\")\nelse:\n    kame=int(Y/2)\n    turu=int(Y/4)\n    if (turu+kame)==X:\n        print(\"Yes\")\n    else:\n        print('No')\n",
        "origin_generated_text": "\n```\nX,Y = map(int, input().split())\nif Y%2==1:\n    print(\"No\")\nelse:\n    kame=int(Y/2)\n    turu=int(Y/4)\n    if (turu+kame)==X:\n        print(\"Yes\")\n    else:\n        print('No')\n```\n "
    },
    {
        "user_id": "u370721525",
        "problem_id": "p03475",
        "submission1_id": "s303174948",
        "code_content": "\nN = int(input())\nl = []\nfor i in range(N-1):\n  c, s, f = map(int, input().split())\n  l.append([c, s, f])\n  \nfor i in range(N-1):\n  time = l[i][1] + l[i][0]\n  for j in range(i+1, N-1):\n    if time-l[j][1] >= 0:\n      wait = (time-l[j][1]) \n    else:\n      wait = l[j][1]\n    time += wait + l[j][0]\n  print(time)\nprint(0)",
        "origin_generated_text": "\n```\nN = int(input())\nl = []\nfor i in range(N-1):\n  c, s, f = map(int, input().split())\n  l.append([c, s, f])\n  \nfor i in range(N-1):\n  time = l[i][1] + l[i][0]\n  for j in range(i+1, N-1):\n    if time-l[j][1] >= 0:\n      wait = (time-l[j][1]) \n    else:\n      wait = l[j][1]\n    time += wait + l[j][0]\n  print(time)\nprint(0)```\n "
    },
    {
        "user_id": "u757777793",
        "problem_id": "p02922",
        "submission1_id": "s328986562",
        "code_content": "\na,b = map(int,input().split())\nif b % a == 0:\n    print(b \nelif b == 1:\n    print(0)\nelse:\n    print(1 + (b ",
        "origin_generated_text": "\n```\na,b = map(int,input().split())\nif b % a == 0:\n    print(b \nelif b == 1:\n    print(0)\nelse:\n    print(1 + (b ```\n "
    },
    {
        "user_id": "u961247631",
        "problem_id": "p02640",
        "submission1_id": "s639190006",
        "code_content": "\na,b = map(int,input(). split ())\nif a > 100 or b > 100:\n    print('No')\nelif not isinstance(a, int) or not isinstance(b, int):\n    print('No')\nelif 2 * a <= b <= 4 * a:\n    print('Yes')\nelse:\n    print('No')",
        "origin_generated_text": "\n```\na,b = map(int,input(). split ())\nif a > 100 or b > 100:\n    print('No')\nelif not isinstance(a, int) or not isinstance(b, int):\n    print('No')\nelif 2 * a <= b <= 4 * a:\n    print('Yes')\nelse:\n    print('No')```\n "
    },
    {
        "user_id": "u306950978",
        "problem_id": "p04019",
        "submission1_id": "s133229669",
        "code_content": "\ns = input()\nkita = s.count(\"N\")\nmina = s.count(\"W\") + s.count(\"S\")\nnisi = s.count(\"E\")\nhiga = s.count(\"N\")\n\nif kita + mina != 0 and kita*mina == 0:\n    print(\"No\")\n    exit()\nif nisi + higa != 0 and nisi*higa == 0:\n    print(\"No\")\n    exit()\n\nprint(\"Yes\")",
        "origin_generated_text": "\n```\ns = input()\nkita = s.count(\"N\")\nmina = s.count(\"W\") + s.count(\"S\")\nnisi = s.count(\"E\")\nhiga = s.count(\"N\")\n\nif kita + mina != 0 and kita*mina == 0:\n    print(\"No\")\n    exit()\nif nisi + higa != 0 and nisi*higa == 0:\n    print(\"No\")\n    exit()\n\nprint(\"Yes\")```\n "
    },
    {
        "user_id": "u266874640",
        "problem_id": "p03760",
        "submission1_id": "s444443884",
        "code_content": "\nodd = input()\neven =input()\nodd_list = []\neven_list = []\n\nfor i in range(len(odd)):\n    odd_list.append(odd[i*2])\n    even_list.append(even[i*2+1])\neven_list.append(\"\")\n\nfor i in range(len(odd_list)):\n    print(odd_list[i],end = \"\")\n    print(even_list[i],end = \"\")\n",
        "origin_generated_text": "\n```\nodd = input()\neven =input()\nodd_list = []\neven_list = []\n\nfor i in range(len(odd)):\n    odd_list.append(odd[i*2])\n    even_list.append(even[i*2+1])\neven_list.append(\"\")\n\nfor i in range(len(odd_list)):\n    print(odd_list[i],end = \"\")\n    print(even_list[i],end = \"\")\n```\n "
    },
    {
        "user_id": "u177398299",
        "problem_id": "p03416",
        "submission1_id": "s562321401",
        "code_content": "\nA, B = map(int, input().split())\nans = 0\nfor i in range(A, B + 1):\n    i = str(i)\n    if i[:len(i)\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\nans = 0\nfor i in range(A, B + 1):\n    i = str(i)\n    if i[:len(i)\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u875291233",
        "problem_id": "p03716",
        "submission1_id": "s034415946",
        "code_content": "\n\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfrom heapq import *\n\npq1 = a[:n]\nheapify(pq1)\ns = sum(pq1)\nscore1 = [s]\nfor i in range(n):\n    c=heappushpop(pq1, a[n+i])\n    s += a[n+i] - c\n    score1.append(s)\n\npq2 = [-i for i in a[2*n:]]\nheapify(pq2)\ns = sum(pq2)\nscore2 = [s]\nfor i in range(1,n+1):\n    c=heappushpop(pq2, -a[2*n-i])\n    s += -a[2*n-i] - c\n    score2.append(s)\n\nans = -10**17\nfor i,j in zip(score1,reversed(score2)):\n    ans = max(ans, i+j)\n\nprint(ans)\n    \n",
        "origin_generated_text": "\n```\n\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nfrom heapq import *\n\npq1 = a[:n]\nheapify(pq1)\ns = sum(pq1)\nscore1 = [s]\nfor i in range(n):\n    c=heappushpop(pq1, a[n+i])\n    s += a[n+i] - c\n    score1.append(s)\n\npq2 = [-i for i in a[2*n:]]\nheapify(pq2)\ns = sum(pq2)\nscore2 = [s]\nfor i in range(1,n+1):\n    c=heappushpop(pq2, -a[2*n-i])\n    s += -a[2*n-i] - c\n    score2.append(s)\n\nans = -10**17\nfor i,j in zip(score1,reversed(score2)):\n    ans = max(ans, i+j)\n\nprint(ans)\n    \n```\n "
    },
    {
        "user_id": "u444349080",
        "problem_id": "p03568",
        "submission1_id": "s915873875",
        "code_content": "\nN=int(input())\nA=list(map(int,input().split()))\nhiku=1\nans=1\nfor i in A:\n        if i%2 == 1:hiku*=2\n        ans*=3\nprint(ans-hiku)",
        "origin_generated_text": "\n```\nN=int(input())\nA=list(map(int,input().split()))\nhiku=1\nans=1\nfor i in A:\n        if i%2 == 1:hiku*=2\n        ans*=3\nprint(ans-hiku)```\n "
    },
    {
        "user_id": "u993435350",
        "problem_id": "p03613",
        "submission1_id": "s952791601",
        "code_content": "\nimport collections\n\nN = int(input())\nA = list(map(int,input().split()))\n\nC = [0,0,0]\n\nfor i in range(N):\n  for j in range(3):\n    d = A[i] + j - 2\n    if d >= 0:\n      C[d] += 1\n\nprint(max(C))",
        "origin_generated_text": "\n```\nimport collections\n\nN = int(input())\nA = list(map(int,input().split()))\n\nC = [0,0,0]\n\nfor i in range(N):\n  for j in range(3):\n    d = A[i] + j - 2\n    if d >= 0:\n      C[d] += 1\n\nprint(max(C))```\n "
    },
    {
        "user_id": "u150117535",
        "problem_id": "p03675",
        "submission1_id": "s919656111",
        "code_content": "\ninput()\nn=[x for x in input().split()]\nnb=n[::-1]\nbs=n[::2]\nif len(nb)%2==0:\n    be=nb[::2]\nelse:\n    be=nb[1::2]\nif len(n)==1:\n    print(n[0])\nelse:\n    print(\" \".join(be+bs[::-1]))",
        "origin_generated_text": "\n```\ninput()\nn=[x for x in input().split()]\nnb=n[::-1]\nbs=n[::2]\nif len(nb)%2==0:\n    be=nb[::2]\nelse:\n    be=nb[1::2]\nif len(n)==1:\n    print(n[0])\nelse:\n    print(\" \".join(be+bs[::-1]))```\n "
    },
    {
        "user_id": "u845536647",
        "problem_id": "p03965",
        "submission1_id": "s701403813",
        "code_content": "\ns=input()\ng=s.count('g')\np=s.count('p')\na=g-p+(g+p)\nprint(a)",
        "origin_generated_text": "\n```\ns=input()\ng=s.count('g')\np=s.count('p')\na=g-p+(g+p)\nprint(a)```\n "
    },
    {
        "user_id": "u797673668",
        "problem_id": "p02365",
        "submission1_id": "s919826151",
        "code_content": "\nfrom collections import defaultdict\nfrom itertools import chain\n\nnv, ne, r = map(int, input().split())\n\nin_edges = defaultdict(set)\nout_edges = defaultdict(set)\nwhile ne:\n    s, t, w = map(int, input().split())\n    in_edges[t].add((w, s))\n    out_edges[s].add((w, t))\n    ne -= 1\n\n\ndef chu_liu_edmonds(vertices):\n    global in_edges, out_edges, nv, r\n\n    total_cost = 0\n    prev_v = {v: None for v in vertices}\n    next_vs = {v: set() for v in vertices}\n\n    for t in vertices:\n        if t == r:\n            continue\n        min_in_w, min_in_s = min(in_edges[t])\n        total_cost += min_in_w\n        prev_v[t] = min_in_s\n        next_vs[min_in_s].add(t)\n\n    visited = {r}\n    queue = set(next_vs[r])\n    while queue:\n        t = queue.pop()\n        visited.add(t)\n        queue.update(next_vs[t])\n\n    cycles = []\n    for i in vertices:\n        if i in visited:\n            continue\n\n        cycle_vertices = set()\n        while i not in visited:\n            visited.add(i)\n            cycle_vertices.add(i)\n            i = prev_v[i]\n\n        \n        if i not in cycle_vertices:\n            continue\n\n        \n        cycle_vertices, j = {i}, prev_v[i]\n        while j != i:\n            cycle_vertices.add(j)\n            j = prev_v[j]\n\n        cycles.append(cycle_vertices)\n\n    if not cycles:\n        return total_cost\n\n    for cycle in cycles:\n        vertices.difference_update(cycle)\n        vertices.add(nv)\n\n        for v in cycle:\n            for w, t in out_edges[v]:\n                if t in vertices:\n                    out_edges[nv].add((w, t))\n                    in_edges[t].remove((w, v))\n                    in_edges[t].add((w, nv))\n            for w, s in in_edges[v]:\n                if s in vertices:\n                    new_w = w + min(in_edges[v])[0]\n                    in_edges[nv].add((new_w, s))\n                    out_edges[s].remove((w, v))\n                    out_edges[s].add((new_w, nv))\n            del in_edges[v]\n            del out_edges[v]\n\n        nv += 1\n\n    return chu_liu_edmonds(vertices)\n\n\nprint(chu_liu_edmonds(set(range(nv))))",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\nfrom itertools import chain\n\nnv, ne, r = map(int, input().split())\n\nin_edges = defaultdict(set)\nout_edges = defaultdict(set)\nwhile ne:\n    s, t, w = map(int, input().split())\n    in_edges[t].add((w, s))\n    out_edges[s].add((w, t))\n    ne -= 1\n\n\ndef chu_liu_edmonds(vertices):\n    global in_edges, out_edges, nv, r\n\n    total_cost = 0\n    prev_v = {v: None for v in vertices}\n    next_vs = {v: set() for v in vertices}\n\n    for t in vertices:\n        if t == r:\n            continue\n        min_in_w, min_in_s = min(in_edges[t])\n        total_cost += min_in_w\n        prev_v[t] = min_in_s\n        next_vs[min_in_s].add(t)\n\n    visited = {r}\n    queue = set(next_vs[r])\n    while queue:\n        t = queue.pop()\n        visited.add(t)\n        queue.update(next_vs[t])\n\n    cycles = []\n    for i in vertices:\n        if i in visited:\n            continue\n\n        cycle_vertices = set()\n        while i not in visited:\n            visited.add(i)\n            cycle_vertices.add(i)\n            i = prev_v[i]\n\n        \n        if i not in cycle_vertices:\n            continue\n\n        \n        cycle_vertices, j = {i}, prev_v[i]\n        while j != i:\n            cycle_vertices.add(j)\n            j = prev_v[j]\n\n        cycles.append(cycle_vertices)\n\n    if not cycles:\n        return total_cost\n\n    for cycle in cycles:\n        vertices.difference_update(cycle)\n        vertices.add(nv)\n\n        for v in cycle:\n            for w, t in out_edges[v]:\n                if t in vertices:\n                    out_edges[nv].add((w, t))\n                    in_edges[t].remove((w, v))\n                    in_edges[t].add((w, nv))\n            for w, s in in_edges[v]:\n                if s in vertices:\n                    new_w = w + min(in_edges[v])[0]\n                    in_edges[nv].add((new_w, s))\n                    out_edges[s].remove((w, v))\n                    out_edges[s].add((new_w, nv))\n            del in_edges[v]\n            del out_edges[v]\n\n        nv += 1\n\n    return chu_liu_edmonds(vertices)\n\n\nprint(chu_liu_edmonds(set(range(nv))))```\n "
    },
    {
        "user_id": "u188745744",
        "problem_id": "p03613",
        "submission1_id": "s202165346",
        "code_content": "\nA=int(input())\nn_l=list(map(int,input().split()))\nimport collections\nans=0\nn_l=collections.Counter(n_l)\nfor i in range(-1,100000):\n   ans=max(ans,n_l[i]+n_l[i+1]+n_l[i+2])\nprint(ans)",
        "origin_generated_text": "\n```\nA=int(input())\nn_l=list(map(int,input().split()))\nimport collections\nans=0\nn_l=collections.Counter(n_l)\nfor i in range(-1,100000):\n   ans=max(ans,n_l[i]+n_l[i+1]+n_l[i+2])\nprint(ans)```\n "
    },
    {
        "user_id": "u013629972",
        "problem_id": "p03625",
        "submission1_id": "s825046753",
        "code_content": "\nimport math, string, itertools, fractions, heapq, collections, re,  array, bisect, sys, random, time, copy, functools\nsys.setrecursionlimit(10**7)\ninf = 10 ** 20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef pf(s): return print(s, flush=True)\n\nN=I()\nA=LI()\nB = []\ncounts = collections.Counter(A)\nfor count in counts.items():\n    if count[1] >= 2:\n        B.append(count[0]*2)\nB.sort(reverse=True)\nif len(B) < 4:\n    print(0)\nelse:\n    print(B[0]*B[1])\n    ",
        "origin_generated_text": "\n```\nimport math, string, itertools, fractions, heapq, collections, re,  array, bisect, sys, random, time, copy, functools\nsys.setrecursionlimit(10**7)\ninf = 10 ** 20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef pf(s): return print(s, flush=True)\n\nN=I()\nA=LI()\nB = []\ncounts = collections.Counter(A)\nfor count in counts.items():\n    if count[1] >= 2:\n        B.append(count[0]*2)\nB.sort(reverse=True)\nif len(B) < 4:\n    print(0)\nelse:\n    print(B[0]*B[1])\n    ```\n "
    },
    {
        "user_id": "u732412551",
        "problem_id": "p02922",
        "submission1_id": "s550109421",
        "code_content": "\nfrom math import ceil\nA, B = map(int, input().split())\nprint(ceil(B/A))",
        "origin_generated_text": "\n```\nfrom math import ceil\nA, B = map(int, input().split())\nprint(ceil(B/A))```\n "
    },
    {
        "user_id": "u664481257",
        "problem_id": "p03568",
        "submission1_id": "s870608822",
        "code_content": "\n\n\n\n\n\nfrom functools import reduce\nfrom itertools import repeat\n\n\ndef multipler(x, y):\n    return x*y\n\ndef hundred_or_one(l: list):\n    return [True if x == 100 else False for x in l]\n    \n\ndef check_odds(l :list):\n    return [True if x % 2 == 0 else False for x in l]\n\ndef check_hun(l: list):\n    return [True if x == 100 else False for x in l]\n\ndef main(num, data:list):\n    \n    hun_one = hundred_or_one(data)\n    odds = check_odds(data)  \n    huns = check_hun(data)\n\n    basis = [3 for t in hun_one]\n\n    \n    remover = [2 if o else 1 for o in odds]\n\n    remover_num = int(reduce(multipler, remover))\n    if sum(huns) > 0 and sum(huns) < num:\n        remover_num = int(remover_num / 2 ** sum(huns))\n\n    basic_answer = reduce(multipler, basis)\n    \n    \n    return basic_answer - remover_num\n\nif __name__ == '__main__':\n    \n    \n    num = int(input())\n    data = input().split(\" \")\n    data = [int(i) for i in data]\n\n    print(main(num, data))\n",
        "origin_generated_text": "\n```\n\n\n\n\n\nfrom functools import reduce\nfrom itertools import repeat\n\n\ndef multipler(x, y):\n    return x*y\n\ndef hundred_or_one(l: list):\n    return [True if x == 100 else False for x in l]\n    \n\ndef check_odds(l :list):\n    return [True if x % 2 == 0 else False for x in l]\n\ndef check_hun(l: list):\n    return [True if x == 100 else False for x in l]\n\ndef main(num, data:list):\n    \n    hun_one = hundred_or_one(data)\n    odds = check_odds(data)  \n    huns = check_hun(data)\n\n    basis = [3 for t in hun_one]\n\n    \n    remover = [2 if o else 1 for o in odds]\n\n    remover_num = int(reduce(multipler, remover))\n    if sum(huns) > 0 and sum(huns) < num:\n        remover_num = int(remover_num / 2 ** sum(huns))\n\n    basic_answer = reduce(multipler, basis)\n    \n    \n    return basic_answer - remover_num\n\nif __name__ == '__main__':\n    \n    \n    num = int(input())\n    data = input().split(\" \")\n    data = [int(i) for i in data]\n\n    print(main(num, data))\n```\n "
    },
    {
        "user_id": "u623659526",
        "problem_id": "p02959",
        "submission1_id": "s156497911",
        "code_content": "\nimport logging\n\nlogging.basicConfig(level=logging.INFO, format=\"%(message)s\")\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    logging.info(A)\n    logging.info(B)\n\n    counter = 0\n    for i in range(N):\n        if A[i] < B[i]:\n            \n            if (A[i] + A[i + 1]) > B[i]:\n                counter += B[i]\n                A[i + 1] = A[i + 1] - B[i] + A[i]\n                B[i] = 0\n            else:\n                counter += (A[i] + A[i + 1])\n                B[i] = B[i] - A[i] - A[i + 1]\n                A[i + 1] = 0\n        else:\n            counter += B[i]\n\n    if B[N - 1] > A[N]:\n        counter += A[N]\n        B[N - 1] = B[N - 1] - A[N]\n    if B[N - 1] > 0:\n        counter += B[N - 1]\n\n    print(counter)\n            \n    \nif __name__ == \"__main__\":\n    main()\n",
        "origin_generated_text": "\n```\nimport logging\n\nlogging.basicConfig(level=logging.INFO, format=\"%(message)s\")\n\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    logging.info(A)\n    logging.info(B)\n\n    counter = 0\n    for i in range(N):\n        if A[i] < B[i]:\n            \n            if (A[i] + A[i + 1]) > B[i]:\n                counter += B[i]\n                A[i + 1] = A[i + 1] - B[i] + A[i]\n                B[i] = 0\n            else:\n                counter += (A[i] + A[i + 1])\n                B[i] = B[i] - A[i] - A[i + 1]\n                A[i + 1] = 0\n        else:\n            counter += B[i]\n\n    if B[N - 1] > A[N]:\n        counter += A[N]\n        B[N - 1] = B[N - 1] - A[N]\n    if B[N - 1] > 0:\n        counter += B[N - 1]\n\n    print(counter)\n            \n    \nif __name__ == \"__main__\":\n    main()\n```\n "
    },
    {
        "user_id": "u967822229",
        "problem_id": "p03479",
        "submission1_id": "s703840520",
        "code_content": "\nfrom math import floor\nfrom decimal import Decimal\n\nA, B = list(map(int, input().split()))\n\nnum = A\nc = 0\nwhile num <= B:\n    num *= 2\n    c+=1\n\nprint(c)",
        "origin_generated_text": "\n```\nfrom math import floor\nfrom decimal import Decimal\n\nA, B = list(map(int, input().split()))\n\nnum = A\nc = 0\nwhile num <= B:\n    num *= 2\n    c+=1\n\nprint(c)```\n "
    },
    {
        "user_id": "u269568674",
        "problem_id": "p02287",
        "submission1_id": "s370282604",
        "code_content": "\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                      \", left key =\"+str(plist[1][0])+\n                      \", right key =\"+str(plist[1][1])+\"\\n\",end=\"\")\n            else :\n                l = int(j/2)\n                print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                      \", parent key =\"+str(plist[i-1][l])+\", left key =\"+\n                      str(plist[i+1][2*j]),end=\"\")\n                try:\n                    print(\", right key =\"+str(plist[i+1][2*j+1])+\"\\n\",end=\"\")\n                except:\n                    print(\"\\n\",end=\"\")\n        except:\n            l = int(j/2)\n            print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                  \", parent key =\"+str(plist[i-1][l])+\"\\n\",end=\"\")\n        k += 1\n",
        "origin_generated_text": "\n```\nn = int(input())\nklist = list(map(int,input().split()))\nplist = []\ni = 0\nk = 1\na = 2**i-1\nwhile 1:\n    if klist[a:a+2**i] != []:\n        plist.append(klist[a:a + 2**i])\n    else: break\n    a += 2**i\n    i += 1\nfor i in range(len(plist)):\n    for j in range(len(plist[i])):\n        try:\n            if i==0:\n                print(\"node\"+str(k)+\": key =\"+str(plist[0][0])+\n                      \", left key =\"+str(plist[1][0])+\n                      \", right key =\"+str(plist[1][1])+\"\\n\",end=\"\")\n            else :\n                l = int(j/2)\n                print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                      \", parent key =\"+str(plist[i-1][l])+\", left key =\"+\n                      str(plist[i+1][2*j]),end=\"\")\n                try:\n                    print(\", right key =\"+str(plist[i+1][2*j+1])+\"\\n\",end=\"\")\n                except:\n                    print(\"\\n\",end=\"\")\n        except:\n            l = int(j/2)\n            print(\"node\"+str(k)+\": key =\"+str(plist[i][j])+\n                  \", parent key =\"+str(plist[i-1][l])+\"\\n\",end=\"\")\n        k += 1\n```\n "
    },
    {
        "user_id": "u911449886",
        "problem_id": "p03752",
        "submission1_id": "s000577487",
        "code_content": "\nfrom itertools import combinations\n\ndef getval():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    return n,k,a\n\ndef main(n,k,a):\n    arr = []\n    locmax = 0\n    for i in a:\n        arr.append(locmax)\n        locmax = max(locmax,i)\n\n    ans = 2**60\n    for c in combinations(range(1,n),k-1):\n        cost = 0\n        prev = a[0]\n        for i in c:\n            if a[i]<=prev:\n                cost += max(prev,arr[i])+1-a[i]\n            prev = max(prev,arr[i])+1\n        ans = min(ans,cost)\n    print(ans)\n\nif __name__==\"__main__\":\n    n,k,a = getval()\n    main(n,k,a) ",
        "origin_generated_text": "\n```\nfrom itertools import combinations\n\ndef getval():\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    return n,k,a\n\ndef main(n,k,a):\n    arr = []\n    locmax = 0\n    for i in a:\n        arr.append(locmax)\n        locmax = max(locmax,i)\n\n    ans = 2**60\n    for c in combinations(range(1,n),k-1):\n        cost = 0\n        prev = a[0]\n        for i in c:\n            if a[i]<=prev:\n                cost += max(prev,arr[i])+1-a[i]\n            prev = max(prev,arr[i])+1\n        ans = min(ans,cost)\n    print(ans)\n\nif __name__==\"__main__\":\n    n,k,a = getval()\n    main(n,k,a) ```\n "
    },
    {
        "user_id": "u023229441",
        "problem_id": "p03200",
        "submission1_id": "s811559395",
        "code_content": "\ns=input()\nt=list(s).count(\"W\")\nA=[i for i,x in enumerate (list(s)) if x==\"W\"]\nprint(int(sum(A)-t*(t-1)/2))",
        "origin_generated_text": "\n```\ns=input()\nt=list(s).count(\"W\")\nA=[i for i,x in enumerate (list(s)) if x==\"W\"]\nprint(int(sum(A)-t*(t-1)/2))```\n "
    },
    {
        "user_id": "u878138257",
        "problem_id": "p03563",
        "submission1_id": "s312706721",
        "code_content": "\na = int(input())\nb = int(input())\nprint(b-a)",
        "origin_generated_text": "\n```\na = int(input())\nb = int(input())\nprint(b-a)```\n "
    },
    {
        "user_id": "u905582793",
        "problem_id": "p03343",
        "submission1_id": "s976041922",
        "code_content": "\nimport bisect\nn,k,q = map(int,input().split())\na = list(map(int,input().split()))\nif q == 1:\n  print(0)\n  exit()\nls = [-1,n]\nb = sorted(((a[i],i) for i in range(n)))\nansls = [b[q-1][0]-b[0][0]]\nfor i,x in enumerate(b):\n  if i == 0:\n    continue\n  space = [0]*(n-i)\n  qc = q-1\n  for j in range(i+1,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\n  if qc != 0:\n    continue\n  ins = bisect.bisect_left(ls,i)\n  ls.insert(ins,i)\n  for j in range(i+1,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\nprint(min(ansls))",
        "origin_generated_text": "\n```\nimport bisect\nn,k,q = map(int,input().split())\na = list(map(int,input().split()))\nif q == 1:\n  print(0)\n  exit()\nls = [-1,n]\nb = sorted(((a[i],i) for i in range(n)))\nansls = [b[q-1][0]-b[0][0]]\nfor i,x in enumerate(b):\n  if i == 0:\n    continue\n  space = [0]*(n-i)\n  qc = q-1\n  for j in range(i+1,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\n  if qc != 0:\n    continue\n  ins = bisect.bisect_left(ls,i)\n  ls.insert(ins,i)\n  for j in range(i+1,n):\n    idx = bisect.bisect_left(ls,b[j][1])\n    if space[idx-1] < k:\n      continue\n    qc -= 1\n    space[idx-1] -= 1\n    if qc == 0:\n      ansls.append(b[j][0]-x[0])\n      break\nprint(min(ansls))```\n "
    },
    {
        "user_id": "u852798899",
        "problem_id": "p03102",
        "submission1_id": "s206870174",
        "code_content": "\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for i in range(n)]\n\nans = 0\nfor i in range(n):\n  s = sum([a[i][j]*b[j] for j in range(m)])\n  if s+c > 0:\n    ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nn, m, c = map(int, input().split())\nb = list(map(int, input().split()))\na = [list(map(int, input().split())) for i in range(n)]\n\nans = 0\nfor i in range(n):\n  s = sum([a[i][j]*b[j] for j in range(m)])\n  if s+c > 0:\n    ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u227476288",
        "problem_id": "p03054",
        "submission1_id": "s137459396",
        "code_content": "\nH,W,N = map(int, input().split())\nst = [int(i) for i in input().split()]\nS = input()\nT = input()\n\n\ndef simu(dim1):\n    now = [st[0],st[1]]\n\n    if dim1 == 'U':\n        dim2,L,step,dim = 'D',H,1,0\n    if dim1 == 'D':\n        dim2,L,step,dim = 'U',H,-1,0\n    if dim1 == 'L':\n        dim2,L,step,dim = 'R',W,1,1\n    if dim1 == 'R':\n        dim2,L,step,dim = 'L',W,-1,1\n\n    for i in range(N):\n        if S[i] == dim1:\n            now[dim] -= step\n        if now[dim] < 1 or now[dim] >= L+1:\n            return True\n        if T[i] == dim2:\n            if step == 1:\n                if now[dim] < L:\n                    now[dim] += step\n            else:\n                if now[dim] > 0:\n                    now[dim] += step\n        \nD = ['U','D','L','R']\nfor d in D:\n    if simu(d):\n        print('YES')\n        exit()\nprint('NO')",
        "origin_generated_text": "\n```\nH,W,N = map(int, input().split())\nst = [int(i) for i in input().split()]\nS = input()\nT = input()\n\n\ndef simu(dim1):\n    now = [st[0],st[1]]\n\n    if dim1 == 'U':\n        dim2,L,step,dim = 'D',H,1,0\n    if dim1 == 'D':\n        dim2,L,step,dim = 'U',H,-1,0\n    if dim1 == 'L':\n        dim2,L,step,dim = 'R',W,1,1\n    if dim1 == 'R':\n        dim2,L,step,dim = 'L',W,-1,1\n\n    for i in range(N):\n        if S[i] == dim1:\n            now[dim] -= step\n        if now[dim] < 1 or now[dim] >= L+1:\n            return True\n        if T[i] == dim2:\n            if step == 1:\n                if now[dim] < L:\n                    now[dim] += step\n            else:\n                if now[dim] > 0:\n                    now[dim] += step\n        \nD = ['U','D','L','R']\nfor d in D:\n    if simu(d):\n        print('YES')\n        exit()\nprint('NO')```\n "
    },
    {
        "user_id": "u794250528",
        "problem_id": "p03546",
        "submission1_id": "s417407745",
        "code_content": "\nh, w = map(int, input().split())\nc = [list(map(int, input().split())) for _ in range(10)]\na = [list(map(int, input().split())) for _ in range(h)]\n\nfor x in range(10):\n    for y in range(10):\n        for z in range(10):\n            c[y][z] = min(c[y][z], c[y][x] + c[x][z])\n\nans = 0\nfor x in range(h):\n    for y in range(w):\n        if a[x][y] != -1:\n            ans += c[a[x][y]][1]\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nh, w = map(int, input().split())\nc = [list(map(int, input().split())) for _ in range(10)]\na = [list(map(int, input().split())) for _ in range(h)]\n\nfor x in range(10):\n    for y in range(10):\n        for z in range(10):\n            c[y][z] = min(c[y][z], c[y][x] + c[x][z])\n\nans = 0\nfor x in range(h):\n    for y in range(w):\n        if a[x][y] != -1:\n            ans += c[a[x][y]][1]\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u336564899",
        "problem_id": "p02767",
        "submission1_id": "s493557554",
        "code_content": "\nn = int(input())\nx = list(map(int, input().split()))\n \ncost = 10**9\nfor i in range(-100,200):\n    now = 0\n    for j in x:\n        now += (j-i)**2\n    if cost > now:\n        cost = now\n \nprint(cost)\n",
        "origin_generated_text": "\n```\nn = int(input())\nx = list(map(int, input().split()))\n \ncost = 10**9\nfor i in range(-100,200):\n    now = 0\n    for j in x:\n        now += (j-i)**2\n    if cost > now:\n        cost = now\n \nprint(cost)\n```\n "
    },
    {
        "user_id": "u350248178",
        "problem_id": "p03054",
        "submission1_id": "s272138459",
        "code_content": "\nh,w,n=[int(j) for j in input().split()]\nR,C=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=C\nl,r=1,w\nfor i in range(n)[::-1]:\n    if t[i]==\"R\":\n        l-=1\n    elif t[i]==\"L\":\n        r+=1\n    if s[i]==\"R\":\n        r-=1\n    elif s[i]==\"L\":\n        l+=1\n    if  l>r:\n        print(\"NO\")\n        exit()\nif not l<=x<=r:\n    print(\"NO\")\n    exit()\n\nx=R\nl,r=1,h\nfor i in range(n)[::-1]:\n    if t[i]==\"U\":\n        l-=1\n    elif t[i]==\"D\":\n        r+=1\n    if s[i]==\"U\":\n        r-=1\n    elif s[i]==\"D\":\n        l+=1\n    if l>r:\n        print(\"NO\")\n        exit()\nif not l<=x<=r:\n    print(\"NO\")\n    exit()\nprint(\"YES\")",
        "origin_generated_text": "\n```\nh,w,n=[int(j) for j in input().split()]\nR,C=[int(j) for j in input().split()]\ns=input()\nt=input()\n\n\nx=C\nl,r=1,w\nfor i in range(n)[::-1]:\n    if t[i]==\"R\":\n        l-=1\n    elif t[i]==\"L\":\n        r+=1\n    if s[i]==\"R\":\n        r-=1\n    elif s[i]==\"L\":\n        l+=1\n    if  l>r:\n        print(\"NO\")\n        exit()\nif not l<=x<=r:\n    print(\"NO\")\n    exit()\n\nx=R\nl,r=1,h\nfor i in range(n)[::-1]:\n    if t[i]==\"U\":\n        l-=1\n    elif t[i]==\"D\":\n        r+=1\n    if s[i]==\"U\":\n        r-=1\n    elif s[i]==\"D\":\n        l+=1\n    if l>r:\n        print(\"NO\")\n        exit()\nif not l<=x<=r:\n    print(\"NO\")\n    exit()\nprint(\"YES\")```\n "
    },
    {
        "user_id": "u754022296",
        "problem_id": "p03677",
        "submission1_id": "s726192420",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nL = [0]*(2*m)\nB = []\ncnt = 0\nfor i in range(n-1):\n  a, b = A[i], A[i+1]\n  a -= 1\n  b -= 1\n  if a < b:\n    cnt += b-a\n    if b-a == 1:\n      continue\n    L[a+2] += 1\n    L[b+1] += -1\n    B.append((b+1, -(b-a-1)))\n    a += m\n    b += m\n    L[a+2] += 1\n    if b < 2*m-1:\n      L[b+1] += -1\n      B.append((b+1, -(b-a-1)))\n  else:\n    b += m\n    cnt += b-a\n    if b-a == 1:\n      continue\n    L[a+2] += 1\n    L[b+1] += -1\n    B.append((b+1, -(b-a-1)))\nL = list(accumulate(L))\nfor i, b in B:\n  L[i] += b\nL = list(accumulate(L))\nans = cnt - max(L[2*m-1:])\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\nn, m = map(int, input().split())\nA = list(map(int, input().split()))\nL = [0]*(2*m)\nB = []\ncnt = 0\nfor i in range(n-1):\n  a, b = A[i], A[i+1]\n  a -= 1\n  b -= 1\n  if a < b:\n    cnt += b-a\n    if b-a == 1:\n      continue\n    L[a+2] += 1\n    L[b+1] += -1\n    B.append((b+1, -(b-a-1)))\n    a += m\n    b += m\n    L[a+2] += 1\n    if b < 2*m-1:\n      L[b+1] += -1\n      B.append((b+1, -(b-a-1)))\n  else:\n    b += m\n    cnt += b-a\n    if b-a == 1:\n      continue\n    L[a+2] += 1\n    L[b+1] += -1\n    B.append((b+1, -(b-a-1)))\nL = list(accumulate(L))\nfor i, b in B:\n  L[i] += b\nL = list(accumulate(L))\nans = cnt - max(L[2*m-1:])\nprint(ans)```\n "
    },
    {
        "user_id": "u296518383",
        "problem_id": "p03303",
        "submission1_id": "s362582410",
        "code_content": "\nS,w=input(),int(input())\nprint(*[S[i:i+w] for i in range(0,len(S),w)])",
        "origin_generated_text": "\n```\nS,w=input(),int(input())\nprint(*[S[i:i+w] for i in range(0,len(S),w)])```\n "
    },
    {
        "user_id": "u928329738",
        "problem_id": "p00023",
        "submission1_id": "s750065104",
        "code_content": "\nfor i in range(int(input())):\n    points = input().split()\n    p = list(map(float,points))\n    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 and (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n        print(2)\n    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 and (p[0]-p[3])**2 + (p[1]-p[4])**2 < p[5]**2:\n        print(-2)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2 and (p[3]-p[0])**2 + (p[4]-p[1])**2 < p[2]**2:\n        print(1)\n    else:\n        print(0)",
        "origin_generated_text": "\n```\nfor i in range(int(input())):\n    points = input().split()\n    p = list(map(float,points))\n    if (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 and (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2:\n        print(2)\n    elif (p[3]-p[0])**2 + (p[4]-p[1])**2 <= p[2]**2 and (p[0]-p[3])**2 + (p[1]-p[4])**2 < p[5]**2:\n        print(-2)\n    elif (p[0]-p[3])**2 + (p[1]-p[4])**2 <= p[5]**2 and (p[3]-p[0])**2 + (p[4]-p[1])**2 < p[2]**2:\n        print(1)\n    else:\n        print(0)```\n "
    },
    {
        "user_id": "u942697937",
        "problem_id": "p02556",
        "submission1_id": "s153656241",
        "code_content": "\nN = int(input())\n\nP = [[int(_) for _ in input().split()] for n in range(N)]\n\nX = []\nY = []\nfor x, y in P:\n    X.append(x)\n    Y.append(y)\nmx = (min(X) + max(X)) \nmy = (min(Y) + max(Y)) \n\nans = 0\nfor x, y in P:\n    x, y = x-mx, y-my\n    ans = max(ans, abs(x) + abs(y))\nprint(ans)\n",
        "origin_generated_text": "\n```\nN = int(input())\n\nP = [[int(_) for _ in input().split()] for n in range(N)]\n\nX = []\nY = []\nfor x, y in P:\n    X.append(x)\n    Y.append(y)\nmx = (min(X) + max(X)) \nmy = (min(Y) + max(Y)) \n\nans = 0\nfor x, y in P:\n    x, y = x-mx, y-my\n    ans = max(ans, abs(x) + abs(y))\nprint(ans)\n```\n "
    },
    {
        "user_id": "u788137651",
        "problem_id": "p03054",
        "submission1_id": "s486773128",
        "code_content": "\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = 1\nright = W\nup = 1\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up -= 1\n    elif S[i] == \"D\":\n        down += 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\n\nif left <= sr <= right and up <= sc <= down:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n",
        "origin_generated_text": "\n```\nH, W, N = map(int, input().split())\nsr, sc = map(int, input().split())\nS = input()\nT = input()\n\nleft = 1\nright = W\nup = 1\ndown = H\n\nfor i in reversed(range(N)):\n    if S[i] == \"U\":\n        up -= 1\n    elif S[i] == \"D\":\n        down += 1\n    elif S[i] == \"L\":\n        left += 1\n    else:\n        right -= 1\n    if left == right or up == down or left > right or up > down:\n        print(\"NO\")\n        exit()\n\nif left <= sr <= right and up <= sc <= down:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n```\n "
    },
    {
        "user_id": "u940102677",
        "problem_id": "p04019",
        "submission1_id": "s991625851",
        "code_content": "\na = list(input())\nprint(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")",
        "origin_generated_text": "\n```\na = list(input())\nprint(\"Yes\" if ~((\"N\" in a) ^ (\"S\" in a)) and ~((\"W\" in a) ^ (\"E\" in a)) else \"No\")```\n "
    },
    {
        "user_id": "u891217808",
        "problem_id": "p03326",
        "submission1_id": "s234435943",
        "code_content": "\nn, m = map(int, input().split())\nl = []\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    l.append([x, y, z])\nans = 0\nfor i in range(8):\n    a = bin(i)[2:].zfill(3)\n    xi = 1 if a[0] == '1' else - 1\n    yi = 1 if a[1] == '1' else - 1\n    zi = 1 if a[2] == '1' else - 1\n    l = sorted(l, key=lambda value: value[0] * xi + value[1] * yi + value[2] * zi, reverse=True)\n    ans = max(ans, sum(j[0]*xi+j[1]*yi+j[2]*zi for j in l[:m]))\nprint(ans)\n\n",
        "origin_generated_text": "\n```\nn, m = map(int, input().split())\nl = []\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    l.append([x, y, z])\nans = 0\nfor i in range(8):\n    a = bin(i)[2:].zfill(3)\n    xi = 1 if a[0] == '1' else - 1\n    yi = 1 if a[1] == '1' else - 1\n    zi = 1 if a[2] == '1' else - 1\n    l = sorted(l, key=lambda value: value[0] * xi + value[1] * yi + value[2] * zi, reverse=True)\n    ans = max(ans, sum(j[0]*xi+j[1]*yi+j[2]*zi for j in l[:m]))\nprint(ans)\n\n```\n "
    },
    {
        "user_id": "u546285759",
        "problem_id": "p00026",
        "submission1_id": "s347239489",
        "code_content": "\nt = [[0 for i in range(10)] for j in range(10)]\ncase1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\ncase2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\ncase3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    for c in [case1, case2, case3][:s]:\n        for _x, _y in c:\n            try:\n                t[x+_x][y+_y] += 1\n            except IndexError:\n                continue\nprint(sum(1 for l in t for v in l if not v))\nprint(max(v for l in t for v in l))",
        "origin_generated_text": "\n```\nt = [[0 for i in range(10)] for j in range(10)]\ncase1 = [(0, 0), (0, -1), (1, 0), (0, 1), (-1, 0)]\ncase2 = [(1, -1), (1, 1), (-1, 1), (-1, -1)]\ncase3 = [(0, -2), (2, 0), (0, 2), (-2, 0)]\nwhile True:\n    try:\n        x, y, s = map(int, input().split(','))\n    except:\n        break\n    for c in [case1, case2, case3][:s]:\n        for _x, _y in c:\n            try:\n                t[x+_x][y+_y] += 1\n            except IndexError:\n                continue\nprint(sum(1 for l in t for v in l if not v))\nprint(max(v for l in t for v in l))```\n "
    },
    {
        "user_id": "u510829608",
        "problem_id": "p02281",
        "submission1_id": "s157089794",
        "code_content": "\nN = int(input())\ntree = [None for _ in range(N)]\nroot = set(range(N))\n\nfor i in range(N):\n    i, l, r = map(int,input().split())\n    tree[i] = (l, r)\n    root -= {l, r}\n\nroot_node = root.pop()\n\ndef preorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    print(\" {}\".format(i), end = \"\")\n    preorder(l)\n    preorder(r)\n    \ndef inorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    inorder(l)\n    print(\" {}\".format(i), end = \"\")\n    inorder(r)\n    \ndef postorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    postorder(l)\n    postorder(r)\n    print(\" {}\".format(i), end = \"\")\n    \nprint('Preorder')\npreorder(root_node)\nprint()\n\nprint('Inorder')\ninorder(root_node)\nprint()\n\nprint('Postorder')\npostorder(root_node)\nprint()",
        "origin_generated_text": "\n```\nN = int(input())\ntree = [None for _ in range(N)]\nroot = set(range(N))\n\nfor i in range(N):\n    i, l, r = map(int,input().split())\n    tree[i] = (l, r)\n    root -= {l, r}\n\nroot_node = root.pop()\n\ndef preorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    print(\" {}\".format(i), end = \"\")\n    preorder(l)\n    preorder(r)\n    \ndef inorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    inorder(l)\n    print(\" {}\".format(i), end = \"\")\n    inorder(r)\n    \ndef postorder(i):\n    if i == -1:\n        return\n    (l, r) = tree[i]\n    postorder(l)\n    postorder(r)\n    print(\" {}\".format(i), end = \"\")\n    \nprint('Preorder')\npreorder(root_node)\nprint()\n\nprint('Inorder')\ninorder(root_node)\nprint()\n\nprint('Postorder')\npostorder(root_node)\nprint()```\n "
    },
    {
        "user_id": "u368249389",
        "problem_id": "p02854",
        "submission1_id": "s265682501",
        "code_content": "\n\n\n\nN = int(input())\na_list = list(map(int, input().split()))\n\n\nmin_cost = 10**18\nleft_sum = 0\nright_sum = sum(a_list)\n\n\nfor i in range(N-1):\n    left_sum += a_list[i]\n    right_sum -= a_list[i]\n    distance = abs(left_sum - right_sum)\n    min_cost = min(min_cost, distance)\n\n\nprint(min_cost)\n",
        "origin_generated_text": "\n```\n\n\n\nN = int(input())\na_list = list(map(int, input().split()))\n\n\nmin_cost = 10**18\nleft_sum = 0\nright_sum = sum(a_list)\n\n\nfor i in range(N-1):\n    left_sum += a_list[i]\n    right_sum -= a_list[i]\n    distance = abs(left_sum - right_sum)\n    min_cost = min(min_cost, distance)\n\n\nprint(min_cost)\n```\n "
    },
    {
        "user_id": "u672475305",
        "problem_id": "p03479",
        "submission1_id": "s919195604",
        "code_content": "\nx,y = map(int,input().split())\ncnt = 1\nwhile x * cnt < y:\n    x *= 2\n    cnt += 1\nprint(cnt)",
        "origin_generated_text": "\n```\nx,y = map(int,input().split())\ncnt = 1\nwhile x * cnt < y:\n    x *= 2\n    cnt += 1\nprint(cnt)```\n "
    },
    {
        "user_id": "u965259973",
        "problem_id": "p03970",
        "submission1_id": "s754060723",
        "code_content": "\ndef string_trnase(s):\n    answer = 'CODEFESTIVAL2016'\n    iters = 0\n    s = list(s)\n    for i in range(0, 16):\n        if s[i] != answer[i]:\n            iters += 1\n    print(iters)\n\n\nstring_trnase(input())",
        "origin_generated_text": "\n```\ndef string_trnase(s):\n    answer = 'CODEFESTIVAL2016'\n    iters = 0\n    s = list(s)\n    for i in range(0, 16):\n        if s[i] != answer[i]:\n            iters += 1\n    print(iters)\n\n\nstring_trnase(input())```\n "
    },
    {
        "user_id": "u068142202",
        "problem_id": "p02880",
        "submission1_id": "s877429230",
        "code_content": "\nn = int(input())\nans = 0\nfor i in range(1, 10):\n  for j in range(1, 10):\n    if i * j == n:\n      ans += 1\nif ans == 0:\n  print(\"No\")\nelse:\n  print(\"Yes\")",
        "origin_generated_text": "\n```\nn = int(input())\nans = 0\nfor i in range(1, 10):\n  for j in range(1, 10):\n    if i * j == n:\n      ans += 1\nif ans == 0:\n  print(\"No\")\nelse:\n  print(\"Yes\")```\n "
    },
    {
        "user_id": "u724687935",
        "problem_id": "p03416",
        "submission1_id": "s994522382",
        "code_content": "\nA, B = map(int, input().split())\n\ncnt = 0\nfor n in range(A, B + 1):\n    s = str(n)\n    if s[:len(s)\n        cnt += 1\n\nprint(cnt)\n",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\n\ncnt = 0\nfor n in range(A, B + 1):\n    s = str(n)\n    if s[:len(s)\n        cnt += 1\n\nprint(cnt)\n```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03959",
        "submission1_id": "s090909025",
        "code_content": "\nN = int(input())\nT = list(map(int,input().split()))\nA = list(map(int,input().split()))\nans = 1; MOD = pow(10,9)+7\nif N == 1:\n  if A[0] == T[0]:\n    print(1)\n  else:\n    print(0)\n  exit()\nfor i in range(N):\n  if i == 0: \n    if A[i] == A[i+1]: \n      fac = T[0]\n    else: \n      if A[i] > T[0]: \n        fac = 0\n      else:\n        fac = 1\n  elif i < N-1: \n    if T[i] == T[i-1]: \n      if A[i] == A[i+1]: \n        fac = min(T[i],A[i])\n      else: \n        if A[i] > T[i]: \n          fac = 0\n        else:\n          fac = 1\n    else: \n      if A[i] == A[i+1]: \n        if T[i] > A[i]: \n          fac = 0\n        else:\n          fac = 1\n      else: \n        if T[i] == A[i]:\n          fac = 1\n        else:\n          fac = 0\n  else: \n    if T[i] == T[i-1]: \n      if A[i] > T[i]: \n        fac = 0\n      else:\n        fac = 1\n    else: \n      if T[i] == A[i]:\n        fac = 1\n      else:\n        fac = 0\n  ans = (ans*fac)%MOD\nprint(ans%MOD)\n      \n      \n    ",
        "origin_generated_text": "\n```\nN = int(input())\nT = list(map(int,input().split()))\nA = list(map(int,input().split()))\nans = 1; MOD = pow(10,9)+7\nif N == 1:\n  if A[0] == T[0]:\n    print(1)\n  else:\n    print(0)\n  exit()\nfor i in range(N):\n  if i == 0: \n    if A[i] == A[i+1]: \n      fac = T[0]\n    else: \n      if A[i] > T[0]: \n        fac = 0\n      else:\n        fac = 1\n  elif i < N-1: \n    if T[i] == T[i-1]: \n      if A[i] == A[i+1]: \n        fac = min(T[i],A[i])\n      else: \n        if A[i] > T[i]: \n          fac = 0\n        else:\n          fac = 1\n    else: \n      if A[i] == A[i+1]: \n        if T[i] > A[i]: \n          fac = 0\n        else:\n          fac = 1\n      else: \n        if T[i] == A[i]:\n          fac = 1\n        else:\n          fac = 0\n  else: \n    if T[i] == T[i-1]: \n      if A[i] > T[i]: \n        fac = 0\n      else:\n        fac = 1\n    else: \n      if T[i] == A[i]:\n        fac = 1\n      else:\n        fac = 0\n  ans = (ans*fac)%MOD\nprint(ans%MOD)\n      \n      \n    ```\n "
    },
    {
        "user_id": "u652656291",
        "problem_id": "p03970",
        "submission1_id": "s484607389",
        "code_content": "\nS = input()\nT = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nS = input()\nT = 'CODEFESTIVAL2016'\nans = 0\nfor i in range(len(S)):\n  if S[i] != T[i]:\n    ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u662418022",
        "problem_id": "p02327",
        "submission1_id": "s365957025",
        "code_content": "\n\n\nfrom itertools import chain\n\nif __name__ == '__main__':\n\n    H, W = map(int, input().split())\n    C = []\n    hist = []\n    for i in range(H):\n        l = input().split()\n        C.append([int(x) for x in l])\n        hist.append([(int(x) + 1) % 2 for x in l])\n\n    for i in range(1, H):\n        for j in range(W):\n            if C[i][j] == 0:\n                hist[i][j] = hist[i - 1][j] + 1\n\n    S = []\n    max_area = 0\n    for i in range(H):\n        for j in range(W):\n            rect = [j, hist[i][j]]\n            if not S:\n                S.append(rect)\n            elif S[-1][1] < rect[1]:\n                S.append(rect)\n            elif S[-1][1] > rect[1]:\n                while S and S[-1][1] > rect[1]:\n                    post_rect = S.pop()\n                    area = post_rect[1] * (j - post_rect[0])\n                    max_area = max(max_area, area)\n                S.append([post_rect[0], rect[1]])\n\n    while S:\n        post_rect = S.pop()\n        area = post_rect[1] * (W - post_rect[0])\n        max_area = max(max_area, area)\n\n    print(max_area)\n\n\n\n",
        "origin_generated_text": "\n```\n\n\nfrom itertools import chain\n\nif __name__ == '__main__':\n\n    H, W = map(int, input().split())\n    C = []\n    hist = []\n    for i in range(H):\n        l = input().split()\n        C.append([int(x) for x in l])\n        hist.append([(int(x) + 1) % 2 for x in l])\n\n    for i in range(1, H):\n        for j in range(W):\n            if C[i][j] == 0:\n                hist[i][j] = hist[i - 1][j] + 1\n\n    S = []\n    max_area = 0\n    for i in range(H):\n        for j in range(W):\n            rect = [j, hist[i][j]]\n            if not S:\n                S.append(rect)\n            elif S[-1][1] < rect[1]:\n                S.append(rect)\n            elif S[-1][1] > rect[1]:\n                while S and S[-1][1] > rect[1]:\n                    post_rect = S.pop()\n                    area = post_rect[1] * (j - post_rect[0])\n                    max_area = max(max_area, area)\n                S.append([post_rect[0], rect[1]])\n\n    while S:\n        post_rect = S.pop()\n        area = post_rect[1] * (W - post_rect[0])\n        max_area = max(max_area, area)\n\n    print(max_area)\n\n\n\n```\n "
    },
    {
        "user_id": "u222859507",
        "problem_id": "p02959",
        "submission1_id": "s028812771",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nb.append(0)\n\nsum = 0\nrest_hero = 0\n\nfor i in range(n+1):\n    hero = b[i] + rest_hero\n    if a[i] >= hero:\n        sum += hero\n        rest_hero = 0\n    elif a[i] > rest_hero:\n        sum += rest_hero\n        rest_hero = a[i] - rest_hero\n        sum += rest_hero\n        rest_hero = 0\n    else:\n        sum += a[i]\n\nprint(sum)\n",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nb.append(0)\n\nsum = 0\nrest_hero = 0\n\nfor i in range(n+1):\n    hero = b[i] + rest_hero\n    if a[i] >= hero:\n        sum += hero\n        rest_hero = 0\n    elif a[i] > rest_hero:\n        sum += rest_hero\n        rest_hero = a[i] - rest_hero\n        sum += rest_hero\n        rest_hero = 0\n    else:\n        sum += a[i]\n\nprint(sum)\n```\n "
    },
    {
        "user_id": "u054106284",
        "problem_id": "p03972",
        "submission1_id": "s308413734",
        "code_content": "\nW, H = (int(i) for i in input().split())\nL = []\nfor i in range(W):\n  L.append((int(input()), 0))\nfor i in range(H):\n  L.append((int(input()), 1))\na = W\nb = H\nans = 0\nL.sort()\nfor i in range(H + W):\n  if L[i][1] == 0:\n    ans += (b+1) * L[i][0]\n    a -= 1\n  else:\n    ans += (a+1) * L[i][0]\n    b -= 1\nprint(ans)",
        "origin_generated_text": "\n```\nW, H = (int(i) for i in input().split())\nL = []\nfor i in range(W):\n  L.append((int(input()), 0))\nfor i in range(H):\n  L.append((int(input()), 1))\na = W\nb = H\nans = 0\nL.sort()\nfor i in range(H + W):\n  if L[i][1] == 0:\n    ans += (b+1) * L[i][0]\n    a -= 1\n  else:\n    ans += (a+1) * L[i][0]\n    b -= 1\nprint(ans)```\n "
    },
    {
        "user_id": "u432042540",
        "problem_id": "p03568",
        "submission1_id": "s875668735",
        "code_content": "\nn = int(input())\na = [int(i) for i in input().split()]\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        cnt += 1\n\nx = 3 ** n - 2 ** cnt\n\nprint(x)",
        "origin_generated_text": "\n```\nn = int(input())\na = [int(i) for i in input().split()]\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        cnt += 1\n\nx = 3 ** n - 2 ** cnt\n\nprint(x)```\n "
    },
    {
        "user_id": "u556589653",
        "problem_id": "p03296",
        "submission1_id": "s223409442",
        "code_content": "\nN = int(input())\nA = list(map(int,input().split()))+[0]\nans = 0\nfor i in range(N-1):\n    if A[i] == A[i+1]:\n        A[i+1] += 1\n        ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nA = list(map(int,input().split()))+[0]\nans = 0\nfor i in range(N-1):\n    if A[i] == A[i+1]:\n        A[i+1] += 1\n        ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u921826483",
        "problem_id": "p03729",
        "submission1_id": "s275127230",
        "code_content": "\na,b,c = input().split()\n\nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")",
        "origin_generated_text": "\n```\na,b,c = input().split()\n\nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")```\n "
    },
    {
        "user_id": "u856819253",
        "problem_id": "p02640",
        "submission1_id": "s861904966",
        "code_content": "\nimport sys\n\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI():return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LS():return list(sys.stdin.readline().rstrip().split())\n\ndef main():\n  X,Y = LI()[:]\n  \n\n  if ((Y-2*X) % 2) == 0:\n    a = (Y-2*X) / 2\n    if a<=X and a>=0:\n      print('Yes')\n      exit()\n  \n  print('No')\n\nif __name__ == '__main__':\n\tmain()\n",
        "origin_generated_text": "\n```\nimport sys\n\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI():return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LS():return list(sys.stdin.readline().rstrip().split())\n\ndef main():\n  X,Y = LI()[:]\n  \n\n  if ((Y-2*X) % 2) == 0:\n    a = (Y-2*X) / 2\n    if a<=X and a>=0:\n      print('Yes')\n      exit()\n  \n  print('No')\n\nif __name__ == '__main__':\n\tmain()\n```\n "
    },
    {
        "user_id": "u337525741",
        "problem_id": "p02950",
        "submission1_id": "s684731892",
        "code_content": "\np = int(input())\na_list = list(map(int,input().split()))\nb_list = [0 for _ in range(p)]\nfor i in range(p):\n    if a_list[i] == 1:\n        for j in range(p-1):\n            b_list[j+1] -= (pow(i+1,p-j-1,p))%p\nfor j in b_list:\n    print(j % p,end = ' ')\n",
        "origin_generated_text": "\n```\np = int(input())\na_list = list(map(int,input().split()))\nb_list = [0 for _ in range(p)]\nfor i in range(p):\n    if a_list[i] == 1:\n        for j in range(p-1):\n            b_list[j+1] -= (pow(i+1,p-j-1,p))%p\nfor j in b_list:\n    print(j % p,end = ' ')\n```\n "
    },
    {
        "user_id": "u960080897",
        "problem_id": "p03970",
        "submission1_id": "s893784344",
        "code_content": "\ns = input()\nt = \"CODEFESTIVAL2016\"\ncnt = 0\nfor i, z in zip(s, t):\n    if s[i] != z:\n        cnt += 1\n        \nprint(cnt)",
        "origin_generated_text": "\n```\ns = input()\nt = \"CODEFESTIVAL2016\"\ncnt = 0\nfor i, z in zip(s, t):\n    if s[i] != z:\n        cnt += 1\n        \nprint(cnt)```\n "
    },
    {
        "user_id": "u860002137",
        "problem_id": "p03573",
        "submission1_id": "s093598074",
        "code_content": "\na, b, c = map(int, input().split())\nprint(c if a==b else b if a==c else a)",
        "origin_generated_text": "\n```\na, b, c = map(int, input().split())\nprint(c if a==b else b if a==c else a)```\n "
    },
    {
        "user_id": "u090032260",
        "problem_id": "p02880",
        "submission1_id": "s103344356",
        "code_content": "\nN=int(input())\nfor a in range(1,10):\n    for b in range(1,10):\n        if N==a*b:\n            print(\"Yes\")\n            exit()\nprint(\"No\")",
        "origin_generated_text": "\n```\nN=int(input())\nfor a in range(1,10):\n    for b in range(1,10):\n        if N==a*b:\n            print(\"Yes\")\n            exit()\nprint(\"No\")```\n "
    },
    {
        "user_id": "u008323723",
        "problem_id": "p02633",
        "submission1_id": "s651616773",
        "code_content": "\nX= int(input())\n\nif 360 % X != 0:\n  print(360)\nelse:\n  print(int(360/X)+1)",
        "origin_generated_text": "\n```\nX= int(input())\n\nif 360 % X != 0:\n  print(360)\nelse:\n  print(int(360/X)+1)```\n "
    },
    {
        "user_id": "u763210820",
        "problem_id": "p02730",
        "submission1_id": "s539272819",
        "code_content": "\nn = list(input())\nmae = []\nusiro = []\nfor i in range(int((len(n)-1)/2)):\n    mae.append(n[i])\n    usiro.append(n[len(n)-1-i])\n\nif mae == usiro:\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\nn = list(input())\nmae = []\nusiro = []\nfor i in range(int((len(n)-1)/2)):\n    mae.append(n[i])\n    usiro.append(n[len(n)-1-i])\n\nif mae == usiro:\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u459419927",
        "problem_id": "p03752",
        "submission1_id": "s722051057",
        "code_content": "\nN,K=map(int,input().split())\na=list(map(int,input().split()))\nans=10**10\nfor i in range(2**N):\n    cost=0\n    for j in range(N):\n        if i>>j&1:\n            count=0\n            for k in range(j+1,N):\n                if a[k]>=a[j]:\n                    cost+=a[k]-a[j]+1\n                    a[j]+=a[k]-a[j]+1\n            for x in range(1,K):\n                if a[0]<a[x]:\n                    count+=1\n            if ans>cost and count==K-1:\n                ans=cost\nprint(ans)",
        "origin_generated_text": "\n```\nN,K=map(int,input().split())\na=list(map(int,input().split()))\nans=10**10\nfor i in range(2**N):\n    cost=0\n    for j in range(N):\n        if i>>j&1:\n            count=0\n            for k in range(j+1,N):\n                if a[k]>=a[j]:\n                    cost+=a[k]-a[j]+1\n                    a[j]+=a[k]-a[j]+1\n            for x in range(1,K):\n                if a[0]<a[x]:\n                    count+=1\n            if ans>cost and count==K-1:\n                ans=cost\nprint(ans)```\n "
    },
    {
        "user_id": "u741579801",
        "problem_id": "p02699",
        "submission1_id": "s459784822",
        "code_content": "\nS, W = map(int, input().split())\n\nif W >= S:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")",
        "origin_generated_text": "\n```\nS, W = map(int, input().split())\n\nif W >= S:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")```\n "
    },
    {
        "user_id": "u464627439",
        "problem_id": "p02954",
        "submission1_id": "s948760841",
        "code_content": "\ns = list(input())\n\nN = len(s)\n\nRL = []\nLR = [-1]\nfor i in range(N-1):\n    if s[i] == 'R' and s[i+1] == 'L':\n        RL.append(i)\n    if s[i] == 'L' and s[i+1] == 'R':\n        LR.append(i)\n\nLR.append(N-1)\n\n_num = []\nfor i in range(len(LR)-1):\n    _num.append(LR[i+1] - LR[i])\n\n\nans = [0]*N\n\nfor i in range(len(_num)):\n    if int(_num[i]/2) == _num[i]/2:\n        ans[RL[i]] = int(_num[i]/2)\n        ans[RL[i]+1] = int(_num[i]/2)\n    else:\n        if RL[i] - LR[i] > LR[i+1] - RL[i]:\n            if int(RL[i] - LR[i]) == RL[i] - LR[i]:\n                ans[RL[i]] = int(_num[i]/2) + 1\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n            else:\n                ans[RL[i]] = int(_num[i]/2)\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n        else:\n            if int(LR[i+1] - RL[i]) == LR[i+1] - RL[i]:\n                ans[RL[i]] = int(_num[i]/2) + 1\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n            else:\n                ans[RL[i]] = int(_num[i]/2)\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n\nprint(*ans)",
        "origin_generated_text": "\n```\ns = list(input())\n\nN = len(s)\n\nRL = []\nLR = [-1]\nfor i in range(N-1):\n    if s[i] == 'R' and s[i+1] == 'L':\n        RL.append(i)\n    if s[i] == 'L' and s[i+1] == 'R':\n        LR.append(i)\n\nLR.append(N-1)\n\n_num = []\nfor i in range(len(LR)-1):\n    _num.append(LR[i+1] - LR[i])\n\n\nans = [0]*N\n\nfor i in range(len(_num)):\n    if int(_num[i]/2) == _num[i]/2:\n        ans[RL[i]] = int(_num[i]/2)\n        ans[RL[i]+1] = int(_num[i]/2)\n    else:\n        if RL[i] - LR[i] > LR[i+1] - RL[i]:\n            if int(RL[i] - LR[i]) == RL[i] - LR[i]:\n                ans[RL[i]] = int(_num[i]/2) + 1\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n            else:\n                ans[RL[i]] = int(_num[i]/2)\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n        else:\n            if int(LR[i+1] - RL[i]) == LR[i+1] - RL[i]:\n                ans[RL[i]] = int(_num[i]/2) + 1\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n            else:\n                ans[RL[i]] = int(_num[i]/2)\n                ans[RL[i]+1] = int(_num[i]/2) + 1\n\nprint(*ans)```\n "
    },
    {
        "user_id": "u510630535",
        "problem_id": "p02922",
        "submission1_id": "s885212911",
        "code_content": "\ndef resolve():\n    a, b = map(int, input().split())\n    ret = 0\n    if b > 1:\n        n, m = divmod(b - 1, a)\n        ret = n + 1\n    print(ret)\n\n\nif __name__ == '__main__':\n    resolve()",
        "origin_generated_text": "\n```\ndef resolve():\n    a, b = map(int, input().split())\n    ret = 0\n    if b > 1:\n        n, m = divmod(b - 1, a)\n        ret = n + 1\n    print(ret)\n\n\nif __name__ == '__main__':\n    resolve()```\n "
    },
    {
        "user_id": "u319984556",
        "problem_id": "p03563",
        "submission1_id": "s837149104",
        "code_content": "\nprint(-(int(input())-int(input()))/2)",
        "origin_generated_text": "\n```\nprint(-(int(input())-int(input()))/2)```\n "
    },
    {
        "user_id": "u609881501",
        "problem_id": "p00006",
        "submission1_id": "s211364098",
        "code_content": "\nimport sys\nprint(sys.stdin.readline()[::-1])",
        "origin_generated_text": "\n```\nimport sys\nprint(sys.stdin.readline()[::-1])```\n "
    },
    {
        "user_id": "u046432236",
        "problem_id": "p03039",
        "submission1_id": "s501011609",
        "code_content": "\ndef cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n \n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n \n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n \n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n \n    return result\n \nlist=input().split(\" \")\nn=int(list[0])\nm=int(list[1])\nk=int(list[2])\n \nniko1=int(m*m*(n*(n+1)*(2*n+1)/6 - (n+1)*n*(n+1)/2 + n*n*(n+1)/2))\nniko2=int(n*n*(m*(m+1)*(2*m+1)/6 - (m+1)*m*(m+1)/2 + m*m*(m+1)/2))\nniko1=niko1%(10**9+7)\nniko2=niko2%(10**9+7)\nniko=niko1+niko2\nkosu=cmb(m*n-2, k-2)\nkosu=kosu%(10**9+7)\nkotae=int(niko*kosu)\nkotae=kotae%(10**9+7)\nprint(kotae)",
        "origin_generated_text": "\n```\ndef cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n \n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n \n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n \n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n \n    return result\n \nlist=input().split(\" \")\nn=int(list[0])\nm=int(list[1])\nk=int(list[2])\n \nniko1=int(m*m*(n*(n+1)*(2*n+1)/6 - (n+1)*n*(n+1)/2 + n*n*(n+1)/2))\nniko2=int(n*n*(m*(m+1)*(2*m+1)/6 - (m+1)*m*(m+1)/2 + m*m*(m+1)/2))\nniko1=niko1%(10**9+7)\nniko2=niko2%(10**9+7)\nniko=niko1+niko2\nkosu=cmb(m*n-2, k-2)\nkosu=kosu%(10**9+7)\nkotae=int(niko*kosu)\nkotae=kotae%(10**9+7)\nprint(kotae)```\n "
    },
    {
        "user_id": "u214617707",
        "problem_id": "p04017",
        "submission1_id": "s380789604",
        "code_content": "\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y:\n            Y -= X[P[j][a]]\n            num += 2 ** j\n    print(num)",
        "origin_generated_text": "\n```\nfrom bisect import bisect_right\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\n\nP = [[0] * N for i in range(30)]\nfor i in range(N):\n    q = bisect_right(X, X[i] + L)\n    P[0][i] = q - 1\n\nfor i in range(1, 30):\n    for j in range(N):\n        P[i][j] = P[i - 1][P[i - 1][j]]\n\n\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    Y = X[P[29][a]]\n    num = 0\n    for j in range(29, -1, -1):\n        if X[P[j][a]] <= Y:\n            Y -= X[P[j][a]]\n            num += 2 ** j\n    print(num)```\n "
    },
    {
        "user_id": "u540290227",
        "problem_id": "p03729",
        "submission1_id": "s110032169",
        "code_content": "\na, b, c = input().split()\n \nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')",
        "origin_generated_text": "\n```\na, b, c = input().split()\n \nif a[-1] == b[0]:\n    if b[-1] == c[0]:\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')```\n "
    },
    {
        "user_id": "u440975163",
        "problem_id": "p02642",
        "submission1_id": "s778394561",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [a[0]]\nfor i in range(1, n):\n    if a[i] != b[-1]:\n        b.append(a[i])\nprint(len(b) - 1)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [a[0]]\nfor i in range(1, n):\n    if a[i] != b[-1]:\n        b.append(a[i])\nprint(len(b) - 1)```\n "
    },
    {
        "user_id": "u423585790",
        "problem_id": "p02912",
        "submission1_id": "s450837385",
        "code_content": "\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    d = {\"Sunny\":1 , \"Cloudy\":2, \"Rainy\":0}\n    a = [\"Sunny\", \"Cloudy\", \"Rainy\"]\n    print(a[d[input().rstrip()]])\n    return\n\n\ndef B():\n    s = S()\n    for i, si in enumerate(s):\n        if i % 2:\n            if si == \"R\":\n                print(\"No\")\n                return\n        else:\n            if si == \"L\":\n                print(\"No\")\n                return\n    print(\"Yes\")\n    return\n\n\ndef C():\n    n, k, q = LI()\n    d = [0] * n\n    for _ in range(q):\n        a = II() - 1\n        d[a] += 1\n    for a in d:\n        if k - (q - a) > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    return\n\n\ndef D():\n    n,m = LI()\n    a = LI()\n    q = []\n    for ai in a:\n        heappush(q, ai)\n    for _ in range(m):\n        heappush(q, heappop(q) / 2)\n    ans = 0\n    while q:\n        ans += int(heappop(q) * 2)\n    print(ans)\n    return\n\n\ndef E():\n    return\n\n\ndef F():\n    return\n\n\nif __name__ == '__main__':\n    D()\n",
        "origin_generated_text": "\n```\n\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    d = {\"Sunny\":1 , \"Cloudy\":2, \"Rainy\":0}\n    a = [\"Sunny\", \"Cloudy\", \"Rainy\"]\n    print(a[d[input().rstrip()]])\n    return\n\n\ndef B():\n    s = S()\n    for i, si in enumerate(s):\n        if i % 2:\n            if si == \"R\":\n                print(\"No\")\n                return\n        else:\n            if si == \"L\":\n                print(\"No\")\n                return\n    print(\"Yes\")\n    return\n\n\ndef C():\n    n, k, q = LI()\n    d = [0] * n\n    for _ in range(q):\n        a = II() - 1\n        d[a] += 1\n    for a in d:\n        if k - (q - a) > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    return\n\n\ndef D():\n    n,m = LI()\n    a = LI()\n    q = []\n    for ai in a:\n        heappush(q, ai)\n    for _ in range(m):\n        heappush(q, heappop(q) / 2)\n    ans = 0\n    while q:\n        ans += int(heappop(q) * 2)\n    print(ans)\n    return\n\n\ndef E():\n    return\n\n\ndef F():\n    return\n\n\nif __name__ == '__main__':\n    D()\n```\n "
    },
    {
        "user_id": "u629350026",
        "problem_id": "p03106",
        "submission1_id": "s038185946",
        "code_content": "\na,b,k=map(int,input().split())\ntemp=[]\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    temp.append(i)\nprint(temp[k-1] if k<len(temp) else temp[-1])\n  ",
        "origin_generated_text": "\n```\na,b,k=map(int,input().split())\ntemp=[]\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    temp.append(i)\nprint(temp[k-1] if k<len(temp) else temp[-1])\n  ```\n "
    },
    {
        "user_id": "u366886346",
        "problem_id": "p03573",
        "submission1_id": "s834604725",
        "code_content": "\na=list(map(int,input().split()))\nprint(a[a.count(a[0])!=2])\n",
        "origin_generated_text": "\n```\na=list(map(int,input().split()))\nprint(a[a.count(a[0])!=2])\n```\n "
    },
    {
        "user_id": "u898097781",
        "problem_id": "p00026",
        "submission1_id": "s131154299",
        "code_content": "\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\nfor line in lines:\n    x, y, z = map(int, line)\n    drop(x, y, z)\n\nprint(sum(sum(field[i] for i in range(10)) for field in field))\nprint(max(max(field[i] for i in range(10)) for field in field))\n\n",
        "origin_generated_text": "\n```\nimport sys\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip().split(','))\n\nfield = [[0 for i in range(10)] for j in range(10)]\n\ndef drop(x, y, z):\n    if z==1:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    elif z==2:\n        for i in range(-1,2):\n            for j in range(-1,2):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n    else:\n        for i in range(-2,3):\n            for j in range(-2,3):\n                if 0<=y+j<=10 and 0<=x+i<=10:\n                    field[y+j][x+i] += 1\n\nfor line in lines:\n    x, y, z = map(int, line)\n    drop(x, y, z)\n\nprint(sum(sum(field[i] for i in range(10)) for field in field))\nprint(max(max(field[i] for i in range(10)) for field in field))\n\n```\n "
    },
    {
        "user_id": "u910536093",
        "problem_id": "p02718",
        "submission1_id": "s754139148",
        "code_content": "\ni1 = input()\ni1 = i1.split()\ntypes = int(i1[0])\nselect = int(i1[1])\n\ni2 = input()\ni2 = [int(n) for n in i2.split()]\ni2.sort(reverse=True)\n\nsummary = sum(i2)\nthreshold = int(summary / (types * 4))\n\nif i2[select-1] < threshold :\n    print(\"No\")\nelse:\n    print(\"Yes\")\n",
        "origin_generated_text": "\n```\ni1 = input()\ni1 = i1.split()\ntypes = int(i1[0])\nselect = int(i1[1])\n\ni2 = input()\ni2 = [int(n) for n in i2.split()]\ni2.sort(reverse=True)\n\nsummary = sum(i2)\nthreshold = int(summary / (types * 4))\n\nif i2[select-1] < threshold :\n    print(\"No\")\nelse:\n    print(\"Yes\")\n```\n "
    },
    {
        "user_id": "u899909022",
        "problem_id": "p02954",
        "submission1_id": "s296521830",
        "code_content": "\nS=input()\nans = [0] * len(S)\nlast_R=[0] * len(S)\ntmp = 0\nfor i in range(len(S)):\n    if S[i] == \"R\":\n        tmp = i\n    last_R[i] = tmp\nfirst_L=[0] * len(S)\ntmp = 0\nfor i in reversed(range(len(S))):\n    if S[i] == \"L\":\n        tmp = i\n    first_L[i] = tmp\nfor i in range(len(S)):\n    if S[i] == \"L\":\n        R_index = last_R[i]\n        if i - R_index % 2 == 0:\n            ans[R_index+1] += 1\n        else:\n            ans[R_index] += 1\n    if S[i] == \"R\":\n        L_index = first_L[i]\n        if L_index - i %2 == 0:\n            ans[L_index-1] += 1\n        else:\n            ans[L_index] += 1\nans = map(str, ans)\nprint(\" \".join(ans))",
        "origin_generated_text": "\n```\nS=input()\nans = [0] * len(S)\nlast_R=[0] * len(S)\ntmp = 0\nfor i in range(len(S)):\n    if S[i] == \"R\":\n        tmp = i\n    last_R[i] = tmp\nfirst_L=[0] * len(S)\ntmp = 0\nfor i in reversed(range(len(S))):\n    if S[i] == \"L\":\n        tmp = i\n    first_L[i] = tmp\nfor i in range(len(S)):\n    if S[i] == \"L\":\n        R_index = last_R[i]\n        if i - R_index % 2 == 0:\n            ans[R_index+1] += 1\n        else:\n            ans[R_index] += 1\n    if S[i] == \"R\":\n        L_index = first_L[i]\n        if L_index - i %2 == 0:\n            ans[L_index-1] += 1\n        else:\n            ans[L_index] += 1\nans = map(str, ans)\nprint(\" \".join(ans))```\n "
    },
    {
        "user_id": "u638795007",
        "problem_id": "p03480",
        "submission1_id": "s069522556",
        "code_content": "\nimport heapq\nimport sys\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod = 10**9 + 7\ninf = float('inf')\n\nS = str(input())\nN = len(S)\nans = int(0)\n\nk = N\n\nfor i in range(N-1):\n    if S[i]!=S[i+1]:\n        k = max(i+1,N-1-i)\nans = k\nprint(ans)",
        "origin_generated_text": "\n```\nimport heapq\nimport sys\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\nmod = 10**9 + 7\ninf = float('inf')\n\nS = str(input())\nN = len(S)\nans = int(0)\n\nk = N\n\nfor i in range(N-1):\n    if S[i]!=S[i+1]:\n        k = max(i+1,N-1-i)\nans = k\nprint(ans)```\n "
    },
    {
        "user_id": "u333139319",
        "problem_id": "p02887",
        "submission1_id": "s322858074",
        "code_content": "\nn = int(input())\ns = input()\na = 1\nfor i in range(n-1):\n  if s[i] != s[i+1]:\n    a += 1\nprint(a)",
        "origin_generated_text": "\n```\nn = int(input())\ns = input()\na = 1\nfor i in range(n-1):\n  if s[i] != s[i+1]:\n    a += 1\nprint(a)```\n "
    },
    {
        "user_id": "u347184682",
        "problem_id": "p02880",
        "submission1_id": "s414640198",
        "code_content": "\nimport sys\nn=int(input())\nfor i in range(1,10):\n    for j in range(1,10):\n        if n==i*j:\n            print(\"Yes\")\n            sys.exit()\nprint(\"No\")",
        "origin_generated_text": "\n```\nimport sys\nn=int(input())\nfor i in range(1,10):\n    for j in range(1,10):\n        if n==i*j:\n            print(\"Yes\")\n            sys.exit()\nprint(\"No\")```\n "
    },
    {
        "user_id": "u618107373",
        "problem_id": "p02886",
        "submission1_id": "s749880404",
        "code_content": "\nn=int(input())\nk=list(map(int,input().split()))\nans=0\nfor i in range(n):\n  for j in range(n):\n    if i==j:\n      continue\n    ans+=k[i]*k[j]\nprint(ans)",
        "origin_generated_text": "\n```\nn=int(input())\nk=list(map(int,input().split()))\nans=0\nfor i in range(n):\n  for j in range(n):\n    if i==j:\n      continue\n    ans+=k[i]*k[j]\nprint(ans)```\n "
    },
    {
        "user_id": "u953379577",
        "problem_id": "p03796",
        "submission1_id": "s331139499",
        "code_content": "\nn = int(input())\n\nans = 1\n\nfor i in range(n):\n    ans *= i+1\n    ans = ans%1000000007\n\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\n\nans = 1\n\nfor i in range(n):\n    ans *= i+1\n    ans = ans%1000000007\n\nprint(ans)```\n "
    },
    {
        "user_id": "u117193815",
        "problem_id": "p03573",
        "submission1_id": "s232051202",
        "code_content": "\na,b,c=map(int, input().split())\nif a==b:\n  print(c)\nelif b==c:\n  print(a)\nelse:\n  print(b)",
        "origin_generated_text": "\n```\na,b,c=map(int, input().split())\nif a==b:\n  print(c)\nelif b==c:\n  print(a)\nelse:\n  print(b)```\n "
    },
    {
        "user_id": "u197457087",
        "problem_id": "p03103",
        "submission1_id": "s608232405",
        "code_content": "\nN, M = map(int,input().split())\n\nA = []\nfor i in range(N):\n  a,b = map(int,input().split())\n  A.append([a,b])\n\nA.sort()\n\nnokori = M\nyen = 0\nmise = 0\nwhile nokori > 0:\n  if A[mise][1] >= nokori: \n    yen += A[mise][0]*nokori\n    break\n  else:\n    yen += A[mise][0]*A[mise][1]\n    nokori -= A[mise][1]\n    mise += 1\nprint(yen)\n  ",
        "origin_generated_text": "\n```\nN, M = map(int,input().split())\n\nA = []\nfor i in range(N):\n  a,b = map(int,input().split())\n  A.append([a,b])\n\nA.sort()\n\nnokori = M\nyen = 0\nmise = 0\nwhile nokori > 0:\n  if A[mise][1] >= nokori: \n    yen += A[mise][0]*nokori\n    break\n  else:\n    yen += A[mise][0]*A[mise][1]\n    nokori -= A[mise][1]\n    mise += 1\nprint(yen)\n  ```\n "
    },
    {
        "user_id": "u385244248",
        "problem_id": "p02742",
        "submission1_id": "s537720414",
        "code_content": "\nimport sys\nimport math\nimport string\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nH, W = map(int, input().split())\nprint(H * W \n",
        "origin_generated_text": "\n```\nimport sys\nimport math\nimport string\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nH, W = map(int, input().split())\nprint(H * W \n```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s991372012",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = 10**10\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = 10**10\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for pair in zip(v_adj_list[::2], v_adj_list[1::2]):\n            init_adj_matrix[v_index][pair[0]] = pair[1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)```\n "
    },
    {
        "user_id": "u163791883",
        "problem_id": "p02880",
        "submission1_id": "s025331138",
        "code_content": "\nN = int(input())\nfor i in range(1, 10):\n  for j in range(1, 10):\n    if i * j == N:\n      print('Yes')\n      exit()\nprint('No')",
        "origin_generated_text": "\n```\nN = int(input())\nfor i in range(1, 10):\n  for j in range(1, 10):\n    if i * j == N:\n      print('Yes')\n      exit()\nprint('No')```\n "
    },
    {
        "user_id": "u761062383",
        "problem_id": "p03943",
        "submission1_id": "s833143480",
        "code_content": "\na=[int(i) for i in input().split()]\nif a[0]==sum(a[1:]) or sum(a[:2])==a[2] or a[0]==a[1]==a[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
        "origin_generated_text": "\n```\na=[int(i) for i in input().split()]\nif a[0]==sum(a[1:]) or sum(a[:2])==a[2] or a[0]==a[1]==a[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")```\n "
    },
    {
        "user_id": "u652057333",
        "problem_id": "p03965",
        "submission1_id": "s382699364",
        "code_content": "\ns = str(input().rstrip())\n\ndef battle(s1, s2):\n    l = {'g': {'g': 0, 'p': -1}, 'p': {'g': 1, 'p': 0}}\n    return l[s1][s2]\n\nhist = ['g']\n\ng = 1\np = 0\nans = 0\nif s[0] == 'p':\n    ans = -1\nfor i in range(1, len(s)):\n    cur = 'g'\n    if s[i] == 'g':\n        if p < g:\n            cur = 'p'\n    if cur == 'p':\n        p += 1\n    else:\n        g += 1\n    hist.append(cur)\n    ans += battle(cur, s[i])\n\n\n\nprint(ans)\n",
        "origin_generated_text": "\n```\ns = str(input().rstrip())\n\ndef battle(s1, s2):\n    l = {'g': {'g': 0, 'p': -1}, 'p': {'g': 1, 'p': 0}}\n    return l[s1][s2]\n\nhist = ['g']\n\ng = 1\np = 0\nans = 0\nif s[0] == 'p':\n    ans = -1\nfor i in range(1, len(s)):\n    cur = 'g'\n    if s[i] == 'g':\n        if p < g:\n            cur = 'p'\n    if cur == 'p':\n        p += 1\n    else:\n        g += 1\n    hist.append(cur)\n    ans += battle(cur, s[i])\n\n\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u739721456",
        "problem_id": "p03729",
        "submission1_id": "s834914520",
        "code_content": "\nw=input().split()\nif w[0][-1]==w[1][0] and w[1][-1]==w[2][0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
        "origin_generated_text": "\n```\nw=input().split()\nif w[0][-1]==w[1][0] and w[1][-1]==w[2][0]:\n    print(\"YES\")\nelse:\n    print(\"NO\")```\n "
    },
    {
        "user_id": "u948911484",
        "problem_id": "p02963",
        "submission1_id": "s597776286",
        "code_content": "\ns = int(input())\nl = [0,0,10**9,10**9,0,0]\nl[5] = s\nl[4] = s%(10**9)\nprint(*l)",
        "origin_generated_text": "\n```\ns = int(input())\nl = [0,0,10**9,10**9,0,0]\nl[5] = s\nl[4] = s%(10**9)\nprint(*l)```\n "
    },
    {
        "user_id": "u639989198",
        "problem_id": "p02922",
        "submission1_id": "s293526598",
        "code_content": "\nA, B = map(int, input().split())\na, c = 0, 1\nwhile c < B:\n  c += A * a\n  a += 1\nprint(a)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\na, c = 0, 1\nwhile c < B:\n  c += A * a\n  a += 1\nprint(a)```\n "
    },
    {
        "user_id": "u994935583",
        "problem_id": "p02699",
        "submission1_id": "s723755036",
        "code_content": "\nnums = input().split()\n\nS = int(nums[0])\nW = int(nums[1])\n\n\nif (S <= W ):\n\tprint(\"safe\")\nelse:\n\tprint(\"unsafe\")",
        "origin_generated_text": "\n```\nnums = input().split()\n\nS = int(nums[0])\nW = int(nums[1])\n\n\nif (S <= W ):\n\tprint(\"safe\")\nelse:\n\tprint(\"unsafe\")```\n "
    },
    {
        "user_id": "u225003503",
        "problem_id": "p02699",
        "submission1_id": "s088038760",
        "code_content": "\ns, w = map(int, input().split())\n\nif s <= w:\n  print(\"safe\")\nelse:\n  print(\"unsafe\")",
        "origin_generated_text": "\n```\ns, w = map(int, input().split())\n\nif s <= w:\n  print(\"safe\")\nelse:\n  print(\"unsafe\")```\n "
    },
    {
        "user_id": "u907607057",
        "problem_id": "p02407",
        "submission1_id": "s079454751",
        "code_content": "\nimport sys\n\n\ndef main():\n    sys.stdin.readline()\n    list1 = list(map(str, sys.stdin.readline().split()))\n    list1.sort(reverse=True)\n    print(' '.join(list1))\n    return\n\n\nif __name__ == '__main__':\n    main()\n\n",
        "origin_generated_text": "\n```\nimport sys\n\n\ndef main():\n    sys.stdin.readline()\n    list1 = list(map(str, sys.stdin.readline().split()))\n    list1.sort(reverse=True)\n    print(' '.join(list1))\n    return\n\n\nif __name__ == '__main__':\n    main()\n\n```\n "
    },
    {
        "user_id": "u516554284",
        "problem_id": "p03479",
        "submission1_id": "s183037969",
        "code_content": "\nx,y=map(int,input().split())\nans=0\nwhile x<=y:\n  x=x*2\n  ans+=1\n  \nprint(ans)",
        "origin_generated_text": "\n```\nx,y=map(int,input().split())\nans=0\nwhile x<=y:\n  x=x*2\n  ans+=1\n  \nprint(ans)```\n "
    },
    {
        "user_id": "u227082700",
        "problem_id": "p03039",
        "submission1_id": "s991424053",
        "code_content": "\nn,m,k=map(int,input().split())\nmod=10**9+7\nf=[1]\nfor i in range(2*10**5+7):f+=[f[-1]*(i+1)%mod]\ndef comb(a,b):return f[a]*pow(f[b],mod-2,mod)*pow(f[a-b],mod-2,mod)%mod\nans=0\nfor i in range(1,n):\n  ans+=(i*(n-i)*m**2)*(comb(n+m-2,k-2))%mod\n  ans%=mod\nfor i in range(1,m):\n  ans+=(i*(m-i)*n**2)*(comb(n+m-2,k-2))%mod\n  ans%=mod\nprint(ans)",
        "origin_generated_text": "\n```\nn,m,k=map(int,input().split())\nmod=10**9+7\nf=[1]\nfor i in range(2*10**5+7):f+=[f[-1]*(i+1)%mod]\ndef comb(a,b):return f[a]*pow(f[b],mod-2,mod)*pow(f[a-b],mod-2,mod)%mod\nans=0\nfor i in range(1,n):\n  ans+=(i*(n-i)*m**2)*(comb(n+m-2,k-2))%mod\n  ans%=mod\nfor i in range(1,m):\n  ans+=(i*(m-i)*n**2)*(comb(n+m-2,k-2))%mod\n  ans%=mod\nprint(ans)```\n "
    },
    {
        "user_id": "u109879985",
        "problem_id": "p02633",
        "submission1_id": "s632306673",
        "code_content": "\nfrom fractions import gcd\nx=int(input())\ng=gcd(360,x)\nprint(int(360/g))",
        "origin_generated_text": "\n```\nfrom fractions import gcd\nx=int(input())\ng=gcd(360,x)\nprint(int(360/g))```\n "
    },
    {
        "user_id": "u391675400",
        "problem_id": "p02742",
        "submission1_id": "s344422748",
        "code_content": "\nimport math\nh,w = map(int,input().split())\n\nif h == 1 and w ==1:\n    print(\"1\")\nelif h % 2 == 0 and w % 2 == 0:\n    print(math.floor(h*w/2))\nelif h % 2 == 1 and w % 2 == 1:\n    print(math.floor(h*w/2)+1)\nelse:\n    print(math.floor(h*w/2)+1)",
        "origin_generated_text": "\n```\nimport math\nh,w = map(int,input().split())\n\nif h == 1 and w ==1:\n    print(\"1\")\nelif h % 2 == 0 and w % 2 == 0:\n    print(math.floor(h*w/2))\nelif h % 2 == 1 and w % 2 == 1:\n    print(math.floor(h*w/2)+1)\nelse:\n    print(math.floor(h*w/2)+1)```\n "
    },
    {
        "user_id": "u228223940",
        "problem_id": "p03626",
        "submission1_id": "s048587319",
        "code_content": "\nn = int(input())\ns1 = input()\ns2 = input()\n\nmod = 10**9+7\n\nif s1[0] == s2[0]:\n    ans = 3\n    bfr = 'T'\n    idx = 1\nelse:\n    ans = 6\n    bfr = 'Y'\n    idx = 2\n\nif n == 1:\n    print(ans)\n    exit()\n\nwhile idx <= n-1:\n    if s1[idx] == s2[idx]:\n        if bfr == 'T':\n            ans *= 2\n            ans %= mod\n        idx += 1\n        bfr = 'T'\n    else:\n        idx += 2\n        bfr = 'Y'\n        \nprint(ans%mod)",
        "origin_generated_text": "\n```\nn = int(input())\ns1 = input()\ns2 = input()\n\nmod = 10**9+7\n\nif s1[0] == s2[0]:\n    ans = 3\n    bfr = 'T'\n    idx = 1\nelse:\n    ans = 6\n    bfr = 'Y'\n    idx = 2\n\nif n == 1:\n    print(ans)\n    exit()\n\nwhile idx <= n-1:\n    if s1[idx] == s2[idx]:\n        if bfr == 'T':\n            ans *= 2\n            ans %= mod\n        idx += 1\n        bfr = 'T'\n    else:\n        idx += 2\n        bfr = 'Y'\n        \nprint(ans%mod)```\n "
    },
    {
        "user_id": "u682730715",
        "problem_id": "p03103",
        "submission1_id": "s177122638",
        "code_content": "\n\nimport sys\n\nimport heapq\nimport re\nimport bisect\nimport random\nimport math\nimport itertools\nfrom collections import defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import *\n\na, b = map(int, input().split())\nd = sorted(list(map(lambda x: list(map(int, x.split())), [input() for _ in range(a)])))\ncount = 0\nfor i in range(a):\n    if b <= d[i][1]:\n        count += d[i][1] * d[i][0]\n        break\n    else:\n        count += d[i][1] * d[i][0]\n        b -= d[i][1]\nprint(count)",
        "origin_generated_text": "\n```\n\nimport sys\n\nimport heapq\nimport re\nimport bisect\nimport random\nimport math\nimport itertools\nfrom collections import defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import *\n\na, b = map(int, input().split())\nd = sorted(list(map(lambda x: list(map(int, x.split())), [input() for _ in range(a)])))\ncount = 0\nfor i in range(a):\n    if b <= d[i][1]:\n        count += d[i][1] * d[i][0]\n        break\n    else:\n        count += d[i][1] * d[i][0]\n        b -= d[i][1]\nprint(count)```\n "
    },
    {
        "user_id": "u540799318",
        "problem_id": "p02959",
        "submission1_id": "s627653052",
        "code_content": "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\n\nfor i in range(n):\n    ans += min(a[i], b[i])\n    a[i+1] -= min(a[i], b[i])\n    ans += b[i] - min(a[i], b[i])\n\nprint(ans)",
        "origin_generated_text": "\n```\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\n\nfor i in range(n):\n    ans += min(a[i], b[i])\n    a[i+1] -= min(a[i], b[i])\n    ans += b[i] - min(a[i], b[i])\n\nprint(ans)```\n "
    },
    {
        "user_id": "u231530807",
        "problem_id": "p03036",
        "submission1_id": "s332147599",
        "code_content": "\nx=input()\nxx=x.split()\nr=int(xx[0])\nx2=int(xx[1])\nD=int(xx[2])\ny=[0]*10\nfor i in range(10):\n  y[i]+=r*x2-D\n  print(y[i])\n  x2=y[i]",
        "origin_generated_text": "\n```\nx=input()\nxx=x.split()\nr=int(xx[0])\nx2=int(xx[1])\nD=int(xx[2])\ny=[0]*10\nfor i in range(10):\n  y[i]+=r*x2-D\n  print(y[i])\n  x2=y[i]```\n "
    },
    {
        "user_id": "u252828980",
        "problem_id": "p03023",
        "submission1_id": "s782807743",
        "code_content": "\nprint((int(input())-3)*180)",
        "origin_generated_text": "\n```\nprint((int(input())-3)*180)```\n "
    },
    {
        "user_id": "u190167135",
        "problem_id": "p02959",
        "submission1_id": "s960127924",
        "code_content": "\nN=int(input())\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\nans=min(A[0],B[0])\nB[0]-=ans\nfor i in range(N-1):\n    score=min(A[i+1],B[i]+B[i+1])\n    ans+=score\n    B[i+1]-=min(score,B[i])\nprint(ans+min(B[N-1],A[N]))",
        "origin_generated_text": "\n```\nN=int(input())\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\nans=min(A[0],B[0])\nB[0]-=ans\nfor i in range(N-1):\n    score=min(A[i+1],B[i]+B[i+1])\n    ans+=score\n    B[i+1]-=min(score,B[i])\nprint(ans+min(B[N-1],A[N]))```\n "
    },
    {
        "user_id": "u766684188",
        "problem_id": "p02746",
        "submission1_id": "s053182443",
        "code_content": "\nimport sys\ninput=sys.stdin.readline\n\ndef dist(a,b,c,d,P3):\n    for p in P3:\n        da,ma=divmod(a,p)\n        dc,mc=divmod(c,p)\n        if da!=dc:\n            return abs(a-c)+abs(b-d)\n        if da!=1:\n            a,c=ma,mc\n            continue\n        db,mb=divmod(b,p)\n        dd,md=divmod(d,p)\n        if db!=dd:\n            return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n        return min(ma+mc+2,2*p-(ma+mc))+abs(mb+md+2)\n\ndef main():\n    q=int(input())\n    P3=[pow(3,i) for i in reversed(range(30))]\n    for _ in range(q):\n        a,b,c,d=map(lambda x: int(x)-1,input().split())\n        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n\nif __name__=='__main__':\n    main()",
        "origin_generated_text": "\n```\nimport sys\ninput=sys.stdin.readline\n\ndef dist(a,b,c,d,P3):\n    for p in P3:\n        da,ma=divmod(a,p)\n        dc,mc=divmod(c,p)\n        if da!=dc:\n            return abs(a-c)+abs(b-d)\n        if da!=1:\n            a,c=ma,mc\n            continue\n        db,mb=divmod(b,p)\n        dd,md=divmod(d,p)\n        if db!=dd:\n            return min(ma+mc+2,2*p-(ma+mc))+abs(b-d)\n        return min(ma+mc+2,2*p-(ma+mc))+abs(mb+md+2)\n\ndef main():\n    q=int(input())\n    P3=[pow(3,i) for i in reversed(range(30))]\n    for _ in range(q):\n        a,b,c,d=map(lambda x: int(x)-1,input().split())\n        print(max(dist(a,b,c,d,P3),dist(b,a,d,c,P3)))\n\nif __name__=='__main__':\n    main()```\n "
    },
    {
        "user_id": "u777028980",
        "problem_id": "p03200",
        "submission1_id": "s400602953",
        "code_content": "\nhoge=input()\nans=0\ncount=0\nwhite=0\nfor i in hoge:\n  \n  if(i==\"W\"):\n    ans+=count - white\n    white+=1\n  count+=1\n  \nprint(ans)",
        "origin_generated_text": "\n```\nhoge=input()\nans=0\ncount=0\nwhite=0\nfor i in hoge:\n  \n  if(i==\"W\"):\n    ans+=count - white\n    white+=1\n  count+=1\n  \nprint(ans)```\n "
    },
    {
        "user_id": "u595952233",
        "problem_id": "p03326",
        "submission1_id": "s917776374",
        "code_content": "\nimport sys\ninput = sys.stdin.readline\nfrom itertools import product\nn, m = map(int, input().split())\nxyz = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor p in product([1, -1], repeat=3):\n    dp = [0] * (m+2)\n    for i in range(n+1):\n        x, y, z = [s*t for s,t in zip(p, xyz[i])]\n        for j in list(range(m+1))[::-1]:\n            dp[j+1] = max(dp[j+1], dp[j]+x+y+z)\n    ans = max(ans, dp[m+1])\nprint(ans)",
        "origin_generated_text": "\n```\nimport sys\ninput = sys.stdin.readline\nfrom itertools import product\nn, m = map(int, input().split())\nxyz = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor p in product([1, -1], repeat=3):\n    dp = [0] * (m+2)\n    for i in range(n+1):\n        x, y, z = [s*t for s,t in zip(p, xyz[i])]\n        for j in list(range(m+1))[::-1]:\n            dp[j+1] = max(dp[j+1], dp[j]+x+y+z)\n    ans = max(ans, dp[m+1])\nprint(ans)```\n "
    },
    {
        "user_id": "u587742016",
        "problem_id": "p03206",
        "submission1_id": "s039694479",
        "code_content": "\ntarget = int(input())\ncommon_msg = \"Christmas\"\nadditional_msg = \"Eve\"\nprint(common_msg + \" \".join([\"Eve\" for i in range(25 - target)]).strip())\n",
        "origin_generated_text": "\n```\ntarget = int(input())\ncommon_msg = \"Christmas\"\nadditional_msg = \"Eve\"\nprint(common_msg + \" \".join([\"Eve\" for i in range(25 - target)]).strip())\n```\n "
    },
    {
        "user_id": "u329455846",
        "problem_id": "p03041",
        "submission1_id": "s976906064",
        "code_content": "\nN , K = map(int,input().split())\nstr_t = list(input())\nans =''\nfor i in range(len(str_t)):\n    if i == K:\n        ans += str_t[i].lower()\n    else:\n        ans += str_t[i].upper()\nprint(ans)",
        "origin_generated_text": "\n```\nN , K = map(int,input().split())\nstr_t = list(input())\nans =''\nfor i in range(len(str_t)):\n    if i == K:\n        ans += str_t[i].lower()\n    else:\n        ans += str_t[i].upper()\nprint(ans)```\n "
    },
    {
        "user_id": "u584174687",
        "problem_id": "p03972",
        "submission1_id": "s390459019",
        "code_content": "\nfrom collections import Counter, defaultdict\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\n\nfrom math import factorial\nimport heapq, bisect\nimport math\nimport itertools\n\n\nimport queue\nfrom collections import deque\n\n\n\n\ndef main():\n    high, width = map(int, input().split())\n    cost_w = [int(input()) for i in range(width)]\n    cost_h = [int(input()) for i in range(high)]\n\n    cost_w.sort()\n    cost_h.sort()\n    check_high, check_width = 0, 0\n    width_ind = 0\n    ans = 0\n    for i in range(high):\n\n        now_high = cost_h[i]\n        while width_ind < width:\n            if now_high < cost_w[width_ind]:\n                break\n            ans += (high + 1 - check_high) * cost_w[width_ind]\n            check_width += 1\n            width_ind += 1\n\n        ans += (width + 1 - check_width) * cost_h[i]\n        check_high += 1\n\n    ans += sum(cost_w[width_ind:])\n\n    print(ans)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n\n",
        "origin_generated_text": "\n```\nfrom collections import Counter, defaultdict\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\n\nfrom math import factorial\nimport heapq, bisect\nimport math\nimport itertools\n\n\nimport queue\nfrom collections import deque\n\n\n\n\ndef main():\n    high, width = map(int, input().split())\n    cost_w = [int(input()) for i in range(width)]\n    cost_h = [int(input()) for i in range(high)]\n\n    cost_w.sort()\n    cost_h.sort()\n    check_high, check_width = 0, 0\n    width_ind = 0\n    ans = 0\n    for i in range(high):\n\n        now_high = cost_h[i]\n        while width_ind < width:\n            if now_high < cost_w[width_ind]:\n                break\n            ans += (high + 1 - check_high) * cost_w[width_ind]\n            check_width += 1\n            width_ind += 1\n\n        ans += (width + 1 - check_width) * cost_h[i]\n        check_high += 1\n\n    ans += sum(cost_w[width_ind:])\n\n    print(ans)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n\n```\n "
    },
    {
        "user_id": "u531599639",
        "problem_id": "p02954",
        "submission1_id": "s779665395",
        "code_content": "\ns = input()\nn = len(s)\ntemp = s[0]\nans = [0]*n\nsec = [temp]\nrlind = []\nfor i in range(1,n):\n  if temp=='L' and s[i]=='R':\n    sec = []\n  elif temp=='R' and s[i]=='L':\n    rlind.append(i)\n  sec.append(s[i])\n  temp = s[i]\n\nfor i in range(len(rlind)):\n  ind = rlind[i]\n  m = len(sec)\n  if m%2==0:\n    p = m\n    ans[ind]=p\n    ans[ind-1]=p\n  else:\n    p = sec.count('R')\n    q = max(p,m-p)\n    if (q-1)%2==0:\n      ans[ind]=m-p\n      ans[ind-1]=p\n    else:\n      ans[ind]=p\n      ans[ind-1]=m-p\nprint(*ans)",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\ntemp = s[0]\nans = [0]*n\nsec = [temp]\nrlind = []\nfor i in range(1,n):\n  if temp=='L' and s[i]=='R':\n    sec = []\n  elif temp=='R' and s[i]=='L':\n    rlind.append(i)\n  sec.append(s[i])\n  temp = s[i]\n\nfor i in range(len(rlind)):\n  ind = rlind[i]\n  m = len(sec)\n  if m%2==0:\n    p = m\n    ans[ind]=p\n    ans[ind-1]=p\n  else:\n    p = sec.count('R')\n    q = max(p,m-p)\n    if (q-1)%2==0:\n      ans[ind]=m-p\n      ans[ind-1]=p\n    else:\n      ans[ind]=p\n      ans[ind-1]=m-p\nprint(*ans)```\n "
    },
    {
        "user_id": "u215335591",
        "problem_id": "p02407",
        "submission1_id": "s814987890",
        "code_content": "\nn = int(input())\nx = [int(i) for i in input().split()]\nx.reverse()\nfor i in range(n-1):\n    print(x[i],\" \",sep=\"\",end=\"\")\nprint(x[n-1])\n\n",
        "origin_generated_text": "\n```\nn = int(input())\nx = [int(i) for i in input().split()]\nx.reverse()\nfor i in range(n-1):\n    print(x[i],\" \",sep=\"\",end=\"\")\nprint(x[n-1])\n\n```\n "
    },
    {
        "user_id": "u941753895",
        "problem_id": "p03959",
        "submission1_id": "s259616694",
        "code_content": "\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\n\ndef LI(): return list(map(int,input().split()))\ndef I(): return int(input())\ndef LS(): return input().split()\ndef S(): return input()\n\ndef main():\n  n=I()\n\n  a=LI()\n  b=LI()\n\n  if n==1 and a[0]!=b[0]:\n    return 0\n\n  l1=[]\n  l2=[]\n\n  amx=a[0]\n  l1.append(1)\n  for i in range(1,len(a)):\n    x=a[i]\n    if amx<x:\n      \n      if x>b[i]:\n        print(0)\n        exit()\n\n      l1.append(1)\n      amx=x\n    elif amx==x:\n      l1.append(amx)\n    else:\n      print(0)\n      exit()\n\n  b.reverse()\n  l1.reverse()\n\n  bmx=b[0]\n  l2.append(1)\n  for i in range(1,len(b)):\n    x=b[i]\n    if bmx<x:\n      \n      if x>a[n-i-1]:\n        print(0)\n        exit()\n\n      l2.append(1)\n      bmx=x\n    elif bmx==x:\n      l2.append(min(bmx,l1[i]))\n    else:\n      print(0)\n      exit()\n\n  ans=1\n  for x in l2:\n    ans*=x\n    ans%=mod\n\n  return ans\n\nprint(main())\n",
        "origin_generated_text": "\n```\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\n\ndef LI(): return list(map(int,input().split()))\ndef I(): return int(input())\ndef LS(): return input().split()\ndef S(): return input()\n\ndef main():\n  n=I()\n\n  a=LI()\n  b=LI()\n\n  if n==1 and a[0]!=b[0]:\n    return 0\n\n  l1=[]\n  l2=[]\n\n  amx=a[0]\n  l1.append(1)\n  for i in range(1,len(a)):\n    x=a[i]\n    if amx<x:\n      \n      if x>b[i]:\n        print(0)\n        exit()\n\n      l1.append(1)\n      amx=x\n    elif amx==x:\n      l1.append(amx)\n    else:\n      print(0)\n      exit()\n\n  b.reverse()\n  l1.reverse()\n\n  bmx=b[0]\n  l2.append(1)\n  for i in range(1,len(b)):\n    x=b[i]\n    if bmx<x:\n      \n      if x>a[n-i-1]:\n        print(0)\n        exit()\n\n      l2.append(1)\n      bmx=x\n    elif bmx==x:\n      l2.append(min(bmx,l1[i]))\n    else:\n      print(0)\n      exit()\n\n  ans=1\n  for x in l2:\n    ans*=x\n    ans%=mod\n\n  return ans\n\nprint(main())\n```\n "
    },
    {
        "user_id": "u539789745",
        "problem_id": "p02407",
        "submission1_id": "s148733919",
        "code_content": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*a[::-1], sep=\" \")\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*a[::-1], sep=\" \")\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u514894322",
        "problem_id": "p03041",
        "submission1_id": "s789178306",
        "code_content": "\nn,k = map(int,input().split())\ns = str(input())\nans = ''\nfor i in range(len(s)):\n  if i+1 == k:\n    ans = ans + s[i].lower()\n  else:\n    ans = ans + s[i]\nprint (ans)",
        "origin_generated_text": "\n```\nn,k = map(int,input().split())\ns = str(input())\nans = ''\nfor i in range(len(s)):\n  if i+1 == k:\n    ans = ans + s[i].lower()\n  else:\n    ans = ans + s[i]\nprint (ans)```\n "
    },
    {
        "user_id": "u150641538",
        "problem_id": "p03303",
        "submission1_id": "s937616305",
        "code_content": "\ns = input()\nw = int(input())\n\nlength = len(s)\n\noutput = s[0]\ni = w\n\nwhile(i<length):\n    output += s[i]\n    i += w\n\nprint(output)",
        "origin_generated_text": "\n```\ns = input()\nw = int(input())\n\nlength = len(s)\n\noutput = s[0]\ni = w\n\nwhile(i<length):\n    output += s[i]\n    i += w\n\nprint(output)```\n "
    },
    {
        "user_id": "u346395915",
        "problem_id": "p03303",
        "submission1_id": "s702043102",
        "code_content": "\ns = list(input())\nw = int(input())\nans =[]\nfor i in range(len(s)):\n    if i%w == 0:\n        ans.append(s[i])\n        \nprint(\"\".join(ans))",
        "origin_generated_text": "\n```\ns = list(input())\nw = int(input())\nans =[]\nfor i in range(len(s)):\n    if i%w == 0:\n        ans.append(s[i])\n        \nprint(\"\".join(ans))```\n "
    },
    {
        "user_id": "u250366438",
        "problem_id": "p02553",
        "submission1_id": "s237525316",
        "code_content": "\nif __name__ == \"__main__\":\n    a, b, c, d = map(int, input().split())\n    x_list = [a, b]\n    y_list = [c, d]\n    ans = 0\n\n    if x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0:\n        ans = max(x_list) * min(y_list)\n    elif (x_list[0] >= 0 and x_list[1] >= 0 and y_list[0] <= 0 and y_list[1] <= 0) or (x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0):\n        ans = max(y_list) * min(x_list)\n    elif (x_list[0] <= 0 or x_list[1] <= 0) and (y_list[0] <= 0 or y_list[1] <= 0):\n        ans = min(x_list) * min(y_list)\n    else:\n        ans = max(x_list) * max(y_list)\n\n    print(ans)",
        "origin_generated_text": "\n```\nif __name__ == \"__main__\":\n    a, b, c, d = map(int, input().split())\n    x_list = [a, b]\n    y_list = [c, d]\n    ans = 0\n\n    if x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0:\n        ans = max(x_list) * min(y_list)\n    elif (x_list[0] >= 0 and x_list[1] >= 0 and y_list[0] <= 0 and y_list[1] <= 0) or (x_list[0] <= 0 and x_list[1] <= 0 and y_list[0] >= 0 and y_list[1] >= 0):\n        ans = max(y_list) * min(x_list)\n    elif (x_list[0] <= 0 or x_list[1] <= 0) and (y_list[0] <= 0 or y_list[1] <= 0):\n        ans = min(x_list) * min(y_list)\n    else:\n        ans = max(x_list) * max(y_list)\n\n    print(ans)```\n "
    },
    {
        "user_id": "u272557899",
        "problem_id": "p03477",
        "submission1_id": "s347971644",
        "code_content": "\na,b,c,d = map(int, input().split())\ns = a+b\nt = c+d\n\nif s>t:\n  print(\"Left\")\nelif s<t:\n  print(\"Right\")\nelse:\n  print(\"Balanced\")",
        "origin_generated_text": "\n```\na,b,c,d = map(int, input().split())\ns = a+b\nt = c+d\n\nif s>t:\n  print(\"Left\")\nelif s<t:\n  print(\"Right\")\nelse:\n  print(\"Balanced\")```\n "
    },
    {
        "user_id": "u022407960",
        "problem_id": "p02243",
        "submission1_id": "s239420183",
        "code_content": "\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = 10 ** 10\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for j in range(0, v_adj_length, 2):\n            init_adj_matrix[v_index][v_adj_list[j]] = v_adj_list[j + 1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)",
        "origin_generated_text": "\n```\n\n\n\n\n\nimport sys\nimport heapq as hp\n\nWHITE, GRAY, BLACK = 0, 1, 2\nD_MAX = 10 ** 10\n\n\ndef generate_adj_matrix(v_info):\n    for each in v_info:\n        v_index, v_adj_length, *v_adj_list = map(int, each)\n        \n        for j in range(0, v_adj_length, 2):\n            init_adj_matrix[v_index][v_adj_list[j]] = v_adj_list[j + 1]\n\n    return init_adj_matrix\n\n\ndef dijkstra_path():\n    \n    path_list[init_vertex_index] = 0\n    path_heap = []\n    \n    hp.heappush(path_heap, (0, init_vertex_index))\n    while len(path_heap) >= 1:\n        current_vertex_index = hp.heappop(path_heap)[1]\n\n        color[current_vertex_index] = BLACK\n\n        current_vertex_index_info = adj_table[current_vertex_index]\n        for adj_vertex_index in current_vertex_index_info.keys():\n            current_adj_weight = current_vertex_index_info.get(adj_vertex_index)\n            if current_adj_weight is None:\n                continue\n            elif color[adj_vertex_index] is not BLACK:\n                \n                alt_path = path_list[current_vertex_index] + current_adj_weight\n                if alt_path < path_list[adj_vertex_index]:\n                    \n                    path_list[adj_vertex_index] = alt_path\n                    \n                    hp.heappush(path_heap, (alt_path, adj_vertex_index))\n                    parent_list[adj_vertex_index] = current_vertex_index\n                    color[adj_vertex_index] = GRAY\n\n    return path_list\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    vertices_num = int(_input[0])\n    init_vertices_table = map(lambda x: x.split(), _input[1:])\n    \n\n    parent_list, path_list = [-1] * vertices_num, [D_MAX] * vertices_num\n    color = [WHITE] * vertices_num\n    init_adj_matrix = tuple(dict() for _ in range(vertices_num))\n    init_vertex_index = 0\n\n    adj_table = generate_adj_matrix(init_vertices_table)\n    ans = dijkstra_path()\n    for i, v in enumerate(ans):\n        print(i, v)```\n "
    },
    {
        "user_id": "u172111219",
        "problem_id": "p03760",
        "submission1_id": "s301904439",
        "code_content": "\no = list(str(input()))\ne = list(str(input()))\n\nfor i,j in enumerate(e):\n    o.insert(1+2*i,j)\nprint(''.join(o))",
        "origin_generated_text": "\n```\no = list(str(input()))\ne = list(str(input()))\n\nfor i,j in enumerate(e):\n    o.insert(1+2*i,j)\nprint(''.join(o))```\n "
    },
    {
        "user_id": "u059210959",
        "problem_id": "p03625",
        "submission1_id": "s611443599",
        "code_content": "\n\nimport copy\nimport random\nimport bisect \nimport math\n\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nA.sort()\nlen_dic = {}\nfor a in A:\n    if a in len_dic.keys():\n        len_dic[a] += 1\n\n    else:\n        len_dic[a] = 1\n\nans = [0,0]\nfor k, v in sorted(len_dic.items(),key=lambda x:-x[0]):\n    if v >= 4 and ans[0] == 0:\n        ans = [k,k]\n    elif v >= 2:\n        if ans[0]==0:\n            ans[0] = k\n        elif ans[1] == 0:\n            ans[1] = k\n\nprint(ans[0]*ans[1])\n",
        "origin_generated_text": "\n```\n\nimport copy\nimport random\nimport bisect \nimport math\n\n\nN = int(input())\nA = [int(i) for i in input().split()]\n\nA.sort()\nlen_dic = {}\nfor a in A:\n    if a in len_dic.keys():\n        len_dic[a] += 1\n\n    else:\n        len_dic[a] = 1\n\nans = [0,0]\nfor k, v in sorted(len_dic.items(),key=lambda x:-x[0]):\n    if v >= 4 and ans[0] == 0:\n        ans = [k,k]\n    elif v >= 2:\n        if ans[0]==0:\n            ans[0] = k\n        elif ans[1] == 0:\n            ans[1] = k\n\nprint(ans[0]*ans[1])\n```\n "
    },
    {
        "user_id": "u562015767",
        "problem_id": "p02718",
        "submission1_id": "s039407328",
        "code_content": "\nimport math\nN,M = map(int,input().split())\nl = [int(i) for i in input().split()]\nl.sort(reverse = True)\nl_sum = sum(l)\nd = math.ceil(4*M / l_sum)\ncnt = 0\n \nfor i in range(N):\n    if l[i] >= d:\n        cnt += 1\n    else:\n        break\n \nif cnt >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")    ",
        "origin_generated_text": "\n```\nimport math\nN,M = map(int,input().split())\nl = [int(i) for i in input().split()]\nl.sort(reverse = True)\nl_sum = sum(l)\nd = math.ceil(4*M / l_sum)\ncnt = 0\n \nfor i in range(N):\n    if l[i] >= d:\n        cnt += 1\n    else:\n        break\n \nif cnt >= M:\n    print(\"Yes\")\nelse:\n    print(\"No\")    ```\n "
    },
    {
        "user_id": "u843318346",
        "problem_id": "p03206",
        "submission1_id": "s510464175",
        "code_content": "\nn = int(input())\nnokori = (n-25)\neve = ' Eve'*nokori\nprint('Christmas'+eve)",
        "origin_generated_text": "\n```\nn = int(input())\nnokori = (n-25)\neve = ' Eve'*nokori\nprint('Christmas'+eve)```\n "
    },
    {
        "user_id": "u388370899",
        "problem_id": "p02742",
        "submission1_id": "s322703127",
        "code_content": "\n\n\n\n\ndef main():\n    h, w = map(int, input().split())\n    ans = (h * w) \n    if h % 2 == 1 and w % 2 == 1:\n        ans = ans - 1\n    print(\"%d\" % ans)\n\n\nif __name__ == '__main__':\n    main()\n",
        "origin_generated_text": "\n```\n\n\n\n\ndef main():\n    h, w = map(int, input().split())\n    ans = (h * w) \n    if h % 2 == 1 and w % 2 == 1:\n        ans = ans - 1\n    print(\"%d\" % ans)\n\n\nif __name__ == '__main__':\n    main()\n```\n "
    },
    {
        "user_id": "u581403769",
        "problem_id": "p03200",
        "submission1_id": "s074874248",
        "code_content": "\ns = list(input())\n\ncount = 0\nwhite = 0\nfor i in range(len(s)):\n    if s[i] == 'W':\n        white += 1\n    else:\n        count += 1\n\nprint(count - white)",
        "origin_generated_text": "\n```\ns = list(input())\n\ncount = 0\nwhite = 0\nfor i in range(len(s)):\n    if s[i] == 'W':\n        white += 1\n    else:\n        count += 1\n\nprint(count - white)```\n "
    },
    {
        "user_id": "u827202523",
        "problem_id": "p03965",
        "submission1_id": "s949440838",
        "code_content": "\nhands = input()\nans = 0\nfor i, h in enumerate(hands):\n  if i % 2 == 0:\n    if h == \"p\":\n      ans -= 1\n  else:\n    if h == \"g\":\n      ans += 1\n      \nprint(ans)\n   ",
        "origin_generated_text": "\n```\nhands = input()\nans = 0\nfor i, h in enumerate(hands):\n  if i % 2 == 0:\n    if h == \"p\":\n      ans -= 1\n  else:\n    if h == \"g\":\n      ans += 1\n      \nprint(ans)\n   ```\n "
    },
    {
        "user_id": "u372144784",
        "problem_id": "p03480",
        "submission1_id": "s474066148",
        "code_content": "\ns = input()\nn = len(s)\nk = 10**9\nif not \"1\" in s:\n    print(n)\nelif not \"0\" in s:\n    print(0)\nelse:\n    for i in range(n-1):\n        if s[i] != s[i+1]:\n            k = min(k,max(i+1,n-(i+1)))\n    if k > n:\n        print(n)\n    else:\n        print(k)\n",
        "origin_generated_text": "\n```\ns = input()\nn = len(s)\nk = 10**9\nif not \"1\" in s:\n    print(n)\nelif not \"0\" in s:\n    print(0)\nelse:\n    for i in range(n-1):\n        if s[i] != s[i+1]:\n            k = min(k,max(i+1,n-(i+1)))\n    if k > n:\n        print(n)\n    else:\n        print(k)\n```\n "
    },
    {
        "user_id": "u418527037",
        "problem_id": "p02917",
        "submission1_id": "s118689854",
        "code_content": "\nN = int(input())\nB = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N-2):\n    ans += max(B[i],B[i+1])\n\nif N == 1:\n    ans += B[0]\nelse:\n    ans += B[-1]\n\nprint(ans)",
        "origin_generated_text": "\n```\nN = int(input())\nB = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N-2):\n    ans += max(B[i],B[i+1])\n\nif N == 1:\n    ans += B[0]\nelse:\n    ans += B[-1]\n\nprint(ans)```\n "
    },
    {
        "user_id": "u126478680",
        "problem_id": "p02297",
        "submission1_id": "s015429141",
        "code_content": "\nimport math\n\nclass Vector():\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def inner_product(self, vec):\n        return self.x*vec.x + self.y*vec.y\n\n    def outer_product(self, vec):\n        return self.x*vec.y - self.y*vec.x\n\n    def norm(self):\n        return math.sqrt(self.x**2 + self.y**2)\n\nn = int(input())\npoints = []\nfor i in range(n):\n    x, y = list(map(int, input().split(' ')))\n    points.append(Vector(x, y))\npoints.append(points[0])\n\narea = 0\nfor i in range(n):\n    a, b = points[i], points[i+1]\n    if (a.x == 0 and a.y == 0) or (b.x == 0 and b.y == 0): continue\n    theta = math.atan2(a.outer_product(b), a.inner_product(b))\n    if theta > 0:\n        area += abs(a.outer_product(b))/2\n    elif theta < 0:\n        area -= abs(a.outer_product(b))/2\nprint(area)\n",
        "origin_generated_text": "\n```\nimport math\n\nclass Vector():\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def inner_product(self, vec):\n        return self.x*vec.x + self.y*vec.y\n\n    def outer_product(self, vec):\n        return self.x*vec.y - self.y*vec.x\n\n    def norm(self):\n        return math.sqrt(self.x**2 + self.y**2)\n\nn = int(input())\npoints = []\nfor i in range(n):\n    x, y = list(map(int, input().split(' ')))\n    points.append(Vector(x, y))\npoints.append(points[0])\n\narea = 0\nfor i in range(n):\n    a, b = points[i], points[i+1]\n    if (a.x == 0 and a.y == 0) or (b.x == 0 and b.y == 0): continue\n    theta = math.atan2(a.outer_product(b), a.inner_product(b))\n    if theta > 0:\n        area += abs(a.outer_product(b))/2\n    elif theta < 0:\n        area -= abs(a.outer_product(b))/2\nprint(area)\n```\n "
    },
    {
        "user_id": "u619458041",
        "problem_id": "p03796",
        "submission1_id": "s237900280",
        "code_content": "\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    MOD = 10**9 + 7\n\n    ans = 1\n    for i in range(1, N+1):\n        ans *= i\n        ans = ans % MOD\n\n    return ans\n\n\nif __name__ == '__main__':\n    print(main())\n",
        "origin_generated_text": "\n```\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    N = int(input())\n    MOD = 10**9 + 7\n\n    ans = 1\n    for i in range(1, N+1):\n        ans *= i\n        ans = ans % MOD\n\n    return ans\n\n\nif __name__ == '__main__':\n    print(main())\n```\n "
    },
    {
        "user_id": "u047931063",
        "problem_id": "p03206",
        "submission1_id": "s807307833",
        "code_content": "\nD = int(input())\n\nA = [\"Christmas\"]\n\nfor i in range(25 - D):\n  A.append(\"Eve\")\n\nS = ' '.join(A)\n\nprint(S)",
        "origin_generated_text": "\n```\nD = int(input())\n\nA = [\"Christmas\"]\n\nfor i in range(25 - D):\n  A.append(\"Eve\")\n\nS = ' '.join(A)\n\nprint(S)```\n "
    },
    {
        "user_id": "u924691798",
        "problem_id": "p02642",
        "submission1_id": "s118485426",
        "code_content": "\nfrom collections import defaultdict\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\ndic = defaultdict(int)\nfor a in A:\n    dic[a] += 1\nans = 0\nfor a in A:\n    if dic[a] == 1:\n        ans += 1\n        idx = 1\n        while a*idx <= 10**6:\n            dic[a*idx] -= 1\n            idx += 1\nprint(ans)\n",
        "origin_generated_text": "\n```\nfrom collections import defaultdict\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\ndic = defaultdict(int)\nfor a in A:\n    dic[a] += 1\nans = 0\nfor a in A:\n    if dic[a] == 1:\n        ans += 1\n        idx = 1\n        while a*idx <= 10**6:\n            dic[a*idx] -= 1\n            idx += 1\nprint(ans)\n```\n "
    },
    {
        "user_id": "u096294926",
        "problem_id": "p02767",
        "submission1_id": "s356318047",
        "code_content": "\nimport math\nN = int(input())\nX = list(map(int,input().split()))\na = sum(X)\nb = 0\nfor i in range(N):\n    b +=(X[i]-a/N)**2\nprint(math.ceil(b/2))",
        "origin_generated_text": "\n```\nimport math\nN = int(input())\nX = list(map(int,input().split()))\na = sum(X)\nb = 0\nfor i in range(N):\n    b +=(X[i]-a/N)**2\nprint(math.ceil(b/2))```\n "
    },
    {
        "user_id": "u223904637",
        "problem_id": "p02919",
        "submission1_id": "s292877265",
        "code_content": "\nimport bisect\n\n\nclass SqrtSet:\n    def __init__(self, block_limit=201):\n        self.key = []\n        self.child = [[]]\n        self.block_limit = block_limit\n\n    def search_lower(self, key):\n        if key is None:\n            return None\n        ret = None\n        i = bisect.bisect_left(self.key, key)\n        if i != 0:\n            ret = self.key[i - 1]\n        block = self.child[i]\n        i = bisect.bisect_left(block, key)\n        if i != 0:\n            ret = block[i - 1]\n        return ret\n        \n    def search_higher(self, key):\n        if key is None:\n            return None\n        ret = None\n        i = bisect.bisect_right(self.key, key)\n        if i != len(self.key):\n            ret = self.key[i]\n        block = self.child[i]\n        i = bisect.bisect_right(block, key)\n        if i != len(block):\n            ret = block[i]\n        return ret\n\n    def insert(self, key):\n        i = bisect.bisect(self.key, key)\n        block = self.child[i]\n        bisect.insort(block, key)\n        if len(block) == self.block_limit:\n            sep = self.block_limit \n            self.key.insert(i, block[sep])\n            self.child.insert(i + 1, block[sep + 1:])\n            self.child[i] = block[:sep]\n                \n    def dump(self):\n        for b in self.child:\n            print(len(b), end=\" \")\n        print(\"\")\n            \n            \ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    idx = [0] * n\n    for i in range(0, n):\n        idx[i] = i\n    idx.sort(key=lambda i: -p[i])\n    t = SqrtSet()\n    t.insert(-10)\n    t.insert(n+10)\n    ans = 0\n    for i in range(n):\n        if i==0:\n            t.insert(idx[i])\n            continue\n        ri = t.search_higher(idx[i])\n        pri = t.search_higher(ri)\n        if pri==None:\n            pri=n\n            ri=n\n        if pri==n+10:\n            pri=n\n        le = t.search_lower(idx[i])\n        ple=t.search_lower(le)\n        if ple==None:\n            if le==-10:\n                le=-1\n                ple=-1\n        if ple==-10:\n            ple=-1\n        \n        ans+=(n-i)*((le-ple)*(ri-idx[i])+(pri-ri)*(idx[i]-le))\n        \n        t.insert(idx[i])\n    print(ans)\n    ",
        "origin_generated_text": "\n```\nimport bisect\n\n\nclass SqrtSet:\n    def __init__(self, block_limit=201):\n        self.key = []\n        self.child = [[]]\n        self.block_limit = block_limit\n\n    def search_lower(self, key):\n        if key is None:\n            return None\n        ret = None\n        i = bisect.bisect_left(self.key, key)\n        if i != 0:\n            ret = self.key[i - 1]\n        block = self.child[i]\n        i = bisect.bisect_left(block, key)\n        if i != 0:\n            ret = block[i - 1]\n        return ret\n        \n    def search_higher(self, key):\n        if key is None:\n            return None\n        ret = None\n        i = bisect.bisect_right(self.key, key)\n        if i != len(self.key):\n            ret = self.key[i]\n        block = self.child[i]\n        i = bisect.bisect_right(block, key)\n        if i != len(block):\n            ret = block[i]\n        return ret\n\n    def insert(self, key):\n        i = bisect.bisect(self.key, key)\n        block = self.child[i]\n        bisect.insort(block, key)\n        if len(block) == self.block_limit:\n            sep = self.block_limit \n            self.key.insert(i, block[sep])\n            self.child.insert(i + 1, block[sep + 1:])\n            self.child[i] = block[:sep]\n                \n    def dump(self):\n        for b in self.child:\n            print(len(b), end=\" \")\n        print(\"\")\n            \n            \ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    idx = [0] * n\n    for i in range(0, n):\n        idx[i] = i\n    idx.sort(key=lambda i: -p[i])\n    t = SqrtSet()\n    t.insert(-10)\n    t.insert(n+10)\n    ans = 0\n    for i in range(n):\n        if i==0:\n            t.insert(idx[i])\n            continue\n        ri = t.search_higher(idx[i])\n        pri = t.search_higher(ri)\n        if pri==None:\n            pri=n\n            ri=n\n        if pri==n+10:\n            pri=n\n        le = t.search_lower(idx[i])\n        ple=t.search_lower(le)\n        if ple==None:\n            if le==-10:\n                le=-1\n                ple=-1\n        if ple==-10:\n            ple=-1\n        \n        ans+=(n-i)*((le-ple)*(ri-idx[i])+(pri-ri)*(idx[i]-le))\n        \n        t.insert(idx[i])\n    print(ans)\n    ```\n "
    },
    {
        "user_id": "u349457050",
        "problem_id": "p02553",
        "submission1_id": "s122916710",
        "code_content": "\nimport sys\nimport math\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef input(): return sys.stdin.readline().strip()\na,b,c,d=get_ints()\nprint(max(a*c,b*d,a*d,b*c))",
        "origin_generated_text": "\n```\nimport sys\nimport math\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef input(): return sys.stdin.readline().strip()\na,b,c,d=get_ints()\nprint(max(a*c,b*d,a*d,b*c))```\n "
    },
    {
        "user_id": "u048867491",
        "problem_id": "p03272",
        "submission1_id": "s226789066",
        "code_content": "\nN, i = list(map(int,input().split()))\nprint(N-i+1)\n",
        "origin_generated_text": "\n```\nN, i = list(map(int,input().split()))\nprint(N-i+1)\n```\n "
    },
    {
        "user_id": "u601018334",
        "problem_id": "p04019",
        "submission1_id": "s162538298",
        "code_content": "\ns = input()\nN = 0\nS = 0\nW = 0\nE = 0\nfor i in range(len(s)) :\n    str = s[i]\n    if str == 'N' :\n        N = 1\n    elif str == 'S':\n        S = 1\n    elif str == 'W':\n        W = 1\n    elif str == 'E':\n        E = 1\nif (N-S)==0 and (W-E)==0 :\n    print('Yes')\nelse:\n    print('No')\n",
        "origin_generated_text": "\n```\ns = input()\nN = 0\nS = 0\nW = 0\nE = 0\nfor i in range(len(s)) :\n    str = s[i]\n    if str == 'N' :\n        N = 1\n    elif str == 'S':\n        S = 1\n    elif str == 'W':\n        W = 1\n    elif str == 'E':\n        E = 1\nif (N-S)==0 and (W-E)==0 :\n    print('Yes')\nelse:\n    print('No')\n```\n "
    },
    {
        "user_id": "u251252118",
        "problem_id": "p03272",
        "submission1_id": "s290663893",
        "code_content": "\nA = [int(i) for i in input().split(\" \")]\nans = A[0] + 1 - A[1]\n\nprint(ans)\n",
        "origin_generated_text": "\n```\nA = [int(i) for i in input().split(\" \")]\nans = A[0] + 1 - A[1]\n\nprint(ans)\n```\n "
    },
    {
        "user_id": "u240249402",
        "problem_id": "p02730",
        "submission1_id": "s449534327",
        "code_content": "\ns=list(input())\nn=len(s)\nzenhan=s[0:int((n-1)/2)]\nkouhan=s[int((n+3)/2-1):n]\nif s==s[::-1] and zenhan==zenhan[::-1] and kouhan==kouhan[::-1]:\n  print('Yes')\nelse:\n  print('No')\n",
        "origin_generated_text": "\n```\ns=list(input())\nn=len(s)\nzenhan=s[0:int((n-1)/2)]\nkouhan=s[int((n+3)/2-1):n]\nif s==s[::-1] and zenhan==zenhan[::-1] and kouhan==kouhan[::-1]:\n  print('Yes')\nelse:\n  print('No')\n```\n "
    },
    {
        "user_id": "u752774573",
        "problem_id": "p03087",
        "submission1_id": "s389382922",
        "code_content": "\nN,Q=list(map(int, input().split()))\nS=input()\n\n\ndp=[0]*(N+1)\nfor i in range(N):\n    if S[i]=='A':\n        dp[i+1]=1\n    elif S[i]=='C':\n        dp[i+1]=dp[i]\n    else:\n        dp[i+1]=dp[i]\n\n\nfor i in range(Q):\n    l,r=list(map(int, input().split()))\n    print(dp[r]-dp[l-1]-int(dp[l-1]*(1-dp[l])))",
        "origin_generated_text": "\n```\nN,Q=list(map(int, input().split()))\nS=input()\n\n\ndp=[0]*(N+1)\nfor i in range(N):\n    if S[i]=='A':\n        dp[i+1]=1\n    elif S[i]=='C':\n        dp[i+1]=dp[i]\n    else:\n        dp[i+1]=dp[i]\n\n\nfor i in range(Q):\n    l,r=list(map(int, input().split()))\n    print(dp[r]-dp[l-1]-int(dp[l-1]*(1-dp[l])))```\n "
    },
    {
        "user_id": "u811841526",
        "problem_id": "p02407",
        "submission1_id": "s984033475",
        "code_content": "\ninput()\nxs = input().split()\nprint(*list(reversed(xs)),sep=\" \")",
        "origin_generated_text": "\n```\ninput()\nxs = input().split()\nprint(*list(reversed(xs)),sep=\" \")```\n "
    },
    {
        "user_id": "u611352758",
        "problem_id": "p02922",
        "submission1_id": "s087084286",
        "code_content": "\na, b = map(int, input().split())\nnum = a\nfor i in range(100):\n    if num*i >= b:\n        break\n    else:\n        num = a\nprint(i)",
        "origin_generated_text": "\n```\na, b = map(int, input().split())\nnum = a\nfor i in range(100):\n    if num*i >= b:\n        break\n    else:\n        num = a\nprint(i)```\n "
    },
    {
        "user_id": "u071680334",
        "problem_id": "p03054",
        "submission1_id": "s425263924",
        "code_content": "\ndef main():\n    H, W, N = map(int, input().split())\n    sr, sc = map(int, input().split())\n    S = input()\n    T = input()\n    L, R, U, D = 0, W, 0, H\n    f = True\n    for i in range(N):\n        if S[i] == \"L\":\n            L += 1\n        elif S[i] == \"R\":\n            R -= 1\n        elif S[i] == \"U\":\n            U += 1\n        else:\n            D -= 1\n        if R < L or D < U:\n            f = False\n        if (S[i] == \"L\" and T[i] == \"R\") or (S[i] == \"R\" and T[i] == \"L\") or (S[i] == \"U\" and T[i] == \"D\") or (S[i] == \"D\" and T[i] == \"U\"):\n            continue\n        if S[i] == \"L\":\n            L += 1\n        elif S[i] == \"R\":\n            R -= 1\n        elif S[i] == \"U\":\n            U += 1\n        else:\n            D -= 1\n        if R < L or D < U:\n            f = False\n        if sr < U or D < sr or sc < L or R < sc:\n            f = False\n    if f:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()",
        "origin_generated_text": "\n```\ndef main():\n    H, W, N = map(int, input().split())\n    sr, sc = map(int, input().split())\n    S = input()\n    T = input()\n    L, R, U, D = 0, W, 0, H\n    f = True\n    for i in range(N):\n        if S[i] == \"L\":\n            L += 1\n        elif S[i] == \"R\":\n            R -= 1\n        elif S[i] == \"U\":\n            U += 1\n        else:\n            D -= 1\n        if R < L or D < U:\n            f = False\n        if (S[i] == \"L\" and T[i] == \"R\") or (S[i] == \"R\" and T[i] == \"L\") or (S[i] == \"U\" and T[i] == \"D\") or (S[i] == \"D\" and T[i] == \"U\"):\n            continue\n        if S[i] == \"L\":\n            L += 1\n        elif S[i] == \"R\":\n            R -= 1\n        elif S[i] == \"U\":\n            U += 1\n        else:\n            D -= 1\n        if R < L or D < U:\n            f = False\n        if sr < U or D < sr or sc < L or R < sc:\n            f = False\n    if f:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()```\n "
    },
    {
        "user_id": "u619785253",
        "problem_id": "p03080",
        "submission1_id": "s280339972",
        "code_content": "\ni = int(input())\nhat = list(input())\n\nB_count = hat.count('B')\nR_count = hat.count('R')\n\nif B_count < R_count:\n  print(\"Yes\")\nelse:\n  print('No')",
        "origin_generated_text": "\n```\ni = int(input())\nhat = list(input())\n\nB_count = hat.count('B')\nR_count = hat.count('R')\n\nif B_count < R_count:\n  print(\"Yes\")\nelse:\n  print('No')```\n "
    },
    {
        "user_id": "u259755734",
        "problem_id": "p02767",
        "submission1_id": "s375941288",
        "code_content": "\nN = int(input())\nX = [int(n) for n in input().split()]\nmin_ans = +float('inf')\n\nfor i in range(100):\n    ans = 0\n    for x in X:\n        ans += (x - i)**2\n    min_ans = min([min_ans, ans])\n\nprint(min_ans)",
        "origin_generated_text": "\n```\nN = int(input())\nX = [int(n) for n in input().split()]\nmin_ans = +float('inf')\n\nfor i in range(100):\n    ans = 0\n    for x in X:\n        ans += (x - i)**2\n    min_ans = min([min_ans, ans])\n\nprint(min_ans)```\n "
    },
    {
        "user_id": "u556589653",
        "problem_id": "p03416",
        "submission1_id": "s037518763",
        "code_content": "\nA,B = map(int,input().split())\nans = 0\nfor i in range(A,B+1):\n    i = str(i)\n    if i[0] == i[4]:\n        if i[1] == i[3]:\n            ans += 1\n        else:\n            ans += 0\n    else:\n        ans += 0\nprint(ans)",
        "origin_generated_text": "\n```\nA,B = map(int,input().split())\nans = 0\nfor i in range(A,B+1):\n    i = str(i)\n    if i[0] == i[4]:\n        if i[1] == i[3]:\n            ans += 1\n        else:\n            ans += 0\n    else:\n        ans += 0\nprint(ans)```\n "
    },
    {
        "user_id": "u862282448",
        "problem_id": "p03479",
        "submission1_id": "s709568393",
        "code_content": "\nX, Y = map(int, input().split())\nans = 0\nwhile X <= Y:\n    Y = (Y \n    ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nX, Y = map(int, input().split())\nans = 0\nwhile X <= Y:\n    Y = (Y \n    ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u681110193",
        "problem_id": "p03036",
        "submission1_id": "s409674302",
        "code_content": "\nr,d,x=map(int,input().split())\n\nfor i in range(10):\n  x= x*r-d\n  print(x)\n\n",
        "origin_generated_text": "\n```\nr,d,x=map(int,input().split())\n\nfor i in range(10):\n  x= x*r-d\n  print(x)\n\n```\n "
    },
    {
        "user_id": "u871596687",
        "problem_id": "p03264",
        "submission1_id": "s035921561",
        "code_content": "\nK = int(input())\n\nif K%2 == 0:\n    print((K\nelse:\n    print((K",
        "origin_generated_text": "\n```\nK = int(input())\n\nif K%2 == 0:\n    print((K\nelse:\n    print((K```\n "
    },
    {
        "user_id": "u460745860",
        "problem_id": "p03998",
        "submission1_id": "s460723019",
        "code_content": "\n\nfrom collections import deque\nS_A = deque(input())\nS_B = deque(input())\nS_C = deque(input())\n\n\nnext_turn = 'a'\n\nwhile True:\n    \n    if len(S_A) == 0 and next_turn == 'a':\n        print(\"A\")\n        exit()\n    elif len(S_B) == 0 and next_turn == 'b':\n        print(\"B\")\n        exit()\n    elif len(S_C) == 0 and next_turn == 'c':\n        print(\"C\")\n        exit()\n    else:\n        if next_turn == 'a':\n            next_turn = 'b'\n        elif next_turn == 'b':\n            next_turn = 'c'\n        else:\n            next_turn = 'a'\n",
        "origin_generated_text": "\n```\n\nfrom collections import deque\nS_A = deque(input())\nS_B = deque(input())\nS_C = deque(input())\n\n\nnext_turn = 'a'\n\nwhile True:\n    \n    if len(S_A) == 0 and next_turn == 'a':\n        print(\"A\")\n        exit()\n    elif len(S_B) == 0 and next_turn == 'b':\n        print(\"B\")\n        exit()\n    elif len(S_C) == 0 and next_turn == 'c':\n        print(\"C\")\n        exit()\n    else:\n        if next_turn == 'a':\n            next_turn = 'b'\n        elif next_turn == 'b':\n            next_turn = 'c'\n        else:\n            next_turn = 'a'\n```\n "
    },
    {
        "user_id": "u958820283",
        "problem_id": "p02660",
        "submission1_id": "s954208260",
        "code_content": "\nn=int(input())\na={}\ntemp=n\nfor i in range(2,int(n**0.5)+1):\n    if temp % i ==0:\n        count=0\n        while temp % (i**(count+1)) ==0:\n            count+=1\n        temp= temp/(i**count)\n        a[i]=count\n\nsum=0\nfor i in a:\n    if a[i]>0:\n        sum+= a[i]\nprint(sum)",
        "origin_generated_text": "\n```\nn=int(input())\na={}\ntemp=n\nfor i in range(2,int(n**0.5)+1):\n    if temp % i ==0:\n        count=0\n        while temp % (i**(count+1)) ==0:\n            count+=1\n        temp= temp/(i**count)\n        a[i]=count\n\nsum=0\nfor i in a:\n    if a[i]>0:\n        sum+= a[i]\nprint(sum)```\n "
    },
    {
        "user_id": "u238084414",
        "problem_id": "p03416",
        "submission1_id": "s380173622",
        "code_content": "\nA, B = map(int, input().split())\nans = 0\nfor i in range(A, B + 1):\n  n = str(i)\n  if n[0] == n[-1] and len(n) > 1:\n    ans += 1\nprint(ans)",
        "origin_generated_text": "\n```\nA, B = map(int, input().split())\nans = 0\nfor i in range(A, B + 1):\n  n = str(i)\n  if n[0] == n[-1] and len(n) > 1:\n    ans += 1\nprint(ans)```\n "
    },
    {
        "user_id": "u057109575",
        "problem_id": "p04017",
        "submission1_id": "s794469614",
        "code_content": "\nimport math\nfrom bisect import bisect_left, bisect_right\n\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\nQ = int(input())\nY = [list(map(int, input().split())) for _ in range(Q)]\n\nLOGN = int(math.log(N) / math.log(2)) + 1\nparent = [[-1] * N for _ in range(LOGN + 1)]\n\n\nfor k in range(LOGN + 1):\n    for i in range(N):\n        if k == 0:\n            parent[k][i] = bisect_right(X, X[i] + L) - 1\n        else:\n            parent[k][i] = parent[k - 1][parent[k - 1][i]]\n\nfor a, b in Y:\n    a -= 1\n    b -= 1\n    if a > b:\n        a, b = b, a\n    i = bisect_left([parent[j][a] for j in range(LOGN + 1) if j > 0], b)\n    print(2 ** i - 1)\n",
        "origin_generated_text": "\n```\nimport math\nfrom bisect import bisect_left, bisect_right\n\nN = int(input())\nX = list(map(int, input().split()))\nL = int(input())\nQ = int(input())\nY = [list(map(int, input().split())) for _ in range(Q)]\n\nLOGN = int(math.log(N) / math.log(2)) + 1\nparent = [[-1] * N for _ in range(LOGN + 1)]\n\n\nfor k in range(LOGN + 1):\n    for i in range(N):\n        if k == 0:\n            parent[k][i] = bisect_right(X, X[i] + L) - 1\n        else:\n            parent[k][i] = parent[k - 1][parent[k - 1][i]]\n\nfor a, b in Y:\n    a -= 1\n    b -= 1\n    if a > b:\n        a, b = b, a\n    i = bisect_left([parent[j][a] for j in range(LOGN + 1) if j > 0], b)\n    print(2 ** i - 1)\n```\n "
    },
    {
        "user_id": "u327668449",
        "problem_id": "p03102",
        "submission1_id": "s701109246",
        "code_content": "\nNMC = list(map(lambda x: int(x), input().split()))\nN = NMC[0]\nM = NMC[1]\nC = NMC[2]\n\nB = list(map(lambda x: int(x), input().split()))\nA = [list(map(lambda x: int(x), input().split())) for i in range(N)]\n\nanswer = 0\n\nfor i in range(len(A)):\n  judge = 0\n  for m in range(len(A[i])):\n    judge += A[i][m] * B[m]\n  if (judge + C > 0):\n    answer += 1\n\nprint(answer)",
        "origin_generated_text": "\n```\nNMC = list(map(lambda x: int(x), input().split()))\nN = NMC[0]\nM = NMC[1]\nC = NMC[2]\n\nB = list(map(lambda x: int(x), input().split()))\nA = [list(map(lambda x: int(x), input().split())) for i in range(N)]\n\nanswer = 0\n\nfor i in range(len(A)):\n  judge = 0\n  for m in range(len(A[i])):\n    judge += A[i][m] * B[m]\n  if (judge + C > 0):\n    answer += 1\n\nprint(answer)```\n "
    }
]